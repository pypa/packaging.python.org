#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# The Python Packaging Guide documentation build configuration file, created by
# sphinx-quickstart on Sun Dec 13 14:07:23 2009.
#
# This file is execfile()d with the current directory set to its containing
# dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.extlinks',
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx_inline_tabs',
    'sphinx_copybutton',
]

# config for copy button
copybutton_prompt_text = r">>> |\.\.\. |\$ |> "
copybutton_prompt_is_regexp = True

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The encoding of source files.
#
# source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# -- Project information -----------------------------------------------------

github_url = 'https://github.com'
github_repo_org = 'pypa'
github_repo_name = 'packaging.python.org'
github_repo_slug = f'{github_repo_org}/{github_repo_name}'
github_repo_url = f'{github_url}/{github_repo_slug}'
github_repo_issues_url = f'{github_url}/{github_repo_slug}/issues'
github_sponsors_url = f'{github_url}/sponsors'

# General information about the project.
project = u'Python Packaging User Guide'
copyright = u'2013â€“2020, PyPA'
author = 'Python Packaging Authority'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = ''
# The full version, including alpha/beta/rc tags.
release = ''

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

locale_dirs = ['../locales']

gettext_auto_build = True  # Build MO files from PO on each build

# making all documents use single text domain
gettext_compact = "messages"

gettext_location = True  # Include location info in the translation files

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#
# today = ''
#
# Else, today_fmt is used as the format for a strftime call.
#
# today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The reST default role (used for this markup: `text`) to use for all
# documents.
# Ref: python-attrs/attrs#571
default_role = 'any'  # makes single backticks autofind targets

# If true, '()' will be appended to :func: etc. cross-reference text.
#
# add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#
# add_module_names = False

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#
# show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
# modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
# keep_warnings = False

# If true, `todo` and `todoList` produce output, else they produce nothing.
# todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'pypa_theme'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
html_theme_options = {
    'collapsiblesidebar': True,
    'externalrefs': True,
    'navigation_depth': 2,
    'issues_url': github_repo_issues_url,
}

# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = ['themes']

# The name for this set of Sphinx documents.
# "<project> v<release> documentation" by default.
#
html_title = 'Python Packaging User Guide'

# A shorter title for the navigation bar.  Default is the same as html_title.
#
# html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#
# html_logo = None

# The name of an image file (relative to this directory) to use as a favicon of
# the docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#
# html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ['_static']

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
#
# html_extra_path = []

# If not None, a 'Last updated on:' timestamp is inserted at every page
# bottom, using the given strftime format.
# The empty string is equivalent to '%b %d, %Y'.
#
html_last_updated_fmt = ''

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#
# html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#

# Custom sidebar templates, filenames relative to this file.
html_sidebars = {
    '**': ['globaltoc.html', 'relations.html'],
    'index': ['globaltoc.html']
}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#
# html_additional_pages = {}

# If false, no module index is generated.
#
# html_domain_indices = True

# If false, no index is generated.
#
# html_use_index = True

# If true, the index is split into individual pages for each letter.
#
# html_split_index = False

# If true, links to the reST sources are added to the pages.
#
# html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#
# html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#
# html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#
# html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
# html_file_suffix = None

# Language to be used for generating the HTML full-text search index.
# Sphinx supports the following languages:
#   'da', 'de', 'en', 'es', 'fi', 'fr', 'h', 'it', 'ja'
#   'nl', 'no', 'pt', 'ro', 'r', 'sv', 'tr', 'zh'
#
# html_search_language = 'en'

# A dictionary with options for the search language support, empty by default.
# 'ja' uses this config value.
# 'zh' user can custom change `jieba` dictionary path.
#
# html_search_options = {'type': 'default'}

# The name of a javascript file (relative to the configuration directory) that
# implements a search results scorer. If empty, the default will be used.
#
# html_search_scorer = 'scorer.js'

# Output file base name for HTML help builder.
htmlhelp_basename = 'pythonpackagingguide-authdoc'

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
     # The paper size ('letterpaper' or 'a4paper').
     #
     # 'papersize': 'letterpaper',

     # The font size ('10pt', '11pt' or '12pt').
     #
     # 'pointsize': '10pt',

     # Additional stuff for the LaTeX preamble.
     #
     # 'preamble': '',

     # Latex figure (float) alignment
     #
     # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'pythonpackagingguide.tex', 'Python Packaging User Guide',
     'Python Packaging Authority', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#
# latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#
# latex_use_parts = False

# If true, show page references after internal links.
#
# latex_show_pagerefs = False

# If true, show URL addresses after external links.
#
# latex_show_urls = False

# Documents to append as an appendix to all manuals.
#
# latex_appendices = []

# It false, will not define \strong, \code,     itleref, \crossref ... but only
# \sphinxstrong, ..., \sphinxtitleref, ... To help avoid clash with user added
# packages.
#
# latex_keep_old_macro_names = True

# If false, no module index is generated.
#
# latex_domain_indices = True


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'pythonpackagingguide', 'Python Packaging User Guide',
     [author], 1)
]

# If true, show URL addresses after external links.
#
# man_show_urls = False


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'pythonpackagingguide', 'Python Packaging User Guide',
     author, 'pythonpackagingguide', 'One line description of project.',
     'Miscellaneous'),
]

# Documents to append as an appendix to all manuals.
#
# texinfo_appendices = []

# If false, no module index is generated.
#
# texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
#
# texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
#
# texinfo_no_detailmenu = False

# -- Options for extlinks extension ---------------------------------------
extlinks = {
    'issue': (f'{github_repo_issues_url}/%s', '#'),  # noqa: WPS323
    'pr': (f'{github_repo_url}/pull/%s', 'PR #'),  # noqa: WPS323
    'commit': (f'{github_repo_url}/commit/%s', ''),  # noqa: WPS323
    'gh': (f'{github_url}/%s', 'GitHub: '),  # noqa: WPS323
    'user': (f'{github_sponsors_url}/%s', '@'),  # noqa: WPS323
}

linkcheck_ignore = [
    "http://localhost:\d+",
    # This is an example that showing to the reader
    "https://test.pypi.org/project/example-package-YOUR-USERNAME-HERE",
    # Ignoring it as it will redirect to login page if reader hasn't logged in.
    "https://pypi.org/manage/*",
    "https://test.pypi.org/manage/*",
]

# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {
    'boltons': ('https://boltons.readthedocs.io/en/latest/', None),
    'build': ('https://pypa-build.readthedocs.io/en/stable/', None),
    'cffi': ('https://cffi.readthedocs.io/en/latest/', None),
    'conda': ('https://conda.io/en/latest/', None),
    'devpi': ('https://devpi.net/docs/devpi/devpi/latest/+doc', None),
    'dh-virtualenv': ('https://dh-virtualenv.readthedocs.io/en/latest/', None),
    'distlib': ('https://distlib.readthedocs.io/en/latest/', None),
    'flexx': ('https://flexx.readthedocs.io/en/latest/', None),
    'nox': ('https://nox.thea.codes/en/latest/', None),
    'openstack': ('https://docs.openstack.org/glance/latest/', None),
    'packaging': ('https://packaging.pypa.io/en/latest/', None),
    'packaging.python.org': ('https://packaging.python.org/', None),
    'pip': ('https://pip.pypa.io/en/latest/', None),
    'pipenv': ('https://pipenv.pypa.io/en/latest/', None),
    'piwheels': ('https://piwheels.readthedocs.io/en/latest/', None),
    'pybind11': ('https://pybind11.readthedocs.io/en/stable/', None),
    'pynsist': ('https://pynsist.readthedocs.io/en/latest/', None),
    'pypa': ('https://www.pypa.io/en/latest/', None),
    'python': ('https://docs.python.org/3', None),
    'python-guide': ('https://docs.python-guide.org', None),
    'python2': ('https://docs.python.org/2', None),
    'setuptools': ('https://setuptools.readthedocs.io/en/latest/', None),
    'spack': ('https://spack.readthedocs.io/en/latest/', None),
    'sphinx': ('https://www.sphinx-doc.org/en/master', None),
    'tox': ('https://tox.readthedocs.io/en/latest/', None),
    'twine': ('https://twine.readthedocs.io/en/stable/', None),
    'virtualenv': ('https://virtualenv.pypa.io/en/stable/', None),
}


# If this is True, todo and todolist produce output, else they produce nothing.
# The default is False.

todo_include_todos = True

nitpicky = True

# NOTE: consider having a separate ignore file
# Ref: https://stackoverflow.com/a/30624034/595220
nitpick_ignore = [
    ('envvar', 'PATH'),
    ('py:func', 'find_packages'),
    ('py:func', 'setup'),
    ('py:func', 'importlib.metadata.entry_points'),  # remove when 3.10 is released
    ('py:class', 'importlib.metadata.EntryPoint'),  # remove when 3.10 is released
    ('py:func', 'setuptools.find_namespace_packages'),
    ('py:func', 'setuptools.find_packages'),
    ('py:func', 'setuptools.setup'),
]
