# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013â€“2020, PyPA
# This file is distributed under the same license as the Python Packaging User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Packaging User Guide \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-29 15:34+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/discussions/install-requires-vs-requirements.rst:5
#: 39e785c929174c7da7c9480b4c191db4
msgid "install_requires vs requirements files"
msgstr ""

#: ../source/discussions/install-requires-vs-requirements.rst:9
#: f9a8cb8ad7514900bf8e6baa731ad3bc
msgid "Contents"
msgstr ""

#: ../source/discussions/install-requires-vs-requirements.rst:12
#: a76e1a0d684741d3bdb8c6d72bca293c
msgid "install_requires"
msgstr ""

#: ../source/discussions/install-requires-vs-requirements.rst:14
#: a18b8dd3b20e42f697f2456d15ce21d8
msgid "``install_requires`` is a :ref:`setuptools` :file:`setup.py` keyword that should be used to specify what a project **minimally** needs to run correctly. When the project is installed by :ref:`pip`, this is the specification that is used to install its dependencies."
msgstr ""

#: ../source/discussions/install-requires-vs-requirements.rst:19
#: c7cc25543f184e4c8b4e98bb19c6cf9a
msgid "For example, if the project requires A and B, your ``install_requires`` would be like so:"
msgstr ""

#: ../source/discussions/install-requires-vs-requirements.rst:29
#: ca7347e05f95452a94b674c7ee933efa
msgid "Additionally, it's best practice to indicate any known lower or upper bounds."
msgstr ""

#: ../source/discussions/install-requires-vs-requirements.rst:31
#: 8ff7aae6c4144fd1965344c85ac1ed77
msgid "For example, it may be known, that your project requires at least v1 of 'A', and v2 of 'B', so it would be like so:"
msgstr ""

#: ../source/discussions/install-requires-vs-requirements.rst:41
#: ac110a342a25412ca40bb5d9829aaf55
msgid "It may also be known that project A follows semantic versioning, and that v2 of 'A' will indicate a break in compatibility, so it makes sense to not allow v2:"
msgstr ""

#: ../source/discussions/install-requires-vs-requirements.rst:51
#: 34994c3313cd43f4a9e0147e6a22dc3a
msgid "It is not considered best practice to use ``install_requires`` to pin dependencies to specific versions, or to specify sub-dependencies (i.e. dependencies of your dependencies).  This is overly-restrictive, and prevents the user from gaining the benefit of dependency upgrades."
msgstr ""

#: ../source/discussions/install-requires-vs-requirements.rst:56
#: c2fadf77b205443aacfb4aab208c2957
msgid "Lastly, it's important to understand that ``install_requires`` is a listing of \"Abstract\" requirements, i.e just names and version restrictions that don't determine where the dependencies will be fulfilled from (i.e. from what index or source).  The where (i.e. how they are to be made \"Concrete\") is to be determined at install time using :ref:`pip` options. [1]_"
msgstr ""

#: ../source/discussions/install-requires-vs-requirements.rst:64
#: 76aef69aa76843189f1b019efd22db6f
msgid "Requirements files"
msgstr ""

#: ../source/discussions/install-requires-vs-requirements.rst:66
#: e7a872d2ece84e8bbe3e5aa9ea1fa690
msgid ":ref:`Requirements Files <pip:Requirements Files>` described most simply, are just a list of :ref:`pip:pip install` arguments placed into a file."
msgstr ""

#: ../source/discussions/install-requires-vs-requirements.rst:69
#: 7683c2b4cbf44bdfb5603b1c2fcf6e52
msgid "Whereas ``install_requires`` defines the dependencies for a single project, :ref:`Requirements Files <pip:Requirements Files>` are often used to define the requirements for a complete Python environment."
msgstr ""

#: ../source/discussions/install-requires-vs-requirements.rst:73
#: 3d41b4bd1e084dd8bfca0a8ffea30c01
msgid "Whereas ``install_requires`` requirements are minimal, requirements files often contain an exhaustive listing of pinned versions for the purpose of achieving :ref:`repeatable installations <pip:Repeatability>` of a complete environment."
msgstr ""

#: ../source/discussions/install-requires-vs-requirements.rst:78
#: f1f9915df9cd4f0990a2c7dffb2a4e1a
msgid "Whereas ``install_requires`` requirements are \"Abstract\", i.e. not associated with any particular index, requirements files often contain pip options like ``--index-url`` or ``--find-links`` to make requirements \"Concrete\", i.e. associated with a particular index or directory of packages. [1]_"
msgstr ""

#: ../source/discussions/install-requires-vs-requirements.rst:84
#: 91f54e12bed04487b57cb51429ac2650
msgid "Whereas ``install_requires`` metadata is automatically analyzed by pip during an install, requirements files are not, and only are used when a user specifically installs them using ``python -m pip install -r``."
msgstr ""

#: ../source/discussions/install-requires-vs-requirements.rst:90
#: bced27aaeaea4405afdc92a68da6313a
msgid "For more on \"Abstract\" vs \"Concrete\" requirements, see https://caremad.io/2013/07/setup-vs-requirement/."
msgstr ""
