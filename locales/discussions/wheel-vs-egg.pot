# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013â€“2020, PyPA
# This file is distributed under the same license as the Python Packaging User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Packaging User Guide \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-29 15:34+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/discussions/wheel-vs-egg.rst:5
#: c6744480a2dc4408893d76a7b2963e16
msgid "Wheel vs Egg"
msgstr ""

#: ../source/discussions/wheel-vs-egg.rst:7
#: f1aca35e996f423eb787d497c9b5f651
msgid ":term:`Wheel` and :term:`Egg` are both packaging formats that aim to support the use case of needing an install artifact that doesn't require building or compilation, which can be costly in testing and production workflows."
msgstr ""

#: ../source/discussions/wheel-vs-egg.rst:11
#: 6297b535864c4e269b22851f14cd562a
msgid "The :term:`Egg` format was introduced by :ref:`setuptools` in 2004, whereas the :term:`Wheel` format was introduced by :pep:`427` in 2012."
msgstr ""

#: ../source/discussions/wheel-vs-egg.rst:14
#: e901c4f3f4904156b0d600412c44600b
msgid ":term:`Wheel` is currently considered the standard for :term:`built <Built Distribution>` and :term:`binary <Binary Distribution>` packaging for Python."
msgstr ""

#: ../source/discussions/wheel-vs-egg.rst:17
#: 378e797c0ebd47838e03e58bf8ca7151
msgid "Here's a breakdown of the important differences between :term:`Wheel` and :term:`Egg`."
msgstr ""

#: ../source/discussions/wheel-vs-egg.rst:20
#: 035dbf43cb3141d0a130212fc51dc430
msgid ":term:`Wheel` has an :pep:`official PEP <427>`. :term:`Egg` did not."
msgstr ""

#: ../source/discussions/wheel-vs-egg.rst:22
#: 5605f37789ec4c03a56ea5f7142ded9f
msgid ":term:`Wheel` is a :term:`distribution <Distribution Package>` format, i.e a packaging format. [1]_ :term:`Egg` was both a distribution format and a runtime installation format (if left zipped), and was designed to be importable."
msgstr ""

#: ../source/discussions/wheel-vs-egg.rst:26
#: b57e4e81be064a11836c2b33428636f4
msgid ":term:`Wheel` archives do not include .pyc files. Therefore, when the distribution only contains Python files (i.e. no compiled extensions), and is compatible with Python 2 and 3, it's possible for a wheel to be \"universal\", similar to an :term:`sdist <Source Distribution (or \"sdist\")>`."
msgstr ""

#: ../source/discussions/wheel-vs-egg.rst:31
#: ff93101ec143404581f47066545969da
msgid ":term:`Wheel` uses :pep:`PEP376-compliant <376>` ``.dist-info`` directories. Egg used ``.egg-info``."
msgstr ""

#: ../source/discussions/wheel-vs-egg.rst:34
#: e9c43d3435544cd7963804cb6f8fe07d
msgid ":term:`Wheel` has a :pep:`richer file naming convention <425>`. A single wheel archive can indicate its compatibility with a number of Python language versions and implementations, ABIs, and system architectures."
msgstr ""

#: ../source/discussions/wheel-vs-egg.rst:38
#: ce8e2281560d4b72a839707f503a39a5
msgid ":term:`Wheel` is versioned. Every wheel file contains the version of the wheel specification and the implementation that packaged it."
msgstr ""

#: ../source/discussions/wheel-vs-egg.rst:41
#: ee61c1f24ac44e64869cf518c1fbb65a
msgid ":term:`Wheel` is internally organized by `sysconfig path type <http://docs.python.org/2/library/sysconfig.html#installation-paths>`_, therefore making it easier to convert to other formats."
msgstr ""

#: ../source/discussions/wheel-vs-egg.rst:47
#: bc73fe518ec64d50ac8bd70d7ce7e53d
msgid "Circumstantially, in some cases, wheels can be used as an importable runtime format, although :pep:`this is not officially supported at this time <427#is-it-possible-to-import-python-code-directly-from-a-wheel-file>`."
msgstr ""
