# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013–2020, PyPA
# This file is distributed under the same license as the Python Packaging User Guide package.
# Rafael Fontenelle <rafaelff@gnome.org>, 2021, 2022, 2023, 2024, 2025.
# meowmeowmeowcat <meowmeowcat1211@gmail.com>, 2021.
# miiguel <isqne@pm.me>, 2022.
# Felipe Nogueira <contato.fnog@gmail.com>, 2023.
# Kalingth <wallace13@hotmail.com.br>, 2024.
# Alefsander Ribeiro Nascimento <alefsander.pvh14@gmail.com>, 2024.
# Beta 46 <ronald20052005@gmail.com>, 2025.
msgid ""
msgstr ""
"Project-Id-Version: Python Packaging User Guide\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-09 23:57+0000\n"
"PO-Revision-Date: 2025-08-07 00:01+0000\n"
"Last-Translator: Rafael Fontenelle <rafaelff@gnome.org>\n"
"Language-Team: Portuguese (Brazil) <https://hosted.weblate.org/projects/pypa/"
"packaging-python-org/pt_BR/>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 5.13-dev\n"

#: ../source/contribute.rst:5
msgid "Contribute to this guide"
msgstr "Contribua para este guia"

#: ../source/contribute.rst:7
msgid ""
"The |PyPUG| welcomes contributors! There are lots of ways to help out, "
"including:"
msgstr ""
"O |PyPUG| dá as boas-vindas aos(às) contribuidores(as)! Existem muitas "
"maneiras de ajudar, incluindo:"

#: ../source/contribute.rst:10
msgid "Reading the guide and giving feedback"
msgstr "Lendo o guia e dando feedback"

#: ../source/contribute.rst:11
msgid "Reviewing new contributions"
msgstr "Revisando novas contribuições"

#: ../source/contribute.rst:12
msgid "Revising existing content"
msgstr "Revisando conteúdo existente"

#: ../source/contribute.rst:13
msgid "Writing new content"
msgstr "Escrevendo novo conteúdo"

#: ../source/contribute.rst:14
msgid "Translating the guide"
msgstr "Traduzindo o guia"

#: ../source/contribute.rst:16
msgid ""
"Most of the work on the |PyPUG| takes place on the `project's GitHub "
"repository`__. To get started, check out the list of `open issues`__ and "
"`pull requests`__. If you're planning to write or edit the guide, please "
"read the :ref:`style guide <contributing_style_guide>`."
msgstr ""
"A maior parte do trabalho no |PyPUG| ocorre no `repositório GitHub do "
"projeto`__. Para começar, verifique a lista de `issues abertos`__ e `pull "
"requests`__. Se você está planejando escrever ou editar o guia, leia o :ref:"
"`guia de estilo <contributing_style_guide>`."

#: ../source/contribute.rst:25
msgid ""
"By contributing to the |PyPUG|, you're expected to follow the PSF's `Code of "
"Conduct`__."
msgstr ""
"Ao contribuir para o |PyPUG|, espera-se que você siga o `Código de "
"Conduta`__ da PSF."

#: ../source/contribute.rst:32
msgid "Documentation types"
msgstr "Tipos de documentação"

#: ../source/contribute.rst:34
msgid ""
"This project consists of four distinct documentation types with specific "
"purposes. The project aspires to follow the `Diátaxis process`_ for creating "
"quality documentation. When proposing new additions to the project please "
"pick the appropriate documentation type."
msgstr ""
"Este projeto consiste em quatro tipos de documentação distintos com "
"finalidades específicas. O projeto aspira seguir a o `processo Diátaxis`_ "
"para criar documentação de qualidade. Ao propor novas adições ao projeto, "
"escolha o tipo de documentação apropriado."

#: ../source/contribute.rst:42 ../source/index.rst:55
#: ../source/tutorials/index.rst:2
msgid "Tutorials"
msgstr "Tutoriais"

#: ../source/contribute.rst:44
msgid ""
"Tutorials are focused on teaching the reader new concepts by accomplishing a "
"goal. They are opinionated step-by-step guides. They do not include "
"extraneous warnings or information. `example tutorial-style document`_."
msgstr ""
"Os tutoriais são focados em ensinar ao leitor novos conceitos através da "
"realização de um objetivo. Eles são guias passo a passo opinativos. Eles não "
"incluem avisos ou informações estranhas. `Exemplo de documento no estilo "
"tutorial`_."

#: ../source/contribute.rst:51 ../source/guides/index.rst:2
#: ../source/index.rst:69
msgid "Guides"
msgstr "Guias"

#: ../source/contribute.rst:53
msgid ""
"Guides are focused on accomplishing a specific task and can assume some "
"level of pre-requisite knowledge. These are similar to tutorials, but have a "
"narrow and clear focus and can provide lots of caveats and additional "
"information as needed. They may also discuss multiple approaches to "
"accomplishing the task. :doc:`example guide-style document <guides/packaging-"
"namespace-packages>`."
msgstr ""
"Os guias são focados em realizar uma tarefa específica e podem assumir algum "
"nível de conhecimento pré-requisito. Eles são semelhantes aos tutoriais, mas "
"têm um foco estreito e claro e podem fornecer muitas advertências e "
"informações adicionais, conforme necessário. Eles também podem discutir "
"várias abordagens para realizar a tarefa. :doc:`Exemplo de documento no "
"estilo guia <guides/packaging-namespace-packages>`."

#: ../source/contribute.rst:60 ../source/discussions/index.rst:2
msgid "Discussions"
msgstr "Discussões"

#: ../source/contribute.rst:62
msgid ""
"Discussions are focused on understanding and information. These explore a "
"specific topic without a specific goal in mind. :doc:`example discussion-"
"style document <discussions/install-requires-vs-requirements>`."
msgstr ""
"As discussões são focadas em compreensão e informação. Eles exploram um "
"tópico específico sem um objetivo específico em mente. :doc:`Exemplo de "
"documento no estilo discussão <discussions/install-requires-vs-"
"requirements>`."

#: ../source/contribute.rst:67
msgid "Specifications"
msgstr "Especificações"

#: ../source/contribute.rst:69
msgid ""
"Specifications are reference documentation focused on comprehensively "
"documenting an agreed-upon interface for interoperability between packaging "
"tools. :doc:`example specification-style document <specifications/core-"
"metadata>`."
msgstr ""
"As especificações são documentação de referência focada na documentação "
"abrangente de uma interface acordada para interoperabilidade entre "
"ferramentas de empacotamento. :doc:`Exemplo de documento no estilo "
"especificação <specifications/core-metadata>`."

#: ../source/contribute.rst:75
msgid "Translations"
msgstr "Traduções"

#: ../source/contribute.rst:77
msgid ""
"We use `Weblate`_ to manage translations of this project. Please visit the "
"`packaging.python.org`_ project on Weblate to contribute."
msgstr ""
"Usamos `Weblate`_ para gerenciar as traduções deste projeto. Visite o "
"projeto `packaging.python.org`_ no Weblate para contribuir."

#: ../source/contribute.rst:80
msgid ""
"If you are experiencing issues while you are working on translations, please "
"open an issue on `GitHub`_."
msgstr ""
"Se você está tendo problemas enquanto trabalha nas traduções, relate o "
"problema no `GitHub`_."

#: ../source/contribute.rst:85
msgid ""
"Any translations of this project should follow `reStructuredText syntax`_."
msgstr ""
"Qualquer tradução deste projeto deve seguir a `sintaxe reStructuredText`_."

#: ../source/contribute.rst:93
msgid "Adding a language"
msgstr "Adicionando um idioma"

#: ../source/contribute.rst:95
msgid ""
"If your language is not listed on `packaging.python.org`_, click the button :"
"guilabel:`Start new translation` at the bottom of the language list and add "
"the language you want to translate."
msgstr ""
"Se o seu idioma não estiver listado em `packaging.python.org`_, clique no "
"botão :guilabel:`Iniciar nova tradução` na parte inferior da lista de "
"idiomas e adicione o idioma que deseja traduzir."

#: ../source/contribute.rst:100
msgid "Following reStructuredText syntax"
msgstr "Seguindo a sintaxe reStructuredText"

#: ../source/contribute.rst:102
msgid ""
"If you are not familiar with reStructuredText (RST) syntax, please read "
"`this guide`_ before translating on Weblate."
msgstr ""
"Se você não está familiarizado com a sintaxe reStructuredText (RST), leia "
"`este guia`_ antes de traduzir no Weblate."

#: ../source/contribute.rst:118
msgid "**Do not translate the text in reference directly**"
msgstr "**Não traduza o texto em referências diretamente**"

#: ../source/contribute.rst:106
msgid ""
"When translating the text in reference, please do not translate them "
"directly."
msgstr "Ao traduzir o texto em referências, não os traduza diretamente."

#: ../source/contribute.rst:0
msgid "Wrong: Translate the following text directly:"
msgstr "Errado: traduzir o texto a seguir diretamente:"

#: ../source/contribute.rst:0
msgid ""
"Right: Translate the following text with your own language and add the "
"original reference:"
msgstr ""
"Correto: traduzir o texto a seguir em seu próprio idioma e adicionar a "
"referência original:"

#: ../source/contribute.rst:123
msgid "Building the guide locally"
msgstr "Construindo o guia localmente"

#: ../source/contribute.rst:125
msgid ""
"Though not required to contribute, it may be useful to build this guide "
"locally in order to test your changes. In order to build this guide locally, "
"you'll need:"
msgstr ""
"Embora não seja necessário contribuir, pode ser útil construir este guia "
"localmente para testar suas alterações. Para construir este guia localmente, "
"você precisará:"

#: ../source/contribute.rst:129
msgid ":doc:`Nox <nox:index>`. You can install or upgrade nox using ``pip``:"
msgstr ""
":doc:`Nox <nox:index>`. Você pode instalar ou atualizar o nox usando o "
"``pip``:"

#: ../source/contribute.rst:136
msgid ""
"Python 3.11. Our build scripts are usually tested with Python 3.11 only. See "
"the :doc:`Hitchhiker's Guide to Python installation instructions <python-"
"guide:starting/installation>` to install Python 3.11 on your operating "
"system."
msgstr ""
"Python 3.11. Nossos scripts de construção são geralmente testados com Python "
"3.11. Consulte o :doc:`Guia do mochileiro para as instruções de instalação "
"do Python <python-guide:starting/installation>` para instalar o Python 3.11 "
"em seu sistema operacional."

#: ../source/contribute.rst:140
msgid ""
"To build the guide, run the following shell command in the project's root "
"folder:"
msgstr ""
"Para construir o guia, execute o seguinte comando shell na pasta raiz do "
"projeto:"

#: ../source/contribute.rst:146
msgid ""
"After the process has completed you can find the HTML output in the ``./"
"build/html`` directory. You can open the ``index.html`` file to view the "
"guide in web browser, but it's recommended to serve the guide using an HTTP "
"server."
msgstr ""
"Após a conclusão do processo, você pode encontrar a saída HTML no diretório "
"``./build/html``. Você pode abrir o arquivo ``index.html`` para ver o guia "
"no navegador web, mas é recomendado servir o guia usando um servidor HTTP."

#: ../source/contribute.rst:151
msgid ""
"You can build the guide and serve it via an HTTP server using the following "
"command:"
msgstr ""
"Você pode construir o guia e exibi-lo por meio de um servidor HTTP usando o "
"seguinte comando:"

#: ../source/contribute.rst:158
msgid "The guide will be browsable via http://localhost:8000."
msgstr "O guia poderá ser navegado em http://localhost:8000."

#: ../source/contribute.rst:162
msgid "Where the guide is deployed"
msgstr "Onde o guia é disponibilizado"

#: ../source/contribute.rst:164
msgid ""
"The guide is deployed via ReadTheDocs and the configuration lives at https://"
"readthedocs.org/projects/python-packaging-user-guide/. It's served from a "
"custom domain and fronted by Fast.ly."
msgstr ""
"O guia é disponibilizado via ReadTheDocs e a configuração está em https://"
"readthedocs.org/projects/python-packaging-user-guide/.. É servido a partir "
"de um domínio personalizado e guardado por Fast.ly."

#: ../source/contribute.rst:170
msgid "Style guide"
msgstr "Guia de estilo"

#: ../source/contribute.rst:172
msgid ""
"This style guide has recommendations for how you should write the |PyPUG|. "
"Before you start writing, please review it. By following the style guide, "
"your contributions will help add to a cohesive whole and make it easier for "
"your contributions to be accepted into the project."
msgstr ""
"Este guia de estilo contém recomendações de como você deve escrever o |"
"PyPUG|. Antes de começar a escrever, revise-o. Seguindo o guia de estilo, "
"suas contribuições ajudarão a formar um todo coeso e tornar mais fácil para "
"que suas contribuições sejam aceitas no projeto."

#: ../source/contribute.rst:179
msgid "Purpose"
msgstr "Propósito"

#: ../source/contribute.rst:181
msgid ""
"The purpose of the |PyPUG| is to be the authoritative resource on how to "
"package, publish, and install Python projects using current tools."
msgstr ""
"O objetivo do |PyPUG| é ser o recurso autorizado sobre como empacotar, "
"publicar e instalar projetos Python usando as ferramentas atuais."

#: ../source/contribute.rst:186
msgid "Scope"
msgstr "Escopo"

#: ../source/contribute.rst:188
msgid ""
"The guide is meant to answer questions and solve problems with accurate and "
"focused recommendations."
msgstr ""
"O guia destina-se a responder a perguntas e resolver problemas com "
"recomendações precisas e focadas."

#: ../source/contribute.rst:191
msgid ""
"The guide isn't meant to be comprehensive and it's not meant to replace "
"individual projects' documentation. For example, pip has dozens of commands, "
"options, and settings. The pip documentation describes each of them in "
"detail, while this guide describes only the parts of pip that are needed to "
"complete the specific tasks described in this guide."
msgstr ""
"O guia não pretende ser abrangente e não pretende substituir a documentação "
"de projetos individuais. Por exemplo, pip tem dezenas de comandos, opções e "
"configurações. A documentação do pip descreve cada um deles em detalhes, "
"enquanto este guia descreve apenas as partes do pip que são necessárias para "
"concluir as tarefas específicas descritas neste guia."

#: ../source/contribute.rst:199
msgid "Audience"
msgstr "Público-alvo"

#: ../source/contribute.rst:201
msgid "The audience of this guide is anyone who uses Python with packages."
msgstr ""
"O público-alvo deste guia é qualquer pessoa que use Python com pacotes."

#: ../source/contribute.rst:203
msgid ""
"Don't forget that the Python community is big and welcoming. Readers may not "
"share your age, gender, education, culture, and more, but they deserve to "
"learn about packaging just as much as you do."
msgstr ""
"Não se esqueça de que a comunidade Python é grande e acolhedora. Os leitores "
"podem não compartilhar sua idade, sexo, educação, cultura e muito mais, mas "
"eles merecem aprender sobre empacotamento tanto quanto você."

#: ../source/contribute.rst:207
msgid ""
"In particular, keep in mind that not all people who use Python see "
"themselves as programmers. The audience of this guide includes astronomers "
"or painters or students as well as professional software developers."
msgstr ""
"Em particular, tenha em mente que nem todas as pessoas que usam Python se "
"consideram programadores. O público deste guia inclui astrônomos, pintores "
"ou estudantes, bem como desenvolvedores de software profissionais."

#: ../source/contribute.rst:213
msgid "Voice and tone"
msgstr "Voz e tom"

#: ../source/contribute.rst:215
msgid ""
"When writing this guide, strive to write with a voice that's approachable "
"and humble, even if you have all the answers."
msgstr ""
"Ao escrever este guia, esforce-se para escrever com uma voz que seja "
"acessível e humilde, mesmo que você tenha todas as respostas."

#: ../source/contribute.rst:218
msgid ""
"Imagine you're working on a Python project with someone you know to be smart "
"and skilled. You like working with them and they like working with you. That "
"person has asked you a question and you know the answer. How do you respond? "
"*That* is how you should write this guide."
msgstr ""
"Imagine que você está trabalhando em um projeto Python com alguém que sabe "
"ser inteligente e habilidoso. Você gosta de trabalhar com eles e eles gostam "
"de trabalhar com você. Essa pessoa fez uma pergunta e você sabe a resposta. "
"Como você responde? *É assim* que você deve escrever este guia."

#: ../source/contribute.rst:223
msgid ""
"Here's a quick check: try reading aloud to get a sense for your writing's "
"voice and tone. Does it sound like something you would say or does it sound "
"like you're acting out a part or giving a speech? Feel free to use "
"contractions and don't worry about sticking to fussy grammar rules. You are "
"hereby granted permission to end a sentence in a preposition, if that's what "
"you want to end it with."
msgstr ""
"Aqui está uma verificação rápida: tente ler em voz alta para ter uma noção "
"da voz e do tom de sua escrita. Parece algo que você diria ou parece que "
"você está encenando um papel ou fazendo um discurso? Sinta-se à vontade para "
"usar contrações e não se preocupe em seguir regras gramaticais complicadas. "
"Você tem permissão para encerrar uma frase em uma preposição, se for assim "
"que deseja encerrá-la."

#: ../source/contribute.rst:230
msgid ""
"When writing the guide, adjust your tone for the seriousness and difficulty "
"of the topic. If you're writing an introductory tutorial, it's OK to make a "
"joke, but if you're covering a sensitive security recommendation, you might "
"want to avoid jokes altogether."
msgstr ""
"Ao escrever o guia, ajuste seu tom de acordo com a seriedade e a dificuldade "
"do tópico. Se você estiver escrevendo um tutorial introdutório, não há "
"problema em fazer uma piada, mas se estiver cobrindo uma recomendação de "
"segurança sensível, convém evitar piadas completamente."

#: ../source/contribute.rst:237
msgid "Conventions and mechanics"
msgstr "Convenções e mecânicas"

#: ../source/contribute.rst:245
msgid "**Write to the reader**"
msgstr "**Escreva para o leitor**"

#: ../source/contribute.rst:240
msgid ""
"When giving recommendations or steps to take, address the reader as *you* or "
"use the imperative mood."
msgstr ""
"Ao dar recomendações ou etapas a serem seguidas, dirija-se ao leitor como "
"*você* ou use o humor imperativo."

#: ../source/contribute.rst:0
msgid "Wrong: To install it, the user runs…"
msgstr "Errado: Para instalá-lo, o usuário executa…"

#: ../source/contribute.rst:0
msgid "Right: You can install it by running…"
msgstr "Certo: Você pode instalá-lo executando…"

#: ../source/contribute.rst:0
msgid "Right: To install it, run…"
msgstr "Certo: Para instalá-lo, execute…"

#: ../source/contribute.rst:251
msgid "**State assumptions**"
msgstr "**Presuma**"

#: ../source/contribute.rst:248
msgid ""
"Avoid making unstated assumptions. Reading on the web means that any page of "
"the guide may be the first page of the guide that the reader ever sees. If "
"you're going to make assumptions, then say what assumptions that you're "
"going to make."
msgstr ""
"Evite fazer suposições não declaradas. Ler na web significa que qualquer "
"página do guia pode ser a primeira página do guia que o leitor vê. Se você "
"vai fazer suposições, diga quais suposições você vai fazer."

#: ../source/contribute.rst:256
msgid "**Cross-reference generously**"
msgstr "**Faça uso generoso de referência cruzada**"

#: ../source/contribute.rst:254
msgid ""
"The first time you mention a tool or practice, link to the part of the guide "
"that covers it, or link to a relevant document elsewhere. Save the reader a "
"search."
msgstr ""
"Na primeira vez que você mencionar uma ferramenta ou prática, coloque um "
"link para a parte do guia que a cobre ou para um documento relevante em "
"outro lugar. Economize uma pesquisa ao leitor."

#: ../source/contribute.rst:266
msgid "**Respect naming practices**"
msgstr "**Respeite as práticas de nomenclatura**"

#: ../source/contribute.rst:259
msgid ""
"When naming tools, sites, people, and other proper nouns, use their "
"preferred capitalization."
msgstr ""
"Ao nomear ferramentas, sites, pessoas e outros nomes próprios, use a "
"capitalização de sua preferência."

#: ../source/contribute.rst:0
msgid "Wrong: Pip uses…"
msgstr "Errado: Pip usa…"

#: ../source/contribute.rst:0
msgid "Right: pip uses…"
msgstr "Certo: pip usa…"

#: ../source/contribute.rst:0
msgid "Wrong: …hosted on github."
msgstr "Errado: …hospedado no github."

#: ../source/contribute.rst:0
msgid "Right: …hosted on GitHub."
msgstr "Certo: …hospedado no GitHub."

#: ../source/contribute.rst:275
msgid "**Use a gender-neutral style**"
msgstr "**Use um estilo de gênero neutro**"

#: ../source/contribute.rst:269
msgid ""
"Often, you'll address the reader directly with *you*, *your* and *yours*. "
"Otherwise, use gender-neutral pronouns *they*, *their*, and *theirs* or "
"avoid pronouns entirely."
msgstr ""
"Frequentemente, você se dirigirá ao leitor diretamente com *you*, *your* e "
"*yours*. Caso contrário, use pronomes de gênero neutro *they*, *their* e "
"*theirs* ou evite os pronomes completamente."

#: ../source/contribute.rst:0
msgid "Wrong: A maintainer uploads the file. Then he…"
msgstr "Errado: A maintainer uploads the file. Then he…"

#: ../source/contribute.rst:0
msgid "Right: A maintainer uploads the file. Then they…"
msgstr "Certo: A maintainer uploads the file. Then they…"

#: ../source/contribute.rst:0
msgid "Right: A maintainer uploads the file. Then the maintainer…"
msgstr "Certo: A maintainer uploads the file. Then the maintainer…"

#: ../source/contribute.rst:287
msgid "**Headings**"
msgstr "**Títulos**"

#: ../source/contribute.rst:278
msgid ""
"Write headings that use words the reader is searching for. A good way to do "
"this is to have your heading complete an implied question. For example, a "
"reader might want to know *How do I install MyLibrary?* so a good heading "
"might be *Install MyLibrary*."
msgstr ""
"Escreva títulos que usem palavras que o leitor esteja procurando. Uma boa "
"maneira de fazer isso é fazer com que o cabeçalho responda a uma pergunta "
"implícita. Por exemplo, um leitor pode querer saber *How do I install "
"MyLibrary?*, de forma que um bom título pode ser *Install MyLibrary*."

#: ../source/contribute.rst:283
msgid ""
"In section headings, use sentence case. In other words, write headings as "
"you would write a typical sentence."
msgstr ""
"Nos cabeçalhos das seções, use letras maiúsculas e minúsculas. Em outras "
"palavras, escreva os cabeçalhos da mesma forma que escreveria uma frase "
"típica."

#: ../source/contribute.rst:0
msgid "Wrong: Things You Should Know About Python"
msgstr "Errado: Things You Should Know About Python"

#: ../source/contribute.rst:0
msgid "Right: Things you should know about Python"
msgstr "Certo: Things you should know about Python"

#: ../source/contribute.rst:290
msgid "**Numbers**"
msgstr "**Números**"

#: ../source/contribute.rst:290
msgid ""
"In body text, write numbers one through nine as words. For other numbers or "
"numbers in tables, use numerals."
msgstr ""
"No corpo do texto, escreva os números de um a nove como palavras. Para "
"outros números ou números nas tabelas, use numerais."

#: ../source/discussions/deploying-python-applications.rst:4
msgid "Deploying Python applications"
msgstr "Fazendo deploy de aplicações Python"

#: ../source/discussions/deploying-python-applications.rst:0
#: ../source/discussions/downstream-packaging.rst:0
#: ../source/discussions/single-source-version.rst:0
#: ../source/guides/distributing-packages-using-setuptools.rst:0
#: ../source/guides/index-mirrors-and-caches.rst:0
#: ../source/guides/installing-using-linux-tools.rst:0
#: ../source/guides/migrating-to-pypi-org.rst:0
#: ../source/guides/multi-version-installs.rst:0
#: ../source/guides/packaging-binary-extensions.rst:0
#: ../source/guides/supporting-multiple-python-versions.rst:0
#: ../source/guides/supporting-windows-using-appveyor.rst:0
msgid "Page Status"
msgstr "Status da página"

#: ../source/discussions/deploying-python-applications.rst:6
#: ../source/guides/index-mirrors-and-caches.rst:7
#: ../source/guides/installing-using-linux-tools.rst:7
#: ../source/guides/packaging-binary-extensions.rst:7
msgid "Incomplete"
msgstr "Incompleta"

#: ../source/discussions/deploying-python-applications.rst:0
#: ../source/discussions/downstream-packaging.rst:0
#: ../source/discussions/single-source-version.rst:0
#: ../source/guides/distributing-packages-using-setuptools.rst:0
#: ../source/guides/index-mirrors-and-caches.rst:0
#: ../source/guides/installing-using-linux-tools.rst:0
#: ../source/guides/packaging-binary-extensions.rst:0
#: ../source/guides/supporting-multiple-python-versions.rst:0
#: ../source/guides/supporting-windows-using-appveyor.rst:0
msgid "Last Reviewed"
msgstr "Última revisão"

#: ../source/discussions/deploying-python-applications.rst:7
msgid "2021-8-24"
msgstr "2021-8-24"

#: ../source/discussions/deploying-python-applications.rst:11
#: ../source/specifications/externally-managed-environments.rst:130
#: ../source/specifications/platform-compatibility-tags.rst:14
msgid "Overview"
msgstr "Visão geral"

#: ../source/discussions/deploying-python-applications.rst:15
msgid "Supporting multiple hardware platforms"
msgstr "Oferecendo suporte a várias plataformas de hardware"

#: ../source/discussions/deploying-python-applications.rst:37
msgid "OS packaging & installers"
msgstr "Empacotamento de sistema operacional e instaladores"

#: ../source/discussions/deploying-python-applications.rst:49
#: ../source/discussions/deploying-python-applications.rst:86
msgid "Windows"
msgstr "Windows"

#: ../source/discussions/deploying-python-applications.rst:58
msgid "Pynsist"
msgstr "Pynsist"

#: ../source/discussions/deploying-python-applications.rst:60
msgid ""
"`Pynsist <https://pypi.org/project/pynsist>`__ is a tool that bundles Python "
"programs together with the Python-interpreter into a single installer based "
"on NSIS. In most cases, packaging only requires the user to choose a version "
"of the Python-interpreter and declare the dependencies of the program. The "
"tool downloads the specified Python-interpreter for Windows and packages it "
"with all the dependencies in a single Windows-executable installer."
msgstr ""
"`Pynsist <https://pypi.org/project/pynsist>`__ é uma ferramenta que agrupa "
"programas Python junto com o interpretador Python em um único instalador "
"baseado em NSIS. Na maioria dos casos, o empacotamento requer apenas que o "
"usuário escolha uma versão do interpretador Python e declare as dependências "
"do programa. A ferramenta baixa o interpretador Python especificado para "
"Windows e o empacota com todas as dependências em um único instalador "
"executável do Windows."

#: ../source/discussions/deploying-python-applications.rst:67
msgid ""
"The installed program can be started from a shortcut that the installer adds "
"to the start-menu. It uses a Python interpreter installed within its "
"application directory, independent of any other Python installation on the "
"computer."
msgstr ""
"O programa instalado pode ser iniciado a partir de um atalho que o "
"instalador adiciona ao menu iniciar. Ele usa um interpretador Python "
"instalado em seu diretório de aplicação, independente de qualquer outra "
"instalação Python no computador."

#: ../source/discussions/deploying-python-applications.rst:71
msgid ""
"A big advantage of Pynsist is that the Windows packages can be built on "
"Linux. There are several examples for different kinds of programs (console, "
"GUI) in the :any:`documentation <pynsist:index>`. The tool is released under "
"the MIT-licence."
msgstr ""
"Uma grande vantagem do Pynsist é que os pacotes do Windows podem ser "
"construídos no Linux. Existem vários exemplos para diferentes tipos de "
"programas (console, GUI) na :any:`documentação <pynsist:index>`. A "
"ferramenta é lançada sob a licença do MIT."

#: ../source/discussions/deploying-python-applications.rst:77
msgid "Application bundles"
msgstr "Pacotes de aplicações"

#: ../source/discussions/deploying-python-applications.rst:89
msgid "py2exe"
msgstr "py2exe"

#: ../source/discussions/deploying-python-applications.rst:91
msgid ""
"`py2exe <https://pypi.org/project/py2exe/>`__ is a distutils extension which "
"allows to build standalone Windows executable programs (32-bit and 64-bit) "
"from Python scripts. Python versions included in the official development "
"cycle are supported (refers to `Status of Python branches`__). py2exe can "
"build console executables and windows (GUI) executables. Building windows "
"services, and DLL/EXE COM servers might work but it is not actively "
"supported. The distutils extension is released under the MIT-licence and "
"Mozilla Public License 2.0."
msgstr ""
"`py2exe <https://pypi.org/project/py2exe/>`__ é uma extensão do distutils "
"que permite construir programas executáveis autônomos Windows (32 bits e 64 "
"bits) a partir de scripts Python. Versões Python incluídas no ciclo de "
"desenvolvimento oficial são suportadas (consulte `Status dos ramos do "
"Python`__). py2exe pode construir executáveis de console e executáveis de "
"janelas (GUI). A construção de serviços do Windows e servidores DLL/EXE COM "
"podem funcionar, mas não são ativamente suportados. A extensão distutils é "
"lançada sob a licença MIT e Mozilla Public License 2.0."

#: ../source/discussions/deploying-python-applications.rst:103
#: ../source/specifications/platform-compatibility-tags.rst:195
msgid "macOS"
msgstr "macOS"

#: ../source/discussions/deploying-python-applications.rst:106
msgid "py2app"
msgstr "py2app"

#: ../source/discussions/deploying-python-applications.rst:108
msgid ""
"`py2app <https://pypi.org/project/py2app/>`__ is a Python setuptools command "
"which will allow you to make standalone macOS application bundles and "
"plugins from Python scripts. Note that py2app MUST be used on macOS to build "
"applications, it cannot create Mac applications on other platforms. py2app "
"is released under the MIT-license."
msgstr ""
"`py2app <https://pypi.org/project/py2app/>`__ é um comando Python do "
"setuptools que permitirá que você crie pacotes e plug-ins de aplicações "
"autônomas para o macOS a partir de scripts Python. Observe que o py2app DEVE "
"ser usado no macOS para criar aplicações; ele não pode criar aplicação do "
"Mac em outras plataformas. py2app é lançado sob a licença MIT."

#: ../source/discussions/deploying-python-applications.rst:115
msgid "Unix (including Linux and macOS)"
msgstr "Unix (incluindo Linux e macOS)"

#: ../source/discussions/deploying-python-applications.rst:118
#: ../source/key_projects.rst:576
msgid "pex"
msgstr "pex"

#: ../source/discussions/deploying-python-applications.rst:120
msgid ""
"`pex <https://pypi.org/project/pex/>`__ is  a library for generating .pex "
"(Python EXecutable) files which are executable Python environments in the "
"spirit of virtualenvs. pex is an expansion upon the ideas outlined in :pep:"
"`441` and makes the deployment of Python applications as simple as cp. pex "
"files may even include multiple platform-specific Python distributions, "
"meaning that a single pex file can be portable across Linux and macOS. pex "
"is released under the Apache License 2.0."
msgstr ""
"`pex <https://pypi.org/project/pex/>`__ é uma biblioteca para gerar "
"arquivos .pex (Python EXecutáveis) que são ambientes Python executáveis no "
"espírito de virtualenvs. pex é uma expansão das ideias descritas na :pep:"
"`441` e torna a implantação de aplicações Python tão simples quanto o cp. Os "
"arquivos pex podem até incluir várias distribuições específicas da "
"plataforma Python, o que significa que um único arquivo pex pode ser "
"portátil entre Linux e macOS. pex é lançado sob a licença Apache 2.0."

#: ../source/discussions/deploying-python-applications.rst:129
msgid "Configuration management"
msgstr "Gerenciamento de configuração"

#: ../source/discussions/distribution-package-vs-import-package.rst:5
msgid "Distribution package vs. import package"
msgstr "Pacote de distribuição vs. pacote de importação"

#: ../source/discussions/distribution-package-vs-import-package.rst:7
msgid ""
"A number of different concepts are commonly referred to by the word "
"\"package\". This page clarifies the differences between two distinct but "
"related meanings in Python packaging, \"distribution package\" and \"import "
"package\"."
msgstr ""
"Alguns conceitos diferentes são comumente referidos pela palavra \"pacote\". "
"Esta página esclarece as diferenças entre dois significados distintos, mas "
"relacionados no empacotamento do Python , \"pacote de distribuição\" e "
"\"pacote de importação\"."

#: ../source/discussions/distribution-package-vs-import-package.rst:13
msgid "What's a distribution package?"
msgstr "O que é um pacote de distribuição?"

#: ../source/discussions/distribution-package-vs-import-package.rst:15
msgid ""
"A distribution package is a piece of software that you can install. Most of "
"the time, this is synonymous with \"project\". When you type ``pip install "
"pkg``, or when you write ``dependencies = [\"pkg\"]`` in your ``pyproject."
"toml``, ``pkg`` is the name of a distribution package. When you search or "
"browse the PyPI_, the most widely known centralized source for installing "
"Python libraries and tools, what you see is a list of distribution packages. "
"Alternatively, the term \"distribution package\" can be used to refer to a "
"specific file that contains a certain version of a project."
msgstr ""
"Um pacote de distribuição é um software que você pode instalar. Na maioria "
"das vezes, isso é sinônimo de \"projeto\". Quando você digita ``pip install "
"pkg``, ou quando você escreve ``dependencies = [\"pkg\"]`` em seu "
"``pyproject.toml``, ``pkg`` é o nome de um pacote de distribuição. Quando "
"você pesquisa ou navega no PyPI_, a fonte centralizada mais conhecida para "
"instalar Python bibliotecas e ferramentas, o que você vê é uma lista de "
"pacotes de distribuição. Alternativamente, o termo \"pacote de "
"distribuição\" pode ser usado para se referir a um arquivo específico que "
"contém uma determinada versão de um projeto."

#: ../source/discussions/distribution-package-vs-import-package.rst:24
msgid ""
"Note that in the Linux world, a \"distribution package\", most commonly "
"abbreviated as \"distro package\" or just \"package\", is something provided "
"by the system package manager of the `Linux distribution <distro_>`_, which "
"is a different meaning."
msgstr ""
"Note que no mundo Linux, um \"pacote de distribuição\", mais comumente "
"abreviado como \"pacote de distro\" (em inglês, *distro package*) ou apenas "
"\"pacote\", é algo fornecido pelo gerenciador de pacotes do sistema da "
"\"distribuição Linux <distro_>`_, que é um significado diferente."

#: ../source/discussions/distribution-package-vs-import-package.rst:31
msgid "What's an import package?"
msgstr "O que é um pacote de importação?"

#: ../source/discussions/distribution-package-vs-import-package.rst:33
msgid ""
"An import package is a Python module. Thus, when you write ``import pkg`` or "
"``from pkg import func`` in your Python code, ``pkg`` is the name of an "
"import package. More precisely, import packages are special Python modules "
"that can contain submodules. For example, the ``numpy`` package contains "
"modules like ``numpy.linalg`` and ``numpy.fft``. Usually, an import package "
"is a directory on the file system, containing modules as ``.py`` files and "
"subpackages as subdirectories."
msgstr ""
"Um pacote de importação é um módulo Python. Assim, quando você escreve "
"``import pkg`` ou ``from pkg import func`` em seu código Python, ``pkg`` é o "
"nome de um pacote de importação. Mais precisamente, os pacotes de importação "
"são módulos especiais Python que podem conter submódulos. Por exemplo, o "
"pacote ``numpy`` contém módulos como ``numpy.linalg`` e ``numpy.fft``. "
"Normalmente, um pacote de importação é um diretório no sistema de arquivos, "
"contendo módulos como arquivos ``.py`` e subpacotes como subdiretórios."

#: ../source/discussions/distribution-package-vs-import-package.rst:42
msgid ""
"You can use an import package as soon as you have installed a distribution "
"package that provides it."
msgstr ""
"Você pode usar um pacote de importação assim que tiver instalado um pacote "
"de distribuição que o fornece."

#: ../source/discussions/distribution-package-vs-import-package.rst:47
msgid "What are the links between distribution packages and import packages?"
msgstr ""
"Quais são as conexões entre pacotes de distribuição e pacotes de importação?"

#: ../source/discussions/distribution-package-vs-import-package.rst:49
msgid ""
"Most of the time, a distribution package provides one single import package "
"(or non-package module), with a matching name. For example, ``pip install "
"numpy`` lets you ``import numpy``."
msgstr ""
"Na maioria das vezes, um pacote de distribuição fornece um único pacote de "
"importação (ou módulo de não embalagem), com um nome correspondente. Por "
"exemplo, ``pip install numpy`` permite que você importe usando ``import "
"numpy``."

#: ../source/discussions/distribution-package-vs-import-package.rst:53
msgid ""
"However, this is only a convention. PyPI and other package indices *do not "
"enforce any relationship* between the name of a distribution package and the "
"import packages it provides. (A consequence of this is that you cannot "
"blindly install the PyPI package ``foo`` if you see ``import foo``; this may "
"install an unintended, and potentially even malicious package.)"
msgstr ""
"No entanto, esta é apenas uma convenção. PyPI e outros índices de pacotes "
"*não impõe nenhuma relação* entre o nome de um pacote de distribuição e os "
"pacotes de importação que ele fornece. (Uma consequência disso é que você "
"não pode instalar cegamente o pacote PyPI ``foo`` se você vir ``import "
"foo``; isso pode instalar um pacote não intencional, e potencialmente até "
"mesmo malicioso.)"

#: ../source/discussions/distribution-package-vs-import-package.rst:59
msgid ""
"A distribution package could provide an import package with a different "
"name. An example of this is the popular Pillow_ library for image "
"processing. Its distribution package name is ``Pillow``, but it provides the "
"import package ``PIL``. This is for historical reasons: Pillow started as a "
"fork of the PIL library, thus it kept the import name ``PIL`` so that "
"existing PIL users could switch to Pillow with little effort. More "
"generally, a fork of an existing library is a common reason for differing "
"names between the distribution package and the import package."
msgstr ""
"Um pacote de distribuição pode fornecer um pacote de importação com um nome "
"diferente. Um exemplo disso é a popular biblioteca Pillow_ para "
"processamento de imagens. Seu nome do pacote de distribuição é ``Pillow``, "
"mas fornece o pacote de importação ``PIL``. Isto é por razões históricas: "
"Pillow começou como um fork da biblioteca PIL, assim manteve o nome de "
"importação ``PIL`` para que os usuários PIL existentes pudessem mudar para o "
"Pillow com pouco esforço. Mais geralmente, um fork de uma biblioteca "
"existente é uma razão comum para diferentes nomes entre o pacote de "
"distribuição e o pacote de importação."

#: ../source/discussions/distribution-package-vs-import-package.rst:69
msgid ""
"On a given package index (like PyPI), distribution package names must be "
"unique. On the other hand, import packages have no such requirement. Import "
"packages with the same name can be provided by several distribution "
"packages. Again, forks are a common reason for this."
msgstr ""
"Em um determinado índice de pacotes (como PyPI), nomes de pacotes de "
"distribuição devem ser únicos. Por outro lado, os pacotes de importação não "
"têm tal exigência. Os pacotes de importação com o mesmo nome podem ser "
"fornecidos por vários pacotes de distribuição. Novamente, forks são uma "
"razão comum para isso."

#: ../source/discussions/distribution-package-vs-import-package.rst:74
msgid ""
"Conversely, a distribution package can provide several import packages, "
"although this is less common. An example is the attrs_ distribution package, "
"which provides both an ``attrs`` import package with a newer API, and an "
"``attr`` import package with an older but supported API."
msgstr ""
"Por outro lado, um pacote de distribuição pode fornecer vários pacotes de "
"importação, embora isso seja menos comum. Um exemplo é o pacote de "
"distribuição attrs_, que fornece um pacote de importação ``attrs`` com uma "
"API mais recente, e um pacote de importação ``attr`` com uma API mais "
"antiga, mas suportada."

#: ../source/discussions/distribution-package-vs-import-package.rst:81
msgid "How do distribution package names and import package names compare?"
msgstr ""
"Qual a comparação de nomes de pacotes de distribuição e de nomes de pacotes "
"de importação?"

#: ../source/discussions/distribution-package-vs-import-package.rst:83
msgid ""
"Import packages should have valid Python identifiers as their name (the :ref:"
"`exact rules <python:identifiers>` are found in the Python documentation) "
"[#non-identifier-mod-name]_. In particular, they use underscores ``_`` as "
"word separator and they are case-sensitive."
msgstr ""
"Os pacotes de importação devem ter identificadores válidos do Python como "
"seu nome (as :ref:`regras exatas <python:identifiers>` são encontradas na "
"documentação do Python) [#non-identifier-mod-name]_. Em particular, eles "
"usam sublinhado ``_`` como separador de palavras e eles são sensíveis a "
"casos."

#: ../source/discussions/distribution-package-vs-import-package.rst:88
msgid ""
"On the other hand, distribution packages can use hyphens ``-`` or "
"underscores ``_``. They can also contain dots ``.``, which is sometimes used "
"for packaging a subpackage of a :ref:`namespace package <packaging-namespace-"
"packages>`. For most purposes, they are insensitive to case and to ``-`` "
"vs.  ``_`` differences, e.g., ``pip install Awesome_Package`` is the same as "
"``pip install awesome-package`` (the precise rules are given in the :ref:"
"`name normalization specification <name-normalization>`)."
msgstr ""
"Por outro lado, os pacotes de distribuição podem usar hífenes ``-`` ou "
"sublinhados ``_``. Eles também podem conter pontos ``.``, que às vezes é "
"usado para empacotar um subpacote de um :ref:`pacote de espaço de nomes "
"<packaging-namespace-packages>`. Para a maioria dos fins, eles não "
"diferenciam letras maiúsculas de minúsculas nem ``-`` de ``_``. Por exemplo, "
"``pip install Awesome_Package`` é o mesmo que ``pip install awesome-"
"package`` (as regras precisas são dadas na :ref:`especificação de "
"normalização de nome <name-normalization>`)."

#: ../source/discussions/distribution-package-vs-import-package.rst:101
msgid ""
"Although it is technically possible to import packages/modules that do not "
"have a valid Python identifier as their name, using :doc:`importlib <python:"
"library/importlib>`, this is vanishingly rare and strongly discouraged."
msgstr ""
"Embora seja tecnicamente possível importar pacotes/módulos que não têm um "
"identificador válido Python como seu nome, usando :doc:`importlib <python:"
"library/importlib>`, isso é extremamente raro e fortemente desencorajado."

#: ../source/discussions/downstream-packaging.rst:5
msgid "Supporting downstream packaging"
msgstr "Oferecendo suporte para empacotamento em downstream"

#: ../source/discussions/downstream-packaging.rst:7
msgid "Draft"
msgstr "Esboço"

#: ../source/discussions/downstream-packaging.rst:8
msgid "2025-?"
msgstr "2025-?"

#: ../source/discussions/downstream-packaging.rst:10
msgid ""
"While PyPI and the Python packaging tools such as :ref:`pip` are the primary "
"means of distributing Python packages, they are also often made available as "
"part of other packaging ecosystems. These repackaging efforts are "
"collectively called *downstream* packaging (your own efforts are called "
"*upstream* packaging), and include such projects as Linux distributions, "
"Conda, Homebrew and MacPorts. They generally aim to provide improved support "
"for use cases that cannot be handled via Python packaging tools alone, such "
"as native integration with a specific operating system, or assured "
"compatibility with specific versions of non-Python software."
msgstr ""
"Embora o PyPI e as ferramentas de empacotamento Python, como :ref:`pip`, "
"sejam os principais meios de distribuição de pacotes Python, eles também são "
"frequentemente disponibilizados como parte de outros ecossistemas de "
"empacotamento. Esses esforços de reempacotamento são chamados coletivamente "
"de empacotamento *downstream* (seus próprios esforços são chamados de "
"empacotamento *upstream*) e incluem projetos como distribuições Linux, "
"Conda, Homebrew e MacPorts. Geralmente, eles visam fornecer suporte "
"aprimorado para casos de uso que não podem ser tratados apenas por "
"ferramentas de empacotamento Python, como integração nativa com um sistema "
"operacional específico ou compatibilidade garantida com versões específicas "
"de software não Python."

#: ../source/discussions/downstream-packaging.rst:19
msgid ""
"This discussion attempts to explain how downstream packaging is usually "
"done, and what additional challenges downstream packagers typically face. It "
"aims to provide some optional guidelines that project maintainers may choose "
"to follow which help make downstream packaging *significantly* easier "
"(without imposing any major maintenance hassles on the upstream project). "
"Note that this is not an all-or-nothing proposal — anything that upstream "
"maintainers can do is useful, even if it's only a small part. Downstream "
"maintainers are also willing to prepare patches to resolve these issues. "
"Having these patches merged can be very helpful, since it removes the need "
"for different downstreams to carry and keep rebasing the same patches, and "
"the risk of applying inconsistent solutions to the same problem."
msgstr ""
"Esta discussão tenta explicar como o empacotamento downstream geralmente é "
"feito e quais desafios adicionais os empacotadores downstream normalmente "
"enfrentam. O objetivo é fornecer algumas diretrizes opcionais que os "
"mantenedores do projeto podem optar por seguir, o que ajuda a tornar o "
"empacotamento downstream *significativamente* mais fácil (sem impor grandes "
"problemas de manutenção ao projeto upstream). Observe que esta não é uma "
"proposta do tipo \"tudo ou nada\" — qualquer coisa que os mantenedores "
"upstream possam fazer é útil, mesmo que seja apenas uma pequena parte. Os "
"mantenedores downstream também estão dispostos a preparar patches para "
"resolver esses problemas. Mesclar esses patches pode ser muito útil, pois "
"elimina a necessidade de diferentes downstreams carregarem e continuarem "
"rebaseando os mesmos patches, além do risco de aplicar soluções "
"inconsistentes ao mesmo problema."

#: ../source/discussions/downstream-packaging.rst:31
msgid ""
"Establishing a good relationship between software maintainers and downstream "
"packagers can bring mutual benefits. Downstreams are often willing to share "
"their experience, time and hardware to improve your package. They are "
"sometimes in a better position to see how your package is used in practice, "
"and to provide information about its relationships with other packages that "
"would otherwise require significant effort to obtain. Packagers can often "
"find bugs before your users hit them in production, provide bug reports of "
"good quality, and supply patches whenever they can. For example, they are "
"regularly active in ensuring the packages they redistribute are updated for "
"any compatibility issues that arise when a new Python version is released."
msgstr ""
"Estabelecer um bom relacionamento entre mantenedores de software e "
"empacotadores downstream pode trazer benefícios mútuos. Os downstreams "
"geralmente estão dispostos a compartilhar sua experiência, tempo e hardware "
"para aprimorar seu pacote. Às vezes, eles estão em melhor posição para ver "
"como seu pacote é usado na prática e fornecer informações sobre suas "
"relações com outros pacotes que, de outra forma, exigiriam um esforço "
"significativo para serem obtidas. Os empacotadores geralmente conseguem "
"encontrar bugs antes que seus usuários os encontrem em produção, fornecem "
"relatórios de bugs de boa qualidade e fornecem patches sempre que possível. "
"Por exemplo, eles são regularmente ativos para garantir que os pacotes que "
"redistribuem sejam atualizados para quaisquer problemas de compatibilidade "
"que surjam quando uma nova versão do Python é lançada."

#: ../source/discussions/downstream-packaging.rst:43
msgid ""
"Please note that downstream builds include not only binary redistribution, "
"but also source builds done on user systems (in source-first distributions "
"such as Gentoo Linux, for example)."
msgstr ""
"Observe que as construções downstream incluem não apenas a redistribuição "
"binária, mas também construções de código-fonte feitas em sistemas de "
"usuários (em distribuições que priorizam o código-fonte, como o Gentoo "
"Linux, por exemplo)."

#: ../source/discussions/downstream-packaging.rst:51
msgid "Provide complete source distributions"
msgstr "Forneça distribuições fonte completas"

#: ../source/discussions/downstream-packaging.rst:54
#: ../source/discussions/downstream-packaging.rst:150
#: ../source/discussions/downstream-packaging.rst:213
#: ../source/discussions/downstream-packaging.rst:303
#: ../source/discussions/downstream-packaging.rst:412
msgid "Why?"
msgstr "Por que?"

#: ../source/discussions/downstream-packaging.rst:56
msgid ""
"The vast majority of downstream packagers prefer to build packages from "
"source, rather than use the upstream-provided binary packages. In some "
"cases, using sources is actually required for the package to be included in "
"the distribution. This is also true of pure Python packages that provide "
"universal wheels. The reasons for using source distributions may include:"
msgstr ""
"A grande maioria dos empacotadores downstream prefere construir pacotes a "
"partir do código-fonte, em vez de usar os pacotes binários fornecidos pelo "
"upstream. Em alguns casos, o uso do código-fonte é realmente necessário para "
"que o pacote seja incluído na distribuição. Isso também se aplica a pacotes "
"Python puros que fornecem rodas universais. Os motivos para usar "
"distribuições de código-fonte podem incluir:"

#: ../source/discussions/downstream-packaging.rst:62
msgid "Being able to audit the source code of all packages."
msgstr "Ser possível auditar o código-fonte de todos os pacotes."

#: ../source/discussions/downstream-packaging.rst:64
msgid "Being able to run the test suite and build documentation."
msgstr "Ser capaz de executar o conjunto de testes e construir a documentação."

#: ../source/discussions/downstream-packaging.rst:66
msgid ""
"Being able to easily apply patches, including backporting commits from the "
"project's repository and sending patches back to the project."
msgstr ""
"Ser capaz de aplicar patches facilmente, incluindo fazer backporting de "
"commits do repositório do projeto e enviar patches de volta ao projeto."

#: ../source/discussions/downstream-packaging.rst:69
msgid ""
"Being able to build on a specific platform that is not covered by upstream "
"builds."
msgstr ""
"Ser capaz de construir em uma plataforma específica que não é coberta por "
"construções upstream."

#: ../source/discussions/downstream-packaging.rst:72
msgid "Being able to build against specific versions of system libraries."
msgstr ""
"Ser capaz de construir em versões específicas de bibliotecas do sistema."

#: ../source/discussions/downstream-packaging.rst:74
msgid "Having a consistent build process across all Python packages."
msgstr "Term um processo de construção consistente em todos os pacotes Python."

#: ../source/discussions/downstream-packaging.rst:76
msgid ""
"While it is usually possible to build packages from a Git repository, there "
"are a few important reasons to provide a static archive file instead:"
msgstr ""
"Enquanto é possível construir pacotes através do repositório Git, há razões "
"importantes pelas quais é incentivado prover um arquivo estático:"

#: ../source/discussions/downstream-packaging.rst:79
msgid ""
"Fetching a single file is often more efficient, more reliable and better "
"supported than e.g. using a Git clone. This can help users with poor "
"Internet connectivity."
msgstr ""
"Obter um único arquivo costuma ser mais eficiente, confiável e com melhor "
"suporte do que, por exemplo, usar um clone do Git. Isso pode ajudar usuários "
"com baixa conectividade com a internet."

#: ../source/discussions/downstream-packaging.rst:83
msgid ""
"Downstreams often use hashes to verify the authenticity of source files on "
"subsequent builds, which require that they remain bitwise identical over "
"time. For example, automatically generated Git archives do not guarantee "
"this, as the compressed data may change if gzip is upgraded on the server."
msgstr ""
"Os downstreams costumam usar hashes para verificar a autenticidade dos "
"arquivos fonte em construções subsequentes, o que exige que eles permaneçam "
"idênticos bit a bit ao longo do tempo. Por exemplo, arquivos Git gerados "
"automaticamente não garantem isso, pois os dados compactados podem mudar se "
"o gzip for atualizado no servidor."

#: ../source/discussions/downstream-packaging.rst:88
msgid ""
"Archive files can be mirrored, reducing both upstream and downstream "
"bandwidth use. The actual builds can afterwards be performed in firewalled "
"or offline environments, that can only access source files provided by the "
"local mirror or redistributed earlier."
msgstr ""
"Arquivos compactados podem ser espelhados, reduzindo o uso de largura de "
"banda tanto no upstream quanto no downstream. As construções podem ser "
"executadas posteriormente em ambientes com firewall ou offline, que só podem "
"acessar os arquivos fonte fornecidos pelo mirror local ou redistribuídos "
"anteriormente."

#: ../source/discussions/downstream-packaging.rst:93
msgid ""
"Explicitly publishing archive files can ensure that any dependencies on "
"version control system metadata are resolved when creating the source "
"archive. For example, automatically generated Git archives omit all of the "
"commit tag information, potentially resulting in incorrect version details "
"in the resulting builds."
msgstr ""
"Publicar explicitamente arquivos compactados pode garantir que quaisquer "
"dependências nos metadados do sistema de controle de versão sejam resolvidas "
"ao criar o arquivo fonte. Por exemplo, arquivos Git gerados automaticamente "
"omitem todas as informações da tag de commit, o que pode resultar em "
"detalhes de versão incorretos nas compilações resultantes."

#: ../source/discussions/downstream-packaging.rst:99
#: ../source/discussions/downstream-packaging.rst:179
#: ../source/discussions/downstream-packaging.rst:277
#: ../source/discussions/downstream-packaging.rst:337
#: ../source/discussions/downstream-packaging.rst:441
msgid "How?"
msgstr "Como?"

#: ../source/discussions/downstream-packaging.rst:101
msgid ""
"Ideally, **a source distribution archive published on PyPI should include "
"all the files from the package's Git repository** that are necessary to "
"build the package itself, run its test suite, build and install its "
"documentation, and any other files that may be useful to end users, such as "
"shell completions, editor support files, and so on."
msgstr ""
"O ideal é que **um arquivo de distribuição de código-fonte publicado no PyPI "
"inclua todos os arquivos do repositório Git do pacote** que são necessários "
"para construir o pacote em si, executar seu conjunto de testes, construir e "
"instalar sua documentação e quaisquer outros arquivos que possam ser úteis "
"para usuários finais, como conclusões de shell, arquivos de suporte do "
"editor e assim por diante."

#: ../source/discussions/downstream-packaging.rst:107
msgid ""
"This point applies only to the files belonging to the package itself. The "
"downstream packaging process, much like Python package managers, will "
"provision the necessary Python dependencies, system tools and external "
"libraries that are needed by your package and its build scripts. However, "
"the files listing these dependencies (for example, ``requirements*.txt`` "
"files) should also be included, to help downstreams determine the needed "
"dependencies, and check for changes in them."
msgstr ""
"Este ponto se aplica apenas aos arquivos pertencentes ao próprio pacote. O "
"processo de empacotamento downstream, assim como os gerenciadores de pacotes "
"Python, provisionará as dependências Python, ferramentas de sistema e "
"bibliotecas externas necessárias para o seu pacote e seus scripts de "
"compilação. No entanto, os arquivos que listam essas dependências (por "
"exemplo, arquivos ``requirements*.txt``) também devem ser incluídos para "
"ajudar os downstreams a determinar as dependências necessárias e verificar "
"se há alterações nelas."

#: ../source/discussions/downstream-packaging.rst:115
msgid ""
"Some projects have concerns related to Python package managers using source "
"distributions from PyPI. They do not wish to increase their size with files "
"that are not used by these tools, or they do not wish to publish source "
"distributions at all, as they enable a problematic or outright nonfunctional "
"fallback to building the particular project from source. In these cases, a "
"good compromise may be to publish a separate source archive for downstream "
"use elsewhere, for example by attaching it to a GitHub release. "
"Alternatively, large files, such as test data, can be split into separate "
"archives."
msgstr ""
"Alguns projetos apresentam preocupações relacionadas aos gerenciadores de "
"pacotes Python que utilizam distribuições de código-fonte do PyPI. Eles não "
"desejam aumentar seu tamanho com arquivos que não são usados por essas "
"ferramentas, ou não desejam publicar distribuições de código-fonte, pois "
"elas permitem um fallback problemático ou totalmente não funcional para a "
"construção do projeto específico a partir do código-fonte. Nesses casos, um "
"bom meio-termo pode ser publicar um arquivo de código-fonte separado para "
"uso posterior em outro lugar, por exemplo, anexando-o a uma versão do "
"GitHub. Como alternativa, arquivos grandes, como dados de teste, podem ser "
"divididos em arquivos separados."

#: ../source/discussions/downstream-packaging.rst:124
msgid ""
"On the other hand, some projects (NumPy_, for instance) decide to include "
"tests in their installed packages. This has the added advantage of "
"permitting users to run tests after installing them, for example to check "
"for regressions after upgrading a dependency. Yet another approach is to "
"split tests or test data into a separate Python package. Such an approach "
"was taken by the cryptography_ project, with the large test vectors being "
"split to cryptography-vectors_ package."
msgstr ""
"Por outro lado, alguns projetos (NumPy_, por exemplo) decidem incluir testes "
"em seus pacotes instalados. Isso tem a vantagem adicional de permitir que os "
"usuários executem testes após a instalação, por exemplo, para verificar "
"regressões após a atualização de uma dependência. Outra abordagem é dividir "
"os testes ou os dados de teste em um pacote Python separado. Essa abordagem "
"foi adotada pelo projeto cryptography_, com os grandes vetores de teste "
"sendo divididos no pacote cryptography-vectors_."

#: ../source/discussions/downstream-packaging.rst:132
msgid ""
"A good idea is to use your source distribution in the release workflow. For "
"example, the :ref:`build` tool does exactly that — it first builds a source "
"distribution, and then uses it to build a wheel. This ensures that the "
"source distribution actually works, and that it won't accidentally install "
"fewer files than the official wheels."
msgstr ""
"Uma boa ideia é usar sua distribuição de código-fonte no fluxo de trabalho "
"de lançamento. Por exemplo, a ferramenta :ref:`build` faz exatamente isso — "
"primeiro cria uma distribuição de código-fonte e, em seguida, a utiliza para "
"criar uma wheel. Isso garante que a distribuição de código-fonte realmente "
"funcione e que ela não instale acidentalmente menos arquivos do que as "
"wheels oficiais."

#: ../source/discussions/downstream-packaging.rst:138
msgid ""
"Ideally, also use the source distribution to run tests, build documentation, "
"and so on, or add specific tests to make sure that all necessary files were "
"actually included. Understandably, this requires more effort, so it's fine "
"not do that — downstream packagers will report any missing files promptly."
msgstr ""
"O ideal é usar também a distribuição fonte para executar testes, compilar "
"documentação e assim por diante, ou adicionar testes específicos para "
"garantir que todos os arquivos necessários foram realmente incluídos. É "
"compreensível que isso exija mais esforço, então não há problema em não "
"fazer isso — os empacotadores posteriores reportarão imediatamente quaisquer "
"arquivos ausentes."

#: ../source/discussions/downstream-packaging.rst:147
msgid "Do not use the Internet during the build process"
msgstr "Não utilize a internet durante o processo de construção"

#: ../source/discussions/downstream-packaging.rst:152
msgid ""
"Downstream builds are frequently done in sandboxed environments that cannot "
"access the Internet. The package sources are unpacked into this environment, "
"and all the necessary dependencies are installed."
msgstr ""
"As construções downstream são frequentemente realizadas em ambientes "
"isolados, sem acesso à internet. Os códigos-fonte dos pacotes são "
"descompactados nesse ambiente e todas as dependências necessárias são "
"instaladas."

#: ../source/discussions/downstream-packaging.rst:156
msgid ""
"Even if this is not the case, and assuming that you took sufficient care to "
"properly authenticate downloads, using the Internet is discouraged for a "
"number of reasons:"
msgstr ""
"Mesmo este não sendo o caso, e assumindo que você teve cuidado suficiente "
"para autenticar os downloads, usar a internet é desencorajado pelas "
"seguintes razões:"

#: ../source/discussions/downstream-packaging.rst:160
msgid ""
"The Internet connection may be unstable (e.g. due to poor reception) or "
"suffer from temporary problems that could cause the process to fail or hang."
msgstr ""
"A conexão a internet pode ser instável (ex. devido a má recepção) or "
"apresentar problemas temporários que podem causar a falha ou atraso no "
"processo."

#: ../source/discussions/downstream-packaging.rst:164
msgid ""
"The remote resources may become temporarily or even permanently unavailable, "
"making the build no longer possible. This is especially problematic when "
"someone needs to build an old package version."
msgstr ""
"Os recursos remotos podem ficar indisponíveis temporariamente ou até "
"permanente, tornando a construção impossível. Isto é especialmente "
"problemático quando alguém precisa construir um pacote de versão antiga."

#: ../source/discussions/downstream-packaging.rst:168
msgid "The remote resources may change, making the build not reproducible."
msgstr ""
"Os recursos remotos podem mudar, tornando a construção não reprodutível."

#: ../source/discussions/downstream-packaging.rst:170
msgid ""
"Accessing remote servers poses a privacy issue and a potential security "
"issue, as it exposes information about the system building the package."
msgstr ""
"O acesso a servidores remotos representa um problema de privacidade e um "
"possível problema de segurança, pois expõe informações sobre o sistema que "
"cria o pacote."

#: ../source/discussions/downstream-packaging.rst:174
msgid ""
"The user may be using a service with a limited data plan, in which "
"uncontrolled Internet access may result in additional charges or other "
"inconveniences."
msgstr ""
"O usuário pode estar usando um serviço com um plano de dados limitado, no "
"qual o acesso descontrolado à Internet pode resultar em cobranças adicionais "
"ou outros inconvenientes."

#: ../source/discussions/downstream-packaging.rst:181
msgid ""
"If the package is implementing any custom build *backend* actions that use "
"the Internet, for example by automatically downloading vendored dependencies "
"or fetching Git submodules, its source distribution should either include "
"all of these files or allow provisioning them externally, and the Internet "
"must not be used if the files are already present."
msgstr ""
"Se o pacote estiver implementando quaisquer ações de *backend* de construção "
"personalizadas que usem a Internet, por exemplo, baixando automaticamente "
"dependências fornecidas ou buscando submódulos do Git, sua distribuição "
"fonte deverá incluir todos esses arquivos ou permitir o provisionamento "
"externo, e a Internet não deverá ser usada se os arquivos já estiverem "
"presentes."

#: ../source/discussions/downstream-packaging.rst:187
msgid ""
"Note that this point does not apply to Python dependencies that are "
"specified in the package metadata, and are fetched during the build and "
"installation process by *frontends* (such as :ref:`build` or :ref:`pip`). "
"Downstreams use frontends that use local provisioning for Python "
"dependencies."
msgstr ""
"Observe que este ponto não se aplica às dependências do Python especificadas "
"nos metadados do pacote e obtidas durante o processo de construção e "
"instalação por *frontends* (como :ref:`build` ou :ref:`pip`). Os downstreams "
"utilizam frontends que utilizam provisionamento local para dependências do "
"Python."

#: ../source/discussions/downstream-packaging.rst:192
msgid ""
"Ideally, custom build scripts should not even attempt to access the Internet "
"at all, unless explicitly requested to. If any resources are missing and "
"need to be fetched, they should ask the user for permission first. If that "
"is not feasible, the next best thing is to provide an opt-out switch to "
"disable all Internet access. This could be done e.g. by checking whether a "
"``NO_NETWORK`` environment variable is set to a non-empty value."
msgstr ""
"O ideal é que scripts de construção personalizados nem tentem acessar a "
"internet, a menos que explicitamente solicitados. Se algum recurso estiver "
"faltando e precisar ser recuperado, eles devem primeiro solicitar a "
"permissão do usuário. Se isso não for viável, a melhor solução é fornecer "
"uma opção de desativação para desabilitar todo o acesso à internet. Isso "
"pode ser feito, por exemplo, verificando se uma variável de ambiente "
"``NO_NETWORK`` está definida com um valor não vazio."

#: ../source/discussions/downstream-packaging.rst:199
msgid ""
"Since downstreams frequently also run tests and build documentation, the "
"above should ideally extend to these processes as well."
msgstr ""
"Como os downstreams frequentemente também executam testes e criam "
"documentação, o ideal é que o exposto acima se estenda também a esses "
"processos."

#: ../source/discussions/downstream-packaging.rst:202
msgid ""
"Please also remember that if you are fetching remote resources, you "
"absolutely must *verify their authenticity* (usually against a hash), to "
"protect against the file being substituted by a malicious party."
msgstr ""
"Lembre-se também de que, se você estiver buscando recursos remotos, será "
"absolutamente necessário *verificar a autenticidade deles* (geralmente por "
"meio de um hash) para evitar que o arquivo seja substituído por uma parte "
"mal-intencionada."

#: ../source/discussions/downstream-packaging.rst:210
msgid "Support building against system dependencies"
msgstr "Suporte à construção com dependências do sistema"

#: ../source/discussions/downstream-packaging.rst:215
msgid ""
"Some Python projects have non-Python dependencies, such as libraries written "
"in C or C++. Trying to use the system versions of these dependencies in "
"upstream packaging may cause a number of problems for end users:"
msgstr ""
"Alguns projetos Python possuem dependências que não são Python, como "
"bibliotecas escritas em C ou C++. Tentar usar as versões de sistema dessas "
"dependências em pacotes upstream pode causar uma série de problemas para os "
"usuários finais:"

#: ../source/discussions/downstream-packaging.rst:219
msgid ""
"The published wheels require a binary-compatible version of the used library "
"to be present on the user's system. If the library is missing or an "
"incompatible version is installed, the Python package may fail with errors "
"that are not clear to inexperienced users, or even misbehave at runtime."
msgstr ""
"As wheels publicadas exigem que uma versão binária compatível da biblioteca "
"utilizada esteja presente no sistema do usuário. Se a biblioteca estiver "
"ausente ou uma versão incompatível estiver instalada, o pacote Python poderá "
"falhar com erros que não são claros para usuários inexperientes, ou até "
"mesmo apresentar mau funcionamento em tempo de execução."

#: ../source/discussions/downstream-packaging.rst:224
msgid ""
"Building from a source distribution requires a source-compatible version of "
"the dependency to be present, along with its development headers and other "
"auxiliary files that some systems package separately from the library itself."
msgstr ""
"Construir a partir de uma distribuição fonte requer que uma versão "
"compatível com a origem da dependência esteja presente, juntamente com seus "
"cabeçalhos de desenvolvimento e outros arquivos auxiliares que alguns "
"sistemas empacotam separadamente da própria biblioteca."

#: ../source/discussions/downstream-packaging.rst:229
msgid ""
"Even for an experienced user, installing a compatible dependency version may "
"be very hard. For example, the used Linux distribution may not provide the "
"required version, or some other package may require an incompatible version."
msgstr ""
"Mesmo para um usuário experiente, instalar uma versão de dependência "
"compatível pode ser difícil. Por exemplo, a distribuição Linux utilizada "
"pode não prover a versão necessária, ou um pacote diferente pode exigir uma "
"versão incompatível."

#: ../source/discussions/downstream-packaging.rst:234
msgid ""
"The linkage between the Python package and its system dependency is not "
"recorded by the packaging system. The next system update may upgrade the "
"library to a newer version that breaks binary compatibility with the Python "
"package, and requires user intervention to fix."
msgstr ""
"A ligação entre o pacote Python e sua dependência do sistema não é "
"registrada pelo sistema de empacotamento. A próxima atualização do sistema "
"pode atualizar a biblioteca para uma versão mais recente, o que quebra a "
"compatibilidade binária com o pacote Python e requer intervenção do usuário "
"para correção."

#: ../source/discussions/downstream-packaging.rst:239
msgid ""
"For these reasons, you may reasonably decide to either statically link your "
"dependencies, or to provide local copies in the installed package. You may "
"also vendor the dependency in your source distribution. Sometimes these "
"dependencies are also repackaged on PyPI, and can be declared as project "
"dependencies like any other Python package."
msgstr ""
"Por esses motivos, você pode decidir, com razão, vincular suas dependências "
"estaticamente ou fornecer cópias locais no pacote instalado. Você também "
"pode vender a dependência na sua distribuição fonte. Às vezes, essas "
"dependências também são reempacotadas no PyPI e podem ser declaradas como "
"dependências de projeto, como qualquer outro pacote Python."

#: ../source/discussions/downstream-packaging.rst:245
msgid ""
"However, none of these issues apply to downstream packaging, and downstreams "
"have good reasons to prefer dynamically linking to system dependencies. In "
"particular:"
msgstr ""
"No entanto, nenhuma dessas questões se aplica ao empacotamento downstream, e "
"os downstreams têm bons motivos para preferir vincular dinamicamente às "
"dependências do sistema. Em particular:"

#: ../source/discussions/downstream-packaging.rst:249
msgid ""
"In many cases, reliably sharing dynamic dependencies between components is a "
"large part of the *purpose* of a downstream packaging ecosystem. Helping to "
"support that makes it easier for users of those systems to access upstream "
"projects in their preferred format."
msgstr ""
"Em muitos casos, o compartilhamento confiável de dependências dinâmicas "
"entre componentes é uma grande parte do *propósito* de um ecossistema de "
"empacotamento downstream. Ajudar a dar suporte a isso facilita o acesso dos "
"usuários desses sistemas a projetos upstream em seu formato preferido."

#: ../source/discussions/downstream-packaging.rst:253
msgid ""
"Static linking and vendoring obscures the use of external dependencies, "
"making source auditing harder."
msgstr ""
"A vinculação estática e a venda obscurecem o uso de dependências externas, "
"dificultando a auditoria da fonte."

#: ../source/discussions/downstream-packaging.rst:256
msgid ""
"Dynamic linking makes it possible to quickly and systematically replace the "
"used libraries across an entire downstream packaging ecosystem, which can be "
"particularly important when they turn out to contain a security "
"vulnerability or critical bug."
msgstr ""
"A vinculação dinâmica possibilita a substituição rápida e sistemática das "
"bibliotecas usadas em todo um ecossistema de empacotamento downstream, o que "
"pode ser particularmente importante quando elas contêm uma vulnerabilidade "
"de segurança ou um bug crítico."

#: ../source/discussions/downstream-packaging.rst:260
msgid ""
"Using system dependencies makes the package benefit from downstream "
"customization that can improve the user experience on a particular platform, "
"without the downstream maintainers having to consistently patch the "
"dependencies vendored in different packages. This can include compatibility "
"improvements and security hardening."
msgstr ""
"O uso de dependências do sistema faz com que o pacote se beneficie da "
"personalização posterior, o que pode melhorar a experiência do usuário em "
"uma plataforma específica, sem que os mantenedores posteriores precisem "
"aplicar patches constantemente nas dependências fornecidas em diferentes "
"pacotes. Isso pode incluir melhorias de compatibilidade e reforço da "
"segurança."

#: ../source/discussions/downstream-packaging.rst:266
msgid ""
"Static linking and vendoring can result in multiple different versions of "
"the same library being loaded in the same process (for example, attempting "
"to import two Python packages that link to different versions of the same "
"library). This sometimes works without incident, but it can also lead to "
"anything from library loading errors, to subtle runtime bugs, to "
"catastrophic failures (like suddenly crashing and losing data)."
msgstr ""
"A vinculação estática e a venda de versões podem resultar no carregamento de "
"várias versões diferentes da mesma biblioteca no mesmo processo (por "
"exemplo, ao tentar importar dois pacotes Python vinculados a versões "
"diferentes da mesma biblioteca). Isso às vezes funciona sem incidentes, mas "
"também pode levar a erros de carregamento de bibliotecas, bugs sutis de "
"tempo de execução e falhas catastróficas (como travamentos repentinos e "
"perda de dados)."

#: ../source/discussions/downstream-packaging.rst:273
msgid ""
"Last but not least, static linking and vendoring results in duplication, and "
"may increase the use of both disk space and memory."
msgstr ""
"Por último, mas não menos importante, a ligação estática e o fornecimento "
"resulta em duplicação, e pode aumentar o uso de espaço e memória de disco."

#: ../source/discussions/downstream-packaging.rst:279
msgid ""
"A good compromise between the needs of both parties is to provide a switch "
"between using vendored and system dependencies. Ideally, if the package has "
"multiple vendored dependencies, it should provide both individual switches "
"for each dependency, and a general switch to control the default for them, e."
"g. via a ``USE_SYSTEM_DEPS`` environment variable."
msgstr ""
"Um bom meio-termo entre as necessidades de ambas as partes é fornecer uma "
"alternância entre o uso de dependências do fornecedor e do sistema. "
"Idealmente, se o pacote tiver várias dependências do fornecedor, ele deve "
"fornecer alternâncias individuais para cada dependência e uma alternância "
"geral para controlar o padrão para elas, por exemplo, por meio de uma "
"variável de ambiente ``USE_SYSTEM_DEPS``."

#: ../source/discussions/downstream-packaging.rst:285
msgid ""
"If the user requests using system dependencies, and a particular dependency "
"is either missing or incompatible, the build should fail with an explanatory "
"message rather than fall back to a vendored version. This gives the packager "
"the opportunity to notice their mistake and a chance to consciously decide "
"how to solve it."
msgstr ""
"Se o usuário solicitar usando dependências do sistema e uma dependência "
"específica estiver ausente ou for incompatível, a construção deverá falhar "
"com uma mensagem explicativa, em vez de retornar a uma versão do fornecedor. "
"Isso dá ao empacotador a oportunidade de perceber o erro e decidir "
"conscientemente como resolvê-lo."

#: ../source/discussions/downstream-packaging.rst:291
msgid ""
"It is reasonable for upstream projects to leave *testing* of building with "
"system dependencies to their downstream repackagers. The goal of these "
"guidelines is to facilitate more effective collaboration between upstream "
"projects and downstream repackagers, not to suggest upstream projects take "
"on tasks that downstream repackagers are better equipped to handle."
msgstr ""
"É razoável que projetos upstream deixem os *testes* de construção com "
"dependências do sistema para seus reempacotadores downstream. O objetivo "
"destas diretrizes é facilitar uma colaboração mais eficaz entre projetos "
"upstream e reempacotadores downstream, e não sugerir que projetos upstream "
"assumam tarefas que os reempacotadores downstream estão mais bem equipados "
"para lidar."

#: ../source/discussions/downstream-packaging.rst:300
msgid "Support downstream testing"
msgstr "Ofereça suporte a testes no downstream"

#: ../source/discussions/downstream-packaging.rst:305
msgid ""
"A variety of downstream projects run some degree of testing on the packaged "
"Python projects. Depending on the particular case, this can range from "
"minimal smoke testing to comprehensive runs of the complete test suite. "
"There can be various reasons for doing this, for example:"
msgstr ""
"Diversos projetos downstream realizam algum grau de teste nos projetos "
"Python empacotados. Dependendo do caso específico, isso pode variar de "
"testes de fumaça mínimos a execuções abrangentes do conjunto de testes "
"completo. Pode haver vários motivos para isso, por exemplo:"

#: ../source/discussions/downstream-packaging.rst:310
msgid "Verifying that the downstream packaging did not introduce any bugs."
msgstr "Verificar se o empacotamento posterior não introduziu nenhum bug."

#: ../source/discussions/downstream-packaging.rst:312
msgid ""
"Testing on additional platforms that are not covered by upstream testing."
msgstr ""
"Testar em plataformas adicionais que não estão cobertas por testes upstream."

#: ../source/discussions/downstream-packaging.rst:314
msgid ""
"Finding subtle bugs that can only be reproduced with particular hardware, "
"system package versions, and so on."
msgstr ""
"Encontrando bugs sutis que só podem ser reproduzidos com hardware "
"específico, certas versões de pacotes de sistemas, e assim por diante."

#: ../source/discussions/downstream-packaging.rst:317
msgid ""
"Testing the released package against newer (or older) dependency versions "
"than the ones present during upstream release testing."
msgstr ""
"Testar o pacote lançado em relação a versões de dependência mais recentes "
"(ou mais antigas) do que as presentes durante os testes de versão upstream."

#: ../source/discussions/downstream-packaging.rst:320
msgid ""
"Testing the package in an environment closely resembling the production "
"setup. This can detect issues caused by non-trivial interactions between "
"different installed packages, including packages that are not dependencies "
"of your package, but nevertheless can cause issues."
msgstr ""
"Testar o pacote em um ambiente muito semelhante à configuração de produção. "
"Isso pode detectar problemas causados por interações não triviais entre "
"diferentes pacotes instalados, incluindo pacotes que não são dependências do "
"seu pacote, mas que, mesmo assim, podem causar problemas."

#: ../source/discussions/downstream-packaging.rst:325
msgid ""
"Testing the released package against newer Python versions (including newer "
"point releases), or less tested Python implementations such as PyPy."
msgstr ""
"Testar o pacote lançado em novas versões do Python (incluindo os pontos mais "
"recentes), ou implementações menos testadas do Python, como o PyPy."

#: ../source/discussions/downstream-packaging.rst:328
msgid ""
"Admittedly, sometimes downstream testing may yield false positives or bug "
"reports about scenarios the upstream project is not interested in "
"supporting. However, perhaps even more often it does provide early notice of "
"problems, or find non-trivial bugs that would otherwise cause issues for the "
"upstream project's users. While mistakes do happen, the majority of "
"downstream packagers are doing their best to double-check their results, and "
"help upstream maintainers triage and fix the bugs that they reported."
msgstr ""
"É verdade que, às vezes, testes downstream podem gerar falsos positivos ou "
"relatórios de bugs sobre cenários que o projeto upstream não tem interesse "
"em suportar. No entanto, talvez com ainda mais frequência, eles notificam "
"problemas com antecedência ou encontram bugs não triviais que, de outra "
"forma, causariam problemas para os usuários do projeto upstream. Embora "
"erros aconteçam, a maioria dos empacotadores downstream faz o possível para "
"verificar seus resultados e ajudar os mantenedores upstream a triar e "
"corrigir os bugs relatados."

#: ../source/discussions/downstream-packaging.rst:339
msgid ""
"There are a number of things that upstream projects can do to help "
"downstream repackagers test their packages efficiently and effectively, "
"including some of the suggestions already mentioned above. These are "
"typically improvements that make the test suite more reliable and easier to "
"use for everyone, not just downstream packagers. Some specific suggestions "
"are:"
msgstr ""
"Há uma série de medidas que os projetos upstream podem tomar para ajudar os "
"reempacotadores downstream a testar seus pacotes de forma eficiente e "
"eficaz, incluindo algumas das sugestões já mencionadas. Essas são, em geral, "
"melhorias que tornam o conjunto de testes mais confiável e fácil de usar "
"para todos, não apenas para os empacotadores downstream. Algumas sugestões "
"específicas são:"

#: ../source/discussions/downstream-packaging.rst:345
msgid ""
"Include the test files and fixtures in the source distribution, or make it "
"possible to easily download them separately."
msgstr ""
"Inclua os arquivos de teste e acessórios na distribuição fonte ou torne "
"possível baixá-los facilmente separadamente."

#: ../source/discussions/downstream-packaging.rst:348
msgid ""
"Do not write to the package directories during testing. Downstream test "
"setups sometimes run tests on top of the installed package, and "
"modifications performed during testing and temporary test files may end up "
"being part of the installed package!"
msgstr ""
"Não escreva nos diretórios de pacotes durante os testes. Às vezes, as "
"configurações de teste posteriores executam testes sobre o pacote instalado, "
"e modificações realizadas durante os testes e arquivos de teste temporários "
"podem acabar fazendo parte do pacote instalado!"

#: ../source/discussions/downstream-packaging.rst:353
msgid ""
"Make the test suite work offline. Mock network interactions, using packages "
"such as responses_ or vcrpy_. If that is not possible, make it possible to "
"easily disable the tests using Internet access, e.g. via a pytest_ marker. "
"Use pytest-socket_ to verify that your tests work offline. This often makes "
"your own test workflows faster and more reliable as well."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:359
msgid ""
"Make your tests work without a specialized setup, or perform the necessary "
"setup as part of test fixtures. Do not ever assume that you can connect to "
"system services such as databases — in an extreme case, you could crash a "
"production service!"
msgstr ""

#: ../source/discussions/downstream-packaging.rst:364
msgid ""
"If your package has optional dependencies, make their tests optional as "
"well. Either skip them if the needed packages are not installed, or add "
"markers to make deselecting easy."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:368
msgid ""
"More generally, add markers to tests with special requirements. These can "
"include e.g. significant space usage, significant memory usage, long "
"runtime, incompatibility with parallel testing."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:372
msgid ""
"Do not assume that the test suite will be run with ``-Werror``. Downstreams "
"often need to disable that, as it causes false positives, e.g. due to newer "
"dependency versions. Assert for warnings using ``pytest.warns()`` rather "
"than ``pytest.raises()``!"
msgstr ""

#: ../source/discussions/downstream-packaging.rst:377
msgid ""
"Aim to make your test suite reliable and reproducible. Avoid flaky tests. "
"Avoid depending on specific platform details, don't rely on exact results of "
"floating-point computation, or timing of operations, and so on. Fuzzing has "
"its advantages, but you want to have static test cases for completeness as "
"well."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:383
msgid ""
"Split tests by their purpose, and make it easy to skip categories that are "
"irrelevant or problematic. Since the primary purpose of downstream testing "
"is to ensure that the package itself works, downstreams are not generally "
"interested in tasks such as checking code coverage, code formatting, "
"typechecking or running benchmarks. These tests can fail as dependencies are "
"upgraded or the system is under load, without actually affecting the package "
"itself."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:390
msgid ""
"If your test suite takes significant time to run, support testing in "
"parallel. Downstreams often maintain a large number of packages, and testing "
"them all takes a lot of time. Using pytest-xdist_ can help them avoid "
"bottlenecks."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:395
msgid ""
"Ideally, support running your test suite via ``pytest``. pytest_ has many "
"command-line arguments that are truly helpful to downstreams, such as the "
"ability to conveniently deselect tests, rerun flaky tests (via pytest-"
"rerunfailures_), add a timeout to prevent tests from hanging (via pytest-"
"timeout_) or run tests in parallel (via pytest-xdist_). Note that test "
"suites don't need to be *written* with ``pytest`` to be *executed* with "
"``pytest``: ``pytest`` is able to find and execute almost all test cases "
"that are compatible with the standard library's ``unittest`` test discovery."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:409
#, fuzzy
msgid "Aim for stable releases"
msgstr "Publicando lançamentos"

#: ../source/discussions/downstream-packaging.rst:414
msgid ""
"Many downstreams provide stable release channels in addition to the main "
"package streams. The goal of these channels is to provide more conservative "
"upgrades to users with higher stability needs. These users often prefer to "
"trade having the newest features available for lower risk of issues."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:419
msgid ""
"While the exact policies differ, an important criterion for including a new "
"package version in a stable release channel is for it to be available in "
"testing for some time already, and have no known major regressions. For "
"example, in Gentoo Linux a package is usually marked stable after being "
"available in testing for a month, and being tested against the versions of "
"its dependencies that are marked stable at the time."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:426
msgid ""
"However, there are circumstances which demand more prompt action. For "
"example, if a security vulnerability or a major bug is found in the version "
"that is currently available in the stable channel, the downstream is facing "
"a need to resolve it. In this case, they need to consider various options, "
"such as:"
msgstr ""

#: ../source/discussions/downstream-packaging.rst:431
msgid "putting a new version in the stable channel early,"
msgstr ""

#: ../source/discussions/downstream-packaging.rst:433
#, fuzzy
msgid "adding patches to the version currently published,"
msgstr "adicionando patches à versão atualmente publicada,"

#: ../source/discussions/downstream-packaging.rst:435
msgid "or even downgrading the stable channel to an earlier release."
msgstr "ou até retornando o canal estável a uma versão anterior ao lançamento."

#: ../source/discussions/downstream-packaging.rst:437
msgid ""
"Each of these options involves certain risks and a certain amount of work, "
"and packagers needs to weigh them to determine the course of action."
msgstr ""
"Cada opção envolve certos riscos e certo trabalho, e os empacotadoes devem "
"ponderar suas opções para determinar seu curso de ação ."

#: ../source/discussions/downstream-packaging.rst:443
msgid ""
"There are some things that upstreams can do to tailor their workflow to "
"stable release channels. These actions often are beneficial to the package's "
"users as well. Some specific suggestions are:"
msgstr ""

#: ../source/discussions/downstream-packaging.rst:447
msgid ""
"Adjust the release frequency to the rate of code changes. Packages that are "
"released rarely often bring significant changes with every release, and a "
"higher risk of accidental regressions."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:451
msgid ""
"Avoid mixing bug fixes and new features, if possible. In particular, if "
"there are known bug fixes merged already, consider making a new release "
"before merging feature branches."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:455
msgid ""
"Consider making prereleases after major changes, to provide more testing "
"opportunities for users and downstreams willing to opt-in."
msgstr ""
"Considere fazer pré-lançamentos após grandes mudanças, provendo assim mais "
"oportunidade de teste para usuários e pessoas interessadas."

#: ../source/discussions/downstream-packaging.rst:458
msgid ""
"If your project is subject to very intense development, consider splitting "
"one or more branches that include a more conservative subset of commits, and "
"are released separately. For example, Django_ currently maintains three "
"release branches in addition to main."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:463
msgid ""
"Even if you don't wish to maintain additional branches permanently, consider "
"making additional patch releases with minimal changes to the previous "
"version, especially when a security vulnerability is discovered."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:467
msgid ""
"Split your changes into focused commits that address one problem at a time, "
"to make it easier to cherry-pick changes to earlier releases when necessary."
msgstr ""

#: ../source/discussions/index.rst:4
msgid ""
"**Discussions** are focused on providing comprehensive information about a "
"specific topic. If you're just trying to get stuff done, see :doc:`/guides/"
"index`."
msgstr ""
"**Discussões** têm como objetivo fornecer informações abrangentes sobre um "
"tópico específico. Se você está apenas tentando fazer as coisas, veja :doc:`/"
"guides/index`."

#: ../source/discussions/install-requires-vs-requirements.rst:5
msgid "install_requires vs requirements files"
msgstr "install_requires vs arquivos requirements"

#: ../source/discussions/install-requires-vs-requirements.rst:9
msgid "install_requires"
msgstr "install_requires"

#: ../source/discussions/install-requires-vs-requirements.rst:11
msgid ""
"``install_requires`` is a :ref:`setuptools` :file:`setup.py` keyword that "
"should be used to specify what a project **minimally** needs to run "
"correctly. When the project is installed by :ref:`pip`, this is the "
"specification that is used to install its dependencies."
msgstr ""
"``install_requires`` é uma palavra-chave de :file:`setup.py` do :ref:"
"`setuptools` que deve ser usada para especificar o que um projeto "
"**minimamente** precisa para executar corretamente. Quando o projeto é "
"instalado por :ref:`pip`, esta é a especificação que é usada para instalar "
"suas dependências."

#: ../source/discussions/install-requires-vs-requirements.rst:16
msgid ""
"For example, if the project requires A and B, your ``install_requires`` "
"would be like so:"
msgstr ""
"Por exemplo, se o projeto requer A e B, seu ``install_requires`` seria assim:"

#: ../source/discussions/install-requires-vs-requirements.rst:26
msgid ""
"Additionally, it's best practice to indicate any known lower or upper bounds."
msgstr ""
"Além disso, é uma prática recomendada indicar qualquer limite inferior ou "
"superior conhecido."

#: ../source/discussions/install-requires-vs-requirements.rst:28
msgid ""
"For example, it may be known, that your project requires at least v1 of 'A', "
"and v2 of 'B', so it would be like so:"
msgstr ""
"Por exemplo, pode-se saber que seu projeto requer pelo menos v1 de \"A\" e "
"v2 de \"B\", então seria assim:"

#: ../source/discussions/install-requires-vs-requirements.rst:38
msgid ""
"It may also be known that project 'A' introduced a change in its v2 that "
"breaks the compatibility of your project with v2 of 'A' and later, so it "
"makes sense to not allow v2:"
msgstr ""
"Também pode ser sabido que o projeto 'A' introduziu uma alteração em sua v2 "
"que quebra a compatibilidade do seu projeto com a v2 de 'A' e posteriores, "
"portanto, faz sentido não permitir a v2:"

#: ../source/discussions/install-requires-vs-requirements.rst:49
msgid ""
"It is not considered best practice to use ``install_requires`` to pin "
"dependencies to specific versions, or to specify sub-dependencies (i.e. "
"dependencies of your dependencies).  This is overly-restrictive, and "
"prevents the user from gaining the benefit of dependency upgrades."
msgstr ""
"Não é considerada a melhor prática usar ``install_requires`` para fixar "
"dependências em versões específicas, ou para especificar subdependências (ou "
"seja, dependências de suas dependências). Isso é excessivamente restritivo e "
"evita que o usuário obtenha o benefício de atualizações de dependência."

#: ../source/discussions/install-requires-vs-requirements.rst:54
msgid ""
"Lastly, it's important to understand that ``install_requires`` is a listing "
"of \"Abstract\" requirements, i.e just names and version restrictions that "
"don't determine where the dependencies will be fulfilled from (i.e. from "
"what index or source).  The where (i.e. how they are to be made "
"\"Concrete\") is to be determined at install time using :ref:`pip` options. "
"[1]_"
msgstr ""
"Por último, é importante entender que ``install_requires`` é uma lista de "
"requisitos \"abstratos\", ou seja, apenas nomes e restrições de versão que "
"não determinam de onde as dependências serão preenchidas (ou seja, de qual "
"índice ou fonte). O local (ou seja, como eles devem ser feitos de "
"\"concreto\") deve ser determinado no momento da instalação usando as "
"opções :ref:`pip`. [1]_"

#: ../source/discussions/install-requires-vs-requirements.rst:62
#: ../source/tutorials/installing-packages.rst:464
msgid "Requirements files"
msgstr "Arquivos de requisitos"

#: ../source/discussions/install-requires-vs-requirements.rst:64
msgid ""
":ref:`Requirements Files <pip:Requirements Files>` described most simply, "
"are just a list of :ref:`pip:pip install` arguments placed into a file."
msgstr ""
":ref:`Arquivos de requisitos <pip:Requirements Files>` descritos de forma "
"mais simples, são apenas uma lista de argumentos :ref:`pip:pip install` "
"colocados em um arquivo."

#: ../source/discussions/install-requires-vs-requirements.rst:67
msgid ""
"Whereas ``install_requires`` defines the dependencies for a single project, :"
"ref:`Requirements Files <pip:Requirements Files>` are often used to define "
"the requirements for a complete Python environment."
msgstr ""
"Considerando que ``install_requires`` define as dependências para um único "
"projeto, :ref:`arquivos de requisitos <pip:Requirements Files>` são "
"frequentemente usados para definir os requisitos para um ambiente Python "
"completo."

#: ../source/discussions/install-requires-vs-requirements.rst:71
msgid ""
"Whereas ``install_requires`` requirements are minimal, requirements files "
"often contain an exhaustive listing of pinned versions for the purpose of "
"achieving :ref:`repeatable installations <pip:Repeatability>` of a complete "
"environment."
msgstr ""
"Considerando que os requisitos de ``install_requires`` são mínimos, os "
"arquivos de requisitos frequentemente contêm uma lista exaustiva de versões "
"fixadas com o propósito de alcançar :ref:`instalações repetíveis <pip:"
"Repeatability>` de um ambiente completo."

#: ../source/discussions/install-requires-vs-requirements.rst:76
msgid ""
"Whereas ``install_requires`` requirements are \"Abstract\", i.e. not "
"associated with any particular index, requirements files often contain pip "
"options like ``--index-url`` or ``--find-links`` to make requirements "
"\"Concrete\", i.e. associated with a particular index or directory of "
"packages. [1]_"
msgstr ""
"Considerando que os requisitos de ``install_requires`` são \"abstratos\", ou "
"seja, não estão associados a nenhum índice em particular, os arquivos de "
"requisitos geralmente contêm opções de pip como ``--index-url`` ou ``--find-"
"links`` para fazer requisitos \"concreto \", isto é, associado a um "
"determinado índice ou diretório de pacotes. [1]_"

#: ../source/discussions/install-requires-vs-requirements.rst:82
msgid ""
"Whereas ``install_requires`` metadata is automatically analyzed by pip "
"during an install, requirements files are not, and only are used when a user "
"specifically installs them using ``python -m pip install -r``."
msgstr ""
"Enquanto os metadados ``install_requires`` são automaticamente analisados "
"pelo pip durante uma instalação, os arquivos de requisitos não são, e são "
"usados apenas quando um usuário os instala especificamente usando ``python -"
"m pip install -r``."

#: ../source/discussions/install-requires-vs-requirements.rst:88
msgid ""
"For more on \"Abstract\" vs \"Concrete\" requirements, see https://caremad."
"io/posts/2013/07/setup-vs-requirement/."
msgstr ""
"Para obter mais informações sobre os requisitos \"abstratos\" vs "
"\"concretos\", consulte https://caremad.io/posts/2013/07/setup-vs-"
"requirement/."

#: ../source/discussions/package-formats.rst:5
msgid "Package Formats"
msgstr "Formatos de Pacotes"

#: ../source/discussions/package-formats.rst:7
msgid ""
"This page discusses the file formats that are used to distribute Python "
"packages and the differences between them."
msgstr ""
"Esta página discute os formatos de arquivo usados para distribuir pacotes "
"Python e as diferenças entre eles."

#: ../source/discussions/package-formats.rst:10
msgid ""
"You will find files in two formats on package indices such as PyPI_: "
"**source distributions**, or **sdists** for short, and **binary "
"distributions**, commonly called **wheels**.  For example, the `PyPI page "
"for pip 23.3.1 <pip-pypi_>`_ lets you download two files, ``pip-23.3.1.tar."
"gz`` and ``pip-23.3.1-py3-none-any.whl``.  The former is an sdist, the "
"latter is a wheel. As explained below, these serve different purposes. When "
"publishing a package on PyPI (or elsewhere), you should always upload both "
"an sdist and one or more wheel."
msgstr ""
"Você encontrará arquivos em dois formatos em índices de pacotes como PyPI_: "
"**distribuições fonte**, ou a abreviação **sdists**, e **distribuições "
"binárias**, comumente chamadas de **wheels**. Por exemplo, a `página PyPI "
"para pip 23.3.1 <pip-pypi_>`_ permite baixar dois arquivos, ``pip-23.3.1.tar."
"gz`` e ``pip-23.3.1-py3-none-any.whl``. O primeiro é um sdist, o último é "
"uma wheel. Conforme explicado abaixo, eles têm finalidades diferentes. Ao "
"publicar um pacote no PyPI (ou em outro lugar), você deve sempre enviar um "
"sdist e um ou mais wheel."

#: ../source/discussions/package-formats.rst:21
msgid "What is a source distribution?"
msgstr "O que é uma distribuição fonte?"

#: ../source/discussions/package-formats.rst:23
msgid ""
"Conceptually, a source distribution is an archive of the source code in raw "
"form. Concretely, an sdist is a ``.tar.gz`` archive containing the source "
"code plus an additional special file called ``PKG-INFO``, which holds the "
"project metadata. The presence of this file helps packaging tools to be more "
"efficient by not needing to compute the metadata themselves. The ``PKG-"
"INFO`` file follows the format specified in :ref:`core-metadata` and is not "
"intended to be written by hand [#core-metadata-format]_."
msgstr ""
"Conceitualmente, uma distribuição fonte é um arquivo do código-fonte em "
"formato bruto. Concretamente, um sdist é um arquivo ``.tar.gz`` contendo o "
"código-fonte mais um arquivo especial adicional chamado ``PKG-INFO``, que "
"contém os metadados do projeto. A presença desse arquivo ajuda as "
"ferramentas de empacotamento a serem mais eficientes, pois não precisam "
"calcular os próprios metadados. O arquivo ``PKG-INFO`` segue o formato "
"especificado em :ref:`core-metadata` e não se destina a ser escrito à mão "
"[#core-metadata-format]_."

#: ../source/discussions/package-formats.rst:31
msgid ""
"You can thus inspect the contents of an sdist by unpacking it using standard "
"tools to work with tar archives, such as ``tar -xvf`` on UNIX platforms "
"(like Linux and macOS), or :ref:`the command line interface of Python's "
"tarfile module <python:tarfile-commandline>` on any platform."
msgstr ""
"Você pode, portanto, operar o conteúdo de um sdist descompactando-o usando "
"ferramentas padrão para trabalhar com arquivos tar, como ``tar -xvf`` em "
"plataformas UNIX (como Linux e macOS), ou :ref:`a interface de linha de "
"comando do módulo tarfile do Python <python:tarfile-commandline>` em "
"qualquer plataforma."

#: ../source/discussions/package-formats.rst:36
msgid ""
"Sdists serve several purposes in the packaging ecosystem. When :ref:`pip`, "
"the standard Python package installer, cannot find a wheel to install, it "
"will fall back on downloading a source distribution, compiling a wheel from "
"it, and installing the wheel. Furthermore, sdists are often used as the "
"package source by downstream packagers (such as Linux distributions, Conda, "
"Homebrew and MacPorts on macOS, ...), who, for various reasons, may prefer "
"them over, e.g., pulling from a Git repository."
msgstr ""
"Os sdists servem a vários propósitos no ecossistema de embalagens. Quando :"
"ref:`pip`, o instalador padrão do pacote Python, não consegue encontrar um "
"wheel para instalar, ele recorrerá ao download de uma distribuição fonte, "
"compilando um wheel a partir dela e instalando o wheel. Além disso, os "
"sdists são frequentemente usados como fonte de pacote por empacotadores "
"downstream (como distribuições Linux, Conda, Homebrew e MacPorts no "
"macOS, ...), que, por vários motivos, podem preferi-los, por exemplo, "
"extraindo de um repositório Git."

#: ../source/discussions/package-formats.rst:44
msgid ""
"A source distribution is recognized by its file name, which has the form :"
"samp:`{package_name}-{version}.tar.gz`, e.g., ``pip-23.3.1.tar.gz``."
msgstr ""
"Uma distribuição fonte é reconhecida pelo seu nome de arquivo, que tem o "
"formato :samp:`{nome_do_pacote}-{versão}.tar.gz`, por exemplo, ``pip-23.3.1."
"tar.gz``."

#: ../source/discussions/package-formats.rst:50
msgid ""
"If you want technical details on the sdist format, read the :ref:`sdist "
"specification <source-distribution-format>`."
msgstr ""
"Se você quiser detalhes técnicos sobre o formato sdist, leia a :ref:"
"`especificação de sdist <source-distribution-format>`."

#: ../source/discussions/package-formats.rst:55
msgid "What is a wheel?"
msgstr "O que é um wheel?"

#: ../source/discussions/package-formats.rst:57
msgid ""
"Conceptually, a wheel contains exactly the files that need to be copied when "
"installing the package."
msgstr ""
"Conceitualmente, um wheel contém exatamente os arquivos que precisam ser "
"copiados durante a instalação do pacote."

#: ../source/discussions/package-formats.rst:60
msgid ""
"There is a big difference between sdists and wheels for packages with :term:"
"`extension modules <extension module>`, written in compiled languages like "
"C, C++ and Rust, which need to be compiled into platform-dependent machine "
"code. With these packages, wheels do not contain source code (like C source "
"files) but compiled, executable code (like ``.so`` files on Linux or DLLs on "
"Windows)."
msgstr ""
"Há uma grande diferença entre sdists e wheels para pacotes com :term:"
"`módulos de extensão <módulo de extensão>`, escritos em linguagens "
"compiladas como C, C++ e Rust, que precisam ser compilados em código de "
"máquina dependente de plataforma. Com esses pacotes, as rodas não contêm "
"código fonte (como arquivos fonte C), mas código executável compilado (como "
"arquivos ``.so`` no Linux ou DLLs no Windows)."

#: ../source/discussions/package-formats.rst:66
msgid ""
"Furthermore, while there is only one sdist per version of a project, there "
"may be many wheels. Again, this is most relevant in the context of extension "
"modules. The compiled code of an extension module is tied to an operating "
"system and processor architecture, and often also to the version of the "
"Python interpreter (unless the :ref:`Python stable ABI <cpython-stable-abi>` "
"is used)."
msgstr ""
"Além disso, embora exista apenas um sdist por versão de um projeto, pode "
"haver muitos wheels. Novamente, isto é mais relevante no contexto dos "
"módulos de extensão. O código compilado de um módulo de extensão está "
"vinculado a um sistema operacional e arquitetura de processador, e muitas "
"vezes também à versão do interpretador Python (a menos que a :ref:`ABI "
"estável do Python <cpython-stable-abi>` seja usada)."

#: ../source/discussions/package-formats.rst:72
msgid ""
"For pure-Python packages, the difference between sdists and wheels is less "
"marked. There is normally one single wheel, for all platforms and Python "
"versions.  Python is an interpreted language, which does not need ahead-of-"
"time compilation, so wheels contain ``.py`` files just like sdists."
msgstr ""
"Para pacotes Python puro, a diferença entre sdists e wheels é menos "
"acentuada. Normalmente existe um único wheel, para todas as plataformas e "
"versões do Python. Python é uma linguagem interpretada, que não precisa de "
"compilação antecipada, então wheels contêm arquivos ``.py`` assim como "
"sdists."

#: ../source/discussions/package-formats.rst:77
msgid ""
"If you are wondering about ``.pyc`` bytecode files: they are not included in "
"wheels, since they are cheap to generate, and including them would "
"unnecessarily force a huge number of packages to distribute one wheel per "
"Python version instead of one single wheel. Instead, installers like :ref:"
"`pip` generate them while installing the package."
msgstr ""
"Se você está se perguntando sobre os arquivos de bytecode ``.pyc``: eles não "
"estão incluídos nos wheels, pois são pouco custoso para gerar, e incluí-los "
"forçaria desnecessariamente um grande número de pacotes a distribuir um "
"wheel por versão do Python em vez de um único wheel. Em vez disso, "
"instaladores como :ref:`pip` os geram durante a instalação do pacote."

#: ../source/discussions/package-formats.rst:83
msgid ""
"With that being said, there are still important differences between sdists "
"and wheels, even for pure Python projects. Wheels are meant to contain "
"exactly what is to be installed, and nothing more. In particular, wheels "
"should never include tests and documentation, while sdists commonly do.  "
"Also, the wheel format is more complex than sdist. For example, it includes "
"a special file -- called ``RECORD`` -- that lists all files in the wheel "
"along with a hash of their content, as a safety check of the download's "
"integrity."
msgstr ""
"Dito isto, ainda existem diferenças importantes entre sdists e wheels, mesmo "
"para projetos Python puros. Os wheels devem conter exatamente o que será "
"instalado e nada mais. Em particular, os wheels nunca devem incluir testes e "
"documentação, ao contrário dos sdists. Além disso, o formato do wheel é mais "
"complexo que o sdist. Por exemplo, inclui um arquivo especial -- chamado "
"``RECORD`` -- que lista todos os arquivos no wheel junto com um hash de seu "
"conteúdo, como uma verificação de segurança da integridade do download."

#: ../source/discussions/package-formats.rst:91
msgid ""
"At a glance, you might wonder if wheels are really needed for \"plain and "
"basic\" pure Python projects. Keep in mind that due to the flexibility of "
"sdists, installers like pip cannot install from sdists directly -- they need "
"to first build a wheel, by invoking the :term:`build backend` that the sdist "
"specifies (the build backend may do all sorts of transformations while "
"building the wheel, such as compiling C extensions). For this reason, even "
"for a pure Python project, you should always upload *both* an sdist and a "
"wheel to PyPI or other package indices. This makes installation much faster "
"for your users, since a wheel is directly installable. By only including "
"files that must be installed, wheels also make for smaller downloads."
msgstr ""
"À primeira vista, você pode se perguntar se wheels são realmente necessários "
"para projetos \"simples e básicos\" de Python puro. Tenha em mente que "
"devido à flexibilidade dos sdists, instaladores como o pip não podem "
"instalar diretamente a partir dos sdists -- eles precisam primeiro construir "
"um wheel, invocando o :term:`backend de construção` que o sdist especifica "
"(o backend de construção pode fazer todo tipo de transformações durante a "
"construção do wheel, como compilar extensões C). Por esse motivo, mesmo para "
"um projeto Python puro, você deve sempre enviar *ambos* sdist e wheel para o "
"PyPI ou outros índices de pacotes. Isso torna a instalação muito mais rápida "
"para seus usuários, já que um wheel pode ser instalado diretamente. Ao "
"incluir apenas os arquivos que devem ser instalados, os wheels também "
"permitem downloads menores."

#: ../source/discussions/package-formats.rst:102
msgid ""
"On the technical level, a wheel is a ZIP archive (unlike sdists which are "
"TAR archives). You can inspect its contents by unpacking it as a normal ZIP "
"archive, e.g., using ``unzip`` on UNIX platforms like Linux and macOS, "
"``Expand-Archive`` in Powershell on Windows, or :ref:`the command line "
"interface of Python's zipfile module <python:zipfile-commandline>`. This can "
"be very useful to check that the wheel includes all the files you need it to."
msgstr ""
"No nível técnico, um wheel é um arquivo ZIP (ao contrário dos sdists que são "
"arquivos TAR). Você pode inspecionar seu conteúdo descompactando-o como um "
"arquivo ZIP normal, por exemplo, usando ``unzip`` em plataformas UNIX como "
"Linux e macOS, ``Expand-Archive`` no PowerShell no Windows, ou :ref:`a linha "
"de comando interface do módulo zipfile do Python <python:zipfile-"
"commandline>`. Isso pode ser muito útil para verificar se o wheel inclui "
"todos os arquivos necessários."

#: ../source/discussions/package-formats.rst:109
msgid ""
"Inside a wheel, you will find the package's files, plus an additional "
"directory called :samp:`{package_name}-{version}.dist-info`. This directory "
"contains various files, including a ``METADATA`` file which is the "
"equivalent of ``PKG-INFO`` in sdists, as well as ``RECORD``. This can be "
"useful to ensure no files are missing from your wheels."
msgstr ""
"Dentro de um wheel, você encontrará os arquivos do pacote, além de um "
"diretório adicional chamado :samp:`{nome_do_pacote}-{versão}.dist-info`. "
"Este diretório contém vários arquivos, incluindo um arquivo ``METADATA`` que "
"é equivalente a ``PKG-INFO`` em sdists, bem como ``RECORD``. Isso pode ser "
"útil para garantir que nenhum arquivo esteja faltando em suas rodas."

#: ../source/discussions/package-formats.rst:115
msgid ""
"The file name of a wheel (ignoring some rarely used features) looks like "
"this: :samp:`{package_name}-{version}-{python_tag}-{abi_tag}-{platform_tag}."
"whl`. This naming convention identifies which platforms and Python versions "
"the wheel is compatible with. For example, the name ``pip-23.3.1-py3-none-"
"any.whl`` means that:"
msgstr ""
"O nome do arquivo de um wheel (ignorando alguns recursos raramente usados) é "
"assim: :samp:`{nome_do_pacote}-{versão}-{tag_python}-{tag_abi}-"
"{tag_plataforma}.whl`. Esta convenção de nomenclatura identifica com quais "
"plataformas e versões do Python a roda é compatível. Por exemplo, o nome "
"``pip-23.3.1-py3-none-any.whl`` significa que:"

#: ../source/discussions/package-formats.rst:121
msgid ""
"(``py3``) This wheel can be installed on any implementation of Python 3, "
"whether CPython, the most widely used Python implementation, or an "
"alternative implementation like PyPy_;"
msgstr ""
"(``py3``) Este wheel pode ser instalado em qualquer implementação do Python "
"3, seja CPython, a implementação Python mais usada, ou uma implementação "
"alternativa como PyPy_;"

#: ../source/discussions/package-formats.rst:124
msgid "(``none``) It does not depend on the Python version;"
msgstr "(``none``) Não depende da versão do Python;"

#: ../source/discussions/package-formats.rst:125
msgid "(``any``) It does not depend on the platform."
msgstr "(``qualquer``) Não depende da plataforma."

#: ../source/discussions/package-formats.rst:127
msgid ""
"The pattern ``py3-none-any`` is common for pure Python projects. Packages "
"with extension modules typically ship multiple wheels with more complex tags."
msgstr ""
"O padrão ``py3-none-any`` é comum para projetos Python puros. Pacotes com "
"módulos de extensão normalmente enviam vários wheels com tags mais complexas."

#: ../source/discussions/package-formats.rst:130
msgid ""
"All technical details on the wheel format can be found in the :ref:`wheel "
"specification <binary-distribution-format>`."
msgstr ""
"Todos os detalhes técnicos sobre o formato do wheel podem ser encontrados "
"na :ref:`especificação de wheels <binary-distribution-format>`."

#: ../source/discussions/package-formats.rst:138
msgid "What about eggs?"
msgstr "E quanto a eggs?"

#: ../source/discussions/package-formats.rst:140
msgid ""
"\"Egg\" is an old package format that has been replaced with the wheel "
"format.  It should not be used anymore. Since August 2023, PyPI `rejects egg "
"uploads <pypi-eggs-deprecation_>`_."
msgstr ""
"\"Egg\" é um formato de pacote antigo que foi substituído pelo formato de "
"wheels. Não deve mais ser usado. Desde agosto de 2023, o PyPI `rejeita "
"envios de eggs <pypi-eggs-deprecation_>`_."

#: ../source/discussions/package-formats.rst:144
msgid "Here's a breakdown of the important differences between wheel and egg."
msgstr "Aqui está uma análise das diferenças importantes entre wheel e egg."

#: ../source/discussions/package-formats.rst:146
msgid ""
"The egg format was introduced by :ref:`setuptools` in 2004, whereas the "
"wheel format was introduced by :pep:`427` in 2012."
msgstr ""
"O formato egg foi introduzido pelo :ref:`setuptools` em 2004, enquanto o "
"formato wheel foi introduzido pela :pep:`427` em 2012."

#: ../source/discussions/package-formats.rst:149
msgid ""
"Wheel has an :doc:`official standard specification </specifications/binary-"
"distribution-format>`. Egg did not."
msgstr ""
"Wheel tem uma :doc:`especificação de padrão oficial </specifications/binary-"
"distribution-format>`. Egg não tinha."

#: ../source/discussions/package-formats.rst:152
msgid ""
"Wheel is a :term:`distribution <Distribution Package>` format, i.e a "
"packaging format. [#wheel-importable]_ Egg was both a distribution format "
"and a runtime installation format (if left zipped), and was designed to be "
"importable."
msgstr ""
"Wheel é um formato de :term:`distribuição <Distribution Package>`, ou seja, "
"um formato de empacotamento. [#wheel-importable]_ Egg era um formato de "
"distribuição e um formato de instalação em tempo de execução (se deixado "
"compactado), e foi projetado para ser importável."

#: ../source/discussions/package-formats.rst:156
msgid ""
"Wheel archives do not include ``.pyc`` files. Therefore, when the "
"distribution only contains Python files (i.e. no compiled extensions), and "
"is compatible with Python 2 and 3, it's possible for a wheel to be "
"\"universal\", similar to an :term:`sdist <Source Distribution (or "
"\"sdist\")>`."
msgstr ""
"Os arquivos wheel não incluem arquivos ``.pyc``. Portanto, quando a "
"distribuição contém apenas arquivos Python (ou seja, sem extensões "
"compiladas) e é compatível com Python 2 e 3, é possível que um wheel seja "
"\"universal\", semelhante a um :term:`sdist <Source Distribution (or "
"\"sdist\")>`."

#: ../source/discussions/package-formats.rst:161
msgid ""
"Wheel uses standard :ref:`.dist-info directories <recording-installed-"
"packages>`.  Egg used ``.egg-info``."
msgstr ""
"Wheel usa :ref:`diretórios .dist-info <recording-installed-packages>` "
"padrões. Egg usava ``.egg-info``."

#: ../source/discussions/package-formats.rst:164
msgid ""
"Wheel has a :ref:`richer file naming convention <wheel-file-name-spec>`. A "
"single wheel archive can indicate its compatibility with a number of Python "
"language versions and implementations, ABIs, and system architectures."
msgstr ""
"Wheel tem uma :ref:`convenção de nomenclatura de arquivo mais rica <wheel-"
"file-name-spec>`. Um único arquivo de wheel pode indicar sua compatibilidade "
"com várias versões e implementações da linguagem Python, ABIs e arquiteturas "
"de sistema."

#: ../source/discussions/package-formats.rst:168
msgid ""
"Wheel is versioned. Every wheel file contains the version of the wheel "
"specification and the implementation that packaged it."
msgstr ""
"Wheel é versionado. Cada arquivo wheel contém a versão da especificação "
"wheel e a implementação que a empacotou."

#: ../source/discussions/package-formats.rst:171
msgid ""
"Wheel is internally organized by `sysconfig path type <https://docs.python."
"org/2/library/sysconfig.html#installation-paths>`_, therefore making it "
"easier to convert to other formats."
msgstr ""
"Wheel é internamente organizado pelo `tipo de caminho sysconfig <https://"
"docs.python.org/2/library/sysconfig.html#installation-paths>`_, portanto "
"tornando mais fácil converter para outros formatos."

#: ../source/discussions/package-formats.rst:177
msgid ""
"This format is email-based. Although this would be unlikely to be chosen "
"today, backwards compatibility considerations lead to it being kept as the "
"canonical format. From the user point of view, this is mostly invisible, "
"since the metadata is specified by the user in a way understood by the build "
"backend, typically ``[project]`` in ``pyproject.toml``, and translated by "
"the build backend into ``PKG-INFO``."
msgstr ""
"Este formato é baseado em e-mail. Embora seja improvável que isso seja "
"escolhido hoje, considerações de compatibilidade com versões anteriores "
"levam a que ele seja mantido como formato canônico. Do ponto de vista do "
"usuário, isso é praticamente invisível, já que os metadados são "
"especificados pelo usuário de uma forma compreendida pelo backend de "
"construção, normalmente ``[project]`` em ``pyproject.toml``, e traduzidos "
"pelo backend de construção em ``PKG-INFO``."

#: ../source/discussions/package-formats.rst:184
msgid ""
"Circumstantially, in some cases, wheels can be used as an importable runtime "
"format, although :ref:`this is not officially supported at this time <binary-"
"distribution-format-import-wheel>`."
msgstr ""
"Circunstancialmente, em alguns casos, wheels podem ser usados como um "
"formato de tempo de execução importável, embora :ref:`não haja suporte "
"oficial a isso no momento <binary-distribution-format-import-wheel>`."

#: ../source/discussions/pip-vs-easy-install.rst:6
msgid "pip vs easy_install"
msgstr "pip vs easy_install"

#: ../source/discussions/pip-vs-easy-install.rst:9
msgid ""
":ref:`easy_install <easy_install>`, now `deprecated`_, was released in 2004 "
"as part of :ref:`setuptools`. It was notable at the time for installing :"
"term:`packages <Distribution Package>` from :term:`PyPI <Python Package "
"Index (PyPI)>` using requirement specifiers, and automatically installing "
"dependencies."
msgstr ""
":ref:`easy_install <easy_install>`, agora `descontinuado`_, foi lançado em "
"2004 como parte do :ref:`setuptools`. Era notável na época para instalar :"
"term:`pacotes <Distribution Package>` do :term:`PyPI <Python Package Index "
"(PyPI)>` usando especificadores de requisitos e instalando dependências "
"automaticamente."

#: ../source/discussions/pip-vs-easy-install.rst:14
#, fuzzy
#| msgid ""
#| ":ref:`pip` came later in 2008, as alternative to :ref:`easy_install "
#| "<easy_install>`, although still largely built on top of :ref:`setuptools` "
#| "components.  It was notable at the time for *not* installing packages as :"
#| "term:`Eggs <Egg>` or from :term:`Eggs <Egg>` (but rather simply as 'flat' "
#| "packages from :term:`sdists <Source Distribution (or \"sdist\")>`), and "
#| "introducing the idea of :ref:`Requirements Files <pip:Requirements "
#| "Files>`, which gave users the power to easily replicate environments."
msgid ""
":ref:`pip` came later in 2008, as an alternative to :ref:`easy_install "
"<easy_install>`, although still largely built on top of :ref:`setuptools` "
"components.  It was notable at the time for *not* installing packages as :"
"term:`Eggs <Egg>` or from :term:`Eggs <Egg>` (but rather simply as 'flat' "
"packages from :term:`sdists <Source Distribution (or \"sdist\")>`), and "
"introducing the idea of :ref:`Requirements Files <pip:Requirements Files>`, "
"which gave users the power to easily replicate environments."
msgstr ""
"O :ref:`pip` veio mais tarde em 2008, como alternativa ao :ref:`easy_install "
"<easy_install>`, embora ainda amplamente construído sobre os componentes :"
"ref:`setuptools`. Era notável na época por *não* instalar pacotes como :term:"
"`Eggs <Egg>` ou de :term:`Eggs <Egg>` (mas simplesmente como pacotes "
"\"planos\" de :term:`sdists <Source Distribution (or \"sdist\")>`), e "
"introduzindo a ideia de :ref:`Arquivos de Requisitos <pip:Requirements "
"Files>`, que deu aos usuários o poder de replicar ambientes facilmente."

#: ../source/discussions/pip-vs-easy-install.rst:22
msgid ""
"Here's a breakdown of the important differences between pip and the "
"deprecated easy_install:"
msgstr ""
"Aqui está uma análise das diferenças importantes entre o pip e o "
"descontinuado easy_install:"

#: ../source/discussions/pip-vs-easy-install.rst:25
msgid "**pip**"
msgstr "**pip**"

#: ../source/discussions/pip-vs-easy-install.rst:25
msgid "**easy_install**"
msgstr "**easy_install**"

#: ../source/discussions/pip-vs-easy-install.rst:27
msgid "Installs from :term:`Wheels <Wheel>`"
msgstr "Instala de :term:`Wheels <Wheel>`"

#: ../source/discussions/pip-vs-easy-install.rst:27
#: ../source/discussions/pip-vs-easy-install.rst:38
#: ../source/discussions/pip-vs-easy-install.rst:44
#: ../source/discussions/pip-vs-easy-install.rst:48
#: ../source/discussions/pip-vs-easy-install.rst:54
#: ../source/discussions/pip-vs-easy-install.rst:57
msgid "Yes"
msgstr "Sim"

#: ../source/discussions/pip-vs-easy-install.rst:27
#: ../source/discussions/pip-vs-easy-install.rst:30
#: ../source/discussions/pip-vs-easy-install.rst:32
#: ../source/discussions/pip-vs-easy-install.rst:35
#: ../source/discussions/pip-vs-easy-install.rst:38
#: ../source/discussions/pip-vs-easy-install.rst:44
#: ../source/discussions/pip-vs-easy-install.rst:48
#: ../source/discussions/pip-vs-easy-install.rst:51
#: ../source/discussions/pip-vs-easy-install.rst:54
#: ../source/discussions/pip-vs-easy-install.rst:57
msgid "No"
msgstr "Não"

#: ../source/discussions/pip-vs-easy-install.rst:30
msgid "Uninstall Packages"
msgstr "Desinstala pacotes"

#: ../source/discussions/pip-vs-easy-install.rst:30
msgid "Yes (``python -m pip uninstall``)"
msgstr "Sim (``python -m pip uninstall``)"

#: ../source/discussions/pip-vs-easy-install.rst:32
msgid "Dependency Overrides"
msgstr "Substitui dependências"

#: ../source/discussions/pip-vs-easy-install.rst:32
msgid "Yes (:ref:`Requirements Files <pip:Requirements Files>`)"
msgstr "Sim (:ref:`Arquivo de Requisitos <pip:Requirements Files>`)"

#: ../source/discussions/pip-vs-easy-install.rst:35
msgid "List Installed Packages"
msgstr "Lista pacotes instalados"

#: ../source/discussions/pip-vs-easy-install.rst:35
msgid "Yes (``python -m pip list`` and ``python -m pip freeze``)"
msgstr "Sim (``python -m pip list`` e ``python -m pip freeze``)"

#: ../source/discussions/pip-vs-easy-install.rst:38
msgid ":pep:`438` Support"
msgstr "Suporte a :pep:`438`"

#: ../source/discussions/pip-vs-easy-install.rst:41
msgid "Installation format"
msgstr "Formato de instalação"

#: ../source/discussions/pip-vs-easy-install.rst:41
msgid "'Flat' packages with :file:`egg-info` metadata."
msgstr "Pacotes \"planos\" com metadados de :file:`egg-info`."

#: ../source/discussions/pip-vs-easy-install.rst:41
msgid "Encapsulated Egg format"
msgstr "Formato Egg encapsulado"

#: ../source/discussions/pip-vs-easy-install.rst:44
msgid "sys.path modification"
msgstr "Modificação de sys.path"

#: ../source/discussions/pip-vs-easy-install.rst:48
msgid "Installs from :term:`Eggs <Egg>`"
msgstr "Instala de :term:`Eggs <Egg>`"

#: ../source/discussions/pip-vs-easy-install.rst:51
msgid "`pylauncher support`_"
msgstr "`suporte a pylauncher`_"

#: ../source/discussions/pip-vs-easy-install.rst:51
msgid "Yes [1]_"
msgstr "Sim [1]_"

#: ../source/discussions/pip-vs-easy-install.rst:54
msgid ":ref:`Multi-version Installs`"
msgstr ":ref:`Instalações multiversões <Multi-version Installs>`"

#: ../source/discussions/pip-vs-easy-install.rst:57
msgid "Exclude scripts during install"
msgstr "Exclui scripts durante a instalação"

#: ../source/discussions/pip-vs-easy-install.rst:60
msgid "per project index"
msgstr "índice por projeto"

#: ../source/discussions/pip-vs-easy-install.rst:60
msgid "Only in virtualenv"
msgstr "Apenas em virtualenv"

#: ../source/discussions/pip-vs-easy-install.rst:60
msgid "Yes, via setup.cfg"
msgstr "Sim, via setup.cfg"

#: ../source/discussions/pip-vs-easy-install.rst:68
msgid ""
"https://setuptools.readthedocs.io/en/latest/deprecated/easy_install."
"html#natural-script-launcher"
msgstr ""
"https://setuptools.readthedocs.io/en/latest/deprecated/easy_install."
"html#natural-script-launcher"

#: ../source/discussions/setup-py-deprecated.rst:6
msgid "Is ``setup.py`` deprecated?"
msgstr "``setup.py`` foi descontinuado?"

#: ../source/discussions/setup-py-deprecated.rst:8
msgid "No, :term:`setup.py` and :ref:`setuptools` are not deprecated."
msgstr "Não, :term:`setup.py` e :ref:`setuptools` não foram descontinuados."

#: ../source/discussions/setup-py-deprecated.rst:10
msgid ""
"Setuptools is perfectly usable as a :term:`build backend` for packaging "
"Python projects. And :file:`setup.py` is a valid configuration file for :ref:"
"`setuptools` that happens to be written in Python, instead of in *TOML* for "
"example (a similar practice is used by other tools like *nox* and its :file:"
"`noxfile.py` configuration file, or *pytest* and :file:`conftest.py`)."
msgstr ""
"Setuptools é perfeitamente utilizável como um :term:`backend de construção` "
"para empacotar projetos Python. E :file:`setup.py` é um arquivo de "
"configuração válido para :ref:`setuptools` que é escrito em Python, em vez "
"de em *TOML* por exemplo (uma prática semelhante é usada por outras "
"ferramentas como *nox* e seu arquivo de configuração :file:`noxfile.py`, ou "
"*pytest* e :file:`conftest.py`)."

#: ../source/discussions/setup-py-deprecated.rst:18
msgid ""
"However, ``python setup.py`` and the use of :file:`setup.py` as a command "
"line tool are deprecated."
msgstr ""
"No entanto, ``python setup.py`` e o uso de :file:`setup.py` como uma "
"ferramenta de linha de comando foram descontinuados."

#: ../source/discussions/setup-py-deprecated.rst:21
msgid ""
"This means that commands such as the following **MUST NOT** be run anymore:"
msgstr ""
"Isso significa que comandos como os seguintes **NÃO DEVEM** ser mais "
"executados:"

#: ../source/discussions/setup-py-deprecated.rst:23
#: ../source/discussions/setup-py-deprecated.rst:35
#: ../source/guides/modernize-setup-py-project.rst:32
msgid "``python setup.py install``"
msgstr "``python setup.py install``"

#: ../source/discussions/setup-py-deprecated.rst:24
#: ../source/discussions/setup-py-deprecated.rst:37
#: ../source/guides/modernize-setup-py-project.rst:34
msgid "``python setup.py develop``"
msgstr "``python setup.py develop``"

#: ../source/discussions/setup-py-deprecated.rst:25
#: ../source/discussions/setup-py-deprecated.rst:39
#: ../source/guides/modernize-setup-py-project.rst:36
msgid "``python setup.py sdist``"
msgstr "``python setup.py sdist``"

#: ../source/discussions/setup-py-deprecated.rst:26
#: ../source/discussions/setup-py-deprecated.rst:41
#: ../source/guides/modernize-setup-py-project.rst:38
msgid "``python setup.py bdist_wheel``"
msgstr "``python setup.py bdist_wheel``"

#: ../source/discussions/setup-py-deprecated.rst:30
msgid "What commands should be used instead?"
msgstr "Quais comandos devem ser usados?"

#: ../source/discussions/setup-py-deprecated.rst:33
#: ../source/guides/modernize-setup-py-project.rst:30
msgid "Deprecated"
msgstr "Descontinuado"

#: ../source/discussions/setup-py-deprecated.rst:33
#: ../source/guides/modernize-setup-py-project.rst:30
msgid "Recommendation"
msgstr "Recomendação"

#: ../source/discussions/setup-py-deprecated.rst:35
#: ../source/guides/modernize-setup-py-project.rst:32
msgid "``python -m pip install .``"
msgstr "``python -m pip install .``"

#: ../source/discussions/setup-py-deprecated.rst:37
#: ../source/guides/modernize-setup-py-project.rst:34
msgid "``python -m pip install --editable .``"
msgstr "``python -m pip install --editable .``"

#: ../source/discussions/setup-py-deprecated.rst:39
msgid "``python -m build`` [#needs-build]_"
msgstr "``python -m build`` [#needs-build]_"

#: ../source/discussions/setup-py-deprecated.rst:45
msgid ""
"This requires the :ref:`build` dependency. It is recommended to always build "
"and publish both the source distribution and wheel of a project, which is "
"what ``python -m build`` does. If necessary the ``--sdist`` and ``--wheel`` "
"options can be used to generate only one or the other."
msgstr ""
"Isto requer a dependência de :ref:`build`. É recomendado sempre construir e "
"publicar tanto a distribuição fonte quanto a wheel de um projeto, que é o "
"que ``python -m build`` faz. Se necessário as opções ``--sdist`` e ``--"
"wheel`` podem ser usadas para gerar apenas uma ou outra."

#: ../source/discussions/setup-py-deprecated.rst:52
msgid ""
"In order to install a setuptools based project, it was common to run :file:"
"`setup.py`'s ``install`` command such as: ``python setup.py install``. "
"Nowadays, the recommended method is to use :ref:`pip` directly with a "
"command like this one: ``python -m pip install .``. Where the dot ``.`` is "
"actually a file system path, it is the path notation for the current "
"directory. Indeed, *pip* accepts a path to a project's source tree directory "
"on the local filesystem as argument to its ``install`` sub-command. So this "
"would also be a valid command: ``python -m pip install path/to/project``."
msgstr ""
"Para instalar um projeto baseado no setuptools, era comum executar o comando "
"``install`` do arquivo :file:`setup.py`, como, por exemplo, ``python setup."
"py install``. Atualmente, o método recomendado é utilizar o :ref:`pip` "
"diretamente com um comando como este: ``python -m pip install .``. O ponto "
"``.`` representa o caminho do sistema de arquivos, sendo a notação para o "
"diretório atual. De fato, o *pip* aceita um caminho para o diretório da "
"árvore de fontes do projeto no sistema de arquivos local como argumento para "
"o seu subcomando ``install``. Portanto, este também seria um comando válido: "
"``python -m pip install caminho/para/projeto``."

#: ../source/discussions/setup-py-deprecated.rst:65
msgid ""
"As for the installation in *develop* mode aka *editable* mode, instead of "
"``python setup.py develop`` one can use the ``--editable`` option of pip's "
"*install* sub-command: ``python -m pip install --editable .``."
msgstr ""
"Quanto à instalação no modo *develop*, também conhecido como modo "
"*editable*, em vez de ``python setup.py develop``, é possível utilizar a "
"opção ``--editable`` do subcomando *install* do *pip* da seguinte forma: "
"``python -m pip install --editable .``."

#: ../source/discussions/setup-py-deprecated.rst:70
msgid ""
"One recommended, simple, and straightforward method of building :term:"
"`source distributions <Source Distribution (or \"sdist\")>` and :term:"
"`wheels <Wheel>` is to use the :ref:`build` tool with a command like "
"``python -m build`` which triggers the generation of both distribution "
"formats. If necessary the ``--sdist`` and ``--wheel`` options can be used to "
"generate only one or the other. Note that the build tool needs to be "
"installed separately."
msgstr ""
"Um método recomendado, simples e direto para construir :term:`distribuições "
"fonte <Source Distribution (or \"sdist\")>` e :term:`wheels <Wheel>` é usar "
"a ferramenta :ref:`build` com um comando como ``python -m build``, que "
"aciona a geração de ambos os formatos de distribuição. Se necessário, as "
"opções ``--sdist`` e ``--wheel`` podem ser usadas para gerar apenas um ou "
"outro. Observe que a ferramenta de construção precisa ser instalada "
"separadamente."

#: ../source/discussions/setup-py-deprecated.rst:80
msgid ""
"The command ``python setup.py install`` was deprecated in setuptools version "
"*58.3.0*."
msgstr ""
"O comando ``python setup.py install`` foi descontinuado na versão *58.3.0* "
"do setuptools."

#: ../source/discussions/setup-py-deprecated.rst:85
msgid "What about other commands?"
msgstr "E quanto a outros comandos?"

#: ../source/discussions/setup-py-deprecated.rst:87
msgid "What are some replacements for the other ``python setup.py`` commands?"
msgstr ""
"Quais são algumas substituições para os outros comandos ``python setup.py``?"

#: ../source/discussions/setup-py-deprecated.rst:91
msgid "``python setup.py test``"
msgstr "``python setup.py test``"

#: ../source/discussions/setup-py-deprecated.rst:93
msgid "The recommendation is to use a test runner such as pytest_."
msgstr "A recomendação é usar um executor de testes como pytest_."

#: ../source/discussions/setup-py-deprecated.rst:99
msgid ""
"``python setup.py check``, ``python setup.py register``, and ``python setup."
"py upload``"
msgstr ""
"``python setup.py check``, ``python setup.py register`` e ``python setup.py "
"upload``"

#: ../source/discussions/setup-py-deprecated.rst:101
msgid "A trusted replacement is :ref:`twine`:"
msgstr "Um substituto confiável é :ref:`twine`:"

#: ../source/discussions/setup-py-deprecated.rst:103
msgid "``python -m twine check --strict dist/*``"
msgstr "``python -m twine check --strict dist/*``"

#: ../source/discussions/setup-py-deprecated.rst:104
msgid "``python -m twine register dist/*.whl`` [#not-pypi]_"
msgstr "``python -m twine register dist/*.whl`` [#not-pypi]_"

#: ../source/discussions/setup-py-deprecated.rst:105
msgid "``python -m twine upload dist/*``"
msgstr "``python -m twine upload dist/*``"

#: ../source/discussions/setup-py-deprecated.rst:107
msgid ""
"Not necessary, nor supported on :term:`PyPI <Python Package Index (PyPI)>`. "
"But might be necessary on other :term:`package indexes <package index>` (for "
"example :ref:`devpi`)."
msgstr ""
"Não é necessário, nem suportado em :term:`PyPI <Python Package Index "
"(PyPI)>`. Mas pode ser necessário em outros :term:`índices de pacotes "
"<package index>` (por exemplo, :ref:`devpi`)."

#: ../source/discussions/setup-py-deprecated.rst:112
msgid "``python setup.py --version``"
msgstr "``python setup.py --version``"

#: ../source/discussions/setup-py-deprecated.rst:114
msgid ""
"A possible replacement solution (among others) is to rely on setuptools-scm_:"
msgstr ""
"Uma possível solução de substituição (entre outras) é contar com setuptools-"
"scm_:"

#: ../source/discussions/setup-py-deprecated.rst:116
msgid "``python -m setuptools_scm``"
msgstr "``python -m setuptools_scm``"

#: ../source/discussions/setup-py-deprecated.rst:122
msgid "Remaining commands"
msgstr "Comandos restantes"

#: ../source/discussions/setup-py-deprecated.rst:124
msgid ""
"This guide does not make suggestions of replacement solutions for those "
"commands:"
msgstr ""
"Este guia não faz sugestões de soluções de substituição para esses comandos:"

#: ../source/discussions/setup-py-deprecated.rst:129
msgid "``alias``"
msgstr "``alias``"

#: ../source/discussions/setup-py-deprecated.rst:130
msgid "``bdist``"
msgstr "``bdist``"

#: ../source/discussions/setup-py-deprecated.rst:131
msgid "``bdist_dumb``"
msgstr "``bdist_dumb``"

#: ../source/discussions/setup-py-deprecated.rst:132
msgid "``bdist_egg``"
msgstr "``bdist_egg``"

#: ../source/discussions/setup-py-deprecated.rst:133
msgid "``bdist_rpm``"
msgstr "``bdist_rpm``"

#: ../source/discussions/setup-py-deprecated.rst:134
msgid "``build``"
msgstr "``build``"

#: ../source/discussions/setup-py-deprecated.rst:135
msgid "``build_clib``"
msgstr "``build_clib``"

#: ../source/discussions/setup-py-deprecated.rst:136
msgid "``build_ext``"
msgstr "``build_ext``"

#: ../source/discussions/setup-py-deprecated.rst:137
msgid "``build_py``"
msgstr "``build_py``"

#: ../source/discussions/setup-py-deprecated.rst:138
msgid "``build_scripts``"
msgstr "``build_scripts``"

#: ../source/discussions/setup-py-deprecated.rst:139
msgid "``clean``"
msgstr "``clean``"

#: ../source/discussions/setup-py-deprecated.rst:140
msgid "``dist_info``"
msgstr "``dist_info``"

#: ../source/discussions/setup-py-deprecated.rst:141
msgid "``easy_install``"
msgstr "``easy_install``"

#: ../source/discussions/setup-py-deprecated.rst:142
msgid "``editable_wheel``"
msgstr "``editable_wheel``"

#: ../source/discussions/setup-py-deprecated.rst:143
msgid "``egg_info``"
msgstr "``egg_info``"

#: ../source/discussions/setup-py-deprecated.rst:144
msgid "``install_data``"
msgstr "``install_data``"

#: ../source/discussions/setup-py-deprecated.rst:145
msgid "``install_egg_info``"
msgstr "``install_egg_info``"

#: ../source/discussions/setup-py-deprecated.rst:146
msgid "``install_headers``"
msgstr "``install_headers``"

#: ../source/discussions/setup-py-deprecated.rst:147
msgid "``install_lib``"
msgstr "``install_lib``"

#: ../source/discussions/setup-py-deprecated.rst:148
msgid "``install_scripts``"
msgstr "``install_scripts``"

#: ../source/discussions/setup-py-deprecated.rst:149
msgid "``rotate``"
msgstr "``rotate``"

#: ../source/discussions/setup-py-deprecated.rst:150
msgid "``saveopts``"
msgstr "``saveopts``"

#: ../source/discussions/setup-py-deprecated.rst:151
msgid "``setopt``"
msgstr "``setopt``"

#: ../source/discussions/setup-py-deprecated.rst:152
msgid "``upload_docs``"
msgstr "``upload_docs``"

#: ../source/discussions/setup-py-deprecated.rst:156
msgid "What about custom commands?"
msgstr "E quanto aos comandos personalizados?"

#: ../source/discussions/setup-py-deprecated.rst:158
msgid ""
"Likewise, custom :file:`setup.py` commands are deprecated. The "
"recommendation is to migrate those custom commands to a task runner tool or "
"any other similar tool. Some examples of such tools are: chuy, make, nox or "
"tox, pydoit, pyinvoke, taskipy, and thx."
msgstr ""
"Da mesma forma, os comandos personalizados no :file:`setup.py` foram "
"descontinuados. A recomendação é migrar esses comandos personalizados para "
"uma ferramenta executora de tarefas ou qualquer outra ferramenta semelhante. "
"Alguns exemplos de tais ferramentas são: chuy, make, nox ou tox, pydoit, "
"pyinvoke, taskipy e thx."

#: ../source/discussions/setup-py-deprecated.rst:166
msgid "What about custom build steps?"
msgstr "E quanto às etapas personalizadas de construção?"

#: ../source/discussions/setup-py-deprecated.rst:168
msgid ""
"Custom build steps that for example either overwrite existing steps such as "
"``build_py``, ``build_ext``, and ``bdist_wheel`` or add new build steps are "
"not deprecated. Those will be automatically called as expected."
msgstr ""
"Etapas personalizadas de construção que, por exemplo, sobrescrevem etapas "
"existentes como ``build_py``, ``build_ext`` e ``bdist_wheel`` ou adicionam "
"novas etapas de compilação não foram descontinuadas. Eles serão chamados "
"automaticamente conforme o esperado."

#: ../source/discussions/setup-py-deprecated.rst:175
#: ../source/guides/modernize-setup-py-project.rst:21
msgid "Should ``setup.py`` be deleted?"
msgstr "Deve o ``setup.py`` ser excluído?"

#: ../source/discussions/setup-py-deprecated.rst:177
msgid ""
"Although the usage of :file:`setup.py` as an executable script is "
"deprecated, its usage as a configuration file for setuptools is absolutely "
"fine. There is likely no modification needed in :file:`setup.py`."
msgstr ""
"Embora o uso de :file:`setup.py` como um script executável tenha sido "
"descontinuado, seu uso como um arquivo de configuração para setuptools é "
"absolutamente aceitável. Provavelmente não há necessidade de modificação em :"
"file:`setup.py`."

#: ../source/discussions/setup-py-deprecated.rst:183
msgid "Is ``pyproject.toml`` mandatory?"
msgstr "``pyproject.toml`` é obrigatório?"

#: ../source/discussions/setup-py-deprecated.rst:185
msgid ""
"While it is not technically necessary yet, it is **STRONGLY RECOMMENDED** "
"for a project to have a :file:`pyproject.toml` file at the root of its "
"source tree with a content like this:"
msgstr ""
"Embora ainda não seja tecnicamente necessário, é **FORTEMENTE RECOMENDADO** "
"que um projeto tenha um arquivo :file:`pyproject.toml` na raiz de sua árvore "
"de fontes com um conteúdo como este:"

#: ../source/discussions/setup-py-deprecated.rst:196
msgid ""
"The guide :ref:`modernize-setup-py-project` has more details about this."
msgstr "O guia :ref:`modernize-setup-py-project` tem mais detalhes sobre isso."

#: ../source/discussions/setup-py-deprecated.rst:198
msgid ""
"The standard fallback behavior for a :term:`build frontend <Build Frontend>` "
"in the absence of a :file:`pyproject.toml` file and its ``[build-system]`` "
"table is to assume that the :term:`build backend <Build Backend>` is "
"setuptools."
msgstr ""
"O comportamento de fallback padrão para um :term:`frontend de construção "
"<Build Frontend>` na ausência de um arquivo :file:`pyproject.toml` e sua "
"tabela ``[build-system]`` é assumir que o :term:`backend de construção "
"<Build Backend>` é o setuptools."

#: ../source/discussions/setup-py-deprecated.rst:204
msgid "Why? What does it all mean?"
msgstr "Por que? O que isso tudo quer dizer?"

#: ../source/discussions/setup-py-deprecated.rst:206
msgid ""
"One way to look at it is that the scope of setuptools has now been reduced "
"to the role of a build backend."
msgstr ""
"Uma maneira de ver isso é que o escopo do setuptools agora foi reduzido à "
"função de um backend de construção."

#: ../source/discussions/setup-py-deprecated.rst:211
#: ../source/guides/modernize-setup-py-project.rst:244
msgid "Where to read more about this?"
msgstr "Onde posso ler mais sobre isso?"

#: ../source/discussions/setup-py-deprecated.rst:213
msgid ""
"`Why you shouldn't invoke setup.py directly <https://blog.ganssle.io/"
"articles/2021/10/setup-py-deprecated.html>`__ by Paul Ganssle"
msgstr ""
"`Por que você não deveria invocar setup.py diretamemente <https://blog."
"ganssle.io/articles/2021/10/setup-py-deprecated.html>`__ (inglês) por Paul "
"Ganssle"

#: ../source/discussions/setup-py-deprecated.rst:215
msgid ":doc:`setuptools:deprecated/commands`"
msgstr ":doc:`setuptools:deprecated/commands`"

#: ../source/discussions/single-source-version.rst:5
msgid "Single-sourcing the Project Version"
msgstr "Mantendo uma única fonte da versão do pacote"

#: ../source/discussions/single-source-version.rst:7
msgid "Complete"
msgstr "Completa"

#: ../source/discussions/single-source-version.rst:8
msgid "2024-10-07"
msgstr "2024-10-07"

#: ../source/discussions/single-source-version.rst:10
msgid ""
"Many Python :term:`distribution packages <Distribution Package>` publish a "
"single Python :term:`import package <Import Package>` where it is desired "
"that the runtime ``__version__`` attribute on the import package report the "
"same version specifier as :func:`importlib.metadata.version` reports for the "
"distribution package (as described in :ref:`runtime-version-access`)."
msgstr ""
"Muitos :term:`pacotes de distribuição <Distribution Package>` Python "
"publicam um único :term:`pacote de importação <Import Package>` Python onde "
"é desejado que o atributo de tempo de execução ``__version__`` no pacote de "
"importação relate o mesmo especificador de versão que :func:`importlib."
"metadata.version` relata para o pacote de distribuição (conforme descrito "
"em :ref:`runtime-version-access`)."

#: ../source/discussions/single-source-version.rst:16
msgid ""
"It is also frequently desired that this version information be derived from "
"a version control system *tag* (such as ``v1.2.3``) rather than being "
"manually updated in the source code."
msgstr ""

#: ../source/discussions/single-source-version.rst:20
msgid ""
"Some projects may choose to simply live with the data entry duplication, and "
"rely on automated testing to ensure the different values do not diverge."
msgstr ""

#: ../source/discussions/single-source-version.rst:23
#, fuzzy
#| msgid ""
#| "There are many techniques to maintain a single source of truth for the "
#| "version number of your project:"
msgid ""
"Alternatively, a project's chosen build system may offer a way to define a "
"single source of truth for the version number."
msgstr ""
"Existem muitas técnicas para manter uma única fonte para o número de versão "
"do seu projeto:"

#: ../source/discussions/single-source-version.rst:26
msgid "In general, the options are:"
msgstr ""

#: ../source/discussions/single-source-version.rst:28
msgid ""
"If the code is in a version control system (VCS), such as Git, then the "
"version can be extracted from the VCS."
msgstr ""

#: ../source/discussions/single-source-version.rst:30
msgid ""
"The version can be hard-coded into the :file:`pyproject.toml` file -- and "
"the build system can copy it into other locations it may be required."
msgstr ""

#: ../source/discussions/single-source-version.rst:33
msgid ""
"The version string can be hard-coded into the source code -- either in a "
"special purpose file, such as :file:`_version.txt` (which must then be "
"shipped as part of the project's source distribution package), or as an "
"attribute in a particular module, such as :file:`__init__.py`. The build "
"system can then extract it from the runtime location at build time."
msgstr ""

#: ../source/discussions/single-source-version.rst:38
msgid "Consult your build system's documentation for their recommended method."
msgstr ""

#: ../source/discussions/single-source-version.rst:40
msgid ""
"When the intention is that a distribution package and its associated import "
"package share the same version, it is recommended that the project include "
"an automated test case that ensures ``import_name.__version__`` and "
"``importlib.metadata.version(\"dist-name\")`` report the same value (note: "
"for many projects, ``import_name`` and ``dist-name`` will be the same name)."
msgstr ""

#: ../source/discussions/single-source-version.rst:50
msgid "Build System Version Handling"
msgstr ""

#: ../source/discussions/single-source-version.rst:52
msgid ""
"The following are links to some build system's documentation for handling "
"version strings."
msgstr ""

#: ../source/discussions/single-source-version.rst:54
#, fuzzy
#| msgid "`Flatpak <https://flatpak.org/>`_"
msgid "`Flit <https://flit.pypa.io/en/stable/>`_"
msgstr "`Flatpak <https://flatpak.org/>`_"

#: ../source/discussions/single-source-version.rst:56
#, fuzzy
#| msgid "`Apache <https://httpd.apache.org/>`_"
msgid "`Hatchling <https://hatch.pypa.io/1.9/version/>`_"
msgstr "`Apache <https://httpd.apache.org/>`_"

#: ../source/discussions/single-source-version.rst:58
msgid ""
"`PDM <https://pdm-project.org/en/latest/reference/pep621/#__tabbed_1_2>`_"
msgstr ""

#: ../source/discussions/single-source-version.rst:60
msgid ""
"`Setuptools <https://setuptools.pypa.io/en/latest/userguide/pyproject_config."
"html#dynamic-metadata>`_"
msgstr ""

#: ../source/discussions/single-source-version.rst:62
#, fuzzy
msgid "`setuptools_scm <https://setuptools-scm.readthedocs.io/en/latest/>`_"
msgstr "`Flexx <http://flexx.readthedocs.io/en/latest/>`_"

#: ../source/discussions/src-layout-vs-flat-layout.rst:5
msgid "src layout vs flat layout"
msgstr "layout src vs layout plano"

#: ../source/discussions/src-layout-vs-flat-layout.rst:7
msgid ""
"The \"flat layout\" refers to organising a project's files in a folder or "
"repository, such that the various configuration files and :term:`import "
"packages <Import Package>` are all in the top-level directory."
msgstr ""
"O \"layout plano\" (em inglês, *flat layout*) refere-se à organização dos "
"arquivos de um projeto em uma pasta ou repositório, de forma que os vários "
"arquivos de configuração e :term:`pacotes de importação <Import Package>` "
"estejam todos no diretório de nível superior."

#: ../source/discussions/src-layout-vs-flat-layout.rst:25
msgid ""
"The \"src layout\" deviates from the flat layout by moving the code that is "
"intended to be importable (i.e. ``import awesome_package``, also known as :"
"term:`import packages <Import Package>`) into a subdirectory. This "
"subdirectory is typically named ``src/``, hence \"src layout\"."
msgstr ""
"O \"layout src\" (em inglês, *layout src*)se desvia do layout plano movendo "
"o código que se destina a ser importável (ou seja, ``import "
"awesome_package``, também conhecido como :term:`pacotes de importação "
"<Import Package>`) para um subdiretório. Este subdiretório é normalmente "
"chamado de ``src/``, daí \"layout src\"."

#: ../source/discussions/src-layout-vs-flat-layout.rst:45
msgid ""
"Here's a breakdown of the important behaviour differences between the src "
"layout and the flat layout:"
msgstr ""
"Aqui está uma análise das diferenças de comportamento importantes entre o "
"layout src e o layout plano:"

#: ../source/discussions/src-layout-vs-flat-layout.rst:48
msgid ""
"The src layout requires installation of the project to be able to run its "
"code, and the flat layout does not."
msgstr ""
"O layout src requer a instalação do projeto para poder executar seu código, "
"e o layout plano não."

#: ../source/discussions/src-layout-vs-flat-layout.rst:51
msgid ""
"This means that the src layout involves an additional step in the "
"development workflow of a project (typically, an :doc:`editable installation "
"<setuptools:userguide/development_mode>` is used for development and a "
"regular installation is used for testing)."
msgstr ""
"Isso significa que o layout src envolve uma etapa adicional no fluxo de "
"trabalho de desenvolvimento de um projeto (normalmente, uma :doc:`instalação "
"editável <setuptools:userguide/development_mode>` é usada para "
"desenvolvimento e uma instalação regular é usada para teste) ."

#: ../source/discussions/src-layout-vs-flat-layout.rst:56
msgid ""
"The src layout helps prevent accidental usage of the in-development copy of "
"the code."
msgstr ""
"O layout src ajuda a evitar o uso acidental da cópia em desenvolvimento do "
"código."

#: ../source/discussions/src-layout-vs-flat-layout.rst:59
msgid ""
"This is relevant since the Python interpreter includes the current working "
"directory as the first item on the import path. This means that if an import "
"package exists in the current working directory with the same name as an "
"installed import package, the variant from the current working directory "
"will be used. This can lead to subtle  misconfiguration of the project's "
"packaging tooling, which could result in files not being included in a "
"distribution."
msgstr ""
"Isso é relevante, pois o interpretador Python inclui o diretório de trabalho "
"atual como o primeiro item no caminho de importação. Isso significa que se "
"existir um pacote de importação no diretório de trabalho atual com o mesmo "
"nome de um pacote de importação instalado, a variante do diretório de "
"trabalho atual será usada. Isso pode levar a uma configuração incorreta "
"sutil das ferramentas de empacotamento do projeto, o que pode resultar na "
"não inclusão de arquivos em uma distribuição."

#: ../source/discussions/src-layout-vs-flat-layout.rst:66
msgid ""
"The src layout helps avoid this by keeping import packages in a directory "
"separate from the root directory of the project, ensuring that the installed "
"copy is used."
msgstr ""
"O layout src ajuda a evitar isso mantendo os pacotes de importação em um "
"diretório separado do diretório raiz do projeto, garantindo que a cópia "
"instalada seja usada."

#: ../source/discussions/src-layout-vs-flat-layout.rst:70
msgid ""
"The src layout helps enforce that an :doc:`editable installation <setuptools:"
"userguide/development_mode>` is only able to import files that were meant to "
"be importable."
msgstr ""
"O layout src ajuda a reforçar que uma :doc:`instalação editável <setuptools:"
"userguide/development_mode>` só é capaz de importar arquivos que deveriam "
"ser importados."

#: ../source/discussions/src-layout-vs-flat-layout.rst:74
msgid ""
"This is especially relevant when the editable installation is implemented "
"using a `path configuration file <https://docs.python.org/3/library/site."
"html#index-2>`_ that adds the directory to the import path."
msgstr ""
"Isso é especialmente relevante quando a instalação editável é implementada "
"usando um `arquivo de configuração de caminho <https://docs.python.org/pt-"
"br/3/library/site.html#index-2>`_ que adiciona o diretório ao caminho de "
"importação."

#: ../source/discussions/src-layout-vs-flat-layout.rst:78
msgid ""
"The flat layout would add the other project files (eg: ``README.md``, ``tox."
"ini``) and packaging/tooling configuration files (eg: ``setup.py``, "
"``noxfile.py``) on the import path. This would make certain imports work in "
"editable installations but not regular installations."
msgstr ""
"O layout plano adicionaria os outros arquivos de projeto (por exemplo: "
"``README.md``, ``tox.ini``) e arquivos de configuração de pacotes/"
"ferramentas (por exemplo: ``setup.py``, ``noxfile.py``) no caminho de "
"importação. Isso faria com que certas importações funcionassem em "
"instalações editáveis, mas não em instalações regulares."

#: ../source/discussions/src-layout-vs-flat-layout.rst:86
msgid "Running a command-line interface from source with src-layout"
msgstr "Executando uma interface de linha de comando da fonte com src-layout"

#: ../source/discussions/src-layout-vs-flat-layout.rst:88
msgid ""
"Due to the firstly mentioned specialty of the src layout, a command-line "
"interface can not be run directly from the :term:`source tree <Project "
"Source Tree>`, but requires installation of the package in :doc:`Development "
"Mode <setuptools:userguide/development_mode>` for testing purposes. Since "
"this can be unpractical in some situations, a workaround could be to prepend "
"the package folder to  Python's :py:data:`sys.path` when called via its :"
"file:`__main__.py` file:"
msgstr ""

#: ../source/discussions/versioning.rst:6
#: ../source/specifications/simple-repository-api.rst:349
msgid "Versioning"
msgstr "Versionamento"

#: ../source/discussions/versioning.rst:8
msgid "This discussion covers all aspects of versioning Python packages."
msgstr ""
"Esta discussão cobre todos os aspectos do versionamento de pacotes Python."

#: ../source/discussions/versioning.rst:12
msgid "Valid version numbers"
msgstr "Números de versão validos"

#: ../source/discussions/versioning.rst:14
msgid ""
"Different Python projects may use different versioning schemes based on the "
"needs of that particular project, but in order to be compatible with tools "
"like :ref:`pip`, all of them are required to comply with a flexible format "
"for version identifiers, for which the authoritative reference is the :ref:"
"`specification of version specifiers <version-specifiers>`. Here are some "
"examples of version numbers [#version-examples]_:"
msgstr ""
"Diferentes projetos Python podem usar diferentes esquemas de versionamento "
"com base nas necessidades daquele projeto específico, mas para serem "
"compatíveis com ferramentas como :ref:`pip`, todos eles são obrigados a "
"cumprir um formato flexível para identificadores de versão, para o qual a "
"referência oficial é a :ref:`especificação dos especificadores de versão "
"<version-specifiers>`. Aqui estão alguns exemplos de números de versão "
"[#version-examples]_:"

#: ../source/discussions/versioning.rst:21
msgid "A simple version (final release): ``1.2.0``"
msgstr "Uma versão simples (versão final): ``1.2.0``"

#: ../source/discussions/versioning.rst:22
msgid "A development release: ``1.2.0.dev1``"
msgstr "Uma versão de desenvolvimento: ``1.2.0.dev1``"

#: ../source/discussions/versioning.rst:23
msgid "An alpha release: ``1.2.0a1``"
msgstr "Uma versão alfa: ``1.2.0a1``"

#: ../source/discussions/versioning.rst:24
msgid "A beta release: ``1.2.0b1``"
msgstr "Uma versão beta: ``1.2.0b1``"

#: ../source/discussions/versioning.rst:25
msgid "A release candidate: ``1.2.0rc1``"
msgstr "Um candidato a lançamento: ``1.2.0rc1``"

#: ../source/discussions/versioning.rst:26
msgid "A post-release: ``1.2.0.post1``"
msgstr "Um pós-lançamento: ``1.2.0.post1``"

#: ../source/discussions/versioning.rst:27
msgid ""
"A post-release of an alpha release (possible, but discouraged): ``1.2.0a1."
"post1``"
msgstr ""
"Um pós-lançamento de uma versão alfa (possível, mas desencorajado): "
"``1.2.0a1.post1``"

#: ../source/discussions/versioning.rst:28
msgid "A simple version with only two components: ``23.12``"
msgstr "Uma versão simples com apenas dois componentes: ``23.12``"

#: ../source/discussions/versioning.rst:29
msgid "A simple version with just one component: ``42``"
msgstr "Uma versão simples com apenas um componente: ``42``"

#: ../source/discussions/versioning.rst:30
msgid "A version with an epoch: ``1!1.0``"
msgstr "Uma versão com uma época: ``1!1.0``"

#: ../source/discussions/versioning.rst:32
msgid ""
"Projects can use a cycle of pre-releases to support testing by their users "
"before a final release. In order, the steps are: alpha releases, beta "
"releases, release candidates, final release. Pip and other modern Python "
"package installers ignore pre-releases by default when deciding which "
"versions of dependencies to install, unless explicitly requested (e.g., with "
"``pip install pkg==1.1a3`` or ``pip install --pre pkg``)."
msgstr ""
"Os projetos podem usar um ciclo de pré-lançamentos para dar suporte aos "
"testes de seus usuários antes do lançamento final. Em ordem, as etapas são: "
"versões alfa, versões beta, candidatos a lançamento, versão final. Pip e "
"outros instaladores modernos de pacotes Python ignoram pré-lançamentos por "
"padrão ao decidir quais versões de dependências instalar, a menos que "
"solicitado explicitamente (por exemplo, com ```pip install pkg==1.1a3`` ou "
"``pip install --pre pkg``)."

#: ../source/discussions/versioning.rst:39
msgid ""
"The purpose of development releases is to support releases made early during "
"a development cycle, for example, a nightly build, or a build from the "
"latest source in a Linux distribution."
msgstr ""
"O objetivo dos lançamentos de desenvolvimento é oferecer suporte aos "
"lançamentos feitos no início de um ciclo de desenvolvimento, por exemplo, "
"uma construção noturna ou uma construção a partir do código-fonte mais "
"recente em uma distribuição Linux."

#: ../source/discussions/versioning.rst:43
msgid ""
"Post-releases are used to address minor errors in a final release that do "
"not affect the distributed software, such as correcting an error in the "
"release notes. They should not be used for bug fixes; these should be done "
"with a new final release (e.g., incrementing the third component when using "
"semantic versioning)."
msgstr ""
"Os pós-lançamentos são usados para corrigir pequenos erros em uma versão "
"final que não afetam o software distribuído, como corrigir um erro nas notas "
"de versão. Eles não devem ser usados para correção de bugs; isso deve ser "
"feito com uma nova versão final (por exemplo, incrementando o terceiro "
"componente ao usar o versionamento semântico)."

#: ../source/discussions/versioning.rst:49
msgid ""
"Finally, epochs, a rarely used feature, serve to fix the sorting order when "
"changing the versioning scheme. For example, if a project is using calendar "
"versioning, with versions like 23.12, and switches to semantic versioning, "
"with versions like 1.0, the comparison between 1.0 and 23.12 will go the "
"wrong way. To correct this, the new version numbers should have an explicit "
"epoch, as in \"1!1.0\", in order to be treated as more recent than the old "
"version numbers."
msgstr ""
"Por fim, as épocas, um recurso raramente usado, servem para corrigir a ordem "
"de classificação ao alterar o esquema de versionamento. Por exemplo, se um "
"projeto estiver usando versionamento de calendário, com versões como 23.12, "
"e mudar para versionamento semântico, com versões como 1.0, a comparação "
"entre 1.0 e 23.12 irá para o lado errado. Para corrigir isso, os novos "
"números de versão devem ter uma época explícita, como em \"1!1.0\", para "
"serem tratados como mais recentes que os números de versão antigos."

#: ../source/discussions/versioning.rst:59
msgid "Semantic versioning vs. calendar versioning"
msgstr "Versionamento semântico vs. versionamento de calendário"

#: ../source/discussions/versioning.rst:61
msgid ""
"A versioning scheme is a formalized way to interpret the segments of a "
"version number, and to decide which should be the next version number for a "
"new release of a package. Two versioning schemes are commonly used for "
"Python packages, semantic versioning and calendar versioning."
msgstr ""
"Um esquema de versionamento é uma forma formalizada de interpretar os "
"segmentos de um número de versão e de decidir qual deve ser o próximo número "
"de versão para um novo lançamento de um pacote. Dois esquemas de "
"versionamento são comumente usados para pacotes Python, versionamento "
"semântico e versionamento de calendário."

#: ../source/discussions/versioning.rst:68
msgid ""
"The decision which version number to choose is up to a project's maintainer. "
"This effectively means that version bumps reflect the maintainer's view. "
"That view may differ from the end-users' perception of what said formalized "
"versioning scheme promises them."
msgstr ""
"A decisão de qual número de versão escolher cabe ao mantenedor do projeto. "
"Isso efetivamente significa que os incrementos de versão refletem a visão do "
"mantenedor. Essa visão pode diferir da percepção dos usuários finais sobre o "
"que o referido esquema de versionamento formalizado lhes promete."

#: ../source/discussions/versioning.rst:74
#, fuzzy
#| msgid ""
#| "There are known exceptions for selecting the next version number. The "
#| "maintainers may consciously choose to break the assumption that the last "
#| "version segment only contains backwards-compatible changes. One such case "
#| "is when security vulnerability needs to be addressed. Security releases "
#| "often come in patch versions but contain breaking changes inevitably."
msgid ""
"There are known exceptions for selecting the next version number. The "
"maintainers may consciously choose to break the assumption that the last "
"version segment only contains backwards-compatible changes. One such case is "
"when a security vulnerability needs to be addressed. Security releases often "
"come in patch versions but contain breaking changes inevitably."
msgstr ""
"Existem exceções conhecidas para selecionar o próximo número de versão. Os "
"mantenedores podem escolher conscientemente quebrar a suposição de que o "
"segmento da última versão contém apenas alterações compatíveis com versões "
"anteriores. Um desses casos é quando a vulnerabilidade de segurança precisa "
"ser abordada. As versões de segurança geralmente vêm em versões de patch, "
"mas inevitavelmente contêm alterações importantes."

#: ../source/discussions/versioning.rst:84
#: ../source/specifications/version-specifiers.rst:726
msgid "Semantic versioning"
msgstr "Versionamento semântico"

#: ../source/discussions/versioning.rst:86
msgid ""
"The idea of *semantic versioning* (or SemVer) is to use 3-part version "
"numbers, *major.minor.patch*, where the project author increments:"
msgstr ""
"A ideia do *versionamento semântico* (ou SemVer) é usar números de versão de "
"3 partes, *principal.menor.correção*, onde o autor do projeto incrementa:"

#: ../source/discussions/versioning.rst:89
msgid "*major* when they make incompatible API changes,"
msgstr "*principal* quando são feitas alterações incompatíveis à API,"

#: ../source/discussions/versioning.rst:90
msgid ""
"*minor* when they add functionality in a backwards-compatible manner, and"
msgstr ""
"*menor* quando é adicionada funcionalidade de maneira compatível com versões "
"anteriores, e"

#: ../source/discussions/versioning.rst:91
msgid "*patch*, when they make backwards-compatible bug fixes."
msgstr ""
"*correção*, quando são feitas correções de bugs compatíveis com versões "
"anteriores."

#: ../source/discussions/versioning.rst:93
msgid ""
"A majority of Python projects use a scheme that resembles semantic "
"versioning. However, most projects, especially larger ones, do not strictly "
"adhere to semantic versioning, since many changes are technically breaking "
"changes but affect only a small fraction of users. Such projects tend to "
"increment the major number when the incompatibility is high, or to signal a "
"shift in the project, rather than for any tiny incompatibility [#semver-"
"strictness]_. Conversely, a bump of the major version number is sometimes "
"used to signal significant but backwards-compatible new features."
msgstr ""
"A maioria dos projetos Python usa um esquema que se assemelha ao "
"versionamento semântico. No entanto, a maioria dos projetos, especialmente "
"os maiores, não aderem estritamente ao versionamento semântico, uma vez que "
"muitas alterações são tecnicamente prejudiciais, mas afetam apenas uma "
"pequena fração dos usuários. Tais projetos tendem a aumentar o número maior "
"quando a incompatibilidade é alta, ou para sinalizar uma mudança no projeto, "
"ao invés de qualquer pequena incompatibilidade [#semver-strictness]_. Por "
"outro lado, um aumento no número da versão principal às vezes é usado para "
"sinalizar novos recursos significativos, mas compatíveis com versões "
"anteriores."

#: ../source/discussions/versioning.rst:103
msgid ""
"For those projects that do use strict semantic versioning, this approach "
"allows users to make use of :ref:`compatible release version specifiers "
"<version-specifiers-compatible-release>`, with the ``~=`` operator.  For "
"example, ``name ~= X.Y`` is roughly equivalent to ``name >= X.Y, == X.*``, i."
"e., it requires at least release X.Y, and allows any later release with "
"greater Y as long as X is the same. Likewise, ``name ~= X.Y.Z`` is roughly "
"equivalent to ``name >= X.Y.Z, == X.Y.*``, i.e., it requires at least X.Y.Z "
"and allows a later release with same X and Y but higher Z."
msgstr ""
"Para aqueles projetos que usam controle de versão semântico estrito, esta "
"abordagem permite que os usuários façam uso de :ref:`especificadores de "
"versão de lançamento compatíveis <version-specifiers-compatible-release>`, "
"com o operador ``~=``. Por exemplo, ``name ~= X.Y`` é aproximadamente "
"equivalente a ``name >= X.Y, == X.*``, ou seja, requer pelo menos a versão X."
"Y, e permite qualquer versão posterior com Y maior, desde que X é o mesmo. "
"Da mesma forma, ``name ~= X.Y.Z`` é aproximadamente equivalente a ``name >= "
"X.Y.Z, == X.Y.*``, ou seja, requer pelo menos X.Y.Z e permite uma versão "
"posterior com o mesmo X e Y, mas Z superior."

#: ../source/discussions/versioning.rst:112
msgid ""
"Python projects adopting semantic versioning should abide by clauses 1-8 of "
"the `Semantic Versioning 2.0.0 specification <semver_>`_."
msgstr ""
"Projetos Python que adotam versões semânticas devem obedecer às cláusulas "
"1-8 da `especificação de Versionamento Semântico 2.0.0 <semver_>`_."

#: ../source/discussions/versioning.rst:115
msgid ""
"The popular :doc:`Sphinx <sphinx:index>` documentation generator is an "
"example project that uses strict semantic versioning (:doc:`Sphinx "
"versioning policy <sphinx:internals/release-process>`). The famous :doc:"
"`NumPy <numpy:index>` scientific computing package explicitly uses \"loose\" "
"semantic versioning, where releases incrementing the minor version can "
"contain backwards-incompatible API changes (:doc:`NumPy versioning policy "
"<numpy:dev/depending_on_numpy>`)."
msgstr ""
"O popular gerador de documentação :doc:`Sphinx <sphinx:index>` é um exemplo "
"de projeto que usa controle de versionamento semântico estrito (:doc:"
"`Política de versionamento do Sphinx <sphinx:internals/release-process>`). O "
"famoso pacote de computação científica :doc:`NumPy <numpy:index>` usa "
"explicitamente versionamento semântico \"folgado\", onde lançamentos "
"incrementando a versão menor podem conter alterações de API incompatíveis "
"com versões anteriores (:doc:`Política de versionamento do NumPy <numpy:dev/"
"depending_on_numpy>`)."

#: ../source/discussions/versioning.rst:124
msgid "Calendar versioning"
msgstr "Versionamento de calendário"

#: ../source/discussions/versioning.rst:126
#, fuzzy
#| msgid ""
#| "Semantic versioning is not a suitable choice for all projects, such as "
#| "those with a regular time based release cadence and a deprecation process "
#| "that provides warnings for a number of releases prior to removal of a "
#| "feature."
msgid ""
"Semantic versioning is not a suitable choice for all projects, such as those "
"with a regular time-based release cadence and a deprecation process that "
"provides warnings for a number of releases prior to removal of a feature."
msgstr ""
"O versionamento semântico não é uma escolha adequada para todos os projetos, "
"como aqueles com uma cadência de lançamento baseada em tempo regular e um "
"processo de descontinuação que fornece avisos para vários lançamentos antes "
"da remoção de um recurso."

#: ../source/discussions/versioning.rst:130
msgid ""
"A key advantage of date-based versioning, or `calendar versioning "
"<calver_>`_ (CalVer), is that it is straightforward to tell how old the base "
"feature set of a particular release is given just the version number."
msgstr ""
"Uma vantagem principal do versionamento baseado em data, ou `versionamento "
"de calendário <calver_>`_ (CalVer), é que é simples dizer quantos anos o "
"conjunto de recursos básicos de uma determinada versão recebe apenas o "
"número da versão."

#: ../source/discussions/versioning.rst:134
msgid ""
"Calendar version numbers typically take the form *year.month* (for example, "
"23.12 for December 2023)."
msgstr ""
"Os números de versão do calendário normalmente assumem o formato *ano.mês* "
"(por exemplo, 23.12 para dezembro de 2023)."

#: ../source/discussions/versioning.rst:137
msgid ""
":doc:`Pip <pip:index>`, the standard Python package installer, uses calendar "
"versioning."
msgstr ""
":doc:`Pip <pip:index>`, o instalador padrão do pacote Python, usa "
"versionamento de calendário."

#: ../source/discussions/versioning.rst:142
msgid "Other schemes"
msgstr "Outros esquemas"

#: ../source/discussions/versioning.rst:144
msgid ""
"Serial versioning refers to the simplest possible versioning scheme, which "
"consists of a single number incremented every release. While serial "
"versioning is very easy to manage as a developer, it is the hardest to track "
"as an end user, as serial version numbers convey little or no information "
"regarding API backwards compatibility."
msgstr ""
"O versionamento serial refere-se ao esquema de versionamento mais simples "
"possível, que consiste em um único número incrementado a cada versão. Embora "
"o versionamento serial seja muito fácil de gerenciar como desenvolvedor, é o "
"mais difícil de rastrear como usuário final, pois os números de versão "
"serial transmitem pouca ou nenhuma informação sobre compatibilidade com "
"versões anteriores da API."

#: ../source/discussions/versioning.rst:150
#, fuzzy
#| msgid ""
#| "Combinations of the above schemes are possible. For example, a project "
#| "may combine date based versioning with serial versioning to create a "
#| "*year.serial* numbering scheme that readily conveys the approximate age "
#| "of a release, but doesn't otherwise commit to a particular release "
#| "cadence within the year."
msgid ""
"Combinations of the above schemes are possible. For example, a project may "
"combine date-based versioning with serial versioning to create a *year."
"serial* numbering scheme that readily conveys the approximate age of a "
"release, but doesn't otherwise commit to a particular release cadence within "
"the year."
msgstr ""
"Combinações dos esquemas acima são possíveis. Por exemplo, um projeto pode "
"combinar o versionamento baseado em data com o versionamento serial para "
"criar um esquema de numeração *ano.série* que transmite prontamente a idade "
"aproximada de um lançamento, mas não se compromete com uma cadência de "
"lançamento particular dentro do ano."

#: ../source/discussions/versioning.rst:157
#: ../source/specifications/version-specifiers.rst:114
msgid "Local version identifiers"
msgstr "Identificadores de versão local"

#: ../source/discussions/versioning.rst:159
msgid ""
"Public version identifiers are designed to support distribution via :term:"
"`PyPI <Python Package Index (PyPI)>`. Python packaging tools also support "
"the notion of a :ref:`local version identifier <local-version-identifiers>`, "
"which can be used to identify local development builds not intended for "
"publication, or modified variants of a release maintained by a redistributor."
msgstr ""
"Identificadores de versão pública são projetados para suportar distribuição "
"via :term:`PyPI <Python Package Index (PyPI)>`. As ferramentas de "
"empacotamento do Python também oferecem suporte à noção de um :ref:"
"`identificador de versão local <local-version-identifiers>`, que pode ser "
"usado para identificar compilações de desenvolvimento local não destinadas à "
"publicação, ou variantes modificadas de uma versão mantida por um "
"redistribuidor."

#: ../source/discussions/versioning.rst:165
msgid ""
"A local version identifier takes the form of a public version identifier, "
"followed by \"+\" and a local version label. For example, a package with "
"Fedora-specific patches applied could have the version \"1.2.1+fedora.4\". "
"Another example is versions computed by setuptools-scm_, a setuptools plugin "
"that reads the version from Git data. In a Git repository with some commits "
"since the latest release, setuptools-scm generates a version like \"0.5."
"dev1+gd00980f\", or if the repository has untracked changes, like \"0.5."
"dev1+gd00980f.d20231217\"."
msgstr ""
"Um identificador de versão local assume a forma de um identificador de "
"versão pública, seguido por \"+\" e um rótulo de versão local. Por exemplo, "
"um pacote com patches específicos do Fedora aplicados poderia ter a versão "
"\"1.2.1+fedora.4\". Outro exemplo são as versões calculadas pelo setuptools-"
"scm_, um plugin do setuptools que lê a versão dos dados do Git. Em um "
"repositório Git com alguns commits desde a versão mais recente, setuptools-"
"scm gera uma versão como \"0.5.dev1+gd00980f\", ou se o repositório tiver "
"alterações não rastreadas, como \"0.5.dev1+gd00980f.d20231217\"."

#: ../source/discussions/versioning.rst:177
msgid "Accessing version information at runtime"
msgstr ""

#: ../source/discussions/versioning.rst:179
msgid ""
"Version information for all :term:`distribution packages <Distribution "
"Package>` that are locally available in the current environment can be "
"obtained at runtime using the standard library's :func:`importlib.metadata."
"version` function::"
msgstr ""

#: ../source/discussions/versioning.rst:186
msgid ""
"Many projects also choose to version their top level :term:`import packages "
"<Import Package>` by providing a package level ``__version__`` attribute::"
msgstr ""

#: ../source/discussions/versioning.rst:194
msgid ""
"This technique can be particularly valuable for CLI applications which want "
"to ensure that version query invocations (such as ``pip -V``) run as quickly "
"as possible."
msgstr ""

#: ../source/discussions/versioning.rst:198
msgid ""
"Package publishers wishing to ensure their reported distribution package and "
"import package versions are consistent with each other can review the :ref:"
"`single-source-version` discussion for potential approaches to doing so."
msgstr ""

#: ../source/discussions/versioning.rst:202
msgid ""
"As import packages and modules are not *required* to publish runtime version "
"information in this way (see the withdrawn proposal in :pep:`PEP 396 "
"<396>`), the ``__version__`` attribute should either only be queried with "
"interfaces that are known to provide it (such as a project querying its own "
"version or the version of one of its direct dependencies), or else the "
"querying code should be designed to handle the case where the attribute is "
"missing [#fallback-to-dist-version]_."
msgstr ""

#: ../source/discussions/versioning.rst:210
msgid ""
"Some projects may need to publish version information for external APIs that "
"aren't the version of the module itself. Such projects should define their "
"own project-specific ways of obtaining the relevant information at runtime. "
"For example, the standard library's :mod:`ssl` module offers multiple ways "
"to access the underlying OpenSSL library version::"
msgstr ""

#: ../source/discussions/versioning.rst:225
msgid ""
"Some more examples of unusual version numbers are given in a `blog post "
"<versions-seth-larson_>`_ by Seth Larson."
msgstr ""
"Mais alguns exemplos de números de versão incomuns são fornecidos em uma "
"`postagem no blog <versions-seth-larson_>`_ de Seth Larson."

#: ../source/discussions/versioning.rst:228
msgid ""
"For some personal viewpoints on this issue, see these blog posts: `by Hynek "
"Schlawak <semver-hynek-schlawack_>`_, `by Donald Stufft <semver-donald-"
"stufft_>`_, `by Bernát Gábor <semver-bernat-gabor_>`_, `by Brett Cannon "
"<semver-brett-cannon_>`_. For a humoristic take, read about ZeroVer_."
msgstr ""
"Para alguns pontos de vista pessoais sobre este assunto, consulte estas "
"postagens do blog: `de Hynek Schlawak <semver-hynek-schlawack_>`_, `de "
"Donald Stufft <semver-donald-stufft_>`_, `de Bernát Gábor <semver-bernat- "
"gabor_>`_, `de Brett Cannon <semver-brett-cannon_>`_. Para uma visão "
"humorística, leia sobre ZeroVer_."

#: ../source/discussions/versioning.rst:234
msgid ""
"A full list mapping the top level names available for import to the "
"distribution packages that provide those import packages and modules may be "
"obtained through the standard library's :func:`importlib.metadata."
"packages_distributions` function. This means that even code that is "
"attempting to infer a version to report for all importable top-level names "
"has a means to fall back to reporting the distribution version information "
"if no ``__version__`` attribute is defined. Only standard library modules, "
"and modules added via means other than Python package installation would "
"fail to have version information reported in that case."
msgstr ""

#: ../source/flow.rst:3
msgid "The Packaging Flow"
msgstr "O fluxo do empacotamento"

#: ../source/flow.rst:5
msgid ""
"The document aims to outline the flow involved in publishing/distributing a :"
"term:`distribution package <Distribution Package>`, usually to the `Python "
"Package Index (PyPI)`_. It is written for package publishers, who are "
"assumed to be the package author."
msgstr ""
"O documento visa delinear o fluxo envolvido na publicação/distribuição de "
"um :term:`pacote de distribuição <Distribution Package>`, geralmente para o "
"`Python Package Index (PyPI)`_. Ele é escrito para editores de pacotes, que "
"são considerados os autores do pacote."

#: ../source/flow.rst:12
msgid ""
"While the :doc:`tutorial <tutorials/packaging-projects>` walks through the "
"process of preparing a simple package for release, it does not fully "
"enumerate what steps and files are required, and for what purpose."
msgstr ""
"Enquanto o :doc:`tutorial <tutorials/packaging-projects>` percorre o "
"processo de preparação de um pacote simples para lançamento, ele não enumera "
"completamente quais etapas e arquivos são necessários e para qual finalidade."

#: ../source/flow.rst:16
msgid ""
"Publishing a package requires a flow from the author's source code to an end "
"user's Python environment. The steps to achieve this are:"
msgstr ""
"A publicação de um pacote requer um fluxo do código-fonte do autor para o "
"ambiente Python de um usuário final. Os passos para conseguir isso são:"

#: ../source/flow.rst:19
msgid ""
"Have a source tree containing the package. This is typically a checkout from "
"a version control system (VCS)."
msgstr ""
"Tenha uma árvore de fontes contendo o pacote. Este é normalmente um checkout "
"de um sistema de controle de versão (VCS)."

#: ../source/flow.rst:22
msgid ""
"Prepare a configuration file describing the package metadata (name, version "
"and so forth) and how to create the build artifacts. For most packages, this "
"will be a :file:`pyproject.toml` file, maintained manually in the source "
"tree."
msgstr ""
"Prepare um arquivo de configuração descrevendo os metadados do pacote (nome, "
"versão e assim por diante) e como criar os artefatos de construção. Para a "
"maioria dos pacotes, este será um arquivo :file:`pyproject.toml`, mantido "
"manualmente na árvore de fontes."

#: ../source/flow.rst:27
msgid ""
"Create build artifacts to be sent to the package distribution service "
"(usually PyPI); these will normally be a :term:`source distribution "
"(\"sdist\") <Source Distribution (or \"sdist\")>` and one or more :term:"
"`built distributions (\"wheels\") <Built Distribution>`. These are made by a "
"build tool using the configuration file from the previous step. Often there "
"is just one generic wheel for a pure Python package."
msgstr ""
"Crie artefatos de construção para serem enviados ao serviço de distribuição "
"de pacotes (geralmente PyPI); normalmente serão uma :term:`distribuição "
"fonte (\"sdist\") <Distribuição Fonte (ou \"sdist\")>` e uma ou mais :term:"
"`distribuições construídas (\"wheels\") <Distribuição Construída>`. Eles são "
"feitos por uma ferramenta de construção usando o arquivo de configuração da "
"etapa anterior. Muitas vezes, há apenas uma wheel genérica para um pacote "
"puro Python."

#: ../source/flow.rst:35
msgid "Upload the build artifacts to the package distribution service."
msgstr ""
"Envie os artefatos de construção para o serviço de distribuição de pacotes."

#: ../source/flow.rst:37
msgid ""
"At that point, the package is present on the package distribution service. "
"To use the package, end users must:"
msgstr ""
"Nesse ponto, o pacote está presente no serviço de distribuição de pacotes. "
"Para usar o pacote, os usuários finais devem:"

#: ../source/flow.rst:40
msgid ""
"Download one of the package's build artifacts from the package distribution "
"service."
msgstr ""
"Baixe um dos artefatos de construção do pacote do serviço de distribuição de "
"pacotes."

#: ../source/flow.rst:43
msgid ""
"Install it in their Python environment, usually in its ``site-packages`` "
"directory. This step may involve a build/compile step which, if needed, must "
"be described by the package metadata."
msgstr ""
"Instale-o em seu ambiente Python, geralmente em seu diretório ``site-"
"packages``. Esta etapa pode envolver uma etapa de construção/compilação que, "
"se necessário, deve ser descrita pelos metadados do pacote."

#: ../source/flow.rst:47
msgid ""
"These last 2 steps are typically performed by :ref:`pip` when an end user "
"runs ``pip install``."
msgstr ""
"Estes últimos 2 passos são normalmente executados por :ref:`pip` quando um "
"usuário final executa ``pip install``."

#: ../source/flow.rst:50
msgid "The steps above are described in more detail below."
msgstr "As etapas acima são descritas com mais detalhes abaixo."

#: ../source/flow.rst:53
msgid "The source tree"
msgstr "A árvore fonte"

#: ../source/flow.rst:55
msgid ""
"The source tree contains the package source code, usually a checkout from a "
"VCS. The particular version of the code used to create the build artifacts "
"will typically be a checkout based on a tag associated with the version."
msgstr ""
"A árvore fonte contém o código-fonte do pacote, geralmente um checkout de um "
"VCS. A versão específica do código usado para criar os artefatos de "
"compilação normalmente será um checkout com base em uma tag associada à "
"versão."

#: ../source/flow.rst:60
msgid "The configuration file"
msgstr "O arquivo de configuração"

#: ../source/flow.rst:62
msgid ""
"The configuration file depends on the tool used to create the build "
"artifacts. The standard practice is to use a :file:`pyproject.toml` file in "
"the `TOML format`_."
msgstr ""
"O arquivo de configuração depende da ferramenta usada para criar os "
"artefatos de construção. A prática padrão é usar um arquivo :file:`pyproject."
"toml` no `formato TOML`_."

#: ../source/flow.rst:68
msgid ""
"At a minimum, the :file:`pyproject.toml` file needs a ``[build-system]`` "
"table specifying your build tool. There are many build tools available, "
"including but not limited to :ref:`flit`, :ref:`hatch`, :ref:`pdm`, :ref:"
"`poetry`, :ref:`setuptools`, `trampolim`_, and `whey`_. Each tool's "
"documentation will show what to put in the ``[build-system]`` table."
msgstr ""
"No mínimo, o arquivo :file:`pyproject.toml` precisa de uma tabela ``[build-"
"system]`` especificando sua ferramenta de construção. Existem muitas "
"ferramentas de construção disponíveis, incluindo, mas não se limitando a :"
"ref:`flit`, :ref:`hatch`, :ref:`pdm`, :ref:`poetry`, :ref:`setuptools`, "
"`trampolim`_ e `whey`_. A documentação de cada ferramenta mostrará o que "
"colocar na tabela ``[build-system]``."

#: ../source/flow.rst:77
msgid "For example, here is a table for using :ref:`hatch`:"
msgstr "Por exemplo, aqui está uma tabela para usar :ref:`hatch`:"

#: ../source/flow.rst:85
msgid ""
"With such a table in the :file:`pyproject.toml` file, a \":term:`frontend "
"<Build Frontend>`\" tool like :ref:`build` can run your chosen build tool's "
"\":term:`backend <Build Backend>`\" to create the build artifacts. Your "
"build tool may also provide its own frontend. An install tool like :ref:"
"`pip` also acts as a frontend when it runs your build tool's backend to "
"install from a source distribution."
msgstr ""
"Com tal tabela no arquivo :file:`pyproject.toml`, uma ferramenta \":term:"
"`frontend <Build Frontend>`\" como :ref:`build` pode executar o \":term:"
"`backend <Build Backend>`\" da ferramenta de compilação escolhida para criar "
"os artefatos de compilação. Sua ferramenta de compilação também pode "
"fornecer seu próprio frontend. Uma ferramenta de instalação como :ref:`pip` "
"também atua como frontend quando executa o backend da sua ferramenta de "
"construção para instalar a partir de uma distribuição fonte."

#: ../source/flow.rst:94
msgid ""
"The particular build tool you choose dictates what additional information is "
"required in the :file:`pyproject.toml` file. For example, you might specify:"
msgstr ""
"A ferramenta de construção específica que você escolhe determina quais "
"informações adicionais são necessárias no arquivo :file:`pyproject.toml`. "
"Por exemplo, você pode especificar:"

#: ../source/flow.rst:97
msgid ""
"a ``[project]`` table containing project :doc:`Core Metadata </"
"specifications/core-metadata/>` (name, version, author and so forth),"
msgstr ""
"uma tabela ``[project]`` contendo os :doc:`Metadados Principais </"
"specifications/core-metadata/>` (nome, versão, autor e assim por diante),"

#: ../source/flow.rst:101
msgid "a ``[tool]`` table containing tool-specific configuration options."
msgstr ""
"uma tabela ``[tool]`` contendo opções de configuração específicas da "
"ferramenta."

#: ../source/flow.rst:103
msgid ""
"Refer to the :ref:`pyproject.toml guide <writing-pyproject-toml>` for a "
"complete guide to ``pyproject.toml`` configuration."
msgstr ""
"Consulte o :ref:`guia pyproject.toml <writing-pyproject-toml>` para um guia "
"completo para a configuração de ``pyproject.toml``."

#: ../source/flow.rst:108
msgid "Build artifacts"
msgstr "Artefatos de construção"

#: ../source/flow.rst:111
msgid "The source distribution (sdist)"
msgstr "A distribuição fonte (sdist)"

#: ../source/flow.rst:113
msgid ""
"A source distribution contains enough to install the package from source in "
"an end user's Python environment. As such, it needs the package source, and "
"may also include tests and documentation. These are useful for end users "
"wanting to develop your sources, and for end user systems where some local "
"compilation step is required (such as a C extension)."
msgstr ""
"Uma distribuição fonte contém o suficiente para instalar o pacote fonte no "
"ambiente Python de um usuário final. Como tal, ele precisa da fonte do "
"pacote e também pode incluir testes e documentação. Eles são úteis para "
"usuários finais que desejam desenvolver suas fontes e para sistemas de "
"usuários finais onde alguma etapa de compilação local é necessária (como uma "
"extensão C)."

#: ../source/flow.rst:119 ../source/flow.rst:143
msgid ""
"The :ref:`build` package knows how to invoke your build tool to create one "
"of these:"
msgstr ""
"O pacote :ref:`build` sabe como invocar sua ferramenta de construção para "
"criar uma destas:"

#: ../source/flow.rst:126
msgid ""
"Or, your build tool may provide its own interface for creating an sdist."
msgstr ""
"Ou sua ferramenta de construção pode fornecer sua própria interface para "
"criar um sdist."

#: ../source/flow.rst:130
msgid "The built distributions (wheels)"
msgstr "As distribuições de construídas (wheels)"

#: ../source/flow.rst:132
msgid ""
"A built distribution contains only the files needed for an end user's Python "
"environment. No compilation steps are required during the install, and the "
"wheel file can simply be unpacked into the ``site-packages`` directory. This "
"makes the install faster and more convenient for end users."
msgstr ""
"Uma distribuição construída contém apenas os arquivos necessários para o "
"ambiente Python de um usuário final. Nenhuma etapa de compilação é "
"necessária durante a instalação, e o arquivo wheel pode simplesmente ser "
"descompactado no diretório ``site-packages``. Isso torna a instalação mais "
"rápida e conveniente para os usuários finais."

#: ../source/flow.rst:137
msgid ""
"A pure Python package typically needs only one \"generic\" wheel. A package "
"with compiled binary extensions needs a wheel for each supported combination "
"of Python interpreter, operating system, and CPU architecture that it "
"supports. If a suitable wheel file is not available, tools like :ref:`pip` "
"will fall back to installing the source distribution."
msgstr ""
"Um pacote puro Python normalmente precisa apenas de um wheel \"genérico\". "
"Um pacote com extensões binárias compiladas precisa de um wheel para cada "
"combinação suportada de interpretador Python, sistema operacional e "
"arquitetura de CPU que ele suporta. Se um arquivo wheel adequado não estiver "
"disponível, ferramentas como :ref:`pip` voltarão a instalar a distribuição "
"fonte."

#: ../source/flow.rst:150
msgid "Or, your build tool may provide its own interface for creating a wheel."
msgstr ""
"Ou sua ferramenta de construção pode fornecer sua própria interface para "
"criar um wheel."

#: ../source/flow.rst:154
msgid ""
"The default behaviour of :ref:`build` is to make both an sdist and a wheel "
"from the source in the current directory; the above examples are "
"deliberately specific."
msgstr ""
"O comportamento padrão do :ref:`build` é fazer tanto um sdist quanto um "
"wheel da fonte no diretório atual; os exemplos acima são deliberadamente "
"específicos."

#: ../source/flow.rst:159
msgid "Upload to the package distribution service"
msgstr "Enviando os arquivos de distribuição"

#: ../source/flow.rst:161
msgid ""
"The :ref:`twine` tool can upload build artifacts to PyPI for distribution, "
"using a command like:"
msgstr ""
"A ferramenta :ref:`twine` pode enviar artefatos de construção para PyPI para "
"distribuição, usando um comando como:"

#: ../source/flow.rst:168
msgid "Or, your build tool may provide its own interface for uploading."
msgstr ""
"Ou sua ferramenta de construção pode fornecer sua própria interface para "
"envio."

#: ../source/flow.rst:171
msgid "Download and install"
msgstr "Baixando e instalando"

#: ../source/flow.rst:173
msgid ""
"Now that the package is published, end users can download and install the "
"package into their Python environment. Typically this is done with :ref:"
"`pip`, using a command like:"
msgstr ""
"Agora que o pacote foi publicado, os usuários finais podem baixar e instalar "
"o pacote em seu ambiente Python. Normalmente isso é feito com :ref:`pip`, "
"usando um comando como:"

#: ../source/flow.rst:181
msgid ""
"End users may also use other tools like :ref:`pipenv`, :ref:`poetry`, or :"
"ref:`pdm`."
msgstr ""
"Os usuários finais também podem usar outras ferramentas como :ref:`pipenv`, :"
"ref:`poetry` ou :ref:`pdm`."

#: ../source/glossary.rst:3
msgid "Glossary"
msgstr "Glossário"

#: ../source/glossary.rst:8
msgid "Binary Distribution"
msgstr "Distribuição Binária"

#: ../source/glossary.rst:11
msgid ""
"A specific kind of :term:`Built Distribution` that contains compiled "
"extensions."
msgstr ""
"Um tipo específico de :term:`Distribuição Construída` que contém extensões "
"compiladas."

#: ../source/glossary.rst:14
msgid "Build Backend"
msgstr "Backend de construção"

#: ../source/glossary.rst:17
#, fuzzy
msgid ""
"A library that takes a source tree and builds a :term:`source distribution "
"<Source Distribution (or \"sdist\")>` or :term:`built distribution <Built "
"Distribution>` from it. The build is delegated to the backend by a :term:"
"`frontend <Build Frontend>`. All backends offer a standardized interface."
msgstr ""
"Uma biblioteca que pega uma árvore de fontes ou :term:`distribuição fonte "
"<Source Distribution (or \"sdist\")>` e constrói uma distribuição de código-"
"fonte ou :term:`wheel <Wheel>` a partir dela. A construção é delegada ao "
"backend por um :term:`frontend <Build Frontend>`. Todos os backends oferecem "
"uma interface padronizada."

#: ../source/glossary.rst:24
msgid ""
"Examples of build backends are :ref:`flit's flit-core <flit>`, :ref:`hatch's "
"hatchling <hatch>`, :ref:`maturin`, :ref:`meson-python`, :ref:`scikit-build-"
"core`, and :ref:`setuptools`."
msgstr ""
"Exemplos de backends de construção são :ref:`flit-core do flit <flit>`, :ref:"
"`hatchling do hatch <hatch>`, :ref:`maturin`, :ref:`meson-python`, :ref:"
"`scikit-build-core` e :ref:`setuptools`."

#: ../source/glossary.rst:32
msgid "Build Frontend"
msgstr "Frontend de construção"

#: ../source/glossary.rst:35
msgid ""
"A tool that users might run that takes arbitrary source trees or :term:"
"`source distributions <Source Distribution (or \"sdist\")>` and builds "
"source distributions or :term:`wheels <Wheel>` from them. The actual "
"building is delegated to each source tree's :term:`build backend <Build "
"Backend>`."
msgstr ""
"Uma ferramenta que os usuários podem executar que pega árvores de fontes "
"arbitrárias ou :term:`distribuições fonte <Source Distribution (or "
"\"sdist\")>` e constrói distribuições fontes ou :term:`wheels <Wheel>` a "
"partir delas. A construção real é delegada ao :term:`backend de construção "
"<Build Backend>` de cada árvore de fontes."

#: ../source/glossary.rst:42
msgid "Examples of build frontends are :ref:`pip` and :ref:`build`."
msgstr "Exemplos de frontends de construção são :ref:`pip` e :ref:`build`."

#: ../source/glossary.rst:44
msgid "Built Distribution"
msgstr "Distribuição Construída"

#: ../source/glossary.rst:47
msgid ""
"A :term:`Distribution <Distribution Package>` format containing files and "
"metadata that only need to be moved to the correct location on the target "
"system, to be installed. :term:`Wheel` is such a format, whereas :term:"
"`Source Distribution <Source Distribution (or \"sdist\")>` is not, in that "
"it requires a build step before it can be installed.  This format does not "
"imply that Python files have to be precompiled (:term:`Wheel` intentionally "
"does not include compiled Python files). See :ref:`package-formats` for more "
"information."
msgstr ""
"Um formato de :term:`Distribuição <Distribution Package>` contendo arquivos "
"e metadados que só precisam ser movidos para o local correto no sistema de "
"destino, para serem instalados. :term:`Wheel` é esse formato, enquanto o :"
"term:`Distribuição Fonte <Source Distribution (or \"sdist\")>` não é, pois "
"requer uma etapa de construção antes de poder ser instalado. Este formato "
"não implica que os arquivos Python tenham que ser pré-compilados (:term:"
"`Wheel` intencionalmente não inclui arquivos Python compilados). Veja :ref:"
"`package-formats` para mais informações."

#: ../source/glossary.rst:56
msgid "Built Metadata"
msgstr ""

#: ../source/glossary.rst:59
msgid ""
"The concrete form :term:`Core Metadata` takes when included inside an "
"installed :term:`Project` (``METADATA`` file) or a :term:`Distribution "
"Archive` (``PKG-INFO`` in a :term:`Sdist <Source Distribution (or "
"\"sdist\")>` and ``METADATA`` in a :term:`Wheel`)."
msgstr ""

#: ../source/glossary.rst:66
#, fuzzy
msgid "Core Metadata"
msgstr "Configurando metadados"

#: ../source/glossary.rst:69
msgid ""
"The :ref:`specification <core-metadata>` and the set of :term:`Core Metadata "
"Field`\\s it defines that describe key static attributes of a :term:"
"`Distribution Package` or :term:`Installed Project`."
msgstr ""

#: ../source/glossary.rst:74
msgid "Core Metadata Field"
msgstr ""

#: ../source/glossary.rst:77
msgid ""
"A single key-value pair (or sequence of such with the same name, for "
"multiple-use fields) defined in the :term:`Core Metadata` spec and stored in "
"the :term:`Built Metadata`. Notably, distinct from a :term:`Pyproject "
"Metadata Key`."
msgstr ""

#: ../source/glossary.rst:83
#, fuzzy
msgid "Distribution Archive"
msgstr "Pacote de Distribuição"

#: ../source/glossary.rst:86
msgid ""
"The physical distribution artifact (i.e. a file on disk) for a :term:"
"`Distribution Package`."
msgstr ""

#: ../source/glossary.rst:89
msgid "Distribution Package"
msgstr "Pacote de Distribuição"

#: ../source/glossary.rst:92
msgid ""
"A versioned archive file that contains Python :term:`packages <Import "
"Package>`, :term:`modules <Module>`, and other resource files that are used "
"to distribute a :term:`Release`. The archive file is what an end-user will "
"download from the internet and install."
msgstr ""
"Um arquivo com versão que contém :term:`pacotes <Import Package>` Python, :"
"term:`módulos <Module>`, e outros arquivos de recursos que são usados para "
"distribuir um :term:`Release` (lançamento). O arquivo é o que um usuário "
"final irá baixar da Internet e instalar."

#: ../source/glossary.rst:97
msgid ""
"A distribution package is more commonly referred to with the single words "
"\"package\" or \"distribution\", but this guide may use the expanded term "
"when more clarity is needed to prevent confusion with an :term:`Import "
"Package` (which is also commonly called a \"package\") or another kind of "
"distribution (e.g. a Linux distribution or the Python language "
"distribution), which are often referred to with the single term "
"\"distribution\". See :ref:`distribution-package-vs-import-package` for a "
"breakdown of the differences."
msgstr ""
"Um pacote de distribuição é mais comumente referido com as palavras "
"\"pacote\" ou \"distribuição\", mas este guia pode usar o termo expandido "
"quando mais clareza for necessária para evitar confusão com um :term:`Pacote "
"de Importação` (que também é comumente chamado de \"pacote\") ou outro tipo "
"de distribuição (por exemplo, uma distribuição Linux ou a distribuição da "
"linguagem Python), que são frequentemente referidos com o único termo "
"\"distribuição\". Veja :ref:`distribution-package-vs-import-package` para "
"uma explicação das diferenças."

#: ../source/glossary.rst:105
msgid "Egg"
msgstr "Egg"

#: ../source/glossary.rst:108
msgid ""
"A :term:`Built Distribution` format introduced by :ref:`setuptools`, which "
"has been replaced by :term:`Wheel`.  For details, see :ref:`egg-format`."
msgstr ""
"Um formato de :term:`Distribuição Construída` introduzido pelo :ref:"
"`setuptools`, que foi substituído pelo :term:`Wheel`. Para detalhes, veja :"
"ref:`egg-format`."

#: ../source/glossary.rst:111
msgid "Extension Module"
msgstr "Módulo de Extensão"

#: ../source/glossary.rst:114
msgid ""
"A :term:`Module` written in the low-level language of the Python "
"implementation: C/C++ for Python, Java for Jython. Typically contained in a "
"single dynamically loadable pre-compiled file, e.g.  a shared object (.so) "
"file for Python extensions on Unix, a DLL (given the .pyd extension) for "
"Python extensions on Windows, or a Java class file for Jython extensions."
msgstr ""
"Um :term:`Módulo` escrito na linguagem de baixo nível da implementação "
"Python: C/C++ para Python, Java para Jython. Normalmente contido em um único "
"arquivo pré-compilado carregável dinamicamente, por exemplo, um arquivo de "
"objeto compartilhado (.so) para extensões Python no Unix, uma DLL (dada a "
"extensão .pyd) para extensões Python no Windows ou um arquivo de classe Java "
"para extensões Jython."

#: ../source/glossary.rst:121
msgid "Import Package"
msgstr "Pacote de Importação"

#: ../source/glossary.rst:124
msgid ""
"A Python module which can contain other modules or recursively, other "
"packages."
msgstr ""
"Um módulo Python que pode conter outros módulos ou recursivamente, outros "
"pacotes."

#: ../source/glossary.rst:127
msgid ""
"An import package is more commonly referred to with the single word "
"\"package\", but this guide will use the expanded term when more clarity is "
"needed to prevent confusion with a :term:`Distribution Package` which is "
"also commonly called a \"package\". See :ref:`distribution-package-vs-import-"
"package` for a breakdown of the differences."
msgstr ""
"Um pacote de importação é mais comumente referido com a palavra \"pacote\", "
"mas este guia usará o termo expandido quando mais clareza for necessária "
"para evitar confusão com um :term:`Pacote de Distribuição` que também é "
"comumente chamado de \"pacote\" . Veja :ref:`distribution-package-vs-import-"
"package` para uma explicação das diferenças."

#: ../source/glossary.rst:133
#, fuzzy
msgid "Installed Project"
msgstr "Instalador"

#: ../source/glossary.rst:136
msgid ""
"A :term:`Project` that is installed for use with a Python interpreter or :"
"term:`Virtual Environment`, as described in the specification :ref:"
"`recording-installed-packages`."
msgstr ""

#: ../source/glossary.rst:140
msgid "Known Good Set (KGS)"
msgstr "Known Good Set (KGS)"

#: ../source/glossary.rst:143
msgid ""
"A set of distributions at specified versions which are compatible with each "
"other. Typically a test suite will be run which passes all tests before a "
"specific set of packages is declared a known good set. This term is commonly "
"used by frameworks and toolkits which are comprised of multiple individual "
"distributions."
msgstr ""
"Um conjunto de distribuições em versões especificadas que são compatíveis "
"entre si. Normalmente, será executado um conjunto de testes que passa em "
"todos os testes antes que um conjunto específico de pacotes seja declarado "
"como um conjunto sabidamente bom (*known good set*). Este termo é comumente "
"usado por frameworks e kits de ferramentas que são compostos de várias "
"distribuições individuais."

#: ../source/glossary.rst:149
#, fuzzy
#| msgid "classifiers"
msgid "License Classifier"
msgstr "classifiers"

#: ../source/glossary.rst:152
msgid ""
"A PyPI Trove classifier (as :ref:`described <core-metadata-classifier>` in "
"the :term:`Core Metadata` specification) which begins with ``License ::``."
msgstr ""

#: ../source/glossary.rst:157 ../source/specifications/license-expression.rst:3
msgid "License Expression"
msgstr "Expressão de licença"

#: ../source/glossary.rst:158
msgid "SPDX Expression"
msgstr ""

#: ../source/glossary.rst:161
msgid ""
"A string with valid SPDX license expression syntax, including one or more "
"SPDX :term:`License Identifier`\\(s), which describes a :term:`Project`'s "
"license(s) and how they inter-relate. Examples: ``GPL-3.0-or-later``, ``MIT "
"AND (Apache-2.0 OR BSD-2-Clause)``"
msgstr ""

#: ../source/glossary.rst:169
#, fuzzy
#| msgid "Local version identifiers"
msgid "License Identifier"
msgstr "Identificadores de versão local"

#: ../source/glossary.rst:170
msgid "SPDX Identifier"
msgstr ""

#: ../source/glossary.rst:173
msgid ""
"A valid SPDX short-form license identifier, originally specified in :pep:"
"`639`. This includes all valid SPDX identifiers and the custom ``LicenseRef-"
"[idstring]`` strings conforming to the SPDX specification. Examples: "
"``MIT``, ``GPL-3.0-only``, ``LicenseRef-My-Custom-License``"
msgstr ""

#: ../source/glossary.rst:183
msgid "Module"
msgstr "Módulo"

#: ../source/glossary.rst:186
msgid ""
"The basic unit of code reusability in Python, existing in one of two types: :"
"term:`Pure Module`, or :term:`Extension Module`."
msgstr ""
"A unidade básica de reutilização de código em Python, existindo em um dos "
"dois tipos: :term:`Módulo Puro` ou :term:`Módulo de Extensão`."

#: ../source/glossary.rst:189
msgid "Package Index"
msgstr "Índice de Pacotes"

#: ../source/glossary.rst:192
msgid ""
"A repository of distributions with a web interface to automate :term:"
"`package <Distribution Package>` discovery and consumption."
msgstr ""
"Um repositório de distribuições com uma interface web para automatizar "
"descoberta e consumo de :term:`pacotes <Distribution Package>`."

#: ../source/glossary.rst:195
msgid "Per Project Index"
msgstr "Índice Por Projeto"

#: ../source/glossary.rst:198
msgid ""
"A private or other non-canonical :term:`Package Index` indicated by a "
"specific :term:`Project` as the index preferred or required to resolve "
"dependencies of that project."
msgstr ""
"Um :term:`Índice de Pacotes` privado ou outro não canônico indicado por um :"
"term:`Projeto` específico como o índice preferido ou necessário para "
"resolver dependências desse projeto."

#: ../source/glossary.rst:202 ../source/guides/hosting-your-own-index.rst:62
#: ../source/guides/index-mirrors-and-caches.rst:52
msgid "Project"
msgstr "Projeto"

#: ../source/glossary.rst:205
msgid ""
"A library, framework, script, plugin, application, or collection of data or "
"other resources, or some combination thereof that is intended to be packaged "
"into a :term:`Distribution <Distribution Package>`."
msgstr ""
"Uma biblioteca, estrutura, script, plugin, aplicação ou coleção de dados ou "
"outros recursos, ou alguma combinação dos mesmos que se destina a ser "
"empacotado em uma :term:`Distribuição <Distribution Package>`."

#: ../source/glossary.rst:209
msgid ""
"Since most projects create :term:`Distributions <Distribution Package>` "
"using either :pep:`518` ``build-system``, :ref:`distutils` or :ref:"
"`setuptools`, another practical way to define projects currently is "
"something that contains a :term:`pyproject.toml`, :term:`setup.py`, or :term:"
"`setup.cfg` file at the root of the project source directory."
msgstr ""
"Como a maioria dos projetos cria :term:`Distribuições <Distribution "
"Package>` usando ``build-system`` da :pep:`518`, :ref:`distutils` ou :ref:"
"`setuptools`, outra maneira prática de definir projetos atualmente é algo "
"que contém um arquivo :term:`pyproject.toml`, :term:`setup.py` ou :term:"
"`setup.cfg` na raiz do diretório fonte do projeto."

#: ../source/glossary.rst:215
msgid ""
"Python projects must have unique names, which are registered on :term:`PyPI "
"<Python Package Index (PyPI)>`. Each project will then contain one or more :"
"term:`Releases <Release>`, and each release may comprise one or more :term:"
"`distributions <Distribution Package>`."
msgstr ""
"Projetos Python devem ter nomes únicos, que são registrados no :term:`PyPI "
"<Python Package Index (PyPI)>`. Cada projeto conterá então um ou mais :term:"
"`Lançamentos <Release>`, e cada lançamento pode incluir uma ou mais :term:"
"`distribuições <Distribution Package>`."

#: ../source/glossary.rst:220
msgid ""
"Note that there is a strong convention to name a project after the name of "
"the package that is imported to run that project. However, this doesn't have "
"to hold true. It's possible to install a distribution from the project 'foo' "
"and have it provide a package importable only as 'bar'."
msgstr ""
"Observe que há uma forte convenção para dar o nome do projeto ao pacote que "
"é importado para executar esse projeto. No entanto, isso não é obrigatório. "
"É possível instalar uma distribuição do projeto \"foo\" e fazer com que ele "
"forneça um pacote importável apenas como \"bar\"."

#: ../source/glossary.rst:226
#, fuzzy
msgid "Project Root Directory"
msgstr "Projetos em subdiretórios"

#: ../source/glossary.rst:229
msgid ""
"The filesystem directory in which a :term:`Project`'s :term:`source tree "
"<Project Source Tree>` is located."
msgstr ""

#: ../source/glossary.rst:232
#, fuzzy
msgid "Project Source Tree"
msgstr "Resumos de projetos"

#: ../source/glossary.rst:235
#, fuzzy
msgid ""
"The on-disk format of a :term:`Project` used for development, containing its "
"raw source code before being packaged into a :term:`Source Distribution "
"<Source Distribution (or \"sdist\")>` or :term:`Built Distribution`."
msgstr ""
"Um arquivo contendo o código-fonte bruto para um :term:`Lançamento "
"<Release>`, antes da criação de uma :term:`Distribuição Fonte <Source "
"Distribution (or \"sdist\")>` ou :term:`Distribuição Construída <Built "
"Distribution>`."

#: ../source/glossary.rst:241
#, fuzzy
msgid "Project Source Metadata"
msgstr "Resumos de projetos"

#: ../source/glossary.rst:244
msgid ""
"Metadata defined by the package author in a :term:`Project`'s :term:`source "
"tree <Project Source Tree>`, to be transformed into :term:`Core Metadata "
"field`\\s in the :term:`Built Metadata` by the project's :term:`build "
"backend <Build Backend>`. Can be written as :term:`Pyproject Metadata`, or "
"in a tool-specific format (under the ``[tool]`` table in ``pyproject.toml``, "
"or in a tool's own configuration file)."
msgstr ""

#: ../source/glossary.rst:254
msgid "Pure Module"
msgstr "Módulo Puro"

#: ../source/glossary.rst:257
msgid ""
"A :term:`Module` written in Python and contained in a single ``.py`` file "
"(and possibly associated ``.pyc`` and/or ``.pyo`` files)."
msgstr ""
"Um :term:`Módulo` escrito em Python e contido em um único arquivo ``.py`` (e "
"possivelmente arquivos ``.pyc`` e/ou ``.pyo`` associados)."

#: ../source/glossary.rst:260
#, fuzzy
msgid "Pyproject Metadata"
msgstr "Nome do projeto"

#: ../source/glossary.rst:263
msgid ""
"The :term:`Project Source Metadata` format defined by the :ref:`declaring-"
"project-metadata` specification and originally introduced in :pep:`621`, "
"stored as :term:`Pyproject Metadata Key`\\s under the ``[project]`` table of "
"a :term:`pyproject.toml` file. Notably, *not* a tool-specific source "
"metadata format under the ``[tool]`` table in ``pyproject.toml``."
msgstr ""

#: ../source/glossary.rst:271
#, fuzzy
msgid "Pyproject Metadata Key"
msgstr "Declarando os metadados do projeto"

#: ../source/glossary.rst:274
msgid ""
"A top-level TOML key in the ``[project]`` table in ``pyproject.toml``; part "
"of the :term:`Pyproject Metadata`. Notably, distinct from a :term:`Core "
"Metadata Field`."
msgstr ""

#: ../source/glossary.rst:278
msgid "Pyproject Metadata Subkey"
msgstr ""

#: ../source/glossary.rst:281
msgid ""
"A second-level TOML key under a table-valued :term:`Pyproject Metadata Key`."
msgstr ""

#: ../source/glossary.rst:284
msgid "Python Packaging Authority (PyPA)"
msgstr "Python Packaging Authority (PyPA)"

#: ../source/glossary.rst:287
msgid ""
"PyPA is a working group that maintains many of the relevant projects in "
"Python packaging. They maintain a site at :doc:`pypa.io <pypa:index>`, host "
"projects on `GitHub <https://github.com/pypa>`_ and `Bitbucket <https://"
"bitbucket.org/pypa>`_, and discuss issues on the `distutils-sig mailing list "
"<https://mail.python.org/mailman3/lists/distutils-sig.python.org/>`_ and "
"`the Python Discourse forum <https://discuss.python.org/c/packaging>`__."
msgstr ""
"PyPA é um grupo de trabalho que mantém muitos dos projetos relevantes em "
"pacotes Python. Eles mantêm um site em :doc:`pypa.io <pypa:index>`, hospedam "
"projetos no `GitHub <https://github.com/pypa>`_ e `Bitbucket <https://"
"bitbucket.org/pypa>`_, e discutem questões na `lista de discussão distutils-"
"sig <https://mail.python.org/mailman3/lists/distutils-sig.python.org/>`_ e "
"`o fórum Discourse do Python <https://discuss.python.org/c/packaging>`__."

#: ../source/glossary.rst:296
msgid "Python Package Index (PyPI)"
msgstr "Python Package Index (PyPI)"

#: ../source/glossary.rst:299
msgid ""
"`PyPI <https://pypi.org>`_ is the default :term:`Package Index` for the "
"Python community. It is open to all Python developers to consume and "
"distribute their distributions."
msgstr ""
"`PyPI <https://pypi.org>`_ é o :term:`Índice de Pacotes` padrão para a "
"comunidade Python. Está aberto a todos os desenvolvedores Python para "
"consumir e distribuir suas distribuições."

#: ../source/glossary.rst:302
msgid "pypi.org"
msgstr "pypi.org"

#: ../source/glossary.rst:305
msgid ""
"`pypi.org <https://pypi.org>`_ is the domain name for the :term:`Python "
"Package Index (PyPI)`. It replaced the legacy index domain name, ``pypi."
"python.org``, in 2017. It is powered by :ref:`warehouse`."
msgstr ""
"`pypi.org <https://pypi.org>`_ é o nome de domínio do :term:`Python Package "
"Index (PyPI)`. Ele substituiu o nome de domínio do índice legado, ``pypi."
"python.org``, em 2017. Ele é tornado possível pelo :ref:`warehouse`."

#: ../source/glossary.rst:309
msgid "pyproject.toml"
msgstr "pyproject.toml"

#: ../source/glossary.rst:312
msgid ""
"The tool-agnostic :term:`Project` specification file. Defined in :pep:`518`."
msgstr ""
"O arquivo de especificação agnóstica de ferramenta para :term:`Projetos "
"<Project>`. Definido na :pep:`518`."

#: ../source/glossary.rst:314
msgid "Release"
msgstr "Lançamento"

#: ../source/glossary.rst:317
msgid ""
"A snapshot of a :term:`Project` at a particular point in time, denoted by a "
"version identifier."
msgstr ""
"Um snapshot de um :term:`Projeto` em um determinado ponto no tempo, denotado "
"por um identificador de versão."

#: ../source/glossary.rst:320
msgid ""
"Making a release may entail the publishing of multiple :term:`Distributions "
"<Distribution Package>`.  For example, if version 1.0 of a project was "
"released, it could be available in both a source distribution format and a "
"Windows installer distribution format."
msgstr ""
"Fazer um lançamento pode implicar na publicação de várias :term:"
"`Distribuições <Distribution Package>`. Por exemplo, se a versão 1.0 de um "
"projeto foi lançada, ele pode estar disponível em um formato de distribuição "
"fonte e um formato de distribuição de instalador do Windows."

#: ../source/glossary.rst:325
msgid "Requirement"
msgstr "Requisito"

#: ../source/glossary.rst:328
msgid ""
"A specification for a :term:`package <Distribution Package>` to be "
"installed.  :ref:`pip`, the :term:`PYPA <Python Packaging Authority (PyPA)>` "
"recommended installer, allows various forms of specification that can all be "
"considered a \"requirement\". For more information, see the :ref:`pip:pip "
"install` reference."
msgstr ""
"Uma especificação para um :term:`pacote <Distribution Package>` a ser "
"instalado. :ref:`pip`, o instalador recomendado do :term:`PYPA <Python "
"Packaging Authority (PyPA)>`, permite várias formas de especificação que "
"podem ser consideradas um \"requisito\". Para obter mais informações, "
"consulte a referência de :ref:`pip:pip install`."

#: ../source/glossary.rst:334
msgid "Requirement Specifier"
msgstr "Especificador de Requisitos"

#: ../source/glossary.rst:337
msgid ""
"A format used by :ref:`pip` to install packages from a :term:`Package "
"Index`. For an EBNF diagram of the format, see :ref:`dependency-specifiers`. "
"For example, \"foo>=1.3\" is a requirement specifier, where \"foo\" is the "
"project name, and the \">=1.3\" portion is the :term:`Version Specifier`"
msgstr ""
"Um formato usado por :ref:`pip` para instalar pacotes de um :term:`Índice de "
"Pacotes`. Para um diagrama EBNF do formato, veja :ref:`dependency-"
"specifiers`. Por exemplo, \"foo>=1.3\" é um especificador de requisitos, "
"onde \"foo\" é o nome do projeto e a parte \">=1.3\" é o :term:"
"`Especificador de Versão`"

#: ../source/glossary.rst:342
msgid "Requirements File"
msgstr "Arquivo de Requisitos"

#: ../source/glossary.rst:345
msgid ""
"A file containing a list of :term:`Requirements <Requirement>` that can be "
"installed using :ref:`pip`. For more information, see the :ref:`pip` docs "
"on :ref:`pip:Requirements Files`."
msgstr ""
"Um arquivo contendo uma lista de :term:`Requisitos <Requirement>` que podem "
"ser instalados usando :ref:`pip`. Para mais informações, veja a "
"documentação :ref:`pip` em :ref:`pip:Requirements Files`."

#: ../source/glossary.rst:349
#, fuzzy
msgid "Root License Directory"
msgstr "Projetos em subdiretórios"

#: ../source/glossary.rst:350
#, fuzzy
#| msgid "Local directory:"
msgid "License Directory"
msgstr "Diretório local:"

#: ../source/glossary.rst:353
msgid ""
"The directory under which license files are stored in a :term:`Project "
"Source Tree`, :term:`Distribution Archive` or :term:`Installed Project`. For "
"a :term:`Project Source Tree` or :term:`Source Distribution (or \"sdist\")`, "
"this is the :term:`Project Root Directory`. For a :term:`Built Distribution` "
"or :term:`Installed Project`, this is the :file:`.dist-info/licenses/` "
"directory of the wheel archive or project folder respectively. Also, the "
"root directory that paths recorded in the ``License-File`` :term:`Core "
"Metadata Field` are relative to."
msgstr ""

#: ../source/glossary.rst:366
#: ../source/guides/distributing-packages-using-setuptools.rst:59
msgid "setup.py"
msgstr "setup.py"

#: ../source/glossary.rst:367
#: ../source/guides/distributing-packages-using-setuptools.rst:80
msgid "setup.cfg"
msgstr "setup.cfg"

#: ../source/glossary.rst:370
msgid ""
"The project specification files for :ref:`distutils` and :ref:`setuptools`. "
"See also :term:`pyproject.toml`."
msgstr ""
"Os arquivos de especificação do projeto para :ref:`distutils` e :ref:"
"`setuptools`. Veja também :term:`pyproject.toml`."

#: ../source/glossary.rst:373
msgid "Source Archive"
msgstr "Arquivo Fonte"

#: ../source/glossary.rst:376
msgid ""
"An archive containing the raw source code for a :term:`Release`, prior to "
"creation of a :term:`Source Distribution <Source Distribution (or "
"\"sdist\")>` or :term:`Built Distribution`."
msgstr ""
"Um arquivo contendo o código-fonte bruto para um :term:`Lançamento "
"<Release>`, antes da criação de uma :term:`Distribuição Fonte <Source "
"Distribution (or \"sdist\")>` ou :term:`Distribuição Construída <Built "
"Distribution>`."

#: ../source/glossary.rst:380
msgid "Source Distribution (or \"sdist\")"
msgstr "Distribuição Fonte (ou \"sdist\")"

#: ../source/glossary.rst:383
#, fuzzy
msgid ""
"A :term:`distribution <Distribution Archive>` format (usually generated "
"using ``python -m build --sdist``) that provides metadata and the essential "
"source files needed for installing by a tool like :ref:`pip`, or for "
"generating a :term:`Built Distribution`. See :ref:`package-formats` for more "
"information."
msgstr ""
"Um formato de :term:`distribuição <Distribution Package>` (geralmente gerado "
"usando ``python -m build sdist``) que fornece metadados e os arquivos-fonte "
"essenciais necessários para a instalação por uma ferramenta como :ref:`pip`, "
"ou para gerar uma :term:`Distribuição Construída <Built Distribution>`. "
"Veja :ref:`package-formats` para mais informações."

#: ../source/glossary.rst:389
msgid "System Package"
msgstr "Pacote de Sistemas"

#: ../source/glossary.rst:392
msgid ""
"A package provided in a format native to the operating system, e.g. an rpm "
"or dpkg file."
msgstr ""
"Um pacote fornecido em um formato nativo para o sistema operacional, por "
"exemplo, um arquivo rpm ou dpkg."

#: ../source/glossary.rst:395
msgid "Version Specifier"
msgstr "Especificador de Versão"

#: ../source/glossary.rst:398
msgid ""
"The version component of a :term:`Requirement Specifier`. For example, the "
"\">=1.3\" portion of \"foo>=1.3\".  Read the :ref:`Version specifier "
"specification <version-specifiers>` for a full description of the specifiers "
"that Python packaging currently supports.  Support for this specification "
"was implemented in :ref:`setuptools` v8.0 and :ref:`pip` v6.0."
msgstr ""
"O componente de versão de um :term:`Especificador de Requisitos <Requirement "
"Specifier>`. Por exemplo, a parte \">=1.3\" de \"foo>=1.3\". Leia a :ref:"
"`especificação de especificador de versão <version-specifier>` para a "
"especificação completa dos especificadores que o empacotamento do Python "
"oferece suporte atualmente. O suporte para esta especificação foi "
"implementado no :ref:`setuptools` v8.0 e no :ref:`pip` v6.0."

#: ../source/glossary.rst:403
msgid "Virtual Environment"
msgstr "Ambiente Virtual"

#: ../source/glossary.rst:406
msgid ""
"An isolated Python environment that allows packages to be installed for use "
"by a particular application, rather than being installed system wide. For "
"more information, see the section on :ref:`Creating and using Virtual "
"Environments`."
msgstr ""
"Um ambiente Python isolado que permite que os pacotes sejam instalados para "
"uso por uma aplicação específica, em vez de serem instalados em todo o "
"sistema. Para obter mais informações, consulte a seção sobre :ref:`Creating "
"and using Virtual Environments`."

#: ../source/glossary.rst:411
#, fuzzy
msgid "Wheel Format"
msgstr "Formato de arquivos"

#: ../source/glossary.rst:412
msgid "Wheel"
msgstr "Wheel"

#: ../source/glossary.rst:415
msgid ""
"The standard :term:`Built Distribution` format originally introduced in :pep:"
"`427` and defined by the :ref:`binary-distribution-format` specification. "
"See :ref:`package-formats` for more information. Not to be confused with its "
"reference implementation, the :term:`Wheel Project`."
msgstr ""

#: ../source/glossary.rst:422
#, fuzzy
msgid "Wheel Project"
msgstr "Projeto"

#: ../source/glossary.rst:425
msgid ""
"The PyPA reference implementation of the :term:`Wheel Format`; see :ref:"
"`wheel`."
msgstr ""

#: ../source/glossary.rst:427
msgid "Working Set"
msgstr "Conjunto de Trabalho"

#: ../source/glossary.rst:430
msgid ""
"A collection of :term:`distributions <Distribution Package>` available for "
"importing. These are the distributions that are on the `sys.path` variable. "
"At most, one :term:`Distribution <Distribution Package>` for a project is "
"possible in a working set."
msgstr ""
"Uma coleção de :term:`distribuições <Distribution Package>` disponíveis para "
"importação. Estas são as distribuições que estão na variável `sys.path`. No "
"máximo, uma :term:`Distribuição <Distribution Package>` para um projeto é "
"possível em um conjunto de trabalho."

#: ../source/guides/analyzing-pypi-package-downloads.rst:5
msgid "Analyzing PyPI package downloads"
msgstr "Analisando downloads de pacotes PyPI"

#: ../source/guides/analyzing-pypi-package-downloads.rst:7
msgid ""
"This section covers how to use the public PyPI download statistics dataset "
"to learn more about downloads of a package (or packages) hosted on PyPI. For "
"example, you can use it to discover the distribution of Python versions used "
"to download a package."
msgstr ""
"Esta seção cobre como usar o conjunto de dados de estatísticas de download "
"público do PyPI para saber mais sobre os downloads de um pacote (ou pacotes) "
"hospedado no PyPI. Por exemplo, você pode usá-lo para descobrir a "
"distribuição das versões do Python usadas para baixar um pacote."

#: ../source/guides/analyzing-pypi-package-downloads.rst:14
#: ../source/guides/supporting-windows-using-appveyor.rst:17
msgid "Background"
msgstr "Contexto"

#: ../source/guides/analyzing-pypi-package-downloads.rst:16
msgid "PyPI does not display download statistics for a number of reasons: [#]_"
msgstr "O PyPI não exibe estatísticas de download por vários motivos: [#]_"

#: ../source/guides/analyzing-pypi-package-downloads.rst:18
msgid ""
"**Inefficient to make work with a Content Distribution Network (CDN):** "
"Download statistics change constantly. Including them in project pages, "
"which are heavily cached, would require invalidating the cache more often, "
"and reduce the overall effectiveness of the cache."
msgstr ""
"**Ineficiente para fazer funcionar com uma Rede de Distribuição de Conteúdo "
"(CDN):** As estatísticas de download mudam constantemente. Incluí-las nas "
"páginas do projeto, que são altamente armazenadas em cache, exigiria a "
"invalidação do cache com mais frequência e reduziria a eficácia geral do "
"cache."

#: ../source/guides/analyzing-pypi-package-downloads.rst:23
msgid ""
"**Highly inaccurate:** A number of things prevent the download counts from "
"being accurate, some of which include:"
msgstr ""
"**Altamente imprecisa:** Várias coisas impedem que as contagens de download "
"sejam precisas, algumas das quais incluem:"

#: ../source/guides/analyzing-pypi-package-downloads.rst:26
msgid "``pip``'s download cache (lowers download counts)"
msgstr "Cache de download do ``pip`` (diminui a contagem de downloads)"

#: ../source/guides/analyzing-pypi-package-downloads.rst:27
msgid ""
"Internal or unofficial mirrors (can both raise or lower download counts)"
msgstr ""
"Espelhos internos ou não oficiais (pode aumentar ou diminuir as contagens de "
"download)"

#: ../source/guides/analyzing-pypi-package-downloads.rst:28
msgid "Packages not hosted on PyPI (for comparisons sake)"
msgstr "Pacotes não hospedados no PyPI (para fins de comparação)"

#: ../source/guides/analyzing-pypi-package-downloads.rst:29
msgid ""
"Unofficial scripts or attempts at download count inflation (raises download "
"counts)"
msgstr ""
"Scripts não oficiais ou tentativas de aumento da contagem de download "
"(aumenta a contagem de downloads)"

#: ../source/guides/analyzing-pypi-package-downloads.rst:31
msgid "Known historical data quality issues (lowers download counts)"
msgstr ""
"Problemas conhecidos de qualidade de dados históricos (diminui a contagem de "
"downloads)"

#: ../source/guides/analyzing-pypi-package-downloads.rst:33
msgid ""
"**Not particularly useful:** Just because a project has been downloaded a "
"lot doesn't mean it's good; Similarly just because a project hasn't been "
"downloaded a lot doesn't mean it's bad!"
msgstr ""
"**Não é particularmente útil:** Só porque um projeto foi muito baixado, não "
"significa que ele seja bom; Da mesma forma, só porque um projeto não foi "
"muito baixado, não significa que ele seja ruim!"

#: ../source/guides/analyzing-pypi-package-downloads.rst:37
msgid ""
"In short, because its value is low for various reasons, and the tradeoffs "
"required to make it work are high, it has been not an effective use of "
"limited resources."
msgstr ""
"Resumindo, como seu valor é baixo por vários motivos e as compensações "
"necessárias para fazê-lo funcionar são altas, não tem sido um uso eficaz de "
"recursos limitados."

#: ../source/guides/analyzing-pypi-package-downloads.rst:42
msgid "Public dataset"
msgstr "Conjunto de dados públicos"

#: ../source/guides/analyzing-pypi-package-downloads.rst:44
msgid ""
"As an alternative, the `Linehaul project <https://github.com/pypa/linehaul-"
"cloud-function/>`__ streams download logs from PyPI to `Google BigQuery`_ "
"[#]_, where they are stored as a public dataset."
msgstr ""
"Como alternativa, o `projeto Linehaul <https://github.com/pypa/linehaul-"
"cloud-function/>`__ transmite registros de download do PyPI para o `Google "
"BigQuery`_ [#]_, onde são armazenados como um conjunto de dados público."

#: ../source/guides/analyzing-pypi-package-downloads.rst:49
msgid "Getting set up"
msgstr "Preparando-se"

#: ../source/guides/analyzing-pypi-package-downloads.rst:51
msgid ""
"In order to use `Google BigQuery`_ to query the `public PyPI download "
"statistics dataset`_, you'll need a Google account and to enable the "
"BigQuery API on a Google Cloud Platform project. You can run up to 1TB of "
"queries per month `using the BigQuery free tier without a credit card "
"<https://cloud.google.com/blog/products/data-analytics/query-without-a-"
"credit-card-introducing-bigquery-sandbox>`__"
msgstr ""
"Para usar o `Google BigQuery`_ para consultar o `conjunto de dados público "
"de estatísticas de download do PyPI`_, você precisará de uma conta do Google "
"e habilitar a API do BigQuery em um projeto do Google Cloud Platform. Você "
"pode executar até 1 TB de consultas por mês `usando o free tier do BigQuery "
"sem um cartão de crédito <https://cloud.google.com/blog/products/data-"
"analytics/query-without-a-credit-card-introducing-bigquery-sandbox>`__"

#: ../source/guides/analyzing-pypi-package-downloads.rst:57
msgid "Navigate to the `BigQuery web UI`_."
msgstr "Acesse a `interface web do BigQuery`_."

#: ../source/guides/analyzing-pypi-package-downloads.rst:58
msgid "Create a new project."
msgstr "Crie um novo projeto."

#: ../source/guides/analyzing-pypi-package-downloads.rst:59
msgid ""
"Enable the `BigQuery API <https://console.developers.google.com/apis/library/"
"bigquery-json.googleapis.com>`__."
msgstr ""
"Habilite a `BigQuery API <https://console.developers.google.com/apis/library/"
"bigquery-json.googleapis.com>`__."

#: ../source/guides/analyzing-pypi-package-downloads.rst:62
msgid ""
"For more detailed instructions on how to get started with BigQuery, check "
"out the `BigQuery quickstart guide <https://cloud.google.com/bigquery/docs/"
"quickstarts/quickstart-web-ui>`__."
msgstr ""
"Para obter instruções mais detalhadas sobre como começar a usar o BigQuery, "
"consulte o `guia de início rápido do BigQuery <https://cloud.google.com/"
"bigquery/docs/quickstarts/quickstart-web-ui>`__."

#: ../source/guides/analyzing-pypi-package-downloads.rst:68
msgid "Data schema"
msgstr "Esquema de dados"

#: ../source/guides/analyzing-pypi-package-downloads.rst:70
msgid ""
"Linehaul writes an entry in a ``bigquery-public-data.pypi.file_downloads`` "
"table for each download. The table contains information about what file was "
"downloaded and how it was downloaded. Some useful columns from the `table "
"schema <https://console.cloud.google.com/bigquery?pli=1&p=bigquery-public-"
"data&d=pypi&t=file_downloads&page=table>`__ include:"
msgstr ""
"Linehaul escreve uma entrada em uma tabela ``bigquery-public-data.pypi."
"file_downloads`` para cada download. A tabela contém informações sobre qual "
"arquivo foi baixado e como foi baixado. Algumas colunas úteis do `esquema da "
"tabela <https://console.cloud.google.com/bigquery?pli=1&p=bigquery-public-"
"data&d=pypi&t=file_downloads&page=table>`__ inclui:"

#: ../source/guides/analyzing-pypi-package-downloads.rst:77
msgid "Column"
msgstr "Coluna"

#: ../source/guides/analyzing-pypi-package-downloads.rst:77
#: ../source/specifications/core-metadata.rst:206
#: ../source/specifications/well-known-project-urls.rst:106
msgid "Description"
msgstr "Descrição"

#: ../source/guides/analyzing-pypi-package-downloads.rst:77
#: ../source/specifications/dependency-groups.rst:23
#: ../source/specifications/dependency-specifiers.rst:29
#: ../source/specifications/direct-url-data-structure.rst:242
#: ../source/specifications/version-specifiers.rst:1072
msgid "Examples"
msgstr "Exemplos"

#: ../source/guides/analyzing-pypi-package-downloads.rst:79
msgid "timestamp"
msgstr "timestamp"

#: ../source/guides/analyzing-pypi-package-downloads.rst:79
msgid "Date and time"
msgstr "Data e hora"

#: ../source/guides/analyzing-pypi-package-downloads.rst:79
msgid "``2020-03-09 00:33:03 UTC``"
msgstr "``2020-03-09 00:33:03 UTC``"

#: ../source/guides/analyzing-pypi-package-downloads.rst:81
msgid "file.project"
msgstr "file.project"

#: ../source/guides/analyzing-pypi-package-downloads.rst:81
msgid "Project name"
msgstr "Nome do projeto"

#: ../source/guides/analyzing-pypi-package-downloads.rst:81
msgid "``pipenv``, ``nose``"
msgstr "``pipenv``, ``nose``"

#: ../source/guides/analyzing-pypi-package-downloads.rst:83
msgid "file.version"
msgstr "file.version"

#: ../source/guides/analyzing-pypi-package-downloads.rst:83
msgid "Package version"
msgstr "Versão do pacote"

#: ../source/guides/analyzing-pypi-package-downloads.rst:83
msgid "``0.1.6``, ``1.4.2``"
msgstr "``0.1.6``, ``1.4.2``"

#: ../source/guides/analyzing-pypi-package-downloads.rst:85
msgid "details.installer.name"
msgstr "details.installer.name"

#: ../source/guides/analyzing-pypi-package-downloads.rst:85
msgid "Installer"
msgstr "Instalador"

#: ../source/guides/analyzing-pypi-package-downloads.rst:85
msgid "pip, :ref:`bandersnatch`"
msgstr "pip, :ref:`bandersnatch`"

#: ../source/guides/analyzing-pypi-package-downloads.rst:87
msgid "details.python"
msgstr "details.python"

#: ../source/guides/analyzing-pypi-package-downloads.rst:87
msgid "Python version"
msgstr "Versão do Python"

#: ../source/guides/analyzing-pypi-package-downloads.rst:87
msgid "``2.7.12``, ``3.6.4``"
msgstr "``2.7.12``, ``3.6.4``"

#: ../source/guides/analyzing-pypi-package-downloads.rst:92
msgid "Useful queries"
msgstr "Consultas úteis"

#: ../source/guides/analyzing-pypi-package-downloads.rst:94
msgid ""
"Run queries in the `BigQuery web UI`_ by clicking the \"Compose query\" "
"button."
msgstr ""
"Executa consultas na `interface web do BigQuery`_ clicando no botão "
"\"Compose query\"."

#: ../source/guides/analyzing-pypi-package-downloads.rst:96
msgid ""
"Note that the rows are stored in a partitioned table, which helps limit the "
"cost of queries. These example queries analyze downloads from recent history "
"by filtering on the ``timestamp`` column."
msgstr ""
"Observe que as linhas são armazenadas em uma tabela particionada, o que "
"ajuda a limitar o custo das consultas. Essas consultas de exemplo analisam "
"downloads do histórico recente filtrando na coluna ``timestamp``."

#: ../source/guides/analyzing-pypi-package-downloads.rst:101
msgid "Counting package downloads"
msgstr "Contando downloads de pacotes"

#: ../source/guides/analyzing-pypi-package-downloads.rst:103
msgid ""
"The following query counts the total number of downloads for the project "
"\"pytest\"."
msgstr ""
"A consulta a seguir conta o número total de downloads do projeto \"pytest\"."

#: ../source/guides/analyzing-pypi-package-downloads.rst:118
#: ../source/guides/analyzing-pypi-package-downloads.rst:139
#: ../source/guides/analyzing-pypi-package-downloads.rst:167
#: ../source/guides/analyzing-pypi-package-downloads.rst:204
msgid "num_downloads"
msgstr "num_downloads"

#: ../source/guides/analyzing-pypi-package-downloads.rst:120
msgid "26190085"
msgstr "26190085"

#: ../source/guides/analyzing-pypi-package-downloads.rst:123
msgid ""
"To count downloads from pip only, filter on the ``details.installer.name`` "
"column."
msgstr ""
"Para contar apenas os downloads do pip, filtre na coluna ``details.installer."
"name``."

#: ../source/guides/analyzing-pypi-package-downloads.rst:141
msgid "24334215"
msgstr "24334215"

#: ../source/guides/analyzing-pypi-package-downloads.rst:145
msgid "Package downloads over time"
msgstr "Downloads de pacotes ao longo do tempo"

#: ../source/guides/analyzing-pypi-package-downloads.rst:147
msgid ""
"To group by monthly downloads, use the ``TIMESTAMP_TRUNC`` function. Also "
"filtering by this column reduces corresponding costs."
msgstr ""
"Para agrupar por downloads mensais, use a função ``TIMESTAMP_TRUNC``. Além "
"disso, a filtragem por esta coluna reduz os custos correspondentes."

#: ../source/guides/analyzing-pypi-package-downloads.rst:167
msgid "month"
msgstr "mês"

#: ../source/guides/analyzing-pypi-package-downloads.rst:169
msgid "1956741"
msgstr "1956741"

#: ../source/guides/analyzing-pypi-package-downloads.rst:169
msgid "2018-01-01"
msgstr "2018-01-01"

#: ../source/guides/analyzing-pypi-package-downloads.rst:171
msgid "2344692"
msgstr "2344692"

#: ../source/guides/analyzing-pypi-package-downloads.rst:171
msgid "2017-12-01"
msgstr "2017-12-01"

#: ../source/guides/analyzing-pypi-package-downloads.rst:173
msgid "1730398"
msgstr "1730398"

#: ../source/guides/analyzing-pypi-package-downloads.rst:173
msgid "2017-11-01"
msgstr "2017-11-01"

#: ../source/guides/analyzing-pypi-package-downloads.rst:175
msgid "2047310"
msgstr "2047310"

#: ../source/guides/analyzing-pypi-package-downloads.rst:175
msgid "2017-10-01"
msgstr "2017-10-01"

#: ../source/guides/analyzing-pypi-package-downloads.rst:177
msgid "1744443"
msgstr "1744443"

#: ../source/guides/analyzing-pypi-package-downloads.rst:177
msgid "2017-09-01"
msgstr "2017-09-01"

#: ../source/guides/analyzing-pypi-package-downloads.rst:179
msgid "1916952"
msgstr "1916952"

#: ../source/guides/analyzing-pypi-package-downloads.rst:179
msgid "2017-08-01"
msgstr "2017-08-01"

#: ../source/guides/analyzing-pypi-package-downloads.rst:183
msgid "Python versions over time"
msgstr "Versões Python ao longo do tempo"

#: ../source/guides/analyzing-pypi-package-downloads.rst:185
msgid ""
"Extract the Python version from the ``details.python`` column. Warning: This "
"query processes over 500 GB of data."
msgstr ""
"Extrai a versão Python da coluna ``details.python``. Aviso: esta consulta "
"processa mais de 500 GB de dados."

#: ../source/guides/analyzing-pypi-package-downloads.rst:204
msgid "python"
msgstr "python"

#: ../source/guides/analyzing-pypi-package-downloads.rst:206
msgid "3.7"
msgstr "3.7"

#: ../source/guides/analyzing-pypi-package-downloads.rst:206
msgid "18051328726"
msgstr "18051328726"

#: ../source/guides/analyzing-pypi-package-downloads.rst:208
msgid "3.6"
msgstr "3.6"

#: ../source/guides/analyzing-pypi-package-downloads.rst:208
msgid "9635067203"
msgstr "9635067203"

#: ../source/guides/analyzing-pypi-package-downloads.rst:210
msgid "3.8"
msgstr "3.8"

#: ../source/guides/analyzing-pypi-package-downloads.rst:210
msgid "7781904681"
msgstr "7781904681"

#: ../source/guides/analyzing-pypi-package-downloads.rst:212
msgid "2.7"
msgstr "2.7"

#: ../source/guides/analyzing-pypi-package-downloads.rst:212
msgid "6381252241"
msgstr "6381252241"

#: ../source/guides/analyzing-pypi-package-downloads.rst:214
msgid "null"
msgstr "null"

#: ../source/guides/analyzing-pypi-package-downloads.rst:214
msgid "2026630299"
msgstr "2026630299"

#: ../source/guides/analyzing-pypi-package-downloads.rst:216
msgid "3.5"
msgstr "3.5"

#: ../source/guides/analyzing-pypi-package-downloads.rst:216
msgid "1894153540"
msgstr "1894153540"

#: ../source/guides/analyzing-pypi-package-downloads.rst:221
msgid "Getting absolute links to artifacts"
msgstr "Obtendo links absolutos para artefatos"

#: ../source/guides/analyzing-pypi-package-downloads.rst:223
msgid ""
"It's sometimes helpful to be able to get the absolute links to download "
"artifacts from PyPI based on their hashes, e.g. if a particular project or "
"release has been deleted from PyPI. The metadata table includes the ``path`` "
"column, which includes the hash and artifact filename."
msgstr ""
"Às vezes, é útil ser capaz de obter os links absolutos para baixar artefatos "
"de PyPI com base em seus hashes, por exemplo, se um determinado projeto ou "
"versão foi excluído de PyPI. A tabela de metadados inclui a coluna ``path``, "
"que inclui o hash e o nome do arquivo do artefato."

#: ../source/guides/analyzing-pypi-package-downloads.rst:229
msgid ""
"The URL generated here is not guaranteed to be stable, but currently aligns "
"with the URL where PyPI artifacts are hosted."
msgstr ""
"Não é garantido que a URL gerada aqui seja estável, mas atualmente está "
"alinhada com a URL onde os artefatos PyPI estão hospedados."

#: ../source/guides/analyzing-pypi-package-downloads.rst:242
msgid "url"
msgstr "url"

#: ../source/guides/analyzing-pypi-package-downloads.rst:244
msgid ""
"https://files.pythonhosted.org/packages/"
"eb/45/79be82bdeafcecb9dca474cad4003e32ef8e4a0dec6abbd4145ccb02abe1/"
"sampleproject-1.2.0.tar.gz"
msgstr ""
"https://files.pythonhosted.org/packages/"
"eb/45/79be82bdeafcecb9dca474cad4003e32ef8e4a0dec6abbd4145ccb02abe1/"
"sampleproject-1.2.0.tar.gz"

#: ../source/guides/analyzing-pypi-package-downloads.rst:246
msgid ""
"https://files.pythonhosted.org/"
"packages/56/0a/178e8bbb585ec5b13af42dae48b1d7425d6575b3ff9b02e5ec475e38e1d6/"
"sampleproject_nomura-1.2.0-py2.py3-none-any.whl"
msgstr ""
"https://files.pythonhosted.org/"
"packages/56/0a/178e8bbb585ec5b13af42dae48b1d7425d6575b3ff9b02e5ec475e38e1d6/"
"sampleproject_nomura-1.2.0-py2.py3-none-any.whl"

#: ../source/guides/analyzing-pypi-package-downloads.rst:248
msgid ""
"https://files.pythonhosted.org/"
"packages/63/88/3200eeaf22571f18d2c41e288862502e33365ccbdc12b892db23f51f8e70/"
"sampleproject_nomura-1.2.0.tar.gz"
msgstr ""
"https://files.pythonhosted.org/"
"packages/63/88/3200eeaf22571f18d2c41e288862502e33365ccbdc12b892db23f51f8e70/"
"sampleproject_nomura-1.2.0.tar.gz"

#: ../source/guides/analyzing-pypi-package-downloads.rst:250
msgid ""
"https://files.pythonhosted.org/packages/21/"
"e9/2743311822e71c0756394b6c5ab15cb64ca66c78c6c6a5cd872c9ed33154/"
"sampleproject_doubleyoung18-1.3.0-py2.py3-none-any.whl"
msgstr ""
"https://files.pythonhosted.org/packages/21/"
"e9/2743311822e71c0756394b6c5ab15cb64ca66c78c6c6a5cd872c9ed33154/"
"sampleproject_doubleyoung18-1.3.0-py2.py3-none-any.whl"

#: ../source/guides/analyzing-pypi-package-downloads.rst:252
msgid ""
"https://files.pythonhosted.org/"
"packages/6f/5b/2f3fe94e1c02816fe23c7ceee5292fb186912929e1972eee7fb729fa27af/"
"sampleproject-1.3.1.tar.gz"
msgstr ""
"https://files.pythonhosted.org/"
"packages/6f/5b/2f3fe94e1c02816fe23c7ceee5292fb186912929e1972eee7fb729fa27af/"
"sampleproject-1.3.1.tar.gz"

#: ../source/guides/analyzing-pypi-package-downloads.rst:257
msgid "Caveats"
msgstr "Ressalvas"

#: ../source/guides/analyzing-pypi-package-downloads.rst:259
msgid ""
"In addition to the caveats listed in the background above, Linehaul suffered "
"from a bug which caused it to significantly under-report download statistics "
"prior to July 26, 2018. Downloads before this date are proportionally "
"accurate (e.g. the percentage of Python 2 vs. Python 3 downloads) but total "
"numbers are lower than actual by an order of magnitude."
msgstr ""
"Além das advertências listadas no histórico acima, Linehaul sofreu de um bug "
"que causou um subestimamento das estatísticas de download antes de 26 de "
"julho de 2018. Downloads antes dessa data são proporcionalmente precisos "
"(por exemplo, a porcentagem de Python 2 vs. Python 3 downloads), mas os "
"números totais são menores do que o real em uma ordem de magnitude."

#: ../source/guides/analyzing-pypi-package-downloads.rst:267
msgid "Additional tools"
msgstr "Ferramentas adicionais"

#: ../source/guides/analyzing-pypi-package-downloads.rst:269
msgid ""
"Besides using the BigQuery console, there are some additional tools which "
"may be useful when analyzing download statistics."
msgstr ""
"Além de usar o console do BigQuery, existem algumas ferramentas adicionais "
"que podem ser úteis ao analisar estatísticas de download."

#: ../source/guides/analyzing-pypi-package-downloads.rst:273
msgid "``google-cloud-bigquery``"
msgstr "``google-cloud-bigquery``"

#: ../source/guides/analyzing-pypi-package-downloads.rst:275
msgid ""
"You can also access the public PyPI download statistics dataset "
"programmatically via the BigQuery API and the `google-cloud-bigquery`_ "
"project, the official Python client library for BigQuery."
msgstr ""
"Você também pode acessar o conjunto de dados público de estatísticas de "
"download PyPI de maneira programática por meio da API do BigQuery e do "
"projeto `google-cloud-bigquery`_, a biblioteca cliente oficial do Python "
"para BigQuery."

#: ../source/guides/analyzing-pypi-package-downloads.rst:303
msgid "``pypinfo``"
msgstr "``pypinfo``"

#: ../source/guides/analyzing-pypi-package-downloads.rst:305
msgid ""
"`pypinfo`_ is a command-line tool which provides access to the dataset and "
"can generate several useful queries. For example, you can query the total "
"number of download for a package with the command ``pypinfo package_name``."
msgstr ""
"`pypinfo`_ é uma ferramenta de linha de comando que fornece acesso ao "
"conjunto de dados e pode gerar várias consultas úteis. Por exemplo, você "
"pode consultar o número total de downloads de um pacote com o comando "
"``pypinfo package_name``."

#: ../source/guides/analyzing-pypi-package-downloads.rst:309
msgid "Install `pypinfo`_ using pip."
msgstr "Instale `pypinfo`_ usando o pip."

#: ../source/guides/analyzing-pypi-package-downloads.rst:315
msgid "Usage:"
msgstr "Uso:"

#: ../source/guides/analyzing-pypi-package-downloads.rst:331
msgid "``pandas-gbq``"
msgstr "``pandas-gbq``"

#: ../source/guides/analyzing-pypi-package-downloads.rst:333
msgid ""
"The `pandas-gbq`_ project allows for accessing query results via `Pandas`_."
msgstr ""
"O projeto `pandas-gbq`_ permite acessar resultados de pesquisa com `Pandas`_."

#: ../source/guides/analyzing-pypi-package-downloads.rst:337
#: ../source/specifications/dependency-specifiers.rst:535
msgid "References"
msgstr "Referências"

#: ../source/guides/analyzing-pypi-package-downloads.rst:339
msgid ""
"`PyPI Download Counts deprecation email <https://mail.python.org/pipermail/"
"distutils-sig/2013-May/020855.html>`__"
msgstr ""
"`E-mail de descontinuação das contagens de download do PyPI <https://mail."
"python.org/pipermail/distutils-sig/2013-May/020855.html>`__"

#: ../source/guides/analyzing-pypi-package-downloads.rst:340
msgid ""
"`PyPI BigQuery dataset announcement email <https://mail.python.org/pipermail/"
"distutils-sig/2016-May/028986.html>`__"
msgstr ""
"`E-mail de anúncio do conjunto de dados BigQuery do PyPI <https://mail."
"python.org/pipermail/distutils-sig/2016-May/028986.html>`__"

#: ../source/guides/creating-and-discovering-plugins.rst:3
msgid "Creating and discovering plugins"
msgstr "Criando e descobrindo plug-ins"

#: ../source/guides/creating-and-discovering-plugins.rst:5
msgid ""
"Often when creating a Python application or library you'll want the ability "
"to provide customizations or extra features via **plugins**. Because Python "
"packages can be separately distributed, your application or library may want "
"to automatically **discover** all of the plugins available."
msgstr ""
"Frequentemente, ao criar uma aplicação ou biblioteca Python, você desejará "
"ter a capacidade de fornecer personalizações ou recursos extras por meio de "
"**plug-ins**. Como os pacotes Python podem ser distribuídos separadamente, "
"sua aplicação ou biblioteca pode querer **descobrir** automaticamente todos "
"os plugins disponíveis."

#: ../source/guides/creating-and-discovering-plugins.rst:10
msgid "There are three major approaches to doing automatic plugin discovery:"
msgstr ""
"Existem três abordagens principais para fazer a descoberta automática de "
"plugins:"

#: ../source/guides/creating-and-discovering-plugins.rst:12
msgid "`Using naming convention`_."
msgstr "`Usando convenção de nomenclatura`_."

#: ../source/guides/creating-and-discovering-plugins.rst:13
msgid "`Using namespace packages`_."
msgstr "`Usando pacotes de espaço de nomes`_."

#: ../source/guides/creating-and-discovering-plugins.rst:14
msgid "`Using package metadata`_."
msgstr "`Usando metadados de pacote`_."

#: ../source/guides/creating-and-discovering-plugins.rst:18
msgid "Using naming convention"
msgstr "Usando convenção de nomenclatura"

#: ../source/guides/creating-and-discovering-plugins.rst:20
msgid ""
"If all of the plugins for your application follow the same naming "
"convention, you can use :func:`pkgutil.iter_modules` to discover all of the "
"top-level modules that match the naming convention. For example, `Flask`_ "
"uses the naming convention ``flask_{plugin_name}``. If you wanted to "
"automatically discover all of the Flask plugins installed:"
msgstr ""
"Se todos os plugins para sua aplicação seguem a mesma convenção de "
"nomenclatura, você pode usar :func:`pkgutil.iter_modules` para descobrir "
"todos os módulos de nível superior que correspondem à convenção de "
"nomenclatura. Por exemplo, `Flask`_ usa a convenção de nomenclatura "
"``flask_{nome_plugin}``. Se você quiser descobrir automaticamente todos os "
"plugins Flask instalados:"

#: ../source/guides/creating-and-discovering-plugins.rst:38
msgid ""
"If you had both the `Flask-SQLAlchemy`_ and `Flask-Talisman`_ plugins "
"installed then ``discovered_plugins`` would be:"
msgstr ""
"Se você tivesse os plugins `Flask-SQLAlchemy`_ e `Flask-Talisman`_ "
"instalados, então ``discover_plugins`` seria:"

#: ../source/guides/creating-and-discovering-plugins.rst:48
msgid ""
"Using naming convention for plugins also allows you to query the Python "
"Package Index's :ref:`simple repository API <simple-repository-api>` for all "
"packages that conform to your naming convention."
msgstr ""
"Usar a convenção de nomenclatura para plugins também permite que você "
"consulte a :ref:`API de repositório simples <simple-repository-api>` do "
"Índice de Pacotes Python para todos os pacotes que estão em conformidade com "
"a sua convenção de nomenclatura."

#: ../source/guides/creating-and-discovering-plugins.rst:58
msgid "Using namespace packages"
msgstr "Usando pacotes de espaço de nomes"

#: ../source/guides/creating-and-discovering-plugins.rst:60
msgid ""
":doc:`Namespace packages <packaging-namespace-packages>` can be used to "
"provide a convention for where to place plugins and also provides a way to "
"perform discovery. For example, if you make the sub-package ``myapp."
"plugins`` a namespace package then other :term:`distributions <Distribution "
"Package>` can provide modules and packages to that namespace. Once "
"installed, you can use :func:`pkgutil.iter_modules` to discover all modules "
"and packages installed under that namespace:"
msgstr ""
":doc:`Pacotes de espaços de nome <packaging-namespace-packages>` podem ser "
"usados para fornecer uma convenção de onde colocar plugins e também fornece "
"uma maneira de realizar a descoberta. Por exemplo, se você fizer do "
"subpacote ``myapp.plugins`` um pacote de espaço de nomes, então outras :term:"
"`distribuições <Distribution Package>` pode fornecer módulos e pacotes para "
"aquele espaço de nomes. Uma vez instalado, você pode usar :func:`pkgutil."
"iter_modules` para descobrir todos os módulos e pacotes instalados sob esse "
"espaço de nomes:"

#: ../source/guides/creating-and-discovering-plugins.rst:88
msgid ""
"Specifying ``myapp.plugins.__path__`` to :func:`~pkgutil.iter_modules` "
"causes it to only look for the modules directly under that namespace. For "
"example, if you have installed distributions that provide the modules "
"``myapp.plugins.a`` and ``myapp.plugins.b`` then ``discovered_plugins`` in "
"this case would be:"
msgstr ""
"Especificar ``myapp.plugins.__path__`` para :func:`~pkgutil.iter_modules` "
"faz com que ele procure apenas os módulos diretamente sob aquele espaço de "
"nomes. Por exemplo, se você instalou distribuições que fornecem os módulos "
"``myapp.plugins.a`` e ``myapp.plugins.b``, então ``found_plugins`` neste "
"caso seria:"

#: ../source/guides/creating-and-discovering-plugins.rst:100
msgid ""
"This sample uses a sub-package as the namespace package (``myapp.plugins``), "
"but it's also possible to use a top-level package for this purpose (such as "
"``myapp_plugins``). How to pick the namespace to use is a matter of "
"preference, but it's not recommended to make your project's main top-level "
"package (``myapp`` in this case) a namespace package for the purpose of "
"plugins, as one bad plugin could cause the entire namespace to break which "
"would in turn make your project unimportable. For the \"namespace sub-"
"package\" approach to work, the plugin packages must omit the :file:"
"`__init__.py` for your top-level package directory (``myapp`` in this case) "
"and include the namespace-package style :file:`__init__.py` in the namespace "
"sub-package directory (``myapp/plugins``).  This also means that plugins "
"will need to explicitly pass a list of packages to :func:`setup`'s "
"``packages`` argument instead of using :func:`setuptools.find_packages`."
msgstr ""
"Este exemplo usa um subpacote como o pacote de espaço de nomes (``myapp."
"plugins``), mas também é possível usar um pacote de nível superior para este "
"propósito (como ``myapp_plugins``). Como escolher o espaço de nomes a ser "
"usado é uma questão de preferência, mas não é recomendado fazer do pacote de "
"nível superior principal do seu projeto (``myapp``, neste caso) um pacote de "
"espaço de nomes para fins de plugins, como um plugin ruim poderia fazer com "
"que todo o espaço de nomes seja interrompido, o que, por sua vez, tornaria "
"seu projeto não importável. Para que a abordagem de \"subpacote de espaço de "
"nomes\" funcione, os pacotes de plugin devem omitir o :file:`__init__.py` "
"para o diretório de pacote de nível superior (``myapp``, neste caso) e "
"incluir o estilo de pacote de espaço de nomes :file:`__init__.py` no "
"diretório do subpacote de espaço de nomes (``myapp/plugins``). Isso também "
"significa que os plugins precisarão passar explicitamente uma lista de "
"pacotes para o argumento ``packages`` de :func:`setup` ao invés de usar :"
"func:`setuptools.find_packages`."

#: ../source/guides/creating-and-discovering-plugins.rst:114
msgid ""
"Namespace packages are a complex feature and there are several different "
"ways to create them. It's highly recommended to read the :doc:`packaging-"
"namespace-packages` documentation and clearly document which approach is "
"preferred for plugins to your project."
msgstr ""
"Os pacotes de espaço de nomes são um recurso complexo e existem várias "
"maneiras diferentes de criá-los. É altamente recomendado ler a documentação "
"de :doc:`packaging-namespace-packages` e documentar claramente qual "
"abordagem é preferida para plugins em seu projeto."

#: ../source/guides/creating-and-discovering-plugins.rst:122
msgid "Using package metadata"
msgstr "Usando metadados de pacote"

#: ../source/guides/creating-and-discovering-plugins.rst:124
msgid ""
"Packages can have metadata for plugins described in the :ref:`entry-points`. "
"By specifying them, a package announces that it contains a specific kind of "
"plugin. Another package supporting this kind of plugin can use the metadata "
"to discover that plugin."
msgstr ""
"Os pacotes podem ter metadados para plugins descritos em :ref:`entry-"
"points`. Ao especificá-los, um pacote anuncia que contém um tipo específico "
"de plug-in. Outro pacote que suporta esse tipo de plug-in pode usar os "
"metadados para descobrir esse plug-in."

#: ../source/guides/creating-and-discovering-plugins.rst:128
msgid ""
"For example if you have a package named ``myapp-plugin-a`` and it includes "
"the following in its ``pyproject.toml``:"
msgstr ""
"Por exemplo, se você tem um pacote chamado ``myapp-plugin-a`` e ele inclui o "
"seguinte em seu :file:`pyproject.toml`:"

#: ../source/guides/creating-and-discovering-plugins.rst:136
msgid ""
"Then you can discover and load all of the registered entry points by using :"
"func:`importlib.metadata.entry_points` (or the backport_ "
"``importlib_metadata >= 3.6`` for Python 3.6-3.9):"
msgstr ""
"Então você pode descobrir e carregar todos os pontos de entrada registrados "
"usando :func:`importlib.metadata.entry_points` (ou o backport_ "
"``importlib_metadata >= 3.6`` para Python 3.6-3.9):"

#: ../source/guides/creating-and-discovering-plugins.rst:151
msgid ""
"In this example, ``discovered_plugins`` would be a collection of type :class:"
"`importlib.metadata.EntryPoint`:"
msgstr ""
"Neste exemplo, ``discover_plugins`` seria uma coleção do tipo :class:"
"`importlib.metadata.EntryPoint`:"

#: ../source/guides/creating-and-discovering-plugins.rst:160
msgid ""
"Now the module of your choice can be imported by executing "
"``discovered_plugins['a'].load()``."
msgstr ""
"Agora o módulo de sua escolha pode ser importado executando "
"``discovered_plugins['a'].Load()``."

#: ../source/guides/creating-and-discovering-plugins.rst:163
msgid ""
"The ``entry_point`` specification in :file:`setup.py` is fairly flexible and "
"has a lot of options. It's recommended to read over the entire section on :"
"doc:`entry points <setuptools:userguide/entry_point>` ."
msgstr ""
"A especificação ``entry_point`` em :file:`setup.py` é bastante flexível e "
"tem muitas opções. É recomendado ler toda a seção sobre :doc:`pontos de "
"entrada <setuptools:userguide/entry_point>` ."

#: ../source/guides/creating-and-discovering-plugins.rst:167
msgid ""
"Since this specification is part of the :doc:`standard library <python:"
"library/importlib.metadata>`, most packaging tools other than setuptools "
"provide support for defining entry points."
msgstr ""
"Visto que esta especificação é parte da :doc:`biblioteca padrão <python:"
"library/importlib.metadata>`, a maioria das ferramentas de empacotamento, "
"exceto setuptools, fornecem suporte para definir pontos de entrada."

#: ../source/guides/creating-command-line-tools.rst:5
#, fuzzy
msgid "Creating and packaging command-line tools"
msgstr "Instalando ferramentas de linha de comando autônomas"

#: ../source/guides/creating-command-line-tools.rst:7
msgid ""
"This guide will walk you through creating and packaging a standalone command-"
"line application that can be installed with :ref:`pipx`, a tool for creating "
"and managing :term:`Python Virtual Environments <Virtual Environment>` and "
"exposing the executable scripts of packages (and available manual pages) for "
"use on the command-line."
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:12
#, fuzzy
msgid "Creating the package"
msgstr "Criando arquivos do pacote"

#: ../source/guides/creating-command-line-tools.rst:14
msgid ""
"First of all, create a source tree for the :term:`project <Project>`. For "
"the sake of an example, we'll build a simple tool outputting a greeting (a "
"string) for a person based on arguments given on the command-line."
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:17
#: ../source/guides/tool-recommendations.rst:45
msgid "Todo"
msgstr "Para fazer"

#: ../source/guides/creating-command-line-tools.rst:17
msgid ""
"Advise on the optimal structure of a Python package in another guide or "
"discussion and link to it here."
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:19
msgid ""
"This project will adhere to :ref:`src-layout <src-layout-vs-flat-layout>` "
"and in the end be alike this file tree, with the top-level folder and "
"package name ``greetings``:"
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:33
msgid ""
"The actual code responsible for the tool's functionality will be stored in "
"the file :file:`greet.py`, named after the main module:"
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:62
msgid ""
"The above function receives several keyword arguments that determine how the "
"greeting to output is constructed. Now, construct the command-line interface "
"to provision it with the same, which is done in :file:`cli.py`:"
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:80
msgid ""
"The command-line interface is built with typer_, an easy-to-use CLI parser "
"based on Python type hints. It provides auto-completion and nicely styled "
"command-line help out of the box. Another option would be :py:mod:"
"`argparse`, a command-line parser which is included in Python's standard "
"library. It is sufficient for most needs, but requires a lot of code, "
"usually in ``cli.py``, to function properly. Alternatively, docopt_ makes it "
"possible to create CLI interfaces based solely on docstrings; advanced users "
"are encouraged to make use of click_ (on which ``typer`` is based)."
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:86
msgid ""
"Now, add an empty :file:`__init__.py` file, to define the project as a "
"regular :term:`import package <Import Package>`."
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:88
msgid ""
"The file :file:`__main__.py` marks the main entry point for the application "
"when running it via :mod:`runpy` (i.e. ``python -m greetings``, which works "
"immediately with flat layout, but requires installation of the package with "
"src layout), so initialize the command-line interface here:"
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:100
msgid ""
"In order to enable calling the command-line interface directly from the :"
"term:`source tree <Project Source Tree>`, i.e. as ``python src/greetings``, "
"a certain hack could be placed in this file; read more at :ref:`running-cli-"
"from-source-src-layout`."
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:106
#, fuzzy
msgid "``pyproject.toml``"
msgstr "pyproject.toml"

#: ../source/guides/creating-command-line-tools.rst:108
msgid ""
"The project's :term:`metadata <Pyproject Metadata>` is placed in :term:"
"`pyproject.toml`. The :term:`pyproject metadata keys <Pyproject Metadata "
"Key>` and the ``[build-system]`` table may be filled in as described in :ref:"
"`writing-pyproject-toml`, adding a dependency on ``typer`` (this tutorial "
"uses version *0.12.3*)."
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:111
msgid ""
"For the project to be recognised as a command-line tool, additionally a "
"``console_scripts`` :ref:`entry point <entry-points>` (see :ref:"
"`console_scripts`) needs to be added as a :term:`subkey <Pyproject Metadata "
"Subkey>`:"
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:118
msgid ""
"Now, the project's source tree is ready to be transformed into a :term:"
"`distribution package <Distribution Package>`, which makes it installable."
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:123
#, fuzzy
msgid "Installing the package with ``pipx``"
msgstr "Instalar pacotes usando pip"

#: ../source/guides/creating-command-line-tools.rst:125
msgid ""
"After installing ``pipx`` as described in :ref:`installing-stand-alone-"
"command-line-tools`, install your project:"
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:132
msgid ""
"This will expose the executable script we defined as an entry point and make "
"the command ``greet`` available. Let's test it:"
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:146
msgid ""
"Since this example uses ``typer``, you could now also get an overview of the "
"program's usage by calling it with the ``--help`` option, or configure "
"completions via the ``--install-completion`` option."
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:149
msgid ""
"To just run the program without installing it permanently, use ``pipx run``, "
"which will create a temporary (but cached) virtual environment for it:"
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:156
msgid ""
"This syntax is a bit impractical, however; as the name of the entry point we "
"defined above does not match the package name, we need to state explicitly "
"which executable script to run (even though there is only on in existence)."
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:159
msgid ""
"There is, however, a more practical solution to this problem, in the form of "
"an entry point specific to ``pipx run``. The same can be defined as follows "
"in :file:`pyproject.toml`:"
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:168
msgid ""
"Thanks to this entry point (which *must* match the package name), ``pipx`` "
"will pick up the executable script as the default one and run it, which "
"makes this command possible:"
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:176
#, fuzzy
msgid "Conclusion"
msgstr "Especificador de Versão"

#: ../source/guides/creating-command-line-tools.rst:178
msgid ""
"You know by now how to package a command-line application written in Python. "
"A further step could be to distribute your package, meaning uploading it to "
"a :term:`package index <Package Index>`, most commonly :term:`PyPI <Python "
"Package Index (PyPI)>`. To do that, follow the instructions at :ref:"
"`Packaging your project`. And once you're done, don't forget to :ref:`do "
"some research <analyzing-pypi-package-downloads>` on how your package is "
"received!"
msgstr ""

#: ../source/guides/distributing-packages-using-setuptools.rst:5
msgid "Packaging and distributing projects"
msgstr "Empacotando e distribuindo projetos"

#: ../source/guides/distributing-packages-using-setuptools.rst:7
msgid "Outdated"
msgstr "Desatualizada"

#: ../source/guides/distributing-packages-using-setuptools.rst:8
msgid "2023-12-14"
msgstr "2023-12-14"

#: ../source/guides/distributing-packages-using-setuptools.rst:10
msgid ""
"This section covers some additional details on configuring, packaging and "
"distributing Python projects with ``setuptools`` that aren't covered by the "
"introductory tutorial in :doc:`/tutorials/packaging-projects`.  It still "
"assumes that you are already familiar with the contents of the :doc:`/"
"tutorials/installing-packages` page."
msgstr ""
"Esta seção cobre alguns detalhes adicionais sobre configuração, "
"empacotamento e distribuição de projetos Python com ``setuptools`` que não "
"são cobertos pelo tutorial introdutório em :doc:`/tutorials/packaging-"
"projects`. Ele ainda assume que você já está familiarizado com o conteúdo da "
"página :doc:`/tutorials/installing-packages`."

#: ../source/guides/distributing-packages-using-setuptools.rst:16
msgid ""
"The section does *not* aim to cover best practices for Python project "
"development as a whole.  For example, it does not provide guidance or tool "
"recommendations for version control, documentation, or testing."
msgstr ""
"A seção *não* visa cobrir as melhores práticas para o desenvolvimento de "
"projetos Python como um todo. Por exemplo, ele não fornece orientação ou "
"recomendações de ferramentas para controle de versão, documentação ou teste."

#: ../source/guides/distributing-packages-using-setuptools.rst:20
msgid ""
"For more reference material, see :std:doc:`Building and Distributing "
"Packages <setuptools:userguide/index>` in the :ref:`setuptools` docs, but "
"note that some advisory content there may be outdated. In the event of "
"conflicts, prefer the advice in the Python Packaging User Guide."
msgstr ""
"Para mais material de referência, veja :std:doc:`Construindo e Distribuindo "
"Pacotes <setuptools:userguide/index>` na documentação :ref:`setuptools`, mas "
"note que alguns conteúdos de aviso podem estar desatualizados. No caso de "
"conflitos, dê preferência ao conselho do Guia de Usuário para Empacotamento "
"de Python."

#: ../source/guides/distributing-packages-using-setuptools.rst:28
msgid "Requirements for packaging and distributing"
msgstr "Requisitos para empacotamento e distribuição"

#: ../source/guides/distributing-packages-using-setuptools.rst:29
msgid ""
"First, make sure you have already fulfilled the :ref:`requirements for "
"installing packages <installing_requirements>`."
msgstr ""
"Primeiro, certifique-se de que você já cumpriu os :ref:`requisitos para "
"instalação de pacotes <installing_requirements>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:32
msgid "Install \"twine\" [1]_:"
msgstr "Instale \"twine\" [1]_:"

#: ../source/guides/distributing-packages-using-setuptools.rst:46
msgid ""
"You'll need this to upload your project :term:`distributions <Distribution "
"Package>` to :term:`PyPI <Python Package Index (PyPI)>` (see :ref:`below "
"<Uploading your Project to PyPI>`)."
msgstr ""
"Você precisará disso para enviar as :term:`distribuições <Distribution "
"Package>` do seu projeto para o :term:`PyPI <Python Package Index (PyPI)>` "
"(veja :ref:`abaixo <Uploading your Project to PyPI>`)."

#: ../source/guides/distributing-packages-using-setuptools.rst:52
msgid "Configuring your project"
msgstr "Configurando seu projeto"

#: ../source/guides/distributing-packages-using-setuptools.rst:56
msgid "Initial files"
msgstr "Arquivos iniciais"

#: ../source/guides/distributing-packages-using-setuptools.rst:61
msgid ""
"The most important file is :file:`setup.py` which exists at the root of your "
"project directory. For an example, see the `setup.py <https://github.com/"
"pypa/sampleproject/blob/db5806e0a3204034c51b1c00dde7d5eb3fa2532e/setup.py>`_ "
"in the `PyPA sample project <https://github.com/pypa/sampleproject>`_."
msgstr ""
"O arquivo mais importante é :file:`setup.py` que existe na raiz do diretório "
"do seu projeto. Para obter um exemplo, consulte o `setup.py <https://github."
"com/pypa/sampleproject/blob/db5806e0a3204034c51b1c00dde7d5eb3fa2532e/setup."
"py>`_ no `projeto de exemplo PyPA <https://github.com/pypa/sampleproject>`_."

#: ../source/guides/distributing-packages-using-setuptools.rst:66
msgid ":file:`setup.py` serves two primary functions:"
msgstr ":file:`setup.py` tem duas funções principais:"

#: ../source/guides/distributing-packages-using-setuptools.rst:68
msgid ""
"It's the file where various aspects of your project are configured. The "
"primary feature of :file:`setup.py` is that it contains a global ``setup()`` "
"function.  The keyword arguments to this function are how specific details "
"of your project are defined.  The most relevant arguments are explained in :"
"ref:`the section below <setup() args>`."
msgstr ""
"É o arquivo onde vários aspectos do seu projeto são configurados. A "
"principal característica do :file:`setup.py` é que ele contém uma função "
"global ``setup()``. Os argumentos nomeados para esta função são como os "
"detalhes específicos do seu projeto são definidos. Os argumentos mais "
"relevantes são explicados em :ref:`a seção abaixo de <setup() args>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:74
msgid ""
"It's the command line interface for running various commands that relate to "
"packaging tasks. To get a listing of available commands, run ``python3 setup."
"py --help-commands``."
msgstr ""
"É a interface de linha de comando para executar vários comandos relacionados "
"a tarefas de empacotamento. Para obter uma lista dos comandos disponíveis, "
"execute ``python3 setup.py --help-commands``."

#: ../source/guides/distributing-packages-using-setuptools.rst:82
msgid ""
":file:`setup.cfg` is an ini file that contains option defaults for :file:"
"`setup.py` commands.  For an example, see the `setup.cfg <https://github.com/"
"pypa/sampleproject/blob/db5806e0a3204034c51b1c00dde7d5eb3fa2532e/setup."
"cfg>`_ in the `PyPA sample project <https://github.com/pypa/sampleproject>`_."
msgstr ""
":file:`setup.cfg` é um arquivo ini que contém opções padrão para os "
"comandos :file:`setup.py`. Para obter um exemplo, consulte o `setup.cfg "
"<https://github.com/pypa/sampleproject/blob/"
"db5806e0a3204034c51b1c00dde7d5eb3fa2532e/setup.cfg>`_ no `projeto de exemplo "
"PyPA <https://github.com/pypa/sampleproject>`_."

#: ../source/guides/distributing-packages-using-setuptools.rst:89
msgid "README.rst / README.md"
msgstr "README.rst / README.md"

#: ../source/guides/distributing-packages-using-setuptools.rst:91
msgid ""
"All projects should contain a readme file that covers the goal of the "
"project. The most common format is `reStructuredText <https://docutils."
"sourceforge.io/rst.html>`_ with an \"rst\" extension, although this is not a "
"requirement; multiple variants of `Markdown <https://daringfireball.net/"
"projects/markdown/>`_ are supported as well (look at ``setup()``'s :ref:"
"`long_description_content_type <description>` argument)."
msgstr ""
"Todos os projetos devem conter um arquivo leia-me que cubra o objetivo do "
"projeto. O formato mais comum é `reStructuredText <https://docutils."
"sourceforge.io/rst.html>`_ com uma extensão \"rst\", embora isso não seja um "
"requisito; múltiplas variantes do `Markdown <https://daringfireball.net/"
"projects/markdown/>`_ também são suportadas (veja o argumento :ref:"
"`long_description_content_type <description>` do ``setup()``)."

#: ../source/guides/distributing-packages-using-setuptools.rst:98
msgid ""
"For an example, see `README.md <https://github.com/pypa/sampleproject/blob/"
"main/README.md>`_ from the `PyPA sample project <https://github.com/pypa/"
"sampleproject>`_."
msgstr ""
"Para obter um exemplo, consulte o `README.md <https://github.com/pypa/"
"sampleproject/blob/main/README.md>`_ do `projeto de exemplo PyPA <https://"
"github.com/pypa/sampleproject>`_."

#: ../source/guides/distributing-packages-using-setuptools.rst:102
msgid ""
"Projects using :ref:`setuptools` 0.6.27+ have standard readme files (:file:"
"`README.rst`, :file:`README.txt`, or :file:`README`) included in source "
"distributions by default. The built-in :ref:`distutils` library adopts this "
"behavior beginning in Python 3.7. Additionally, :ref:`setuptools` 36.4.0+ "
"will include a :file:`README.md` if found. If you are using setuptools, you "
"don't need to list your readme file in :file:`MANIFEST.in`. Otherwise, "
"include it to be explicit."
msgstr ""
"Projetos usando :ref:`setuptools` 0.6.27+ têm arquivos leia-me padrão (:file:"
"`README.rst`, :file:`README.txt` ou :file:`README`) incluídos nas "
"distribuições de código-fonte por padrão. A biblioteca interna :ref:"
"`distutils` adota este comportamento a partir do Python 3.7. "
"Adicionalmente, :ref:`setuptools` 36.4.0+ incluirá um :file:`README.md` se "
"encontrado. Se você estiver usando setuptools, você não precisa listar seu "
"arquivo leia-me em :file:`MANIFEST.in`. Caso contrário, inclua para ser "
"explícito."

#: ../source/guides/distributing-packages-using-setuptools.rst:111
msgid "MANIFEST.in"
msgstr "MANIFEST.in"

#: ../source/guides/distributing-packages-using-setuptools.rst:113
msgid ""
"A :file:`MANIFEST.in` is needed when you need to package additional files "
"that are not automatically included in a source distribution.  For details "
"on writing a :file:`MANIFEST.in` file, including a list of what's included "
"by default, see \":ref:`Using MANIFEST.in`\"."
msgstr ""
"Um :file:`MANIFEST.in` é necessário quando você precisa empacotar arquivos "
"adicionais que não são incluídos automaticamente em uma distribuição de "
"código-fonte. Para obter detalhes sobre como escrever um arquivo :file:"
"`MANIFEST.in`, incluindo uma lista do que é incluído por padrão, consulte \":"
"ref:`Using MANIFEST.in`\"."

#: ../source/guides/distributing-packages-using-setuptools.rst:118
msgid ""
"However, you may not have to use a :file:`MANIFEST.in`. For an example, the "
"`PyPA sample project <https://github.com/pypa/sampleproject>`_ has removed "
"its manifest file, since all the necessary files have been included by :ref:"
"`setuptools` 43.0.0 and newer."
msgstr ""
"No entanto, você pode não ter que usar um :file:`MANIFEST.in`. Por exemplo, "
"o `projeto de amostra PyPA <https://github.com/pypa/sampleproject>`_ removeu "
"seu arquivo de manifesto, uma vez que todos os arquivos necessários foram "
"incluídos pelo :ref:`setuptools` 43.0.0 e mais recentes."

#: ../source/guides/distributing-packages-using-setuptools.rst:123
msgid ""
":file:`MANIFEST.in` does not affect binary distributions such as wheels."
msgstr ":file:`MANIFEST.in` não afeta distribuições binárias como wheels."

#: ../source/guides/distributing-packages-using-setuptools.rst:126
msgid "LICENSE.txt"
msgstr "LICENSE.txt"

#: ../source/guides/distributing-packages-using-setuptools.rst:128
msgid ""
"Every package should include a license file detailing the terms of "
"distribution. In many jurisdictions, packages without an explicit license "
"can not be legally used or distributed by anyone other than the copyright "
"holder. If you're unsure which license to choose, you can use resources such "
"as `GitHub's Choose a License <https://choosealicense.com/>`_ or consult a "
"lawyer."
msgstr ""
"Cada pacote deve incluir um arquivo de licença detalhando os termos de "
"distribuição. Em muitas jurisdições, os pacotes sem uma licença explícita "
"não podem ser legalmente usados ou distribuídos por ninguém que não seja o "
"detentor dos direitos autorais. Se não tiver certeza de qual licença "
"escolher, você pode usar recursos como `Escolha uma licença do GitHub "
"<https://choosealicense.com/>`_ ou consultar um advogado."

#: ../source/guides/distributing-packages-using-setuptools.rst:134
msgid ""
"For an example, see the `LICENSE.txt <https://github.com/pypa/sampleproject/"
"blob/main/LICENSE.txt>`_ from the `PyPA sample project <https://github.com/"
"pypa/sampleproject>`_."
msgstr ""
"Para obter um exemplo, consulte o `LICENSE.txt <https://github.com/pypa/"
"sampleproject/blob/main/LICENSE.txt>`_ do `projeto de exemplo PyPA <https://"
"github.com/pypa/ sampleproject>`_."

#: ../source/guides/distributing-packages-using-setuptools.rst:139
msgid "<your package>"
msgstr "<seu pacote>"

#: ../source/guides/distributing-packages-using-setuptools.rst:141
msgid ""
"Although it's not required, the most common practice is to include your "
"Python modules and packages under a single top-level package that has the "
"same :ref:`name <setup() name>` as your project, or something very close."
msgstr ""
"Embora não seja obrigatório, a prática mais comum é incluir seus módulos e "
"pacotes Python em um único pacote de nível superior que tem o mesmo :ref:"
"`name <setup() name>` do seu projeto, ou algo muito próximo."

#: ../source/guides/distributing-packages-using-setuptools.rst:145
msgid ""
"For an example, see the `sample <https://github.com/pypa/sampleproject/tree/"
"main/src/sample>`_ package that's included in the `PyPA sample project "
"<https://github.com/pypa/sampleproject>`_."
msgstr ""
"Para obter um exemplo, consulte o pacote de `exemplo <https://github.com/"
"pypa/sampleproject/tree/main/src/sample>`_ que está incluído no `projeto de "
"exemplo PyPA <https://github.com/pypa/sampleproject>`_."

#: ../source/guides/distributing-packages-using-setuptools.rst:153
msgid "setup() args"
msgstr "Argumentos de setup()"

#: ../source/guides/distributing-packages-using-setuptools.rst:155
msgid ""
"As mentioned above, the primary feature of :file:`setup.py` is that it "
"contains a global ``setup()`` function.  The keyword arguments to this "
"function are how specific details of your project are defined."
msgstr ""
"Como mencionado acima, o principal recurso do :file:`setup.py` é que ele "
"contém uma função global ``setup()``. Os argumentos nomeados para esta "
"função são como os detalhes específicos do seu projeto são definidos."

#: ../source/guides/distributing-packages-using-setuptools.rst:159
msgid ""
"Some are temporarily explained below until their information is moved "
"elsewhere. The full list can be found :doc:`in the setuptools documentation "
"<setuptools:references/keywords>`."
msgstr ""
"Alguns são temporariamente explicados abaixo até que suas informações sejam "
"movidas em outros lugares. A lista completa pode ser encontrada :doc:`na "
"documentação setuptools <setuptools:references/keywords>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:163
msgid ""
"Most of the snippets given are taken from the `setup.py <https://github.com/"
"pypa/sampleproject/blob/db5806e0a3204034c51b1c00dde7d5eb3fa2532e/setup.py>`_ "
"contained in the `PyPA sample project <https://github.com/pypa/"
"sampleproject>`_."
msgstr ""
"A maioria dos fragmentos fornecidos são retirados do `setup.py <https://"
"github.com/pypa/sampleproject/blob/db5806e0a3204034c51b1c00dde7d5eb3fa2532e/"
"setup.py>`_ contido no `projeto de exemplo do PyPA <https://github.com/pypa/"
"sampleproject>`_."

#: ../source/guides/distributing-packages-using-setuptools.rst:170
msgid ""
"See :ref:`Choosing a versioning scheme` for more information on ways to use "
"versions to convey compatibility information to your users."
msgstr ""
"Veja :ref:`Escolhendo um esquema de versionamento <Choosing a versioning "
"scheme>` para mais informações sobre maneiras de usar versões para "
"transmitir informações de compatibilidade para seus usuários."

#: ../source/guides/distributing-packages-using-setuptools.rst:177
msgid "``packages``"
msgstr "``packages``"

#: ../source/guides/distributing-packages-using-setuptools.rst:183
msgid ""
"Set ``packages`` to a list of all :term:`packages <Import Package>` in your "
"project, including their subpackages, sub-subpackages, etc.  Although the "
"packages can be listed manually, ``setuptools.find_packages()`` finds them "
"automatically.  Use the ``include`` keyword argument to find only the given "
"packages.  Use the ``exclude`` keyword argument to omit packages that are "
"not intended to be released and installed."
msgstr ""
"Defina ``packages`` para uma lista de todos :term:`pacotes <Import Package>` "
"em seu projeto, incluindo seus subpacotes, sub-subpacotes, etc. Embora os "
"pacotes possam ser listados manualmente, ``setuptools.find_packages()`` "
"encontra-os automaticamente. Use o argumento nomeado ``include`` para "
"encontrar apenas os pacotes fornecidos. Use o argumento nomeado ``exclude`` "
"para omitir pacotes que não devem ser lançados e instalados."

#: ../source/guides/distributing-packages-using-setuptools.rst:192
msgid "``py_modules``"
msgstr "``py_modules``"

#: ../source/guides/distributing-packages-using-setuptools.rst:198
msgid ""
"If your project contains any single-file Python modules that aren't part of "
"a package, set ``py_modules`` to a list of the names of the modules (minus "
"the ``.py`` extension) in order to make :ref:`setuptools` aware of them."
msgstr ""
"Se o seu projeto contém qualquer módulo Python de arquivo único que não faz "
"parte de um pacote, defina ``py_modules`` para uma lista dos nomes dos "
"módulos (menos a extensão ``.py``) para fazer o :ref:`setuptools` ficar "
"ciente deles."

#: ../source/guides/distributing-packages-using-setuptools.rst:204
#, fuzzy
msgid "``install_requires``"
msgstr "install_requires"

#: ../source/guides/distributing-packages-using-setuptools.rst:210
msgid ""
"\"install_requires\" should be used to specify what dependencies a project "
"minimally needs to run. When the project is installed by :ref:`pip`, this is "
"the specification that is used to install its dependencies."
msgstr ""
"\"install_requires\" deve ser usado para especificar quais dependências um "
"projeto precisa minimamente para ser executado. Quando o projeto é instalado "
"pelo :ref:`pip`, esta é a especificação que é usada para instalar suas "
"dependências."

#: ../source/guides/distributing-packages-using-setuptools.rst:214
msgid ""
"For more on using \"install_requires\" see :ref:`install_requires vs "
"Requirements files`."
msgstr ""
"Para mais informações sobre como usar \"install_requires\", veja :ref:"
"`install_requires vs Arquivos de requisitos <install_requires vs "
"Requirements files>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:221
msgid "``package_data``"
msgstr "``package_data``"

#: ../source/guides/distributing-packages-using-setuptools.rst:230
msgid ""
"Often, additional files need to be installed into a :term:`package <Import "
"Package>`. These files are often data that’s closely related to the "
"package’s implementation, or text files containing documentation that might "
"be of interest to programmers using the package. These files are called "
"\"package data\"."
msgstr ""
"Frequentemente, arquivos adicionais precisam ser instalados em um :term:"
"`pacote <Import Package>`. Esses arquivos geralmente são dados intimamente "
"relacionados à implementação do pacote ou arquivos de texto contendo "
"documentação que pode ser do interesse dos programadores que usam o pacote. "
"Esses arquivos são chamados de \"dados do pacote\"."

#: ../source/guides/distributing-packages-using-setuptools.rst:235
msgid ""
"The value must be a mapping from package name to a list of relative path "
"names that should be copied into the package. The paths are interpreted as "
"relative to the directory containing the package."
msgstr ""
"O valor deve ser um mapeamento do nome do pacote para uma lista de nomes de "
"caminhos relativos que devem ser copiados para o pacote. Os caminhos são "
"interpretados como relativos ao diretório que contém o pacote."

#: ../source/guides/distributing-packages-using-setuptools.rst:239
msgid ""
"For more information, see :std:doc:`Including Data Files <setuptools:"
"userguide/datafiles>` from the :std:doc:`setuptools docs <setuptools:index>`."
msgstr ""
"Para mais informações, veja :std:doc:`Incluindo arquivos de dados "
"<setuptools:userguide/datafiles>` da :std:doc:`documentação do setuptools "
"<setuptools:index>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:247
msgid "``data_files``"
msgstr "``data_files``"

#: ../source/guides/distributing-packages-using-setuptools.rst:253
msgid ""
"Although configuring :ref:`Package Data` is sufficient for most needs, in "
"some cases you may need to place data files *outside* of your :term:"
"`packages <Import Package>`.  The ``data_files`` directive allows you to do "
"that. It is mostly useful if you need to install files which are used by "
"other programs, which may be unaware of Python packages."
msgstr ""
"Embora configurar :ref:`Dados de pacote <Package Data>` seja suficiente para "
"a maioria das necessidades, em alguns casos você pode precisar colocar "
"arquivos de dados *fora* de seus :term:`pacotes <Import Package>`. A "
"diretiva ``data_files`` permite que você faça isso. É mais útil se você "
"precisar instalar arquivos que são usados por outros programas, que podem "
"não ter conhecimento dos pacotes Python."

#: ../source/guides/distributing-packages-using-setuptools.rst:259
msgid ""
"Each ``(directory, files)`` pair in the sequence specifies the installation "
"directory and the files to install there. The ``directory`` must be a "
"relative path (although this may change in the future, see `wheel Issue #92 "
"<https://github.com/pypa/wheel/issues/92>`_), and it is interpreted relative "
"to the installation prefix (Python’s ``sys.prefix`` for a default "
"installation; ``site.USER_BASE`` for a user installation). Each file name in "
"``files`` is interpreted relative to the :file:`setup.py` script at the top "
"of the project source distribution."
msgstr ""
"Cada par ``(directory, files)`` na sequência especifica o diretório de "
"instalação e os arquivos a serem instalados nele. O ``directory`` deve ser "
"um caminho relativo (embora isso possa mudar no futuro, consulte `relatório "
"de problema #92 do wheel <https://github.com/pypa/wheel/issues/92>`_) e é "
"interpretado em relação ao prefixo de instalação (``sys.prefix`` do Python "
"para uma instalação padrão; ``site.USER_BASE`` para uma instalação do "
"usuário). Cada nome de arquivo em ``files`` é interpretado em relação ao "
"script :file:`setup.py` no topo da distribuição do código-fonte do projeto."

#: ../source/guides/distributing-packages-using-setuptools.rst:269
msgid ""
"For more information see the distutils section on :ref:`Installing "
"Additional Files <setuptools:distutils-additional-files>`."
msgstr ""
"Para obter mais informações, consulte a seção distutils em :ref:`Instalando "
"arquivos adicionais <setuptools:distutils-additional-files>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:274
msgid ""
"When installing packages as egg, ``data_files`` is not supported. So, if "
"your project uses :ref:`setuptools`, you must use ``pip`` to install it. "
"Alternatively, if you must use ``python setup.py``, then you need to pass "
"the ``--old-and-unmanageable`` option."
msgstr ""
"Ao instalar pacotes como ovo, ``data_files`` não é suportado. Então, se seu "
"projeto usa :ref:`setuptools`, você deve usar ``pip`` para instalá-lo. "
"Alternativamente, se você deve usar ``python setup.py``, então você precisa "
"passar a opção ``--old-and-unmanageable``."

#: ../source/guides/distributing-packages-using-setuptools.rst:281
#: ../source/specifications/pyproject-toml.rst:147
#, fuzzy
msgid "``scripts``"
msgstr "scripts"

#: ../source/guides/distributing-packages-using-setuptools.rst:283
msgid ""
"Although ``setup()`` supports a :ref:`scripts <setuptools:distutils-"
"installing-scripts>` keyword for pointing to pre-made scripts to install, "
"the recommended approach to achieve cross-platform compatibility is to use :"
"ref:`console_scripts` entry points (see below)."
msgstr ""
"Embora ``setup()`` tenha suporte a uma palavra-chave :ref:`scripts "
"<setuptools:distutils-installing-scripts>` para apontar para scripts pré-"
"fabricados para instalar, o recomendado A abordagem para obter "
"compatibilidade entre plataformas é usar pontos de entrada :ref:"
"`console_scripts` (veja abaixo)."

#: ../source/guides/distributing-packages-using-setuptools.rst:291
msgid "Choosing a versioning scheme"
msgstr "Escolhendo um esquema de versionamento"

#: ../source/guides/distributing-packages-using-setuptools.rst:293
msgid ""
"See :ref:`versioning` for information on common version schemes and how to "
"choose between them."
msgstr ""
"Veja :ref:`versioning` para informações sobre esquemas de versões comuns e "
"como escolher entre eles."

#: ../source/guides/distributing-packages-using-setuptools.rst:298
msgid "Working in \"development mode\""
msgstr "Trabalhando em \"modo de desenvolvimento\""

#: ../source/guides/distributing-packages-using-setuptools.rst:300
msgid ""
"You can install a project in \"editable\" or \"develop\" mode while you're "
"working on it. When installed as editable, a project can be edited in-place "
"without reinstallation: changes to Python source files in projects installed "
"as editable will be reflected the next time an interpreter process is "
"started."
msgstr ""
"Você pode instalar um projeto em modo \"editável\" ou \"desenvolvedor\" "
"enquanto trabalha nele. Quando instalado como editável, um projeto pode ser "
"editado no local sem reinstalação: alterações nos arquivos fonte Python em "
"projetos instalados como editáveis serão refletidas na próxima vez que um "
"processo de interpretador for iniciado."

#: ../source/guides/distributing-packages-using-setuptools.rst:306
msgid ""
"To install a Python package in \"editable\"/\"development\" mode Change "
"directory to the root of the project directory and run:"
msgstr ""
"Para instalar um pacote Python no modo \"editável\"/\"desenvolvedor\" mude o "
"diretório para a raiz do diretório do projeto e execute:"

#: ../source/guides/distributing-packages-using-setuptools.rst:314
msgid ""
"The pip command-line flag ``-e`` is short for ``--editable``, and ``.`` "
"refers to the current working directory, so together, it means to install "
"the current directory (i.e. your project) in editable mode.  This will also "
"install any dependencies declared with ``install_requires`` and any scripts "
"declared with ``console_scripts``.  Dependencies will be installed in the "
"usual, non-editable mode."
msgstr ""
"O sinalizador de linha de comando do pip ``-e`` é abreviação de ``--"
"editable``, e ``.`` refere-se ao diretório de trabalho atual, então juntos, "
"isso significa instalar o diretório atual (ou seja, seu projeto) em modo "
"editável. Isso também instalará quaisquer dependências declaradas com "
"``install_requires`` e quaisquer scripts declarados com ``console_scripts``. "
"As dependências serão instaladas no modo usual e não editável."

#: ../source/guides/distributing-packages-using-setuptools.rst:321
msgid ""
"You may want to install some of your dependencies in editable mode as well. "
"For example, supposing your project requires \"foo\" and \"bar\", but you "
"want \"bar\" installed from VCS in editable mode, then you could construct a "
"requirements file like so::"
msgstr ""
"Você também pode querer instalar algumas de suas dependências no modo "
"editável. Por exemplo, supondo que seu projeto requer \"foo\" e \"bar\", mas "
"você deseja \"bar\" instalado do VCS no modo editável, então você poderia "
"construir um arquivo de requisitos como::"

#: ../source/guides/distributing-packages-using-setuptools.rst:329
msgid ""
"The first line says to install your project and any dependencies. The second "
"line overrides the \"bar\" dependency, such that it's fulfilled from VCS, "
"not PyPI."
msgstr ""
"A primeira linha diz para instalar seu projeto e todas as dependências. A "
"segunda linha substitui a dependência \"bar\", de modo que seja preenchida a "
"partir do VCS, não PyPI."

#: ../source/guides/distributing-packages-using-setuptools.rst:333
msgid ""
"If, however, you want \"bar\" installed from a local directory in editable "
"mode, the requirements file should look like this, with the local paths at "
"the top of the file::"
msgstr ""
"Se, no entanto, você quiser \"bar\" instalado de um diretório local em modo "
"editável, o arquivo de requisitos deve ser semelhante a este, com os "
"caminhos locais no topo do arquivo::"

#: ../source/guides/distributing-packages-using-setuptools.rst:338
msgid ""
"Otherwise, the dependency will be fulfilled from PyPI, due to the "
"installation order of the requirements file.  For more on requirements "
"files, see the :ref:`Requirements File <pip:Requirements Files>` section in "
"the pip docs.  For more on VCS installs, see the :ref:`VCS Support <pip:VCS "
"Support>` section of the pip docs."
msgstr ""
"Caso contrário, a dependência será resolvida pelo PyPI, devido à ordem de "
"instalação do arquivo de requisitos. Para mais informações sobre os arquivos "
"de requisitos, consulte a seção :ref:`Requirements File <pip:Requirements "
"Files>` na documentação do pip. Para obter mais informações sobre as "
"instalações de VCS, consulte a seção :ref:`VCS Support <pip:VCS Support>` da "
"documentação do pip."

#: ../source/guides/distributing-packages-using-setuptools.rst:342
msgid ""
"Lastly, if you don't want to install any dependencies at all, you can run:"
msgstr ""
"Por último, se você não deseja instalar nenhuma dependência, pode executar:"

#: ../source/guides/distributing-packages-using-setuptools.rst:349
msgid ""
"For more information, see the :doc:`Development Mode <setuptools:userguide/"
"development_mode>` section of the :ref:`setuptools` docs."
msgstr ""
"Para mais informações, veja a seção :doc:`Development Mode <setuptools:"
"userguide/development_mode>` na documentação do :ref:`setuptools`."

#: ../source/guides/distributing-packages-using-setuptools.rst:356
msgid "Packaging your project"
msgstr "Empacotando seu projeto"

#: ../source/guides/distributing-packages-using-setuptools.rst:358
msgid ""
"To have your project installable from a :term:`Package Index` like :term:"
"`PyPI <Python Package Index (PyPI)>`, you'll need to create a :term:"
"`Distribution <Distribution Package>` (aka \":term:`Package <Distribution "
"Package>`\") for your project."
msgstr ""
"Para ter seu projeto instalável de um :term:`Índice de Pacotes` como o :term:"
"`PyPI <Python Package Index (PyPI)>`, você precisará criar uma :term:"
"`Distribuição <Distribution Package>` (também conhecida como \":term:`Pacote "
"<Distribution Package>`\") para seu projeto."

#: ../source/guides/distributing-packages-using-setuptools.rst:363
msgid ""
"Before you can build wheels and sdists for your project, you'll need to "
"install the ``build`` package:"
msgstr ""
"Antes de compilar wheels e sdists para seu projeto, você precisará instalar "
"o pacote ``build``:"

#: ../source/guides/distributing-packages-using-setuptools.rst:380
msgid "Source distributions"
msgstr "Distribuições fontes"

#: ../source/guides/distributing-packages-using-setuptools.rst:382
msgid ""
"Minimally, you should create a :term:`Source Distribution <Source "
"Distribution (or \"sdist\")>`:"
msgstr ""
"Minimamente, você deve criar uma :term:`Distribuição Fonte <Source "
"Distribution (or \"sdist\")>`:"

#: ../source/guides/distributing-packages-using-setuptools.rst:398
msgid ""
"A \"source distribution\" is unbuilt (i.e. it's not a :term:`Built "
"Distribution`), and requires a build step when installed by pip.  Even if "
"the distribution is pure Python (i.e. contains no extensions), it still "
"involves a build step to build out the installation metadata from :file:"
"`setup.py` and/or :file:`setup.cfg`."
msgstr ""
"Uma \"distribuição fonte\" é não construída (ou seja, não é uma :term:"
"`Distribuição Construída`) e requer uma etapa de construção quando instalada "
"pelo pip. Mesmo se a distribuição for puro Python (ou seja, não contém "
"extensões), ainda envolve uma etapa de construção para construir os "
"metadados de instalação de :file:`setup.py` e/ou :file:`setup.cfg`."

#: ../source/guides/distributing-packages-using-setuptools.rst:406
msgid "Wheels"
msgstr "Wheels"

#: ../source/guides/distributing-packages-using-setuptools.rst:408
msgid ""
"You should also create a wheel for your project. A wheel is a :term:`built "
"package <Built Distribution>` that can be installed without needing to go "
"through the \"build\" process. Installing wheels is substantially faster for "
"the end user than installing from a source distribution."
msgstr ""
"Você também deve criar uma wheel para o seu projeto. Uma wheel é um :term:"
"`pacote construído <Distribuição construída>` que pode ser instalado sem a "
"necessidade de passar pelo processo de \"construção\". Instalar wheel é "
"substancialmente mais rápido para o usuário final do que instalar a partir "
"de uma distribuição original."

#: ../source/guides/distributing-packages-using-setuptools.rst:413
msgid ""
"If your project is pure Python then you'll be creating a :ref:`\"Pure Python "
"Wheel\" (see section below) <Pure Python Wheels>`."
msgstr ""
"Se o seu projeto for puro Python, você criará uma :ref:`\"Wheel de Python "
"Puro\" (consulte a seção abaixo) <Pure Python Wheels>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:416
msgid ""
"If your project contains compiled extensions, then you'll be creating what's "
"called a :ref:`*Platform Wheel* (see section below) <Platform Wheels>`."
msgstr ""
"Se o seu projeto contém extensões compiladas, então você criará o que é "
"chamado de :ref:`*Wheel de Plataforma* (veja a seção abaixo) <Platform "
"Wheels>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:419
msgid ""
"If your project also supports Python 2 *and* contains no C extensions, then "
"you should create what's called a *Universal Wheel* by adding the following "
"to your :file:`setup.cfg` file:"
msgstr ""
"Se o seu projeto também tiver suporte a Python 2 *e* não contiver extensões "
"C, você deve criar o que é chamado de *Wheel Universal* adicionando o "
"seguinte ao seu arquivo :file:`setup.cfg`:"

#: ../source/guides/distributing-packages-using-setuptools.rst:428
msgid ""
"Only use this setting if your project does not have any C extensions *and* "
"supports Python 2 and 3."
msgstr ""
"Use esta configuração apenas se o seu projeto não tiver extensões C *e* "
"tiver suporte ao Python 2 e 3."

#: ../source/guides/distributing-packages-using-setuptools.rst:435
msgid "Pure Python Wheels"
msgstr "Wheels de Puro Python"

#: ../source/guides/distributing-packages-using-setuptools.rst:437
msgid ""
"*Pure Python Wheels* contain no compiled extensions, and therefore only "
"require a single Python wheel."
msgstr ""
"*Wheels de Python Puro* contêm nenhuma extensão compilada e, portanto, só "
"exigem um único wheel Python."

#: ../source/guides/distributing-packages-using-setuptools.rst:440
#: ../source/guides/distributing-packages-using-setuptools.rst:469
msgid "To build the wheel:"
msgstr "Para construir o wheel:"

#: ../source/guides/distributing-packages-using-setuptools.rst:454
msgid ""
"The ``wheel`` package will detect that the code is pure Python, and build a "
"wheel that's named such that it's usable on any Python 3 installation.  For "
"details on the naming of wheel files, see :pep:`425`."
msgstr ""
"O pacote ``wheel`` detectará que o código é puro Python, e construirá um "
"wheel cujo nome pode ser usado em qualquer instalação do Python 3. Para "
"obter detalhes sobre a nomenclatura de arquivos wheel, consulte :pep:`425`."

#: ../source/guides/distributing-packages-using-setuptools.rst:458
msgid ""
"If you run ``build`` without ``--wheel`` or ``--sdist``, it will build both "
"files for you; this is useful when you don't need multiple wheels."
msgstr ""
"Se você executar ``build`` sem ``--wheel`` ou ``--sdist``, ele irá construir "
"os dois arquivos para você; isso é útil quando você não precisa de vários "
"wheels."

#: ../source/guides/distributing-packages-using-setuptools.rst:464
msgid "Platform Wheels"
msgstr "Wheels de Plataforma"

#: ../source/guides/distributing-packages-using-setuptools.rst:466
msgid ""
"*Platform Wheels* are wheels that are specific to a certain platform like "
"Linux, macOS, or Windows, usually due to containing compiled extensions."
msgstr ""
"*Wheels de Plataforma* são wheels que são específicos para uma certa "
"plataforma, como Linux, macOS ou Windows, geralmente em razão de conter "
"extensões compiladas."

#: ../source/guides/distributing-packages-using-setuptools.rst:484
msgid ""
"The ``wheel`` package will detect that the code is not pure Python, and "
"build a wheel that's named such that it's only usable on the platform that "
"it was built on. For details on the naming of wheel files, see :pep:`425`."
msgstr ""
"O pacote ``wheel`` detectará que o código não é puro Python e construirá um "
"wheel cujo nome só pode ser usado na plataforma em que foi construído. Para "
"obter detalhes sobre a nomenclatura de arquivos wheel, consulte :pep:`425`."

#: ../source/guides/distributing-packages-using-setuptools.rst:490
msgid ""
":term:`PyPI <Python Package Index (PyPI)>` currently supports uploads of "
"platform wheels for Windows, macOS, and the multi-distro ``manylinux*`` ABI. "
"Details of the latter are defined in :pep:`513`."
msgstr ""
":term:`PyPI <Python Package Index (PyPI)>` oferece suporte atualmente a "
"envios de wheels de plataforma do Windows, macOS e da ABI multidistro "
"``manylinux*``. Detalhes sobre o último estão definidos em :pep:`513`."

#: ../source/guides/distributing-packages-using-setuptools.rst:498
msgid "Uploading your Project to PyPI"
msgstr "Enviando seu Projeto para PyPI"

#: ../source/guides/distributing-packages-using-setuptools.rst:500
msgid ""
"When you ran the command to create your distribution, a new directory ``dist/"
"`` was created under your project's root directory. That's where you'll find "
"your distribution file(s) to upload."
msgstr ""
"Quando você executou o comando para criar sua distribuição, um novo "
"diretório ``dist/`` foi criado no diretório raiz do seu projeto. É onde você "
"encontrará seus arquivos de distribuição para enviar."

#: ../source/guides/distributing-packages-using-setuptools.rst:504
msgid ""
"These files are only created when you run the command to create your "
"distribution. This means that any time you change the source of your project "
"or the configuration in your :file:`setup.py` file, you will need to rebuild "
"these files again before you can distribute the changes to PyPI."
msgstr ""
"Esses arquivos são criados apenas quando você executa o comando para criar "
"sua distribuição. Isso significa que a qualquer momento que você alterar a "
"fonte do seu projeto ou a configuração no arquivo :file:`setup.py`, você "
"precisará reconstruir esses arquivos novamente antes de distribuir as "
"alterações para PyPI."

#: ../source/guides/distributing-packages-using-setuptools.rst:509
msgid ""
"Before releasing on main PyPI repo, you might prefer training with the `PyPI "
"test site <https://test.pypi.org/>`_ which is cleaned on a semi regular "
"basis. See :ref:`using-test-pypi` on how to setup your configuration in "
"order to use it."
msgstr ""
"Antes de lançar no repositório principal do PyPI, você pode preferir treinar "
"com o `site de teste do PyPI <https://test.pypi.org/>`_ que é redefinido em "
"uma base semirregular. Veja :ref:`using-test-pypi` sobre como definir sua "
"configuração para usá-lo."

#: ../source/guides/distributing-packages-using-setuptools.rst:514
msgid ""
"In other resources you may encounter references to using ``python setup.py "
"register`` and ``python setup.py upload``. These methods of registering and "
"uploading a package are **strongly discouraged** as it may use a plaintext "
"HTTP or unverified HTTPS connection on some Python versions, allowing your "
"username and password to be intercepted during transmission."
msgstr ""
"Em outros recursos, você pode encontrar referências ao uso de ``python setup."
"py register`` e ``python setup.py upload``. Esses métodos de registro e "
"envio de um pacote são **fortemente desencorajados**, pois podem usar uma "
"conexão HTTP de texto simples ou HTTPS não verificada em algumas versões "
"Python, permitindo que seu nome de usuário e senha sejam interceptados "
"durante a transmissão."

#: ../source/guides/distributing-packages-using-setuptools.rst:520
msgid ""
"The reStructuredText parser used on PyPI is **not** Sphinx! Furthermore, to "
"ensure safety of all users, certain kinds of URLs and directives are "
"forbidden or stripped out (e.g., the ``.. raw::`` directive). **Before** "
"trying to upload your distribution, you should check to see if your brief / "
"long descriptions provided in :file:`setup.py` are valid.  You can do this "
"by running :std:doc:`twine check <index>` on your package files:"
msgstr ""
"O analisador de reStructuredText usado no PyPI **não é** Sphinx! Além disso, "
"para garantir a segurança de todos os usuários, certos tipos de URLs e "
"diretivas são proibidos ou removidos (por exemplo, a diretiva ``.. raw::``). "
"**Antes** de tentar enviar sua distribuição, você deve verificar se suas "
"descrições breves/longas fornecidas no :file:`setup.py` são válidas. Você "
"pode fazer isso executando :std:doc:`twine check <index>` em todos arquivos "
"do seu pacote:"

#: ../source/guides/distributing-packages-using-setuptools.rst:533
msgid "Create an account"
msgstr "Criar uma conta"

#: ../source/guides/distributing-packages-using-setuptools.rst:535
msgid ""
"First, you need a :term:`PyPI <Python Package Index (PyPI)>` user account. "
"You can create an account `using the form on the PyPI website <https://pypi."
"org/account/register/>`_."
msgstr ""
"Primeiro, você precisa de uma conta de usuário do :term:`PyPI <Python "
"Package Index (PyPI)>`. Você pode criar uma conta `usando o formulário no "
"site do PyPI <https://pypi.org/account/register/>`_."

#: ../source/guides/distributing-packages-using-setuptools.rst:539
msgid ""
"Now you'll create a PyPI `API token`_ so you will be able to securely upload "
"your project."
msgstr ""
"Agora você criará um `token de API`_ do PyPI para que possa enviar o seu "
"projeto com segurança."

#: ../source/guides/distributing-packages-using-setuptools.rst:542
msgid ""
"Go to https://pypi.org/manage/account/#api-tokens and create a new `API "
"token`_; don't limit its scope to a particular project, since you are "
"creating a new project."
msgstr ""
"Acesse https://pypi.org/manage/account/#api-tokens e crie um novo `token de "
"API`_; não limite seu escopo a um projeto específico, já que você está "
"criando um novo projeto."

#: ../source/guides/distributing-packages-using-setuptools.rst:546
msgid ""
"**Don't close the page until you have copied and saved the token — you won't "
"see that token again.**"
msgstr ""
"**Não feche a página antes de copiar e salvar o token -- você não verá o "
"token novamente.**"

#: ../source/guides/distributing-packages-using-setuptools.rst:549
msgid ""
"To avoid having to copy and paste the token every time you upload, you can "
"create a :file:`$HOME/.pypirc` file:"
msgstr ""
"Para evitar ter que copiar e colar o token toda vez que você enviar, você "
"pode criar um arquivo :file:`$HOME/.pypirc`:"

#: ../source/guides/distributing-packages-using-setuptools.rst:558
msgid "**Be aware that this stores your token in plaintext.**"
msgstr "**Esteja ciente de que isso armazena seu token em texto simples.**"

#: ../source/guides/distributing-packages-using-setuptools.rst:560
#: ../source/guides/migrating-to-pypi-org.rst:74
#: ../source/guides/migrating-to-pypi-org.rst:113
#: ../source/guides/using-testpypi.rst:84
msgid ""
"For more details, see the :ref:`specification <pypirc>` for :file:`.pypirc`."
msgstr ""
"Para mais detalhes, veja a :ref:`especificação <pypirc>` do :file:`.pypirc`."

#: ../source/guides/distributing-packages-using-setuptools.rst:566
msgid "Upload your distributions"
msgstr "Enviar suas distribuições"

#: ../source/guides/distributing-packages-using-setuptools.rst:568
msgid ""
"Once you have an account you can upload your distributions to :term:`PyPI "
"<Python Package Index (PyPI)>` using :ref:`twine`."
msgstr ""
"Assim que tiver uma conta, você pode enviar suas distribuições para o :term:"
"`PyPI <Python Package Index (PyPI)>` usando :ref:`twine`."

#: ../source/guides/distributing-packages-using-setuptools.rst:571
msgid ""
"The process for uploading a release is the same regardless of whether or not "
"the project already exists on PyPI - if it doesn't exist yet, it will be "
"automatically created when the first release is uploaded."
msgstr ""
"O processo de envio de uma versão é o mesmo, independentemente de o projeto "
"já existir ou não no PyPI -- se ainda não existir, será criado "
"automaticamente quando a primeira versão for carregada."

#: ../source/guides/distributing-packages-using-setuptools.rst:575
msgid ""
"For the second and subsequent releases, PyPI only requires that the version "
"number of the new release differ from any previous releases."
msgstr ""
"Para a segunda versão e as subsequentes, PyPI requer apenas que o número da "
"versão da nova versão seja diferente de todas as versões anteriores."

#: ../source/guides/distributing-packages-using-setuptools.rst:582
msgid ""
"You can see if your package has successfully uploaded by navigating to the "
"URL ``https://pypi.org/project/<sampleproject>`` where ``sampleproject`` is "
"the name of your project that you uploaded. It may take a minute or two for "
"your project to appear on the site."
msgstr ""
"Você pode ver se o seu pacote foi enviado com sucesso navegando para a URL "
"``https://pypi.org/project/<projetoexemplo>`` onde ``projetoexemplo`` é o "
"nome do seu projeto que você enviou. O seu projeto pode demorar um ou dois "
"minutos para aparecer no site."

#: ../source/guides/distributing-packages-using-setuptools.rst:589
#: ../source/tutorials/installing-packages.rst:670
msgid ""
"Depending on your platform, this may require root or Administrator access. :"
"ref:`pip` is currently considering changing this by `making user installs "
"the default behavior <https://github.com/pypa/pip/issues/1668>`_."
msgstr ""
"Dependendo da sua plataforma, isso pode exigir acesso de root ou de "
"administrador. :ref:`pip` está atualmente considerando mudar isso `tornando "
"as instalações de usuário o comportamento padrão <https://github.com/pypa/"
"pip/issues/1668>`_."

#: ../source/guides/dropping-older-python-versions.rst:5
msgid "Dropping support for older Python versions"
msgstr "Descartando suporte para versões mais antigas do Python"

#: ../source/guides/dropping-older-python-versions.rst:7
#, fuzzy
msgid ""
"The ability to drop support for older Python versions is enabled by the "
"standard :ref:`core-metadata` 1.2 specification via the :ref:`\"Requires-"
"Python\" <core-metadata-requires-python>` attribute."
msgstr ""
"O descarte de suporte para versões mais antigas do Python é suportado pela "
"especificação padrão :ref:`core-metadata` 1.2 através de um atributo "
"\"Requires-Python\"."

#: ../source/guides/dropping-older-python-versions.rst:9
#, fuzzy
msgid ""
"Metadata 1.2+ installers, such as Pip, will adhere to this specification by "
"matching the current Python runtime and comparing it with the required "
"version in the package metadata. If they do not match, it will attempt to "
"install the last package distribution that supported that Python runtime."
msgstr ""
"Clientes com Metadata 1.2+, como Pip 9.0+, irão aderir a esta especificação "
"combinando o tempo de execução Python atual e comparando-o com a versão "
"necessária nos metadados do pacote. Se eles não corresponderem, ele tentará "
"instalar a última distribuição de pacote que oferece suporte a esse tempo de "
"execução do Python."

#: ../source/guides/dropping-older-python-versions.rst:12
#, fuzzy
msgid ""
"This mechanism can be used to drop support for older Python versions, by "
"amending the ``Requires-Python`` attribute in the package metadata."
msgstr ""
"Este mecanismo pode ser usado para descartar o suporte para versões mais "
"antigas do Python, alterando o atributo \"Requires-Python\" nos metadados do "
"pacote."

#: ../source/guides/dropping-older-python-versions.rst:15
msgid "Requirements"
msgstr "Requisitos"

#: ../source/guides/dropping-older-python-versions.rst:17
#, fuzzy
msgid ""
"This workflow requires that the user installing the package uses Pip [#]_, "
"or another installer that supports the Metadata 1.2 specification."
msgstr ""
"O usuário que instala o pacote tenha pelo menos Pip 9.0 ou um cliente que "
"tenha suporte à especificação Metadata 1.2."

#: ../source/guides/dropping-older-python-versions.rst:20
msgid "Dealing with the universal wheels"
msgstr "Lidando com os wheels universais"

#: ../source/guides/dropping-older-python-versions.rst:22
#, fuzzy
msgid ""
"Traditionally, :ref:`setuptools` projects providing Python code that is "
"semantically compatible with both Python 2 and Python 3, produce :term:"
"`wheels <Wheel>` that have a ``py2.py3`` tag in their names. When dropping "
"support for Python 2, it is important not to forget to change this tag to "
"just ``py3``. It is often configured within :file:`setup.cfg` under the "
"``[bdist_wheel]`` section by setting ``universal = 1``."
msgstr ""
"Tradicionalmente, os projetos que fornecem código Python que é "
"semanticamente compatível com Python 2 e Python 3, produzem :term:`wheels "
"<Wheel>` que têm uma tag ``py2.py3`` em seus nomes. Ao descartar o suporte "
"para Python 2, é importante não se esquecer de alterar essa tag para apenas "
"``py3``. Isso geralmente é configurado em :file:`setup.cfg` na seção "
"``[bdist_wheel]`` definindo ``universal = 1`` se eles usam setuptools."

#: ../source/guides/dropping-older-python-versions.rst:29
msgid ""
"If you use this method, either remove this option or section, or explicitly "
"set ``universal`` to ``0``:"
msgstr ""
"Se você usar este método, remova esta opção ou seção, ou defina "
"explicitamente ``universal`` como ``0``:"

#: ../source/guides/dropping-older-python-versions.rst:41
msgid ""
"Regarding :ref:`deprecated <setup-py-deprecated>` direct ``setup.py`` "
"invocations, passing the ``--universal`` flag on the command line could "
"override this setting."
msgstr ""

#: ../source/guides/dropping-older-python-versions.rst:45
msgid "Defining the Python version required"
msgstr "Definindo a versão Python exigida"

#: ../source/guides/dropping-older-python-versions.rst:48
#, fuzzy
msgid "1. Install twine"
msgstr "Instalação"

#: ../source/guides/dropping-older-python-versions.rst:50
msgid "Ensure that you have twine available at its latest version. Steps:"
msgstr ""

#: ../source/guides/dropping-older-python-versions.rst:66
msgid "2. Specify the version ranges for supported Python distributions"
msgstr ""
"2. Especifique os intervalos de versão para distribuições Python suportadas"

#: ../source/guides/dropping-older-python-versions.rst:68
msgid ""
"Set the version ranges declaring which Python distributions are supported "
"within your project's :file:`pyproject.toml`. The :ref:`requires-python` "
"configuration field corresponds to the :ref:`Requires-Python <core-metadata-"
"requires-python>` core metadata field:"
msgstr ""

#: ../source/guides/dropping-older-python-versions.rst:80
#, fuzzy
msgid ""
"You can specify version ranges and exclusion rules (complying with the :ref:"
"`version-specifiers` specification), such as at least Python 3.9. Or, at "
"least Python 3.7 and beyond, skipping the 3.7.0 and 3.7.1 point releases:"
msgstr ""
"Você pode especificar intervalos de versão e regras de exclusão, como pelo "
"menos Python 3. Ou Python 2.7, 3.4 e superior."

#: ../source/guides/dropping-older-python-versions.rst:89
msgid ""
"If using the :ref:`setuptools` build backend, consult the `dependency-"
"management`_ documentation for more options."
msgstr ""

#: ../source/guides/dropping-older-python-versions.rst:92
msgid ""
"Avoid adding upper bounds to the version ranges, e. g. ``\">= 3.8, < "
"3.10\"``. Doing so can cause different errors and version conflicts. See the "
"`discourse-discussion`_ for more information."
msgstr ""

#: ../source/guides/dropping-older-python-versions.rst:96
msgid "3. Validating the Metadata before publishing"
msgstr "3. Validando o Metadata antes de publicar"

#: ../source/guides/dropping-older-python-versions.rst:98
msgid ""
"Within a Python source package (the zip or the tar-gz file you download) is "
"a text file called PKG-INFO."
msgstr ""
"Dentro de um pacote fonte Python (o arquivo zip ou tar-gz que você baixou) "
"está um arquivo de texto chamado PKG-INFO."

#: ../source/guides/dropping-older-python-versions.rst:100
#, fuzzy
msgid ""
"This file is generated by the :term:`build backend <Build Backend>` when it "
"generates the source package. The file contains a set of keys and values, "
"the list of keys is part of the PyPA standard metadata format."
msgstr ""
"Este arquivo é gerado pelo :ref:`distutils` ou :ref:`setuptools` quando ele "
"gera o pacote fonte. O arquivo contém um conjunto de chaves e valores, a "
"lista de chaves faz parte do formato de metadados padrão do PyPa."

#: ../source/guides/dropping-older-python-versions.rst:103
msgid "You can see the contents of the generated file like this:"
msgstr "Você pode ver o conteúdo do arquivo gerado assim:"

#: ../source/guides/dropping-older-python-versions.rst:109
msgid "Validate that the following is in place, before publishing the package:"
msgstr "Valide que o seguinte está no lugar, antes de publicar o pacote:"

#: ../source/guides/dropping-older-python-versions.rst:111
#, fuzzy
msgid ""
"If you have upgraded correctly, the ``Metadata-Version`` value should be 1.2 "
"or higher."
msgstr ""
"Se você atualizou corretamente, o valor de Metadata-Version deve ser 1.2 ou "
"superior."

#: ../source/guides/dropping-older-python-versions.rst:112
#, fuzzy
msgid ""
"The ``Requires-Python`` field is set and matches your specification in the "
"configuration file."
msgstr ""
"O campo Requires-Python está definido e corresponde a sua especificação no "
"setup.py."

#: ../source/guides/dropping-older-python-versions.rst:115
#, fuzzy
msgid "4. Publishing the package"
msgstr "Publicando lançamentos"

#: ../source/guides/dropping-older-python-versions.rst:117
#, fuzzy
msgid "Proceed as suggested in :ref:`Uploading your Project to PyPI`."
msgstr "Enviando seu Projeto para PyPI"

#: ../source/guides/dropping-older-python-versions.rst:120
#, fuzzy
msgid "Dropping a Python version"
msgstr "Descartando uma versão Python"

#: ../source/guides/dropping-older-python-versions.rst:122
msgid ""
"In principle, at least metadata support for Python versions should be kept "
"as long as possible, because once that has been dropped, people still "
"depending on a version will be forced to downgrade. If however supporting a "
"specific version becomes a blocker for a new feature or other issues occur, "
"the metadata ``Requires-Python`` should be amended. Of course this also "
"depends on whether the project needs to be stable and well-covered for a "
"wider range of users."
msgstr ""

#: ../source/guides/dropping-older-python-versions.rst:128
msgid "Each version compatibility change should have its own release."
msgstr ""

#: ../source/guides/dropping-older-python-versions.rst:132
msgid ""
"When dropping a Python version, it might also be rewarding to upgrade the "
"project's code syntax generally, apart from updating the versions used in "
"visible places (like the testing environment). Tools like pyupgrade_ or "
"`ruff <https://docs.astral.sh/ruff/linter/>`_ can automate some of this work."
msgstr ""

#: ../source/guides/dropping-older-python-versions.rst:138
msgid "Support for the Metadata 1.2 specification has been added in Pip 9.0."
msgstr ""

#: ../source/guides/hosting-your-own-index.rst:5
msgid "Hosting your own simple repository"
msgstr "Hospedando seu próprio repositório simples"

#: ../source/guides/hosting-your-own-index.rst:8
msgid ""
"If you wish to host your own simple repository [1]_, you can either use a "
"software package like :doc:`devpi <devpi:index>` or you can simply create "
"the proper directory structure and use any web server that can serve static "
"files and generate an autoindex."
msgstr ""
"Se você deseja hospedar seu próprio repositório simples [1]_, você pode usar "
"um pacote de software como :doc:`devpi <devpi:index>` ou você pode "
"simplesmente criar a estrutura de diretório apropriada e usar qualquer "
"servidor web que pode servir arquivos estáticos e gerar um autoindex."

#: ../source/guides/hosting-your-own-index.rst:13
msgid ""
"In either case, since you'll be hosting a repository that is likely not in "
"your user's default repositories, you should instruct them in your project's "
"description to configure their installer appropriately. For example with pip:"
msgstr ""
"Em ambos os casos, como você hospedará um repositório que provavelmente não "
"está nos repositórios padrão do usuário, você deve instruí-los na descrição "
"do seu projeto para configurar o instalador apropriadamente. Por exemplo, "
"com pip:"

#: ../source/guides/hosting-your-own-index.rst:29
msgid ""
"In addition, it is **highly** recommended that you serve your repository "
"with valid HTTPS. At this time, the security of your user's installations "
"depends on all repositories using a valid HTTPS setup."
msgstr ""
"Além disso, é **altamente** recomendado que você sirva seu repositório com "
"HTTPS válido. Neste momento, a segurança das instalações do seu usuário "
"depende de todos os repositórios usando uma configuração válida do HTTPS."

#: ../source/guides/hosting-your-own-index.rst:35
msgid "\"Manual\" repository"
msgstr "Repositório \"manual\""

#: ../source/guides/hosting-your-own-index.rst:37
msgid ""
"The directory layout is fairly simple, within a root directory you need to "
"create a directory for each project. This directory should be the :ref:"
"`normalized name <name-normalization>` of the project. Within each of these "
"directories simply place each of the downloadable files. If you have the "
"projects \"Foo\" (with the versions 1.0 and 2.0) and \"bar\" (with the "
"version 0.1) You should end up with a structure that looks like::"
msgstr ""
"O layout do diretório é bastante simples, dentro de um diretório raiz você "
"precisa criar um diretório para cada projeto. Este diretório deve ser o :ref:"
"`nome normalizado <name-normalization>` do projeto. Em cada um desses "
"diretórios, basta colocar cada um dos arquivos para download. Se você tem os "
"projetos \"Foo\" (com as versões 1.0 e 2.0) e \"bar\" (com a versão 0.1), "
"você deve acabar com uma estrutura parecida com::"

#: ../source/guides/hosting-your-own-index.rst:50
msgid ""
"Once you have this layout, simply configure your webserver to serve the root "
"directory with autoindex enabled. For an example using the built in Web "
"server in `Twisted`_, you would simply run ``twistd -n web --path .`` and "
"then instruct users to add the URL to their installer's configuration."
msgstr ""
"Assim que tiver esse layout, basta configurar seu servidor web para servir o "
"diretório raiz com o autoindex habilitado. Para um exemplo usando o servidor "
"Web embutido em `Twisted`_, você simplesmente executaria ``twistd -n web --"
"path .`` e então instruiria os usuários a adicionar a URL à configuração de "
"seu instalador."

#: ../source/guides/hosting-your-own-index.rst:57
#: ../source/guides/index-mirrors-and-caches.rst:47
msgid "Existing projects"
msgstr "Projetos existentes"

#: ../source/guides/hosting-your-own-index.rst:63
msgid "Package upload"
msgstr "Envio de pacotes"

#: ../source/guides/hosting-your-own-index.rst:64
msgid "PyPI fall-through [2]_"
msgstr "Padrão do PyPI [2]_"

#: ../source/guides/hosting-your-own-index.rst:65
#: ../source/guides/index-mirrors-and-caches.rst:56
#: ../source/guides/supporting-windows-using-appveyor.rst:146
msgid "Additional notes"
msgstr "Notas adicionais"

#: ../source/guides/hosting-your-own-index.rst:67
#: ../source/guides/index-mirrors-and-caches.rst:58
msgid ":ref:`devpi`"
msgstr ":ref:`devpi`"

#: ../source/guides/hosting-your-own-index.rst:68
#: ../source/guides/hosting-your-own-index.rst:69
#: ../source/guides/hosting-your-own-index.rst:75
#: ../source/guides/hosting-your-own-index.rst:79
#: ../source/guides/hosting-your-own-index.rst:99
#: ../source/guides/hosting-your-own-index.rst:120
#: ../source/guides/index-mirrors-and-caches.rst:59
#: ../source/guides/index-mirrors-and-caches.rst:60
#: ../source/guides/index-mirrors-and-caches.rst:66
#: ../source/guides/index-mirrors-and-caches.rst:67
#: ../source/guides/index-mirrors-and-caches.rst:74
#: ../source/guides/index-mirrors-and-caches.rst:78
#: ../source/guides/index-mirrors-and-caches.rst:80
#: ../source/guides/index-mirrors-and-caches.rst:85
#: ../source/guides/index-mirrors-and-caches.rst:86
#: ../source/guides/index-mirrors-and-caches.rst:90
#: ../source/guides/index-mirrors-and-caches.rst:92
#: ../source/guides/index-mirrors-and-caches.rst:96
#: ../source/guides/index-mirrors-and-caches.rst:98
#: ../source/guides/index-mirrors-and-caches.rst:102
#: ../source/guides/index-mirrors-and-caches.rst:104
#: ../source/guides/index-mirrors-and-caches.rst:108
#: ../source/guides/index-mirrors-and-caches.rst:110
msgid "✔"
msgstr "✔"

#: ../source/guides/hosting-your-own-index.rst:70
msgid ""
"multiple indexes with inheritance, with syncing, replication, fail-over; "
"mirroring"
msgstr ""
"múltiplos índices com herança, com sincronização, replicação, tolerância a "
"falhas; espelhamento"

#: ../source/guides/hosting-your-own-index.rst:73
#: ../source/guides/index-mirrors-and-caches.rst:71
msgid ":ref:`simpleindex`"
msgstr ":ref:`simpleindex`"

#: ../source/guides/hosting-your-own-index.rst:78
msgid ":ref:`pypiserver`"
msgstr ":ref:`pypiserver`"

#: ../source/guides/hosting-your-own-index.rst:83
msgid ":ref:`pypiprivate`"
msgstr ":ref:`pypiprivate`"

#: ../source/guides/hosting-your-own-index.rst:88
#: ../source/guides/index-mirrors-and-caches.rst:77
msgid ":ref:`pypicloud`"
msgstr ":ref:`pypicloud`"

#: ../source/guides/hosting-your-own-index.rst:91
msgid "unmaintained; also cached proxying; authentication, authorisation"
msgstr "sem manutenção; também faz proxy de cache; autenticação, autorização"

#: ../source/guides/hosting-your-own-index.rst:93
msgid ":ref:`pywharf`"
msgstr ":ref:`pywharf`"

#: ../source/guides/hosting-your-own-index.rst:96
msgid "unmaintained; serve files in GitHub"
msgstr "sem manutenção; serve arquivos no GitHub"

#: ../source/guides/hosting-your-own-index.rst:98
#: ../source/guides/index-mirrors-and-caches.rst:83
msgid ":ref:`pulppython`"
msgstr ":ref:`pulppython`"

#: ../source/guides/hosting-your-own-index.rst:101
msgid "also mirroring, proxying; plugin for Pulp"
msgstr "também espelhamento, proxy; plugin para Pulp"

#: ../source/guides/hosting-your-own-index.rst:103
msgid ":ref:`pip2pi`"
msgstr ":ref:`pip2pi`"

#: ../source/guides/hosting-your-own-index.rst:106
msgid "also mirroring; manual synchronisation"
msgstr "também espelhamento; sincronização manual"

#: ../source/guides/hosting-your-own-index.rst:108
msgid ":ref:`dumb-pypi`"
msgstr ":ref:`dumb-pypi`"

#: ../source/guides/hosting-your-own-index.rst:111
msgid "not a server, but a static file site generator"
msgstr "não é um servidor, mas um gerador de site de arquivo estático"

#: ../source/guides/hosting-your-own-index.rst:113
msgid ":ref:`httpserver`"
msgstr ":ref:`httpserver`"

#: ../source/guides/hosting-your-own-index.rst:116
msgid "standard-library"
msgstr "biblioteca padrão"

#: ../source/guides/hosting-your-own-index.rst:118
#: ../source/guides/index-mirrors-and-caches.rst:107
msgid "`Apache <https://httpd.apache.org/>`_"
msgstr "`Apache <https://httpd.apache.org/>`_"

#: ../source/guides/hosting-your-own-index.rst:121
#: ../source/guides/index-mirrors-and-caches.rst:111
msgid ""
"using `mod_rewrite <https://httpd.apache.org/docs/current/mod/mod_rewrite."
"html>`_ and `mod_cache_disk <https://httpd.apache.org/docs/current/mod/"
"mod_cache_disk.html>`_, you can cache requests to package indexes through an "
"Apache server"
msgstr ""
"usando `mod_rewrite <httpd.apache.org/docs/current/mod/mod_rewrite.html>`_ e "
"`mod_cache_disk <https://httpd.apache.org/docs/current/mod/mod_cache_disk."
"html>`_, você pode armazenar em cache as solicitações para índices de "
"pacotes por meio de um servidor Apache"

#: ../source/guides/hosting-your-own-index.rst:131
msgid ""
"For complete documentation of the simple repository protocol, see :ref:"
"`simple repository API <simple-repository-api>`."
msgstr ""
"Para a documentação completa do protocolo de repositório simples, veja :ref:"
"`API de repositório simples <simple-repository-api>`.."

#: ../source/guides/hosting-your-own-index.rst:134
msgid ""
"Can be configured to fall back to PyPI (or another package index) if a "
"requested package is missing."
msgstr ""
"Pode ser configurado para recorrer ao PyPI (ou outro índice de pacote) se um "
"pacote solicitado estiver ausente."

#: ../source/guides/index.rst:4
msgid ""
"**Guides** are focused on accomplishing a specific task and assume that you "
"are already familiar with the basics of Python packaging. If you're looking "
"for an introduction to packaging, see :doc:`/tutorials/index`."
msgstr ""
"**Guias** se concentram em realizar uma tarefa específica e presumem que "
"você já esteja familiarizado com os fundamentos do empacotamento do Python. "
"Se você está procurando uma introdução ao empacotamento, veja :doc:`/"
"tutorials/index`."

#: ../source/guides/index-mirrors-and-caches.rst:5
msgid "Package index mirrors and caches"
msgstr "Espelhos e caches de índice de pacotes"

#: ../source/guides/index-mirrors-and-caches.rst:8
msgid "2023-11-08"
msgstr "2023-11-08"

#: ../source/guides/index-mirrors-and-caches.rst:10
msgid ""
"Mirroring or caching of PyPI (and other :term:`package indexes <Package "
"Index>`) can be used to speed up local package installation, allow offline "
"work, handle corporate firewalls or just plain Internet flakiness."
msgstr ""
"O espelhamento ou cache do PyPI (e outros :term:`índices de pacotes <Índice "
"de Pacotes>`) pode ser usado para acelerar a instalação do pacote local, "
"permitir o trabalho offline, lidar com firewalls corporativos ou "
"simplesmente falhas na Internet."

#: ../source/guides/index-mirrors-and-caches.rst:15
msgid "There are multiple classes of options in this area:"
msgstr "Existem várias classes de opções nesta área:"

#: ../source/guides/index-mirrors-and-caches.rst:17
msgid "local/hosted caching of package indexes."
msgstr "fazer cache local/hospedado de índices de pacotes."

#: ../source/guides/index-mirrors-and-caches.rst:19
msgid ""
"local/hosted mirroring of a package index. A mirror is a (whole or partial) "
"copy of a package index, which can be used in place of the original index."
msgstr ""
"fazer espelhamento local/hospedado de um índice de pacotes. Um espelho é uma "
"cópia (total ou parcial) de um índice de pacotes, que pode ser usado no "
"lugar do índice original."

#: ../source/guides/index-mirrors-and-caches.rst:23
msgid ""
"private package index with fall-through to public package indexes (for "
"example, to mitigate dependency confusion attacks), also known as a proxy."
msgstr ""
"índice de pacotes privados com alternativa para os índices de pacotes "
"públicos (por exemplo, para mitigar ataques de confusão de dependência), "
"também conhecido como proxy."

#: ../source/guides/index-mirrors-and-caches.rst:29
msgid "Caching with pip"
msgstr "Fazendo cache com pip"

#: ../source/guides/index-mirrors-and-caches.rst:31
msgid ""
"pip provides a number of facilities for speeding up installation by using "
"local cached copies of :term:`packages <Distribution Package>`:"
msgstr ""
"pip fornece uma série de facilidades para acelerar a instalação usando "
"cópias locais em cache de :term:`pacotes <Pacote de Distribuição>`:"

#: ../source/guides/index-mirrors-and-caches.rst:34
msgid ""
":ref:`Fast & local installs <pip:installing from local packages>` by "
"downloading all the requirements for a project and then pointing pip at "
"those downloaded files instead of going to PyPI."
msgstr ""
":ref:`Instalações rápidas e locais <pip:installing from local packages>` "
"baixando todos os requisitos para um projeto e apontando pip para esses "
"arquivos baixados em vez de ir para PyPI."

#: ../source/guides/index-mirrors-and-caches.rst:37
msgid ""
"A variation on the above which pre-builds the installation files for the "
"requirements using :ref:`python3 -m pip wheel <pip:pip wheel>`:"
msgstr ""
"Uma variação da acima, que pré-constrói os arquivos de instalação para os "
"requisitos usando :ref:`python3 -m pip wheel <pip:pip wheel>`:"

#: ../source/guides/index-mirrors-and-caches.rst:53
msgid "Cache"
msgstr "Cache"

#: ../source/guides/index-mirrors-and-caches.rst:54
msgid "Mirror"
msgstr "Espelho"

#: ../source/guides/index-mirrors-and-caches.rst:55
msgid "Proxy"
msgstr "Proxy"

#: ../source/guides/index-mirrors-and-caches.rst:62
msgid ""
"multiple indexes with inheritance; syncing, replication, fail-over; package "
"upload"
msgstr ""
"múltiplos índices com herança; sincronização, replicação, tolerância a "
"falhas; envio de pacote"

#: ../source/guides/index-mirrors-and-caches.rst:65
msgid ":ref:`bandersnatch`"
msgstr ":ref:`bandersnatch`"

#: ../source/guides/index-mirrors-and-caches.rst:75
msgid "custom plugin enables caching; re-routing to other package indexes"
msgstr ""
"plugin personalizado permite fazer cache; redirecionamento para outros "
"índices de pacotes"

#: ../source/guides/index-mirrors-and-caches.rst:81
msgid "unmaintained; authentication, authorisation"
msgstr "sem manutenção; autenticação, autorização"

#: ../source/guides/index-mirrors-and-caches.rst:87
msgid "plugin for Pulp; multiple proxied indexes; package upload"
msgstr "plugin para Pulp; vários índices proxy; envio de pacote"

#: ../source/guides/index-mirrors-and-caches.rst:89
msgid ":ref:`proxpi`"
msgstr ":ref:`proxpi`"

#: ../source/guides/index-mirrors-and-caches.rst:93
#: ../source/guides/index-mirrors-and-caches.rst:99
msgid "multiple proxied indexes"
msgstr "múltiplos índices sob proxy"

#: ../source/guides/index-mirrors-and-caches.rst:95
msgid ":ref:`nginx_pypi_cache`"
msgstr ":ref:`nginx_pypi_cache`"

#: ../source/guides/index-mirrors-and-caches.rst:101
msgid ":ref:`flaskpypiproxy`"
msgstr ":ref:`flaskpypiproxy`"

#: ../source/guides/index-mirrors-and-caches.rst:105
msgid "unmaintained"
msgstr "sem manutenção"

#: ../source/guides/installing-scientific-packages.rst:5
msgid "Installing scientific packages"
msgstr "Instalando pacotes científicos"

#: ../source/guides/installing-scientific-packages.rst:8
msgid ""
"Scientific software tends to have more complex dependencies than most, and "
"it will often have multiple build options to take advantage of different "
"kinds of hardware, or to interoperate with different pieces of external "
"software."
msgstr ""
"O software científico tende a ter dependências mais complexas do que a "
"maioria e, frequentemente, terá várias opções de construção para tirar "
"proveito de diferentes tipos de hardware ou para interoperar com diferentes "
"partes de software externo."

#: ../source/guides/installing-scientific-packages.rst:13
#, fuzzy
#| msgid ""
#| "In particular, `NumPy <https://numpy.org/>`__, which provides the basis "
#| "for most of the software in the `scientific Python stack <https://"
#| "scientific-python.org>`_ can be configured to interoperate with different "
#| "FORTRAN libraries, and can take advantage of different levels of "
#| "vectorised instructions available in modern CPUs."
msgid ""
"In particular, `NumPy <https://numpy.org/>`__, which provides the basis for "
"most of the software in the `scientific Python stack <https://scientific-"
"python.org>`_ can be configured to interoperate with different FORTRAN "
"libraries, and can take advantage of different levels of vectorized "
"instructions available in modern CPUs."
msgstr ""
"Em particular, `NumPy <https://numpy.org/>`__, que fornece a base para a "
"maioria do software na `pilha científica Python <https://scientific-python."
"org>`_ pode ser configurado para interoperar com diferentes bibliotecas "
"FORTRAN e pode tirar proveito de diferentes níveis de instruções vetorizadas "
"disponíveis em CPUs modernas."

#: ../source/guides/installing-scientific-packages.rst:19
#, fuzzy
#| msgid ""
#| "Starting with version 1.10.4 of NumPy and version 1.0.0 of SciPy, pre-"
#| "built 32-bit and 64-bit binaries in the ``wheel`` format are available "
#| "for all major operating systems (Windows, macOS, and Linux) on PyPI. "
#| "Note, however, that on Windows, NumPy binaries are linked against the "
#| "`ATLAS <http://www.netlib.org/atlas/>`__ BLAS/LAPACK library, restricted "
#| "to SSE2 instructions, so they may not provide optimal linear algebra "
#| "performance."
msgid ""
"Starting with version 1.10.4 of NumPy and version 1.0.0 of SciPy, pre-built "
"32-bit and 64-bit binaries in the ``wheel`` format are available for all "
"major operating systems (Windows, macOS, and Linux) on PyPI. Note, however, "
"that on Windows, NumPy binaries are linked against the `ATLAS <https://math-"
"atlas.sourceforge.net/>`__ BLAS/LAPACK library, restricted to SSE2 "
"instructions, so they may not provide optimal linear algebra performance."
msgstr ""
"A partir da versão 1.10.4 do NumPy e da versão 1.0.0 do SciPy, binários pré-"
"construídos de 32 e 64 bits no formato ``wheel`` estão disponíveis para "
"todos os principais sistemas operacionais (Windows, macOS e Linux) em PyPI. "
"Observe, no entanto, que no Windows, os binários do NumPy são vinculados à "
"biblioteca BLAS/LAPACK do `ATLAS <http://www.netlib.org/atlas/>`__, restrita "
"às instruções SSE2, portanto, podem não fornecer desempenho da álgebra "
"linear."

#: ../source/guides/installing-scientific-packages.rst:26
msgid ""
"There are a number of alternative options for obtaining scientific Python "
"libraries (or any other Python libraries that require a compilation "
"environment to install from source and don't provide pre-built wheel files "
"on PyPI)."
msgstr ""
"Existem várias opções alternativas para obter bibliotecas científicas Python "
"(ou quaisquer outras bibliotecas Python que requerem um ambiente de "
"compilação para instalar a partir do código-fonte e não fornecem arquivos de "
"wheel pré-construídos no PyPI)."

#: ../source/guides/installing-scientific-packages.rst:32
msgid "Building from source"
msgstr "Construindo a partir do código-fonte"

#: ../source/guides/installing-scientific-packages.rst:34
msgid ""
"The same complexity which makes it difficult to distribute NumPy (and many "
"of the projects that depend on it) as wheel files also make them difficult "
"to build from source yourself. However, for intrepid folks that are willing "
"to spend the time wrangling compilers and linkers for both C and FORTRAN, "
"building from source is always an option."
msgstr ""
"A mesma complexidade que torna difícil distribuir o NumPy (e muitos dos "
"projetos que dependem dele) como arquivos wheel também torna difícil "
"construí-los a partir do código-fonte. No entanto, para pessoas intrépidas "
"que estão dispostas a gastar o tempo discutindo compiladores e vinculadores "
"para C e FORTRAN, construir a partir do código-fonte é sempre uma opção."

#: ../source/guides/installing-scientific-packages.rst:42
msgid "Linux distribution packages"
msgstr "Pacotes de distribuição Linux"

#: ../source/guides/installing-scientific-packages.rst:44
msgid ""
"For Linux users, the system package manager will often have pre-compiled "
"versions of various pieces of scientific software, including NumPy and other "
"parts of the scientific Python stack."
msgstr ""
"Para usuários Linux, o gerenciador de pacotes do sistema frequentemente terá "
"versões pré-compiladas de várias peças de software científico, incluindo "
"NumPy e outras partes da pilha científica Python."

#: ../source/guides/installing-scientific-packages.rst:48
msgid ""
"If using versions which may be several months old is acceptable, then this "
"is likely to be a good option (just make sure to allow access to "
"distributions installed into the system Python when using virtual "
"environments)."
msgstr ""
"Se usar versões que podem ter vários meses é aceitável, então esta é "
"provavelmente uma boa opção (apenas certifique-se de permitir o acesso às "
"distribuições instaladas no sistema Python ao usar ambientes virtuais)."

#: ../source/guides/installing-scientific-packages.rst:54
msgid "Windows installers"
msgstr "Instaladores para Windows"

#: ../source/guides/installing-scientific-packages.rst:56
msgid ""
"Many Python projects that don't (or can't) currently publish wheel files at "
"least publish Windows installers, either on PyPI or on their project "
"download page. Using these installers allows users to avoid the need to set "
"up a suitable environment to build extensions locally."
msgstr ""
"Muitos projetos Python que não publicam (ou não podem) atualmente publicar "
"arquivos wheel, pelo menos publicam instaladores Windows, seja no PyPI ou na "
"página de download de seus projetos. O uso desses instaladores permite que "
"os usuários evitem a necessidade de configurar um ambiente adequado para "
"construir extensões localmente."

#: ../source/guides/installing-scientific-packages.rst:61
msgid ""
"The extensions provided in these installers are typically compatible with "
"the CPython Windows installers published on python.org."
msgstr ""
"As extensões fornecidas nesses instaladores são normalmente compatíveis com "
"os instaladores do CPython para o Windows publicados em python.org."

#: ../source/guides/installing-scientific-packages.rst:64
msgid ""
"As with Linux system packages, the Windows installers will only install into "
"a system Python installation - they do not support installation in virtual "
"environments. Allowing access to distributions installed into the system "
"Python when using virtual environments is a common approach to working "
"around this limitation."
msgstr ""
"Tal como acontece com os pacotes de sistema Linux, os instaladores Windows "
"irão apenas instalar em uma instalação de sistema Python -- eles não "
"oferecem suporte à instalação em ambientes virtuais. Permitir o acesso a "
"distribuições instaladas no sistema Python ao usar ambientes virtuais é uma "
"abordagem comum para contornar essa limitação."

#: ../source/guides/installing-scientific-packages.rst:70
msgid ""
"The :term:`Wheel` project also provides a :command:`wheel convert` "
"subcommand that can convert a Windows :command:`bdist_wininst` installer to "
"a wheel."
msgstr ""
"O projeto :term:`Wheel` também fornece um subcomando :command:`wheel "
"convert` que pode converter um instalador para Windows :command:"
"`bdist_wininst` em um wheel."

#: ../source/guides/installing-scientific-packages.rst:77
msgid "macOS installers and package managers"
msgstr "Instaladores e gerenciadores de pacote para macOS"

#: ../source/guides/installing-scientific-packages.rst:79
msgid ""
"Similar to the situation on Windows, many projects (including NumPy) publish "
"macOS installers that are compatible with the macOS CPython binaries "
"published on python.org."
msgstr ""
"Semelhante à situação no Windows, muitos projetos (incluindo NumPy) publicam "
"instaladores para macOS que são compatíveis com os binários do CPython para "
"macOS publicados em python.org."

#: ../source/guides/installing-scientific-packages.rst:83
msgid ""
"macOS users also have access to Linux distribution style package managers "
"such as ``Homebrew``. The SciPy site has more details on using Homebrew to "
"`install SciPy on macOS <https://scipy.org/install/#macos>`_."
msgstr ""
"Os usuários do macOS também têm acesso aos gerenciadores de pacotes de "
"estilo de distribuição Linux, como ``Homebrew``. O site SciPy tem mais "
"detalhes sobre como usar Homebrew para `instalar SciPy no macOS <https://"
"scipy.org/install/#macos>`_."

#: ../source/guides/installing-scientific-packages.rst:89
msgid "SciPy distributions"
msgstr "Distribuições SciPy"

#: ../source/guides/installing-scientific-packages.rst:91
#, fuzzy
#| msgid ""
#| "The SciPy site lists `several distributions <https://scipy.org/install/"
#| "#distributions>`_ that provide the full SciPy stack to end users in an "
#| "easy to use and update format."
msgid ""
"The SciPy site lists `several distributions <https://scipy.org/install/>`_ "
"that provide the full SciPy stack to end users in an easy to use and update "
"format."
msgstr ""
"O site SciPy lista `várias distribuições <https://scipy.org/install/"
"#distributions>`_ que fornecem a pilha SciPy completa para usuários finais "
"em um formato fácil de usar e atualizar."

#: ../source/guides/installing-scientific-packages.rst:96
msgid ""
"Some of these distributions may not be compatible with the standard ``pip`` "
"and ``virtualenv`` based toolchain."
msgstr ""
"Algumas dessas distribuições podem não ser compatíveis com o conjunto de "
"ferramentas padrão ``pip`` e ``virtualenv``."

#: ../source/guides/installing-scientific-packages.rst:100
#: ../source/key_projects.rst:812
msgid "Spack"
msgstr "Spack"

#: ../source/guides/installing-scientific-packages.rst:101
msgid ""
"`Spack <https://github.com/spack/spack>`_ is a flexible package manager "
"designed to support multiple versions, configurations, platforms, and "
"compilers. It was built to support the needs of large supercomputing centers "
"and scientific application teams, who must often build software many "
"different ways. Spack is not limited to Python; it can install packages for "
"``C``, ``C++``, ``Fortran``, ``R``, and other languages.  It is non-"
"destructive; installing a new version of one package does not break existing "
"installations, so many configurations can coexist on the same system."
msgstr ""
"`Spack <https://github.com/spack/spack>`_ é um gerenciador de pacotes "
"flexível projetado para oferecer suporte a múltiplas versões, configurações, "
"plataformas e compiladores. Ele foi construído para dar suporte às "
"necessidades de grandes centros de supercomputação e equipes de aplicações "
"científicas, que frequentemente precisam criar software de muitas maneiras "
"diferentes. O Spack não está limitado a Python; ele pode instalar pacotes "
"para ``C``, ``C++``, ``Fortran``, ``R`` e outras linguagens. É não "
"destrutivo; instalar uma nova versão de um pacote não interrompe as "
"instalações existentes, portanto, muitas configurações podem coexistir no "
"mesmo sistema."

#: ../source/guides/installing-scientific-packages.rst:110
msgid ""
"Spack offers a simple but powerful syntax that allows users to specify "
"versions and configuration options concisely. Package files are written in "
"pure Python, and they are templated so that it is easy to swap compilers, "
"dependency implementations (like MPI), versions, and build options with a "
"single package file.  Spack also generates *module* files so that packages "
"can be loaded and unloaded from the user's environment."
msgstr ""
"O Spack oferece uma sintaxe simples, mas poderosa, que permite aos usuários "
"especificar versões e opções de configuração de forma concisa. Os arquivos "
"de pacote são escritos em puro Python e são modelados para que seja fácil "
"trocar compiladores, implementações de dependência (como MPI), versões e "
"opções de construção com um único arquivo de pacote. O Spack também gera "
"arquivos de *módulo* para que os pacotes possam ser carregados e "
"descarregados do ambiente do usuário."

#: ../source/guides/installing-scientific-packages.rst:119
msgid "The conda cross-platform package manager"
msgstr "O gerenciador de pacotes multiplataforma conda"

#: ../source/guides/installing-scientific-packages.rst:121
#, fuzzy
#| msgid ""
#| "``conda`` is an open source (BSD licensed) package management system and "
#| "environment management system included in Anaconda that allows users to "
#| "install multiple versions of binary software packages and their "
#| "dependencies, and easily switch between them. It is a cross-platform tool "
#| "working on Windows, macOS, and Linux. Conda can be used to package up and "
#| "distribute all kinds of packages, it is not limited to just Python "
#| "packages. It has full support for native virtual environments. Conda "
#| "makes environments first-class citizens, making it easy to create "
#| "independent environments even for C libraries. It is written in Python, "
#| "but is Python-agnostic. Conda manages Python itself as a package, so "
#| "that :command:`conda update python` is possible, in contrast to pip, "
#| "which only manages Python packages. Conda is available in Anaconda and "
#| "Miniconda (an easy-to-install download with just Python and conda)."
msgid ""
"``conda`` is an open source (BSD licensed) package management system and "
"environment management system that allows users to install multiple versions "
"of binary software packages and their dependencies, and easily switch "
"between them. It is a cross-platform tool working on Windows, MacOS, and "
"Linux. Conda can be used to package up and distribute all kinds of packages, "
"it is not limited to just Python packages. It has full support for native "
"virtual environments. Conda makes environments first-class citizens, making "
"it easy to create independent environments even for C libraries. It is "
"written in Python, but is Python-agnostic. Conda manages Python itself as a "
"package, so that :command:`conda update python` is possible, in contrast to "
"pip, which only manages Python packages."
msgstr ""
"``conda`` é um sistema de gerenciamento de pacotes e de gerenciamento de "
"ambiente de código aberto (licenciado por BSD) incluído no Anaconda que "
"permite aos usuários instalar várias versões de pacotes de software binários "
"e suas dependências, e alternar facilmente entre eles. É uma ferramenta "
"multiplataforma que funciona no Windows, no macOS e no Linux. O Conda pode "
"ser usado para empacotar e distribuir todos os tipos de pacotes, não está "
"limitado apenas a pacotes Python. Possui suporte total para ambientes "
"virtuais nativos. Conda torna os ambientes cidadãos de primeira classe, "
"facilitando a criação de ambientes independentes até mesmo para bibliotecas "
"C. Está escrito em Python, mas é agnóstico ao Python. O Conda gerencia o "
"próprio Python como um pacote, de forma que :command:`conda update python` "
"seja possível, em contraste com o pip, que gerencia apenas os pacotes "
"Python. O Conda está disponível no Anaconda e no Miniconda (um download "
"fácil de instalar com apenas Python e conda)."

#: ../source/guides/installing-scientific-packages.rst:133
#, fuzzy
#| msgid ""
#| "`Anaconda <https://www.anaconda.com/products/individual/>`_ is a Python "
#| "distribution published by Anaconda, Inc. It is a stable collection of "
#| "Open Source packages for big data and scientific use.  As of the 5.0 "
#| "release of Anaconda, about 200 packages are installed by default, and a "
#| "total of 400-500 can be installed and updated from the Anaconda "
#| "repository."
msgid ""
"Anaconda `Anaconda <https://docs.anaconda.com/anaconda/>`_ is a Python "
"distribution published by Anaconda, Inc. It is a stable collection of Open "
"Source packages for big data and scientific use, and a collection of "
"Graphical Interface utilities for managing conda environments."
msgstr ""
"`Anaconda <https://www.anaconda.com/products/individual/>`_ é uma "
"distribuição Python publicada pela Anaconda, Inc. É uma coleção estável de "
"pacotes de código aberto para *big data* e uso científico. A partir da "
"versão 5.0 do Anaconda, cerca de 200 pacotes são instalados por padrão, e um "
"total de 400-500 podem ser instalados e atualizados a partir do repositório "
"Anaconda."

#: ../source/guides/installing-scientific-packages.rst:135
msgid ""
"In addition to the full distribution provided by Anaconda, the conda package "
"manager itself is available in  `miniconda <https://docs.anaconda.com/"
"miniconda/>`_, `miniforge <https://github.com/conda-forge/miniforge>`_, and "
"`pixi <https://pixi.sh/>`_."
msgstr ""

#: ../source/guides/installing-scientific-packages.rst:138
msgid ""
"Conda packages are available on multiple channels on Anaconda.org, including "
"the default channel supported by Anaconda, Inc, the community supported "
"conda-forge channel, which provides a wide variety of pre-built packages, "
"and some domain-specific package collections."
msgstr ""

#: ../source/guides/installing-stand-alone-command-line-tools.rst:4
msgid "Installing stand alone command line tools"
msgstr "Instalando ferramentas de linha de comando autônomas"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:6
msgid ""
"Many packages provide command line applications. Examples of such packages "
"are `mypy <https://github.com/python/mypy>`_, `flake8 <https://github.com/"
"PyCQA/flake8>`_, `black <https://github.com/psf/black>`_, and :ref:`pipenv`."
msgstr ""
"Muitos pacotes fornecem aplicações de linha de comando. Exemplos deste tipo "
"de aplicação são `mypy <https://github.com/python/mypy>`_, `flake8 <https://"
"github.com/PyCQA/flake8>`_, `black <https://github.com/psf/black>`_ e :ref:"
"`pipenv`."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:12
msgid ""
"Usually you want to be able to access these applications from anywhere on "
"your system, but installing packages and their dependencies to the same "
"global environment can cause version conflicts and break dependencies the "
"operating system has on Python packages."
msgstr ""
"Normalmente você deseja acessar essas aplicações de qualquer lugar no "
"sistema, mas instalar pacotes e suas dependências no mesmo ambiente global "
"pode causar conflitos de versão e quebrar as dependências que o sistema "
"operacional tem nos pacotes Python."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:17
msgid ""
":ref:`pipx` solves this by creating a virtual environment for each package, "
"while also ensuring that its applications are accessible through a directory "
"that is on your ``$PATH``. This allows each package to be upgraded or "
"uninstalled without causing conflicts with other packages, and allows you to "
"safely run the applications from anywhere."
msgstr ""
":ref:`pipx` resolve isso criando um ambiente virtual para cada pacote, "
"enquanto também garante que suas aplicações sejam acessíveis através de um "
"diretório que está em seu ``$PATH``. Isso permite que cada pacote seja "
"atualizado ou desinstalado sem causar conflitos com outros pacotes e permite "
"que você execute a aplicações com segurança de qualquer lugar."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:23
msgid "pipx only works with Python 3.6+."
msgstr "pipx só funciona com Python 3.6+."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:25
msgid "pipx is installed with pip:"
msgstr "pipx é instalado com pip:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:43
msgid ""
"``ensurepath`` ensures that the application directory is on your ``$PATH``. "
"You may need to restart your terminal for this update to take effect."
msgstr ""
"``ensurepath`` garante que o diretório de aplicação está em seu ``$PATH``. "
"Você pode precisar reiniciar seu terminal para que as atualizações de "
"caminho tenham efeito."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:46
msgid ""
"Now you can install packages with ``pipx install`` and run the package's "
"applications(s) from anywhere."
msgstr ""
"Agora você pode instalar pacotes com ``pipx install`` e executar as "
"aplicações do pacote de qualquer lugar."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:54
#: ../source/specifications/entry-points.rst:114
msgid "For example:"
msgstr "Por exemplo:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:76
msgid ""
"To see a list of packages installed with pipx and which applications are "
"available, use ``pipx list``:"
msgstr ""
"Para ver uma lista de pacotes instalados com pipx e quais aplicações estão "
"disponíveis, use ``pipx list``:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:100
msgid "To upgrade or uninstall a package:"
msgstr "Para atualizar ou desinstalar um pacote:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:107
msgid "pipx can be upgraded or uninstalled with pip:"
msgstr "pipx pode ser atualizado ou desinstalado com pip:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:123
msgid ""
"pipx also allows you to install and run the latest version of an application "
"in a temporary, ephemeral environment. For example:"
msgstr ""
"pipx também permite que você instale e execute a versão mais recente de uma "
"aplicação em um ambiente temporário e efêmero. Por exemplo:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:130
msgid "To see the full list of commands pipx offers, run:"
msgstr "Para ver a lista completa de comandos pipx oferece, execute:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:136
msgid "You can learn more about pipx at https://pipx.pypa.io/."
msgstr "Você pode aprender mais sobre pipx em https://pipx.pypa.io/."

#: ../source/guides/installing-using-linux-tools.rst:5
msgid "Installing pip/setuptools/wheel with Linux Package Managers"
msgstr "Instalando pip/setuptools/wheel com gerenciadores de pacotes do Linux"

#: ../source/guides/installing-using-linux-tools.rst:8
msgid "2021-07-26"
msgstr "2021-07-26"

#: ../source/guides/installing-using-linux-tools.rst:10
msgid ""
"This section covers how to install :ref:`pip`, :ref:`setuptools`, and :ref:"
"`wheel` using Linux package managers."
msgstr ""
"Esta seção cobre como instalar :ref:`pip`, :ref:`setuptools` e :ref:`wheel` "
"usando gerenciadores de pacotes do Linux."

#: ../source/guides/installing-using-linux-tools.rst:13
msgid ""
"If you're using a Python that was downloaded from `python.org <https://www."
"python.org>`_, then this section does not apply.  See the :ref:"
"`installing_requirements` section instead."
msgstr ""
"Se você estiver usando um Python que foi baixado de `python.org <https://www."
"python.org>`_, então esta seção não se aplica. Veja a seção :ref:"
"`installing_requirements`."

#: ../source/guides/installing-using-linux-tools.rst:17
msgid ""
"Note that it's common for the versions of :ref:`pip`, :ref:`setuptools`, "
"and :ref:`wheel` supported by a specific Linux Distribution to be outdated "
"by the time it's released to the public, and updates generally only occur "
"for security reasons, not for feature updates.  For certain Distributions, "
"there are additional repositories that can be enabled to provide newer "
"versions.  The repositories we know about are explained below."
msgstr ""
"Observe que é comum que as versões de :ref:`pip`, :ref:`setuptools` e :ref:"
"`wheel` suportadas por uma distribuição Linux específica estejam "
"desatualizadas no momento em que é lançado para o público, e as atualizações "
"geralmente ocorrem apenas por motivos de segurança, não para atualizações de "
"recursos. Para certas distribuições, existem repositórios adicionais que "
"podem ser ativados para fornecer versões mais recentes. Os repositórios que "
"conhecemos são explicados abaixo."

#: ../source/guides/installing-using-linux-tools.rst:24
msgid ""
"Also note that it's somewhat common for Distributions to apply patches for "
"the sake of security and normalization to their own standards.  In some "
"cases, this can lead to bugs or unexpected behaviors that vary from the "
"original unpatched versions.  When this is known, we will make note of it "
"below."
msgstr ""
"Observe também que é um tanto comum que as Distribuições apliquem patches "
"para fins de segurança e normalização de acordo com seus próprios padrões. "
"Em alguns casos, isso pode levar a bugs ou comportamentos inesperados que "
"variam em relação às versões originais sem patch. Quando isso for conhecido, "
"faremos anotações sobre isso a seguir."

#: ../source/guides/installing-using-linux-tools.rst:31
msgid "Fedora"
msgstr "Fedora"

#: ../source/guides/installing-using-linux-tools.rst:37
msgid ""
"To learn more about Python in Fedora, please visit the `official Fedora "
"docs`_, `Python Classroom`_ or `Fedora Loves Python`_."
msgstr ""
"Para saber mais sobre Python no Fedora, visite os `documentos oficiais do "
"Fedora`_, `Python Classroom`_ ou `Fedora Loves Python`_."

#: ../source/guides/installing-using-linux-tools.rst:45
msgid "CentOS/RHEL"
msgstr "CentOS/RHEL"

#: ../source/guides/installing-using-linux-tools.rst:47
msgid ""
"CentOS and RHEL don't offer :ref:`pip` or :ref:`wheel` in their core "
"repositories, although :ref:`setuptools` is installed by default."
msgstr ""
"CentOS e RHEL não oferecem :ref:`pip` ou :ref:`wheel` em seus repositórios "
"principais, embora :ref:`setuptools` seja instalado por padrão."

#: ../source/guides/installing-using-linux-tools.rst:50
msgid "To install pip and wheel for the system Python, there are two options:"
msgstr "Para instalar pip e wheel para o sistema Python, existem duas opções:"

#: ../source/guides/installing-using-linux-tools.rst:52
#, fuzzy
msgid ""
"Enable the `EPEL repository <https://fedoraproject.org/wiki/EPEL>`_ using "
"`these instructions <https://docs.fedoraproject.org/en-US/epel/getting-"
"started/>`__. On EPEL 7, you can install pip and wheel like so:"
msgstr ""
"Habilite o `repositório EPEL <https://fedoraproject.org/wiki/EPEL>`_ usando "
"`estas instruções <https://docs.fedoraproject.org/pt_BR/epel/"
"#how_can_i_use_these_extra_packages>`__ . No EPEL 7, você pode instalar pip "
"assim:"

#: ../source/guides/installing-using-linux-tools.rst:61
msgid ""
"Since EPEL only offers extra, non-conflicting packages, EPEL does not offer "
"setuptools, since it's in the core repository."
msgstr ""
"Como a EPEL oferece apenas pacotes extras não conflitantes, a EPEL não "
"oferece setuptools, pois está no repositório central."

#: ../source/guides/installing-using-linux-tools.rst:65
msgid ""
"Enable the `PyPA Copr Repo <https://copr.fedorainfracloud.org/coprs/pypa/"
"pypa/>`_ using `these instructions <https://fedoraproject.org/wiki/"
"Infrastructure/Fedorahosted-retirement>`__ [1]_. You can install pip and "
"wheel like so:"
msgstr ""
"Habilite o `Copr Repo do PyPA <https://copr.fedorainfracloud.org/coprs/pypa/"
"pypa/>`_ usando `estas instruções <https://fedoraproject.org/wiki/"
"Infrastructure/Fedorahosted-retirement>`__ [1]_. Você pode instalar pip e "
"wheel desta forma:"

#: ../source/guides/installing-using-linux-tools.rst:74
msgid "To additionally upgrade setuptools, run:"
msgstr "Para adicionalmente atualizar setuptools, execute:"

#: ../source/guides/installing-using-linux-tools.rst:81
msgid ""
"To install pip, wheel, and setuptools, in a parallel, non-system environment "
"(using yum) then there are two options:"
msgstr ""
"Para instalar pip, wheel e setuptools, em um ambiente paralelo, sem sistema "
"(usando yum), existem duas opções:"

#: ../source/guides/installing-using-linux-tools.rst:85
msgid ""
"Use the \"Software Collections\" feature to enable a parallel collection "
"that includes pip, setuptools, and wheel."
msgstr ""
"Use o recurso \"Coleções de software\" para habilitar uma coleção paralela "
"que inclui pip, setuptools e wheel."

#: ../source/guides/installing-using-linux-tools.rst:88
msgid ""
"For Redhat, see here: https://developers.redhat.com/products/"
"softwarecollections/overview"
msgstr ""
"Para Redhat, veja aqui: https://developers.redhat.com/products/"
"softwarecollections/overview"

#: ../source/guides/installing-using-linux-tools.rst:90
msgid "For CentOS, see here: https://github.com/sclorg"
msgstr "Para CentOS, veja aqui: https://github.com/sclorg"

#: ../source/guides/installing-using-linux-tools.rst:92
msgid "Be aware that collections may not contain the most recent versions."
msgstr ""
"Esteja ciente de que as coleções podem não conter as versões mais recentes."

#: ../source/guides/installing-using-linux-tools.rst:94
msgid ""
"Enable the `IUS repository <https://ius.io/setup>`_ and install one of the "
"`parallel-installable <https://ius.io/usage#parallel-installable-packages>`_ "
"Pythons, along with pip, setuptools, and wheel, which are kept fairly up to "
"date."
msgstr ""
"Habilite o `repositório do IUS <https://ius.io/setup>`_ e instale um dos "
"Pythons `pré-instaláveis <https://ius.io/usage#parallel-installable-"
"packages>`_, junto com pip, setuptools e wheel, que são mantidos "
"razoavelmente atualizados."

#: ../source/guides/installing-using-linux-tools.rst:100
msgid "For example, for Python 3.4 on CentOS7/RHEL7:"
msgstr "Por exemplo, para Python 3.4 no CentOS7/RHEL7:"

#: ../source/guides/installing-using-linux-tools.rst:108
msgid "openSUSE"
msgstr "openSUSE"

#: ../source/guides/installing-using-linux-tools.rst:118
msgid "Debian/Ubuntu and derivatives"
msgstr "Debian/Ubuntu e derivados"

#: ../source/guides/installing-using-linux-tools.rst:120
msgid "Firstly, update and refresh repository lists by running this command:"
msgstr ""
"Em primeiro lugar, atualize as listas de repositórios executando este "
"comando:"

#: ../source/guides/installing-using-linux-tools.rst:129
msgid ""
"Recent Debian/Ubuntu versions have modified pip to use the `\"User Scheme\" "
"<https://pip.pypa.io/en/stable/user_guide/#user-installs>`_ by default, "
"which is a significant behavior change that can be surprising to some users."
msgstr ""
"Versões recentes do Debian/Ubuntu modificaram o pip para usar o `\"User "
"Scheme\" <https://pip.pypa.io/en/stable/user_guide/#user-installs>`_ "
"(Esquema de usuário) por padrão, que é um mudança significativa de "
"comportamento que pode surpreender alguns usuários."

#: ../source/guides/installing-using-linux-tools.rst:135
msgid "Arch Linux"
msgstr "Arch Linux"

#: ../source/guides/installing-using-linux-tools.rst:143
msgid ""
"Currently, there is no \"copr\" yum plugin available for CentOS/RHEL, so the "
"only option is to manually place the repo files as described."
msgstr ""
"Atualmente, não há plug-in do yum para \"copr\" disponível para CentOS/RHEL, "
"então a única opção é colocar manualmente os arquivos de repositório "
"conforme descrito."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:2
msgid "Install packages in a virtual environment using pip and venv"
msgstr "Instalar pacotes em um ambiente virtual usando pip e venv"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:4
msgid ""
"This guide discusses how to create and activate a virtual environment using "
"the standard library's virtual environment tool :ref:`venv` and install "
"packages. The guide covers how to:"
msgstr ""
"Este guia discute como criar e ativar um ambiente virtual usando a "
"ferramenta de ambiente virtual da biblioteca padrão :ref:`venv` e instalar "
"pacotes. O guia aborda como:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:8
msgid "Create and activate a virtual environment"
msgstr "Criar e ativar um ambiente virtual"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:9
#: ../source/guides/installing-using-pip-and-virtual-environments.rst:153
msgid "Prepare pip"
msgstr "Preparar o pip"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:10
msgid "Install packages into a virtual environment using the ``pip`` command"
msgstr "Instalar pacotes em um ambinente virtual usando o comando ``pip``"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:11
msgid "Use and create a requirements file"
msgstr "Usar e criar o arquivo de requisitos"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:14
msgid ""
"This guide applies to supported versions of Python, currently 3.8 and higher."
msgstr ""
"Este guia se aplica a versões suportadas do Python, atualmente 3.8 e "
"superior."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:18
msgid ""
"This guide uses the term **package** to refer to a :term:`Distribution "
"Package`, which commonly is installed from an external host. This differs "
"from the term :term:`Import Package` which refers to import modules in your "
"Python source code."
msgstr ""
"Este guia usa o termo **pacote** para se referir a um :term:`Pacote de "
"Distribuição`, o qual é comumente instalado a partir de um host externo. Ele "
"é diferente do termo :term:`Pacote de Importação` que se refere a importar "
"módulos em seu código-fonte do Python."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:25
msgid ""
"This guide has the prerequisite that you are using an official Python "
"version obtained from <https://www.python.org/downloads/>. If you are using "
"your operating system's package manager to install Python, please ensure "
"that Python is installed before proceeding with these steps."
msgstr ""
"Este guia tem como pré-requisito que você esteja usando uma versão oficial "
"do Python obtida em <https://www.python.org/downloads/>. Se você estiver "
"usando o gerenciador de pacotes do seu sistema operacional para instalar o "
"Python, certifique-se de que o Python esteja instalado antes de prosseguir "
"com estas etapas."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:32
msgid "Create and Use Virtual Environments"
msgstr "Criar e usar ambientes virtuais"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:35
msgid "Create a new virtual environment"
msgstr "Criar um novo ambiente virtual"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:37
msgid ""
":ref:`venv` (for Python 3) allows you to manage separate package "
"installations for different projects. It creates a \"virtual\" isolated "
"Python installation. When you switch projects, you can create a new virtual "
"environment which is isolated from other virtual environments. You benefit "
"from the virtual environment since packages can be installed confidently and "
"will not interfere with another project's environment."
msgstr ""
":ref:`venv` (para Python 3) permite gerenciar instalações de pacotes "
"separadas para projetos diferentes. Ele cria uma instalação Python "
"\"virtual\" e isolada. Ao alternar projetos, você pode criar um novo "
"ambiente virtual isolado de outros ambientes virtuais. Você se beneficia do "
"ambiente virtual, pois os pacotes podem ser instalados com segurança e não "
"interferirão no ambiente de outro projeto."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:45
msgid ""
"It is recommended to use a virtual environment when working with third party "
"packages."
msgstr ""
"Recomenda-se usar um ambiente virtual ao trabalhar com pacotes de terceiros."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:48
msgid ""
"To create a virtual environment, go to your project's directory and run the "
"following command. This will create a new virtual environment in a local "
"folder named ``.venv``:"
msgstr ""
"Para criar um ambiente virtual, acesse o diretório do seu projeto e execute "
"o comando a seguir. Isso criará um novo ambiente virtual em uma pasta local "
"chamada ``.venv``:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:64
msgid ""
"The second argument is the location to create the virtual environment. "
"Generally, you can just create this in your project and call it ``.venv``."
msgstr ""
"O segundo argumento é o local para criar o ambiente virtual. Geralmente, "
"você pode apenas criar isso em seu projeto e chamá-lo de ``.venv``."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:67
msgid ""
"``venv`` will create a virtual Python installation in the ``.venv`` folder."
msgstr "``venv`` irá criar uma instalação virtual Python na pasta ``.venv``."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:69
msgid ""
"You should exclude your virtual environment directory from your version "
"control system using ``.gitignore`` or similar."
msgstr ""
"Você deve excluir seu diretório de ambiente virtual de seu sistema de "
"controle de versão usando ``.gitignore`` ou similar."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:74
msgid "Activate a virtual environment"
msgstr "Ativar um ambiente virtual"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:76
msgid ""
"Before you can start installing or using packages in your virtual "
"environment you'll need to ``activate`` it. Activating a virtual environment "
"will put the virtual environment-specific ``python`` and ``pip`` executables "
"into your shell's ``PATH``."
msgstr ""
"Antes de começar a instalar ou usar pacotes em seu ambiente virtual, você "
"precisará ativá-lo, com ``activate``. Ativar um ambiente virtual colocará os "
"executáveis ``python`` e ``pip`` específicos do ambiente virtual no ``PATH`` "
"de seu shell."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:93
msgid ""
"To confirm the virtual environment is activated, check the location of your "
"Python interpreter:"
msgstr ""
"Para confirmar o ambiente virtual está ativado, verifique o local do seu "
"interpretador Python:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:108
msgid ""
"While the virtual environment is active, the above command will output a "
"filepath that includes the ``.venv`` directory, by ending with the following:"
msgstr ""
"Enquanto o ambiente virtual estiver ativo, o comando acima irá gerar um "
"caminho de arquivo que inclui o diretório ``.venv``, terminando com o "
"seguinte:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:124
msgid ""
"While a virtual environment is activated, pip will install packages into "
"that specific environment. This enables you to import and use packages in "
"your Python application."
msgstr ""
"Enquanto um ambiente virtual estiver ativado, pip instalará pacotes naquele "
"ambiente específico. Isso permite que você importe e use pacotes em sua "
"aplicação Python."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:130
msgid "Deactivate a virtual environment"
msgstr "Desativar um ambiente virtual"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:132
msgid ""
"If you want to switch projects or leave your virtual environment, "
"``deactivate`` the environment:"
msgstr ""
"Se você deseja trocar de projeto ou sair do seu ambiente virtual, desative o "
"ambiente com ``deactivate``:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:140
msgid ""
"Closing your shell will deactivate the virtual environment. If you open a "
"new shell window and want to use the virtual environment, reactivate it."
msgstr ""
"Fechar seu shell desativará o ambiente virtual. Se você abrir uma nova "
"janela do shell e quiser usar o ambiente virtual, reative-o."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:145
msgid "Reactivate a virtual environment"
msgstr "Reativar um ambiente virtual"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:147
msgid ""
"If you want to reactivate an existing virtual environment, follow the same "
"instructions about activating a virtual environment. There's no need to "
"create a new virtual environment."
msgstr ""
"Se você quiser reativar um ambiente virtual existente, siga as mesmas "
"instruções sobre como ativar um ambiente virtual. Não há necessidade de "
"criar um novo ambiente virtual."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:155
msgid ""
":ref:`pip` is the reference Python package manager. It's used to install and "
"update packages into a virtual environment."
msgstr ""
":ref:`pip` é o gerenciador de pacotes de referência Python. É usado para "
"instalar e atualizar pacotes. Ele é usado para instalar e atualizar pacotes "
"em um ambiente virtual."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:161
msgid ""
"The Python installers for macOS include pip. On Linux, you may have to "
"install an additional package such as ``python3-pip``. You can make sure "
"that pip is up-to-date by running:"
msgstr ""
"Os instaladores de Python para macOS incluem pip. No Linux, você pode ter "
"que instalar um pacote adicional como ``python3-pip``. Você pode ter certeza "
"de que o pip está atualizado executando:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:170
msgid ""
"Afterwards, you should have the latest version of pip installed in your user "
"site:"
msgstr ""
"Depois disso, você deve ter a versão mais recente do pip instalado em seu "
"site de usuário:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:179
msgid ""
"The Python installers for Windows include pip. You can make sure that pip is "
"up-to-date by running:"
msgstr ""
"Os instaladores do Python para Windows incluem pip. Você pode garantir que o "
"pip está atualizado usando:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:187
msgid "Afterwards, you should have the latest version of pip:"
msgstr "Depois disso, você deve ter a versão mais recente do pip:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:195
msgid "Install packages using pip"
msgstr "Instalar pacotes usando pip"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:197
msgid ""
"When your virtual environment is activated, you can install packages. Use "
"the ``pip install`` command to install packages."
msgstr ""
"Quando seu ambiente virtual estiver ativado, você poderá instalar pacotes. "
"Use o comando ``pip install`` para instalar pacotes."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:201
msgid "Install a package"
msgstr "Instalar um pacote"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:203
#, fuzzy
#| msgid ""
#| "For example,let's install the `Requests`_ library from the :term:`Python "
#| "Package Index (PyPI)`:"
msgid ""
"For example, let's install the `Requests`_ library from the :term:`Python "
"Package Index (PyPI)`:"
msgstr ""
"Por exemplo, vamos instalar a biblioteca `Requests`_ do :term:`Python "
"Package Index (PyPI)`:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:218
msgid ""
"pip should download requests and all of its dependencies and install them:"
msgstr ""
"pip deve baixar solicitações e todas as suas dependências e instalá-los:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:239
msgid "Install a specific package version"
msgstr "Instalar uma versão específica do pacote"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:241
msgid ""
"pip allows you to specify which version of a package to install using :term:"
"`version specifiers <Version Specifier>`. For example, to install a specific "
"version of ``requests``:"
msgstr ""
"pip permite que você especifique qual versão de um pacote instalar usando :"
"term:`especificadores de versão <Especificador de Versão>`. Por exemplo, "
"para instalar uma versão específica do ``requests``:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:257
msgid "To install the latest ``2.x`` release of requests:"
msgstr "Para instalar a versão ``2.x`` mais recente do requests:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:271
msgid "To install pre-release versions of packages, use the ``--pre`` flag:"
msgstr ""
"Para instalar versões de pré-lançamento de pacotes, use o sinalizador ``--"
"pre``:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:287
msgid "Install extras"
msgstr "Instalar extras"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:289
msgid ""
"Some packages have optional `extras`_. You can tell pip to install these by "
"specifying the extra in brackets:"
msgstr ""
"Alguns pacotes possuem `extras`_ opcionais. Você pode dizer ao pip para "
"instalá-los especificando o extra entre colchetes:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:309
msgid "Install a package from source"
msgstr "Instalar um pacote a partir do código-fonte"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:311
msgid ""
"pip can install a package directly from its source code. For example, to "
"install the source code in the ``google-auth`` directory:"
msgstr ""
"pip pode instalar um pacote diretamente de seu código-fonteseu. Por exemplo, "
"você pode instalar o código-fonte no diretório ``google-auth``:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:328
msgid ""
"Additionally, pip can install packages from source in :doc:`development mode "
"<setuptools:userguide/development_mode>`, meaning that changes to the source "
"directory will immediately affect the installed package without needing to "
"re-install:"
msgstr ""
"Além disso, pip pode instalar pacotes do código-fonte no :doc:`modo de "
"desenvolvimento <setuptools:userguide/development_mode>`, o que significa "
"que as mudanças no diretório de código-fonte afetarão imediatamente o pacote "
"instalado sem a necessidade de reinstalar:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:347
msgid "Install from version control systems"
msgstr "Instalar a partir de sistemas de controle de versão"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:349
msgid ""
"pip can install packages directly from their version control system. For "
"example, you can install directly from a git repository:"
msgstr ""
"pip pode instalar pacotes diretamente de seu sistema de controle de versão. "
"Por exemplo, você pode instalar diretamente de um repositório git:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:356
msgid ""
"For more information on supported version control systems and syntax, see "
"pip's documentation on :ref:`VCS Support <pip:VCS Support>`."
msgstr ""
"Para mais informações sobre os sistemas de controle de versão suportados e "
"sintaxe, consulte a documentação do pip em :ref:`Suporte VCS <pip:VCS "
"Support>`."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:361
msgid "Install from local archives"
msgstr "Instalar a partir de arquivos locais"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:363
msgid ""
"If you have a local copy of a :term:`Distribution Package`'s archive (a zip, "
"wheel, or tar file) you can install it directly with pip:"
msgstr ""
"Se você tiver uma cópia local de um arquivo do :term:`Pacote de "
"Distribuição` (um arquivo zip, wheel ou tar), você pode instalá-lo "
"diretamente com pip:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:378
msgid ""
"If you have a directory containing archives of multiple packages, you can "
"tell pip to look for packages there and not to use the :term:`Python Package "
"Index (PyPI)` at all:"
msgstr ""
"Se você tiver um diretório contendo arquivos de vários pacotes, você pode "
"dizer ao pip para procurar por pacotes lá e não usar o :term:`Python Package "
"Index (PyPI)` de forma alguma:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:394
msgid ""
"This is useful if you are installing packages on a system with limited "
"connectivity or if you want to strictly control the origin of distribution "
"packages."
msgstr ""
"Isso é útil se você estiver instalando pacotes em um sistema com "
"conectividade limitada ou se quiser controlar estritamente a origem dos "
"pacotes de distribuição."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:400
msgid "Install from other package indexes"
msgstr "Instalar a partir de outros índices de pacote"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:402
msgid ""
"If you want to download packages from a different index than the :term:"
"`Python Package Index (PyPI)`, you can use the ``--index-url`` flag:"
msgstr ""
"Se você quiser baixar pacotes de um índice diferente do :term:`Python "
"Package Index (PyPI)`, você pode usar o sinalizador ``--index-url``:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:417
msgid ""
"If you want to allow packages from both the :term:`Python Package Index "
"(PyPI)` and a separate index, you can use the ``--extra-index-url`` flag "
"instead:"
msgstr ""
"Se você deseja permitir pacotes do :term:`Python Package Index (PyPI)` e de "
"um índice separado, você pode usar a sinalização ``--extra-index-url`` em "
"seu lugar:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:434
#: ../source/tutorials/installing-packages.rst:393
msgid "Upgrading packages"
msgstr "Atualizando pacotes"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:436
msgid ""
"pip can upgrade packages in-place using the ``--upgrade`` flag. For example, "
"to install the latest version of ``requests`` and all of its dependencies:"
msgstr ""
"pip pode atualizar pacotes no local usando o sinalizador ``--upgrade``. Por "
"exemplo, para instalar a versão mais recente de ``requests`` e todas as suas "
"dependências:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:452
msgid "Using a requirements file"
msgstr "Usando um arquivo de requisitos"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:454
msgid ""
"Instead of installing packages individually, pip allows you to declare all "
"dependencies in a :ref:`Requirements File <pip:Requirements Files>`. For "
"example you could create a :file:`requirements.txt` file containing:"
msgstr ""
"Em vez de instalar pacotes individualmente, pip permite que você declare "
"todas as dependências em um :ref:`Arquivo de Requisitos <pip:Requirements "
"Files>`. Por exemplo, você pode criar um arquivo :file:`requirements.txt` "
"contendo:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:463
msgid ""
"And tell pip to install all of the packages in this file using the ``-r`` "
"flag:"
msgstr ""
"E diga ao pip para instalar todos os pacotes neste arquivo usando o "
"sinalizador ``-r``:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:478
msgid "Freezing dependencies"
msgstr "Congelando dependências"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:480
msgid ""
"Pip can export a list of all installed packages and their versions using the "
"``freeze`` command:"
msgstr ""
"Pip pode exportar uma lista de todos os pacotes instalados e suas versões "
"usando o comando ``freeze``:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:495
msgid "Which will output a list of package specifiers such as:"
msgstr "O que resultará em uma lista de especificadores de pacote, como:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:511
msgid ""
"The ``pip freeze`` command is useful for creating :ref:`pip:Requirements "
"Files` that can re-create the exact versions of all packages installed in an "
"environment."
msgstr ""
"O comando ``pip freeze`` útil para criar :ref:`pip:Requirements Files` que "
"podem recriar as versões exatas de todos os pacotes instalados em um "
"ambiente."

#: ../source/guides/installing-using-virtualenv.rst:2
msgid "Installing packages using virtualenv"
msgstr "Instalando pacotes usando virtualenv"

#: ../source/guides/installing-using-virtualenv.rst:4
msgid ""
"This guide discusses how to install packages using :ref:`pip` and :ref:"
"`virtualenv`, a tool to create isolated Python environments."
msgstr ""
"Este guia discute como instalar pacotes usando :ref:`pip` e :ref:"
"`virtualenv`, uma ferramenta para criar ambientes Python isolados."

#: ../source/guides/installing-using-virtualenv.rst:8
msgid ""
"This \"how to\" guide on installing packages and using :ref:`virtualenv` is "
"under development. Please refer to the :ref:`virtualenv` documentation for "
"details on installation and usage."
msgstr ""
"Este guia sobre como instalar pacotes e usar :ref:`virtualenv` está em "
"desenvolvimento. Consulte a documentação do :ref:`virtualenv` para detalhes "
"sobre instalação e uso."

#: ../source/guides/installing-using-virtualenv.rst:13
msgid ""
"This doc uses the term **package** to refer to a :term:`Distribution "
"Package`  which is different from an :term:`Import Package` that which is "
"used to import modules in your Python source code."
msgstr ""
"Este documento usa o termo **pacote** para se referir a um :term:`Pacote de "
"Distribuição` que é diferente de um :term:`Pacote de Importação` que é usado "
"para importar módulos em seu código-fonte do Python."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:6
msgid "Licensing examples and user scenarios"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:9
msgid ""
":pep:`639` has specified the way to declare a project's license and paths to "
"license files and other legally required information. This document aims to "
"provide clear guidance how to migrate from the legacy to the standardized "
"way of declaring licenses. Make sure your preferred build backend supports :"
"pep:`639` before trying to apply the newer guidelines."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:18
#, fuzzy
#| msgid "Examples"
msgid "Licensing Examples"
msgstr "Exemplos"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:23
#, fuzzy
msgid "Basic example"
msgstr "Um exemplo completo"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:25
msgid ""
"The Setuptools project itself, as of `version 75.6.0 <setuptools7560_>`__, "
"does not use the ``License`` field in its own project source metadata. "
"Further, it no longer explicitly specifies ``license_file``/"
"``license_files`` as it did previously, since Setuptools relies on its own "
"automatic inclusion of license-related files matching common patterns, such "
"as the :file:`LICENSE` file it uses."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:32
msgid ""
"It includes the following license-related metadata in its :file:`pyproject."
"toml`:"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:42
msgid "The simplest migration to PEP 639 would consist of using this instead:"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:49
msgid "Or, if the project used :file:`setup.cfg`, in its ``[metadata]`` table:"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:56
msgid "The output Core Metadata for the distribution packages would then be:"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:63
msgid ""
"The :file:`LICENSE` file would be stored at :file:`/setuptools-{VERSION}/"
"LICENSE` in the sdist and :file:`/setuptools-{VERSION}.dist-info/licenses/"
"LICENSE` in the wheel, and unpacked from there into the site directory (e."
"g. :file:`site-packages/`) on installation; :file:`/` is the root of the "
"respective archive and ``{VERSION}`` the version of the Setuptools release "
"in the Core Metadata."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:73
#, fuzzy
msgid "Advanced example"
msgstr "Um exemplo completo"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:75
msgid ""
"Suppose Setuptools were to include the licenses of the third-party projects "
"that are vendored in the :file:`setuptools/_vendor/` and :file:"
"`pkg_resources/_vendor/` directories; specifically:"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:86
#, fuzzy
#| msgid "The minimum required versions of the respective tools are:"
msgid "The license expressions for these projects are:"
msgstr "As versões mínimas exigidas das respectivas ferramentas são:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:95
msgid ""
"A comprehensive license expression covering both Setuptools proper and its "
"vendored dependencies would contain these metadata, combining all the "
"license expressions into one. Such an expression might be:"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:103
msgid ""
"In addition, per the requirements of the licenses, the relevant license "
"files must be included in the package. Suppose the :file:`LICENSE` file "
"contains the text of the MIT license and the copyrights used by Setuptools, "
"``pyparsing``, ``more_itertools`` and ``ordered-set``; and the :file:"
"`LICENSE*` files in the :file:`setuptools/_vendor/packaging/` directory "
"contain the Apache 2.0 and 2-clause BSD license text, and the Packaging "
"copyright statement and `license choice notice <packaginglicense_>`__."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:111
msgid ""
"Specifically, we assume the license files are located at the following paths "
"in the project source tree (relative to the project root and :file:"
"`pyproject.toml`):"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:122
msgid "Putting it all together, our :file:`pyproject.toml` would be:"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:133
msgid ""
"Or alternatively, the license files can be specified explicitly (paths will "
"be interpreted as glob patterns):"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:147
msgid "If our project used :file:`setup.cfg`, we could define this in :"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:159
msgid ""
"With either approach, the output Core Metadata in the distribution would be:"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:170
msgid ""
"In the resulting sdist, with :file:`/` as the root of the archive and "
"``{VERSION}`` the version of the Setuptools release specified in the Core "
"Metadata, the license files would be located at the paths:"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:181
msgid ""
"In the built wheel, with :file:`/` being the root of the archive and "
"``{VERSION}`` as the previous, the license files would be stored at:"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:191
msgid ""
"Finally, in the installed project, with :file:`site-packages/` being the "
"site dir and ``{VERSION}`` as the previous, the license files would be "
"installed to:"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:203
#, fuzzy
msgid "Expression examples"
msgstr "Um exemplo completo"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:205
#, fuzzy
#| msgid "in favour of ``Requires-Dist``"
msgid "Some additional examples of valid ``License-Expression`` values:"
msgstr "em favor de ``Requires-Dist``"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:220
msgid "User Scenarios"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:222
msgid ""
"The following covers the range of common use cases from a user perspective, "
"providing guidance for each. Do note that the following should **not** be "
"considered legal advice, and readers should consult a licensed legal "
"practitioner in their jurisdiction if they are unsure about the specifics "
"for their situation."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:230
msgid "I have a private package that won't be distributed"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:232
msgid ""
"If your package isn't shared publicly, i.e. outside your company, "
"organization or household, it *usually* isn't strictly necessary to include "
"a formal license, so you wouldn't necessarily have to do anything extra here."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:236
msgid ""
"However, it is still a good idea to include ``LicenseRef-Proprietary`` as a "
"license expression in your package configuration, and/or a copyright "
"statement and any legal notices in a :file:`LICENSE.txt` file in the root of "
"your project directory, which will be automatically included by packaging "
"tools."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:244
msgid "I just want to share my own work without legal restrictions"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:246
msgid ""
"While you aren't required to include a license, if you don't, no one has "
"`any permission to download, use or improve your work "
"<dontchoosealicense_>`__, so that's probably the *opposite* of what you "
"actually want. The `MIT license <chooseamitlicense_>`__ is a great choice "
"instead, as it's simple, widely used and allows anyone to do whatever they "
"want with your work (other than sue you, which you probably also don't want)."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:253
msgid ""
"To apply it, just paste `the text <chooseamitlicense_>`__ into a file named :"
"file:`LICENSE.txt` at the root of your repo, and add the year and your name "
"to the copyright line. Then, just add ``license = \"MIT\"`` under "
"``[project]`` in your :file:`pyproject.toml` if your packaging tool supports "
"it, or in its config file/section. You're done!"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:261
msgid "I want to distribute my project under a specific license"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:263
msgid ""
"To use a particular license, simply paste its text into a :file:`LICENSE."
"txt` file at the root of your repo, if you don't have it in a file starting "
"with :file:`LICENSE` or :file:`COPYING` already, and add ``license = "
"\"LICENSE-ID\"`` under ``[project]`` in your :file:`pyproject.toml` if your "
"packaging tool supports it, or else in its config file. You can find the "
"``LICENSE-ID`` and copyable license text on sites like `ChooseALicense "
"<choosealicenselist_>`__ or `SPDX <spdxlist_>`__."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:272
msgid ""
"Many popular code hosts, project templates and packaging tools can add the "
"license file for you, and may support the expression as well in the future."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:277
msgid "I maintain an existing package that's already licensed"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:279
msgid ""
"If you already have license files and metadata in your project, you should "
"only need to make a couple of tweaks to take advantage of the new "
"functionality."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:283
msgid ""
"In your project config file, enter your license expression under ``license`` "
"(``[project]`` table in :file:`pyproject.toml`), or the equivalent for your "
"packaging tool, and make sure to remove any legacy ``license`` table subkeys "
"or ``License ::`` classifiers. Your existing ``license`` value may already "
"be valid as one (e.g. ``MIT``, ``Apache-2.0 OR BSD-2-Clause``, etc); "
"otherwise, check the `SPDX license list <spdxlist_>`__ for the identifier "
"that matches the license used in your project."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:292
msgid ""
"Make sure to list your license files under ``license-files`` under "
"``[project]`` in :file:`pyproject.toml` or else in your tool's configuration "
"file."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:296
msgid ""
"See the :ref:`licensing-example-basic` for a simple but complete real-world "
"demo of how this works in practice. See also the best-effort guidance on how "
"to translate license classifiers into license expression provided by the :"
"pep:`639` authors: `Mapping License Classifiers to SPDX Identifiers "
"<mappingclassifierstospdx_>`__. Packaging tools may support automatically "
"converting legacy licensing metadata; check your tool's documentation for "
"more information."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:306
msgid "My package includes other code under different licenses"
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:308
msgid ""
"If your project includes code from others covered by different licenses, "
"such as vendored dependencies or files copied from other open source "
"software, you can construct a license expression to describe the licenses "
"involved and the relationship between them."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:314
msgid ""
"In short, ``License-1 AND License-2`` mean that *both* licenses apply to "
"your project, or parts of it (for example, you included a file under another "
"license), and ``License-1 OR License-2`` means that *either* of the licenses "
"can be used, at the user's option (for example, you want to allow users a "
"choice of multiple licenses). You can use parenthesis (``()``) for grouping "
"to form expressions that cover even the most complex situations."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:322
msgid ""
"In your project config file, enter your license expression under ``license`` "
"(``[project]`` table of :file:`pyproject.toml`), or the equivalent for your "
"packaging tool, and make sure to remove any legacy ``license`` table subkeys "
"or ``License ::`` classifiers."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:328
msgid ""
"Also, make sure you add the full license text of all the licenses as files "
"somewhere in your project repository. List the relative path or glob "
"patterns to each of them under ``license-files`` under ``[project]`` in :"
"file:`pyproject.toml` (if your tool supports it), or else in your tool's "
"configuration file."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:334
msgid ""
"As an example, if your project was licensed MIT but incorporated a vendored "
"dependency (say, ``packaging``) that was licensed under either Apache 2.0 or "
"the 2-clause BSD, your license expression would be ``MIT AND (Apache-2.0 OR "
"BSD-2-Clause)``. You might have a :file:`LICENSE.txt` in your repo root, and "
"a :file:`LICENSE-APACHE.txt` and :file:`LICENSE-BSD.txt` in the :file:"
"`_vendor/` subdirectory, so to include all of them, you'd specify "
"``[\"LICENSE.txt\", \"_vendor/packaging/LICENSE*\"]`` as glob patterns, or "
"``[\"LICENSE.txt\", \"_vendor/LICENSE-APACHE.txt\", \"_vendor/LICENSE-BSD."
"txt\"]`` as literal file paths."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:345
msgid ""
"See a fully worked out :ref:`licensing-example-advanced` for an end-to-end "
"application of this to a real-world complex project, with many technical "
"details, and consult a `tutorial <spdxtutorial_>`__ for more help and "
"examples using SPDX identifiers and expressions."
msgstr ""

#: ../source/guides/making-a-pypi-friendly-readme.rst:2
msgid "Making a PyPI-friendly README"
msgstr "Criando um README amigável para PyPI"

#: ../source/guides/making-a-pypi-friendly-readme.rst:4
msgid ""
"README files can help your users understand your project and can be used to "
"set your project's description on PyPI. This guide helps you create a README "
"in a PyPI-friendly format and include your README in your package so it "
"appears on PyPI."
msgstr ""
"Os arquivos README podem ajudar seus usuários a entender o seu projeto e "
"podem ser usados para definir a descrição do seu projeto no PyPI. Este guia "
"ajuda a criar um README em um formato amigável ao PyPI e inclui seu README "
"em seu pacote para que apareça no PyPI."

#: ../source/guides/making-a-pypi-friendly-readme.rst:9
msgid "Creating a README file"
msgstr "Criando um arquivo README"

#: ../source/guides/making-a-pypi-friendly-readme.rst:11
msgid ""
"README files for Python projects are often named ``README``, ``README.txt``, "
"``README.rst``, or ``README.md``."
msgstr ""
"Arquivos README para projetos Python são frequentemente chamados de "
"``README``, ``README.txt``, ``README.rst`` ou ``README.md``."

#: ../source/guides/making-a-pypi-friendly-readme.rst:13
msgid ""
"For your README to display properly on PyPI, choose a markup language "
"supported by PyPI. Formats supported by `PyPI's README renderer <https://"
"github.com/pypa/readme_renderer>`_ are:"
msgstr ""
"Para que seu README seja exibido corretamente no PyPI, escolha uma linguagem "
"de marcação suportada pelo PyPI. Os formatos suportados pelo renderizador de "
"README do `PyPI <https://github.com/pypa/readme_renderer>`_ são:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:16
msgid "plain text"
msgstr "texto simples"

#: ../source/guides/making-a-pypi-friendly-readme.rst:17
msgid ""
"`reStructuredText <https://docutils.sourceforge.io/rst.html>`_ (without "
"Sphinx extensions)"
msgstr ""
"`reStructuredText <https://docutils.sourceforge.io/rst.html>`_ (sem "
"extensões do Sphinx)"

#: ../source/guides/making-a-pypi-friendly-readme.rst:18
msgid ""
"Markdown (`GitHub Flavored Markdown <https://github.github.com/gfm/>`_ by "
"default, or `CommonMark <https://commonmark.org/>`_)"
msgstr ""
"Markdown (`GitHub Flavored Markdown <https://github.github.com/gfm/>`_ por "
"padrão ou `CommonMark <https://commonmark.org/>`_)"

#: ../source/guides/making-a-pypi-friendly-readme.rst:21
msgid ""
"It's customary to save your README file in the root of your project, in the "
"same directory as your :file:`setup.py` file."
msgstr ""
"É comum salvar seu arquivo README na raiz de seu projeto, no mesmo diretório "
"que seu arquivo :file:`setup.py`."

#: ../source/guides/making-a-pypi-friendly-readme.rst:25
msgid "Including your README in your package's metadata"
msgstr "Incluindo seu README nos metadados do seu pacote"

#: ../source/guides/making-a-pypi-friendly-readme.rst:27
msgid ""
"To include your README's contents as your package description, set your "
"project's ``Description`` and ``Description-Content-Type`` metadata, "
"typically in your project's :file:`setup.py` file."
msgstr ""
"Para incluir o conteúdo do README como a descrição do pacote, defina os "
"metadados ``Description`` e ``Description-Content-Type`` do seu projeto, "
"normalmente no arquivo :file:`setup.py` do seu projeto."

#: ../source/guides/making-a-pypi-friendly-readme.rst:33
msgid ":ref:`description-optional`"
msgstr ":ref:`description-optional`"

#: ../source/guides/making-a-pypi-friendly-readme.rst:34
msgid ":ref:`description-content-type-optional`"
msgstr ":ref:`description-content-type-optional`"

#: ../source/guides/making-a-pypi-friendly-readme.rst:36
msgid ""
"For example, to set these values in a package's :file:`setup.py` file, use "
"``setup()``'s ``long_description`` and ``long_description_content_type``."
msgstr ""
"Por exemplo, para definir esses valores em um arquivo :file:`setup.py` do "
"pacote, use ``long_description`` e ``long_description_content_type`` do "
"``setup()``."

#: ../source/guides/making-a-pypi-friendly-readme.rst:39
msgid ""
"Set the value of ``long_description`` to the contents (not the path) of the "
"README file itself. Set the ``long_description_content_type`` to an accepted "
"``Content-Type``-style value for your README file's markup, such as ``text/"
"plain``, ``text/x-rst`` (for reStructuredText), or ``text/markdown``."
msgstr ""
"Defina o valor de ``long_description`` para o conteúdo (não o caminho) do "
"próprio arquivo README. Defina o ``long_description_content_type`` para um "
"valor aceito no estilo ``Content-Type`` para a marcação do seu arquivo "
"README, como ``text/plain``, ``text/t-rst`` (para reStructuredText) ou "
"``text/markdown``."

#: ../source/guides/making-a-pypi-friendly-readme.rst:45
msgid ""
"If you're using GitHub-flavored Markdown to write a project's description, "
"ensure you upgrade the following tools:"
msgstr ""
"Se você estiver usando o Markdown do GitHub para escrever a descrição de um "
"projeto, certifique-se de atualizar as seguintes ferramentas:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:60
msgid "The minimum required versions of the respective tools are:"
msgstr "As versões mínimas exigidas das respectivas ferramentas são:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:62
msgid "``setuptools >= 38.6.0``"
msgstr ""

#: ../source/guides/making-a-pypi-friendly-readme.rst:63
msgid "``wheel >= 0.31.0``"
msgstr ""

#: ../source/guides/making-a-pypi-friendly-readme.rst:64
msgid "``twine >= 1.11.0``"
msgstr ""

#: ../source/guides/making-a-pypi-friendly-readme.rst:66
msgid ""
"It's recommended that you use ``twine`` to upload the project's distribution "
"packages:"
msgstr ""
"É recomendado que você use ``twine`` para enviar pacotes de distribuição do "
"projeto:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:72
msgid ""
"For example, see this :file:`setup.py` file, which reads the contents of :"
"file:`README.md` as ``long_description`` and identifies the markup as GitHub-"
"flavored Markdown:"
msgstr ""
"Por exemplo, veja este arquivo :file:`setup.py`, que lê o conteúdo de :file:"
"`README.md` como ``long_description`` e identifica a marcação como Markdown "
"do GitHub:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:94
msgid "Validating reStructuredText markup"
msgstr "Validando a marcação reStructuredText"

#: ../source/guides/making-a-pypi-friendly-readme.rst:96
msgid ""
"If your README is written in reStructuredText, any invalid markup will "
"prevent it from rendering, causing PyPI to instead just show the README's "
"raw source."
msgstr ""
"Se o seu README for escrito em reStructuredText, qualquer marcação inválida "
"irá impedi-lo de renderizar, fazendo com que o PyPI mostre apenas o código-"
"fonte não tratado do README."

#: ../source/guides/making-a-pypi-friendly-readme.rst:99
msgid ""
"Note that Sphinx extensions used in docstrings, such as :doc:`directives "
"<sphinx:usage/restructuredtext/directives>` and :doc:`roles <sphinx:usage/"
"restructuredtext/roles>` (e.g., \"``:py:func:`getattr```\" or \"``:ref:`my-"
"reference-label```\"), are not allowed here and will result in error "
"messages like \"``Error: Unknown interpreted text role \"py:func\".``\"."
msgstr ""
"Observe que as extensões Sphinx usadas em docstrings, como :doc:`diretivas "
"<sphinx:usage/restructuredtext/directives>` e :doc:`funções <sphinx:usage/"
"restructuredtext/roles>` (por exemplo, \"``:py:func:`getattr```\" ou \"``:"
"ref:`my-reference-label```\"), não são permitidas aqui e resultarão em "
"mensagens de erro como \"``Error: Unknown interpreted text role \"py:func\"."
"``\"."

#: ../source/guides/making-a-pypi-friendly-readme.rst:104
msgid ""
"You can check your README for markup errors before uploading as follows:"
msgstr ""
"Você pode verificar se há erros de marcação em seu README antes de enviar:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:106
msgid ""
"Install the latest version of `twine <https://github.com/pypa/twine>`_; "
"version 1.12.0 or higher is required:"
msgstr ""
"Instale a versão mais recente do `twine <https://github.com/pypa/twine>`_; "
"versão 1.12.0 ou superior é necessária:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:121
msgid ""
"Build the sdist and wheel for your project as described under :ref:"
"`Packaging Your Project`."
msgstr ""
"Construa o sdist e o wheel para seu projeto conforme descrito em :ref:"
"`Empacotando seu projeto <Packaging Your Project>`."

#: ../source/guides/making-a-pypi-friendly-readme.rst:124
msgid "Run ``twine check`` on the sdist and wheel:"
msgstr "Execute ``twine check`` no sdist e wheel:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:130
msgid ""
"This command will report any problems rendering your README.  If your markup "
"renders fine, the command will output ``Checking distribution FILENAME: "
"Passed``."
msgstr ""
"Este comando relatará quaisquer problemas ao processar seu README. Se sua "
"marcação renderizar corretamente, o comando produzirá ``Checking "
"Distribution FILENAME: Passed``."

#: ../source/guides/migrating-to-pypi-org.rst:6
msgid "Migrating to PyPI.org"
msgstr "Migrando para PyPI.org"

#: ../source/guides/migrating-to-pypi-org.rst:8
#: ../source/guides/multi-version-installs.rst:8
#: ../source/guides/supporting-multiple-python-versions.rst:9
#: ../source/guides/supporting-windows-using-appveyor.rst:7
msgid "Obsolete"
msgstr "Obsoleto"

#: ../source/guides/migrating-to-pypi-org.rst:10
msgid ""
":term:`pypi.org` is the new, rewritten version of PyPI that has replaced the "
"legacy PyPI code base. It is the default version of PyPI that people are "
"expected to use. These are the tools and processes that people will need to "
"interact with ``PyPI.org``."
msgstr ""
":term:`pypi.org` é a nova versão reescrita do PyPI que substituiu a base de "
"código legada do PyPI. É a versão padrão do PyPI que se espera que as "
"pessoas usem. Estas são as ferramentas e processos que as pessoas precisarão "
"para interagir com o ``PyPI .org``."

#: ../source/guides/migrating-to-pypi-org.rst:16
msgid "Publishing releases"
msgstr "Publicando lançamentos"

#: ../source/guides/migrating-to-pypi-org.rst:18
msgid "``pypi.org`` is the default upload platform as of September 2016."
msgstr "``pypi.org`` é a plataforma padrão para envio em setembro de 2016."

#: ../source/guides/migrating-to-pypi-org.rst:20
msgid ""
"Uploads through ``pypi.python.org`` were *switched off* on **July 3, 2017**. "
"As of April 13th, 2018, ``pypi.org`` is the URL for PyPI."
msgstr ""
"Os envios por meio de ``pypi.python.org`` foram *desativados* em **3 de "
"julho de 2017**. Desde 13 de abril de 2018, ``pypi.org`` é a URL do PyPI."

#: ../source/guides/migrating-to-pypi-org.rst:23
msgid ""
"The recommended way to migrate to PyPI.org for uploading is to ensure that "
"you are using a new enough version of your upload tool."
msgstr ""
"A maneira recomendada de migrar para PyPI.org para enviar é garantir que "
"você esteja usando uma versão nova o suficiente de sua ferramenta de envio."

#: ../source/guides/migrating-to-pypi-org.rst:26
msgid ""
"The default upload settings switched to ``pypi.org`` in the following "
"versions:"
msgstr ""
"As configurações de envio padrão mudaram para ``pypi.org`` nas seguintes "
"versões:"

#: ../source/guides/migrating-to-pypi-org.rst:28
msgid "``twine`` 1.8.0"
msgstr ""

#: ../source/guides/migrating-to-pypi-org.rst:29
msgid "``setuptools`` 27.0.0"
msgstr "``setuptools`` 27.0.0"

#: ../source/guides/migrating-to-pypi-org.rst:30
msgid "Python 2.7.13 (``distutils`` update)"
msgstr "Python 2.7.13 (atualização de ``distutils``)"

#: ../source/guides/migrating-to-pypi-org.rst:31
msgid "Python 3.4.6 (``distutils`` update)"
msgstr "Python 3.4.6 (atualização de ``distutils``)"

#: ../source/guides/migrating-to-pypi-org.rst:32
msgid "Python 3.5.3 (``distutils`` update)"
msgstr "Python 3.5.3 (atualização de ``distutils``)"

#: ../source/guides/migrating-to-pypi-org.rst:33
msgid "Python 3.6.0 (``distutils`` update)"
msgstr "Python 3.6.0 (atualização de ``distutils``)"

#: ../source/guides/migrating-to-pypi-org.rst:35
msgid ""
"In addition to ensuring you're on a new enough version of the tool for the "
"tool's default to have switched, you must also make sure that you have not "
"configured the tool to override its default upload URL. Typically this is "
"configured in a file located at :file:`$HOME/.pypirc`. If you see a file "
"like:"
msgstr ""
"Além de garantir que você esteja em uma versão nova o suficiente da "
"ferramenta para que o padrão da ferramenta seja alterado, você também deve "
"se certificar de que não configurou a ferramenta para substituir sua URL de "
"envio padrão. Normalmente, isso é configurado em um arquivo localizado em :"
"file:`$HOME/.pypirc`. Se você vir um arquivo como:"

#: ../source/guides/migrating-to-pypi-org.rst:52
msgid ""
"Then simply delete the line starting with ``repository`` and you will use "
"your upload tool's default URL."
msgstr ""
"Em seguida, simplesmente exclua a linha começando com ``repository`` e você "
"usará a URL padrão da sua ferramenta de envio."

#: ../source/guides/migrating-to-pypi-org.rst:55
msgid ""
"If for some reason you're unable to upgrade the version of your tool to a "
"version that defaults to using PyPI.org, then you may edit :file:`$HOME/."
"pypirc` and include the ``repository:`` line, but use the value ``https://"
"upload.pypi.org/legacy/`` instead:"
msgstr ""
"Se por algum motivo você não puder atualizar a versão de sua ferramenta para "
"uma versão que usa o padrão PyPI.org, então você pode editar :file:`$HOME/."
"pypirc` e incluir a linha ``repository:``, mas use o valor ``https://upload."
"pypi.org/legacy/`` em vez disso:"

#: ../source/guides/migrating-to-pypi-org.rst:71
msgid ""
"(``legacy`` in this URL refers to the fact that this is the new server "
"implementation's emulation of the legacy server implementation's upload API.)"
msgstr ""
"(``legacy`` nesta URL refere-se ao fato de que esta é a emulação da "
"implementação do novo servidor para a API de envio da implementação do "
"servidor legado.)"

#: ../source/guides/migrating-to-pypi-org.rst:77
msgid "Registering package names & metadata"
msgstr "Registrando nomes pacotes e metadados"

#: ../source/guides/migrating-to-pypi-org.rst:79
msgid ""
"Explicit pre-registration of package names with the ``setup.py register`` "
"command prior to the first upload is no longer required, and is not "
"currently supported by the legacy upload API emulation on PyPI.org."
msgstr ""
"O pré-registro explícito de nomes de pacotes com o comando ``setup.py "
"register`` antes do primeiro envio não é mais necessário e não é mais "
"suportado pela emulação de API de envio legado no PyPI.org."

#: ../source/guides/migrating-to-pypi-org.rst:83
msgid ""
"As a result, attempting explicit registration after switching to using PyPI."
"org for uploads will give the following error message::"
msgstr ""
"Como resultado, a tentativa de registro explícito após alternar para o uso "
"de PyPI.org para envios gerará a seguinte mensagem de erro::"

#: ../source/guides/migrating-to-pypi-org.rst:88
msgid ""
"The solution is to skip the registration step, and proceed directly to "
"uploading artifacts."
msgstr ""
"A solução é pular a etapa de registro e prosseguir diretamente para o envio "
"dos artefatos."

#: ../source/guides/migrating-to-pypi-org.rst:93
#: ../source/guides/using-testpypi.rst:5
msgid "Using TestPyPI"
msgstr "Usando TestPyPI"

#: ../source/guides/migrating-to-pypi-org.rst:95
msgid ""
"Legacy TestPyPI (testpypi.python.org) is no longer available; use `test.pypi."
"org <https://test.pypi.org>`_ instead. If you use TestPyPI, you must update "
"your :file:`$HOME/.pypirc` to handle TestPyPI's new location, by replacing "
"``https://testpypi.python.org/pypi`` with ``https://test.pypi.org/legacy/``, "
"for example:"
msgstr ""
"O TestPyPI legado (testpypi.python.org) não está mais disponível; use `test."
"pypi.org <https://test.pypi.org>`_ em vez disso. Se você usar o TestPyPI, "
"você deve atualizar seu :file:`$HOME/.pypirc` para lidar com o novo local do "
"TestPyPI, substituindo ``https://testpypi.python.org/pypi`` por ``https://"
"test.pypi.org/legacy/``, por exemplo:"

#: ../source/guides/migrating-to-pypi-org.rst:117
msgid "Registering new user accounts"
msgstr "Registrando novas contas de usuário"

#: ../source/guides/migrating-to-pypi-org.rst:119
msgid ""
"In order to help mitigate spam attacks against PyPI, new user registration "
"through ``pypi.python.org`` was *switched off* on **February 20, 2018**. New "
"user registrations at ``pypi.org`` are open."
msgstr ""
"A fim de ajudar a mitigar ataques de spam contra PyPI, o registro de novo "
"usuário por meio de ``pypi.python.org`` foi *desativado* em **20 de "
"fevereiro de 2018**. Novos registros de usuários em ``pypi.org`` estão "
"abertos."

#: ../source/guides/migrating-to-pypi-org.rst:125
msgid "Browsing packages"
msgstr "Navegando pelos pacotes"

#: ../source/guides/migrating-to-pypi-org.rst:127
msgid ""
"While ``pypi.python.org`` is may still be used in links from other PyPA "
"documentation, etc, the default interface for browsing packages is ``pypi."
"org``. The domain pypi.python.org now redirects to pypi.org, and may be "
"disabled sometime in the future."
msgstr ""
"Embora ``pypi.python.org`` ainda possa ser usado em links de outras "
"documentações do PyPA, etc, a interface padrão para navegar pelos pacotes é "
"``pypi.org``. O domínio pypi.python.org agora redireciona para pypi.org e "
"pode ser desativado em algum momento no futuro."

#: ../source/guides/migrating-to-pypi-org.rst:134
msgid "Downloading packages"
msgstr "Baixando pacotes"

#: ../source/guides/migrating-to-pypi-org.rst:136
msgid "``pypi.org`` is the default host for downloading packages."
msgstr "``pypi.org`` é o host padrão para download de pacotes."

#: ../source/guides/migrating-to-pypi-org.rst:139
msgid "Managing published packages and releases"
msgstr "Gerenciando pacotes e lançamentos publicados"

#: ../source/guides/migrating-to-pypi-org.rst:141
msgid ""
"``pypi.org`` provides a fully functional interface for logged in users to "
"manage their published packages and releases."
msgstr ""
"``pypi.org`` fornece uma interface totalmente funcional para usuários "
"autenticados gerenciarem seus pacotes publicados e lançamentos."

#: ../source/guides/modernize-setup-py-project.rst:6
msgid "How to modernize a ``setup.py`` based project?"
msgstr "Como modernizar um projeto baseado em ``setup.py``?"

#: ../source/guides/modernize-setup-py-project.rst:10
msgid "Should ``pyproject.toml`` be added?"
msgstr "``pyproject.toml`` deve ser adicionado?"

#: ../source/guides/modernize-setup-py-project.rst:12
msgid ""
"A :term:`pyproject.toml` file is strongly recommended. The presence of a :"
"file:`pyproject.toml` file itself does not bring much. [#]_ What is actually "
"strongly recommended is the ``[build-system]`` table in :file:`pyproject."
"toml`."
msgstr ""
"Um arquivo :term:`pyproject.toml` é fortemente recomendado. A presença de um "
"arquivo :file:`pyproject.toml` em si não traz muita coisa. [#]_ O que é "
"realmente recomendado é a tabela ``[build-system]`` no :file:`pyproject."
"toml`."

#: ../source/guides/modernize-setup-py-project.rst:16
msgid ""
"Note that it has influence on the build isolation feature of pip, see below."
msgstr ""
"Observe que isso tem influência no recurso de isolamento de construção do "
"pip, veja abaixo."

#: ../source/guides/modernize-setup-py-project.rst:23
msgid ""
"No, :file:`setup.py` can exist in a modern :ref:`setuptools` based project. "
"The :term:`setup.py` file is a valid configuration file for setuptools that "
"happens to be written in Python. However, the following commands are "
"deprecated and **MUST NOT** be run anymore, and their recommended "
"replacement commands should be used instead:"
msgstr ""
"Não, :file:`setup.py` pode existir em um projeto moderno baseado em :ref:"
"`setuptools`. O arquivo :term:`setup.py` é um arquivo de configuração válido "
"para setuptools que foi escrito em Python. No entanto, os seguintes comandos "
"for descontinuados e **NÃO DEVEM** ser mais executados, e seus comandos de "
"substituição recomendados devem ser usados:"

#: ../source/guides/modernize-setup-py-project.rst:36
msgid "``python -m build``"
msgstr "``python -m build``"

#: ../source/guides/modernize-setup-py-project.rst:42
#: ../source/guides/modernize-setup-py-project.rst:66
#: ../source/guides/modernize-setup-py-project.rst:111
#: ../source/guides/modernize-setup-py-project.rst:129
#: ../source/guides/modernize-setup-py-project.rst:221
msgid "For more details:"
msgstr "Para mais detalhes:"

#: ../source/guides/modernize-setup-py-project.rst:44
msgid ":ref:`setup-py-deprecated`"
msgstr ":ref:`setup-py-deprecated`"

#: ../source/guides/modernize-setup-py-project.rst:48
msgid "Where to start?"
msgstr "Onde começar?"

#: ../source/guides/modernize-setup-py-project.rst:50
msgid ""
"The :term:`project` must contain a :file:`pyproject.toml` file at the root "
"of its source tree that contains a ``[build-system]`` table like so:"
msgstr ""
"O :term:`projeto` deve conter um arquivo :file:`pyproject.toml` na raiz de "
"sua árvore de fontes que contém uma tabela ``[build-system]`` como esta:"

#: ../source/guides/modernize-setup-py-project.rst:60
msgid ""
"This is the standardized method of letting :term:`build frontends <Build "
"Frontend>` know that :ref:`setuptools` is the :term:`build backend <Build "
"Backend>` for this project."
msgstr ""
"Este é o método padronizado para permitir que :term:`frontends de construção "
"<Build Frontend>` saibam que :ref:`setuptools` é o :term:`backend de "
"construção <Build Backend>` para este projeto."

#: ../source/guides/modernize-setup-py-project.rst:63
msgid ""
"Note that the presence of a :file:`pyproject.toml` file (even if empty) "
"triggers :ref:`pip` to change its default behavior to use *build isolation*."
msgstr ""
"Observe que a presença de um arquivo :file:`pyproject.toml` (mesmo que "
"vazio) aciona :ref:`pip` para alterar seu comportamento padrão para usar "
"*isolamento de construção*."

#: ../source/guides/modernize-setup-py-project.rst:68
msgid ":ref:`distributing-packages`"
msgstr ":ref:`distributing-packages`"

#: ../source/guides/modernize-setup-py-project.rst:69
#: ../source/guides/modernize-setup-py-project.rst:113
msgid ":ref:`pyproject-build-system-table`"
msgstr ":ref:`pyproject-build-system-table`"

#: ../source/guides/modernize-setup-py-project.rst:70
#: ../source/guides/modernize-setup-py-project.rst:131
#: ../source/guides/modernize-setup-py-project.rst:247
msgid ":doc:`pip:reference/build-system/pyproject-toml`"
msgstr ":doc:`pip:reference/build-system/pyproject-toml`"

#: ../source/guides/modernize-setup-py-project.rst:74
msgid "How to handle additional build-time dependencies?"
msgstr "Como lidar com dependências de tempo de construção adicionais?"

#: ../source/guides/modernize-setup-py-project.rst:76
msgid ""
"On top of setuptools itself, if :file:`setup.py` depends on other third-"
"party libraries (outside of Python's standard library), those must be listed "
"in the ``requires`` list of the ``[build-system]`` table, so that the build "
"frontend knows to install them when building the :term:`distributions "
"<Distribution Package>`."
msgstr ""
"Além do próprio setuptools, se :file:`setup.py` depende de outras "
"bibliotecas de terceiros (fora da biblioteca padrão do Python), elas devem "
"ser listadas na lista ``requires`` do ``[build-system ]`` tabela, para que o "
"frontend de construção saiba instalá-los ao construir as :term:"
"`distribuições <Pacote de Distribuição>`."

#: ../source/guides/modernize-setup-py-project.rst:82
#: ../source/guides/modernize-setup-py-project.rst:139
#: ../source/guides/modernize-setup-py-project.rst:174
msgid "For example, a :file:`setup.py` file such as this:"
msgstr "Por exemplo, um arquivo :file:`setup.py` como este:"

#: ../source/guides/modernize-setup-py-project.rst:99
msgid ""
"requires a :file:`pyproject.toml` file like this (:file:`setup.py` stays "
"unchanged):"
msgstr ""
"requer um arquivo :file:`pyproject.toml` como este (:file:`setup.py` "
"permanece inalterado):"

#: ../source/guides/modernize-setup-py-project.rst:117
msgid "What is the build isolation feature?"
msgstr "Qual é o recurso de isolamento de compilação?"

#: ../source/guides/modernize-setup-py-project.rst:119
msgid ""
"Build frontends typically create an ephemeral virtual environment where they "
"install only the build dependencies (and their dependencies) that are listed "
"under ``build-system.requires`` and trigger the build in that environment."
msgstr ""
"Frontends de construção normalmente criam um ambiente virtual efêmero onde "
"instalam apenas as dependências de construção (e suas dependências) listadas "
"em ``build-system.requires`` e acionam a construção nesse ambiente."

#: ../source/guides/modernize-setup-py-project.rst:124
msgid ""
"For some projects this isolation is unwanted and it can be deactivated as "
"follows:"
msgstr ""
"Para alguns projetos este isolamento é indesejado e pode ser desativado da "
"seguinte forma:"

#: ../source/guides/modernize-setup-py-project.rst:126
msgid "``python -m build --no-isolation``"
msgstr "``python -m build --no-isolation``"

#: ../source/guides/modernize-setup-py-project.rst:127
msgid "``python -m pip install --no-build-isolation``"
msgstr "``python -m pip install --no-build-isolation``"

#: ../source/guides/modernize-setup-py-project.rst:135
msgid "How to handle packaging metadata?"
msgstr "Como lidar com metadados de empacotamento?"

#: ../source/guides/modernize-setup-py-project.rst:137
msgid ""
"All static metadata can optionally be moved to a ``[project]`` table in :"
"file:`pyproject.toml`."
msgstr ""
"Todos os metadados estáticos podem opcionalmente ser movidos para uma tabela "
"``[project]`` em :file:`pyproject.toml`."

#: ../source/guides/modernize-setup-py-project.rst:151
msgid "can be entirely replaced by a :file:`pyproject.toml` file like this:"
msgstr ""
"pode ser totalmente substituído por um arquivo :file:`pyproject.toml` como "
"este:"

#: ../source/guides/modernize-setup-py-project.rst:164
msgid ""
"Read :ref:`pyproject-project-table` for the full specification of the "
"content allowed in the ``[project]`` table."
msgstr ""
"Leia :ref:`pyproject-project-table` para a especificação completa do "
"conteúdo permitido na tabela ``[project]``."

#: ../source/guides/modernize-setup-py-project.rst:169
msgid "How to handle dynamic metadata?"
msgstr "Como lidar com metadados dinâmicos?"

#: ../source/guides/modernize-setup-py-project.rst:171
msgid ""
"If some packaging metadata fields are not static they need to be listed as "
"``dynamic`` in this ``[project]`` table."
msgstr ""
"Se alguns campos de metadados de empacotamento não forem estáticos, eles "
"precisam ser listados como ``dynamic`` nesta tabela ``[project]``."

#: ../source/guides/modernize-setup-py-project.rst:191
msgid "can be modernized as follows:"
msgstr "pode ser modernizado desta forma:"

#: ../source/guides/modernize-setup-py-project.rst:223
msgid ":ref:`declaring-project-metadata-dynamic`"
msgstr ":ref:`declaring-project-metadata-dynamic`"

#: ../source/guides/modernize-setup-py-project.rst:227
msgid "What if something that can not be changed expects a ``setup.py`` file?"
msgstr ""
"E se alguma coisa que não possa ser alterar esperar um arquivo ``setup.py``?"

#: ../source/guides/modernize-setup-py-project.rst:229
msgid ""
"For example, a process exists that can not be changed easily and it needs to "
"execute a command such as ``python setup.py --name``."
msgstr ""
"Por exemplo, existe um processo que não pode ser alterado facilmente e "
"precisa executar um comando como ``python setup.py --name``."

#: ../source/guides/modernize-setup-py-project.rst:232
msgid ""
"It is perfectly fine to leave a :file:`setup.py` file in the project source "
"tree even after all its content has been moved to :file:`pyproject.toml`. "
"This file can be as minimalistic as this:"
msgstr ""
"É perfeitamente normal deixar um arquivo :file:`setup.py` na árvore de "
"fontes do projeto mesmo depois de todo o seu conteúdo ter sido movido para :"
"file:`pyproject.toml`. Este arquivo pode ser tão minimalista quanto este:"

#: ../source/guides/modernize-setup-py-project.rst:246
msgid ":ref:`pyproject-toml-spec`"
msgstr ":ref:`pyproject-toml-spec`"

#: ../source/guides/modernize-setup-py-project.rst:248
msgid ":doc:`setuptools:build_meta`"
msgstr ":doc:`setuptools:build_meta`"

#: ../source/guides/multi-version-installs.rst:6
msgid "Multi-version installs"
msgstr "Instalações de várias versões"

#: ../source/guides/multi-version-installs.rst:11
msgid ""
"easy_install allows simultaneous installation of different versions of the "
"same project into a single environment shared by multiple programs which "
"must ``require`` the appropriate version of the project at run time (using "
"``pkg_resources``)."
msgstr ""
"easy_install permite a instalação simultânea de diferentes versões do mesmo "
"projeto em um único ambiente compartilhado por vários programas que devem "
"exigir (``require``) a versão apropriada do projeto em tempo de execução "
"(usando ``pkg_resources``)."

#: ../source/guides/multi-version-installs.rst:16
msgid ""
"For many use cases, virtual environments address this need without the "
"complication of the ``require`` directive. However, the advantage of "
"parallel installations within the same environment is that it works for an "
"environment shared by multiple applications, such as the system Python in a "
"Linux distribution."
msgstr ""
"Para muitos casos de uso, ambientes virtuais atendem a essa necessidade sem "
"a complicação da diretiva ``require``. No entanto, a vantagem de instalações "
"paralelas dentro do mesmo ambiente é que funciona para um ambiente "
"compartilhado por várias aplicações, como o sistema Python em uma "
"distribuição Linux."

#: ../source/guides/multi-version-installs.rst:22
msgid ""
"The major limitation of ``pkg_resources`` based parallel installation is "
"that as soon as you import ``pkg_resources`` it locks in the *default* "
"version of everything which is already available on sys.path. This can cause "
"problems, since ``setuptools`` created command line scripts use "
"``pkg_resources`` to find the entry point to execute. This means that, for "
"example, you can't use ``require`` tests invoked through ``nose`` or a WSGI "
"application invoked through ``gunicorn`` if your application needs a non-"
"default version of anything that is available on the standard ``sys.path`` - "
"the script wrapper for the main application will lock in the version that is "
"available by default, so the subsequent ``require`` call in your own code "
"fails with a spurious version conflict."
msgstr ""
"A principal limitação da instalação paralela baseada em ``pkg_resources`` é "
"que assim que você importa ``pkg_resources`` ele bloqueia a versão *padrão* "
"de tudo que já está disponível em sys.path. Isso pode causar problemas, já "
"que ``setuptools`` scripts de linha de comando criados usam "
"``pkg_resources`` para encontrar o ponto de entrada a ser executado. Isso "
"significa que, por exemplo, você não pode usar testes de ``require`` "
"invocados através do ``nose`` ou uma aplicação WSGI invocada através do "
"``gunicorn`` se sua aplicação precisa de uma versão não padrão de qualquer "
"coisa que está disponível no ``sys.path`` padrão -- o script wrapper para a "
"aplicação principal travará na versão que está disponível por padrão, então "
"a chamada subsequente de ``require`` em seu próprio código falhará com um "
"conflito de versão espúrio."

#: ../source/guides/multi-version-installs.rst:34
msgid ""
"This can be worked around by setting all dependencies in ``__main__."
"__requires__`` before importing ``pkg_resources`` for the first time, but "
"that approach does mean that standard command line invocations of the "
"affected tools can't be used - it's necessary to write a custom wrapper "
"script or use ``python3 -c '<command>'`` to invoke the application's main "
"entry point directly."
msgstr ""
"Isso pode ser contornado definindo todas as dependências em ``__main__.__ "
"require__`` antes de importar ``pkg_resources`` pela primeira vez, mas essa "
"abordagem significa que as invocações de linha de comando padrão das "
"ferramentas afetadas não podem ser usadas -- é necessário escrever um script "
"wrapper personalizado ou usar ``python3 -c '<comando>'`` para invocar o "
"ponto de entrada principal da aplicação diretamente."

#: ../source/guides/multi-version-installs.rst:41
msgid ""
"Refer to the `pkg_resources documentation <https://setuptools.readthedocs.io/"
"en/latest/pkg_resources.html#workingset-objects>`__ for more details."
msgstr ""
"Confira a `documentação de pkg_resources <https://setuptools.readthedocs.io/"
"en/latest/pkg_resources.html#workingset-objects>`__ para mais detalhes."

#: ../source/guides/packaging-binary-extensions.rst:5
msgid "Packaging binary extensions"
msgstr "Empacotando extensões binárias"

#: ../source/guides/packaging-binary-extensions.rst:8
msgid "2013-12-08"
msgstr "2013-12-08"

#: ../source/guides/packaging-binary-extensions.rst:10
msgid ""
"One of the features of the CPython reference interpreter is that, in "
"addition to allowing the execution of Python code, it also exposes a rich C "
"API for use by other software. One of the most common uses of this C API is "
"to create importable C extensions that allow things which aren't always easy "
"to achieve in pure Python code."
msgstr ""
"Uma das características do interpretador de referência CPython é que, além "
"de permitir a execução do código Python, também expõe uma API C rica para "
"uso por outro software. Um dos usos mais comuns dessa API C é criar "
"extensões C importáveis que permitem coisas que nem sempre são fáceis de "
"alcançar em código puro Python."

#: ../source/guides/packaging-binary-extensions.rst:18
msgid "An overview of binary extensions"
msgstr "Uma visão geral de extensões binárias"

#: ../source/guides/packaging-binary-extensions.rst:21
msgid "Use cases"
msgstr "Casos de uso"

#: ../source/guides/packaging-binary-extensions.rst:23
msgid ""
"The typical use cases for binary extensions break down into just three "
"conventional categories:"
msgstr ""
"Os casos de uso típicos para extensões binárias se dividem em apenas três "
"categorias convencionais:"

#: ../source/guides/packaging-binary-extensions.rst:26
msgid ""
"**accelerator modules**: these modules are completely self-contained, and "
"are created solely to run faster than the equivalent pure Python code runs "
"in CPython. Ideally, accelerator modules will always have a pure Python "
"equivalent to use as a fallback if the accelerated version isn't available "
"on a given system. The CPython standard library makes extensive use of "
"accelerator modules. *Example*: When importing ``datetime``, Python falls "
"back to the `datetime.py <https://github.com/python/cpython/blob/main/Lib/"
"datetime.py>`_ module if the C implementation ( `_datetimemodule.c <https://"
"github.com/python/cpython/blob/main/Modules/_datetimemodule.c>`_) is not "
"available."
msgstr ""
"**Módulos aceleradores**: esses módulos são completamente autocontidos e são "
"criados exclusivamente para executar mais rápido do que o código puro Python "
"equivalente é executado em CPython. Idealmente, os módulos aceleradores "
"sempre terão um Python equivalente puro para usar como fallback se a versão "
"acelerada não estiver disponível em um determinado sistema. A biblioteca "
"padrão do CPython faz uso extensivo de módulos aceleradores. *Exemplo*: Ao "
"importar ``datetime``, Python recorre ao módulo `datetime.py <https://github."
"com/python/cpython/blob/main/Lib/datetime.py>`_ se a implementação C "
"( `_datetimemodule.c <https://github.com/python/cpython/blob/main/Modules/"
"_datetimemodule.c>`_) não estiver disponível."

#: ../source/guides/packaging-binary-extensions.rst:37
msgid ""
"**wrapper modules**: these modules are created to expose existing C "
"interfaces to Python code. They may either expose the underlying C interface "
"directly, or else expose a more \"Pythonic\" API that makes use of Python "
"language features to make the API easier to use. The CPython standard "
"library makes extensive use of wrapper modules. *Example*: `functools.py "
"<https://github.com/python/cpython/blob/main/Lib/functools.py>`_ is a Python "
"module wrapper for `_functoolsmodule.c <https://github.com/python/cpython/"
"blob/main/Modules/_functoolsmodule.c>`_."
msgstr ""
"**módulos wrapper**: esses módulos são criados para expor as interfaces C "
"existentes ao código Python. Eles podem expor a interface C subjacente "
"diretamente ou então expor uma API mais \"Pythônica\" que faz uso dos "
"recursos da linguagem Python para tornar a API mais fácil de usar. A "
"biblioteca padrão do CPython faz uso extensivo de módulos wrapper. "
"*Exemplo*: `functools.py <https://github.com/python/cpython/blob/main/Lib/"
"functools.py>`_ é um módulo Python wrapper para `_functoolsmodule.c <https://"
"github.com/python/cpython/blob/main/Modules/_functoolsmodule.c>`_."

#: ../source/guides/packaging-binary-extensions.rst:45
msgid ""
"**low-level system access**: these modules are created to access lower level "
"features of the CPython runtime, the operating system, or the underlying "
"hardware. Through platform specific code, extension modules may achieve "
"things that aren't possible in pure Python code. A number of CPython "
"standard library modules are written in C in order to access interpreter "
"internals that aren't exposed at the language level. *Example*: ``sys``, "
"which comes from `sysmodule.c <https://github.com/python/cpython/blob/main/"
"Python/sysmodule.c>`_."
msgstr ""
"**acesso de baixo nível ao sistema**: esses módulos são criados para acessar "
"os recursos de baixo nível do tempo de execução do CPython, do sistema "
"operacional ou do hardware subjacente. Por meio do código específico da "
"plataforma, os módulos de extensão podem alcançar coisas que não são "
"possíveis no código puro Python. Vários módulos de biblioteca padrão do "
"CPython são escritos em C para acessar as partes internas do interpretador "
"que não são expostas no nível da linguagem. *Exemplo*: ``sys``, que vem de "
"`sysmodule.c <https://github.com/python/cpython/blob/main/Python/sysmodule."
"c>`_."

#: ../source/guides/packaging-binary-extensions.rst:54
msgid ""
"One particularly notable feature of C extensions is that, when they don't "
"need to call back into the interpreter runtime, they can release CPython's "
"global interpreter lock around long-running operations (regardless of "
"whether those operations are CPU or IO bound)."
msgstr ""
"Um recurso particularmente notável das extensões C é que, quando não "
"precisam chamar de volta para o tempo de execução do interpretador, podem "
"liberar o bloqueio do interpretador global do CPython em torno de operações "
"de longa duração (independentemente de essas operações serem vinculados à "
"CPU ou à E/S)."

#: ../source/guides/packaging-binary-extensions.rst:59
msgid ""
"Not all extension modules will fit neatly into the above categories. The "
"extension modules included with NumPy, for example, span all three use cases "
"- they move inner loops to C for speed reasons, wrap external libraries "
"written in C, FORTRAN and other languages, and use low level system "
"interfaces for both CPython and the underlying operation system to support "
"concurrent execution of vectorised operations and to tightly control the "
"exact memory layout of created objects."
msgstr ""
"Nem todos os módulos de extensão se encaixam perfeitamente nas categorias "
"acima. Os módulos de extensão incluídos com NumPy, por exemplo, abrangem "
"todos os três casos de uso -- eles movem loops internos para C por motivos "
"de velocidade, agrupam bibliotecas externas escritas em C, FORTRAN e outras "
"linguagens e usam interfaces de sistema de baixo nível para CPython e o "
"sistema operacional subjacente para oferecer suporte à execução simultânea "
"de operações vetorizadas e para controlar rigidamente o layout de memória "
"exato dos objetos criados."

#: ../source/guides/packaging-binary-extensions.rst:69
msgid "Disadvantages"
msgstr "Desvantagens"

#: ../source/guides/packaging-binary-extensions.rst:71
msgid ""
"The main disadvantage of using binary extensions is the fact that it makes "
"subsequent distribution of the software more difficult. One of the "
"advantages of using Python is that it is largely cross platform, and the "
"languages used to write extension modules (typically C or C++, but really "
"any language that can bind to the CPython C API) typically require that "
"custom binaries be created for different platforms."
msgstr ""
"A principal desvantagem de usar extensões binárias é o fato de tornar a "
"distribuição subsequente do software mais difícil. Uma das vantagens de usar "
"o Python é que ele é amplamente multiplataforma, e as linguagens usadas para "
"escrever módulos de extensão (normalmente C ou C++, mas na verdade qualquer "
"linguagem que possa se ligar à API C do CPython) normalmente exigem que "
"binários personalizados podem ser criados para plataformas diferentes."

#: ../source/guides/packaging-binary-extensions.rst:78
msgid "This means that binary extensions:"
msgstr "Isso significa que extensões binárias:"

#: ../source/guides/packaging-binary-extensions.rst:80
msgid ""
"require that end users be able to either build them from source, or else "
"that someone publish pre-built binaries for common platforms"
msgstr ""
"exigem que os usuários finais sejam capazes de criá-las a partir do código-"
"fonte, ou então que alguém publique binários pré-construídos para "
"plataformas comuns"

#: ../source/guides/packaging-binary-extensions.rst:83
msgid ""
"may not be compatible with different builds of the CPython reference "
"interpreter"
msgstr ""
"pode não ser compatível com diferentes compilações do interpretador de "
"referência do CPython"

#: ../source/guides/packaging-binary-extensions.rst:86
msgid ""
"often will not work correctly with alternative interpreters such as PyPy, "
"IronPython or Jython"
msgstr ""
"frequentemente não funciona corretamente com interpretadores alternativos "
"como PyPy, Iron Python ou Jython"

#: ../source/guides/packaging-binary-extensions.rst:89
msgid ""
"if handcoded, make maintenance more difficult by requiring that maintainers "
"be familiar not only with Python, but also with the language used to create "
"the binary extension, as well as with the details of the CPython C API."
msgstr ""
"se codificado manualmente, torna a manutenção mais difícil, exigindo que os "
"mantenedores estejam familiarizados não apenas com Python, mas também com a "
"linguagem usada para criar a extensão binária, bem como com os detalhes da "
"API C do CPython."

#: ../source/guides/packaging-binary-extensions.rst:94
msgid ""
"if a pure Python fallback implementation is provided, make maintenance more "
"difficult by requiring that changes be implemented in two places, and "
"introducing additional complexity in the test suite to ensure both versions "
"are always executed."
msgstr ""
"se uma implementação de fallback de puro Python for fornecida, torna a "
"manutenção mais difícil, exigindo que as alterações sejam implementadas em "
"dois lugares, e introduzindo complexidade adicional no conjunto de testes "
"para garantir que ambas as versões sejam sempre executadas."

#: ../source/guides/packaging-binary-extensions.rst:99
msgid ""
"Another disadvantage of relying on binary extensions is that alternative "
"import mechanisms (such as the ability to import modules directly from "
"zipfiles) often won't work for extension modules (as the dynamic loading "
"mechanisms on most platforms can only load libraries from disk)."
msgstr ""
"Outra desvantagem de depender de extensões binárias é que mecanismos de "
"importação alternativos (como a capacidade de importar módulos diretamente "
"de arquivos zip) geralmente não funcionam para módulos de extensão (já que "
"os mecanismos de carregamento dinâmico na maioria das plataformas só podem "
"carregar bibliotecas do disco)."

#: ../source/guides/packaging-binary-extensions.rst:106
msgid "Alternatives to handcoded accelerator modules"
msgstr "Alternativas para módulos aceleradores codificados manualmente"

#: ../source/guides/packaging-binary-extensions.rst:108
msgid ""
"When extension modules are just being used to make code run faster (after "
"profiling has identified the code where the speed increase is worth "
"additional maintenance effort), a number of other alternatives should also "
"be considered:"
msgstr ""
"Quando os módulos de extensão estão apenas sendo usados para tornar o código "
"executado mais rápido (após a criação de perfil ter identificado o código "
"onde o aumento de velocidade vale um esforço de manutenção adicional), uma "
"série de outras alternativas também devem ser consideradas:"

#: ../source/guides/packaging-binary-extensions.rst:113
msgid ""
"look for existing optimised alternatives. The CPython standard library "
"includes a number of optimised data structures and algorithms (especially in "
"the builtins and the ``collections`` and ``itertools`` modules). The Python "
"Package Index also offers additional alternatives. Sometimes, the "
"appropriate choice of standard library or third party module can avoid the "
"need to create your own accelerator module."
msgstr ""
"procure alternativas otimizadas existentes. A biblioteca padrão do CPython "
"inclui uma série de estruturas de dados e algoritmos otimizados "
"(especialmente nos módulos embutidos e ``collections`` e ``itertools``). O "
"índice de Pacotes do Python também oferece alternativas adicionais. Às "
"vezes, a escolha apropriada de biblioteca padrão ou módulo de terceiros pode "
"evitar a necessidade de criar seu próprio módulo acelerador."

#: ../source/guides/packaging-binary-extensions.rst:120
msgid ""
"for long running applications, the JIT compiled `PyPy interpreter <https://"
"www.pypy.org/>`__ may offer a suitable alternative to the standard CPython "
"runtime. The main barrier to adopting PyPy is typically reliance on other "
"binary extension modules - while PyPy does emulate the CPython C API, "
"modules that rely on that cause problems for the PyPy JIT, and the emulation "
"layer can often expose latent defects in extension modules that CPython "
"currently tolerates (frequently around reference counting errors - an object "
"having one live reference instead of two often won't break anything, but no "
"references instead of one is a major problem)."
msgstr ""
"para aplicações de longa execução, o `interpretador PyPy <https://www.pypy."
"org/>`__ compilado por JIT pode oferecer uma alternativa adequada ao tempo "
"de execução padrão do CPython. A principal barreira para a adoção do PyPy é "
"normalmente a dependência de outros módulos de extensão binários -- enquanto "
"o PyPy emula a API C do CPython, os módulos que dependem disso causam "
"problemas para o PyPy de JIT e a camada de emulação pode frequentemente "
"expor defeitos latentes na extensão módulos que o CPython atualmente tolera "
"(frequentemente em torno de erros de contagem de referências -- um objeto "
"com uma referência ativa em vez de duas geralmente não quebrará nada, mas "
"nenhuma referência em vez de uma é um grande problema)."

#: ../source/guides/packaging-binary-extensions.rst:130
msgid ""
"`Cython <https://cython.org/>`__ is a mature static compiler that can "
"compile most Python code to C extension modules. The initial compilation "
"provides some speed increases (by bypassing the CPython interpreter layer), "
"and Cython's optional static typing features can offer additional "
"opportunities for speed increases. Using Cython still carries the "
"`disadvantages`_ associated with using binary extensions, but has the "
"benefit of having a reduced barrier to entry for Python programmers "
"(relative to other languages like C or C++)."
msgstr ""
"`Cython <https://cython.org/>`__ é um compilador estático maduro que pode "
"compilar a maioria dos códigos Python para módulos de extensão C. A "
"compilação inicial fornece alguns aumentos de velocidade (contornando a "
"camada de interpretador do CPython) e os recursos opcionais de tipagem "
"estática do Cython podem oferecer oportunidades adicionais para aumentos de "
"velocidade. O uso do Cython ainda carrega as `desvantagens`_ associadas ao "
"uso de extensões binárias, mas tem o benefício de ter uma barreira de "
"entrada reduzida para programadores Python (em relação a outras linguagens "
"como C ou C++)."

#: ../source/guides/packaging-binary-extensions.rst:139
msgid ""
"`Numba <http://numba.pydata.org/>`__ is a newer tool, created by members of "
"the scientific Python community, that aims to leverage LLVM to allow "
"selective compilation of pieces of a Python application to native machine "
"code at runtime. It requires that LLVM be available on the system where the "
"code is running, but can provide significant speed increases, especially for "
"operations that are amenable to vectorisation."
msgstr ""
"`Numba <http://numba.pydata.org/>`__ é uma ferramenta mais recente, criada "
"por membros da comunidade científica do Python, que visa alavancar o LLVM "
"para permitir a compilação seletiva de partes de uma aplicação Python para "
"código de máquina nativo em tempo de execução. Requer que o LLVM esteja "
"disponível no sistema onde o código está sendo executado, mas pode fornecer "
"aumentos de velocidade significativos, especialmente para operações que são "
"passíveis de vetorização."

#: ../source/guides/packaging-binary-extensions.rst:148
msgid "Alternatives to handcoded wrapper modules"
msgstr "Alternativas para módulos wrapper codificados manualmente"

#: ../source/guides/packaging-binary-extensions.rst:150
msgid ""
"The C ABI (Application Binary Interface) is a common standard for sharing "
"functionality between multiple applications. One of the strengths of the "
"CPython C API (Application Programming Interface) is allowing Python users "
"to tap into that functionality. However, wrapping modules by hand is quite "
"tedious, so a number of other alternative approaches should be considered."
msgstr ""
"A ABI C (Interface Binária de Aplicação) é um padrão comum para "
"compartilhamento de funcionalidade entre várias aplicações. Um dos pontos "
"fortes da API C do CPython (Interface de Programação de Aplicação) é "
"permitir que os usuários do Python aproveitem essa funcionalidade. No "
"entanto, empacotar módulos manualmente é muito tedioso, portanto, várias "
"outras abordagens alternativas devem ser consideradas."

#: ../source/guides/packaging-binary-extensions.rst:156
msgid ""
"The approaches described below don't simplify the distribution case at all, "
"but they *can* significantly reduce the maintenance burden of keeping "
"wrapper modules up to date."
msgstr ""
"As abordagens descritas abaixo não simplificam o caso de distribuição, mas "
"*podem* reduzir significativamente a carga de manutenção de manter os "
"módulos wrapper atualizados."

#: ../source/guides/packaging-binary-extensions.rst:160
msgid ""
"In addition to being useful for the creation of accelerator modules, `Cython "
"<https://cython.org/>`__ is also widely used for creating wrapper modules "
"for C or C++ APIs. It involves wrapping the interfaces by hand, which gives "
"a wide range of freedom in designing and optimising the wrapper code, but "
"may not be a good choice for wrapping very large APIs quickly. See the `list "
"of third-party tools <https://github.com/cython/cython/wiki/AutoPxd>`_ for "
"automatic wrapping with Cython. It also supports performance-oriented Python "
"implementations that provide a CPython-like C-API, such as PyPy and Pyston."
msgstr ""
"Além de ser útil para a criação de módulos aceleradores, o `Cython <https://"
"cython.org/>`__ também é amplamente utilizado para criar módulos wrapper "
"para APIs C ou C++. Envolve o encapsulamento manual das interfaces, o que "
"oferece uma ampla gama de liberdade no design e otimização do código do "
"encapsulamento, mas pode não ser uma boa opção para encapsular APIs muito "
"grandes rapidamente. Veja a `lista de ferramentas de terceiros <https://"
"github.com/cython/cython/wiki/AutoPxd>`_ para encapsulamento automático com "
"Cython. Ele também oferece suporte a implementações Python orientadas para o "
"desempenho que fornecem uma API C semelhante a CPython, como PyPy e Pyston."

#: ../source/guides/packaging-binary-extensions.rst:171
msgid ""
":doc:`pybind11 <pybind11:index>` is a pure C++11 library that provides a "
"clean C++ interface to the CPython (and PyPy) C API. It does not require a "
"pre-processing step; it is written entirely in templated C++. Helpers are "
"included for Setuptools or CMake builds. It was based on `Boost.Python "
"<https://www.boost.org/doc/libs/1_76_0/libs/python/doc/html/index.html>`__, "
"but doesn't require the Boost libraries or BJam."
msgstr ""
":doc:`pybind11 <pybind11:index>` é uma biblioteca C++11 pura que fornece uma "
"interface C++ limpa para a API C do CPython (e PyPy). Não requer uma etapa "
"de pré-processamento; ele é escrito inteiramente em C++ modelado. Auxiliares "
"são incluídos para construções de Setuptools ou CMake. Foi baseado em `Boost."
"Python <https://www.boost.org/doc/libs/1_76_0/libs/python/doc/html/index."
"html>`__, mas não requer as bibliotecas Boost ou BJam."

#: ../source/guides/packaging-binary-extensions.rst:178
msgid ""
":doc:`cffi <cffi:index>` is a project created by some of the PyPy developers "
"to make it straightforward for developers that already know both Python and "
"C to expose their C modules to Python applications. It also makes it "
"relatively straightforward to wrap a C module based on its header files, "
"even if you don't know C yourself."
msgstr ""
":doc:`cffi <cffi:index>` é um projeto criado por alguns dos desenvolvedores "
"PyPy para torná-lo simples para desenvolvedores que já conhecem Python e C "
"expor seus módulos C a aplicações Python. Também torna relativamente simples "
"fazer um wrapper de um módulo C com base em seus arquivos de cabeçalho, "
"mesmo que você não conheça C."

#: ../source/guides/packaging-binary-extensions.rst:184
msgid ""
"One of the key advantages of ``cffi`` is that it is compatible with the PyPy "
"JIT, allowing CFFI wrapper modules to participate fully in PyPy's tracing "
"JIT optimisations."
msgstr ""
"Uma das principais vantagens do ``cffi`` é que ele é compatível com o PyPy "
"de JIT, permitindo que os módulos wrapper de CFFI participem totalmente das "
"otimizações JIT de rastreamento do PyPy."

#: ../source/guides/packaging-binary-extensions.rst:188
msgid ""
"`SWIG <http://www.swig.org/>`__ is a wrapper interface generator that allows "
"a variety of programming languages, including Python, to interface with C "
"and C++ code."
msgstr ""
"`SWIG <http://www.swig.org/>`__ é um wrapper gerador de interface que "
"permite uma variedade de linguagens de programação, incluindo Python, para "
"fazer interface com código C e C++."

#: ../source/guides/packaging-binary-extensions.rst:192
msgid ""
"The standard library's ``ctypes`` module, while useful for getting access to "
"C level interfaces when header information isn't available, suffers from the "
"fact that it operates solely at the C ABI level, and thus has no automatic "
"consistency checking between the interface actually being exported by the "
"library and the one declared in the Python code. By contrast, the above "
"alternatives are all able to operate at the C *API* level, using C header "
"files to ensure consistency between the interface exported by the library "
"being wrapped and the one expected by the Python wrapper module. While "
"``cffi`` *can* operate directly at the C ABI level, it suffers from the same "
"interface inconsistency problems as ``ctypes`` when it is used that way."
msgstr ""
"O módulo ``ctypes`` da biblioteca padrão, embora útil para obter acesso a "
"interfaces de nível C quando as informações do cabeçalho não estão "
"disponíveis, sofre do fato de operar exclusivamente no nível ABI do C e, "
"portanto, não tem verificação automática de consistência entre os interface "
"realmente sendo exportada pela biblioteca e aquela declarada no código "
"Python. Em contraste, as alternativas acima são todas capazes de operar no "
"nível *API* do C, usando arquivos de cabeçalho C para garantir consistência "
"entre a interface exportada pela biblioteca sendo empacotada e aquela "
"esperada pelo módulo empacotador Python. Enquanto ``cffi`` *pode* operar "
"diretamente no nível ABI do C, ele sofre dos mesmos problemas de "
"inconsistência de interface que ``ctypes`` quando é usado dessa forma."

#: ../source/guides/packaging-binary-extensions.rst:206
msgid "Alternatives for low level system access"
msgstr "Alternativas para acesso de baixo nível ao sistema"

#: ../source/guides/packaging-binary-extensions.rst:208
msgid ""
"For applications that need low level system access (regardless of the "
"reason), a binary extension module often *is* the best way to go about it. "
"This is particularly true for low level access to the CPython runtime "
"itself, since some operations (like releasing the Global Interpreter Lock) "
"are simply invalid when the interpreter is running code, even if a module "
"like ``ctypes`` or ``cffi`` is used to obtain access to the relevant C API "
"interfaces."
msgstr ""
"Para aplicações que precisam de acesso de baixo nível ao sistema "
"(independentemente do motivo), um módulo de extensão binária geralmente *é* "
"a melhor maneira de fazer isso. Isso é particularmente verdadeiro para o "
"acesso de baixo nível ao próprio tempo de execução do CPython, uma vez que "
"algumas operações (como liberar o Bloqueio Global do Interpretador) são "
"simplesmente inválidas quando o interpretador está executando o código, "
"mesmo se um módulo como ``ctypes`` ou ``cffi`` é usado para obter acesso às "
"interfaces API C relevantes."

#: ../source/guides/packaging-binary-extensions.rst:216
msgid ""
"For cases where the extension module is manipulating the underlying "
"operating system or hardware (rather than the CPython runtime), it may "
"sometimes be better to just write an ordinary C library (or a library in "
"another systems programming language like C++ or Rust that can export a C "
"compatible ABI), and then use one of the wrapping techniques described above "
"to make the interface available as an importable Python module."
msgstr ""
"Para casos em que o módulo de extensão está manipulando o sistema "
"operacional ou hardware subjacente (em vez do tempo de execução do CPython), "
"às vezes pode ser melhor apenas escrever uma biblioteca C comum (ou uma "
"biblioteca em outra linguagem de programação de sistemas como C++ ou Rust "
"que pode exportar uma ABI compatível com C) e, em seguida, usar uma das "
"técnicas de agrupamento descritas acima para tornar a interface disponível "
"como um módulo Python importável."

#: ../source/guides/packaging-binary-extensions.rst:225
msgid "Implementing binary extensions"
msgstr "Implementando extensões binárias"

#: ../source/guides/packaging-binary-extensions.rst:227
msgid ""
"The CPython :doc:`Extending and Embedding <python:extending/index>` guide "
"includes an introduction to writing a :doc:`custom extension module in C "
"<python:extending/extending>`."
msgstr ""
"O guia :doc:`Estendendo e Incorporando <python:extending/index>` do CPython "
"inclui uma introdução a escrever um :doc:`módulo de extensão personalizado "
"no C <python:extending/extending>`."

#: ../source/guides/packaging-binary-extensions.rst:231
msgid ""
"FIXME: Elaborate that all this is one of the reasons why you probably "
"*don't* want to handcode your extension modules :)"
msgstr ""
"CORRIGIR: Elaborar que tudo isso é uma das razões pelas quais você "
"provavelmente *não* deseja codificar manualmente seus módulos de extensão :)"

#: ../source/guides/packaging-binary-extensions.rst:236
msgid "Extension module lifecycle"
msgstr "Ciclo de vida dos módulos de extensão"

#: ../source/guides/packaging-binary-extensions.rst:238
#: ../source/guides/packaging-binary-extensions.rst:244
#: ../source/guides/packaging-binary-extensions.rst:250
#: ../source/guides/packaging-binary-extensions.rst:256
#: ../source/guides/packaging-binary-extensions.rst:376
msgid "FIXME: This section needs to be fleshed out."
msgstr "CORRIGIR: Esta seção precisa ser mais detalhada."

#: ../source/guides/packaging-binary-extensions.rst:242
msgid "Implications of shared static state and subinterpreters"
msgstr "Implicações do estado estático compartilhado e subinterpretadores"

#: ../source/guides/packaging-binary-extensions.rst:248
msgid "Implications of the GIL"
msgstr "Implicações do GIL"

#: ../source/guides/packaging-binary-extensions.rst:254
msgid "Memory allocation APIs"
msgstr "APIs de alocação de memória"

#: ../source/guides/packaging-binary-extensions.rst:262
msgid "ABI Compatibility"
msgstr "Compatibilidade da ABI"

#: ../source/guides/packaging-binary-extensions.rst:264
msgid ""
"The CPython C API does not guarantee ABI stability between minor releases "
"(3.2, 3.3, 3.4, etc.). This means that, typically, if you build an extension "
"module against one version of Python, it is only guaranteed to work with the "
"same minor version of Python and not with any other minor versions."
msgstr ""
"A API C do CPython não garante a estabilidade da ABI entre versões "
"secundárias (3.2, 3.3, 3.4, etc.). Isso significa que, normalmente, se você "
"construir um módulo de extensão em uma versão do Python, é garantido que ele "
"funcionará apenas com a mesma versão secundária do Python e não com "
"quaisquer outras versões secundárias."

#: ../source/guides/packaging-binary-extensions.rst:270
msgid ""
"Python 3.2 introduced the Limited API, with is a well-defined subset of "
"Python's C API. The symbols needed for the Limited API form the \"Stable "
"ABI\" which is guaranteed to be compatible across all Python 3.x versions. "
"Wheels containing extensions built against the stable ABI use the ``abi3`` "
"ABI tag, to reflect that they're compatible with all Python 3.x versions."
msgstr ""
"Python 3.2 introduziu a API Limitada (\"Limited API\"), que é um subconjunto "
"bem definido da API C do Python. Os símbolos necessários para a API Limitada "
"formam a \"ABI estável\", que é garantidamente compatível com todas as "
"versões do Python 3.x. Wheels contendo extensões construídas na ABI estável "
"usam a tag de ABI ``abi3``, para refletir que são compatíveis com todas as "
"versões do Python 3.x."

#: ../source/guides/packaging-binary-extensions.rst:277
msgid ""
"CPython's :doc:`C API stability<python:c-api/stable>` page provides detailed "
"information about the API / ABI stability guarantees, how to use the Limited "
"API and the exact contents of the \"Limited API\"."
msgstr ""
"A página :doc:`Estabilidade da API C <python:c-api/stable>` do CPython "
"fornece informações detalhadas sobre as garantias de estabilidade da API/"
"ABI, como usar a API Limitada e o conteúdo exato da \"API Limitada\"."

#: ../source/guides/packaging-binary-extensions.rst:283
msgid "Building binary extensions"
msgstr "Construindo extensões binárias"

#: ../source/guides/packaging-binary-extensions.rst:285
msgid "FIXME: Cover the build-backends available for building extensions."
msgstr ""
"CORRIGIR: Cobrir os backends de construção disponíveis para construir "
"extensões."

#: ../source/guides/packaging-binary-extensions.rst:288
msgid "Building extensions for multiple platforms"
msgstr "Construindo extensões para várias plataformas"

#: ../source/guides/packaging-binary-extensions.rst:290
msgid ""
"If you plan to distribute your extension, you should provide :term:`wheels "
"<Wheel>` for all the platforms you intend to support. These are usually "
"built on continuous integration (CI) systems. There are tools to help you "
"build highly redistributable binaries from CI; these include :ref:"
"`cibuildwheel` and :ref:`multibuild`."
msgstr ""
"Se você planeja distribuir sua extensão, você deve fornecer :term:`wheels "
"<Wheel>` para todas as plataformas que pretende oferecer suporte. Geralmente "
"são construídos em sistemas de integração contínua (CI). Existem ferramentas "
"para lhe ajudar a construir binários altamente redistribuíveis de CI; estes "
"incluem :ref:`cibuildwheel` e :ref:`multibuild`."

#: ../source/guides/packaging-binary-extensions.rst:296
msgid ""
"For most extensions, you will need to build wheels for all the platforms you "
"intend to support. This means that the number of wheels you need to build is "
"the product of::"
msgstr ""
"Para a maioria das extensões, você precisará construir wheels para todas as "
"plataformas que pretende suportar. Isso significa que o número de wheels que "
"você precisa construir é o produto de::"

#: ../source/guides/packaging-binary-extensions.rst:302
msgid ""
"Using CPython's :ref:`Stable ABI <cpython-stable-abi>` can help "
"significantly reduce the number of wheels you need to provide, since a "
"single wheel on a platform can be used with all Python minor versions; "
"eliminating one dimension of the matrix. It also removes the need to "
"generate new wheels for each new minor version of Python."
msgstr ""
"Usar a :ref:`ABI Estável <cpython-stable-abi>` do CPython pode ajudar a "
"reduzir significativamente o número de wheels que você precisa fornecer, já "
"que um único wheel em uma plataforma pode ser usada com todas as versões "
"secundárias do Python; eliminando uma dimensão da matriz. Também elimina a "
"necessidade de gerar novos wheels para cada nova versão secundária do Python."

#: ../source/guides/packaging-binary-extensions.rst:309
msgid "Binary extensions for Windows"
msgstr "Extensões binárias para Windows"

#: ../source/guides/packaging-binary-extensions.rst:311
msgid ""
"Before it is possible to build a binary extension, it is necessary to ensure "
"that you have a suitable compiler available. On Windows, Visual C is used to "
"build the official CPython interpreter, and should be used to build "
"compatible binary extensions.  To set up a build environment for binary "
"extensions, install `Visual Studio Community Edition <https://visualstudio."
"microsoft.com/downloads/>`__ - any recent version is fine."
msgstr ""
"Antes que seja possível construir uma extensão binária, é necessário "
"garantir que você tenha um compilador adequado disponível. No Windows, o "
"Visual C é usado para construir o interpretador oficial do CPython e deve "
"ser usado para construir extensões binárias compatíveis. Para configurar um "
"ambiente de construção para extensões binárias, instale o `Visual Studio "
"Community Edition <https://visualstudio.microsoft.com/downloads/>`__ -- "
"qualquer versão recente já serve."

#: ../source/guides/packaging-binary-extensions.rst:318
msgid ""
"One caveat: if you use Visual Studio 2019 or later, your extension will "
"depend on an \"extra\" file, ``VCRUNTIME140_1.dll``, in addition to the "
"``VCRUNTIME140.dll`` that all previous versions back to 2015 depend on. This "
"will add an extra requirement to using your extension on versions of CPython "
"that do not include this extra file. To avoid this, you can add the compile-"
"time argument ``/d2FH4-``. Recent versions of Python may include this file."
msgstr ""
"Uma ressalva: se você usar o Visual Studio 2019 ou posterior, sua extensão "
"dependerá de um arquivo \"extra\", ``VCRUNTIME140_1.dll``, além do "
"``VCRUNTIME140.dll`` que todas as versões anteriores de 2015 dependem sobre. "
"Isso adicionará um requisito extra ao uso de sua extensão em versões do "
"CPython que não incluem este arquivo extra. Para evitar isso, você pode "
"adicionar o argumento de tempo de compilação ``/d2FH4-``. Versões recentes "
"do Python podem incluir este arquivo."

#: ../source/guides/packaging-binary-extensions.rst:326
msgid ""
"Building for Python prior to 3.5 is discouraged, because older versions of "
"Visual Studio are no longer available from Microsoft. If you do need to "
"build for older versions, you can set ``DISTUTILS_USE_SDK=1`` and "
"``MSSdk=1`` to force a the currently activated version of MSVC to be found, "
"and you should exercise care when designing your extension not to malloc/"
"free memory across different libraries, avoid relying on changed data "
"structures, and so on. Tools for generating extension modules usually avoid "
"these things for you."
msgstr ""
"Não é recomendável construir para Python antes de 3.5, porque as versões "
"anteriores do Visual Studio não estão mais disponíveis na Microsoft. Se você "
"precisa construir para versões mais antigas, você pode definir "
"``DISTUTILS_USE_SDK=1`` and ``MSSdk=1`` para forçar uma versão atualmente "
"ativada do MSVC a ser encontrada, e você deve ter cuidado ao projetar sua "
"extensão não alocar/liberar memória em bibliotecas diferentes, evitar "
"depender de estruturas de dados alteradas e assim por diante. Ferramentas "
"para gerar módulos de extensão geralmente evitam essas coisas para você."

#: ../source/guides/packaging-binary-extensions.rst:337
msgid "Binary extensions for Linux"
msgstr "Extensões binárias para Linux"

#: ../source/guides/packaging-binary-extensions.rst:339
msgid ""
"Linux binaries must use a sufficiently old glibc to be compatible with older "
"distributions. The `manylinux <https://github.com/pypa/manylinux>`_ Docker "
"images provide a build environment with a glibc old enough to support most "
"current Linux distributions on common architectures."
msgstr ""
"Os binários do Linux devem usar uma glibc suficientemente antiga para serem "
"compatíveis com distribuições mais antigas. As imagens Docker do `manylinux "
"<https://github.com/pypa/manylinux>`_ fornecem um ambiente de construção com "
"uma glibc antiga o suficiente para oferecer suporte à maioria das "
"distribuições Linux atuais em arquiteturas comuns."

#: ../source/guides/packaging-binary-extensions.rst:345
msgid "Binary extensions for macOS"
msgstr "Extensões binárias para macOS"

#: ../source/guides/packaging-binary-extensions.rst:347
msgid ""
"Binary compatibility on macOS is determined by the target minimum deployment "
"system, e.g. *10.9*, which is often specified with the "
"``MACOSX_DEPLOYMENT_TARGET`` environmental variable when building binaries "
"on macOS. When building with setuptools / distutils, the deployment target "
"is specified with the flag ``--plat-name``, e.g. ``macosx-10.9-x86_64``. For "
"common deployment targets for macOS Python distributions, see the `MacPython "
"Spinning Wheels wiki <https://github.com/MacPython/wiki/wiki/Spinning-"
"wheels>`_."
msgstr ""
"A compatibilidade binária no macOS é determinada pelo sistema mínimo alvo de "
"implantação, por exemplo, *10.9*, que geralmente é especificado com a "
"variável de ambiente ``MACOSX_DEPLOYMENT_TARGET`` ao construir binários no "
"macOS. Ao construir com setuptools / distutils, o alvo de implantação é "
"especificado com o sinalizador ``--plat-name``, por exemplo, ``macosx-10.9-"
"x86_64``. Para alvos de implantação comuns para distribuições do Python para "
"macOS, consulte a `Spinning Wheels na wiki do MacPython <https://github.com/"
"MacPython/wiki/wiki/Spinning-wheels>`_."

#: ../source/guides/packaging-binary-extensions.rst:357
msgid "Publishing binary extensions"
msgstr "Publicando extensões binárias"

#: ../source/guides/packaging-binary-extensions.rst:359
msgid ""
"Publishing binary extensions through PyPI uses the same upload mechanisms as "
"publishing pure Python packages. You build a wheel file for your extension "
"using the build-backend and upload it to PyPI using :doc:`twine <twine:"
"index>`."
msgstr ""
"A publicação de extensões binárias por meio do PyPI usa os mesmos mecanismos "
"de upload que a publicação de pacotes Python puros. Você constrói um arquivo "
"wheel para sua extensão usando o backend de construção e carrega-o no PyPI "
"usando :doc:`twine <twine:index>`."

#: ../source/guides/packaging-binary-extensions.rst:365
msgid "Avoid binary-only releases"
msgstr "Evite lançamentos somente binários"

#: ../source/guides/packaging-binary-extensions.rst:367
msgid ""
"It is strongly recommended that you publish your binary extensions as well "
"as the source code that was used to build them. This allows users to build "
"the extension from source if they need to. Notably, this is required for "
"certain Linux distributions that build from source within their own build "
"systems for the distro package repositories."
msgstr ""
"É altamente recomendável que você publique suas extensões binárias, bem como "
"o código-fonte usado para construí-las. Isso permite que os usuários criem a "
"extensão a partir do código-fonte, se necessário. Notavelmente, isso é "
"necessário para certas distribuições Linux que compilam a partir do código-"
"fonte em seus próprios sistemas de compilação para os repositórios de "
"pacotes de distribuição."

#: ../source/guides/packaging-binary-extensions.rst:374
msgid "Weak linking"
msgstr "Ligação fraca"

#: ../source/guides/packaging-binary-extensions.rst:379
msgid "Additional resources"
msgstr "Recursos adicionais"

#: ../source/guides/packaging-binary-extensions.rst:381
msgid ""
"Cross-platform development and distribution of extension modules is a "
"complex topic, so this guide focuses primarily on providing pointers to "
"various tools that automate dealing with the underlying technical "
"challenges. The additional resources in this section are instead intended "
"for developers looking to understand more about the underlying binary "
"interfaces that those systems rely on at runtime."
msgstr ""
"O desenvolvimento e distribuição multiplataforma de módulos de extensão é um "
"tópico complexo, portanto, este guia se concentra principalmente em fornecer "
"indicadores para várias ferramentas que automatizam o tratamento dos "
"desafios técnicos subjacentes. Os recursos adicionais nesta seção são "
"destinados a desenvolvedores que procuram entender mais sobre as interfaces "
"binárias subjacentes das quais esses sistemas dependem em tempo de execução."

#: ../source/guides/packaging-binary-extensions.rst:388
msgid "Cross-platform wheel generation with scikit-build"
msgstr "Geração de wheel multiplataforma com scikit-build"

#: ../source/guides/packaging-binary-extensions.rst:390
msgid ""
"The `scikit-build <https://scikit-build.readthedocs.io/en/latest/>`_ package "
"helps abstract cross-platform build operations and provides additional "
"capabilities when creating binary extension packages. Additional "
"documentation is also available on the `C runtime, compiler, and build "
"system generator <https://scikit-build.readthedocs.io/en/latest/generators."
"html>`_ for Python binary extension modules."
msgstr ""
"O pacote `scikit-build <https://scikit-build.readthedocs.io/en/latest/>`_ "
"ajuda a abstrair as operações de construção multiplataforma e fornece "
"recursos adicionais ao criar pacotes de extensões binárias. Documentação "
"adicional também está disponível no `tempo de execução C, compilador e "
"gerador de sistema de construção <https://scikit-build.readthedocs.io/en/"
"latest/generators.html>`_ para módulos Python de extensão binária."

#: ../source/guides/packaging-binary-extensions.rst:398
msgid "Introduction to C/C++ extension modules"
msgstr "Introdução a módulos de extensão C/C++"

#: ../source/guides/packaging-binary-extensions.rst:400
msgid ""
"For a more in depth explanation of how extension modules are used by CPython "
"on a Debian system, see the following articles:"
msgstr ""
"Para uma explicação mais detalhada de como os módulos de extensão são usados "
"pelo CPython em um sistema Debian, consulte os seguintes artigos (todos em "
"inglês):"

#: ../source/guides/packaging-binary-extensions.rst:403
msgid ""
"`What are (c)python extension modules? <https://thomasnyberg.com/"
"what_are_extension_modules.html>`_"
msgstr ""
"`O que são módulos de extensão (c)python? <https://thomasnyberg.com/"
"what_are_extension_modules.html>`_"

#: ../source/guides/packaging-binary-extensions.rst:404
msgid "`Releasing the gil <https://thomasnyberg.com/releasing_the_gil.html>`_"
msgstr "`Liberando o gil <https://thomasnyberg.com/releasing_the_gil.html>`_"

#: ../source/guides/packaging-binary-extensions.rst:405
msgid ""
"`Writing cpython extension modules using C++ <https://thomasnyberg.com/"
"cpp_extension_modules.html>`_"
msgstr ""
"`Escrevendo módulos de extensão cpython usando C++ <https://thomasnyberg.com/"
"cpp_extension_modules.html>`_"

#: ../source/guides/packaging-binary-extensions.rst:408
msgid "Additional considerations for binary wheels"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:410
msgid ""
"The `pypackaging-native <https://pypackaging-native.github.io/>`_ website "
"has additional coverage of packaging Python packages with native code. It "
"aims to provide an overview of the most important packaging issues for such "
"projects, with in-depth explanations and references."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:415
msgid ""
"Examples of topics covered are non-Python compiled dependencies (\"native "
"dependencies\"), the importance of the ABI (Application Binary Interface) of "
"native code, dependency on SIMD code and cross compilation."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:5
msgid "Packaging namespace packages"
msgstr "Empacotando pacotes de espaço de nomes"

#: ../source/guides/packaging-namespace-packages.rst:7
msgid ""
"Namespace packages allow you to split the sub-packages and modules within a "
"single :term:`package <Import Package>` across multiple, separate :term:"
"`distribution packages <Distribution Package>` (referred to as "
"**distributions** in this document to avoid ambiguity). For example, if you "
"have the following package structure:"
msgstr ""
"Os pacotes de espaço de nomes permitem que você divida os subpacotes e "
"módulos dentro de um único :term:`pacote <Pacote de Importação>` em vários :"
"term:`pacotes de distribuição <Pacote de Distribuição>` (referidos como "
"**distribuições** em este documento para evitar ambiguidade). Por exemplo, "
"se você tiver a seguinte estrutura de pacote:"

#: ../source/guides/packaging-namespace-packages.rst:26
msgid "And you use this package in your code like so::"
msgstr "E você usa este pacote em seu código assim::"

#: ../source/guides/packaging-namespace-packages.rst:31
msgid "Then you can break these sub-packages into two separate distributions:"
msgstr ""
"Então você pode quebrar esses subpacotes em duas distribuições separadas:"

#: ../source/guides/packaging-namespace-packages.rst:50
msgid "Each sub-package can now be separately installed, used, and versioned."
msgstr ""
"Cada subpacote pode agora ser instalado, usado e versionado separadamente."

#: ../source/guides/packaging-namespace-packages.rst:52
msgid ""
"Namespace packages can be useful for a large collection of loosely-related "
"packages (such as a large corpus of client libraries for multiple products "
"from a single company). However, namespace packages come with several "
"caveats and are not appropriate in all cases. A simple alternative is to use "
"a prefix on all of your distributions such as ``import "
"mynamespace_subpackage_a`` (you could even use ``import "
"mynamespace_subpackage_a as subpackage_a`` to keep the import object short)."
msgstr ""
"Os pacotes de espaço de nomes podem ser úteis para uma grande coleção de "
"pacotes vagamente relacionados (como um grande corpo de bibliotecas de "
"cliente para vários produtos de uma única empresa). No entanto, os pacotes "
"de espaço de nomes vêm com várias ressalvas e não são apropriados em todos "
"os casos. Uma alternativa simples é usar um prefixo em todas as suas "
"distribuições, como ``import mynamespace_subpackage_a`` (você pode até usar "
"``import mynamespace_subpackage_a as subpackage_a`` para manter o objeto de "
"importação curto)."

#: ../source/guides/packaging-namespace-packages.rst:62
msgid "Creating a namespace package"
msgstr "Criando um pacote de espaço de nomes"

#: ../source/guides/packaging-namespace-packages.rst:64
msgid ""
"There are currently two different approaches to creating namespace packages, "
"from which the latter is discouraged:"
msgstr ""
"Atualmente, existem duas abordagens diferentes para a criação de pacotes de "
"espaço de nomes, das quais a última é desencorajado:"

#: ../source/guides/packaging-namespace-packages.rst:67
msgid ""
"Use `native namespace packages`_. This type of namespace package is defined "
"in :pep:`420` and is available in Python 3.3 and later. This is recommended "
"if packages in your namespace only ever need to support Python 3 and "
"installation via ``pip``."
msgstr ""
"Usar `pacotes de espaço de nomes nativos`_. Este tipo de pacote de espaço de "
"nomes é definido na :pep:`420` e está disponível em Python 3.3 e posterior. "
"Isso é recomendado se os pacotes em seu espaço de nomes precisarem apenas "
"oferecer suporte ao Python 3 e à instalação via ``pip``."

#: ../source/guides/packaging-namespace-packages.rst:71
msgid ""
"Use `legacy namespace packages`_. This comprises `pkgutil-style namespace "
"packages`_ and `pkg_resources-style namespace packages`_."
msgstr ""
"Use `pacotes de espaço de nomes legados`_. Isso compreende `pacotes de "
"espaço de nomes no estilo pkgutil`_ e `pacotes de espaço de nomes no estilo "
"pkg_resources`_."

#: ../source/guides/packaging-namespace-packages.rst:75
msgid "Native namespace packages"
msgstr "Pacotes se espaço de nomes nativos"

#: ../source/guides/packaging-namespace-packages.rst:77
msgid ""
"Python 3.3 added **implicit** namespace packages from :pep:`420`. All that "
"is required to create a native namespace package is that you just omit :file:"
"`__init__.py` from the namespace package directory. An example file "
"structure (following :ref:`src-layout <setuptools:src-layout>`):"
msgstr ""
"Python 3.3 adicionou pacotes de espaço de nomes **implícitos** a partir da :"
"pep:`420`. Tudo o que é necessário para criar um pacote de espaço de nomes "
"nativo é omitir :file:`__init__.py` do diretório do pacote de espaço de "
"nomes. Um exemplo de estrutura de arquivo (seguindo :ref:`src-layout "
"<setuptools:src-layout>`):"

#: ../source/guides/packaging-namespace-packages.rst:94
msgid ""
"It is extremely important that every distribution that uses the namespace "
"package omits the :file:`__init__.py` or uses a pkgutil-style :file:"
"`__init__.py`. If any distribution does not, it will cause the namespace "
"logic to fail and the other sub-packages will not be importable."
msgstr ""
"É extremamente importante que toda distribuição que usa o pacote de espaço "
"de nomes omita o :file:`__init__.py` ou use um :file:`__init__.py` no estilo "
"pkgutil. Se alguma distribuição não o fizer, isso fará com que a lógica do "
"espaço de nomes falhe e os outros subpacotes não serão importáveis."

#: ../source/guides/packaging-namespace-packages.rst:99
msgid ""
"The ``src-layout`` directory structure allows automatic discovery of "
"packages by most :term:`build backends <Build Backend>`. See :ref:`src-"
"layout-vs-flat-layout` for more information. If however you want to manage "
"exclusions or inclusions of packages yourself, this is possible to be "
"configured in the top-level :file:`pyproject.toml`:"
msgstr ""
"A estrutura de diretórios ``src-layout`` permite a descoberta automática de "
"pacotes pela maioria dos :term:`backends de construção <Build Backend>`. "
"Veja :ref:`src-layout-vs-flat-layout` para mais informações. Se, no entanto, "
"você mesmo deseja gerenciar exclusões ou inclusões de pacotes, isso é "
"possível de ser configurado no :file:`pyproject.toml` de nível superior:"

#: ../source/guides/packaging-namespace-packages.rst:117
msgid "The same can be accomplished with a :file:`setup.cfg`:"
msgstr "O mesmo pode ser feito com um :file:`setup.cfg`:"

#: ../source/guides/packaging-namespace-packages.rst:129
msgid "Or :file:`setup.py`:"
msgstr "Ou :file:`setup.py`:"

#: ../source/guides/packaging-namespace-packages.rst:142
msgid ""
":ref:`setuptools` will search the directory structure for implicit namespace "
"packages by default."
msgstr ""
":ref:`setuptools` irá pesquisar na estrutura de diretórios por pacotes de "
"espaço de nomes implícitos por padrão."

#: ../source/guides/packaging-namespace-packages.rst:145
msgid ""
"A complete working example of two native namespace packages can be found in "
"the `native namespace package example project`_."
msgstr ""
"Um exemplo de trabalho completo de dois pacotes de espaço de nomes nativos "
"pode ser encontrado no `projeto exemplo de pacote de espaço de nomes "
"nativo`_."

#: ../source/guides/packaging-namespace-packages.rst:151
msgid ""
"Because native and pkgutil-style namespace packages are largely compatible, "
"you can use native namespace packages in the distributions that only support "
"Python 3 and pkgutil-style namespace packages in the distributions that need "
"to support Python 2 and 3."
msgstr ""
"Como os pacotes de espaço de nomes nativos e no estilo pkgutil são "
"amplamente compatíveis, você pode usar pacotes de espaço de nomes nativos "
"nas distribuições que oferecem suporte apenas a Python 3 e pacotes de espaço "
"de nomes no estilo pkgutil nas distribuições que precisam oferecer suporte a "
"Python 2 e 3."

#: ../source/guides/packaging-namespace-packages.rst:158
msgid "Legacy namespace packages"
msgstr "Pacotes de espaço de nomes legados"

#: ../source/guides/packaging-namespace-packages.rst:160
msgid ""
"These two methods, that were used to create namespace packages prior to :pep:"
"`420`, are now considered to be obsolete and should not be used unless you "
"need compatibility with packages already using this method. Also, :doc:"
"`pkg_resources <setuptools:pkg_resources>` has been deprecated."
msgstr ""
"Esses dois métodos, que eram usados para criar pacotes de espaço de nomes "
"antes de :pep:`420`, agora são considerados descontinuados e não devem ser "
"usados a menos que você precise de compatibilidade com pacotes que já usam "
"esse método. Além disso, :doc:`pkg_resources <setuptools:pkg_resources>` foi "
"descontinuado."

#: ../source/guides/packaging-namespace-packages.rst:165
msgid ""
"To migrate an existing package, all packages sharing the namespace must be "
"migrated simultaneously."
msgstr ""
"Para migrar um pacote existente, todos os pacotes que compartilham o espaço "
"de nomes devem ser migrados simultaneamente."

#: ../source/guides/packaging-namespace-packages.rst:167
msgid ""
"While native namespace packages and pkgutil-style namespace packages are "
"largely compatible, pkg_resources-style namespace packages are not "
"compatible with the other methods. It's inadvisable to use different methods "
"in different distributions that provide packages to the same namespace."
msgstr ""
"Embora os pacotes de espaço de nomes nativos e pacotes de espaço de nomes no "
"estilo pkgutil sejam amplamente compatíveis, os pacotes de espaço de nomes "
"no estilo pkg_resources não são compatíveis com os outros métodos. Não é "
"aconselhável usar métodos diferentes em distribuições diferentes que "
"fornecem pacotes para o mesmo espaço de nomes."

#: ../source/guides/packaging-namespace-packages.rst:174
msgid "pkgutil-style namespace packages"
msgstr "Pacotes de espaço de nomes no estilo pkgutil"

#: ../source/guides/packaging-namespace-packages.rst:176
msgid ""
"Python 2.3 introduced the :doc:`pkgutil <python:library/pkgutil>` module and "
"the :py:func:`python:pkgutil.extend_path` function. This can be used to "
"declare namespace packages that need to be compatible with both Python 2.3+ "
"and Python 3. This is the recommended approach for the highest level of "
"compatibility."
msgstr ""
"Python 2.3 introduziu o módulo :doc:`pkgutil <python:library/pkgutil>` e a "
"função :py:func:`python:pkgutil.extend_path`. Isso pode ser usado para "
"declarar pacotes de espaço de nomes que precisam ser compatíveis com Python "
"2.3+ e Python 3. Esta é a abordagem recomendada para o nível mais alto de "
"compatibilidade."

#: ../source/guides/packaging-namespace-packages.rst:181
msgid ""
"To create a pkgutil-style namespace package, you need to provide an :file:"
"`__init__.py` file for the namespace package:"
msgstr ""
"Para criar um pacote de espaço de nomes no estilo pkgutil, você precisa "
"fornecer um arquivo :file:`__init__.py` para o pacote de espaço de nomes:"

#: ../source/guides/packaging-namespace-packages.rst:195
#: ../source/guides/packaging-namespace-packages.rst:242
msgid ""
"The :file:`__init__.py` file for the namespace package needs to contain the "
"following:"
msgstr ""
"O arquivo :file:`__init__.py` para o pacote de espaço de nomes precisa "
"conter o seguinte:"

#: ../source/guides/packaging-namespace-packages.rst:202
#: ../source/guides/packaging-namespace-packages.rst:249
msgid ""
"**Every** distribution that uses the namespace package must include such an :"
"file:`__init__.py`. If any distribution does not, it will cause the "
"namespace logic to fail and the other sub-packages will not be importable.  "
"Any additional code in :file:`__init__.py` will be inaccessible."
msgstr ""
"**Cada** distribuição que usa o pacote de espaço de nomes deve incluir um :"
"file:`__init__.py`. Se alguma distribuição não o fizer, isso fará com que a "
"lógica do espaço de nomes falhe e os outros subpacotes não serão "
"importáveis. Qualquer código adicional no :file:`__init__.py` ficará "
"inacessível."

#: ../source/guides/packaging-namespace-packages.rst:207
msgid ""
"A complete working example of two pkgutil-style namespace packages can be "
"found in the `pkgutil namespace example project`_."
msgstr ""
"Um exemplo completamente funcional de dois pacotes de espaço de nomes no "
"estilo pkgutil pode ser encontrado no `projeto exemplo de espaço de nomes de "
"pkgutil`_."

#: ../source/guides/packaging-namespace-packages.rst:217
msgid "pkg_resources-style namespace packages"
msgstr "Pacotes de espaço de nomes no estilo pkg_resources"

#: ../source/guides/packaging-namespace-packages.rst:219
msgid ""
":doc:`Setuptools <setuptools:index>` provides the `pkg_resources."
"declare_namespace`_ function and the ``namespace_packages`` argument to :"
"func:`~setuptools.setup`. Together these can be used to declare namespace "
"packages. While this approach is no longer recommended, it is widely present "
"in most existing namespace packages. If you are creating a new distribution "
"within an existing namespace package that uses this method then it's "
"recommended to continue using this as the different methods are not cross-"
"compatible and it's not advisable to try to migrate an existing package."
msgstr ""
":doc:`Setuptools <setuptools:index>` fornece a função `pkg_resources."
"declare_namespace`_ e o argumento ``namespace_packages`` para :func:"
"`~setuptools.setup`. Juntos, eles podem ser usados para declarar pacotes de "
"espaço de nomes. Embora essa abordagem não seja mais recomendada, ela está "
"amplamente presente na maioria dos pacotes de espaço de nomes existentes. Se "
"você estiver criando uma nova distribuição dentro de um pacote de espaço de "
"nomes existente que usa esse método, é recomendável continuar usando-o, pois "
"os diferentes métodos não são compatíveis entre si e não é aconselhável "
"tentar migrar um pacote existente."

#: ../source/guides/packaging-namespace-packages.rst:228
msgid ""
"To create a pkg_resources-style namespace package, you need to provide an :"
"file:`__init__.py` file for the namespace package:"
msgstr ""
"Para criar um pacote de espaço de nomes no estilo pkg_resources, você "
"precisa fornecer um arquivo :file:`__init __. Py` para o pacote de espaço de "
"nomes:"

#: ../source/guides/packaging-namespace-packages.rst:254
msgid ""
"Some older recommendations advise the following in the namespace package :"
"file:`__init__.py`:"
msgstr ""
"Algumas recomendações mais antigas aconselham o seguinte no :file:`__init__."
"py` de pacotes de espaço de nomes:"

#: ../source/guides/packaging-namespace-packages.rst:264
msgid ""
"The idea behind this was that in the rare case that setuptools isn't "
"available packages would fall-back to the pkgutil-style packages. This isn't "
"advisable because pkgutil and pkg_resources-style namespace packages are not "
"cross-compatible. If the presence of setuptools is a concern then the "
"package should just explicitly depend on setuptools via ``install_requires``."
msgstr ""
"A ideia por trás disso era que, no caso raro de setuptools não estar "
"disponível, os pacotes recorreriam aos pacotes no estilo pkgutil. Isso não é "
"aconselhável porque os pacotes de espaço de nomes estilo pkgutil e "
"pkg_resources não são compatíveis entre si. Se a presença de setuptools é "
"uma preocupação, então o pacote deve depender explicitamente de setuptools "
"via ``install_requires``."

#: ../source/guides/packaging-namespace-packages.rst:271
msgid ""
"Finally, every distribution must provide the ``namespace_packages`` argument "
"to :func:`~setuptools.setup` in :file:`setup.py`. For example:"
msgstr ""
"Finalmente, cada distribuição deve fornecer o argumento "
"``namespace_packages`` para :func:`~setuptools.setup` no :file:`setup.py`. "
"Por exemplo:"

#: ../source/guides/packaging-namespace-packages.rst:285
msgid ""
"A complete working example of two pkg_resources-style namespace packages can "
"be found in the `pkg_resources namespace example project`_."
msgstr ""
"Um exemplo de completamente funcional de dois pacotes de espaço de nomes no "
"estilo pkg_resources pode ser encontrado no `projeto exemplo de espaço de "
"nomes de pkg_resources`_."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:5
msgid ""
"Publishing package distribution releases using GitHub Actions CI/CD workflows"
msgstr ""
"Publicando versões de distribuição de pacotes usando fluxos de trabalho de "
"CI/CD do GitHub Actions"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:7
msgid ""
"`GitHub Actions CI/CD`_ allows you to run a series of commands whenever an "
"event occurs on the GitHub platform. One popular choice is having a workflow "
"that's triggered by a ``push`` event. This guide shows you how to publish a "
"Python distribution whenever a tagged commit is pushed. It will use the "
"`pypa/gh-action-pypi-publish GitHub Action`_ for publishing. It also uses "
"GitHub's `upload-artifact`_ and `download-artifact`_ actions for temporarily "
"storing and downloading the source packages."
msgstr ""
"O `CI/CD do GitHub Actions`_ permite que você execute uma série de comandos "
"sempre que ocorrer um evento na plataforma GitHub. Uma escolha popular é ter "
"um fluxo de trabalho que é disparado por um evento ``push``. Este guia "
"mostra como publicar uma distribuição Python sempre que um commit marcado é "
"enviado. Ele usará o `GitHub Action pypa/gh-action-pypi-publish`_ para "
"publicação. Ele também usa as actions `upload-artifact`_ e `download-"
"artifact`_ do GitHub para temporariamente armazenar e baixar os pacotes "
"fontes."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:19
msgid ""
"This guide *assumes* that you already have a project that you know how to "
"build distributions for and *it lives on GitHub*.  This guide also avoids "
"details of building platform specific projects. If you have binary "
"components, check out :ref:`cibuildwheel`'s GitHub Action examples."
msgstr ""
"Este guia *presume* que você já tem um projeto para o qual sabe como "
"construir distribuições e *ele reside no GitHub*. Este guia também evita "
"detalhes da construção de projetos específicos da plataforma. Se você tiver "
"componentes binários, confira os exemplos de GitHub Action do :ref:"
"`cibuildwheel`."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:25
#, fuzzy
#| msgid "Configuring trusted publishing"
msgid "Configuring Trusted Publishing"
msgstr "Configurando publicação confiável"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:27
#, fuzzy
#| msgid ""
#| "This guide relies on PyPI's `trusted publishing`_ implementation to "
#| "connect to `GitHub Actions CI/CD`_. This is recommended for security "
#| "reasons, since the generated tokens are created for each of your projects "
#| "individually and expire automatically. Otherwise, you'll need to generate "
#| "an `API token`_ for both PyPI and TestPyPI. In case of publishing to "
#| "third-party indexes like :doc:`devpi <devpi:index>`, you may need to "
#| "provide a username/password combination."
msgid ""
"This guide relies on PyPI's `Trusted Publishing`_ implementation to connect "
"to `GitHub Actions CI/CD`_. This is recommended for security reasons, since "
"the generated tokens are created for each of your projects individually and "
"expire automatically. Otherwise, you'll need to generate an `API token`_ for "
"both PyPI and TestPyPI. In case of publishing to third-party indexes like :"
"doc:`devpi <devpi:index>`, you may need to provide a username/password "
"combination."
msgstr ""
"Este guia se baseia na implementação de `publicação confiável`_ do PyPI para "
"se conectar ao `CI/CD do GitHub Actions`_. Isso é recomendado por motivos de "
"segurança, pois os tokens gerados são criados para cada um dos seus projetos "
"individualmente e expiram automaticamente. Caso contrário, você precisará "
"gerar um `token de API`_ para PyPI e TestPyPI. No caso de publicação em "
"índices de terceiros como :doc:`devpi <devpi:index>`, pode ser necessário "
"fornecer uma combinação de nome de usuário/senha."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:35
#, fuzzy
#| msgid ""
#| "Since this guide will demonstrate uploading to both PyPI and TestPyPI, "
#| "we'll need two trusted publishers configured. The following steps will "
#| "lead you through creating the \"pending\" publishers for your new :term:"
#| "`PyPI project <Project>`. However it is also possible to add `trusted "
#| "publishing`_ to any pre-existing project, if you are its owner."
msgid ""
"Since this guide will demonstrate uploading to both PyPI and TestPyPI, we'll "
"need two trusted publishers configured. The following steps will lead you "
"through creating the \"pending\" publishers for your new :term:`PyPI project "
"<Project>`. However it is also possible to add `Trusted Publishing`_ to any "
"pre-existing project, if you are its owner."
msgstr ""
"Como este guia demonstrará o envio para PyPI e TestPyPI, precisaremos de "
"dois publicadores confiáveis configurados. As etapas a seguir guiarão você "
"na criação dos publicadores \"pendentes\" para seu novo :term:`Projeto PyPI "
"<Projeto>`. No entanto, também é possível adicionar `publicação confiável`_ "
"a qualquer projeto preexistente, se você for o proprietário."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:44
msgid ""
"If you followed earlier versions of this guide, you have created the secrets "
"``PYPI_API_TOKEN`` and ``TEST_PYPI_API_TOKEN`` for direct PyPI and TestPyPI "
"access. These are obsolete now and you should remove them from your GitHub "
"repository and revoke them in your PyPI and TestPyPI account settings in "
"case you are replacing your old setup with the new one."
msgstr ""
"Se você seguiu versões anteriores deste guia, você criou os segredos "
"``PYPI_API_TOKEN`` e ``TEST_PYPI_API_TOKEN`` para acesso direto ao PyPI e "
"TestPyPI. Eles estão descontinuados agora e você deve removê-los de seu "
"repositório GitHub e revogá-los nas configurações de sua conta PyPI e "
"TestPyPI, caso esteja substituindo sua configuração antiga pela nova."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:51
msgid "Let's begin! 🚀"
msgstr "Vamos começar! 🚀"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:53
msgid "Go to https://pypi.org/manage/account/publishing/."
msgstr "Acesse https://pypi.org/manage/account/publishing/."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:54
msgid ""
"Fill in the name you wish to publish your new :term:`PyPI project <Project>` "
"under (the ``name`` value in your ``setup.cfg`` or ``pyproject.toml``), the "
"GitHub repository owner's name (org or user), and repository name, and the "
"name of the release workflow file under the ``.github/`` folder, see :ref:"
"`workflow-definition`. Finally, add the name of the GitHub Environment "
"(``pypi``) we're going set up under your repository. Register the trusted "
"publisher."
msgstr ""
"Preencha o nome com o qual deseja publicar seu novo :term:`projeto PyPI "
"<Project>` em (o valor ``name`` em seu ``setup.cfg`` ou ``pyproject.toml``), "
"o nome do proprietário do repositório no GitHub (organização ou usuário), e "
"nome do repositório, e o nome do arquivo de fluxo de trabalho de lançamento "
"na pasta ``.github/``, consulte :ref:`workflow-definition`. Por fim, "
"adicione o nome do ambiente do GitHub (``pypi``) que iremos configurar em "
"seu repositório. Registre o publicador confiável."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:63
msgid ""
"Now, go to https://test.pypi.org/manage/account/publishing/ and repeat the "
"second step, but this time, enter ``testpypi`` as the name of the GitHub "
"Environment."
msgstr ""
"Agora, acesse https://test.pypi.org/manage/account/publishing/ e repita a "
"segunda etapa, mas desta vez, insira ``testpypi`` como o nome do ambiente do "
"GitHub."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:66
msgid ""
"Your \"pending\" publishers are now ready for their first use and will "
"create your projects automatically once you use them for the first time."
msgstr ""
"Seus publicadores \"pendentes\" agora estão prontos para o primeiro uso e "
"criarão seus projetos automaticamente assim que você usá-los pela primeira "
"vez."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:72
msgid ""
"If you don't have a TestPyPI account, you'll need to create it. It's not the "
"same as a regular PyPI account."
msgstr ""
"Se você não tiver uma conta TestPyPI, precisará criá-la. Não é o mesmo que "
"uma conta do PyPI comum."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:78
#, fuzzy
#| msgid ""
#| "For security reasons, you must require `manual approval <https://docs."
#| "github.com/en/actions/deployment/targeting-different-environments/using-"
#| "environments-for-deployment#deployment-protection-rules>`_ on each run "
#| "for the ``pypi`` environment."
msgid ""
"For security reasons, you must require `manual approval <https://docs.github."
"com/en/actions/how-tos/managing-workflow-runs-and-deployments/managing-"
"deployments/managing-environments-for-deployment#creating-an-environment>`_ "
"on each run for the ``pypi`` environment."
msgstr ""
"Por motivos de segurança, você deve exigir a `aprovação manual <https://docs."
"github.com/en/actions/deployment/targeting-different-environments/using-"
"environments-for-deployment#deployment-protection-rules>`_ em cada execução "
"para o ambiente ``pypi``."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:85
msgid "Creating a workflow definition"
msgstr "Criando uma definição de fluxo de trabalho"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:87
msgid ""
"GitHub CI/CD workflows are declared in YAML files stored in the ``.github/"
"workflows/`` directory of your repository."
msgstr ""
"Os fluxos de trabalho de CI/CD do GitHub são declarados em arquivos YAML "
"armazenados no diretório ``.github/workflows/`` do seu repositório."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:90
msgid "Let's create a ``.github/workflows/publish-to-test-pypi.yml`` file."
msgstr ""
"Vamos criar um arquivo chamado ``.github/workflows/publish-to-test-pypi."
"yml``."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:93
msgid ""
"Start it with a meaningful name and define the event that should make GitHub "
"run this workflow:"
msgstr ""
"Comece com um nome significativo e defina o evento que deve fazer o GitHub "
"executar este fluxo de trabalho:"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:101
msgid "Checking out the project and building distributions"
msgstr "Fazendo checkout do projeto e construindo as distribuições"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:103
msgid ""
"We will have to define two jobs to publish to PyPI and TestPyPI "
"respectively, and an additional job to build the distribution packages."
msgstr ""
"Teremos que definir dois trabalhos (\"jobs\") para publicar em PyPI e "
"TestPyPI respectivamente, e um trabalho adicional para construir os pacotes "
"de distribuição."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:107
msgid ""
"First, we'll define the job for building the dist packages of your project "
"and storing them for later use:"
msgstr ""
"Primeiro, definiremos o trabalho para construir os pacotes dist do seu "
"projeto e armazená-los para uso posterior:"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:115
msgid ""
"This will download your repository into the CI runner and then install and "
"activate the newest available Python 3 release."
msgstr ""
"Isso fará o download do seu repositório no executor de CI e, em seguida, "
"instalará e ativará o lançamento mais recente disponível do Python 3."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:118
msgid ""
"And now we can build the dists from source and store them. In this example, "
"we'll use the ``build`` package. So add this to the steps list:"
msgstr ""
"E agora podemos construir os dists a partir da fonte e armazená-los. Neste "
"exemplo, usaremos o pacote ``build``. Então, adicione isso à lista de etapas:"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:128
msgid "Defining a workflow job environment"
msgstr "Definindo um ambiente de tarefa do fluxo de trabalho"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:130
#, fuzzy
#| msgid ""
#| "Now, let's add initial setup for our job that will publish to PyPI. It's "
#| "a process that will execute commands that we'll define later. In this "
#| "guide, we'll use the latest stable Ubuntu LTS version provided by GitHub "
#| "Actions. This also defines a GitHub Environment for the job to run in its "
#| "context and a URL to be displayed in GitHub's UI nicely. Additionally, it "
#| "allows acquiring an OpenID Connect token that the ``pypi-publish`` "
#| "actions needs to implement secretless trusted publishing to PyPI."
msgid ""
"Now, let's add initial setup for our job that will publish to PyPI. It's a "
"process that will execute commands that we'll define later. In this guide, "
"we'll use the latest stable Ubuntu LTS version provided by GitHub Actions. "
"This also defines a GitHub Environment for the job to run in its context and "
"a URL to be displayed in GitHub's UI nicely. Additionally, it allows "
"acquiring an OpenID Connect token that the ``pypi-publish`` actions needs to "
"implement secretless Trusted Publishing to PyPI."
msgstr ""
"Agora, vamos adicionar a configuração inicial para nosso trabalho que será "
"publicado no PyPI. É um processo que executará comandos que definiremos mais "
"tarde. Neste guia, usaremos a versão estável mais recente do Ubuntu LTS "
"fornecida pelo GitHub Actions. Isso também define um ambiente GitHub para o "
"trabalho ser executado em seu contexto e uma URL a ser exibida na interface "
"do GitHub. Além disso, permite adquirir um token OpenID Connect que as ações "
"``pypi-publish`` precisam para implementar publicação confiável sem segredo "
"para PyPI."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:144
msgid ""
"This will also ensure that the PyPI publishing workflow is only triggered if "
"the current commit is tagged."
msgstr ""
"Isso também garantirá que o fluxo de trabalho de publicação do PyPI só seja "
"acionado se o commit atual estiver marcado."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:148
msgid "Publishing the distribution to PyPI"
msgstr "Publicando a distribuição para PyPI"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:150
msgid "Finally, add the following steps at the end:"
msgstr "Finalmente, adicione as seguintes etapas ao final:"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:157
msgid ""
"This step uses the `pypa/gh-action-pypi-publish`_ GitHub Action: after the "
"stored distribution package has been downloaded by the `download-artifact`_ "
"action, it uploads the contents of the ``dist/`` folder into PyPI "
"unconditionally."
msgstr ""
"Essa etapa usa a GitHub Action `pypa/gh-action-pypi-publish`_: após o "
"primeiro pacote de distribuição armazenado ter sido baixado pela ação "
"`download-artifact`_, ele envia o conteúdo da pasta ``dist /`` para PyPI "
"incondicionalmente."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:164
msgid ""
"Starting with version `v1.11.0 <https://github.com/pypa/gh-action-pypi-"
"publish/releases/tag/v1.11.0>`_, `pypa/gh-action-pypi-publish`_ generates "
"and uploads :pep:`740`-compatible attestations for each distribution by "
"default. No additional manual signing steps are required."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:172
msgid "Separate workflow for publishing to TestPyPI"
msgstr "Fluxo de trabalho separado para publicação no TestPyPI"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:174
msgid ""
"Now, repeat these steps and create another job for publishing to the "
"TestPyPI package index under the ``jobs`` section:"
msgstr ""
"Agora, repita essas etapas e crie outro trabalho para publicação no índice "
"do pacote TestPyPI na seção ``jobs``:"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:184
msgid ""
"Requiring manual approvals in the ``testpypi`` GitHub Environment is "
"typically unnecessary as it's designed to run on each commit to the main "
"branch and is often used to indicate a healthy release publishing pipeline."
msgstr ""
"Exigir aprovações manuais no ambiente GitHub ``testpypi`` normalmente é "
"desnecessário, pois ele é projetado para ser executado em cada commit no "
"branch principal e é frequentemente usado para indicar um pipeline de "
"publicação de lançamento íntegro."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:188
msgid "The whole CI/CD workflow"
msgstr "O fluxo de trabalho de CI/CD completo"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:190
msgid ""
"This paragraph showcases the whole workflow after following the above guide."
msgstr ""
"Este parágrafo mostra todo o fluxo de trabalho após seguir o guia acima."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:198
msgid "That's all, folks!"
msgstr "Isso é tudo, pessoal!"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:200
msgid ""
"Now, whenever you push a tagged commit to your Git repository remote on "
"GitHub, this workflow will publish it to PyPI. And it'll publish any push to "
"TestPyPI which is useful for providing test builds to your alpha users as "
"well as making sure that your release pipeline remains healthy!"
msgstr ""
"Agora, sempre que você fizer um push de um commit com tag para seu "
"repositório Git remoto no GitHub, este fluxo de trabalho irá publicá-lo no "
"PyPI. E publicará qualquer push para TestPyPI que seja útil para fornecer "
"construções de teste para seus usuários alfa, bem como garantir que sua "
"versão pipeline permaneça saudável!"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:208
msgid ""
"If your repository has frequent commit activity and every push is uploaded "
"to TestPyPI as described, the project might exceed the `PyPI project size "
"limit <https://pypi.org/help/#project-size-limit>`_. The limit could be "
"increased, but a better solution may constitute to use a PyPI-compatible "
"server like :ref:`pypiserver` in the CI for testing purposes."
msgstr ""
"Se o seu repositório tiver atividade de commit frequente e cada push for "
"carregado no TestPyPI conforme descrito, o projeto poderá exceder o `limite "
"de tamanho do projeto PyPI <https://pypi.org/help/#project-size-limit>`_. O "
"limite poderia ser aumentado, mas uma solução melhor pode consistir em usar "
"um servidor compatível com PyPI como :ref:`pypiserver` no CI para fins de "
"teste."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:216
msgid ""
"It is recommended to keep the integrated GitHub Actions at their latest "
"versions, updating them frequently."
msgstr ""
"Recomenda-se manter o GitHub Actions integrado em suas versões mais "
"recentes, atualizando-as frequentemente."

#: ../source/guides/section-build-and-publish.rst:3
msgid "Building and Publishing"
msgstr "Construção e publicação"

#: ../source/guides/section-hosting.rst:3
msgid "Hosting"
msgstr "Hospedagem"

#: ../source/guides/section-install.rst:3
#: ../source/specifications/pylock-toml.rst:729
msgid "Installation"
msgstr "Instalação"

#: ../source/guides/single-sourcing-package-version.rst:-1
msgid "0; url=../../discussions/single-source-version/"
msgstr ""

#: ../source/guides/single-sourcing-package-version.rst:6
#, fuzzy
#| msgid "Single-sourcing the package version"
msgid "Redirecting stale single-source package version link..."
msgstr "Mantendo uma única fonte da versão do pacote"

#: ../source/guides/single-sourcing-package-version.rst:8
msgid ""
"If the page doesn't automatically refresh, see :ref:`single-source-version`."
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:7
msgid "Supporting multiple Python versions"
msgstr "Fornecendo suporte a várias versões do Python"

#: ../source/guides/supporting-multiple-python-versions.rst:10
msgid "2014-12-24"
msgstr "2014-12-24"

#: ../source/guides/supporting-multiple-python-versions.rst:36
msgid ""
"In addition to the work required to create a Python package, it is often "
"necessary that the package must be made available on different versions of "
"Python.  Different Python versions may contain different (or renamed) "
"standard library packages, and the changes between Python versions 2.x and 3."
"x include changes in the language syntax."
msgstr ""
"Além do trabalho necessário para criar um pacote Python, geralmente é "
"necessário que o pacote esteja disponível em diferentes versões do Python. "
"Diferentes versões Python podem conter diferentes (ou renomeados) pacotes de "
"biblioteca padrão, e as alterações entre Python versões 2.x e 3.x incluem "
"alterações na sintaxe da linguagem."

#: ../source/guides/supporting-multiple-python-versions.rst:42
msgid ""
"Performed manually, all the testing required to ensure that the package "
"works correctly on all the target Python versions (and OSs!) could be very "
"time-consuming. Fortunately, several tools are available for dealing with "
"this, and these will briefly be discussed here."
msgstr ""
"Executados manualmente, todos os testes necessários para garantir que o "
"pacote funcione corretamente em todas as versões alvo Python (e sistemas "
"operacionais!) podem consumir muito tempo. Felizmente, várias ferramentas "
"estão disponíveis para lidar com isso, e elas serão brevemente discutidas "
"aqui."

#: ../source/guides/supporting-multiple-python-versions.rst:48
msgid "Automated testing and continuous integration"
msgstr "Testes automatizados e integração contínua"

#: ../source/guides/supporting-multiple-python-versions.rst:50
msgid ""
"Several hosted services for automated testing are available. These services "
"will typically monitor your source code repository (e.g. at `GitHub <https://"
"github.com>`_ or `Bitbucket <https://bitbucket.org>`_) and run your "
"project's test suite every time a new commit is made."
msgstr ""
"Vários serviços hospedados para testes automatizados estão disponíveis. "
"Esses serviços normalmente irão monitorar seu repositório de código-fonte "
"(por exemplo, no `GitHub <https://github.com>`_ ou `Bitbucket <https://"
"bitbucket.org>`_) e executar um conjunto de testes do seu projeto toda vez "
"que um novo commit é feito."

#: ../source/guides/supporting-multiple-python-versions.rst:55
msgid ""
"These services also offer facilities to run your project's test suite on "
"*multiple versions of Python*, giving rapid feedback about whether the code "
"will work, without the developer having to perform such tests themselves."
msgstr ""
"Esses serviços também oferecem facilidades para executar o conjunto de "
"testes do seu projeto em *várias versões do Python*, fornecendo um feedback "
"rápido sobre se o código funcionará, sem que o desenvolvedor tenha que "
"realizar esses testes por conta própria."

#: ../source/guides/supporting-multiple-python-versions.rst:59
msgid ""
"Wikipedia has an extensive `comparison <https://en.wikipedia.org/wiki/"
"Comparison_of_continuous_integration_software>`_ of many continuous-"
"integration systems. There are two hosted services which when used in "
"conjunction provide automated testing across Linux, Mac and Windows:"
msgstr ""
"A Wikipédia tem uma extensa `comparação <https://en.wikipedia.org/wiki/"
"Comparison_of_continuous_integration_software>`_ de muitos sistemas de "
"integração contínua. Existem dois serviços hospedados que, quando usados em "
"conjunto, fornecem testes automatizados no Linux, Mac e Windows:"

#: ../source/guides/supporting-multiple-python-versions.rst:65
msgid ""
"`Travis CI <https://travis-ci.org>`_ provides both a Linux and a macOS "
"environment. The Linux environment is Ubuntu 12.04 LTS Server Edition 64 bit "
"while the macOS is 10.9.2 at the time of writing."
msgstr ""
"`Travis CI <https://travis-ci.org>`_ fornece um ambiente Linux e macOS. O "
"ambiente Linux é Ubuntu 12.04 LTS Server Edition de 64 bits, enquanto o "
"macOS é 10.9.2 no momento da escrita."

#: ../source/guides/supporting-multiple-python-versions.rst:68
msgid ""
"`Appveyor <https://www.appveyor.com/>`_ provides a Windows environment "
"(Windows Server 2012)."
msgstr ""
"`Appveyor <https://www.appveyor.com/>`_ fornece um ambiente Windows (Windows "
"Server 2012)."

#: ../source/guides/supporting-multiple-python-versions.rst:79
msgid ""
"Both `Travis CI`_ and Appveyor_ require a `YAML <https://yaml.org>`_-"
"formatted file as specification for the instructions for testing. If any "
"tests fail, the output log for that specific configuration can be inspected."
msgstr ""
"Tanto o `Travis CI`_ quanto o Appveyor_ exigem um arquivo formatado em `YAML "
"<https://yaml.org>`_ como especificação para as instruções de teste. Se "
"algum teste falhar, o log de saída para essa configuração específica pode "
"ser inspecionado."

#: ../source/guides/supporting-multiple-python-versions.rst:84
msgid ""
"For Python projects that are intended to be deployed on both Python 2 and 3 "
"with a single-source strategy, there are a number of options."
msgstr ""
"Para projetos Python que devem ser implantados em Python 2 e 3 com uma "
"estratégia de única fonte, há uma série de opções."

#: ../source/guides/supporting-multiple-python-versions.rst:88
msgid "Tools for single-source Python packages"
msgstr "Ferramentas para pacotes Python de única fonte"

#: ../source/guides/supporting-multiple-python-versions.rst:90
msgid ""
"`six <https://pypi.org/project/six/>`_ is a tool developed by Benjamin "
"Peterson for wrapping over the differences between Python 2 and Python 3. "
"The six_ package has enjoyed widespread use and may be regarded as a "
"reliable way to write a single-source Python module that can be use in both "
"Python 2 and 3. The six_ module can be used from as early as Python 2.5. A "
"tool called `modernize <https://pypi.org/project/modernize>`_, developed by "
"Armin Ronacher, can be used to automatically apply the code modifications "
"provided by six_."
msgstr ""
"`six <https://pypi.org/project/six/>`_ é uma ferramenta desenvolvida por "
"Benjamin Peterson para resolver as diferenças entre Python 2 e Python 3. O "
"pacote six_ desfrutou de uso generalizado e pode ser considerado como uma "
"maneira confiável de escrever um módulo Python de fonte única que pode ser "
"usado em Python 2 e 3. O módulo six_ pode ser usado a partir de Python 2.5. "
"Uma ferramenta chamada `modernize <https://pypi.org/project/modernize>`_, "
"desenvolvida por Armin Ronacher, pode ser usada para aplicar automaticamente "
"as modificações de código fornecidas por six_."

#: ../source/guides/supporting-multiple-python-versions.rst:99
msgid ""
"Similar to six_, `python-future <http://python-future.org/overview.html>`_ "
"is a package that provides a compatibility layer between Python 2 and Python "
"3 source code; however, unlike six_, this package aims to provide "
"interoperability between Python 2 and Python 3 with a language syntax that "
"matches one of the two Python versions: one may use"
msgstr ""
"Semelhante a six_, `python-future <http://python-future.org/overview.html>`_ "
"é um pacote que fornece uma camada de compatibilidade entre o código-fonte "
"de Python 2 e Python 3; no entanto, ao contrário do six_, este pacote visa "
"fornecer interoperabilidade entre Python 2 e Python 3 com uma sintaxe de "
"linguagem que corresponda a uma das duas versões Python: pode-se usar"

#: ../source/guides/supporting-multiple-python-versions.rst:106
msgid "a Python 2 (by syntax) module in a Python 3 project."
msgstr "um módulo Python 2 (por sintaxe) em um projeto Python 3."

#: ../source/guides/supporting-multiple-python-versions.rst:107
msgid "a Python 3 (by syntax) module in a *Python 2* project."
msgstr "um módulo Python 3 (por sintaxe) em um projeto *Python 3*."

#: ../source/guides/supporting-multiple-python-versions.rst:109
msgid ""
"Because of the bi-directionality, python-future_ offers a pathway to "
"converting a Python 2 package to Python 3 syntax module-by-module. However, "
"in contrast to six_, python-future_ is supported only from Python 2.6. "
"Similar to modernize_ for six_, python-future_ comes with two scripts called "
"``futurize`` and ``pasteurize`` that can be applied to either a Python 2 "
"module or a Python 3 module respectively."
msgstr ""
"Por causa da bidirecionalidade, python-future_ oferece um caminho para "
"converter um pacote Python 2 na sintaxe de Python 3, módulo por módulo. No "
"entanto, em contraste com six_, python-future_ é compatível apenas com "
"Python 2.6. Semelhante a modernize_ para six_, python-future_ vem com dois "
"scripts chamados ``futurize`` e ``pasteurize`` que podem ser aplicados a um "
"módulo Python 2 ou um módulo Python 3 respectivamente."

#: ../source/guides/supporting-multiple-python-versions.rst:116
msgid ""
"Use of six_ or python-future_ adds an additional runtime dependency to your "
"package: with python-future_, the ``futurize`` script can be called with the "
"``--stage1`` option to apply only the changes that Python 2.6+ already "
"provides for forward-compatibility to Python 3. Any remaining compatibility "
"problems would require manual changes."
msgstr ""
"O uso de six_ ou python-future_ adiciona uma dependência adicional de tempo "
"de execução ao seu pacote: com python-future_, o script ``futurize`` pode "
"ser chamado com a opção ``--stage1`` para aplicar apenas as mudanças que "
"Python 2.6+ já fornece compatibilidade com versões futuras para Python 3. "
"Quaisquer problemas de compatibilidade remanescentes exigiriam alterações "
"manuais."

#: ../source/guides/supporting-multiple-python-versions.rst:123
msgid "What's in which Python?"
msgstr "O que há em cada Python?"

#: ../source/guides/supporting-multiple-python-versions.rst:125
msgid ""
"Ned Batchelder provides a list of changes in each Python release for `Python "
"2 <https://nedbatchelder.com/blog/201109/whats_in_which_python.html>`__, "
"`Python 3.0-3.3 <https://nedbatchelder.com/blog/201310/"
"whats_in_which_python_3.html>`__ and `Python 3.4-3.6 <https://nedbatchelder."
"com/blog/201803/whats_in_which_python_3436.html>`__. These lists may be used "
"to check whether any changes between Python versions may affect your package."
msgstr ""
"Ned Batchelder fornece uma lista de alterações em cada versão Python para "
"`Python 2 <https://nedbatchelder.com/blog/201109/whats_in_which_python."
"html>`__, `Python 3.0-3.3 <https://nedbatchelder.com/blog/201310/"
"whats_in_which_python_3.html>`__ e `Python 3.4-3.6 <https://nedbatchelder."
"com/blog/201803/whats_in_which_python_3436.html>`__. Essas listas podem ser "
"usadas para verificar se quaisquer mudanças entre as versões Python podem "
"afetar seu pacote."

#: ../source/guides/supporting-windows-using-appveyor.rst:5
msgid "Supporting Windows using Appveyor"
msgstr "Oferece suporte a Windows usando Appveyor"

#: ../source/guides/supporting-windows-using-appveyor.rst:8
msgid "2015-12-03"
msgstr "2015-12-03"

#: ../source/guides/supporting-windows-using-appveyor.rst:10
msgid ""
"This section covers how to use the free `Appveyor`_ continuous integration "
"service to provide Windows support for your project. This includes testing "
"the code on Windows, and building Windows-targeted binaries for projects "
"that use C extensions."
msgstr ""
"Esta seção cobre como usar o serviço gratuito de integração contínua "
"`Appveyor`_ para fornecer suporte a Windows para seu projeto. Isso inclui "
"testar o código no Windows e construir binários direcionados para Windows "
"para projetos que usam extensões C."

#: ../source/guides/supporting-windows-using-appveyor.rst:19
msgid ""
"Many projects are developed on Unix by default, and providing Windows "
"support can be a challenge, because setting up a suitable Windows test "
"environment is non-trivial, and may require buying software licenses."
msgstr ""
"Muitos projetos são desenvolvidos em Unix por padrão, e fornecer suporte ao "
"Windows pode ser um desafio, porque configurar um ambiente de teste adequado "
"no Windows não é trivial e pode exigir a compra de licenças de software."

#: ../source/guides/supporting-windows-using-appveyor.rst:23
msgid ""
"The Appveyor service is a continuous integration service, much like the "
"better-known `Travis`_ service that is commonly used for testing by projects "
"hosted on `GitHub`_. However, unlike Travis, the build workers on Appveyor "
"are Windows hosts and have the necessary compilers installed to build Python "
"extensions."
msgstr ""
"O serviço Appveyor é um serviço de integração contínua, muito parecido com o "
"serviço `Travis`_ mais conhecido que é comumente usado para testes por "
"projetos hospedados no `GitHub`_. No entanto, ao contrário do Travis, os "
"workers de construção no Appveyor são hosts Windows e têm os compiladores "
"necessários instalados para construir extensões Python."

#: ../source/guides/supporting-windows-using-appveyor.rst:29
msgid ""
"Windows users typically do not have access to a C compiler, and therefore "
"are reliant on projects that use C extensions distributing binary wheels on "
"PyPI in order for the distribution to be installable via ``python -m pip "
"install <dist>``. By using Appveyor as a build service (even if not using it "
"for testing) it is possible for projects without a dedicated Windows "
"environment to provide Windows-targeted binaries."
msgstr ""
"Os usuários do Windows normalmente não têm acesso a um compilador C e, "
"portanto, dependem de projetos que usam extensões C distribuindo wheels "
"binárias no PyPI para que a distribuição seja instalável via ``python -m pip "
"install <dist>``. Ao usar o Appveyor como um serviço de construção (mesmo "
"que não seja para teste), é possível para projetos sem um ambiente Windows "
"dedicado fornecer binários direcionados ao Windows."

#: ../source/guides/supporting-windows-using-appveyor.rst:37
msgid "Setting up"
msgstr "Configurando"

#: ../source/guides/supporting-windows-using-appveyor.rst:39
msgid ""
"In order to use Appveyor to build Windows wheels for your project, you must "
"have an account on the service. Instructions on setting up an account are "
"given in `the Appveyor documentation <https://www.appveyor.com/docs/>`__. "
"The free tier of account is perfectly adequate for open source projects."
msgstr ""
"Para usar o Appveyor para construir wheels de Windows para o seu projeto, "
"você deve ter uma conta no serviço. As instruções sobre como configurar uma "
"conta são fornecidas `na documentação do Appveyor <https://www.appveyor.com/"
"docs/>`__. O nível de conta grátis é perfeitamente adequado para projetos de "
"código aberto."

#: ../source/guides/supporting-windows-using-appveyor.rst:44
msgid ""
"Appveyor provides integration with `GitHub`_ and `Bitbucket`_, so as long as "
"your project is hosted on one of those two services, setting up Appveyor "
"integration is straightforward."
msgstr ""
"O Appveyor fornece integração com `GitHub`_ e `Bitbucket`_, portanto, desde "
"que seu projeto esteja hospedado em um desses dois serviços, configurar a "
"integração do Appveyor é simples."

#: ../source/guides/supporting-windows-using-appveyor.rst:48
msgid ""
"Once you have set up your Appveyor account and added your project, Appveyor "
"will automatically build your project each time a commit occurs. This "
"behaviour will be familiar to users of Travis."
msgstr ""
"Depois de configurar sua conta do Appveyor e adicionar seu projeto, o "
"Appveyor construirá automaticamente seu projeto cada vez que ocorrer um "
"commit. Esse comportamento será familiar para os usuários do Travis."

#: ../source/guides/supporting-windows-using-appveyor.rst:53
msgid "Adding Appveyor support to your project"
msgstr "Adicionando suporte a Appveyor ao seu projeto"

#: ../source/guides/supporting-windows-using-appveyor.rst:55
msgid ""
"In order to define how Appveyor should build your project, you need to add "
"an :file:`appveyor.yml` file to your project. The full details of what can "
"be included in the file are covered in the Appveyor documentation. This "
"guide will provide the details necessary to set up wheel builds."
msgstr ""
"Para definir como o Appveyor deve construir seu projeto, você precisa "
"adicionar um arquivo :file:`appveyor.yml` ao seu projeto. Os detalhes "
"completos do que pode ser incluído no arquivo são cobertos na documentação "
"do Appveyor. Este guia fornecerá os detalhes necessários para configurar a "
"configuração dos wheels."

#: ../source/guides/supporting-windows-using-appveyor.rst:60
msgid ""
"Appveyor includes by default all of the compiler toolchains needed to build "
"extensions for Python. For Python 2.7, 3.5+ and 32-bit versions of 3.3 and "
"3.4, the tools work out of the box. But for 64-bit versions of Python 3.3 "
"and 3.4, there is a small amount of additional configuration needed to let "
"distutils know where to find the 64-bit compilers. (From 3.5 onwards, the "
"version of Visual Studio used includes 64-bit compilers with no additional "
"setup)."
msgstr ""
"O Appveyor inclui por padrão todos os conjuntos de ferramentas do compilador "
"necessários para construir extensões para Python. Para Python 2.7, 3.5+ e "
"versões de 32 bits de 3.3 e 3.4, as ferramentas funcionam prontamente. Mas "
"para as versões de 64 bits do Python 3.3 e 3.4, há uma pequena quantidade de "
"configuração adicional necessária para permitir que os distutils saibam onde "
"encontrar os compiladores de 64 bits. (De 3.5 em diante, a versão do Visual "
"Studio usada inclui compiladores de 64 bits sem configuração adicional)."

#: ../source/guides/supporting-windows-using-appveyor.rst:68
msgid "appveyor.yml"
msgstr "appveyor.yml"

#: ../source/guides/supporting-windows-using-appveyor.rst:74
msgid ""
"This file can be downloaded from `here <https://raw.githubusercontent.com/"
"pypa/python-packaging-user-guide/master/source/guides/appveyor-sample/"
"appveyor.yml>`__."
msgstr ""
"Este arquivo pode ser baixado `daqui <https://raw.githubusercontent.com/pypa/"
"python-packaging-user-guide/master/source/guides/appveyor-sample/appveyor."
"yml>`__."

#: ../source/guides/supporting-windows-using-appveyor.rst:76
msgid ""
"The :file:`appveyor.yml` file must be located in the root directory of your "
"project. It is in ``YAML`` format, and consists of a number of sections."
msgstr ""
"O arquivo :file:`appveyor.yml` deve estar localizado no diretório raiz do "
"seu projeto. Está no formato ``YAML`` e consiste em várias seções."

#: ../source/guides/supporting-windows-using-appveyor.rst:79
msgid ""
"The ``environment`` section is the key to defining the Python versions for "
"which your wheels will be created. Appveyor comes with Python 2.6, 2.7, 3.3, "
"3.4 and 3.5 installed, in both 32-bit and 64-bit builds. The example file "
"builds for all of these environments except Python 2.6. Installing for "
"Python 2.6 is more complex, as it does not come with pip included. We don't "
"support 2.6 in this document (as Windows users still using Python 2 are "
"generally able to move to Python 2.7 without too much difficulty)."
msgstr ""
"A seção ``environment`` é a chave para definir as versões Python para as "
"quais seus wheels serão criados. O Appveyor vem com Python 2.6, 2.7, 3.3, "
"3.4 e 3.5 instalados, em compilações de 32 e 64 bits. O arquivo de exemplo é "
"criado para todos esses ambientes, exceto Python 2.6. A instalação do Python "
"2.6 é mais complexa, pois não vem com o pip incluído. Não oferecemos suporte "
"ao 2.6 neste documento (já que os usuários do Windows que ainda usam o "
"Python 2 geralmente são capazes de migrar para o Python 2.7 sem muita "
"dificuldade)."

#: ../source/guides/supporting-windows-using-appveyor.rst:87
msgid ""
"The ``install`` section uses pip to install any additional software that the "
"project may require. The only requirement for building wheels is the "
"``wheel`` project, but projects may wish to customise this code in certain "
"circumstances (for example, to install additional build packages such as "
"``Cython``, or test tools such as ``tox``)."
msgstr ""
"A seção ``install`` usa pip para instalar qualquer software adicional que o "
"projeto possa exigir. O único requisito para a construção de wheels é o "
"projeto ``wheel``, mas os projetos podem desejar personalizar este código em "
"certas circunstâncias (por exemplo, para instalar pacotes de construção "
"adicionais, como ``Cython``, ou ferramentas de teste como ``tox``)."

#: ../source/guides/supporting-windows-using-appveyor.rst:93
msgid ""
"The ``build`` section simply switches off builds - there is no build step "
"needed for Python, unlike languages like ``C#``."
msgstr ""
"A seção ``build`` simplesmente desativa as construções -- não há etapa de "
"construção necessária para Python, ao contrário de linguagens como ``C#``."

#: ../source/guides/supporting-windows-using-appveyor.rst:96
msgid ""
"The main sections that will need to be tailored to your project are "
"``test_script`` and ``after_test``."
msgstr ""
"As principais seções que precisarão ser adaptadas ao seu projeto são "
"``test_script`` e ``after_test``."

#: ../source/guides/supporting-windows-using-appveyor.rst:99
msgid ""
"The ``test_script`` section is where you will run your project's tests. The "
"supplied file runs your test suite using ``setup.py test``. If you are only "
"interested in building wheels, and not in running your tests on Windows, you "
"can replace this section with a dummy command such as ``echo Skipped "
"Tests``. You may wish to use another test tool, such as ``nose`` or :file:"
"`py.test`.  Or you may wish to use a test driver like ``tox`` - however if "
"you are using ``tox`` there are some additional configuration changes you "
"will need to consider, which are described below."
msgstr ""
"A seção ``test_script`` é onde você executará os testes do seu projeto. O "
"arquivo fornecido executa seu conjunto de testes usando ``setup.py test``. "
"Se você está interessado apenas em construir wheels, e não em executar seus "
"testes no Windows, você pode substituir esta seção por um comando fictício, "
"como ``echo Skipped Tests``. Você pode querer usar outra ferramenta de "
"teste, como ``nose`` ou :file:`py.test`. Ou você pode desejar usar um driver "
"de teste como o ``tox`` -- entretanto, se você estiver usando o ``tox``, "
"existem algumas alterações de configuração adicionais que você precisará "
"considerar, que são descritas abaixo."

#: ../source/guides/supporting-windows-using-appveyor.rst:108
msgid ""
"The ``after_test`` runs once your tests have completed, and so is where the "
"wheels should be built. Assuming your project uses the recommended tools "
"(specifically, ``setuptools``) then the ``setup.py bdist_wheel`` command "
"will build your wheels."
msgstr ""
"O ``after_test`` é executado uma vez que seus testes foram concluídos, e "
"então é onde os wheels devem ser construídos. Presumindo que seu projeto usa "
"as ferramentas recomendadas (especificamente, ``setuptools``) então o "
"comando ``setup.py bdist_wheel`` irá construir seus wheels."

#: ../source/guides/supporting-windows-using-appveyor.rst:113
msgid ""
"Note that wheels will only be built if your tests succeed. If you expect "
"your tests to fail on Windows, you can skip them as described above."
msgstr ""
"Observe que os wheels só serão construídos se seus testes forem bem-"
"sucedidos. Se você espera que seus testes falhem no Windows, você pode pulá-"
"los conforme descrito acima."

#: ../source/guides/supporting-windows-using-appveyor.rst:118
msgid "Support script"
msgstr "Script de suporte"

#: ../source/guides/supporting-windows-using-appveyor.rst:120
msgid ""
"The :file:`appveyor.yml` file relies on a single support script, which sets "
"up the environment to use the SDK compiler for 64-bit builds on Python 3.3 "
"and 3.4.  For projects which do not need a compiler, or which don't support "
"3.3 or 3.4 on 64-bit Windows, only the :file:`appveyor.yml` file is needed."
msgstr ""
"O arquivo :file:`appveyor.yml` depende de um único script de suporte, que "
"configura o ambiente para usar o compilador SDK para compilações de 64 bits "
"no Python 3.3 e 3.4. Para projetos que não precisam de um compilador, ou que "
"não oferecem suporte a 3.3 ou 3.4 em Windows 64 bits, apenas o arquivo :file:"
"`appveyor.yml` é necessário."

#: ../source/guides/supporting-windows-using-appveyor.rst:125
msgid ""
"`build.cmd <https://raw.githubusercontent.com/pypa/python-packaging-user-"
"guide/master/source/guides/appveyor-sample/build.cmd>`__ is a Windows batch "
"script that runs a single command in an environment with the appropriate "
"compiler for the selected Python version. All you need to do is to set the "
"single environment variable ``DISTUTILS_USE_SDK`` to a value of ``1`` and "
"the script does the rest. It sets up the SDK needed for 64-bit builds of "
"Python 3.3 or 3.4, so don't set the environment variable for any other "
"builds."
msgstr ""
"`build.cmd <https://raw.githubusercontent.com/pypa/python-packaging-user-"
"guide/master/source/guides/appveyor-sample/build.cmd>`__ é um script em lote "
"do Windows que executa um único comando em um ambiente com o compilador "
"apropriado para a versão Python selecionada. Tudo que você precisa fazer é "
"definir a única variável de ambiente ``DISTUTILS_USE_SDK`` para um valor de "
"``1`` e o script faz o resto. Ele configura o SDK necessário para "
"compilações de 64 bits de Python 3.3 ou 3.4, portanto, não defina a variável "
"de ambiente para quaisquer outras compilações."

#: ../source/guides/supporting-windows-using-appveyor.rst:132
msgid ""
"You can simply download the batch file and include it in your project "
"unchanged."
msgstr ""
"Você pode simplesmente baixar o arquivo em lote e incluí-lo em seu projeto "
"inalterado."

#: ../source/guides/supporting-windows-using-appveyor.rst:136
msgid "Access to the built wheels"
msgstr "Acesso aos wheels construídos"

#: ../source/guides/supporting-windows-using-appveyor.rst:138
msgid ""
"When your build completes, the built wheels will be available from the "
"Appveyor control panel for your project. They can be found by going to the "
"build status page for each build in turn. At the top of the build output "
"there is a series of links, one of which is \"Artifacts\". That page will "
"include a list of links to the wheels for that Python version / "
"architecture. You can download those wheels and upload them to PyPI as part "
"of your release process."
msgstr ""
"Quando sua construção for concluída, os wheels construídos estarão "
"disponíveis no painel de controle do Appveyor para o seu projeto. Eles podem "
"ser encontrados acessando a página de status de construção de cada "
"construção por vez. No topo da saída de construção, há uma série de links, "
"um dos quais é \"Artifacts\" (Artefatos). Essa página incluirá uma lista de "
"links para os wheels dessa versão Python / arquitetura. Você pode baixar "
"esses wheels e enviá-los para PyPI como parte de seu processo de lançamento."

#: ../source/guides/supporting-windows-using-appveyor.rst:149
msgid "Testing with tox"
msgstr "Testando com tox"

#: ../source/guides/supporting-windows-using-appveyor.rst:151
msgid ""
"Many projects use the :doc:`Tox <tox:index>` tool to run their tests. It "
"ensures that tests are run in an isolated environment using the exact files "
"that will be distributed by the project."
msgstr ""
"Muitos projetos usam a ferramenta :doc:`Tox <tox:index>` para executar seus "
"testes. Ele garante que os testes sejam executados em um ambiente isolado "
"usando os arquivos exatos que serão distribuídos pelo projeto."

#: ../source/guides/supporting-windows-using-appveyor.rst:155
msgid ""
"In order to use ``tox`` on Appveyor there are a couple of additional "
"considerations (in actual fact, these issues are not specific to Appveyor, "
"and may well affect other CI systems)."
msgstr ""
"Para usar o ``tox`` no Appveyor, há algumas considerações adicionais (na "
"verdade, esses problemas não são específicos do Appveyor e podem afetar "
"outros sistemas de CI)."

#: ../source/guides/supporting-windows-using-appveyor.rst:159
msgid ""
"By default, ``tox`` only passes a chosen subset of environment variables to "
"the test processes. Because ``distutils`` uses environment variables to "
"control the compiler, this \"test isolation\" feature will cause the tests "
"to use the wrong compiler by default."
msgstr ""
"Por padrão, ``tox`` apenas passa um subconjunto escolhido de variáveis de "
"ambiente para os processos de teste. Como ``distutils`` usa variáveis de "
"ambiente para controlar o compilador, este recurso de \"isolamento de "
"teste\" fará com que os testes usem o compilador errado por padrão."

#: ../source/guides/supporting-windows-using-appveyor.rst:164
msgid ""
"To force ``tox`` to pass the necessary environment variables to the "
"subprocess, you need to set the ``tox`` configuration option ``passenv`` to "
"list the additional environment variables to be passed to the subprocess. "
"For the SDK compilers, you need"
msgstr ""
"Para forçar o ``tox`` passar as variáveis de ambiente necessárias para o "
"subprocesso, você precisa definir a opção de configuração ``passenv`` do "
"``tox`` para listar as variáveis de ambiente adicionais a serem passadas "
"para o subprocesso. Para os compiladores SDK, você precisa"

#: ../source/guides/supporting-windows-using-appveyor.rst:169
msgid "``DISTUTILS_USE_SDK``"
msgstr "``DISTUTILS_USE_SDK``"

#: ../source/guides/supporting-windows-using-appveyor.rst:170
msgid "``MSSdk``"
msgstr "``MSSdk``"

#: ../source/guides/supporting-windows-using-appveyor.rst:171
msgid "``INCLUDE``"
msgstr "``INCLUDE``"

#: ../source/guides/supporting-windows-using-appveyor.rst:172
msgid "``LIB``"
msgstr "``LIB``"

#: ../source/guides/supporting-windows-using-appveyor.rst:174
msgid ""
"The ``passenv`` option can be set in your :file:`tox.ini`, or if you prefer "
"to avoid adding Windows-specific settings to your general project files, it "
"can be set by setting the ``TOX_TESTENV_PASSENV`` environment variable. The "
"supplied :file:`build.cmd` script does this by default whenever "
"``DISTUTILS_USE_SDK`` is set."
msgstr ""
"A opção ``passenv`` pode ser definida em seu :file:`tox.ini`, ou se você "
"preferir evitar adicionar configurações específicas do Windows aos seus "
"arquivos de projeto gerais, pode ser definida configurando a variável de "
"ambiente ``TOX_TESTENV_PASSENV``. O script :file:`build.cmd` fornecido faz "
"isso por padrão sempre que ``DISTUTILS_USE_SDK`` é definida."

#: ../source/guides/supporting-windows-using-appveyor.rst:180
msgid ""
"When used interactively, ``tox`` allows you to run your tests against "
"multiple environments (often, this means multiple Python versions). This "
"feature is not as useful in a CI environment like Travis or Appveyor, where "
"all tests are run in isolated environments for each configuration. As a "
"result, projects often supply an argument ``-e ENVNAME`` to ``tox`` to "
"specify which environment to use (there are default environments for most "
"versions of Python)."
msgstr ""
"Quando usado interativamente, ``tox`` permite que você execute seus testes "
"em vários ambientes (frequentemente, isso significa várias versões do "
"Python). Este recurso não é tão útil em um ambiente de CI como Travis ou "
"Appveyor, onde todos os testes são executados em ambientes isolados para "
"cada configuração. Como resultado, os projetos geralmente fornecem um "
"argumento ``-e NOMEENV`` para ``tox`` para especificar qual ambiente usar "
"(há ambientes padrão para a maioria das versões do Python)."

#: ../source/guides/supporting-windows-using-appveyor.rst:187
msgid ""
"However, this does *not* work well with a Windows CI system like Appveyor, "
"where there are (for example) two installations of Python 3.4 (32-bit and 64-"
"bit) available, but only one ``py34`` environment in ``tox``."
msgstr ""
"No entanto, isso *não* funciona bem com um sistema de CI no Windows como o "
"Appveyor, onde há (por exemplo) duas instalações de Python 3.4 (32 bits e 64 "
"bits) disponíveis, mas apenas um ambiente ``py34`` no ``tox``."

#: ../source/guides/supporting-windows-using-appveyor.rst:191
msgid ""
"In order to run tests using ``tox``, therefore, projects should probably use "
"the default ``py`` environment in ``tox``, which uses the Python interpreter "
"that was used to run ``tox``. This will ensure that when Appveyor runs the "
"tests, they will be run with the configured interpreter."
msgstr ""
"Para executar testes usando o ``tox``, portanto, os projetos provavelmente "
"devem usar o ambiente padrão ``py`` no ``tox``, que usa o interpretador "
"Python que foi usado para executar ``tox`` . Isso garantirá que, quando o "
"Appveyor executar os testes, eles serão executados com o interpretador "
"configurado."

#: ../source/guides/supporting-windows-using-appveyor.rst:196
msgid ""
"In order to support running under the ``py`` environment, it is possible "
"that projects with complex ``tox`` configurations might need to modify "
"their :file:`tox.ini` file. Doing so is, however, outside the scope of this "
"document."
msgstr ""
"Para oferecer suporte à execução no ambiente ``py``, é possível que projetos "
"com configurações complexas de ``tox`` precisem modificar seu arquivo :file:"
"`tox.ini`. Fazer isso está, no entanto, fora do escopo deste documento."

#: ../source/guides/supporting-windows-using-appveyor.rst:202
msgid "Automatically uploading wheels"
msgstr "Enviando automaticamente wheels"

#: ../source/guides/supporting-windows-using-appveyor.rst:204
msgid ""
"It is possible to request Appveyor to automatically upload wheels. There is "
"a ``deployment`` step available in :file:`appveyor.yml` that can be used to "
"(for example) copy the built artifacts to a FTP site, or an Amazon S3 "
"instance. Documentation on how to do this is included in the Appveyor guides."
msgstr ""
"É possível solicitar que o Appveyor envie automaticamente os wheels. Há uma "
"etapa ``deployment`` disponível no :file:`appveyor.yml` que pode ser usada "
"para, por exemplo, copiar os artefatos construídos para um site FTP ou uma "
"instância do Amazon S3. A documentação sobre como fazer isso está incluída "
"nos guias do Appveyor."

#: ../source/guides/supporting-windows-using-appveyor.rst:209
msgid ""
"Alternatively, it would be possible to add a ``twine upload`` step to the "
"build.  The supplied :file:`appveyor.yml` does not do this, as it is not "
"clear that uploading new wheels after every commit is desirable (although "
"some projects may wish to do this)."
msgstr ""
"Alternativamente, seria possível adicionar um passo ``twine upload`` à "
"construção. O :file:`appveyor.yml` fornecido não faz isso, pois não está "
"claro se é desejável enviar novos wheels após cada commit (embora alguns "
"projetos possam desejar fazer isso)."

#: ../source/guides/supporting-windows-using-appveyor.rst:215
msgid "External dependencies"
msgstr "Dependências externas"

#: ../source/guides/supporting-windows-using-appveyor.rst:217
msgid ""
"The supplied scripts will successfully build any distribution that does not "
"rely on 3rd party external libraries for the build."
msgstr ""
"Os scripts fornecidos construirão com sucesso qualquer distribuição que não "
"dependa de bibliotecas externas de terceiros para a construção."

#: ../source/guides/supporting-windows-using-appveyor.rst:220
msgid ""
"It is possible to add steps to the :file:`appveyor.yml` configuration "
"(typically in the \"install\" section) to download and/or build external "
"libraries needed by the distribution. And if needed, it is possible to add "
"extra configuration for the build to supply the location of these libraries "
"to the compiler. However, this level of configuration is beyond the scope of "
"this document."
msgstr ""
"É possível adicionar etapas à configuração :file:`appveyor.yml` (normalmente "
"na seção \"install\") para baixar e/ou construir bibliotecas externas "
"necessárias para a distribuição. E se necessário, é possível adicionar "
"configuração extra para a construção para fornecer a localização dessas "
"bibliotecas para o compilador. No entanto, esse nível de configuração está "
"além do escopo deste documento."

#: ../source/guides/supporting-windows-using-appveyor.rst:229
msgid "Support scripts"
msgstr "Scripts de suporte"

#: ../source/guides/supporting-windows-using-appveyor.rst:231
msgid "For reference, the SDK setup support script is listed here:"
msgstr ""
"Para referência, o script de suporte de configuração do SDK está listado "
"aqui:"

#: ../source/guides/supporting-windows-using-appveyor.rst:233
msgid "``appveyor-sample/build.cmd``"
msgstr "``appveyor-sample/build.cmd``"

#: ../source/guides/tool-recommendations.rst:5
msgid "Tool recommendations"
msgstr "Recomendações de ferramentas"

#: ../source/guides/tool-recommendations.rst:7
msgid ""
"The Python packaging landscape consists of many different tools. For many "
"tasks, the :term:`Python Packaging Authority <Python Packaging Authority "
"(PyPA)>` (PyPA, the working group which encompasses many packaging tools and "
"maintains this guide) purposefully does not make a blanket recommendation; "
"for example, the reason there are many build backends is that the landscape "
"was opened up in order to enable the development of new backends serving "
"certain users' needs better than the previously unique backend, setuptools. "
"This guide does point to some tools that are widely recognized, and also "
"makes some recommendations of tools that you should *not* use because they "
"are deprecated or insecure."
msgstr ""
"O cenário de empacotamento do Python consiste em muitas ferramentas "
"diferentes. Para muitas tarefas, o :term:`Python Packaging Authority <Python "
"Packaging Authority (PyPA)>` (PyPA, o grupo de trabalho que engloba muitas "
"ferramentas de empacotamento e mantém este guia) propositalmente não faz uma "
"recomendação geral; por exemplo, a razão pela qual existem muitos backends "
"de construção é que o cenário foi aberto para permitir o desenvolvimento de "
"novos backends que atendam melhor às necessidades de determinados usuários "
"do que o backend anteriormente exclusivo, setuptools. Este guia aponta "
"algumas ferramentas que são amplamente reconhecidas e também faz algumas "
"recomendações de ferramentas que você *não* deve usar porque estão "
"descontinuadas ou são inseguras."

#: ../source/guides/tool-recommendations.rst:20
msgid "Virtual environments"
msgstr "Ambientes virtuais"

#: ../source/guides/tool-recommendations.rst:22
msgid ""
"The standard tools to create and use virtual environments manually are :ref:"
"`virtualenv` (PyPA project) and :doc:`venv <python:library/venv>` (part of "
"the Python standard library, though missing some features of virtualenv)."
msgstr ""
"As ferramentas padrão para criar e usar ambientes virtuais manualmente são :"
"ref:`virtualenv` (projeto PyPA) e :doc:`venv <python:library/venv>` (parte "
"da biblioteca padrão Python, embora falte alguns recursos do virtualenv) ."

#: ../source/guides/tool-recommendations.rst:28
msgid "Installing packages"
msgstr "Instalando pacotes"

#: ../source/guides/tool-recommendations.rst:30
msgid ""
":ref:`Pip` is the standard tool to install packages from :term:`PyPI <Python "
"Package Index (PyPI)>`. You may want to read pip's recommendations for :doc:"
"`secure installs <pip:topics/secure-installs>`. Pip is available by default "
"in most Python installations through the standard library package :doc:"
"`ensurepip <python:library/ensurepip>`."
msgstr ""
":ref:`Pip` é a ferramenta padrão para instalar pacotes do :term:`PyPI "
"<Python Package Index (PyPI)>`. Você pode querer ler as recomendações do pip "
"para obter :doc:`instalações seguras <pip:topics/secure-installs>`. Pip está "
"disponível por padrão na maioria das instalações do Python através do pacote "
"de biblioteca padrão :doc:`ensurepip <python:library/ensurepip>`."

#: ../source/guides/tool-recommendations.rst:36
msgid ""
"Alternatively, consider :ref:`pipx` for the specific use case of installing "
"Python applications that are distributed through PyPI and run from the "
"command line. Pipx is a wrapper around pip and venv that installs each "
"application into a dedicated virtual environment. This avoids conflicts "
"between the dependencies of different applications, and also with system-"
"wide applications making use of the same Python interpreter (especially on "
"Linux)."
msgstr ""
"Alternativamente, considere :ref:`pipx` para o caso de uso específico de "
"instalação de aplicativos Python que são distribuídos por meio de PyPI e "
"executados a partir da linha de comando. Pipx é um wrapper em torno de pip e "
"venv que instala cada aplicativo em um ambiente virtual dedicado. Isso evita "
"conflitos entre as dependências de diferentes aplicações, e também com "
"aplicações de todo o sistema que utilizam o mesmo interpretador Python "
"(especialmente no Linux)."

#: ../source/guides/tool-recommendations.rst:43
msgid ""
"For scientific software specifically, consider :ref:`Conda` or :ref:`Spack`."
msgstr ""
"Especificamente para software científico, considere :ref:`Conda` ou :ref:"
"`Spack`."

#: ../source/guides/tool-recommendations.rst:45
msgid "Write a \"pip vs. Conda\" comparison, here or in a new discussion."
msgstr ""
"Escreva uma comparação \"pip vs. Conda\", aqui ou em uma nova discussão."

#: ../source/guides/tool-recommendations.rst:47
msgid ""
"Do **not** use ``easy_install`` (part of :ref:`setuptools`), which is "
"deprecated in favor of pip (see :ref:`pip vs easy_install` for details). "
"Likewise, do **not** use ``python setup.py install`` or ``python setup.py "
"develop``, which are also deprecated (see :ref:`setup-py-deprecated` for "
"background and :ref:`modernize-setup-py-project` for migration advice)."
msgstr ""
"**Não** use ``easy_install`` (parte de :ref:`setuptools`), que foi "
"descontinuado em favor do pip (veja :ref:`pip vs easy_install` para "
"detalhes). Da mesma forma, **não** use ``python setup.py install`` ou "
"``python setup.py develop``, que também foram descontinuados (veja :ref:"
"`setup-py-deprecated` para aprofundamento e :ref:`modernize-setup-py-"
"project` para aconselhamento sobre migração)."

#: ../source/guides/tool-recommendations.rst:55
msgid "Lock files"
msgstr "Arquivos de bloqueio"

#: ../source/guides/tool-recommendations.rst:57
msgid ""
":ref:`pip-tools` and :ref:`Pipenv` are two recognized tools to create lock "
"files, which contain the exact versions of all packages installed into an "
"environment, for reproducibility purposes."
msgstr ""
":ref:`pip-tools` e :ref:`Pipenv` são duas ferramentas reconhecidas para "
"criar arquivos de bloqueio, que contêm as versões exatas de todos os pacotes "
"instalados em um ambiente, para fins de reprodutibilidade."

#: ../source/guides/tool-recommendations.rst:63
msgid "Build backends"
msgstr "Backends de construção"

#: ../source/guides/tool-recommendations.rst:67
msgid ""
"Please, remember: this document does not seek to steer the reader towards a "
"particular tool, only to enumerate common tools. Different use cases often "
"need specialized workflows."
msgstr ""
"Por favor, lembre-se: este documento não procura orientar o leitor para uma "
"ferramenta específica, apenas enumerar ferramentas comuns. Diferentes casos "
"de uso geralmente precisam de fluxos de trabalho especializados."

#: ../source/guides/tool-recommendations.rst:71
msgid ""
"Popular :term:`build backends <build backend>` for pure-Python packages "
"include, in alphabetical order:"
msgstr ""

#: ../source/guides/tool-recommendations.rst:74
msgid ""
":doc:`Flit-core <flit:pyproject_toml>` -- developed with but separate from :"
"ref:`Flit`. A minimal and opinionated build backend. It does not support "
"plugins."
msgstr ""

#: ../source/guides/tool-recommendations.rst:77
msgid ""
"Hatchling_ -- developed with but separate from :ref:`Hatch`. Supports "
"plugins."
msgstr ""

#: ../source/guides/tool-recommendations.rst:79
msgid ""
"PDM-backend_ -- developed with but separate from :ref:`PDM`. Supports "
"plugins."
msgstr ""

#: ../source/guides/tool-recommendations.rst:81
msgid ""
"Poetry-core_ -- developed with but separate from :ref:`Poetry`. Supports "
"plugins."
msgstr ""

#: ../source/guides/tool-recommendations.rst:84
msgid ""
"Unlike other backends on this list, Poetry-core does not support the "
"standard :ref:`[project] table <writing-pyproject-toml>` (it uses a "
"different format, in the ``[tool.poetry]`` table)."
msgstr ""

#: ../source/guides/tool-recommendations.rst:88
msgid ""
":ref:`setuptools`, which used to be the only build backend. Supports plugins."
msgstr ""

#: ../source/guides/tool-recommendations.rst:92
msgid ""
"If you use setuptools, please be aware that some features that predate "
"standardisation efforts are now deprecated and only *temporarily kept* for "
"compatibility."
msgstr ""

#: ../source/guides/tool-recommendations.rst:96
msgid ""
"In particular, do **not** use direct ``python setup.py`` invocations. On the "
"other hand, configuring setuptools with a :file:`setup.py` file is still "
"fully supported, although it is recommended to use the modern :ref:"
"`[project] table in pyproject.toml <writing-pyproject-toml>` (or :file:"
"`setup.cfg`) whenever possible and keep :file:`setup.py` only if "
"programmatic configuration is needed. See :ref:`setup-py-deprecated`."
msgstr ""

#: ../source/guides/tool-recommendations.rst:103
msgid ""
"Other examples of deprecated features you should **not** use include the "
"``setup_requires`` argument to ``setup()`` (use the :ref:`[build-system] "
"table <pyproject-guide-build-system-table>` in :file:`pyproject.toml` "
"instead), and the ``easy_install`` command (cf. :ref:`pip vs easy_install`)."
msgstr ""

#: ../source/guides/tool-recommendations.rst:108
msgid ""
"Do **not** use :ref:`distutils`, which is deprecated, and has been removed "
"from the standard library in Python 3.12, although it still remains "
"available from setuptools."
msgstr ""

#: ../source/guides/tool-recommendations.rst:112
msgid ""
"For packages with :term:`extension modules <extension module>`, it is best "
"to use a build system with dedicated support for the language the extension "
"is written in, for example:"
msgstr ""

#: ../source/guides/tool-recommendations.rst:116
msgid ""
":ref:`setuptools` -- natively supports C and C++ (with third-party plugins "
"for Go and Rust),"
msgstr ""

#: ../source/guides/tool-recommendations.rst:117
msgid ""
":ref:`meson-python` -- C, C++, Fortran, Rust, and other languages supported "
"by Meson,"
msgstr ""

#: ../source/guides/tool-recommendations.rst:118
msgid ""
":ref:`scikit-build-core` -- C, C++, Fortran, and other languages supported "
"by CMake,"
msgstr ""

#: ../source/guides/tool-recommendations.rst:119
msgid ":ref:`maturin` -- Rust, via Cargo."
msgstr ""

#: ../source/guides/tool-recommendations.rst:123
#, fuzzy
msgid "Building distributions"
msgstr "Distribuição Construída"

#: ../source/guides/tool-recommendations.rst:125
msgid ""
"The standard tool to build :term:`source distributions <source distribution "
"(or \"sdist\")>` and :term:`wheels <wheel>` for uploading to PyPI is :ref:"
"`build`.  It will invoke whichever build backend you :ref:`declared "
"<pyproject-guide-build-system-table>` in :file:`pyproject.toml`."
msgstr ""

#: ../source/guides/tool-recommendations.rst:130
msgid ""
"Do **not** use ``python setup.py sdist`` and ``python setup.py bdist_wheel`` "
"for this task. All direct invocations of :file:`setup.py` are :ref:"
"`deprecated <setup-py-deprecated>`."
msgstr ""

#: ../source/guides/tool-recommendations.rst:134
#, fuzzy
msgid ""
"If you have :term:`extension modules <extension module>` and want to "
"distribute wheels for multiple platforms, use :ref:`cibuildwheel` as part of "
"your CI setup to build distributable wheels."
msgstr ""
"Se você tem extensões binárias e deseja distribuir wheels para várias "
"plataformas, use :ref:`cibuildwheel` como parte de sua configuração de CI "
"para construir wheels distribuíveis."

#: ../source/guides/tool-recommendations.rst:140
#, fuzzy
msgid "Uploading to PyPI"
msgstr "Enviando seu Projeto para PyPI"

#: ../source/guides/tool-recommendations.rst:142
msgid ""
"For projects hosted on or published via supported CI/CD platforms, it is "
"recommended to use the :ref:`Trusted Publishing <trusted-publishing>`, which "
"allows the package to be securely uploaded to PyPI from a CI/CD workflow "
"without a manually configured API token."
msgstr ""

#: ../source/guides/tool-recommendations.rst:147
msgid ""
"As of November 2024, PyPI supports the following platforms as Trusted "
"Publishing providers:"
msgstr ""

#: ../source/guides/tool-recommendations.rst:150
msgid "GitHub Actions (on ``https://github.com``)"
msgstr ""

#: ../source/guides/tool-recommendations.rst:151
msgid "GitLab CI/CD (on ``https://gitlab.com``)"
msgstr ""

#: ../source/guides/tool-recommendations.rst:152
msgid "ActiveState"
msgstr ""

#: ../source/guides/tool-recommendations.rst:153
msgid "Google Cloud"
msgstr ""

#: ../source/guides/tool-recommendations.rst:155
msgid ""
"The other available method is to upload the package manually using :ref:"
"`twine`."
msgstr ""

#: ../source/guides/tool-recommendations.rst:159
msgid ""
"**Never** use ``python setup.py upload`` for this task. In addition to "
"being :ref:`deprecated <setup-py-deprecated>`, it is insecure."
msgstr ""

#: ../source/guides/tool-recommendations.rst:164
msgid "Workflow tools"
msgstr ""

#: ../source/guides/tool-recommendations.rst:166
msgid ""
"These tools are environment managers that automatically manage virtual "
"environments for a project. They also act as \"task runners\", allowing you "
"to define and invoke tasks such as running tests, compiling documentation, "
"regenerating some files, etc. Some of them provide shortcuts for building "
"distributions and uploading to PyPI, and some support lock files for "
"applications. They often call the tools mentioned above under the hood. In "
"alphabetical order:"
msgstr ""

#: ../source/guides/tool-recommendations.rst:174
#, fuzzy
msgid ":ref:`Flit`,"
msgstr ":ref:`pip`"

#: ../source/guides/tool-recommendations.rst:175
#, fuzzy
msgid ":ref:`Hatch`,"
msgstr "pip, :ref:`bandersnatch`"

#: ../source/guides/tool-recommendations.rst:176
#, fuzzy
msgid ":doc:`nox <nox:index>`,"
msgstr ":doc:`Documentação <conda:index>`"

#: ../source/guides/tool-recommendations.rst:177
#, fuzzy
msgid ":ref:`PDM`,"
msgstr ":ref:`pip`"

#: ../source/guides/tool-recommendations.rst:178
#, fuzzy
msgid ":ref:`Pipenv`,"
msgstr ":ref:`pip`"

#: ../source/guides/tool-recommendations.rst:179
#, fuzzy
msgid ":ref:`Poetry`,"
msgstr ":ref:`pip`"

#: ../source/guides/tool-recommendations.rst:180
#, fuzzy
msgid ":doc:`tox <tox:index>`."
msgstr ":doc:`Documentação <conda:index>`"

#: ../source/guides/using-manifest-in.rst:5
msgid "Including files in source distributions with ``MANIFEST.in``"
msgstr ""
"Incluindo arquivos em distribuições de código-fonte com ``MANIFEST.in``"

#: ../source/guides/using-manifest-in.rst:7
msgid ""
"The information on this page has moved to :doc:`setuptools:userguide/"
"miscellaneous` in the setuptools documentation."
msgstr ""
"As informações nesta página foram movidas para :doc:`setuptools:userguide/"
"miscellaneous` na documentação do setuptools."

#: ../source/guides/using-testpypi.rst:7
msgid ""
"``TestPyPI`` is a separate instance of the :term:`Python Package Index "
"(PyPI)` that allows you to try out the distribution tools and process "
"without worrying about affecting the real index. TestPyPI is hosted at `test."
"pypi.org <https://test.pypi.org>`_"
msgstr ""
"``Test PyPI`` é uma instância separada do :term:`Python Package Index "
"(PyPI)` que permite que você experimente as ferramentas de distribuição e o "
"processo sem se preocupar em afetar o índice real. O TestPyPI está hospedado "
"em `test.pypi.org <https://test.pypi.org>`_"

#: ../source/guides/using-testpypi.rst:13
msgid "Registering your account"
msgstr "Registrando sua conta"

#: ../source/guides/using-testpypi.rst:15
msgid ""
"Because TestPyPI has a separate database from the live PyPI, you'll need a "
"separate user account specifically for TestPyPI. Go to https://test.pypi.org/"
"account/register/ to register your account."
msgstr ""
"Como o TestPyPI tem um banco de dados separado do PyPI real, você precisará "
"de uma conta de usuário separada especificamente para o TestPyPI. Vá para "
"https://test.pypi.org/account/register/ para registrar sua conta."

#: ../source/guides/using-testpypi.rst:19
msgid ""
"The database for TestPyPI may be periodically pruned, so it is not unusual "
"for user accounts to be deleted."
msgstr ""
"O banco de dados do TestPyPI pode ser apagado periodicamente, portanto, não "
"é incomum que contas de usuário sejam excluídas."

#: ../source/guides/using-testpypi.rst:24
msgid "Using TestPyPI with Twine"
msgstr "Usando TestPyPI com Twine"

#: ../source/guides/using-testpypi.rst:26
msgid ""
"You can upload your distributions to TestPyPI using :ref:`twine` by "
"specifying the ``--repository`` flag:"
msgstr ""
"Você pode enviar suas distribuições para TestPyPI usando :ref:`twine` "
"especificando o sinalizador ``--repository``:"

#: ../source/guides/using-testpypi.rst:33
msgid ""
"You can see if your package has successfully uploaded by navigating to the "
"URL ``https://test.pypi.org/project/<sampleproject>`` where "
"``sampleproject`` is the name of your project that you uploaded. It may take "
"a minute or two for your project to appear on the site."
msgstr ""
"Você pode ver se o seu pacote foi enviado com sucesso navegando para a URL "
"``https://test.pypi.org/project/<projetoexemplo>`` onde ``projetoexemplo`` é "
"o nome do seu projeto que você enviou. O seu projeto pode demorar um ou dois "
"minutos para aparecer no site."

#: ../source/guides/using-testpypi.rst:39
msgid "Using TestPyPI with pip"
msgstr "Usando TestPyPI com pip"

#: ../source/guides/using-testpypi.rst:41
msgid ""
"You can tell :ref:`pip` to download packages from TestPyPI instead of PyPI "
"by specifying the ``--index-url`` flag:"
msgstr ""
"Você pode dizer ao :ref:`pip` para baixar pacotes do TestPyPI, em vez do "
"PyPI, especificando o sinalizador ``--index-url``:"

#: ../source/guides/using-testpypi.rst:56
msgid ""
"If you want to allow pip to also download packages from PyPI, you can "
"specify ``--extra-index-url`` to point to PyPI. This is useful when the "
"package you're testing has dependencies:"
msgstr ""
"Se você quiser permitir que pip também baixe outros pacotes do PyPI, você "
"pode especificar ``--extra-index-url`` para apontar para PyPI. Isso é útil "
"quando o pacote que você está testando tem dependências:"

#: ../source/guides/using-testpypi.rst:73
msgid "Setting up TestPyPI in :file:`.pypirc`"
msgstr "Configurando TestPyPI no :file:`.pypirc`"

#: ../source/guides/using-testpypi.rst:75
msgid ""
"If you want to avoid being prompted for your username and password every "
"time, you can configure TestPyPI in your :file:`$HOME/.pypirc`:"
msgstr ""
"Se você quiser evitar ser solicitado a informar seu nome de usuário e senha "
"toda vez, você pode configurar o TestPyPI em seu :file:`$HOME/.pypirc`:"

#: ../source/guides/writing-pyproject-toml.rst:5
msgid "Writing your ``pyproject.toml``"
msgstr "Escrevendo seu ``pyproject.toml``"

#: ../source/guides/writing-pyproject-toml.rst:7
msgid ""
"``pyproject.toml`` is a configuration file used by packaging tools, as well "
"as other tools such as linters, type checkers, etc. There are three possible "
"TOML tables in this file."
msgstr ""
"``pyproject.toml`` é um arquivo de configuração usado por ferramentas de "
"empacotamento, bem como outras ferramentas como linters, verificadores de "
"tipo, etc. Existem três tabelas TOML possíveis neste arquivo."

#: ../source/guides/writing-pyproject-toml.rst:11
msgid ""
"The ``[build-system]`` table is **strongly recommended**. It allows you to "
"declare which :term:`build backend` you use and which other dependencies are "
"needed to build your project."
msgstr ""
"A tabela ``[build-system]`` é **altamente recomendada**. Ela permite que "
"você declare qual :term:`backend de construção` você usa e quais outras "
"dependências são necessárias para construir seu projeto."

#: ../source/guides/writing-pyproject-toml.rst:15
msgid ""
"The ``[project]`` table is the format that most build backends use to "
"specify your project's basic metadata, such as the dependencies, your name, "
"etc."
msgstr ""
"A tabela ``[project]`` é o formato que a maioria dos backends de construção "
"usa para especificar os metadados básicos do seu projeto, como as "
"dependências, seu nome, etc."

#: ../source/guides/writing-pyproject-toml.rst:18
msgid ""
"The ``[tool]`` table has tool-specific subtables, e.g., ``[tool.hatch]``, "
"``[tool.black]``, ``[tool.mypy]``. We only touch upon this table here "
"because its contents are defined by each tool. Consult the particular tool's "
"documentation to know what it can contain."
msgstr ""
"A tabela ``[tool]`` possui subtabelas específicas da ferramenta, por "
"exemplo, ``[tool.hatch]``, ``[tool.black]``, ``[tool.mypy]``. Tocamos aqui "
"apenas nesta tabela porque seu conteúdo é definido por cada ferramenta. "
"Consulte a documentação da ferramenta específica para saber o que ela pode "
"conter."

#: ../source/guides/writing-pyproject-toml.rst:25
msgid ""
"The ``[build-system]`` table should always be present, regardless of which "
"build backend you use (``[build-system]`` *defines* the build tool you use)."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:29
msgid ""
"On the other hand, the ``[project]`` table is understood by *most* build "
"backends, but some build backends use a different format."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:32
#, fuzzy
#| msgid ""
#| "At the time of writing this (November 2023), Poetry_ is a notable build "
#| "backend that does not use the ``[project]`` table (it uses the ``[tool."
#| "poetry]`` table instead)."
msgid ""
"A notable exception is Poetry_, which before version 2.0 (released January "
"5, 2025) did not use the ``[project]`` table, it used the ``[tool.poetry]`` "
"table instead. With version 2.0, it supports both. Also, the setuptools_ "
"build backend supports both the ``[project]`` table, and the older format in "
"``setup.cfg`` or ``setup.py``."
msgstr ""
"No momento em que este artigo foi escrito (novembro de 2023), Poetry_ era um "
"backend de construção notável que não usava a tabela ``[project]`` (em vez "
"disso, ele usava a tabela ``[tool.poetry]``)."

#: ../source/guides/writing-pyproject-toml.rst:38
#, fuzzy
#| msgid ""
#| "Also, the setuptools_ build backend supports both the ``[project]`` "
#| "table, and the older format in ``setup.cfg`` or ``setup.py``. For new "
#| "projects, it is recommended to use the ``[project]`` table, and keep "
#| "``setup.py`` only if some programmatic configuration is needed (such as "
#| "building C extensions), but the ``setup.cfg`` and ``setup.py`` formats "
#| "are still valid. See :ref:`setup-py-deprecated`."
msgid ""
"For new projects, use the ``[project]`` table, and keep ``setup.py`` only if "
"some programmatic configuration is needed (such as building C extensions), "
"but the ``setup.cfg`` and ``setup.py`` formats are still valid. See :ref:"
"`setup-py-deprecated`."
msgstr ""
"Além disso, o backend de construção do setuptools_ oferece suporte tanto à "
"tabela ``[project]``, quanto o formato antigo em ``setup.cfg`` ou ``setup."
"py``. Para novos projetos, é recomendado usar a tabela ``[project]``, e "
"manter ``setup.py`` apenas se alguma configuração programática for "
"necessária (como construir extensões C), mas os formatos ``setup.cfg`` e "
"``setup.py`` ainda são válidos. Veja :ref:`setup-py-deprecated`."

#: ../source/guides/writing-pyproject-toml.rst:47
msgid "Declaring the build backend"
msgstr "Declarando o backend de construção"

#: ../source/guides/writing-pyproject-toml.rst:49
msgid ""
"The ``[build-system]`` table contains a ``build-backend`` key, which "
"specifies the build backend to be used. It also contains a ``requires`` key, "
"which is a list of dependencies needed to build the project -- this is "
"typically just the build backend package, but it may also contain additional "
"dependencies. You can also constrain the versions, e.g., ``requires = "
"[\"setuptools >= 61.0\"]``."
msgstr ""
"A tabela ``[build-system]`` contém uma chave ``build-backend``, que "
"especifica o backend de construção a ser usado. Ele também contém uma chave "
"``requires``, que é uma lista de dependências necessárias para construir o "
"projeto -- normalmente é apenas o pacote backend de construção, mas também "
"pode conter dependências adicionais. Você também pode restringir as versões, "
"por exemplo, ``requires = [\"setuptools >= 61.0\"]``."

#: ../source/guides/writing-pyproject-toml.rst:55
msgid ""
"Usually, you'll just copy what your build backend's documentation suggests "
"(after :ref:`choosing your build backend <choosing-build-backend>`). Here "
"are the values for some common build backends:"
msgstr ""
"Normalmente, você apenas copiará o que a documentação do seu backend de "
"construção sugere (após :ref:`escolher seu backend de construção <choosing-"
"build-backend>`). Aqui estão os valores para alguns backends de construção "
"comuns:"

#: ../source/guides/writing-pyproject-toml.rst:63
msgid "Static vs. dynamic metadata"
msgstr "Metadados estáticos vs dinâmicos"

#: ../source/guides/writing-pyproject-toml.rst:65
msgid "The rest of this guide is devoted to the ``[project]`` table."
msgstr "O resto deste guia é dedicado à tabela ``[project]``."

#: ../source/guides/writing-pyproject-toml.rst:67
msgid ""
"Most of the time, you will directly write the value of a ``[project]`` "
"field. For example: ``requires-python = \">= 3.8\"``, or ``version = "
"\"1.0\"``."
msgstr ""
"Na maioria das vezes, você escreverá diretamente o valor de um campo "
"``[project]``. Por exemplo: ``requires-python = \">= 3.8\"``, ou ``version = "
"\"1.0\"``."

#: ../source/guides/writing-pyproject-toml.rst:71
msgid ""
"However, in some cases, it is useful to let your build backend compute the "
"metadata for you. For example: many build backends can read the version from "
"a ``__version__`` attribute in your code, a Git tag, or similar. In such "
"cases, you should mark the field as dynamic using, e.g.,"
msgstr ""
"No entanto, em alguns casos, é útil permitir que o backend de construção "
"calcule os metadados para você. Por exemplo: muitos backend sde construção "
"podem ler a versão de um atributo ``__version__`` em seu código, uma tag Git "
"ou similar. Nesses casos, você deve marcar o campo como dinâmico usando, por "
"exemplo,"

#: ../source/guides/writing-pyproject-toml.rst:82
msgid ""
"When a field is dynamic, it is the build backend's responsibility to fill "
"it.  Consult your build backend's documentation to learn how it does it."
msgstr ""
"Quando um campo é dinâmico, é da responsabilidade do backend de construção "
"preenchê-lo. Consulte a documentação do seu backend de construção para saber "
"como ele faz."

#: ../source/guides/writing-pyproject-toml.rst:88
msgid "Basic information"
msgstr "Informações básicas"

#: ../source/guides/writing-pyproject-toml.rst:93
#: ../source/specifications/pyproject-toml.rst:120
#: ../source/specifications/pyproject-toml.rst:143
#: ../source/specifications/pyproject-toml.rst:155
msgid "``name``"
msgstr "``name``"

#: ../source/guides/writing-pyproject-toml.rst:95
msgid ""
"Put the name of your project on PyPI. This field is required and is the only "
"field that cannot be marked as dynamic."
msgstr ""
"Coloque o nome do seu projeto em PyPI. Este campo é necessário e é o único "
"campo que não pode ser marcado como dinâmico."

#: ../source/guides/writing-pyproject-toml.rst:103
#, fuzzy
#| msgid ""
#| "The project name must consists of ASCII letters, digits, underscores "
#| "\"``_``\", hyphens \"``-``\" and periods \"``.``\". It must not start or "
#| "end with an underscore, hyphen or period."
msgid ""
"The project name must consist of ASCII letters, digits, underscores "
"\"``_``\", hyphens \"``-``\" and periods \"``.``\". It must not start or end "
"with an underscore, hyphen or period."
msgstr ""
"O nome do projeto deve consistir em letras ASCII, dígitos, sublinhado "
"\"``_``\", hífenes \"``-``\" e pontos \"``.``\". Não deve começar ou "
"terminar com um sublinhado, hífen ou ponto."

#: ../source/guides/writing-pyproject-toml.rst:107
msgid ""
"Comparison of project names is case insensitive and treats arbitrarily long "
"runs of underscores, hyphens, and/or periods as equal.  For example, if you "
"register a project named ``cool-stuff``, users will be able to download it "
"or declare a dependency on it using any of the following spellings: ``Cool-"
"Stuff``, ``cool.stuff``, ``COOL_STUFF``, ``CoOl__-.-__sTuFF``."
msgstr ""
"A comparação de nomes de projetos não diferencia maiúsculas de minúsculas e "
"trata sequências arbitrariamente longas de sublinhados, hífenes e/ou pontos "
"como iguais. Por exemplo, se você registrar um projeto chamado ``cool-"
"stuff``, os usuários poderão baixá-lo ou declarar uma dependência dele "
"usando qualquer uma das seguintes formas de escrever: ``Cool-Stuff``, ``cool."
"stuff``, ``COOL_STUFF``, ``CoOl__-.-__sTuFF``."

#: ../source/guides/writing-pyproject-toml.rst:115
#: ../source/specifications/pyproject-toml.rst:125
#: ../source/specifications/pyproject-toml.rst:149
#: ../source/specifications/pyproject-toml.rst:170
msgid "``version``"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:117
msgid "Put the version of your project."
msgstr "Coloque a versão do seu projeto."

#: ../source/guides/writing-pyproject-toml.rst:124
msgid ""
"Some more complicated version specifiers like ``2020.0.0a1`` (for an alpha "
"release) are possible; see the :ref:`specification <version-specifiers>` for "
"full details."
msgstr ""
"Alguns especificadores de versão mais complicados como ``2020.0.0a1`` (para "
"uma versão alfa) são possíveis; veja a :ref:`especificação <version-"
"specifiers>` para detalhes completos."

#: ../source/guides/writing-pyproject-toml.rst:128
msgid "This field is required, although it is often marked as dynamic using"
msgstr ""
"Este campo é necessário, embora muitas vezes seja marcado como dinâmico "
"usando"

#: ../source/guides/writing-pyproject-toml.rst:135
#, fuzzy
#| msgid ""
#| "This allows use cases such as filling the version from a ``__version__`` "
#| "attribute or a Git tag. Consult :ref:`Single sourcing the version` for "
#| "more details."
msgid ""
"This allows use cases such as filling the version from a ``__version__`` "
"attribute or a Git tag. Consult the :ref:`single-source-version` discussion "
"for more details."
msgstr ""
"Isso permite usar casos como preencher a versão de um atributo "
"``__version__`` ou uma tag Git. Consulte :ref:`Single sourcing the version` "
"para obter mais detalhes."

#: ../source/guides/writing-pyproject-toml.rst:141
msgid "Dependencies and requirements"
msgstr "Dependências e requisitos"

#: ../source/guides/writing-pyproject-toml.rst:144
#: ../source/specifications/pyproject-toml.rst:449
msgid "``dependencies``/``optional-dependencies``"
msgstr "``dependencies``/``optional-dependencies``"

#: ../source/guides/writing-pyproject-toml.rst:146
msgid "If your project has dependencies, list them like this:"
msgstr "Se o seu projeto tiver dependências, liste-as assim:"

#: ../source/guides/writing-pyproject-toml.rst:158
msgid ""
"See :ref:`Dependency specifiers <dependency-specifiers>` for the full syntax "
"you can use to constrain versions."
msgstr ""
"Veja :ref:`Especificadores de dependências <dependency-specifiers>` para a "
"sintaxe completa que você pode usar para restringir versões."

#: ../source/guides/writing-pyproject-toml.rst:161
msgid ""
"You may want to make some of your dependencies optional, if they are only "
"needed for a specific feature of your package. In that case, put them in "
"``optional-dependencies``."
msgstr ""
"Você pode querer fazer algumas de suas dependências opcionais, se forem "
"necessárias apenas para um recurso específico do seu pacote. Nesse caso, "
"coloque-os em ``optional-dependencies``."

#: ../source/guides/writing-pyproject-toml.rst:174
msgid ""
"Each of the keys defines a \"packaging extra\". In the example above, one "
"could use, e.g., ``pip install your-project-name[gui]`` to install your "
"project with GUI support, adding the PyQt5 dependency."
msgstr ""
"Cada uma das chaves define um \"extra de empacotamento\". No exemplo acima, "
"pode-se usar, por exemplo, ``pip install seu-projeto-de-nome[gui]`` para "
"instalar seu projeto com suporte GUI, adicionando a dependência PyQt5."

#: ../source/guides/writing-pyproject-toml.rst:183
#: ../source/specifications/pylock-toml.rst:95
#: ../source/specifications/pyproject-toml.rst:146
#: ../source/specifications/pyproject-toml.rst:239
msgid "``requires-python``"
msgstr "``requires-python``"

#: ../source/guides/writing-pyproject-toml.rst:185
msgid ""
"This lets you declare the minimum version of Python that you support "
"[#requires-python-upper-bounds]_."
msgstr ""
"Isso permite que você declare a versão mínima de Python que você suporta "
"[#requires-python-upper-bounds]_."

#: ../source/guides/writing-pyproject-toml.rst:197
msgid "Creating executable scripts"
msgstr "Criando scripts executáveis"

#: ../source/guides/writing-pyproject-toml.rst:199
msgid ""
"To install a command as part of your package, declare it in the ``[project."
"scripts]`` table."
msgstr ""
"Para instalar um comando como parte do seu pacote, declare-o na tabela "
"``[project.scripts]``."

#: ../source/guides/writing-pyproject-toml.rst:207
#, fuzzy
#| msgid ""
#| "In this example, after installing your project, a ``spam-cli`` command "
#| "will be available. Executing this command will do the equivalent of "
#| "``from spam import main_cli; main_cli()``."
msgid ""
"In this example, after installing your project, a ``spam-cli`` command will "
"be available. Executing this command will do the equivalent of ``import sys; "
"from spam import main_cli; sys.exit(main_cli())``."
msgstr ""
"Neste exemplo, depois de instalar seu projeto, um comando ``spam-cli`` "
"estará disponível. Executar este comando fará o equivalente a ``from spam "
"import main_cli; main_cli()``."

#: ../source/guides/writing-pyproject-toml.rst:211
msgid ""
"On Windows, scripts packaged this way need a terminal, so if you launch them "
"from within a graphical application, they will make a terminal pop up. To "
"prevent this from happening, use the ``[project.gui-scripts]`` table instead "
"of ``[project.scripts]``."
msgstr ""
"No Windows, scripts empacotados desta forma precisam de um terminal, então "
"se você lançá-los de dentro de uma aplicação gráfica, eles vão fazer um pop "
"up de terminal. Para evitar que isso aconteça, use o ``[project.gui-"
"scripts]`` tabela em vez de ``[project.scripts]``."

#: ../source/guides/writing-pyproject-toml.rst:221
msgid ""
"In that case, launching your script from the command line will give back "
"control immediately, leaving the script to run in the background."
msgstr ""
"Nesse caso, a inicialização do seu script a partir da linha de comando "
"devolve o controle imediatamente, deixando o script a ser executado em "
"segundo plano."

#: ../source/guides/writing-pyproject-toml.rst:224
msgid ""
"The difference between ``[project.scripts]`` and ``[project.gui-scripts]`` "
"is only relevant on Windows."
msgstr ""
"A diferença entre ``[project.scripts]`` e ``[project.gui-scripts]`` é apenas "
"relevante no Windows."

#: ../source/guides/writing-pyproject-toml.rst:230
msgid "About your project"
msgstr "Sobre o seu projeto"

#: ../source/guides/writing-pyproject-toml.rst:233
#: ../source/specifications/pyproject-toml.rst:326
msgid "``authors``/``maintainers``"
msgstr "``authors``/``maintainers``"

#: ../source/guides/writing-pyproject-toml.rst:235
msgid ""
"Both of these fields contain lists of people identified by a name and/or an "
"email address."
msgstr ""
"Ambos os campos contêm listas de pessoas identificadas por um nome e/ou um "
"endereço de e-mail."

#: ../source/guides/writing-pyproject-toml.rst:255
#: ../source/specifications/pyproject-toml.rst:135
#: ../source/specifications/pyproject-toml.rst:185
msgid "``description``"
msgstr "``description``"

#: ../source/guides/writing-pyproject-toml.rst:257
msgid ""
"This should be a one-line description of your project, to show as the "
"\"headline\" of your project page on PyPI (`example <pypi-pip_>`_), and "
"other places such as lists of search results (`example <pypi-search-pip_>`_)."
msgstr ""
"Esta deve ser uma descrição de uma linha do seu projeto, para mostrar como o "
"\"título\" da sua página do projeto no PyPI (`exemplo <pypi-pip_>`_), e "
"outros lugares como listas de resultados de pesquisa (`exemplo <pypi-search-"
"pip_>`_)."

#: ../source/guides/writing-pyproject-toml.rst:268
#: ../source/specifications/pyproject-toml.rst:145
#: ../source/specifications/pyproject-toml.rst:198
msgid "``readme``"
msgstr "``readme``"

#: ../source/guides/writing-pyproject-toml.rst:270
msgid ""
"This is a longer description of your project, to display on your project "
"page on PyPI. Typically, your project will have a ``README.md`` or ``README."
"rst`` file and you just put its file name here."
msgstr ""
"Esta é uma descrição mais longa do seu projeto, para exibir em sua página do "
"projeto em PyPI. Tipicamente, seu projeto terá um arquivo ``README.md`` ou "
"``README.rst`` e você acabou de colocar seu nome de arquivo aqui."

#: ../source/guides/writing-pyproject-toml.rst:279
msgid "The README's format is auto-detected from the extension:"
msgstr "O formato do README é detectado automaticamente a partir da extensão:"

#: ../source/guides/writing-pyproject-toml.rst:281
msgid "``README.md`` → `GitHub-flavored Markdown <gfm_>`_,"
msgstr "``README.md`` → `Markdown no estilo do GitHub <gfm_>`_,"

#: ../source/guides/writing-pyproject-toml.rst:282
msgid ""
"``README.rst`` → `reStructuredText <rest_>`_ (without Sphinx extensions)."
msgstr "``README.rst`` → reStructuredText <rest_>`_ (sem extensões do Sphinx)."

#: ../source/guides/writing-pyproject-toml.rst:284
msgid "You can also specify the format explicitly, like this:"
msgstr "Você também pode especificar o formato explicitamente assim:"

#: ../source/guides/writing-pyproject-toml.rst:297
#, fuzzy
#| msgid "``license``"
msgid "``license`` and ``license-files``"
msgstr "``license``"

#: ../source/guides/writing-pyproject-toml.rst:299
msgid "As per :pep:`639` licenses should be declared with two fields:"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:301
msgid ""
"``license`` is an :term:`SPDX license expression <License Expression>` "
"consisting of one or more :term:`license identifiers <License Identifier>`."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:303
msgid "``license-files`` is a list of license file glob patterns."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:305
msgid ""
"A previous PEP had specified ``license`` to be a table with a ``file`` or a "
"``text`` key, this format is now deprecated. Most :term:`build "
"backends<build backend>` now support the new format as shown in the "
"following table."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:309
msgid "build backend versions that introduced :pep:`639` support"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:312
#, fuzzy
#| msgid "hatch"
msgid "hatchling"
msgstr "hatch"

#: ../source/guides/writing-pyproject-toml.rst:313
#, fuzzy
#| msgid "Setuptools"
msgid "setuptools"
msgstr "Setuptools"

#: ../source/guides/writing-pyproject-toml.rst:314
msgid "flit-core [#flit-core-pep639]_"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:315
#, fuzzy
#| msgid "Build backends"
msgid "pdm-backend"
msgstr "Backends de construção"

#: ../source/guides/writing-pyproject-toml.rst:316
#, fuzzy
#| msgid "poetry"
msgid "poetry-core"
msgstr "poetry"

#: ../source/guides/writing-pyproject-toml.rst:317
#, fuzzy
#| msgid "build"
msgid "uv-build"
msgstr "construir"

#: ../source/guides/writing-pyproject-toml.rst:318
msgid "1.27.0"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:319
msgid "77.0.3"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:320
msgid "3.12"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:321
msgid "2.4.0"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:322
msgid "2.2.0"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:323
msgid "0.7.19"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:329
#: ../source/specifications/pyproject-toml.rst:140
#: ../source/specifications/pyproject-toml.rst:251
msgid "``license``"
msgstr "``license``"

#: ../source/guides/writing-pyproject-toml.rst:331
msgid ""
"The new format for ``license`` is a valid :term:`SPDX license expression "
"<License Expression>` consisting of one or more :term:`license identifiers "
"<License Identifier>`. The full license list is available at the `SPDX "
"license list page <spdxlicenselist_>`_. The supported list version is 3.17 "
"or any later compatible one."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:344
msgid ""
"If you get a build error that ``license`` should be a dict/table, your build "
"backend doesn't yet support the new format. See the `above section <license-"
"and-license-files_>`_ for more context. The now deprecated format is "
"`described in PEP 621 <https://peps.python.org/pep-0621/#license>`__."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:349
#, fuzzy
msgid ""
"As a general rule, it is a good idea to use a standard, well-known license, "
"both to avoid confusion and because some organizations avoid software whose "
"license is unapproved."
msgstr ""
"O argumento ``license`` é mais comumente usado para indicar diferenças de "
"licenças conhecidas ou para incluir sua própria licença exclusiva. Como "
"regra geral, é uma boa ideia usar uma licença padrão bem conhecida, tanto "
"para evitar confusão quanto porque algumas organizações evitam software cuja "
"licença não é aprovada."

#: ../source/guides/writing-pyproject-toml.rst:353
msgid ""
"If your project is licensed with a license that doesn't have an existing "
"SPDX identifier, you can create a custom one in format ``LicenseRef-"
"[idstring]``. The custom identifiers must follow the SPDX specification, "
"`clause 10.1 <spdxcustomids_>`_ of the version 2.2 or any later compatible "
"one."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:367
#: ../source/specifications/pyproject-toml.rst:141
#: ../source/specifications/pyproject-toml.rst:287
#, fuzzy
#| msgid "``license``"
msgid "``license-files``"
msgstr "``license``"

#: ../source/guides/writing-pyproject-toml.rst:369
msgid ""
"This is a list of license files and files containing other legal information "
"you want to distribute with your package."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:377
msgid "The glob patterns must follow the specification:"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:379
msgid ""
"Alphanumeric characters, underscores (``_``), hyphens (``-``) and dots (``."
"``) will be matched verbatim."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:381
msgid ""
"Special characters: ``*``, ``?``, ``**`` and character ranges: [] are "
"supported."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:382
msgid "Path delimiters must be the forward slash character (``/``)."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:383
msgid ""
"Patterns are relative to the directory containing :file:`pyproject.toml`, "
"and thus may not start with a slash character."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:385
msgid "Parent directory indicators (``..``) must not be used."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:386
msgid "Each glob must match at least one file."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:388
msgid ""
"Literal paths are valid globs. Any characters or character sequences not "
"covered by this specification are invalid."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:394
#: ../source/specifications/pyproject-toml.rst:139
#: ../source/specifications/pyproject-toml.rst:370
msgid "``keywords``"
msgstr "``keywords``"

#: ../source/guides/writing-pyproject-toml.rst:396
msgid ""
"This will help PyPI's search box to suggest your project when people search "
"for these keywords."
msgstr ""
"Isso ajudará a caixa de pesquisa do PyPI a sugerir o seu projeto quando as "
"pessoas procuram essas palavras-chave."

#: ../source/guides/writing-pyproject-toml.rst:408
#: ../source/specifications/pyproject-toml.rst:133
#: ../source/specifications/pyproject-toml.rst:382
msgid "``classifiers``"
msgstr "``classifiers``"

#: ../source/guides/writing-pyproject-toml.rst:410
msgid ""
"A list of PyPI classifiers that apply to your project. Check the `full list "
"of possibilities <classifier-list_>`_."
msgstr ""
"Uma lista de classificadores do PyPI que se aplicam ao seu projeto. "
"Verifique a `lista completa de possibilidades <classifier-list_>`_."

#: ../source/guides/writing-pyproject-toml.rst:434
#, fuzzy
msgid ""
"Although the list of classifiers is often used to declare what Python "
"versions a project supports, this information is only used for searching and "
"browsing projects on PyPI, not for installing projects. To actually restrict "
"what Python versions a project can be installed on, use the :ref:`requires-"
"python` argument."
msgstr ""
"Embora a lista de classificadores seja frequentemente usada para declarar "
"quais versões do Python um projeto suporta, essas informações são usadas "
"apenas para pesquisar e navegar por projetos no PyPI, não para instalar "
"projetos. Para realmente restringir em quais versões do Python um projeto "
"pode ser instalado, use o argumento :ref:`python_requires`."

#: ../source/guides/writing-pyproject-toml.rst:439
#, fuzzy
msgid ""
"To prevent a package from being uploaded to PyPI, use the special "
"``Private :: Do Not Upload`` classifier. PyPI will always reject packages "
"with classifiers beginning with ``Private ::``."
msgstr ""
"Para evitar que um pacote seja enviado para PyPI, use o classificador "
"especial ``'Private :: Do Not Upload'``. PyPI sempre rejeitará pacotes com "
"classificadores começando com ``\"Private ::'``."

#: ../source/guides/writing-pyproject-toml.rst:446
#: ../source/specifications/pyproject-toml.rst:148
#: ../source/specifications/pyproject-toml.rst:400
msgid "``urls``"
msgstr "``urls``"

#: ../source/guides/writing-pyproject-toml.rst:448
msgid ""
"A list of URLs associated with your project, displayed on the left sidebar "
"of your PyPI project page."
msgstr ""
"Uma lista de URLs associadas ao seu projeto, exibida na barra lateral "
"esquerda da página do projeto PyPI."

#: ../source/guides/writing-pyproject-toml.rst:453
msgid ""
"See :ref:`well-known-labels` for a listing of labels that PyPI and other "
"packaging tools are specifically aware of, and `PyPI's project metadata docs "
"<https://docs.pypi.org/project_metadata/#project-urls>`_ for PyPI-specific "
"URL processing."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:467
#, fuzzy
#| msgid ""
#| "Note that if the key contains spaces, it needs to be quoted, e.g., "
#| "``Website = \"https://example.com\"`` but ``\"Official Website\" = "
#| "\"https://example.com\"``."
msgid ""
"Note that if the label contains spaces, it needs to be quoted, e.g., "
"``Website = \"https://example.com\"`` but ``\"Official Website\" = \"https://"
"example.com\"``."
msgstr ""
"Note que se a chave contém espaços, ela precisa ser citada, por exemplo, "
"``Website = \"https://example.com\"``, mas ``\"Official Website\" = "
"\"https://example.com\"``."

#: ../source/guides/writing-pyproject-toml.rst:471
msgid ""
"Users are advised to use :ref:`well-known-labels` for their project URLs "
"where appropriate, since consumers of metadata (like package indices) can "
"specialize their presentation."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:475
msgid ""
"For example in the following metadata, neither ``MyHomepage`` nor "
"``\"Download Link\"`` is a well-known label, so they will be rendered "
"verbatim:"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:485
msgid ""
"Whereas in this metadata ``HomePage`` and ``DOWNLOAD`` both have well-known "
"equivalents (``homepage`` and ``download``), and can be presented with those "
"semantics in mind (the project's home page and its external download "
"location, respectively)."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:497
msgid "Advanced plugins"
msgstr "Plugins avançados"

#: ../source/guides/writing-pyproject-toml.rst:499
msgid ""
"Some packages can be extended through plugins. Examples include Pytest_ and "
"Pygments_. To create such a plugin, you need to declare it in a subtable of "
"``[project.entry-points]`` like this:"
msgstr ""
"Alguns pacotes podem ser estendidos através de plugins. Exemplos incluem "
"Pytest_ e Pygments_. Para criar tal plugin, você precisa declará-lo em uma "
"subtabela de ``[project.entry-points]`` assim:"

#: ../source/guides/writing-pyproject-toml.rst:508
msgid "See the :ref:`Plugin guide <plugin-entry-points>` for more information."
msgstr "Veja o :ref:`guia Plugin <plugin-entry-points>` para mais informações."

#: ../source/guides/writing-pyproject-toml.rst:513
msgid "A full example"
msgstr "Um exemplo completo"

#: ../source/guides/writing-pyproject-toml.rst:576
msgid ""
"Think twice before applying an upper bound like ``requires-python = \"<= "
"3.10\"`` here. `This blog post <requires-python-blog-post_>`_ contains some "
"information regarding possible problems."
msgstr ""
"Pense duas vezes antes de aplicar um limite superior como ``requires-python "
"= \"<= 3.10\"`` aqui. `Este post de blog <requires-python-blog-post_>`_ "
"contém algumas informações sobre possíveis problemas."

#: ../source/guides/writing-pyproject-toml.rst:580
msgid ""
"flit-core `does not yet <flit-issue-735_>`_ support WITH in SPDX license "
"expressions."
msgstr ""

#: ../source/index.rst:-1
msgid ""
"The Python Packaging User Guide (PyPUG) is a collection of tutorials and "
"guides for packaging Python software."
msgstr ""
"O Guia de Usuário para Empacotamento de Python (PyPUG) é uma coleção de "
"tutoriais e guias para empacotar software Python."

#: ../source/index.rst:-1
msgid "python, packaging, guide, tutorial"
msgstr "python, packaging, guide, tutorial, empacotamento, guia"

#: ../source/index.rst:3 ../source/key_projects.rst:247
msgid "Python Packaging User Guide"
msgstr "Guia de Usuário para Empacotamento de Python"

#: ../source/index.rst:25
msgid ""
"Welcome to the *Python Packaging User Guide*, a collection of tutorials and "
"references to help you distribute and install Python packages with modern "
"tools."
msgstr ""
"Seja bem-vindo(a) ao *Guia de Usuário para Empacotamento de Python*, uma "
"coleção de tutoriais e referências para lhe ajudar a distribuir e instalar "
"pacotes Python com ferramentas modernas."

#: ../source/index.rst:29
msgid ""
"This guide is maintained on `GitHub`_ by the :doc:`Python Packaging "
"Authority <pypa:index>`. We happily accept :doc:`contributions and feedback "
"<contribute>`. 😊"
msgstr ""
"Este guia é mantido no `GitHub`_ pela :doc:`Python Packaging Authority <pypa:"
"index>`. Aceitamos :doc:`contribuição e feedback <contribute>`. 😊"

#: ../source/index.rst:36
msgid "Overview and Flow"
msgstr "Visão geral e fluxo"

#: ../source/index.rst:40
msgid ""
"Building your understanding of Python packaging is a journey. Patience and "
"continuous improvement are key to success. The overview and flow sections "
"provide a starting point for understanding the Python packaging ecosystem."
msgstr ""
"Construir sua compreensão de empacotamento do Python é uma jornada. "
"Paciência e aprimoramento contínua são fundamentais para o sucesso. As "
"seções de visão geral e fluxo fornecem um ponto de partida para entender o "
"ecossistema de empacotamentos do Python."

#: ../source/index.rst:44
msgid ""
"The :doc:`overview` explains Python packaging and its use when preparing and "
"distributing projects. This section helps you build understanding about "
"selecting the tools and processes that are most suitable for your use case. "
"It includes what packaging is, the problems that it solves, and key "
"considerations."
msgstr ""
"A :doc:`overview` explica empacotamento do Python e seu uso ao preparar e "
"distribuir projetos. Esta seção ajuda você a construir compreensão sobre a "
"seleção das ferramentas e processos que são mais adequados para o seu caso "
"de uso. Inclui o que é o empacotamento, os problemas que resolve e as "
"principais considerações."

#: ../source/index.rst:51
msgid ""
"To get an overview of the workflow used to publish your code, see :doc:"
"`packaging flow <flow>`."
msgstr ""
"Para obter uma visão geral do fluxo de trabalho usado para publicar seu "
"código, consulte :doc:`fluxo de empacotamento <flow>`."

#: ../source/index.rst:57
msgid ""
"Tutorials walk through the steps needed to complete a project for the first "
"time. Tutorials aim to help you succeed and provide a starting point for "
"future exploration. The :doc:`tutorials/index` section includes:"
msgstr ""
"Os tutoriais passam pelas etapas necessárias para completar um projeto pela "
"primeira vez. Os tutoriais visam ajudá-lo a ter sucesso e fornecer um ponto "
"de partida para a exploração futura. A seção :doc:`tutorials/index` inclui:"

#: ../source/index.rst:62
msgid ""
"A :doc:`tutorial on installing packages <tutorials/installing-packages>`"
msgstr ""
"Um :doc:`tutorial sobre como instalar pacotes <tutorials/installing-"
"packages>`"

#: ../source/index.rst:63
msgid ""
"A :doc:`tutorial on managing application dependencies <tutorials/managing-"
"dependencies>` in a version controlled project"
msgstr ""
"Um :doc:`tutorial sobre como gerenciar dependências de aplicações <tutorials/"
"managing-dependencies>` em um projeto com controle de versão"

#: ../source/index.rst:65
msgid ""
"A :doc:`tutorial on packaging and distributing <tutorials/packaging-"
"projects>` your project"
msgstr ""
"Um :doc:`tutorial sobre como empacotar e distribuir <tutorials/packaging-"
"projects>` seu projeto"

#: ../source/index.rst:71
msgid ""
"Guides provide steps to perform a specific task. Guides are more focused on "
"users who are already familiar with Python packaging and are looking for "
"specific information."
msgstr ""
"Guias fornecem etapas para executar uma tarefa específica. Guias são mais "
"focados em usuários que já estão familiarizados com a empacotamento do "
"Python e estão procurando informações específicas."

#: ../source/index.rst:75
msgid ""
"The :doc:`guides/index` section provides \"how to\" instructions in three "
"major areas: package installation; building and distributing packages; "
"miscellaneous topics."
msgstr ""
"A seção :doc:`guides/index` fornece instruções de \"como fazer\" em três "
"áreas principais: instalação de pacotes; construção e distribuição de "
"pacotes; diversos tópicos."

#: ../source/index.rst:80
msgid "Explanations and Discussions"
msgstr "Explicações e discussões"

#: ../source/index.rst:82
#, fuzzy
#| msgid ""
#| "The :doc:`discussions/index` section for in-depth explanations and "
#| "discussion about topics, such as:"
msgid ""
"The :doc:`discussions/index` section provides in-depth explanations and "
"discussion about topics, such as:"
msgstr ""
"A seção :doc:`discussions/index` para explicações aprofundadas e discussão "
"sobre temas, tais como:"

#: ../source/index.rst:85
msgid ":doc:`discussions/deploying-python-applications`"
msgstr ":doc:`discussions/deploying-python-applications`"

#: ../source/index.rst:86
msgid ":doc:`discussions/pip-vs-easy-install`"
msgstr ":doc:`discussions/pip-vs-easy-install`"

#: ../source/index.rst:89
msgid "Reference"
msgstr "Referência"

#: ../source/index.rst:91
msgid ""
"The :doc:`specifications/index` section for packaging interoperability "
"specifications."
msgstr ""
"A seção :doc:`specifications/index` para especificações de "
"interoperabilidade de empacotamento."

#: ../source/index.rst:92
msgid ""
"The list of :doc:`other projects <key_projects>` maintained by members of "
"the Python Packaging Authority."
msgstr ""
"A lista de :doc:`outros projetos <key_projects>` mantidos por membros da "
"Python Packaging Authority."

#: ../source/index.rst:93
msgid "The :doc:`glossary` for definitions of terms used in Python packaging."
msgstr ""
"O :doc:`glossary` para definições de termos usados em empacotamento do "
"Python."

#: ../source/key_projects.rst:6
msgid "Project Summaries"
msgstr "Resumos de projetos"

#: ../source/key_projects.rst:8
msgid ""
"Summaries and links for the most relevant projects in the space of Python "
"installation and packaging."
msgstr ""
"Resumos e links para os projetos mais relevantes no espaço de instalação e "
"empacotamento do Python."

#: ../source/key_projects.rst:14
msgid "PyPA Projects"
msgstr "Projetos do PyPA"

#: ../source/key_projects.rst:19
msgid "bandersnatch"
msgstr "bandersnatch"

#: ../source/key_projects.rst:21
#, fuzzy
msgid ""
"`Docs <https://bandersnatch.readthedocs.io>`__ | `Issues <https://github.com/"
"pypa/bandersnatch/issues>`__ | `GitHub <https://github.com/pypa/"
"bandersnatch>`__ | `PyPI <https://pypi.org/project/bandersnatch>`__"
msgstr ""
"`Issues <https://github.com/pypa/bandersnatch/issues>`__ | `GitHub <https://"
"github.com/pypa/bandersnatch>`__ | `PyPI <https://pypi.org/project/"
"bandersnatch>`__"

#: ../source/key_projects.rst:26
#, fuzzy
msgid ""
"``bandersnatch`` is a PyPI mirroring client designed to efficiently create a "
"complete mirror of the contents of PyPI. Organizations thus save bandwidth "
"and latency on package downloads (especially in the context of automated "
"tests) and to prevent heavily loading PyPI's Content Delivery Network (CDN). "
"Files can be served from a local directory or `AWS S3`_."
msgstr ""
"``bandersnatch`` é um cliente de espelhamento do PyPI projetado para criar "
"de forma eficiente um espelho completo do conteúdo do PyPI. Assim, as "
"organizações economizam largura de banda e latência nos downloads de pacotes "
"(especialmente no contexto de testes automatizados) e evitam o carregamento "
"excessivo da Content Delivery Network (CDN) do PyPI."

#: ../source/key_projects.rst:37
msgid "build"
msgstr "construir"

#: ../source/key_projects.rst:39
msgid ""
":any:`Docs <build:index>` | `Issues <https://github.com/pypa/build/"
"issues>`__ | `GitHub <https://github.com/pypa/build>`__ | `PyPI <https://"
"pypi.org/project/build>`__"
msgstr ""
":any:`Documentação <build:index>` | `Issues <https://github.com/pypa/build/"
"issues>`__ | `GitHub <https://github.com/pypa/build>`__ | `PyPI <https://"
"pypi.org/project/build>`__"

#: ../source/key_projects.rst:44
msgid ""
"``build`` is a :pep:`517` compatible Python package builder. It provides a "
"CLI to build packages, as well as a Python API."
msgstr ""
"``build`` é um construtor de pacotes Python compatível com a :pep:`517`. Ele "
"fornece uma CLI para construir pacotes, bem como uma API Python."

#: ../source/key_projects.rst:51
msgid "cibuildwheel"
msgstr "cibuildwheel"

#: ../source/key_projects.rst:53
msgid ""
"`Docs <https://cibuildwheel.readthedocs.io/>`__ | `Issues <https://github."
"com/pypa/cibuildwheel/issues>`__ | `GitHub <https://github.com/pypa/"
"cibuildwheel>`__ | `PyPI <https://pypi.org/project/cibuildwheel>`__ | "
"`Discussions <https://github.com/pypa/cibuildwheel/discussions>`__ | "
"`Discord #cibuildwheel <https://discord.com/invite/pypa>`__"
msgstr ""
"`Documentação <https://cibuildwheel.readthedocs.io/>`__ | `Issues <https://"
"github.com/pypa/cibuildwheel/issues>`__ | `GitHub <https://github.com/pypa/"
"cibuildwheel>`__ | `PyPI <https://pypi.org/project/cibuildwheel>`__ | "
"`Discussões <https://github.com/pypa/cibuildwheel/discussions>`__ | `Discord "
"#cibuildwheel <https://discord.com/invite/pypa>`__"

#: ../source/key_projects.rst:60
msgid ""
"``cibuildwheel`` is a Python package that builds :term:`wheels <Wheel>` for "
"all common platforms and Python versions on most CI systems. Also see :ref:"
"`multibuild`."
msgstr ""
"``cibuildwheel`` é um pacote Python que constrói :term:`wheels <Wheel>` para "
"todas as plataformas comuns e versões Python na maioria dos sistemas CI. "
"Veja também :ref:`multibuild`."

#: ../source/key_projects.rst:66
msgid "distlib"
msgstr "distlib"

#: ../source/key_projects.rst:68
msgid ""
":doc:`Docs <distlib:index>` | `Issues <https://github.com/pypa/distlib/"
"issues>`__ | `GitHub <https://github.com/pypa/distlib>`__ | `PyPI <https://"
"pypi.org/project/distlib>`__"
msgstr ""
":doc:`Documentação <distlib:index>` | `Issues <https://github.com/pypa/"
"distlib/issues>`__ | `GitHub <https://github.com/pypa/distlib>`__ | `PyPI "
"<https://pypi.org/project/distlib>`__"

#: ../source/key_projects.rst:73
msgid ""
"``distlib`` is a library which implements low-level functions that relate to "
"packaging and distribution of Python software.  ``distlib`` implements "
"several relevant PEPs (Python Enhancement Proposal standards) and is useful "
"for developers of third-party packaging tools to make and upload binary and "
"source :term:`distributions <Distribution Package>`, achieve "
"interoperability, resolve dependencies, manage package resources, and do "
"other similar functions."
msgstr ""
"``distlib`` é uma biblioteca que implementa funções de baixo nível "
"relacionadas ao empacotamento e distribuição de software Python. ``distlib`` "
"implementa várias PEPs relevantes (padrões de proposta de aprimoramento do "
"Python) e é útil para desenvolvedores de ferramentas de empacotamento de "
"terceiros para fazer e enviar :term:`distribuições <Pacote de Distribuição>` "
"binária e fonte, alcançar interoperabilidade, resolver dependências, "
"gerenciar recursos de pacote e executar outras funções semelhantes."

#: ../source/key_projects.rst:82
msgid ""
"Unlike the stricter :ref:`packaging` project (below), which specifically "
"implements modern Python packaging interoperability standards, ``distlib`` "
"also attempts to provide reasonable fallback behaviours when asked to handle "
"legacy packages and metadata that predate the modern interoperability "
"standards and fall into the subset of packages that are incompatible with "
"those standards."
msgstr ""
"Ao contrário do projeto :ref:`packaging` mais estrito (abaixo), que "
"implementa especificamente padrões modernos de interoperabilidade de pacotes "
"Python, ``distlib`` também tenta fornecer comportamentos de fallback "
"razoáveis quando solicitados a lidar com pacotes legados e metadados "
"anteriores à interoperabilidade moderna padrões e se enquadram no "
"subconjunto de pacotes que são incompatíveis com esses padrões."

#: ../source/key_projects.rst:93
msgid "distutils"
msgstr "distutils"

#: ../source/key_projects.rst:95
msgid ""
"The original Python packaging system, added to the standard library in "
"Python 2.0 and removed in 3.12."
msgstr ""
"O sistema de empacotamento original do Python, adicionado à biblioteca "
"padrão no Python 2.0 e removido no 3.12."

#: ../source/key_projects.rst:98
msgid ""
"Due to the challenges of maintaining a packaging system where feature "
"updates are tightly coupled to language runtime updates, direct usage of :"
"ref:`distutils` has been actively discouraged, with :ref:`Setuptools` being "
"the preferred replacement. :ref:`Setuptools` not only provides features that "
"plain :ref:`distutils` doesn't offer (such as dependency declarations and "
"entry point declarations), it also provides a consistent build interface and "
"feature set across all supported Python versions."
msgstr ""
"Devido aos desafios de manter um sistema de empacotamento onde as "
"atualizações de recursos estão fortemente acopladas às atualizações de tempo "
"de execução da linguagem, o uso direto de :ref:`distutils` foi ativamente "
"desencorajado, com :ref:`Setuptools` sendo o substituto preferido. :ref:"
"`Setuptools` não apenas fornece recursos que o :ref:`distutils` simples não "
"oferece (como declarações de dependência e declarações de ponto de entrada), "
"ele também fornece uma interface de construção consistente e conjunto de "
"recursos em todas as versões Python suportadas ."

#: ../source/key_projects.rst:107
msgid ""
"Consequently, :ref:`distutils` was deprecated in Python 3.10 by :pep:`632` "
"and has been :doc:`removed <python:whatsnew/3.12>` from the standard library "
"in Python 3.12.  Setuptools bundles the standalone copy of distutils, and it "
"is injected even on Python < 3.12 if you import setuptools first or use pip."
msgstr ""
"Consequentemente, :ref:`distutils` foi descontinuado no Python 3.10 por :pep:"
"`632` e foi :doc:`removido <python:whatsnew/3.12>` da biblioteca padrão em "
"Python 3.12. Setuptools inclui a cópia autônoma de distutils, e é injetado "
"mesmo no Python < 3.12 se você importar setuptools primeiro ou usar pip."

#: ../source/key_projects.rst:116
msgid "flit"
msgstr "flit"

#: ../source/key_projects.rst:118
msgid ""
"`Docs <https://flit.readthedocs.io/en/latest/>`__ | `Issues <https://github."
"com/pypa/flit/issues>`__ | `PyPI <https://pypi.org/project/flit>`__"
msgstr ""
"`Documentação <https://flit.readthedocs.io/en/latest/>`__ | `Issues <https://"
"github.com/pypa/flit/issues>`__ | `PyPI <https://pypi.org/project/flit>`__"

#: ../source/key_projects.rst:122
msgid ""
"Flit provides a simple way to create and upload pure Python packages and "
"modules to PyPI.  It focuses on `making the easy things easy <flit-"
"rationale_>`_ for packaging.  Flit can generate a configuration file to "
"quickly set up a simple project, build source distributions and wheels, and "
"upload them to PyPI."
msgstr ""
"O Flit fornece uma maneira simples de criar e enviar pacotes e módulos puro "
"Python para o PyPI. Ele se concentra em `facilitar as coisas fáceis <flit-"
"rationale_>`_ para empacotar. O Flit pode gerar um arquivo de configuração "
"para configurar rapidamente um projeto simples, construir distribuições "
"fonte e wheels e enviá-los para PyPI."

#: ../source/key_projects.rst:127
msgid ""
"Flit uses ``pyproject.toml`` to configure a project. Flit does not rely on "
"tools such as :ref:`setuptools` to build distributions, or :ref:`twine` to "
"upload them to PyPI. Flit requires Python 3, but you can use it to "
"distribute modules for Python 2, so long as they can be imported on Python 3."
msgstr ""
"Flit usa ``pyproject.toml`` para configurar um projeto. O Flit não depende "
"de ferramentas como :ref:`setuptools` para construir distribuições, ou :ref:"
"`twine` para enviá-las ao PyPI. O Flit requer Python 3, mas você pode usá-lo "
"para distribuir módulos para Python 2, desde que eles possam ser importados "
"no Python 3."

#: ../source/key_projects.rst:132
msgid ""
"The flit package is lifted by `Matthias Bussonnier <https://github.com/"
"Carreau>`__ since October 2023 on the `tidelift platform <https://tidelift."
"com/lifter/search/pypi/flit>`__, and funds sent to the PSF and earmarked for "
"PyPA usage."
msgstr ""
"O pacote flit é levantado por `Matthias Bussonnier <https://github.com/"
"Carreau>`__ desde outubro de 2023 na `plataforma do tidelift <https://"
"tidelift.com/lifter/search/pypi/flit>`__, e os fundos enviados para o PSF e "
"destinados ao uso da PyPA."

#: ../source/key_projects.rst:142
msgid "hatch"
msgstr "hatch"

#: ../source/key_projects.rst:144
msgid ""
"`Docs <https://hatch.pypa.io/latest/>`__ | `GitHub <https://github.com/pypa/"
"hatch>`__ | `PyPI <https://pypi.org/project/hatch>`__"
msgstr ""
"`Documentação <https://hatch.pypa.io/latest/>`__ | `GitHub <https://github."
"com/pypa/hatch>`__ | `PyPI <https://pypi.org/project/hatch/>`__"

#: ../source/key_projects.rst:148
msgid ""
"Hatch is a unified command-line tool meant to conveniently manage "
"dependencies and environment isolation for Python developers. Python package "
"developers use Hatch and its :term:`build backend <Build Backend>` Hatchling "
"to configure, version, specify dependencies for, and publish packages to "
"PyPI. Its plugin system allows for easily extending functionality."
msgstr ""
"Hatch é uma ferramenta de linha de comando unificada destinada para, de "
"forma conveniente, gerenciar dependências e isolamento de ambiente para "
"desenvolvedores Python. Os desenvolvedores de pacotes Python usam o Hatch e "
"seu :term:`backend de construção <Build Backend>` Hatchling para configurar, "
"criar versões, especificar dependências e publicar pacotes no PyPI. Seu "
"sistema de plugins permite estender facilmente a funcionalidade."

#: ../source/key_projects.rst:157
msgid "packaging"
msgstr "empacotamento"

#: ../source/key_projects.rst:159
msgid ""
":doc:`Docs <packaging:index>` | `Issues <https://github.com/pypa/packaging/"
"issues>`__ | `GitHub <https://github.com/pypa/packaging>`__ | `PyPI <https://"
"pypi.org/project/packaging>`__"
msgstr ""
":doc:`Documentação <packaging:index>` | `Issues <https://github.com/pypa/"
"packaging/issues>`__ | `GitHub <https://github.com/pypa/packaging>`__ | "
"`PyPI <https://pypi.org/project/packaging>`__"

#: ../source/key_projects.rst:164
msgid ""
"Core utilities for Python packaging used by :ref:`pip` and :ref:`setuptools`."
msgstr ""
"Utilitários básicos para o empacotamento do Python usado por :ref:`pip` e :"
"ref:`setuptools`."

#: ../source/key_projects.rst:166
msgid ""
"The core utilities in the packaging library handle version handling, "
"specifiers, markers, requirements, tags, and similar attributes and tasks "
"for Python packages. Most Python users rely on this library without needing "
"to explicitly call it; developers of the other Python packaging, "
"distribution, and installation tools listed here often use its functionality "
"to parse, discover, and otherwise handle dependency attributes."
msgstr ""
"Os utilitários principais na biblioteca de empacotamento lidam com "
"manipulação de versão, especificadores, marcadores, requisitos, tags e "
"atributos e tarefas semelhantes para pacotes Python. A maioria dos usuários "
"Python confia nesta biblioteca sem precisar chamá-la explicitamente; os "
"desenvolvedores de outras ferramentas de empacotamento, distribuição e "
"instalação Python listadas aqui geralmente usam sua funcionalidade para "
"analisar, descobrir e, de outra forma, lidar com atributos de dependência."

#: ../source/key_projects.rst:174
msgid ""
"This project specifically focuses on implementing the modern Python "
"packaging interoperability standards defined at :ref:`packaging-"
"specifications`, and will report errors for sufficiently old legacy packages "
"that are incompatible with those standards. In contrast, the :ref:`distlib` "
"project is a more permissive library that attempts to provide a plausible "
"reading of ambiguous metadata in cases where :ref:`packaging` will instead "
"report on error."
msgstr ""
"Este projeto foca especificamente na implementação dos padrões modernos de "
"interoperabilidade de pacotes Python definidos em :ref:`packaging-"
"specifications`, e irá relatar erros para pacotes legados suficientemente "
"antigos que são incompatíveis com esses padrões. Em contraste, o projeto :"
"ref:`distlib` é uma biblioteca mais permissiva que tenta fornecer uma "
"leitura plausível de metadados ambíguos em casos onde :ref:`packaging` irá "
"relatar um erro."

#: ../source/key_projects.rst:186
#: ../source/specifications/platform-compatibility-tags.rst:142
msgid "pip"
msgstr "pip"

#: ../source/key_projects.rst:188
msgid ""
"`Docs <https://pip.pypa.io/>`__ | `Issues <https://github.com/pypa/pip/"
"issues>`__ | `GitHub <https://github.com/pypa/pip>`__ | `PyPI <https://pypi."
"org/project/pip/>`__"
msgstr ""
"`Documentação <https://pip.pypa.io/>`__ | `Issues <https://github.com/pypa/"
"pip/issues>`__ | `GitHub <https://github.com/pypa/pip>`__ | `PyPI <https://"
"pypi.org/project/pip/>`__"

#: ../source/key_projects.rst:193
msgid ""
"The most popular tool for installing Python packages, and the one included "
"with modern versions of Python."
msgstr ""
"A ferramenta mais popular para instalação de pacotes Python e incluída nas "
"versões modernas do Python."

#: ../source/key_projects.rst:196
msgid ""
"It provides the essential core features for finding, downloading, and "
"installing packages from PyPI and other Python package indexes, and can be "
"incorporated into a wide range of development workflows via its command-line "
"interface (CLI)."
msgstr ""
"Ele fornece os recursos básicos essenciais para localizar, baixar e instalar "
"pacotes do PyPI e outros índices de pacotes do Python e pode ser incorporado "
"em uma ampla gama de fluxos de trabalho de desenvolvimento por meio de sua "
"interface de linha de comando (CLI)."

#: ../source/key_projects.rst:204
msgid "Pipenv"
msgstr "Pipenv"

#: ../source/key_projects.rst:206
msgid ""
":doc:`Docs <pipenv:index>` | `Source <https://github.com/pypa/pipenv>`__ | "
"`Issues <https://github.com/pypa/pipenv/issues>`__ | `PyPI <https://pypi.org/"
"project/pipenv>`__"
msgstr ""
":doc:`Documentação <pipenv:index>` | `Código-fonte <https://github.com/pypa/"
"pipenv>`__ | `Issues <https://github.com/pypa/pipenv/issues>`__ | `PyPI "
"<https://pypi.org/project/pipenv>`__"

#: ../source/key_projects.rst:211
msgid ""
"Pipenv is a project that aims to bring the best of all packaging worlds to "
"the Python world. It harnesses :ref:`Pipfile`, :ref:`pip`, and :ref:"
"`virtualenv` into one single toolchain. It can autoimport ``requirements."
"txt`` and also check for CVEs in `Pipfile`_ using `safety <https://pyup.io/"
"safety>`_."
msgstr ""
"Pipenv é um projeto que visa trazer o melhor de todos os mundos de "
"empacotamento para o mundo Python. Ele agrega :ref:`Pipfile`, :ref:`pip` e :"
"ref:`virtualenv` em um único conjunto de ferramentas. Ele pode autoimportar "
"``requirements.txt`` e também pode verificar por CVEs no `Pipfile`_ usando "
"`safety <https://pyup.io/safety>`_."

#: ../source/key_projects.rst:216
msgid ""
"Pipenv aims to help users manage environments, dependencies, and imported "
"packages on the command line. It also works well on Windows (which other "
"tools often underserve), makes and checks file hashes, to ensure compliance "
"with hash-locked dependency specifiers, and eases uninstallation of packages "
"and dependencies."
msgstr ""
"O Pipenv visa ajudar os usuários a gerenciar ambientes, dependências e "
"pacotes importados na linha de comando. Ele também funciona bem no Windows "
"(que outras ferramentas muitas vezes não atendem), cria e verifica hashes de "
"arquivo, para garantir a conformidade com especificadores de dependência "
"bloqueados por hash e facilita a desinstalação de pacotes e dependências."

#: ../source/key_projects.rst:225
msgid "Pipfile"
msgstr "Pipfile"

#: ../source/key_projects.rst:227
msgid "`Source <https://github.com/pypa/pipfile>`__"
msgstr "`Código-fonte <https://github.com/pypa/pipfile>`__"

#: ../source/key_projects.rst:229
msgid ""
":file:`Pipfile` and its sister :file:`Pipfile.lock` are a higher-level "
"application-centric alternative to :ref:`pip`'s lower-level :file:"
"`requirements.txt` file."
msgstr ""
":file:`Pipfile` e sua irmã :file:`Pipfile.lock` são uma alternativa centrada "
"na aplicação de nível superior ao arquivo de baixo nível :file:`requirements."
"txt` do :ref:`pip`."

#: ../source/key_projects.rst:236
msgid "pipx"
msgstr "pipx"

#: ../source/key_projects.rst:238
msgid ""
"`Docs <https://pipx.pypa.io/>`__ | `GitHub <https://github.com/pypa/pipx>`__ "
"| `PyPI <https://pypi.org/project/pipx/>`__"
msgstr ""
"`Documentação <https://pipx.pypa.io/>`__ | `GitHub <https://github.com/pypa/"
"pipx>`__ | `PyPI <https://pypi.org/project/pipx/>`__"

#: ../source/key_projects.rst:242
msgid ""
"pipx is a tool to install and run Python command-line applications without "
"causing dependency conflicts with other packages installed on the system."
msgstr ""
"pipx é uma ferramenta para instalar e executar aplicações de linha de "
"comando Python sem causar conflitos de dependência com outros pacotes "
"instalados no sistema."

#: ../source/key_projects.rst:249
msgid ""
":doc:`Docs <index>` | `Issues <https://github.com/pypa/packaging.python.org/"
"issues>`__ | `GitHub <https://github.com/pypa/packaging.python.org>`__"
msgstr ""
":doc:`Documentação <index>` | `Issues <https://github.com/pypa/packaging."
"python.org/issues>`__ | `GitHub <https://github.com/pypa/packaging.python."
"org>`__"

#: ../source/key_projects.rst:253
msgid "This guide!"
msgstr "Este guia!"

#: ../source/key_projects.rst:258
msgid "readme_renderer"
msgstr "readme_renderer"

#: ../source/key_projects.rst:260
msgid ""
"`GitHub and docs <https://github.com/pypa/readme_renderer/>`__ | `PyPI "
"<https://pypi.org/project/readme-renderer/>`__"
msgstr ""
"`GitHub e documentação <https://github.com/pypa/readme_renderer/>`__ | `PyPI "
"<https://pypi.org/project/readme-renderer/>`__"

#: ../source/key_projects.rst:263
msgid ""
"``readme_renderer`` is a library that package developers use to render their "
"user documentation (README) files into HTML from markup languages such as "
"Markdown or reStructuredText. Developers call it on its own or via :ref:"
"`twine`, as part of their release management process, to check that their "
"package descriptions will properly display on PyPI."
msgstr ""
"``readme_renderer`` é uma biblioteca que os desenvolvedores de pacote usam "
"para renderizar seus arquivos de documentação de usuário (README) no HTML a "
"partir de linguagens de marcação como Markdown ou reStructuredText. Os "
"desenvolvedores o chamam por conta própria ou via :ref:`twine`, como parte "
"de seu processo de gerenciamento de lançamento, para verificar se as "
"descrições de seus pacotes serão exibidas corretamente no PyPI."

#: ../source/key_projects.rst:274
msgid "Setuptools"
msgstr "Setuptools"

#: ../source/key_projects.rst:276
msgid ""
"`Docs <https://setuptools.readthedocs.io/en/latest/>`__ | `Issues <https://"
"github.com/pypa/setuptools/issues>`__ | `GitHub <https://github.com/pypa/"
"setuptools>`__ | `PyPI <https://pypi.org/project/setuptools>`__"
msgstr ""
"`Documentação <https://setuptools.readthedocs.io/en/latest/>`__ | `Issues "
"<https://github.com/pypa/setuptools/issues>`__ | `GitHub <https://github.com/"
"pypa/setuptools>`__ | `PyPI <https://pypi.org/project/setuptools>`__"

#: ../source/key_projects.rst:281
msgid ""
"Setuptools (which includes ``easy_install``) is a collection of enhancements "
"to the Python distutils that allow you to more easily build and distribute "
"Python :term:`distributions <Distribution Package>`, especially ones that "
"have dependencies on other packages."
msgstr ""
"Setuptools (que inclui ``easy_install``) é uma coleção de melhorias para o "
"distutils do Python que permite a você construir e distribuir mais "
"facilmente :term:`distribuições <Pacote de Distribuição>` Python, "
"especialmente aquelas que possuem dependências de outros pacotes."

#: ../source/key_projects.rst:289
msgid "trove-classifiers"
msgstr "trove-classifiers"

#: ../source/key_projects.rst:291
msgid ""
"`Issues <https://github.com/pypa/trove-classifiers/issues>`__ | `GitHub "
"<https://github.com/pypa/trove-classifiers>`__ | `PyPI <https://pypi.org/"
"project/trove-classifiers/>`__"
msgstr ""
"`Issues <https://github.com/pypa/trove-classifiers/issues>`__ | `GitHub "
"<https://github.com/pypa/trove-classifiers>`__ | `PyPI <https://pypi.org/"
"project/trove-classifiers/>`__"

#: ../source/key_projects.rst:295
msgid ""
"trove-classifiers is the canonical source for `classifiers on PyPI <https://"
"pypi.org/classifiers/>`_, which project maintainers use to :ref:"
"`systematically describe their projects <core-metadata-classifier>` so that "
"users can better find projects that match their needs on the PyPI."
msgstr ""
"trove-classifiers é a fonte canônica para `classificadores no PyPI <https://"
"pypi.org/classifiers/>`_, que os mantenedores de projetos usam para :ref:"
"`descrever sistematicamente seus projetos <core-metadata-classifier>` para "
"que os usuários possam encontrar melhor os projetos que correspondem às suas "
"necessidades no PyPI."

#: ../source/key_projects.rst:300
msgid ""
"The trove-classifiers package contains a list of valid classifiers and "
"deprecated classifiers (which are paired with the classifiers that replace "
"them).  Use this package to validate classifiers used in packages intended "
"for uploading to PyPI. As this list of classifiers is published as code, you "
"can install and import it, giving you a more convenient workflow compared to "
"referring to the `list published on PyPI <https://pypi.org/classifiers/>`_. "
"The `issue tracker <https://github.com/pypa/trove-classifiers/issues>`_ for "
"the project hosts discussions on proposed classifiers and requests for new "
"classifiers."
msgstr ""
"O pacote trove-classifiers contém uma lista de classificadores válidos e "
"classificadores descontinuados (que são pareados com os classificadores que "
"os substituem). Use este pacote para validar classificadores usados em "
"pacotes destinados ao envio para o PyPI. Como esta lista de classificadores "
"é publicada como código, você pode instalá-la e importá-la, proporcionando "
"um fluxo de trabalho mais conveniente em comparação com a referência à "
"`lista publicada em PyPI <https://pypi.org/classifiers/>`_. O `rastreador de "
"problemas <https://github.com/pypa/trove-classifiers/issues>`_ para o "
"projeto hospeda discussões sobre classificadores propostos e solicitações de "
"novos classificadores."

#: ../source/key_projects.rst:314
msgid "twine"
msgstr "twine"

#: ../source/key_projects.rst:316
msgid ""
"`Docs <https://twine.readthedocs.io/en/latest/>`__ | `Issues <https://github."
"com/pypa/twine/issues>`__ | `GitHub <https://github.com/pypa/twine>`__ | "
"`PyPI <https://pypi.org/project/twine>`__"
msgstr ""
"`Documentação <https://twine.readthedocs.io/en/latest/>`__ | `Issues "
"<https://github.com/pypa/twine/issues>`__ | `GitHub <https://github.com/pypa/"
"twine>`__ | `PyPI <https://pypi.org/project/twine>`__"

#: ../source/key_projects.rst:321
msgid ""
"Twine is the primary tool developers use to upload packages to the Python "
"Package Index or other Python package indexes. It is a command-line program "
"that passes program files and metadata to a web API. Developers use it "
"because it's the official PyPI upload tool, it's fast and secure, it's "
"maintained, and it reliably works."
msgstr ""
"Twine é a principal ferramenta que os desenvolvedores usam para enviar "
"pacotes para o índice de pacotes Python ou outros Python Package Index. É um "
"programa de linha de comando que passa arquivos de programa e metadados para "
"uma API web. Os desenvolvedores o usam porque é a ferramenta oficial de "
"envio do PyPI, é rápida e segura, é mantida e funciona de forma confiável."

#: ../source/key_projects.rst:331 ../source/overview.rst:405
msgid "virtualenv"
msgstr "virtualenv"

#: ../source/key_projects.rst:333
msgid ""
"`Docs <https://virtualenv.pypa.io/en/stable/index.html>`__ | `Issues "
"<https://github.com/pypa/virtualenv/issues>`__ | `GitHub <https://github.com/"
"pypa/virtualenv>`__ | `PyPI <https://pypi.org/project/virtualenv/>`__"
msgstr ""
"`Documentação <https://virtualenv.pypa.io/en/stable/index.html>`__ | `Issues "
"<https://github.com/pypa/virtualenv/issues>`__ | `GitHub <https://github.com/"
"pypa/virtualenv>`__ | `PyPI <https://pypi.org/project/virtualenv/>`__"

#: ../source/key_projects.rst:338
msgid ""
"virtualenv is a tool for creating isolated Python :term:`Virtual "
"Environments <Virtual Environment>`, like :ref:`venv`. Unlike :ref:`venv`, "
"virtualenv can create virtual environments for other versions of Python, "
"which it locates using the PATH environment variable. It also provides "
"convenient features for configuring, maintaining, duplicating, and "
"troubleshooting virtual environments. For more information, see the section "
"on :ref:`Creating and using Virtual Environments`."
msgstr ""
"virtualenv é uma ferramenta para criar :term:`Ambientes Virtuais <Virtual "
"Environment>` isolados do Python, de forma similar ao :ref:`venv`. Ao "
"contrário de :ref:`venv`, virtualenv pode criar ambientes virtuais para "
"outras versões de Python, que ele localiza usando a variável ambiente PATH. "
"Ele também fornece recursos convenientes para configurar, manter, duplicar e "
"solucionar ambientes virtuais. Para obter mais informações, consulte a "
"seção :ref:`Creating and using Virtual Environments`."

#: ../source/key_projects.rst:350
msgid "Warehouse"
msgstr "Warehouse"

#: ../source/key_projects.rst:352
msgid ""
"`Docs <https://warehouse.pypa.io/>`__ | `Issues <https://github.com/pypa/"
"warehouse/issues>`__ | `GitHub <https://github.com/pypa/warehouse>`__"
msgstr ""
"`Documentação <https://warehouse.pypa.io/>`__ | `Issues <https://github.com/"
"pypa/warehouse/issues>`__ | `GitHub <https://github.com/pypa/warehouse>`__"

#: ../source/key_projects.rst:356
msgid ""
"The current codebase powering the :term:`Python Package Index (PyPI)`. It is "
"hosted at `pypi.org <https://pypi.org/>`_. The default source for :ref:`pip` "
"downloads."
msgstr ""
"A base de código atual que alimenta o :term:`Python Package Index (PyPI)`. "
"Está hospedado em `pypi.org <https://pypi.org/>`_. A fonte padrão para "
"downloads do :ref:`pip`."

#: ../source/key_projects.rst:364
msgid "wheel"
msgstr "wheel"

#: ../source/key_projects.rst:366
msgid ""
"`Docs <https://wheel.readthedocs.io/en/latest/>`__ | `Issues <https://github."
"com/pypa/wheel/issues>`__ | `GitHub <https://github.com/pypa/wheel>`__ | "
"`PyPI <https://pypi.org/project/wheel>`__"
msgstr ""
"`Documentação <https://wheel.readthedocs.io/en/latest/>`__ | `Issues "
"<https://github.com/pypa/wheel/issues>`__ | `GitHub <https://github.com/pypa/"
"wheel>`__ | `PyPI <https://pypi.org/project/wheel>`__"

#: ../source/key_projects.rst:371
msgid ""
"Primarily, the wheel project offers the ``bdist_wheel`` :ref:`setuptools` "
"extension for creating :term:`wheel distributions <Wheel>`.  Additionally, "
"it offers its own command line utility for creating and installing wheels."
msgstr ""
"Primeiramente, o projeto wheel oferece a extensão ``bdist_wheel`` do :ref:"
"`setuptools` para criar :term:`distribuições wheel <Wheel>`. Além disso, "
"oferece seu próprio utilitário de linha de comando para criar e instalar "
"wheels."

#: ../source/key_projects.rst:375
msgid ""
"See also `auditwheel <https://github.com/pypa/auditwheel>`__, a tool that "
"package developers use to check and fix Python packages they are making in "
"the binary wheel format. It provides functionality to discover dependencies, "
"check metadata for compliance, and repair the wheel and metadata to properly "
"link and include external shared libraries in a package."
msgstr ""
"Veja também `auditwheel <https://github.com/pypa/auditwheel>`__, uma "
"ferramenta que os desenvolvedores de pacotes usam para verificar e corrigir "
"pacotes Python que eles estão fazendo no formato de roda binária. Ele "
"fornece funcionalidade para descobrir dependências, verificar a conformidade "
"dos metadados e corrigir wheel e os metadados para vincular e incluir "
"bibliotecas externas compartilhadas em um pacote."

#: ../source/key_projects.rst:384
msgid "Non-PyPA Projects"
msgstr "Projetos não-PyPA"

#: ../source/key_projects.rst:389
msgid "buildout"
msgstr "buildout"

#: ../source/key_projects.rst:391
msgid ""
"`Docs <http://www.buildout.org/en/latest/>`__ | `Issues <https://bugs."
"launchpad.net/zc.buildout>`__ | `PyPI <https://pypi.org/project/zc."
"buildout>`__ | `GitHub <https://github.com/buildout/buildout/>`__"
msgstr ""
"`Documentação <http://www.buildout.org/en/latest/>`__ | `Issues <https://"
"bugs.launchpad.net/zc.buildout>`__ | `PyPI <https://pypi.org/project/zc."
"buildout>`__ | `GitHub <https://github.com/buildout/buildout/>`__"

#: ../source/key_projects.rst:396
msgid ""
"Buildout is a Python-based build system for creating, assembling and "
"deploying applications from multiple parts, some of which may be non-Python-"
"based.  It lets you create a buildout configuration and reproduce the same "
"software later."
msgstr ""
"Buildout é um sistema de construção baseado em Python para criar, montar e "
"distribuir aplicações de várias partes, algumas das quais podem ser não "
"baseadas em Python. Ele permite que você crie uma configuração de buildout e "
"reproduza o mesmo software posteriormente."

#: ../source/key_projects.rst:403
msgid "conda"
msgstr "conda"

#: ../source/key_projects.rst:405
msgid ":doc:`Docs <conda:index>`"
msgstr ":doc:`Documentação <conda:index>`"

#: ../source/key_projects.rst:407
msgid ""
"Conda is a package, dependency, and environment management system for any "
"language — Python, R, Ruby, C/C++, Fortran, and more. It is written in "
"Python and widely used in the Python scientific computing community, due to "
"its support for non-Python compiled libraries and extensions. It is used as "
"the basis of the `Anaconda <https://docs.anaconda.com/anaconda/>`__ Python "
"distribution from Anaconda, Inc. It was originally aimed at the scientific "
"community, but can also be used on its own, or with the :doc:`miniconda "
"<conda:miniconda>`, `miniforge <https://github.com/conda-forge/miniforge>`_ "
"or `pixi <https://pixi.sh/>`_ systems. It is available for Windows, Mac and "
"Linux systems."
msgstr ""

#: ../source/key_projects.rst:416
#, fuzzy
#| msgid ""
#| "Conda is a completely separate tool from :ref:`pip`, virtualenv and "
#| "wheel, but provides many of their combined features in terms of package "
#| "management, virtual environment management and deployment of binary "
#| "extensions."
msgid ""
"Conda is a completely separate tool from :ref:`pip`, virtualenv and wheel, "
"but provides many of their combined features, such as package management, "
"virtual environment management and deployment of binary extensions and other "
"binary code."
msgstr ""
"Conda é uma ferramenta completamente separada de :ref:`pip`, virtualenv e "
"wheel, mas fornece muitos de seus recursos combinados em termos de "
"gerenciamento de pacotes, gerenciamento de ambiente virtual e implantação de "
"extensões binárias."

#: ../source/key_projects.rst:420
msgid ""
"Conda does not install packages from PyPI -- it can only manage packages "
"built specifically for conda, which can be made available on a \"conda "
"channel\", such as those hosted on `anaconda.org <https://anaconda.org>`__, "
"or a local (e.g. intranet) package server. In addition to the \"default\" "
"channels managed by `Anaconda, Inc. <https://www.anaconda.com/>`__, there "
"are a wide variety of packages from the community supported `conda-forge "
"project <https://conda-forge.org/>`__"
msgstr ""

#: ../source/key_projects.rst:426
#, fuzzy
#| msgid ""
#| "Conda does not install packages from PyPI and can install only from the "
#| "official Anaconda repositories, or anaconda.org (a place for user-"
#| "contributed *conda* packages), or a local (e.g. intranet) package "
#| "server.  However, note that :ref:`pip` can be installed into, and work "
#| "side-by-side with conda for managing :term:`distributions <Distribution "
#| "Package>` from PyPI. Also, `conda skeleton <https://docs.conda.io/"
#| "projects/conda-build/en/latest/user-guide/tutorials/build-pkgs-skeleton."
#| "html>`__ is a tool to make Python packages installable by conda by first "
#| "fetching them from PyPI and modifying their metadata."
msgid ""
"Note that :ref:`pip` can be installed into, and work side-by-side with conda "
"for managing :term:`distributions <Distribution Package>` from PyPI. It is "
"also possible to build conda packages from Python source packages using "
"tools such as `conda skeleton <https://docs.conda.io/projects/conda-build/en/"
"latest/user-guide/tutorials/build-pkgs-skeleton.html>`__: a tool to "
"automatically make conda packages from Python packages available on PyPI."
msgstr ""
"O Conda não instala pacotes do PyPI e pode instalar apenas a partir dos "
"repositórios oficiais do Anaconda, ou anaconda.org (um local para pacotes "
"*conda* contribuídos pelo usuário), ou um servidor de pacotes local (por "
"exemplo, intranet). No entanto, observe que :ref:`pip` pode ser instalado e "
"trabalhar lado a lado com o conda para gerenciar :term:`distribuições "
"<Pacote de Distribuição>` do PyPI. Além disso, `conda skeleton <https://docs."
"conda.io/projects/conda-build/en/latest/user-guide/tutorials/build-pkgs-"
"skeleton.html>`__ é uma ferramenta para fazer pacotes Python instaláveis "
"pelo conda primeiro obtendo-os em PyPI e modificando seus metadados."

#: ../source/key_projects.rst:435
msgid "devpi"
msgstr "devpi"

#: ../source/key_projects.rst:437
msgid ""
"`Docs <http://doc.devpi.net/latest/>`__ | :gh:`Issues <devpi/devpi/issues>` "
"| `PyPI <https://pypi.org/project/devpi>`__"
msgstr ""
"`Documentação <http://doc.devpi.net/latest/>`__ | :gh:`Issues <devpi/devpi/"
"issues>` | `PyPI <https://pypi.org/project/devpi>`__"

#: ../source/key_projects.rst:441
#, fuzzy
msgid ""
"devpi features a powerful PyPI-compatible server and PyPI proxy cache with a "
"complementary command line tool to drive packaging, testing and release "
"activities with Python. devpi also provides a browsable and searchable web "
"interface. devpi supports mirroring PyPI, multiple :term:`package indexes "
"<Package Index>` with inheritance, syncing between these indexes, index "
"replication and fail-over, and package upload."
msgstr ""
"devpi apresenta um poderoso servidor compatível com PyPI e cache de proxy "
"PyPI com uma ferramenta de linha de comando complementar para conduzir "
"atividades de empacotamento, teste e lançamento com Python. devpi também "
"fornece uma interface web navegável e pesquisável."

#: ../source/key_projects.rst:452
msgid "dumb-pypi"
msgstr ""

#: ../source/key_projects.rst:454
#, fuzzy
msgid ""
"`GitHub <https://github.com/chriskuehl/dumb-pypi>`__ | `PyPI <https://pypi."
"org/project/dumb-pypi>`__"
msgstr ""
"`GitHub <https://github.com/pypiserver/pypiserver>`__ | `PyPI <https://pypi."
"org/project/pypiserver/>`__"

#: ../source/key_projects.rst:457
msgid ""
"dumb-pypi is a simple :term:`package index <Package Index>` static file site "
"generator, which then must be hosted by a static file webserver to become "
"the package index. It supports serving the hash, core-metadata, and yank-"
"status."
msgstr ""

#: ../source/key_projects.rst:464
msgid "enscons"
msgstr "enscons"

#: ../source/key_projects.rst:466
msgid ""
":gh:`Source <dholth/enscons>` | :gh:`Issues <dholth/enscons/issues>` | `PyPI "
"<https://pypi.org/project/enscons>`__"
msgstr ""
":gh:`Código-fonte <dholth/enscons>` | :gh:`Issues <dholth/enscons/issues>` | "
"`PyPI <https://pypi.org/project/enscons>`__"

#: ../source/key_projects.rst:470
msgid ""
"Enscons is a Python packaging tool based on `SCons`_. It builds :ref:`pip`-"
"compatible source distributions and wheels without using distutils or "
"setuptools, including distributions with C extensions. Enscons has a "
"different architecture and philosophy than :ref:`distutils`. Rather than "
"adding build features to a Python packaging system, enscons adds Python "
"packaging to a general purpose build system. Enscons helps you to build "
"sdists that can be automatically built by :ref:`pip`, and wheels that are "
"independent of enscons."
msgstr ""
"Enscons é uma ferramenta de empacotamento Python baseada em `SCons`_. Ele "
"cria distribuições de código-fonte compatíveis com :ref:`pip` e wheels sem "
"usar distutils ou setuptools, incluindo distribuições com extensões C. "
"Enscons tem uma arquitetura e filosofia diferente de :ref:`distutils`. Em "
"vez de adicionar recursos de compilação a um sistema de empacotamento "
"Python, enscons adiciona empacotamento Python a um sistema de construção de "
"propósito geral. Enscons ajuda você a construir sdists que podem ser "
"construídos automaticamente por :ref:`pip`, e wheels que são independentes "
"de enscons."

#: ../source/key_projects.rst:485
msgid "Flask-Pypi-Proxy"
msgstr ""

#: ../source/key_projects.rst:487
#, fuzzy
msgid ""
"`Docs <https://flask-pypi-proxy.readthedocs.io>`__ | :gh:`GitHub <tzulberti/"
"Flask-PyPi-Proxy>` | `PyPI <https://pypi.org/project/Flask-Pypi-Proxy/>`__"
msgstr ""
"`Documentação <https://shiv.readthedocs.io/en/latest/>`__ | `GitHub <https://"
"github.com/linkedin/shiv>`__ | `PyPI <https://pypi.org/project/shiv/>`__"

#: ../source/key_projects.rst:491 ../source/key_projects.rst:685
#: ../source/key_projects.rst:744
msgid "Not maintained, project archived"
msgstr ""

#: ../source/key_projects.rst:493
msgid ""
"Flask-Pypi-Proxy is a :term:`package index <Package Index>` as a cached "
"proxy for PyPI."
msgstr ""

#: ../source/key_projects.rst:499
msgid "Hashdist"
msgstr "Hashdist"

#: ../source/key_projects.rst:501
msgid ""
"`Docs <https://hashdist.readthedocs.io/en/latest/>`__ | `GitHub <https://"
"github.com/hashdist/hashdist/>`__"
msgstr ""
"`Documentação <https://hashdist.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/hashdist/hashdist/>`__"

#: ../source/key_projects.rst:504
msgid ""
"Hashdist is a library for building non-root software distributions. Hashdist "
"is trying to be “the Debian of choice for cases where Debian technology "
"doesn’t work”. The best way for Pythonistas to think about Hashdist may be a "
"more powerful hybrid of :ref:`virtualenv` and :ref:`buildout`. It is aimed "
"at solving the problem of installing scientific software, and making package "
"distribution stateless, cached, and branchable. It is used by some "
"researchers but has been lacking in maintenance since 2016."
msgstr ""
"Hashdist é uma biblioteca para construir distribuições de software que não "
"dependem do root. Hashdist está tentando ser \"o preferido do Debian para os "
"casos em que a tecnologia Debian não funciona\". A melhor maneira para "
"Pythonistas pensarem sobre Hashdist pode ser um híbrido mais poderoso de :"
"ref:`virtualenv` e :ref:`buildout`. Ele tem como objetivo resolver o "
"problema de instalação de software científico e tornar a distribuição de "
"pacotes sem estado, com cache e com capacidade de distribuição. É usado por "
"alguns pesquisadores, mas não tem manutenção desde 2016."

#: ../source/key_projects.rst:516
msgid "Maturin"
msgstr "Maturin"

#: ../source/key_projects.rst:518
msgid ""
"`Docs <https://www.maturin.rs>`__ | `GitHub <https://github.com/PyO3/"
"maturin>`__"
msgstr ""
"`Documentação <https://www.maturin.rs>`__ | `GitHub <https://github.com/PyO3/"
"maturin>`__"

#: ../source/key_projects.rst:521
msgid ""
"Maturin is a build backend for Rust extension modules, also written in Rust. "
"It supports building wheels for python 3.7+ on Windows, Linux, macOS and "
"FreeBSD, can upload them to PyPI and has basic PyPy and GraalPy support."
msgstr ""
"Maturin é um backend de construção para módulos de extensão Rust, também "
"escrito em Rust. Ele oferece suporte à construção de rodas para python 3.7+ "
"em Windows, Linux, macOS e FreeBSD, pode enviá-las para PyPI e tem suporte "
"básico a PyPy e GraalPy."

#: ../source/key_projects.rst:529
msgid "meson-python"
msgstr "meson-python"

#: ../source/key_projects.rst:531
msgid ""
"`Docs <https://meson-python.readthedocs.io/en/latest/>`__ | `GitHub <https://"
"github.com/mesonbuild/meson-python>`__"
msgstr ""
"`Documentação <https://meson-python.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/mesonbuild/meson-python>`__"

#: ../source/key_projects.rst:534
msgid ""
"``meson-python`` is a build backend that uses the Meson_ build system. It "
"enables Python package authors to use Meson_ as the build system for their "
"package. It supports a wide variety of languages, including C, and is able "
"to fill the needs of most complex build configurations."
msgstr ""
"``meson-python`` é um backend de compilação que usa o sistema de compilação "
"Meson_. Ele permite que os autores de pacotes Python usem o Meson_ como o "
"sistema de compilação para seus pacotes. Ele oferece suporte a uma ampla "
"variedade de linguagens, incluindo C, e é capaz de atender às necessidades "
"das configurações de compilação mais complexas."

#: ../source/key_projects.rst:544
msgid "multibuild"
msgstr "multibuild"

#: ../source/key_projects.rst:546
msgid "`GitHub <https://github.com/multi-build/multibuild>`__"
msgstr "`GitHub <https://github.com/multi-build/multibuild>`__"

#: ../source/key_projects.rst:548
msgid ""
"Multibuild is a set of CI scripts for building and testing Python :term:"
"`wheels <Wheel>` for Linux, macOS, and (less flexibly) Windows. Also see :"
"ref:`cibuildwheel`."
msgstr ""
"Multibuild é um conjunto de scripts de CI para construir e testar Python :"
"term:`wheels <Wheel>` para Linux, macOS e (menos flexível) Windows. Veja "
"também :ref:`cibuildwheel`."

#: ../source/key_projects.rst:554
msgid "nginx_pypi_cache"
msgstr ""

#: ../source/key_projects.rst:556
msgid ":gh:`GitHub <hauntsaninja/nginx_pypi_cache>`"
msgstr ""

#: ../source/key_projects.rst:558
msgid ""
"nginx_pypi_cache is a :term:`package index <Package Index>` caching proxy "
"using `nginx <https://nginx.org/en/>`_."
msgstr ""

#: ../source/key_projects.rst:564
msgid "pdm"
msgstr "pdm"

#: ../source/key_projects.rst:566
msgid ""
"`Docs <https://pdm.fming.dev/>`__ | `GitHub <https://github.com/pdm-project/"
"pdm/>`__ | `PyPI <https://pypi.org/project/pdm>`__"
msgstr ""
"`Documentação <https://pdm.fming.dev/>`__ | `GitHub <https://github.com/pdm-"
"project/pdm/>`__ | `PyPI <https://pypi.org/project/pdm>`__"

#: ../source/key_projects.rst:570
msgid ""
"PDM is a modern Python package manager. It uses :term:`pyproject.toml` to "
"store project metadata as defined in :pep:`621`."
msgstr ""
"PDM é um gerenciador de pacotes Python moderno. Ele também usa :term:"
"`pyproject.toml` para armazenar metadados do projeto conforme definido em :"
"pep:`621`."

#: ../source/key_projects.rst:578
msgid ""
"`Docs <https://pex.readthedocs.io/en/latest/>`__ | `GitHub <https://github."
"com/pantsbuild/pex/>`__ | `PyPI <https://pypi.org/project/pex>`__"
msgstr ""
"`Documentação <https://pex.readthedocs.io/en/latest/>`__ | `GitHub <https://"
"github.com/pantsbuild/pex/>`__ | `PyPI <https://pypi.org/project/pex>`__"

#: ../source/key_projects.rst:582
msgid ""
"Pex is a tool for generating :file:`.pex` (Python EXecutable) files, "
"standalone Python environments in the spirit of :ref:`virtualenv`. PEX files "
"are :doc:`zipapps <python:library/zipapp>` that make deployment of Python "
"applications as simple as ``cp``. A single PEX file can support multiple "
"target platforms and can be created from standard :ref:`pip`-resolvable "
"requirements, a lockfile generated with ``pex3 lock ...`` or even another "
"PEX. PEX files can optionally have tools embedded that support turning the "
"PEX file into a standard venv, graphing dependencies and more."
msgstr ""

#: ../source/key_projects.rst:594
msgid "pip-tools"
msgstr "pip-tools"

#: ../source/key_projects.rst:596
msgid ""
"`Docs <https://pip-tools.readthedocs.io/en/latest/>`__ | `GitHub <https://"
"github.com/jazzband/pip-tools/>`__ | `PyPI <https://pypi.org/project/pip-"
"tools/>`__"
msgstr ""
"`Documentação <https://pip-tools.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/jazzband/pip-tools/>`__ | `PyPI <https://pypi.org/"
"project/pip-tools/>`__"

#: ../source/key_projects.rst:600
msgid ""
"pip-tools is a suite of tools meant for Python system administrators and "
"release managers who particularly want to keep their builds deterministic "
"yet stay up to date with new versions of their dependencies. Users can "
"specify particular release of their dependencies via hash, conveniently make "
"a properly formatted list of requirements from information in other parts of "
"their program, update all dependencies (a feature :ref:`pip` currently does "
"not provide), and create layers of constraints for the program to obey."
msgstr ""
"pip-tools é um conjunto de ferramentas destinadas aos administradores de "
"sistema Python e gerentes de lançamento que desejam manter suas compilações "
"determinísticas e, ao mesmo tempo, manter-se atualizado com as novas versões "
"de suas dependências. Os usuários podem especificar a liberação particular "
"de suas dependências por meio de hash, fazer convenientemente uma lista "
"devidamente formatada de requisitos de informações em outras partes de seu "
"programa, atualizar todas as dependências (um recurso :ref:`pip` atualmente "
"não fornece) e criar camadas de restrições para o programa obedecer."

#: ../source/key_projects.rst:612
msgid "pip2pi"
msgstr ""

#: ../source/key_projects.rst:614
#, fuzzy
msgid ""
":gh:`GitHub <wolever/pip2pi>` | `PyPI <https://pypi.org/project/pip2pi/>`__"
msgstr ""
"`GitHub <https://github.com/pypiserver/pypiserver>`__ | `PyPI <https://pypi."
"org/project/pypiserver/>`__"

#: ../source/key_projects.rst:617
msgid ""
"pip2pi is a :term:`package index <Package Index>` server where specific "
"packages are manually synchronised."
msgstr ""

#: ../source/key_projects.rst:623
msgid "piwheels"
msgstr "piwheels"

#: ../source/key_projects.rst:625
msgid ""
"`Website <https://www.piwheels.org/>`__ | :doc:`Docs <piwheels:index>` | "
"`GitHub <https://github.com/piwheels/piwheels/>`__"
msgstr ""
"`Site <https://www.piwheels.org/>`__ | :doc:`Documentação <piwheels:index>` "
"| `GitHub <https://github.com/piwheels/piwheels/>`__"

#: ../source/key_projects.rst:629
msgid ""
"piwheels is a website, and software underpinning it, that fetches source "
"code distribution packages from PyPI and compiles them into binary wheels "
"that are optimized for installation onto Raspberry Pi computers. Raspberry "
"Pi OS pre-configures pip to use piwheels.org as an additional index to PyPI."
msgstr ""
"piwheels é um site, e o software que o sustenta, que busca pacotes de "
"distribuição de código-fonte do PyPI e os compila em wheels binários que são "
"otimizadas para instalação em computadores Raspberry Pi. O Raspberry Pi OS "
"pré-configura pip para usar piwheels.org como um índice adicional para PyPI."

#: ../source/key_projects.rst:638
msgid "poetry"
msgstr "poetry"

#: ../source/key_projects.rst:640
msgid ""
"`Docs <https://python-poetry.org/>`__ | `GitHub <https://github.com/python-"
"poetry/poetry>`__ | `PyPI <https://pypi.org/project/poetry/>`__"
msgstr ""
"`Documentação <https://python-poetry.org/>`__ | `GitHub <https://github.com/"
"python-poetry/poetry>`__ | `PyPI <https://pypi.org/project/poetry/>`__"

#: ../source/key_projects.rst:644
msgid ""
"poetry is a command-line tool to handle dependency installation and "
"isolation as well as building and packaging of Python packages. It uses "
"``pyproject.toml`` and, instead of depending on the resolver functionality "
"within :ref:`pip`, provides its own dependency resolver. It attempts to "
"speed users' experience of installation and dependency resolution by locally "
"caching metadata about dependencies."
msgstr ""
"poetry é uma ferramenta de linha de comando para lidar com a instalação de "
"dependências e isolamento, bem como construção e empacotamento de pacotes "
"Python. Ele usa ``pyproject.toml`` e, ao invés de depender da funcionalidade "
"do resolvedor no :ref:`pip`, fornece seu próprio resolvedor de dependências. "
"Ele tenta acelerar a experiência dos usuários de instalação e resolução de "
"dependências, armazenando localmente em cache os metadados sobre as "
"dependências."

#: ../source/key_projects.rst:654
msgid "proxpi"
msgstr ""

#: ../source/key_projects.rst:656
#, fuzzy
msgid ""
":gh:`GitHub <EpicWink/proxpi>` | `PyPI <https://pypi.org/project/proxpi/>`__"
msgstr ""
"`GitHub <https://github.com/pypiserver/pypiserver>`__ | `PyPI <https://pypi."
"org/project/pypiserver/>`__"

#: ../source/key_projects.rst:659
msgid ""
"proxpi is a simple :term:`package index <Package Index>` which proxies PyPI "
"and other indexes with caching."
msgstr ""

#: ../source/key_projects.rst:665
#, fuzzy
msgid "Pulp-python"
msgstr "python"

#: ../source/key_projects.rst:667
#, fuzzy
msgid ""
"`Docs <https://docs.pulpproject.org/pulp_python/>`__ | :gh:`GitHub <pulp/"
"pulp_python>` | `PyPI <https://pypi.org/project/pulp-python/>`__"
msgstr ""
"`Documentação <https://pipx.pypa.io/>`__ | `GitHub <https://github.com/pypa/"
"pipx>`__ | `PyPI <https://pypi.org/project/pipx/>`__"

#: ../source/key_projects.rst:671
msgid ""
"Pulp-python is the Python :term:`package index <Package Index>` plugin for "
"`Pulp <https://pulpproject.org/>`_. Pulp-python supports mirrors backed by "
"local or `AWS S3`_, package upload, and proxying to multiple package indexes."
msgstr ""

#: ../source/key_projects.rst:679
msgid "PyPI Cloud"
msgstr ""

#: ../source/key_projects.rst:681
#, fuzzy
msgid ""
"`Docs <https://pypicloud.readthedocs.io/>`__ | :gh:`GitHub <stevearc/"
"pypicloud>` | `PyPI <https://pypi.org/project/pypicloud/>`__"
msgstr ""
"`Documentação <https://pipx.pypa.io/>`__ | `GitHub <https://github.com/pypa/"
"pipx>`__ | `PyPI <https://pypi.org/project/pipx/>`__"

#: ../source/key_projects.rst:687
msgid ""
"PyPI Cloud is a :term:`package index <Package Index>` server, backed by `AWS "
"S3`_ or another cloud storage service, or local files. PyPI Cloud supports "
"redirect/cached proxying for PyPI, as well as authentication and "
"authorisation."
msgstr ""

#: ../source/key_projects.rst:695
#, fuzzy
msgid "pypiprivate"
msgstr "pypiserver"

#: ../source/key_projects.rst:697
#, fuzzy
msgid ""
":gh:`GitHub <helpshift/pypiprivate>` | `PyPI <https://pypi.org/project/"
"pypiprivate/>`__"
msgstr ""
"`GitHub <https://github.com/pypiserver/pypiserver>`__ | `PyPI <https://pypi."
"org/project/pypiserver/>`__"

#: ../source/key_projects.rst:700
msgid ""
"pypiprivate serves a local (or `AWS S3`_-hosted) directory of packages as a :"
"term:`package index <Package Index>`."
msgstr ""

#: ../source/key_projects.rst:706
msgid "pypiserver"
msgstr "pypiserver"

#: ../source/key_projects.rst:708
msgid ""
"`GitHub <https://github.com/pypiserver/pypiserver>`__ | `PyPI <https://pypi."
"org/project/pypiserver/>`__"
msgstr ""
"`GitHub <https://github.com/pypiserver/pypiserver>`__ | `PyPI <https://pypi."
"org/project/pypiserver/>`__"

#: ../source/key_projects.rst:711
#, fuzzy
msgid ""
"pypiserver is a minimalist application that serves as a private Python :term:"
"`package index <Package Index>` (from a local directory) within "
"organizations, implementing a simple API and browser interface. You can "
"upload private packages using standard upload tools, and users can download "
"and install them with :ref:`pip`, without publishing them publicly. "
"Organizations who use pypiserver usually download packages both from "
"pypiserver and from PyPI."
msgstr ""
"pypiserver é uma aplicação minimalista que serve como um índice de pacotes "
"privado Python dentro das organizações, implementando uma API simples e uma "
"interface de navegador. Você pode enviar pacotes privados usando ferramentas "
"de envio padrão, e os usuários podem baixar e instalá-los com :ref:`pip`, "
"sem publicá-los publicamente. As organizações que usam o pypiserver "
"geralmente baixam pacotes tanto do pypiserver quanto do PyPI."

#: ../source/key_projects.rst:722
msgid "PyScaffold"
msgstr "PyScaffold"

#: ../source/key_projects.rst:724
msgid ""
"`Docs <https://pyscaffold.org>`__ | `GitHub <https://github.com/pyscaffold/"
"pyscaffold>`__ | `PyPI <https://pypi.org/project/pyscaffold/>`__"
msgstr ""
"`Documentação <https://pyscaffold.org>`__ | `GitHub <https://github.com/"
"pyscaffold/pyscaffold>`__ | `PyPI <https://pypi.org/project/pyscaffold/>`__"

#: ../source/key_projects.rst:728
msgid ""
"PyScaffold is a project generator for bootstrapping Python packages, ready "
"to be shared on PyPI and installable via :ref:`pip`. It relies on a set of "
"sane default configurations for established tools (such as :ref:"
"`setuptools`, pytest_ and Sphinx_) to provide a productive environment so "
"developers can start coding right away. PyScaffold can also be used with "
"existing projects to make packaging easier."
msgstr ""
"PyScaffold é um gerador de projeto para inicialização de pacotes Python, "
"pronto para ser compartilhado no PyPI e instalável via :ref:`pip`. Ele se "
"baseia em um conjunto de configurações padrão sãs para ferramentas "
"estabelecidas (como o :ref:`setuptools`, pytest_ e Sphinx_) para fornecer um "
"ambiente produtivo para que os desenvolvedores possam começar a codificar "
"imediatamente. PyScaffold também pode ser usado com projetos existentes para "
"tornar o empacotamento mais fácil."

#: ../source/key_projects.rst:739
msgid "pywharf"
msgstr ""

#: ../source/key_projects.rst:741
#, fuzzy
msgid ""
":gh:`GitHub <pywharf/pywharf>` | `PyPI <https://pypi.org/project/pywharf>`__"
msgstr ""
"`GitHub e documentação <https://github.com/pypa/hatch>`__ | `PyPI <https://"
"pypi.org/project/hatch>`__"

#: ../source/key_projects.rst:746
msgid ""
"pywharf is a :term:`package index <Package Index>` server, serving files "
"locally or from `GitHub <https://github.com/>`_."
msgstr ""

#: ../source/key_projects.rst:752
msgid "scikit-build"
msgstr "scikit-build"

#: ../source/key_projects.rst:754
msgid ""
"`Docs <https://scikit-build.readthedocs.io/en/latest/>`__ | `GitHub <https://"
"github.com/scikit-build/scikit-build/>`__ | `PyPI <https://pypi.org/project/"
"scikit-build>`__"
msgstr ""
"`Documentação <https://scikit-build.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/scikit-build/scikit-build/>`__ | `PyPI <https://pypi.org/"
"project/scikit-build>`__"

#: ../source/key_projects.rst:758
msgid ""
"Scikit-build is a :ref:`setuptools` wrapper for CPython that builds C/C++/"
"Fortran/Cython extensions It uses `cmake <https://pypi.org/project/cmake>`__ "
"(available on PyPI) to provide better support for additional compilers, "
"build systems, cross compilation, and locating dependencies and their "
"associated build requirements. To speed up and parallelize the build of "
"large projects, the user can install `ninja <https://pypi.org/project/"
"ninja>`__ (also available on PyPI)."
msgstr ""
"Scikit-build é um wrapper do :ref:`setuptools` para CPython que constrói "
"extensões C/C++/Fortran/Cython. Ele usa `cmake <https://pypi.org/project/"
"cmake>`__ (disponível em PyPI) para fornecer melhor suporte para "
"compiladores adicionais, sistemas de construção, compilação cruzada e "
"localização de dependências e seus requisitos de compilação associados. Para "
"acelerar e paralelizar a construção de grandes projetos, o usuário pode "
"instalar `ninja <https://pypi.org/project/ninja>`__ (também disponível em "
"PyPI)."

#: ../source/key_projects.rst:769
msgid "scikit-build-core"
msgstr "scikit-build-core"

#: ../source/key_projects.rst:771
msgid ""
"`Docs <https://scikit-build-core.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/scikit-build/scikit-build-core/>`__ | `PyPI <https://"
"pypi.org/project/scikit-build-core>`__"
msgstr ""
"`Documentação <https://scikit-build-core.readthedocs.io/en/latest/>`__ | "
"`GitHub <https://github.com/scikit-build/scikit-build-core/>`__ | `PyPI "
"<https://pypi.org/project/scikit-build-core>`__"

#: ../source/key_projects.rst:775
msgid ""
"Scikit-build-core is a build backend for CPython C/C++/Fortran/Cython "
"extensions.  It enables users to write extensions with `cmake <https://pypi."
"org/project/cmake>`__ (available on PyPI) to provide better support for "
"additional compilers, build systems, cross compilation, and locating "
"dependencies and their associated build requirements. CMake/Ninja are "
"automatically downloaded from PyPI if not available on the system."
msgstr ""
"Scikit-build-core é um back-end de construção para extensões CPython C/C++/"
"Fortran/Cython. Ele permite que os usuários escrevam extensões com `cmake "
"<https://pypi.org/project/cmake>`__ (disponível no PyPI) para fornecer "
"melhor suporte para compiladores adicionais, sistemas de construção, "
"compilação cruzada e localização de dependências e suas construções "
"associadas requisitos. CMake/Ninja são baixados automaticamente do PyPI se "
"não estiverem disponíveis no sistema."

#: ../source/key_projects.rst:785
msgid "shiv"
msgstr "shiv"

#: ../source/key_projects.rst:787
msgid ""
"`Docs <https://shiv.readthedocs.io/en/latest/>`__ | `GitHub <https://github."
"com/linkedin/shiv>`__ | `PyPI <https://pypi.org/project/shiv/>`__"
msgstr ""
"`Documentação <https://shiv.readthedocs.io/en/latest/>`__ | `GitHub <https://"
"github.com/linkedin/shiv>`__ | `PyPI <https://pypi.org/project/shiv/>`__"

#: ../source/key_projects.rst:791
msgid ""
"shiv is a command line utility for building fully self contained Python "
"zipapps as outlined in :pep:`441`, but with all their dependencies included. "
"Its primary goal is making distributing Python applications and command line "
"tools fast & easy."
msgstr ""
"shiv é um utilitário de linha de comando para construir *zipapps* Python "
"totalmente autocontidos conforme descrito na :pep:`441`, mas com todas as "
"suas dependências incluídas. Seu objetivo principal é tornar a distribuição "
"Python de aplicações e ferramentas de linha de comando rápida e fácil."

#: ../source/key_projects.rst:799
msgid "simpleindex"
msgstr ""

#: ../source/key_projects.rst:801
#, fuzzy
msgid ""
":gh:`GitHub <uranusjr/simpleindex>` | `PyPI <https://pypi.org/project/"
"simpleindex/>`__"
msgstr ""
"`GitHub <https://github.com/pypiserver/pypiserver>`__ | `PyPI <https://pypi."
"org/project/pypiserver/>`__"

#: ../source/key_projects.rst:804
msgid ""
"simpleindex is a :term:`package index <Package Index>` which routes URLs to "
"multiple package indexes (including PyPI), serves local (or cloud-hosted, "
"for example `AWS S3`_, with a custom plugin) directories of packages, and "
"supports custom plugins."
msgstr ""

#: ../source/key_projects.rst:814
msgid ""
":doc:`Docs <spack:index>` | `GitHub <https://github.com/spack/spack>`__ | "
"`Paper <https://www.computer.org/csdl/proceedings-article/"
"sc/2015/2807623/12OmNBf94Xq>`__ | `Slides <https://tgamblin.github.io/files/"
"Gamblin-Spack-SC15-Talk.pdf>`__"
msgstr ""
":doc:`Documentação <spack:index>` | `GitHub <https://github.com/spack/"
"spack>`__ | `Artigo <https://www.computer.org/csdl/proceedings-article/"
"sc/2015/2807623/12OmNBf94Xq>`__ | `Slides <https://tgamblin.github.io/files/"
"Gamblin-Spack-SC15-Talk.pdf>`__"

#: ../source/key_projects.rst:819
msgid ""
"A flexible package manager designed to support multiple versions, "
"configurations, platforms, and compilers.  Spack is like Homebrew, but "
"packages are written in Python and parameterized to allow easy swapping of "
"compilers, library versions, build options, etc. Arbitrarily many versions "
"of packages can coexist on the same system. Spack was designed for rapidly "
"building high performance scientific applications on clusters and "
"supercomputers."
msgstr ""
"Um gerenciador de pacotes flexível projetado para oferecer suporte a várias "
"versões, configurações, plataformas e compiladores. O Spack é como o "
"Homebrew, mas os pacotes são escritos em Python e parametrizados para "
"permitir fácil troca de compiladores, versões de bibliotecas, opções de "
"construção, etc. Arbitrariamente, muitas versões de pacotes podem coexistir "
"no mesmo sistema. O Spack foi projetado para construir rapidamente "
"aplicações científicas de alto desempenho em clusters e supercomputadores."

#: ../source/key_projects.rst:827
msgid ""
"Spack is not in PyPI (yet), but it requires no installation and can be used "
"immediately after cloning from GitHub."
msgstr ""
"O Spack não está no PyPI (ainda), mas não requer instalação e pode ser usado "
"imediatamente após a clonagem do GitHub."

#: ../source/key_projects.rst:833
msgid "zest.releaser"
msgstr "zest.releaser"

#: ../source/key_projects.rst:835
msgid ""
"`Docs <https://zestreleaser.readthedocs.io/en/latest/>`__ | `GitHub <https://"
"github.com/zestsoftware/zest.releaser/>`__ | `PyPI <https://pypi.org/project/"
"zest.releaser/>`__"
msgstr ""
"`Documentação <https://zestreleaser.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/zestsoftware/zest.releaser/>`__ | `PyPI <https://pypi."
"org/project/zest.releaser/>`__"

#: ../source/key_projects.rst:839
msgid ""
"``zest.releaser`` is a Python package release tool providing an abstraction "
"layer on top of :ref:`twine`. Python developers use ``zest.releaser`` to "
"automate incrementing package version numbers, updating changelogs, tagging "
"releases in source control, and uploading new packages to PyPI."
msgstr ""
"``zest.releaser`` é uma ferramenta de lançamento de pacote Python que "
"fornece uma camada de abstração sobre :ref:`twine`. Os desenvolvedores "
"Python usam ``zest.releaser`` para automatizar o incremento de números de "
"versão de pacote, atualizando changelogs, marcando lançamentos no controle "
"de fontes e enviando novos pacotes para PyPI."

#: ../source/key_projects.rst:846
msgid "Standard Library Projects"
msgstr "Projetos de biblioteca padrão"

#: ../source/key_projects.rst:851
msgid "ensurepip"
msgstr "ensurepip"

#: ../source/key_projects.rst:853
msgid ""
"`Docs <https://docs.python.org/3/library/ensurepip.html>`__ | `Issues "
"<https://bugs.python.org/>`__"
msgstr ""
"`Documentação <https://docs.python.org/pt-br/3/library/ensurepip.html>`__ | "
"`Issues <https://bugs.python.org/>`__"

#: ../source/key_projects.rst:856
msgid ""
"A package in the Python Standard Library that provides support for "
"bootstrapping :ref:`pip` into an existing Python installation or virtual "
"environment.  In most cases, end users won't use this module, but rather it "
"will be used during the build of the Python distribution."
msgstr ""
"Um pacote na Biblioteca Padrão do Python que fornece suporte para preparar "
"o :ref:`pip` em uma instalação existente do Python ou em ambiente virtual. "
"Na maioria dos casos, os usuários finais não usarão este módulo, mas em vez "
"disso, ele será usado durante a construção da distribuição Python."

#: ../source/key_projects.rst:864
#, fuzzy
msgid "http.server"
msgstr "pypiserver"

#: ../source/key_projects.rst:866
#, fuzzy
msgid ""
":doc:`Docs <python:library/http.server>` | :gh:`Issues <python/cpython/"
"issues>`"
msgstr ""
"`Documentação <https://docs.python.org/pt-br/3/library/venv.html>`__ | "
"`Issues <https://github.com/python/cpython/issues>`__"

#: ../source/key_projects.rst:869
msgid ""
"A package and command-line interface which can host a directory as a "
"website, for example as a :term:`package index <Package Index>` (see :ref:"
"`Hosting your Own Simple Repository`)."
msgstr ""

#: ../source/key_projects.rst:876
msgid "venv"
msgstr "venv"

#: ../source/key_projects.rst:878
msgid ""
"`Docs <https://docs.python.org/3/library/venv.html>`__ | `Issues <https://"
"github.com/python/cpython/issues>`__"
msgstr ""
"`Documentação <https://docs.python.org/pt-br/3/library/venv.html>`__ | "
"`Issues <https://github.com/python/cpython/issues>`__"

#: ../source/key_projects.rst:881
msgid ""
"A package in the Python Standard Library (starting with Python 3.3) for "
"creating :term:`Virtual Environments <Virtual Environment>`.  For more "
"information, see the section on :ref:`Creating and using Virtual "
"Environments`."
msgstr ""
"Um pacote na Biblioteca Padrão do Python (começando com Python 3.3) para "
"criar :term:`Ambientes Virtuais <Virtual Environment>`. Para obter mais "
"informações, consulte a seção :ref:`Creating and using Virtual Environments`."

#: ../source/news.rst:2
msgid "News"
msgstr "Notícias"

#: ../source/news.rst:4
msgid ""
"This document is not currently updated. Previously, the document highlighted "
"changes in Python packaging."
msgstr ""
"Este documento não está atualizado. Anteriormente, o documento realçava as "
"mudanças no empacotamento do Python."

#: ../source/news.rst:9
msgid "September 2019"
msgstr "Setembro de 2019"

#: ../source/news.rst:10
msgid "Added a guide about publishing dists via GitHub Actions. (:pr:`647`)"
msgstr ""
"Adicionado um guia sobre como publicar dists por meio do GitHub Actions. (:"
"pr:`647`)"

#: ../source/news.rst:13
msgid "August 2019"
msgstr "Agosto de 2019"

#: ../source/news.rst:14
msgid "Updated to use :file:`python3 -m` when installing pipx. (:pr:`631`)"
msgstr "Atualizado para usar :file:`python3 -m` ao instalar pipx. (:pr:`631`)"

#: ../source/news.rst:17
msgid "July 2019"
msgstr "Julho de 2019"

#: ../source/news.rst:18
msgid "Marked all PEP numbers with the :pep: role. (:pr:`629`)"
msgstr "Todos os números PEP marcados com função :pep: . (:pr:`629`)"

#: ../source/news.rst:19
msgid "Upgraded Sphinx version and removed pypa.io intersphinx. (:pr:`625`)"
msgstr ""
"Atualizada a versão do Sphinx e removido intersphinx para pypa.io. (:pr:"
"`625`)"

#: ../source/news.rst:20
msgid "Mentioned :file:`find_namespace_packages`. (:pr:`622`)"
msgstr "Mencionado :file:`find_namespace_packages`. (:pr:`622`)"

#: ../source/news.rst:21
msgid "Updated directory layout examples for consistency. (:pr:`611`)"
msgstr ""
"Atualizados os exemplos de layout de diretório para consistência. (:pr:`611`)"

#: ../source/news.rst:22
msgid "Updated Bandersnatch link to GitHub. (:pr:`623`)"
msgstr "Atualizado o link do Bandersnatch para GitHub. (:pr:`623`)"

#: ../source/news.rst:25
msgid "June 2019"
msgstr "Junho de 2019"

#: ../source/news.rst:26
msgid "Fixed some typos. (:pr:`620`)"
msgstr "Corrigidos de alguns erros de escrita. (:pr:`620`)"

#: ../source/news.rst:29
msgid "May 2019"
msgstr "Maio de 2019"

#: ../source/news.rst:30
msgid "Added :file:`python_requires` usage to packaging tutorial. (:pr:`613`)"
msgstr ""
"Adicionado o uso de :file:`python_requires` ao tutorial de empacotamento. (:"
"pr:`613`)"

#: ../source/news.rst:31
msgid "Added a MANIFEST.in guide page. (:pr:`609`)"
msgstr "Adicionada uma página de guia sobre MANIFEST.in. (:pr:`609`)"

#: ../source/news.rst:34
msgid "April 2019"
msgstr "Abril de 2019"

#: ../source/news.rst:35
msgid ""
"Added a mention for :file:`shiv` in the key projects section. (:pr:`608`)"
msgstr ""
"Adicionada uma menção para :file:`shiv` na seção de projetos-chave. (:pr:"
"`608`)"

#: ../source/news.rst:36
msgid "Reduced emphasis on virtualenv. (:pr:`606`)"
msgstr "Reduzida a ênfase em virtualenv. (:pr:`606`)"

#: ../source/news.rst:39
msgid "March 2019"
msgstr "Março de 2019"

#: ../source/news.rst:40
msgid "Moved single-sourcing guide version option to Python 3. (:pr:`605`)"
msgstr ""
"Movida a opção de versão do guia de única fonte para Python 3. (:pr:`605`)"

#: ../source/news.rst:41
msgid "Covered RTD details for contributing. (:pr:`600`)"
msgstr "Cobertos detalhes de RTD para contribuição. (:pr:`600`)"

#: ../source/news.rst:44
msgid "February 2019"
msgstr "Fevereiro de 2019"

#: ../source/news.rst:45
msgid ""
"Elaborate upon the differences between the tutorial and the real packaging "
"process. (:pr:`602`)"
msgstr ""
"Explicada as diferenças entre o tutorial e o processo de empacotamento real. "
"(:pr:`602`)"

#: ../source/news.rst:46
msgid "Added instructions to install Python CLI applications. (:pr:`594`)"
msgstr ""
"Adicionadas as instruções para instalar aplicações CLI do Python. (:pr:`594`)"

#: ../source/news.rst:49
msgid "January 2019"
msgstr "Janeiro de 2019"

#: ../source/news.rst:50
msgid "Added :file:`--no-deps` to the packaging tutorial. (:pr:`593`)"
msgstr "Adicionado :file:`--no-deps` ao tutorial de empacotamento. (:pr:`593`)"

#: ../source/news.rst:51
msgid "Updated Sphinx and Nox. (:pr:`591`)"
msgstr "Atualizado Sphinx e Nox. (:pr:`591`)"

#: ../source/news.rst:52
msgid "Referenced Twine from Python3. (:pr:`581`)"
msgstr "Referenciado o Twine do Python3. (:pr:`581`)"

#: ../source/news.rst:55
msgid "December 2018"
msgstr "Dezembro de 2018"

#: ../source/news.rst:56
msgid "No programmers in the office!"
msgstr "Sem programadores no escritório!"

#: ../source/news.rst:59
msgid "November 2018"
msgstr "Novembro de 2018"

#: ../source/news.rst:60
msgid "Removed landing page link to PyPI migration guide. (:pr:`575`)"
msgstr ""
"Removido o link da página de destino para o guia de migração do PyPI. (:pr:"
"`575`)"

#: ../source/news.rst:61
msgid "Changed bumpversion to bump2version. (:pr:`572`)"
msgstr "Alterado bumpversion para bump2version. (:pr:`572`)"

#: ../source/news.rst:62
msgid "Added single-sourcing package version example. (:pr:`573`)"
msgstr "Adicionado exemplo de versão de pacote de única fonte. (:pr:`573`)"

#: ../source/news.rst:63
msgid "Added a guide for creating documentation. (:pr:`568`)"
msgstr "Adicionado um guia para a criação de documentação. (:pr:`568`)"

#: ../source/news.rst:66
msgid "October 2018"
msgstr "Outubro de 2018"

#: ../source/news.rst:67
msgid "Updated Nox package name. (:pr:`566`)"
msgstr "Atualizado o nome do pacote Nox. (:pr:`566`)"

#: ../source/news.rst:68
msgid "Mentioned Sphinx extensions in guides. (:pr:`562`)"
msgstr "Mencionadas extensões Sphinx nos guias. (:pr:`562`)"

#: ../source/news.rst:71
msgid "September 2018"
msgstr "Setembro de 2018"

#: ../source/news.rst:72
msgid "Added a section on checking RST markup. (:pr:`554`)"
msgstr "Adicionada uma seção sobre como verificar a marcação RST. (:pr:`554`)"

#: ../source/news.rst:73
msgid "Updated user installs page. (:pr:`558`)"
msgstr "Atualizada página de instalações do usuário. (:pr:`558`)"

#: ../source/news.rst:74
msgid "Updated Google BigQuery urls. (:pr:`556`)"
msgstr "Atualizadas as URLs do Google BigQuery. (:pr:`556`)"

#: ../source/news.rst:75
msgid "Replaced tar command with working command. (:pr:`552`)"
msgstr "Substituído o comando tar pelo comando de trabalho. (:pr:`552`)"

#: ../source/news.rst:76
msgid ""
"Changed to double quotes in the pip install SomeProject==1.4. (:pr:`550`)"
msgstr ""
"Alterado para aspas duplas no pip install SomeProject==1.4. (:pr:`550`)"

#: ../source/news.rst:79
msgid "August 2018"
msgstr "Agosto de 2018"

#: ../source/news.rst:80
msgid "Removed the recommendation to store passwords in cleartext. (:pr:`546`)"
msgstr ""
"Removida a recomendação de armazenar senhas em texto não criptografado. (:pr:"
"`546`)"

#: ../source/news.rst:81
msgid ""
"Moved the Overview to a task based lead in along with the others. (:pr:`540`)"
msgstr ""
"Movida a Visão geral para um ponto baseado em tarefas junto com os outros. (:"
"pr:`540`)"

#: ../source/news.rst:82
msgid "Updated Python version supported by virtualenv. (:pr:`538`)"
msgstr "Atualizada a versão do Python compatível com virtualenv. (:pr:`538`)"

#: ../source/news.rst:83
msgid "Added outline/rough draft of new Overview page. (:pr:`519`)"
msgstr "Adicionado esboço/rascunho da nova página de Visão geral. (:pr:`519`)"

#: ../source/news.rst:86
msgid "July 2018"
msgstr "Julho de 2018"

#: ../source/news.rst:88
msgid "Improved binary extension docs. (:pr:`531`)"
msgstr "Melhorada a documentação de extensão binária. (:pr:`531`)"

#: ../source/news.rst:89
msgid "Added scikit-build to key projects. (:pr:`530`)"
msgstr "Adicionado o scikit-build aos principais projetos. (:pr:`530`)"

#: ../source/news.rst:92
msgid "June 2018"
msgstr "Junho de 2018"

#: ../source/news.rst:94
msgid "Fixed categories of interop PEP for pypa.io. (:pr:`527`)"
msgstr ""
"Corrigidas as categorias de interoperabilidade de PEP para pypa.io. (:pr:"
"`527`)"

#: ../source/news.rst:95
msgid "Updated Markdown descriptions explanation. (:pr:`522`)"
msgstr "Atualizada a explicação das descrições de Markdown. (:pr:`522`)"

#: ../source/news.rst:98
msgid "May 2018"
msgstr "Maio de 2018"

#: ../source/news.rst:100
msgid "Noted issues with Provides-Dist and Obsoletes-Dist. (:pr:`513`)"
msgstr ""
"Adicionadas notas sobre problemas com Provides-Dist e Obsoletes-Dist. (:pr:"
"`513`)"

#: ../source/news.rst:101
msgid ""
"Removed outdated warning about Python version mixing with Pipenv. (:pr:`501`)"
msgstr ""
"Removido o aviso de desatualizado sobre a mistura da versão Python com o "
"Pipenv. (:pr:`501`)"

#: ../source/news.rst:102
msgid "Simplified packaging tutorial. (:pr:`498`)"
msgstr "Simplificado o tutorial de empacotamento. (:pr:`498`)"

#: ../source/news.rst:103
msgid "Updated Windows users instructions for clarity. (:pr:`493`)"
msgstr ""
"Atualizadas as instruções do usuário Windows para maior clareza. (:pr:`493`)"

#: ../source/news.rst:104
msgid "Updated the license section description for completeness. (:pr:`492`)"
msgstr ""
"Atualizada a descrição da seção da licença para integridade. (:pr:`492`)"

#: ../source/news.rst:105
msgid "Added specification-style document to contributing section. (:pr:`489`)"
msgstr ""
"Adicionado documento de estilo de especificação à seção de contribuição. (:"
"pr:`489`)"

#: ../source/news.rst:106
msgid "Added documentation types to contributing guide. (:pr:`485`)"
msgstr "Adicionados tipos de documentação ao guia de contribuição. (:pr:`485`)"

#: ../source/news.rst:109
msgid "April 2018"
msgstr "Abril de 2018"

#: ../source/news.rst:111
msgid "Added README guide. (:pr:`461`)"
msgstr "Adicionado guia de README. (:pr:`461`)"

#: ../source/news.rst:112
msgid "Updated instructions and status for PyPI launch. (:pr:`475`)"
msgstr ""
"Atualizadas as instruções e status para o lançamento do PyPI. (:pr:`475`)"

#: ../source/news.rst:113
msgid "Added instructions for Warehouse. (:pr:`471`)"
msgstr "Adicionadas instruções para o Warehouse. (:pr:`471`)"

#: ../source/news.rst:114
msgid "Removed GPG references from publishing tutorial. (:pr:`466`)"
msgstr "Removidas referências de GPG do tutorial de publicação. (:pr:`466`)"

#: ../source/news.rst:115
msgid "Added 'What’s in which Python 3.4–3.6?'. (:pr:`468`)"
msgstr "Adicionado 'O que há em cada Python 3.4–3.6?'. (:pr:`468`)"

#: ../source/news.rst:116
msgid "Added a guide for phasing out Python versions. (:pr:`459`)"
msgstr "Adicionado um guia para descontinuar as versões do Python. (:pr:`459`)"

#: ../source/news.rst:117
msgid "Made default Description-Content-Type variant GFM. (:pr:`462`)"
msgstr "Tornada padrão a variante GFM do Description-Content-Type. (:pr:`462`)"

#: ../source/news.rst:120
msgid "March 2018"
msgstr "Março de 2018"

#: ../source/news.rst:122
msgid "Updated \"installing scientific packages\". (:pr:`455`)"
msgstr "Atualizado \"instalando pacotes científicos\". (:pr:`455`)"

#: ../source/news.rst:123
msgid ""
"Added :file:`long_description_content_type` to follow PEP 556. (:pr:`457`)"
msgstr ""
"Adicionado :file:`long_description_content_type` para seguir a PEP 556. (:pr:"
"`457`)"

#: ../source/news.rst:124
msgid "Clarified a long description classifier on pypi.org. (:pr:`456`)"
msgstr ""
"Esclarecido um classificador de descrição longa em pypi.org. (:pr:`456`)"

#: ../source/news.rst:125
msgid "Updated Core Metadata spec to follow PEP 556. (:pr:`412`)"
msgstr ""
"Atualizada a especificação dos metadados principais para seguir a PEP 556. (:"
"pr:`412`)"

#: ../source/news.rst:128
msgid "February 2018"
msgstr "Fevereiro de 2018"

#: ../source/news.rst:130
msgid ""
"Added python3-venv and python3-pip to Debian installation instructions. (:pr:"
"`445`)"
msgstr ""
"Adicionados python3-venv e python3-pip às instruções de instalação do "
"Debian. (:pr:`445`)"

#: ../source/news.rst:131
msgid "Updated PyPI migration info. (:pr:`439`)"
msgstr "Informações de migração do PyPI atualizadas. (:pr:`439`)"

#: ../source/news.rst:132
msgid ""
"Added a warning about managing multiple versions with pipenv. (:pr:`430`)"
msgstr ""
"Adicionado um aviso sobre o gerenciamento de várias versões com pipenv. (:pr:"
"`430`)"

#: ../source/news.rst:133
msgid "Added example of multiple emails to Core Metadata. (:pr:`429`)"
msgstr ""
"Adicionado exemplo de vários e-mails aos metadados principais. (:pr:`429`)"

#: ../source/news.rst:134
msgid "Added explanation of \"legacy\" in test.pypi.org/legacy. (:pr:`426`)"
msgstr ""
"Adicionada explicação de \"legado\" em test.pypi.org/legacy. (:pr:`426`)"

#: ../source/news.rst:137
msgid "January 2018"
msgstr "Janeiro de 2018"

#: ../source/news.rst:139
msgid "Added a link to PyPI's list of classifiers. (:pr:`425`)"
msgstr ""
"Adicionado um link para a lista de classificadores do PyPI. (:pr:`425`)"

#: ../source/news.rst:140
msgid "Updated README.rst explanation. (:pr:`419`)"
msgstr "Atualizada uma explicação sobre README.rst. (:pr:`419`)"

#: ../source/news.rst:143
msgid "December 2017"
msgstr "Dezembro de 2017"

#: ../source/news.rst:145
msgid ""
"Replaced :file:`~` with :file:`$HOME` in guides and tutorials.  (:pr:`418`)"
msgstr ""
"Substituído :file:`~` por :file:`$HOME` nos guias e tutoriais. (:pr:`418`)"

#: ../source/news.rst:146
msgid "Noted which fields can be used with environment markers. (:pr:`416`)"
msgstr ""
"Adicionada nota sobre quais campos podem ser usados com marcadores de "
"ambiente. (:pr:`416`)"

#: ../source/news.rst:147
msgid "Updated Requires-Python section. (:pr:`414`)"
msgstr "Atualizada a seção Requires-Python. (:pr:`414`)"

#: ../source/news.rst:148
msgid "Added news page. (:pr:`404`)"
msgstr "Adicionada página de notícias. (:pr:`404`)"

#: ../source/news.rst:151
msgid "November 2017"
msgstr "Novembro de 2017"

#: ../source/news.rst:153
msgid ""
"Introduced a new dependency management tutorial based on Pipenv. (:pr:`402`)"
msgstr ""
"Introduzido um novo tutorial de gerenciamento de dependências baseado no "
"Pipenv. (:pr:`402`)"

#: ../source/news.rst:154
msgid ""
"Updated the *Single Sourcing Package Version* tutorial to reflect pip's "
"current strategy. (:pr:`400`)"
msgstr ""
"Atualizado o tutorial *Versão de pacote de fonte única* para refletir a "
"estratégia atual do pip. (:pr:`400`)"

#: ../source/news.rst:156
msgid ""
"Added documentation about the ``py_modules`` argument to ``setup``. (:pr:"
"`398`)"
msgstr ""
"Adicionada documentação sobre o argumento ``py_modules`` ao ``setup``. (:pr:"
"`398`)"

#: ../source/news.rst:157
msgid "Simplified the wording for the :file:`manifest.in` section. (:pr:`395`)"
msgstr "Simplificadas as palavras da seção :file:`manifest.in`. (:pr:`395`)"

#: ../source/news.rst:160
msgid "October 2017"
msgstr "Outubro de 2017"

#: ../source/news.rst:162
msgid ""
"Added a specification for the :file:`entry_points.txt` file. (:pr:`398`)"
msgstr ""
"Adicionada uma especificação para o arquivo :file:`entry_points.txt`. (:pr:"
"`398`)"

#: ../source/news.rst:163
msgid ""
"Created a new guide for managing packages using ``pip`` and ``virtualenv``. "
"(:pr:`385`)"
msgstr ""
"Criado um novo guia para gerenciamento de pacotes usando ``pip`` e "
"``virtualenv``. (:pr:`385`)"

#: ../source/news.rst:164
msgid "Split the specifications page into multiple pages. (:pr:`386`)"
msgstr "Dividida a página de especificações em várias páginas. (:pr:`386`)"

#: ../source/news.rst:167
msgid "September 2017"
msgstr "Setembro de 2017"

#: ../source/news.rst:169
msgid ""
"Encouraged using ``readme_renderer`` to validate :file:`README.rst`. (:pr:"
"`379`)"
msgstr ""
"Incentivado o uso de ``readme_renderer`` validar o :file:`README.rst`. (:pr:"
"`379`)"

#: ../source/news.rst:171
msgid "Recommended using the ``--user-base`` option. (:pr:`374`)"
msgstr "Recomendado o uso da opção ``--user-base``. (:pr:`374`)"

#: ../source/news.rst:174
msgid "August 2017"
msgstr "Agosto de 2017"

#: ../source/news.rst:176
msgid ""
"Added a new, experimental tutorial on installing packages using ``Pipenv``. "
"(:pr:`369`)"
msgstr ""
"Adicionado um novo tutorial experimental sobre a instalação de pacotes "
"usando ``Pipenv``. (:pr:`369`)"

#: ../source/news.rst:177
msgid "Added a new guide on how to use ``TestPyPI``. (:pr:`366`)"
msgstr "Adicionado um novo guia sobre como usar o ``TestPyPI``. (:pr:`366`)"

#: ../source/news.rst:178
msgid "Added :file:`pypi.org` as a term. (:pr:`365`)"
msgstr "Adicionado :file:`pypi.org` como um termo. (:pr:`365`)"

#: ../source/news.rst:181
msgid "July 2017"
msgstr "Julho de 2017"

#: ../source/news.rst:183
msgid "Added ``flit`` to the key projects list. (:pr:`358`)"
msgstr "Adicionado ``flit`` à lista de projetos principais. (:pr:`358`)"

#: ../source/news.rst:184
msgid "Added ``enscons`` to the list of key projects. (:pr:`357`)"
msgstr "Adicionado ``enscons`` à lista de projetos principais. (:pr:`357`)"

#: ../source/news.rst:185
msgid ""
"Updated this guide's ``readme`` with instructions on how to build the guide "
"locally. (:pr:`356`)"
msgstr ""
"Atualizado o ``readme`` deste guia com instruções sobre como construir o "
"guia localmente. (:pr:`356`)"

#: ../source/news.rst:186
msgid ""
"Made the new ``TestPyPI`` URL more visible, adding note to homepage about "
"pypi.org. (:pr:`354`)"
msgstr ""
"Melhorada a visibilidade da nova URL do ``TestPyPI``, adicionando uma nota à "
"página inicial sobre pypi.org. (:pr:`354`)"

#: ../source/news.rst:187
msgid ""
"Added a note about the removal of the explicit registration API. (:pr:`347`)"
msgstr ""
"Adicionada uma nota sobre a remoção da API de registro explícito. (:pr:`347`)"

#: ../source/news.rst:190
msgid "June 2017"
msgstr "Junho de 2017"

#: ../source/news.rst:192
msgid "Added a document on migrating uploads to :file:`PyPI.org`. (:pr:`339`)"
msgstr ""
"Adicionado um documento sobre a migração de envios para :file:`PyPI.org`. (:"
"pr:`339`)"

#: ../source/news.rst:193
msgid "Added documentation for ``python_requires``. (:pr:`338`)"
msgstr "Adicionada documentação para ``python_requires``. (:pr:`338`)"

#: ../source/news.rst:194
msgid ""
"Added a note about PyPI migration in the *Tool Recommendations* tutorial. (:"
"pr:`335`)"
msgstr ""
"Adicionada uma nota sobre a migração do PyPI no tutorial *Recomendações de "
"ferramentas*. (:pr:`335`)"

#: ../source/news.rst:195
msgid ""
"Added a note that :file:`manifest.in` does not affect wheels. (:pr:`332`)"
msgstr ""
"Adicionada uma nota de que o :file:`manifest.in` não afeta os wheels. (:pr:"
"`332`)"

#: ../source/news.rst:196
msgid "Added a license section to the distributing guide. (:pr:`331`)"
msgstr "Adicionada uma seção de licença ao guia de distribuição. (:pr:`331`)"

#: ../source/news.rst:197
msgid "Expanded the section on the ``name`` argument. (:pr:`329`)"
msgstr "Expandida a seção sobre o argumento ``name``. (:pr:`329`)"

#: ../source/news.rst:198
msgid "Adjusted the landing page. (:pr:`327`, :pr:`326`, :pr:`324`)"
msgstr "Ajustada a página inicial. (:pr:`327`, :pr:`326`, :pr:`324`)"

#: ../source/news.rst:199
msgid "Updated to Sphinx 1.6.2. (:pr:`323`)"
msgstr "Atualizado para Sphinx 1.6.2. (:pr:`323`)"

#: ../source/news.rst:200
msgid "Switched to the PyPA theme. (:pr:`305`)"
msgstr "Trocado para o tema do PyPA. (:pr:`305`)"

#: ../source/news.rst:201
msgid "Re-organized the documentation into the new structure. (:pr:`318`)"
msgstr "Reorganizada a documentação na nova estrutura. (:pr:`318`)"

#: ../source/news.rst:204
msgid "May 2017"
msgstr "Maio de 2017"

#: ../source/news.rst:206
msgid ""
"Added documentation for the ``Description-Content-Type`` field. (:pr:`258`)"
msgstr ""
"Adicionada documentação para o campo ``Description-Content-Type``. (:pr:"
"`258`)"

#: ../source/news.rst:207
msgid "Added contributor and style guide. (:pr:`307`)"
msgstr "Adicionado guia de contribuidor e de estilo. (:pr:`307`)"

#: ../source/news.rst:208
msgid ""
"Documented ``pip`` and ``easy_install``'s differences for per-project "
"indexes. (:pr:`233`)"
msgstr ""
"Documentadas as diferenças entre ``pip`` e ``easy_install`` para índices por "
"projeto. (:pr:`233`)"

#: ../source/news.rst:211
msgid "April 2017"
msgstr "Abril de 2017"

#: ../source/news.rst:213
msgid "Added travis configuration for testing pull requests. (:pr:`300`)"
msgstr ""
"Adicionada configuração de travis para testar pull requests. (:pr:`300`)"

#: ../source/news.rst:214
msgid ""
"Mentioned the requirement of the ``wheel`` package for creating wheels (:pr:"
"`299`)"
msgstr ""
"Mencionado o requisito do pacote ``wheel`` para a criação de wheels (:pr:"
"`299`)"

#: ../source/news.rst:215
msgid ""
"Removed the ``twine register`` reference in the *Distributing Packages* "
"tutorial. (:pr:`271`)"
msgstr ""
"Removida a referência a ``twine register`` no tutorial *Distribuindo "
"pacotes*. (:pr:`271`)"

#: ../source/news.rst:216
msgid "Added a topic on plugin discovery. (:pr:`294`, :pr:`296`)"
msgstr ""
"Adicionado um tópico sobre descoberta de plugins. (:pr:`294`, :pr:`296`)"

#: ../source/news.rst:217
msgid "Added a topic on namespace packages. (:pr:`290`)"
msgstr "Adicionado um tópico sobre pacotes de espaço de nomes. (:pr:`290`)"

#: ../source/news.rst:218
msgid ""
"Added documentation explaining prominently how to install ``pip`` in ``/usr/"
"local``. (:pr:`230`)"
msgstr ""
"Adicionada documentação explicando em destaque como instalar ``pip`` em ``/"
"usr/local``. (:pr:`230`)"

#: ../source/news.rst:219
msgid ""
"Updated development mode documentation to mention that order of local "
"packages matters. (:pr:`208`)"
msgstr ""
"Atualizada a documentação do modo de desenvolvimento para mencionar que a "
"ordem dos pacotes locais é importante. (:pr:`208`)"

#: ../source/news.rst:220
msgid ""
"Convert readthedocs link for their ``.org`` -> ``.io`` migration for hosted "
"projects (:pr:`239`)"
msgstr ""
"Conversão de link do readthedocs para sua migração ``.org`` -> ``.io`` para "
"projetos hospedados (:pr:`239`)"

#: ../source/news.rst:221
msgid ""
"Swapped order of :file:`setup.py` arguments for the upload command, as order "
"is significant. (:pr:`260`)"
msgstr ""
"Trocada a ordem dos argumentos do :file:`setup.py` para o comando de envio, "
"pois a ordem é significativa. (:pr:`260`)"

#: ../source/news.rst:223
msgid ""
"Explained how to install from unsupported sources using a helper "
"application. (:pr:`289`)"
msgstr ""
"Explicado como instalar de fontes não suportadas usando uma aplicação "
"auxiliar. (:pr:`289`)"

#: ../source/news.rst:227
msgid "March 2017"
msgstr "Março de 2017"

#: ../source/news.rst:229
msgid "Covered ``manylinux1`` in *Platform Wheels*. (:pr:`283`)"
msgstr "Coberto ``manylinux1`` em *wheels de plataforma*. (:pr:`283`)"

#: ../source/news.rst:232
msgid "February 2017"
msgstr "Fevereiro de 2017"

#: ../source/news.rst:234
msgid "Added :pep:`518`. (:pr:`281`)"
msgstr "Adicionada a :pep:`518`. (:pr:`281`)"

#: ../source/overview.rst:3
msgid "Overview of Python Packaging"
msgstr "Visão geral do empacotamento para Python"

#: ../source/overview.rst:7
msgid ""
"As a general-purpose programming language, Python is designed to be used in "
"many ways. You can build web sites or industrial robots or a game for your "
"friends to play, and much more, all using the same core technology."
msgstr ""
"Como uma linguagem de programação de propósito geral, Python foi projetado "
"para ser usado de várias maneiras. Você pode construir sites ou robôs "
"industriais ou um jogo para seus amigos jogarem e muito mais, todos usando a "
"mesma tecnologia básica."

#: ../source/overview.rst:12
msgid ""
"Python's flexibility is why the first step in every Python project must be "
"to think about the project's audience and the corresponding environment "
"where the project will run. It might seem strange to think about packaging "
"before writing code, but this process does wonders for avoiding future "
"headaches."
msgstr ""
"A flexibilidade do Python é o porquê do primeiro passo em cada projeto "
"Python deva ser pensar sobre o público do projeto e o ambiente "
"correspondente onde o projeto será executado. Pode parecer estranho pensar "
"em empacotamento antes de escrever o código, mas esse processo faz "
"maravilhas para evitar dores de cabeça futuras."

#: ../source/overview.rst:18
msgid ""
"This overview provides a general-purpose decision tree for reasoning about "
"Python's plethora of packaging options. Read on to choose the best "
"technology for your next project."
msgstr ""
"Esta visão geral fornece uma árvore de decisão de propósito geral para "
"raciocinar sobre a abundância de opções de empacotamento do Python. Continue "
"lendo para escolher a melhor tecnologia para seu próximo projeto."

#: ../source/overview.rst:23
msgid "Thinking about deployment"
msgstr "Pensando sobre a implantação"

#: ../source/overview.rst:25
msgid ""
"Packages exist to be installed (or *deployed*), so before you package "
"anything, you'll want to have some answers to the deployment questions below:"
msgstr ""
"Os pacotes existem para serem instalados (ou *implantados*, *deployed*), "
"portanto, antes de empacotar qualquer coisa, você vai querer ter algumas "
"respostas para as perguntas de implantação abaixo:"

#: ../source/overview.rst:29
msgid ""
"Who are your software's users? Will your software be installed by other "
"developers doing software development, operations people in a datacenter, or "
"a less software-savvy group?"
msgstr ""
"Quem são os usuários do seu software? Seu software será instalado por outros "
"desenvolvedores que fazem o desenvolvimento de software, pessoas de "
"operações em um datacenter ou um grupo com menos experiência em software?"

#: ../source/overview.rst:32
msgid ""
"Is your software intended to run on servers, desktops, mobile clients "
"(phones, tablets, etc.), or embedded in dedicated devices?"
msgstr ""
"O seu software deve ser executado em servidores, desktops, clientes móveis "
"(telefones, tablets, etc.) ou incorporado em dispositivos dedicados?"

#: ../source/overview.rst:34
msgid ""
"Is your software installed individually, or in large deployment batches?"
msgstr ""
"O seu software é instalado individualmente ou em grandes lotes de "
"implantação?"

#: ../source/overview.rst:36
msgid ""
"Packaging is all about target environment and deployment experience. There "
"are many answers to the questions above and each combination of "
"circumstances has its own solutions. With this information, the following "
"overview will guide you to the packaging technologies best suited to your "
"project."
msgstr ""
"O empacotamento tem tudo a ver com o ambiente de destino e a experiência de "
"implantação. Existem muitas respostas para as perguntas acima e cada "
"combinação de circunstâncias tem suas próprias soluções. Com essas "
"informações, a visão geral a seguir o guiará para as tecnologias de "
"empacotamento mais adequadas ao seu projeto."

#: ../source/overview.rst:43
msgid "Packaging Python libraries and tools"
msgstr "Empacotando bibliotecas e ferramentas Python"

#: ../source/overview.rst:45
msgid ""
"You may have heard about PyPI, ``setup.py``, and ``wheel`` files. These are "
"just a few of the tools Python's ecosystem provides for distributing Python "
"code to developers, which you can read about in :doc:`guides/distributing-"
"packages-using-setuptools`."
msgstr ""
"Você deve ter ouvido falar sobre PyPI, ``setup.py`` e arquivos ``wheel``. "
"Estas são apenas algumas das ferramentas que o ecossistema Python oferece "
"para distribuir código Python para desenvolvedores, sobre as quais você pode "
"ler em :doc:`guides/distributing-packages-using-setuptools`."

#: ../source/overview.rst:50
msgid ""
"The following approaches to packaging are meant for libraries and tools used "
"by technical audience in a development setting. If you're looking for ways "
"to package Python for a non-technical audience and/or a production setting, "
"skip ahead to :ref:`packaging-applications`."
msgstr ""
"As abordagens a seguir para empacotamento são destinadas a bibliotecas e "
"ferramentas usadas pelo público técnico em um ambiente de desenvolvimento. "
"Se você está procurando maneiras de empacotar Python para um público não "
"técnico e/ou uma configuração de produção, pule para :ref:`packaging-"
"applications`."

#: ../source/overview.rst:56
msgid "Python modules"
msgstr "Módulos Python"

#: ../source/overview.rst:58
msgid ""
"A Python file, provided it only relies on the standard library, can be "
"redistributed and reused. You will also need to ensure it's written for the "
"right version of Python, and only relies on the standard library."
msgstr ""
"Um arquivo Python, desde que dependa apenas da biblioteca padrão, pode ser "
"redistribuído e reutilizado. Você também precisará garantir que ele foi "
"escrito para a versão correta do Python e depende apenas da biblioteca "
"padrão."

#: ../source/overview.rst:63
msgid ""
"This is great for sharing simple scripts and snippets between people who "
"both have compatible Python versions (such as via email, StackOverflow, or "
"GitHub gists). There are even some entire Python libraries that offer this "
"as an option, such as :doc:`bottle.py<bottle:tutorial>` and :doc:`boltons "
"<boltons:architecture>`."
msgstr ""
"Isso é ótimo para compartilhar scripts e trechos simples entre pessoas que "
"possuem versões Python compatíveis (como via e-mail, StackOverflow ou gists "
"do GitHub). Existem até algumas bibliotecas Python inteiras que oferecem "
"isso como uma opção, como :doc:`bottle.py<bottle:tutorial>` e :doc:`boltons "
"<boltons:architecture>`."

#: ../source/overview.rst:70
msgid ""
"However, this pattern won't scale for projects that consist of multiple "
"files, need additional libraries, or need a specific version of Python, "
"hence the options below."
msgstr ""
"No entanto, esse padrão não será escalonado para projetos que consistem em "
"vários arquivos, precisam de bibliotecas adicionais ou precisam de uma "
"versão específica do Python, daí as opções abaixo."

#: ../source/overview.rst:75
msgid "Python source distributions"
msgstr "Distribuições fonte Python"

#: ../source/overview.rst:77
msgid ""
"If your code consists of multiple Python files, it's usually organized into "
"a directory structure. Any directory containing Python files can comprise "
"an :term:`Import Package`."
msgstr ""
"Se o seu código consiste em vários arquivos Python, ele geralmente é "
"organizado em uma estrutura de diretório. Qualquer diretório contendo "
"arquivos Python pode incluir um :term:`Pacote de Importação`."

#: ../source/overview.rst:81
msgid ""
"Because packages consist of multiple files, they are harder to distribute. "
"Most protocols support transferring only one file at a time (when was the "
"last time you clicked a link and it downloaded multiple files?). It's easier "
"to get incomplete transfers, and harder to guarantee code integrity at the "
"destination."
msgstr ""
"Como os pacotes consistem em vários arquivos, eles são mais difíceis de "
"distribuir. A maioria dos protocolos oferece suporte à transferência de "
"apenas um arquivo por vez (quando foi a última vez que você clicou em um "
"link e ele baixou vários arquivos?). É mais fácil obter transferências "
"incompletas e mais difícil garantir a integridade do código no destino."

#: ../source/overview.rst:87
msgid ""
"So long as your code contains nothing but pure Python code, and you know "
"your deployment environment supports your version of Python, then you can "
"use Python's native packaging tools to create a *source* :term:`Distribution "
"Package`, or *sdist* for short."
msgstr ""
"Contanto que seu código não contenha nada além de código puro Python, e você "
"saiba que seu ambiente de implantação oferece suporte a sua versão de "
"Python, então você pode usar as ferramentas de empacotamento nativas do "
"Python para criar um :term:`Pacote de Distribuição` fonte, ou *sdist*."

#: ../source/overview.rst:92
msgid ""
"Python's *sdists* are compressed archives (``.tar.gz`` files) containing one "
"or more packages or modules. If your code is pure-Python, and you only "
"depend on other Python packages, you can go to the :ref:`source-distribution-"
"format` specification to learn more."
msgstr ""
"Os *sdists* do Python são arquivos compactados (arquivos ``.tar.gz``) "
"contendo um ou mais pacotes ou módulos. Se seu código for puro Python e você "
"depender apenas de outros pacotes Python, você pode consultar a "
"especificação de :ref:`source-distribution-format` para saber mais."

#: ../source/overview.rst:97
msgid ""
"If you rely on any non-Python code, or non-Python packages (such as `libxml2 "
"<https://en.wikipedia.org/wiki/Libxml2>`_ in the case of `lxml <https://pypi."
"org/project/lxml/>`_, or BLAS libraries in the case of `numpy <https://pypi."
"org/project/numpy>`_), you will need to use the format detailed in the next "
"section, which also has many advantages for pure-Python libraries."
msgstr ""
"Se você confiar em qualquer código não-Python ou pacotes não-Python (como "
"`libxml2 <https://en.wikipedia.org/wiki/Libxml2>`_ no caso de `lxml "
"<https: //pypi.org/project/lxml/>`_, ou bibliotecas BLAS no caso de `numpy "
"<https://pypi.org/project/numpy>`_), você precisará usar o formato detalhado "
"no a próxima seção, que também tem muitas vantagens para bibliotecas puro "
"Python."

#: ../source/overview.rst:104
msgid ""
"Python and PyPI support multiple distributions providing different "
"implementations of the same package. For instance the unmaintained-but-"
"seminal `PIL distribution <https://pypi.org/project/PIL/>`_ provides the PIL "
"package, and so does `Pillow <https://pypi.org/project/Pillow/>`_, an "
"actively-maintained fork of PIL!"
msgstr ""
"Python e PyPI oferecem suporte a várias distribuições, fornecendo diferentes "
"implementações do mesmo pacote. Por exemplo, a `distribuição PIL <https://"
"pypi.org/project/PIL/>`_ não mantida, mas inspiracional, fornece o pacote "
"PIL, e também o `Pillow <https://pypi.org/project/Pillow/>`_, um fork do PIL!"

#: ../source/overview.rst:111
msgid ""
"This Python packaging superpower makes it possible for Pillow to be a drop-"
"in replacement for PIL, just by changing your project's ``install_requires`` "
"or ``requirements.txt``."
msgstr ""
"Este superpoder de empacotamento do Python torna possível que o Pillow seja "
"um substituto imediato para o PIL, apenas alterando o ``install_requires`` "
"ou ``requirements.txt`` do seu projeto."

#: ../source/overview.rst:116
msgid "Python binary distributions"
msgstr "Distribuições binárias Python"

#: ../source/overview.rst:118
msgid ""
"So much of Python's practical power comes from its ability to integrate with "
"the software ecosystem, in particular libraries written in C, C++, Fortran, "
"Rust, and other languages."
msgstr ""
"Grande parte do poder prático do Python vem de sua capacidade de integração "
"com o ecossistema de software, em particular bibliotecas escritas em C, C++, "
"Fortran, Rust e outras linguagens."

#: ../source/overview.rst:122
msgid ""
"Not all developers have the right tools or experiences to build these "
"components written in these compiled languages, so Python created the :term:"
"`Wheel`, a package format designed to ship libraries with compiled "
"artifacts. In fact, Python's package installer, ``pip``, always prefers "
"wheels because installation is always faster, so even pure-Python packages "
"work better with wheels."
msgstr ""
"Nem todos os desenvolvedores têm as ferramentas ou experiências certas para "
"construir esses componentes escritos nessas linguagens compiladas, então "
"Python criou o :term:`Wheel`, um formato de pacote projetado para enviar "
"bibliotecas com artefatos compilados. Na verdade, o instalador do pacote "
"Python, ``pip``, sempre prefere wheels porque a instalação é sempre mais "
"rápida, então mesmo os pacotes puro Python funcionam melhor com wheels."

#: ../source/overview.rst:129
msgid ""
"Binary distributions are best when they come with source distributions to "
"match. Even if you don't upload wheels of your code for every operating "
"system, by uploading the sdist, you're enabling users of other platforms to "
"still build it for themselves. Default to publishing both sdist and wheel "
"archives together, *unless* you're creating artifacts for a very specific "
"use case where you know the recipient only needs one or the other."
msgstr ""
"As distribuições binárias são melhores quando vêm com distribuições de fonte "
"correspondentes. Mesmo que você não envie wheels do seu código para todos os "
"sistemas operacionais, ao enviar o sdist, você permite que usuários de "
"outras plataformas ainda o construam por conta própria. O padrão é publicar "
"arquivos sdist e wheel juntos, *a menos* que você esteja criando artefatos "
"para um caso de uso muito específico, onde sabe que o destinatário só "
"precisa de um ou de outro."

#: ../source/overview.rst:137
msgid ""
"Python and PyPI make it easy to upload both wheels and sdists together. Just "
"follow the :doc:`tutorials/packaging-projects` tutorial."
msgstr ""
"Python e PyPI facilitam o envio de wheels e sdists juntos. Basta seguir o "
"tutorial :doc:`tutorials/packaging-projects`."

#: ../source/overview.rst:145
msgid "A summary of Python's packaging capabilities for tools and libraries."
msgstr ""
"Um resumo das capacidades de empacotamento do Python para ferramentas e "
"bibliotecas."

#: ../source/overview.rst:145
msgid ""
"Python's recommended built-in library and tool packaging technologies. "
"Excerpted from `The Packaging Gradient (2017) <https://www.youtube.com/watch?"
"v=iLVNWfPWAC8>`_."
msgstr ""
"Bibliotecas embutidas recomendadas e tecnologias de empacotamento de "
"ferramentas do Python. Extraído de `The Packaging Gradient (2017) <https://"
"www.youtube.com/watch?v=iLVNWfPWAC8>`_."

#: ../source/overview.rst:152
msgid "Packaging Python applications"
msgstr "Empacotando aplicações do Python"

#: ../source/overview.rst:154
msgid ""
"So far we've only discussed Python's native distribution tools. Based on our "
"introduction, you would be correct to infer these built-in approaches only "
"target environments which have Python, and an audience who knows how to "
"install Python packages."
msgstr ""
"Até agora, discutimos apenas as ferramentas de distribuição nativas do "
"Python. Com base em nossa introdução, você estaria correto em inferir que "
"essas abordagens embutidas têm como alvo apenas ambientes que possuem Python "
"e um público que sabe como instalar pacotes Python."

#: ../source/overview.rst:159
msgid ""
"With the variety of operating systems, configurations, and people out there, "
"this assumption is only safe when targeting a developer audience."
msgstr ""
"Com a variedade de sistemas operacionais, configurações e pessoas por aí, "
"essa suposição só é segura quando se destina a um público de desenvolvedores."

#: ../source/overview.rst:163
msgid ""
"Python's native packaging is mostly built for distributing reusable code, "
"called libraries, between developers. You can piggyback **tools**, or basic "
"applications for developers, on top of Python's library packaging, using "
"technologies like :doc:`setuptools entry_points <setuptools:userguide/"
"entry_point>`."
msgstr ""
"O empacotamento nativo do Python é construído principalmente para distribuir "
"código reutilizável, chamado de bibliotecas, entre os desenvolvedores. Você "
"pode adicionar **ferramentas** ou aplicações básicas para desenvolvedores ao "
"pacote de biblioteca do Python, usando tecnologias como :doc:`entry_points "
"do setuptools <setuptools:userguide/entry_point>`."

#: ../source/overview.rst:169
msgid ""
"Libraries are building blocks, not complete applications. For distributing "
"applications, there's a whole new world of technologies out there."
msgstr ""
"Bibliotecas são blocos de construção, não aplicações completas. Para "
"distribuir aplicações, existe um novo mundo de tecnologias por aí."

#: ../source/overview.rst:173
msgid ""
"The next few sections organize these application packaging options according "
"to their dependencies on the target environment, so you can choose the right "
"one for your project."
msgstr ""
"As próximas seções organizam essas opções de pacote de aplicações de acordo "
"com suas dependências no ambiente de destino, para que você possa escolher o "
"certo para o seu projeto."

#: ../source/overview.rst:178
msgid "Depending on a framework"
msgstr "Dependendo de um framework"

#: ../source/overview.rst:180
msgid ""
"Some types of Python applications, like web site backends and other network "
"services, are common enough that they have frameworks to enable their "
"development and packaging. Other types of applications, like dynamic web "
"frontends and mobile clients, are complex enough to target that a framework "
"becomes more than a convenience."
msgstr ""
"Alguns tipos de aplicações Python, como backends de sites e outros serviços "
"de rede, são comuns o suficiente para que tenham estruturas para permitir "
"seu desenvolvimento e empacotamento. Outros tipos de aplicações, como "
"frontends web dinâmicos e clientes móveis, são complexos o suficiente para "
"fazer com que uma estrutura se torne mais do que uma conveniência."

#: ../source/overview.rst:186
msgid ""
"In all these cases, it makes sense to work backwards, from the framework's "
"packaging and deployment story. Some frameworks include a deployment system "
"which wraps the technologies outlined in the rest of the guide. In these "
"cases, you'll want to defer to your framework's packaging guide for the "
"easiest and most reliable production experience."
msgstr ""
"Em todos esses casos, faz sentido trabalhar de trás para frente, a partir da "
"história de empacotamento e implantação da estrutura. Algumas estruturas "
"incluem um sistema de implantação que envolve as tecnologias descritas no "
"restante do guia. Nesses casos, você desejará consultar o guia de "
"empacotamento de sua estrutura para obter a experiência de produção mais "
"fácil e confiável."

#: ../source/overview.rst:192
msgid ""
"If you ever wonder how these platforms and frameworks work under the hood, "
"you can always read the sections beyond."
msgstr ""
"Se você já se perguntou como essas plataformas e estruturas funcionam nos "
"bastidores, você sempre pode ler as seções seguintes."

#: ../source/overview.rst:196
msgid "Service platforms"
msgstr "Plataformas de serviço"

#: ../source/overview.rst:198
#, fuzzy
msgid ""
"If you're developing for a \"`Platform-as-a-Service <https://en.wikipedia."
"org/wiki/Platform_as_a_service>`_\" or \"PaaS\", you are going to want to "
"follow their respective packaging guides. These types of platforms take care "
"of packaging and deployment, as long as you follow their patterns. Most "
"software does not fit one of these templates, hence the existence of all the "
"other options below."
msgstr ""
"Em todas essas configurações, a plataforma cuida do empacotamento e da "
"implantação, desde que você siga seus padrões. A maioria dos softwares não "
"se encaixa em um desses modelos, daí a existência de todas as outras opções "
"abaixo."

#: ../source/overview.rst:205
msgid ""
"If you're developing software that will be deployed to machines you own, "
"users' personal computers, or any other arrangement, read on."
msgstr ""
"Se você estiver desenvolvendo um software que será implantado em suas "
"máquinas, computadores pessoais de usuários ou qualquer outro arranjo, "
"continue lendo."

#: ../source/overview.rst:209
msgid "Web browsers and mobile applications"
msgstr "Navegadores web e aplicações móveis"

#: ../source/overview.rst:211
msgid ""
"Python's steady advances are leading it into new spaces. These days you can "
"write a mobile app or web application frontend in Python. While the language "
"may be familiar, the packaging and deployment practices are brand new."
msgstr ""
"Os avanços constantes do Python estão levando-o a novos espaços. Hoje em "
"dia, você pode escrever uma aplicação móvel ou frontend de aplicação web no "
"Python. Embora a linguagem possa ser familiar, as práticas de empacotamento "
"e implantação são novas."

#: ../source/overview.rst:216
msgid ""
"If you're planning on releasing to these new frontiers, you'll want to check "
"out the following frameworks, and refer to their packaging guides:"
msgstr ""
"Se você está planejando lançar para essas novas fronteiras, convém verificar "
"as seguintes estruturas e consultar seus guias de empacotamento:"

#: ../source/overview.rst:220
#, fuzzy
msgid "`Kivy <https://kivy.org/>`_"
msgstr "`Kivy <https://kivy.org/#home>`_"

#: ../source/overview.rst:221
msgid "`Beeware <https://pybee.org/>`_"
msgstr "`Beeware <https://pybee.org/>`_"

#: ../source/overview.rst:222
msgid "`Brython <https://brython.info/>`_"
msgstr "`Brython <https://brython.info/>`_"

#: ../source/overview.rst:223
#, fuzzy
msgid "`Flexx <https://flexx.readthedocs.io/en/latest/>`_"
msgstr "`Flexx <http://flexx.readthedocs.io/en/latest/>`_"

#: ../source/overview.rst:225
msgid ""
"If you are *not* interested in using a framework or platform, or just wonder "
"about some of the technologies and techniques utilized by the frameworks "
"above, continue reading below."
msgstr ""
"Se você *não* está interessado em usar um framework ou plataforma, ou apenas "
"quer saber sobre algumas das tecnologias e técnicas utilizadas pelos "
"frameworks acima, continue lendo abaixo."

#: ../source/overview.rst:230
msgid "Depending on a pre-installed Python"
msgstr "Dependendo de um Python pré-instalado"

#: ../source/overview.rst:232
msgid ""
"Pick an arbitrary computer, and depending on the context, there's a very "
"good chance Python is already installed. Included by default in most Linux "
"and Mac operating systems for many years now, you can reasonably depend on "
"Python preexisting in your data centers or on the personal machines of "
"developers and data scientists."
msgstr ""
"Escolha um computador arbitrário e, dependendo do contexto, há uma boa "
"chance do Python já estar instalado. Incluído por padrão na maioria dos "
"sistemas operacionais Linux e Mac por muitos anos, você pode depender "
"razoavelmente do Python preexistente em seus datacenters ou nas máquinas "
"pessoais de desenvolvedores e cientistas de dados."

#: ../source/overview.rst:238
msgid "Technologies which support this model:"
msgstr "Tecnologias que oferecem suporte a este modelo:"

#: ../source/overview.rst:240
msgid ":gh:`PEX <pantsbuild/pex#user-content-pex>` (Python EXecutable)"
msgstr ":gh:`PEX <pantsbuild/pex#user-content-pex>` (Python EXecutable)"

#: ../source/overview.rst:241
msgid ""
":doc:`zipapp <python:library/zipapp>` (does not help manage dependencies, "
"requires Python 3.5+)"
msgstr ""
":doc:`zipapp <python:library/zipapp>` (não ajuda a gerenciar dependências, "
"requer Python 3.5+)"

#: ../source/overview.rst:242
msgid ":gh:`shiv <linkedin/shiv#user-content-shiv>` (requires Python 3)"
msgstr ":gh:`shiv <linkedin/shiv#user-content-shiv>` (requer Python 3)"

#: ../source/overview.rst:244
msgid ""
"Of all the approaches here, depending on a pre-installed Python relies the "
"most on the target environment. Of course, this also makes for the smallest "
"package, as small as single-digit megabytes, or even kilobytes."
msgstr ""
"De todas as abordagens aqui, depender de um Python pré-instalado depende "
"mais do ambiente de destino. Claro, isso também contribui para o menor "
"pacote, tão pequeno quanto megabytes de um dígito, ou mesmo kilobytes."

#: ../source/overview.rst:249
msgid ""
"In general, decreasing the dependency on the target system increases the "
"size of our package, so the solutions here are roughly arranged by "
"increasing size of output."
msgstr ""
"Em geral, diminuir a dependência do sistema de destino aumenta o tamanho do "
"nosso pacote, portanto, as soluções aqui são organizadas de forma grosseira "
"pelo aumento do tamanho da saída."

#: ../source/overview.rst:256
msgid "Depending on a separate software distribution ecosystem"
msgstr "Dependendo de um ecossistema separado de distribuição de software"

#: ../source/overview.rst:258
msgid ""
"For a long time many operating systems, including Mac and Windows, lacked "
"built-in package management. Only recently did these OSes gain so-called "
"\"app stores\", but even those focus on consumer applications and offer "
"little for developers."
msgstr ""
"Por um longo tempo, muitos sistemas operacionais, incluindo Mac e Windows, "
"não tinham gerenciamento de pacotes integrado. Apenas recentemente esses "
"sistemas operacionais ganharam as chamadas \"*app store*\", mas mesmo "
"aqueles se concentram em aplicações de consumo e oferecem pouco para os "
"desenvolvedores."

#: ../source/overview.rst:263
msgid ""
"Developers long sought remedies, and in this struggle, emerged with their "
"own package management solutions, such as `Homebrew <https://brew.sh/>`_. "
"The most relevant alternative for Python developers is a package ecosystem "
"called `Anaconda <https://en.wikipedia.org/wiki/"
"Anaconda_(Python_distribution)>`_. Anaconda is built around Python and is "
"increasingly common in academic, analytical, and other data-oriented "
"environments, even making its way `into server-oriented environments "
"<https://web.archive.org/web/20190403064038/https://www.paypal-engineering."
"com/2016/09/07/python-packaging-at-paypal/>`_."
msgstr ""
"Os desenvolvedores buscaram soluções por muito tempo e, nessa luta, surgiram "
"com suas próprias soluções de gerenciamento de pacotes, como o `Homebrew "
"<https://brew.sh/>`_. A alternativa mais relevante para desenvolvedores "
"Python é um ecossistema de pacotes chamado `Anaconda <https://en.wikipedia."
"org/wiki/Anaconda_(Python_distribution)>`_. O Anaconda é construído em torno "
"do Python e é cada vez mais comum em ambientes acadêmicos, analíticos e "
"outros ambientes orientados a dados, chegando até a ambientes orientados a "
"servidor <https://web.archive.org/web/20190403064038/https://www.paypal-"
"engineering.com/2016/09/07/python-packaging-at-paypal/>`_."

#: ../source/overview.rst:273
msgid "Instructions on building and publishing for the Anaconda ecosystem:"
msgstr ""
"Instruções sobre como construir e publicar para o ecossistema do Anaconda:"

#: ../source/overview.rst:275
msgid ""
"`Building libraries and applications with conda <https://conda.io/projects/"
"conda-build/en/latest/user-guide/tutorials/index.html>`_"
msgstr ""
"`Building libraries and applications with conda <https://conda.io/projects/"
"conda-build/en/latest/user-guide/tutorials/index.html>`_"

#: ../source/overview.rst:276
msgid ""
"`Transitioning a native Python package to Anaconda <https://conda.io/"
"projects/conda-build/en/latest/user-guide/tutorials/build-pkgs-skeleton."
"html>`_"
msgstr ""
"`Transitioning a native Python package to Anaconda <https://conda.io/"
"projects/conda-build/en/latest/user-guide/tutorials/build-pkgs-skeleton."
"html>`_"

#: ../source/overview.rst:278
msgid ""
"A similar model involves installing an alternative Python distribution, but "
"does not support arbitrary operating system-level packages:"
msgstr ""
"Um modelo semelhante envolve a instalação de uma distribuição alternativa "
"Python, mas não oferece suporte a pacotes arbitrários em nível de sistema "
"operacional:"

#: ../source/overview.rst:282
msgid ""
"`ActiveState ActivePython <https://www.activestate.com/products/python/>`_"
msgstr ""
"`ActiveState ActivePython <https://www.activestate.com/products/python/>`_"

#: ../source/overview.rst:283
msgid "`WinPython <http://winpython.github.io/>`_"
msgstr "`WinPython <http://winpython.github.io/>`_"

#: ../source/overview.rst:288
msgid "Bringing your own Python executable"
msgstr "Trazendo seu próprio executável Python"

#: ../source/overview.rst:290
msgid ""
"Computing as we know it is defined by the ability to execute programs. Every "
"operating system natively supports one or more formats of programs they can "
"natively execute."
msgstr ""
"A computação como a conhecemos é definida pela capacidade de executar "
"programas. Cada sistema operacional oferece suporte nativamente a um ou mais "
"formatos de programas que eles podem executar nativamente."

#: ../source/overview.rst:294
msgid ""
"There are many techniques and technologies which turn your Python program "
"into one of these formats, most of which involve embedding the Python "
"interpreter and any other dependencies into a single executable file."
msgstr ""
"Existem muitas técnicas e tecnologias que transformam seu programa Python em "
"um desses formatos, a maioria das quais envolve a incorporação do "
"interpretador Python e quaisquer outras dependências em um único arquivo "
"executável."

#: ../source/overview.rst:299
msgid ""
"This approach, called *freezing*, offers wide compatibility and seamless "
"user experience, though often requires multiple technologies, and a good "
"amount of effort."
msgstr ""
"Essa abordagem, chamada *congelamento*, oferece ampla compatibilidade e "
"experiência perfeita do usuário, embora muitas vezes exija múltiplas "
"tecnologias e uma boa quantidade de esforço."

#: ../source/overview.rst:303
msgid "A selection of Python freezers:"
msgstr "Uma seleção de congeladores Python:"

#: ../source/overview.rst:305
msgid ""
"`pyInstaller <https://pyinstaller.readthedocs.io/en/stable/>`_ - Cross-"
"platform"
msgstr ""
"`pyInstaller <https://pyinstaller.readthedocs.io/en/stable/>`_ - "
"Multiplataforma"

#: ../source/overview.rst:306
msgid ""
"`cx_Freeze <https://marcelotduarte.github.io/cx_Freeze/>`_ - Cross-platform"
msgstr ""
"`cx_Freeze <https://marcelotduarte.github.io/cx_Freeze/>`_ - Multiplataforma"

#: ../source/overview.rst:307
msgid ""
"`constructor <https://github.com/conda/constructor>`_ - For command-line "
"installers"
msgstr ""
"`constructor <https://github.com/conda/constructor>`_ - Para instaladores de "
"linha de comando"

#: ../source/overview.rst:308
msgid "`py2exe <http://www.py2exe.org/>`_ - Windows only"
msgstr "`py2exe <http://www.py2exe.org/>`_ - Windows apenas"

#: ../source/overview.rst:309
msgid "`py2app <https://py2app.readthedocs.io/en/latest/>`_ - Mac only"
msgstr "`py2app <https://py2app.readthedocs.io/en/latest/>`_ - Mac apenas"

#: ../source/overview.rst:310
msgid "`osnap <https://github.com/jamesabel/osnap>`_ - Windows and Mac"
msgstr "`osnap <https://github.com/jamesabel/osnap>`_ - Windows e Mac"

#: ../source/overview.rst:311
msgid "`pynsist <https://pypi.org/project/pynsist/>`_ - Windows only"
msgstr "`pynsist <https://pypi.org/project/pynsist/>`_ - Windows apenas"

#: ../source/overview.rst:313
msgid ""
"Most of the above imply single-user deployments. For multi-component server "
"applications, see :gh:`Chef Omnibus <chef/omnibus#user-content--omnibus>`."
msgstr ""
"A maioria dos itens acima implica em implantações de um único usuário. Para "
"aplicações de servidor com vários componentes, consulte :gh:`Chef Omnibus "
"<chef/omnibus#user-content--omnibus>`."

#: ../source/overview.rst:319
msgid "Bringing your own userspace"
msgstr "Trazendo seu próprio espaço de usuário"

#: ../source/overview.rst:321
msgid ""
"An increasing number of operating systems -- including Linux, Mac OS, and "
"Windows -- can be set up to run applications packaged as lightweight images, "
"using a relatively modern arrangement often referred to as `operating-system-"
"level virtualization <https://en.wikipedia.org/wiki/Operating-system-"
"level_virtualization>`_, or *containerization*."
msgstr ""
"Um número crescente de sistemas operacionais -- incluindo Linux, Mac OS e "
"Windows -- pode ser configurado para executar aplicações empacotadas como "
"imagens leves, usando um arranjo relativamente moderno, frequentemente "
"referido como `virtualização em nível de sistema operacional <https://en."
"wikipedia.org/wiki/Operating-system-level_virtualization>`_ ou "
"*conteinerização*."

#: ../source/overview.rst:328
msgid ""
"These techniques are mostly Python agnostic, because they package whole OS "
"filesystems, not just Python or Python packages."
msgstr ""
"Essas técnicas são principalmente Python agnósticas, porque empacotam "
"sistemas de arquivos inteiros de sistemas operacionais, não apenas Python ou "
"pacotes Python."

#: ../source/overview.rst:331
msgid ""
"Adoption is most extensive among Linux servers, where the technology "
"originated and where the technologies below work best:"
msgstr ""
"A adoção é mais extensa entre os servidores Linux, onde a tecnologia se "
"originou e onde as tecnologias abaixo funcionam melhor:"

#: ../source/overview.rst:334
msgid "`AppImage <https://appimage.org/>`_"
msgstr "`AppImage <https://appimage.org/>`_"

#: ../source/overview.rst:335
msgid "`Docker <https://www.fullstackpython.com/docker.html>`_"
msgstr "`Docker <https://www.fullstackpython.com/docker.html>`_"

#: ../source/overview.rst:336
msgid "`Flatpak <https://flatpak.org/>`_"
msgstr "`Flatpak <https://flatpak.org/>`_"

#: ../source/overview.rst:337
msgid "`Snapcraft <https://snapcraft.io/>`_"
msgstr "`Snapcraft <https://snapcraft.io/>`_"

#: ../source/overview.rst:340
msgid "Bringing your own kernel"
msgstr "Trazendo seu próprio kernel"

#: ../source/overview.rst:342
#, fuzzy
#| msgid ""
#| "Most operating systems support some form of classical virtualization, "
#| "running applications packaged as images containing a full operating "
#| "system of their own. Running these virtual machines, or VMs, is a mature "
#| "approach, widespread in data center environments."
msgid ""
"Most desktop operating systems support some form of classical "
"virtualization, running applications packaged as images containing a full "
"operating system of their own. Running these virtual machines, or VMs, is a "
"mature approach, widespread in data center environments."
msgstr ""
"A maioria dos sistemas operacionais oferece suporte a alguma forma de "
"virtualização clássica, executando aplicações empacotadas como imagens "
"contendo um sistema operacional completo próprio. Executar essas máquinas "
"virtuais, ou VMs, é uma abordagem madura, amplamente difundida em ambientes "
"de datacenter."

#: ../source/overview.rst:347
msgid ""
"These techniques are mostly reserved for larger scale deployments in data "
"centers, though certain complex applications can benefit from this "
"packaging. The technologies are Python agnostic, and include:"
msgstr ""
"Essas técnicas são reservadas principalmente para implantações em grande "
"escala em datacenters, embora algumas aplicativas complexas possam se "
"beneficiar desse pacote. As tecnologias são agnósticas ao Python e incluem:"

#: ../source/overview.rst:351
msgid "KVM on Linux"
msgstr ""

#: ../source/overview.rst:352
msgid "Hyper-V on Windows"
msgstr ""

#: ../source/overview.rst:353
msgid ""
"`VHD <https://en.wikipedia.org/wiki/VHD_(file_format)>`_, `AMI <https://en."
"wikipedia.org/wiki/Amazon_Machine_Image>`_, and :doc:`other formats "
"<openstack:user/formats>`"
msgstr ""
"`VHD <https://en.wikipedia.org/wiki/VHD_(file_format)>`_, `AMI <https://en."
"wikipedia.org/wiki/Amazon_Machine_Image>`_ e :doc:`outros formatos "
"<openstack:user/formats>`"

#: ../source/overview.rst:356
#, fuzzy
#| msgid ""
#| "`OpenStack <https://www.redhat.com/en/topics/openstack>`_ - A cloud "
#| "management system in Python, with extensive VM support"
msgid ""
"`OpenStack <https://www.redhat.com/en/topics/openstack>`_ - A cloud "
"management system written in Python, with extensive VM support"
msgstr ""
"`OpenStack <https://www.redhat.com/en/topics/openstack>`_ - Um sistema de "
"gerenciamento de nuvem em Python, com suporte extenso a VM"

#: ../source/overview.rst:360
msgid "Bringing your own hardware"
msgstr "Trazendo seu próprio hardware"

#: ../source/overview.rst:362
msgid ""
"The most all-encompassing way to ship your software would be to ship it "
"already-installed on some hardware. This way, your software's user would "
"require only electricity."
msgstr ""
"A maneira mais abrangente de enviar seu software seria enviá-lo já instalado "
"em algum hardware. Dessa forma, o usuário do seu software precisaria apenas "
"de eletricidade."

#: ../source/overview.rst:366
msgid ""
"Whereas the virtual machines described above are primarily reserved for the "
"tech-savvy, you can find hardware appliances being used by everyone from the "
"most advanced data centers to the youngest children."
msgstr ""
"Considerando que as máquinas virtuais descritas acima são reservadas "
"principalmente para os conhecedores de tecnologia, você pode encontrar "
"dispositivos de hardware sendo usados por todos, desde os datacenters mais "
"avançados até as crianças mais novas."

#: ../source/overview.rst:370
msgid ""
"Embed your code on an :gh:`Adafruit <adafruit/circuitpython>`, `MicroPython "
"<https://micropython.org/>`_, or more-powerful hardware running Python, then "
"ship it to the datacenter or your users' homes. They plug and play, and you "
"can call it a day."
msgstr ""
"Incorpore seu código em um :gh:`Adafruit <adafruit/circuitpython>`, "
"`MicroPython <https://micropython.org/>`_ ou hardware mais poderoso "
"executando Python e, em seguida, envie-o para o datacenter ou para as casas "
"de seus usuários. Eles conectam e estará funcionando, e você pode encerrar o "
"dia."

#: ../source/overview.rst:379
msgid "A summary of technologies used to package Python applications."
msgstr "Um resumo de tecnologias usadas para empacotar aplicações Python."

#: ../source/overview.rst:379
msgid ""
"The simplified gamut of technologies used to package Python applications."
msgstr ""
"A gama simplificada de tecnologias usadas para empacotar aplicações Python."

#: ../source/overview.rst:382
msgid "What about..."
msgstr "E quanto a..."

#: ../source/overview.rst:384
msgid ""
"The sections above can only summarize so much, and you might be wondering "
"about some of the more conspicuous gaps."
msgstr ""
"As seções acima resumem muito, e você pode estar se perguntando sobre "
"algumas das lacunas mais evidentes."

#: ../source/overview.rst:388
msgid "Operating system packages"
msgstr "Pacotes de sistema operacional"

#: ../source/overview.rst:390
msgid ""
"As mentioned in :ref:`depending-on-a-separate-ecosystem` above, some "
"operating systems have package managers of their own. If you're very sure of "
"the operating system you're targeting, you can depend directly on a format "
"like `deb <https://en.wikipedia.org/wiki/Deb_(file_format)>`_ (for Debian, "
"Ubuntu, etc.) or `RPM <https://en.wikipedia.org/wiki/RPM_Package_Manager>`_ "
"(for Red Hat, Fedora, etc.), and use that built-in package manager to take "
"care of installation, and even deployment. You can even use `FPM <https://"
"fpm.readthedocs.io/en/latest/cli-reference.html#virtualenv>`_ to generate "
"both deb and RPMs from the same source."
msgstr ""
"Como mencionado em :ref:`depending-on-a-separate-ecosystem` acima, alguns "
"sistemas operacionais possuem gerenciadores de pacotes próprios. Se você "
"tiver certeza do sistema operacional que está almejando, pode depender "
"diretamente de um formato como `deb <https://en.wikipedia.org/wiki/"
"Deb_(file_format)>`_ (para Debian, Ubuntu , etc.) ou `RPM <https://en."
"wikipedia.org/wiki/RPM_Package_Manager>`_ (para Red Hat, Fedora, etc.) e "
"usar esse gerenciador de pacotes embutido para cuidar da instalação, e mesmo "
"implantação. Você pode até usar `FPM <https://fpm.readthedocs.io/en/latest/"
"cli-reference.html#virtualenv>`_ para gerar deb e RPMs da mesma fonte."

#: ../source/overview.rst:401
msgid ""
"In most deployment pipelines, the OS package manager is just one piece of "
"the puzzle."
msgstr ""
"Na maioria das pipelines de implantação, o gerenciador de pacotes do sistema "
"operacional é apenas uma peça do quebra-cabeça."

#: ../source/overview.rst:407
msgid ""
":doc:`Virtualenvs <python-guide:dev/virtualenvs>` have been an indispensable "
"tool for multiple generations of Python developer, but are slowly fading "
"from view, as they are being wrapped by higher-level tools. With packaging "
"in particular, virtualenvs are used as a primitive in :doc:`the dh-"
"virtualenv tool <dh-virtualenv:tutorial>` and `osnap <https://github.com/"
"jamesabel/osnap>`_, both of which wrap virtualenvs in a self-contained way."
msgstr ""
":doc:`Virtualenvs <python-guide:dev/virtualenvs>` têm sido uma ferramenta "
"indispensável para várias gerações de desenvolvedores Python, mas estão "
"desaparecendo lentamente de vista, à medida que estão sendo envoltos por "
"ferramentas de nível superior. Com o empacotamento em particular, "
"virtualenvs são usados como primitivos na :doc:`ferramenta dh-virtualenv <dh-"
"virtualenv:tutorial>` e `osnap <https://github.com/jamesabel/osnap>`_, ambos "
"envolvem virtualenvs de uma forma independente."

#: ../source/overview.rst:416
msgid ""
"For production deployments, do not rely on running ``python -m pip install`` "
"from the Internet into a virtualenv, as one might do in a development "
"environment. The overview above is full of much better solutions."
msgstr ""
"Para implantações de produção, não dependa da execução de ``python -m pip "
"install`` da Internet em um virtualenv, como alguém pode fazer em um "
"ambiente de desenvolvimento. A visão geral acima está repleta de soluções "
"muito melhores."

#: ../source/overview.rst:421
msgid "Security"
msgstr "Segurança"

#: ../source/overview.rst:423
msgid ""
"The further down the gradient you come, the harder it gets to update "
"components of your package. Everything is more tightly bound together."
msgstr ""
"Quanto mais fundo você descer nas camadas, mais difícil será para atualizar "
"os componentes do seu pacote. Tudo está mais estreitamente ligado."

#: ../source/overview.rst:426
msgid ""
"For example, if a kernel security issue emerges, and you're deploying "
"containers, the host system's kernel can be updated without requiring a new "
"build on behalf of the application. If you deploy VM images, you'll need a "
"new build. Whether or not this dynamic makes one option more secure is still "
"a bit of an old debate, going back to the still-unsettled matter of `static "
"versus dynamic linking <https://www.google.com/search?"
"channel=fs&q=static+vs+dynamic+linking>`_."
msgstr ""
"Por exemplo, se surgir um problema de segurança do kernel e você estiver "
"implantando contêineres, o kernel do sistema host pode ser atualizado sem a "
"necessidade de uma nova compilação em nome da aplicação. Se você implantar "
"imagens de VM, precisará de uma nova construção. Se essa dinâmica torna ou "
"não uma opção mais segura ainda é um debate antigo, voltando à questão ainda "
"não resolvida de `ligação estática versus ligação dinâmica <https://www."
"google.com/search?channel=fs&q=static+vs+dynamic+linking>`_."

#: ../source/overview.rst:435
msgid "Wrap up"
msgstr "Resumo"

#: ../source/overview.rst:437
msgid ""
"Packaging in Python has a bit of a reputation for being a bumpy ride. This "
"impression is mostly a byproduct of Python's versatility. Once you "
"understand the natural boundaries between each packaging solution, you begin "
"to realize that the varied landscape is a small price Python programmers pay "
"for using one of the most balanced, flexible languages available."
msgstr ""
"O empacotamento no Python tem a reputação de ser um percurso acidentado. "
"Essa impressão é principalmente um subproduto da versatilidade do Python. "
"Depois de entender os limites naturais entre cada solução de empacotamento, "
"você começa a perceber que o cenário variado é um preço pequeno Python que "
"os programadores pagam por usar uma das linguagens mais equilibradas e "
"flexíveis disponíveis."

#: ../source/specifications/binary-distribution-format.rst:7
msgid "Binary distribution format"
msgstr "Formato de distribuição binária"

#: ../source/specifications/binary-distribution-format.rst:9
msgid ""
"This page specifies the binary distribution format for Python packages, also "
"called the wheel format."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:12
msgid ""
"A wheel is a ZIP-format archive with a specially formatted file name and the "
"``.whl`` extension.  It contains a single distribution nearly as it would be "
"installed according to PEP 376 with a particular installation scheme.  "
"Although a specialized installer is recommended, a wheel file may be "
"installed by simply unpacking into site-packages with the standard 'unzip' "
"tool while preserving enough information to spread its contents out onto "
"their final paths at any later time."
msgstr ""
"Um wheel é um arquivo em formato ZIP com um nome de arquivo formatado de "
"forma especial e a extensão ``.whl``. Ele contém uma única distribuição "
"quase como seria instalado de acordo com a PEP 376 com um esquema de "
"instalação particular. Embora um instalador especializado seja recomendado, "
"um arquivo wheel pode ser instalado simplesmente descompactando em pacotes "
"de sites com a ferramenta padrão de \"descompactação\" enquanto preserva "
"informações suficientes para espalhar seu conteúdo em seus caminhos finais a "
"qualquer momento."

#: ../source/specifications/binary-distribution-format.rst:22
msgid "Details"
msgstr "Detalhes"

#: ../source/specifications/binary-distribution-format.rst:25
msgid "Installing a wheel 'distribution-1.0-py32-none-any.whl'"
msgstr "Instalando um wheel 'distribution-1.0-py32-none-any.whl'"

#: ../source/specifications/binary-distribution-format.rst:27
msgid "Wheel installation notionally consists of two phases:"
msgstr "A instalação do wheel consiste, em teoria, em duas fases:"

#: ../source/specifications/binary-distribution-format.rst:29
msgid "Unpack."
msgstr "Desempacotar."

#: ../source/specifications/binary-distribution-format.rst:31
msgid "Parse ``distribution-1.0.dist-info/WHEEL``."
msgstr "Analisar ``distribution-1.0.dist-info/WHEEL``."

#: ../source/specifications/binary-distribution-format.rst:32
msgid ""
"Check that installer is compatible with Wheel-Version.  Warn if minor "
"version is greater, abort if major version is greater."
msgstr ""
"Verificar se o instalador é compatível com a versão Wheel. Avisa se a versão "
"secundária é maior, cancela se a versão principal é maior."

#: ../source/specifications/binary-distribution-format.rst:34
msgid ""
"If Root-Is-Purelib == 'true', unpack archive into purelib (site-packages)."
msgstr ""
"Se Root-Is-Purelib == 'true', descompactar o arquivo em purelib (sites-"
"packages)."

#: ../source/specifications/binary-distribution-format.rst:36
msgid "Else unpack archive into platlib (site-packages)."
msgstr "Caso contrário, descompactar o arquivo em platlib (site-packages)."

#: ../source/specifications/binary-distribution-format.rst:38
msgid "Spread."
msgstr "Espalhar."

#: ../source/specifications/binary-distribution-format.rst:40
msgid ""
"Unpacked archive includes ``distribution-1.0.dist-info/`` and (if there is "
"data) ``distribution-1.0.data/``."
msgstr ""
"O arquivo descompactado inclui ``distribution-1.0.dist-info/`` e (se houver "
"dados) ``distribution-1.0.data/``."

#: ../source/specifications/binary-distribution-format.rst:42
#, fuzzy
msgid ""
"Move each subtree of ``distribution-1.0.data/`` onto its destination path. "
"Each subdirectory of ``distribution-1.0.data/`` is a key into a dict of "
"destination directories, such as ``distribution-1.0.data/(purelib|platlib|"
"headers|scripts|data)``. These subdirectories are :ref:`installation paths "
"defined by sysconfig <python:installation_paths>`."
msgstr ""
"Mover cada subárvore de ``distribution-1.0.data/`` em seu caminho de "
"destino. Cada subdiretório de ``distribution-1.0.data/`` é uma chave para um "
"dicionário de diretórios de destino, como ``distribution-1.0.data/(purelib|"
"platlib|headers|scripts|data)``. Os caminhos inicialmente suportados são "
"obtidos de ``distutils.command.install``."

#: ../source/specifications/binary-distribution-format.rst:48
msgid ""
"If applicable, update scripts starting with ``#!python`` to point to the "
"correct interpreter."
msgstr ""
"Se aplicável, atualizar os scripts começando com ``#!python`` para apontar "
"para o interpretador correto."

#: ../source/specifications/binary-distribution-format.rst:50
msgid "Update ``distribution-1.0.dist-info/RECORD`` with the installed paths."
msgstr ""
"Atualizar ``distribution-1.0.dist-info/RECORD`` com os caminhos instalados."

#: ../source/specifications/binary-distribution-format.rst:52
msgid "Remove empty ``distribution-1.0.data`` directory."
msgstr "Remover o diretório vazio ``distribution-1.0.data``."

#: ../source/specifications/binary-distribution-format.rst:53
msgid ""
"Compile any installed .py to .pyc. (Uninstallers should be smart enough to "
"remove .pyc even if it is not mentioned in RECORD.)"
msgstr ""
"Compilar qualquer .py instalado em .pyc. (Os desinstaladores devem ser "
"inteligentes o suficiente para remover .pyc, mesmo que não seja mencionado "
"em RECORD.)"

#: ../source/specifications/binary-distribution-format.rst:57
msgid "Recommended installer features"
msgstr "Recursos de instalador recomendados"

#: ../source/specifications/binary-distribution-format.rst:67
msgid "Rewrite ``#!python``."
msgstr "Reescrever ``#!python``."

#: ../source/specifications/binary-distribution-format.rst:60
msgid ""
"In wheel, scripts are packaged in ``{distribution}-{version}.data/scripts/"
"``.  If the first line of a file in ``scripts/`` starts with exactly ``b'#!"
"python'``, rewrite to point to the correct interpreter.  Unix installers may "
"need to add the +x bit to these files if the archive was created on Windows."
msgstr ""
"No wheel, os scripts são empacotados em ``{distribution}-{version}.data/"
"scripts/``. Se a primeira linha de um arquivo em ``scripts/`` começar "
"exatamente com ``b'#!python'``, reescreva para apontar para o interpretador "
"correto. Os instaladores do Unix podem precisar adicionar o bit +x a esses "
"arquivos se o arquivo tiver sido criado em Windows."

#: ../source/specifications/binary-distribution-format.rst:66
msgid ""
"The ``b'#!pythonw'`` convention is allowed. ``b'#!pythonw'`` indicates a GUI "
"script instead of a console script."
msgstr ""
"A convenção ``b'#!pythonw'`` é permitida. ``b'#!pythonw'`` indica um script "
"GUI ao invés de um script de console."

#: ../source/specifications/binary-distribution-format.rst:72
msgid "Generate script wrappers."
msgstr "Gerar script wrappers."

#: ../source/specifications/binary-distribution-format.rst:70
msgid ""
"In wheel, scripts packaged on Unix systems will certainly not have "
"accompanying .exe wrappers.  Windows installers may want to add them during "
"install."
msgstr ""
"No wheel, scripts empacotados em sistemas Unix certamente não serão "
"acompanhados de wrappers .exe. Os instaladores Windows podem querer adicioná-"
"los durante a instalação."

#: ../source/specifications/binary-distribution-format.rst:75
msgid "Recommended archiver features"
msgstr "Recursos de arquivador recomendados"

#: ../source/specifications/binary-distribution-format.rst:82
msgid "Place ``.dist-info`` at the end of the archive."
msgstr "Colocar ``.dist-info`` no final do arquivo."

#: ../source/specifications/binary-distribution-format.rst:78
msgid ""
"Archivers are encouraged to place the ``.dist-info`` files physically at the "
"end of the archive.  This enables some potentially interesting ZIP tricks "
"including the ability to amend the metadata without rewriting the entire "
"archive."
msgstr ""
"Os arquivadores são encorajados a colocar os arquivos ``.dist-info`` "
"fisicamente no final do repositório. Isso permite alguns truques de ZIP "
"potencialmente interessantes, incluindo a capacidade de corrigir os "
"metadados sem reescrever todo o arquivo."

#: ../source/specifications/binary-distribution-format.rst:85
#: ../source/specifications/pylock-toml.rst:51
msgid "File Format"
msgstr "Formato de arquivos"

#: ../source/specifications/binary-distribution-format.rst:90
msgid "File name convention"
msgstr "Convenção de nome de arquivos"

#: ../source/specifications/binary-distribution-format.rst:92
msgid ""
"The wheel filename is ``{distribution}-{version}(-{build tag})?-{python tag}-"
"{abi tag}-{platform tag}.whl``."
msgstr ""
"O nome de arquivo do wheel é ``{distribution}-{version}(-{build tag})?-"
"{python tag}-{abi tag}-{platform tag}.whl``."

#: ../source/specifications/binary-distribution-format.rst:96
msgid "distribution"
msgstr "distribution"

#: ../source/specifications/binary-distribution-format.rst:96
msgid "Distribution name, e.g. 'django', 'pyramid'."
msgstr "Nome da distribuição (p.ex., 'django', 'pyramid')."

#: ../source/specifications/binary-distribution-format.rst:99
msgid "version"
msgstr "version"

#: ../source/specifications/binary-distribution-format.rst:99
msgid "Distribution version, e.g. 1.0."
msgstr "Versão da distribuição (p.ex., 1.0)."

#: ../source/specifications/binary-distribution-format.rst:124
msgid "build tag"
msgstr "build tag"

#: ../source/specifications/binary-distribution-format.rst:102
msgid ""
"Optional build number.  Must start with a digit.  Acts as a tie-breaker if "
"two wheel file names are the same in all other respects (i.e. name, version, "
"and other tags).  Sort as an empty tuple if unspecified, else sort as a two-"
"item tuple with the first item being the initial digits as an ``int``, and "
"the second item being the remainder of the tag as a ``str``."
msgstr ""
"Número de construção opcional. Deve começar com um dígito. Atua como um "
"desempate se os nomes de arquivo de dois wheels forem iguais em todos os "
"outros aspectos (ou seja, nome, versão e outras tags). Classifique como uma "
"tupla vazia se não for especificado, caso contrário, classifique como uma "
"tupla de dois itens com o primeiro item sendo os dígitos iniciais como um "
"``int``, e o segundo item sendo o restante da tag como um ``str``."

#: ../source/specifications/binary-distribution-format.rst:109
msgid ""
"A common use-case for build numbers is rebuilding a binary distribution due "
"to a change in the build environment, like when using the manylinux image to "
"build distributions using pre-release CPython versions."
msgstr ""
"Um caso de uso comum para números de construção é reconstruir uma "
"distribuição binária devido a uma mudança no ambiente de construção, como ao "
"usar a imagem manylinux para construir distribuições usando versões de pré-"
"lançamento do CPython."

#: ../source/specifications/binary-distribution-format.rst:116
msgid ""
"Build numbers are not a part of the distribution version and thus are "
"difficult to reference externally, especially so outside the Python "
"ecosystem of tools and standards. A common case where a distribution would "
"need to referenced externally is when resolving a security vulnerability."
msgstr ""
"Os números de construção não fazem parte da versão de distribuição e, "
"portanto, são difíceis de se referir externamente, especialmente fora do "
"ecossistema do Python de ferramentas e padrões. Um caso comum em que uma "
"distribuição precisa ser referenciada externamente é quando se resolve uma "
"vulnerabilidade de segurança."

#: ../source/specifications/binary-distribution-format.rst:121
msgid ""
"Due to this limitation, new distributions which need to be referenced "
"externally **should not** use build numbers when building the new "
"distribution. Instead a **new distribution version** should be created for "
"such cases."
msgstr ""
"Devido a esta limitação, novas distribuições que precisam ser referenciadas "
"externamente **não devem** usar números de construção ao construir a nova "
"distribuição. Em vez disso, deve ser criada uma **nova versão de "
"distribuição** para esses casos."

#: ../source/specifications/binary-distribution-format.rst:127
msgid "language implementation and version tag"
msgstr "implementação da linguagem e tag de versão"

#: ../source/specifications/binary-distribution-format.rst:127
msgid "E.g. 'py27', 'py2', 'py3'."
msgstr "p.ex., 'py27', 'py2', 'py3'."

#: ../source/specifications/binary-distribution-format.rst:130
#: ../source/specifications/platform-compatibility-tags.rst:20
msgid "abi tag"
msgstr "abi tag"

#: ../source/specifications/binary-distribution-format.rst:130
msgid "E.g. 'cp33m', 'abi3', 'none'."
msgstr "p.ex., 'cp33m', 'abi3', 'none'."

#: ../source/specifications/binary-distribution-format.rst:133
#: ../source/specifications/platform-compatibility-tags.rst:23
msgid "platform tag"
msgstr "platform tag"

#: ../source/specifications/binary-distribution-format.rst:133
msgid "E.g. 'linux_x86_64', 'any'."
msgstr "p.ex., 'linux_x86_64', 'any'."

#: ../source/specifications/binary-distribution-format.rst:135
msgid ""
"For example, ``distribution-1.0-1-py27-none-any.whl`` is the first build of "
"a package called 'distribution', and is compatible with Python 2.7 (any "
"Python 2.7 implementation), with no ABI (pure Python), on any CPU "
"architecture."
msgstr ""
"Por exemplo, ``distribution-1.0-1-py27-none-any.whl`` é a primeira "
"construção de um pacote chamado 'distribution' e é compatível com Python 2.7 "
"(qualquer implementação Python 2.7), com sem ABI (puro Python), em qualquer "
"arquitetura de CPU."

#: ../source/specifications/binary-distribution-format.rst:140
msgid ""
"The last three components of the filename before the extension are called "
"\"compatibility tags.\"  The compatibility tags express the package's basic "
"interpreter requirements and are detailed in PEP 425."
msgstr ""
"Os últimos três componentes do nome do arquivo antes da extensão são "
"chamados de \"tags de compatibilidade\". As tags de compatibilidade "
"expressam os requisitos básicos do interpretador do pacote e são detalhadas "
"na PEP 425."

#: ../source/specifications/binary-distribution-format.rst:145
msgid "Escaping and Unicode"
msgstr "Escape e Unicode"

#: ../source/specifications/binary-distribution-format.rst:147
msgid ""
"As the components of the filename are separated by a dash (``-``, HYPHEN-"
"MINUS), this character cannot appear within any component. This is handled "
"as follows:"
msgstr ""
"Como os componentes do nome do arquivo são separados por um traço (``-``, "
"HYPHEN-MINUS), este caractere não pode aparecer em nenhum componente. Isso é "
"tratado da seguinte maneira:"

#: ../source/specifications/binary-distribution-format.rst:150
msgid ""
"In distribution names, any run of ``-_.`` characters (HYPHEN-MINUS, LOW LINE "
"and FULL STOP) should be replaced with ``_`` (LOW LINE), and uppercase "
"characters should be replaced with corresponding lowercase ones. This is "
"equivalent to regular :ref:`name normalization <name-normalization>` "
"followed by replacing ``-`` with ``_``. Tools consuming wheels must be "
"prepared to accept ``.`` (FULL STOP) and uppercase letters, however, as "
"these were allowed by an earlier version of this specification."
msgstr ""
"Em nomes de distribuição, qualquer ocorrência de caracteres ``-_.`` (HYPHEN-"
"MINUS, LOW LINE e FULL STOP) deve ser substituída por ``_`` (LOW LINE) e "
"caracteres maiúsculos devem ser substituídos pelos minúsculos "
"correspondentes. Isso é equivalente à :ref:`normalização de nome <name-"
"normalization>` regular da :pep:`503` seguida pela substituição de ``-`` por "
"``_``. Porém, ferramentas que usem wheels devem estar preparadas para "
"aceitar ``.`` (FULL STOP) e letras maiúsculas, pois estes eram permitidos "
"por uma versão anterior desta especificação."

#: ../source/specifications/binary-distribution-format.rst:157
msgid ""
"Version numbers should be normalised according to the :ref:`Version "
"specifier specification <version-specifiers>`. Normalised version numbers "
"cannot contain ``-``."
msgstr ""
"Os números de versão devem ser normalizados de acordo com a :ref:"
"`especificação de especificadores de versão <version-specifiers>`. Os "
"números de versão normalizados não podem conter ``-``."

#: ../source/specifications/binary-distribution-format.rst:159
msgid ""
"The remaining components may not contain ``-`` characters, so no escaping is "
"necessary."
msgstr ""
"Os componentes restantes não podem conter caracteres ``-``, portanto, nenhum "
"escape é necessário."

#: ../source/specifications/binary-distribution-format.rst:162
msgid ""
"Tools producing wheels should verify that the filename components do not "
"contain ``-``, as the resulting file may not be processed correctly if they "
"do."
msgstr ""
"Ferramentas que produzem wheels devem verificar se os componentes do nome de "
"arquivo não contêm ``-``, pois o arquivo resultante pode não ser processado "
"corretamente se contiverem."

#: ../source/specifications/binary-distribution-format.rst:165
msgid ""
"The archive filename is Unicode.  It will be some time before the tools are "
"updated to support non-ASCII filenames, but they are supported in this "
"specification."
msgstr ""
"O nome do arquivo é Unicode. Levará algum tempo até que as ferramentas sejam "
"atualizadas para oferecer suporte a nomes de arquivos não ASCII, mas eles "
"são suportados nesta especificação."

#: ../source/specifications/binary-distribution-format.rst:169
msgid ""
"The filenames *inside* the archive are encoded as UTF-8.  Although some ZIP "
"clients in common use do not properly display UTF-8 filenames, the encoding "
"is supported by both the ZIP specification and Python's ``zipfile``."
msgstr ""
"Os nomes de arquivos *dentro* do arquivo são codificados como UTF-8. Embora "
"alguns clientes ZIP em uso comum não exibam nomes de arquivo UTF-8 "
"apropriadamente, a codificação é suportada pela especificação ZIP e pelo "
"``zipfile`` do Python."

#: ../source/specifications/binary-distribution-format.rst:175
msgid "File contents"
msgstr "Conteúdo dos arquivos"

#: ../source/specifications/binary-distribution-format.rst:177
#, fuzzy
#| msgid ""
#| "The contents of a wheel file, where {distribution} is replaced with the "
#| "name of the package, e.g. ``beaglevote`` and {version} is replaced with "
#| "its version, e.g. ``1.0.0``, consist of:"
msgid ""
"The contents of a wheel file, where {distribution} is replaced with the :ref:"
"`normalized name <name-normalization>` of the package, e.g. ``beaglevote`` "
"and {version} is replaced with its :ref:`normalized version <version-"
"specifiers-normalization>`, e.g. ``1.0.0``, (with dash/``-`` characters "
"replaced with underscore/``_`` characters in both fields) consist of:"
msgstr ""
"O conteúdo de um arquivo wheel, onde {distribution} é substituído pelo nome "
"do pacote, por exemplo, ``beaglevote`` e {version} é substituído por sua "
"versão, p.ex., ``1.0.0``, consiste em:"

#: ../source/specifications/binary-distribution-format.rst:184
msgid ""
"``/``, the root of the archive, contains all files to be installed in "
"``purelib`` or ``platlib`` as specified in ``WHEEL``.  ``purelib`` and "
"``platlib`` are usually both ``site-packages``."
msgstr ""
"``/``, a raiz do arquivo, contém todos os arquivos a serem instalados em "
"``purelib`` ou ``platlib`` conforme especificado em ``WHEEL``. ``purelib`` e "
"``platlib`` são normalmente ``site-packages``."

#: ../source/specifications/binary-distribution-format.rst:187
msgid "``{distribution}-{version}.dist-info/`` contains metadata."
msgstr "``{distribution}-{version}.dist-info/`` contém metadados."

#: ../source/specifications/binary-distribution-format.rst:188
#, fuzzy
#| msgid "``{distribution}-{version}.dist-info/`` contains metadata."
msgid ""
":file:`{distribution}-{version}.dist-info/licenses/` contains license files."
msgstr "``{distribution}-{version}.dist-info/`` contém metadados."

#: ../source/specifications/binary-distribution-format.rst:189
msgid ""
"``{distribution}-{version}.data/`` contains one subdirectory for each non-"
"empty install scheme key not already covered, where the subdirectory name is "
"an index into a dictionary of install paths (e.g. ``data``, ``scripts``, "
"``headers``, ``purelib``, ``platlib``)."
msgstr ""
"``{distribution}-{version}.data/`` contém um subdiretório para cada chave de "
"esquema de instalação não vazia ainda não coberta, onde o nome do "
"subdiretório é um índice em um dicionário de caminhos de instalação (p.ex., "
"``data``, ``scripts``, ``headers``, ``purelib``, ``platlib``)."

#: ../source/specifications/binary-distribution-format.rst:193
#, fuzzy
#| msgid ""
#| "Python scripts must appear in ``scripts`` and begin with exactly ``b'#!"
#| "python'`` in order to enjoy script wrapper generation and ``#!python`` "
#| "rewriting at install time.  They may have any or no extension."
msgid ""
"Python scripts must appear in ``scripts`` and begin with exactly ``b'#!"
"python'`` in order to enjoy script wrapper generation and ``#!python`` "
"rewriting at install time.  They may have any or no extension.  The "
"``scripts`` directory may only contain regular files."
msgstr ""
"Scripts Python devem aparecer em ``scripts`` e começar exatamente com ``b'#!"
"python'`` para desfrutar da geração do wrapper de script e reescrever ``#!"
"python`` no momento da instalação. Eles podem ter qualquer ou nenhuma "
"extensão."

#: ../source/specifications/binary-distribution-format.rst:197
msgid ""
"``{distribution}-{version}.dist-info/METADATA`` is Metadata version 1.1 or "
"greater format metadata."
msgstr ""
"``{distribution}-{version}.dist-info/METADATA`` é Metadata versão 1.1 ou "
"metadados de formato superior."

#: ../source/specifications/binary-distribution-format.rst:199
msgid ""
"``{distribution}-{version}.dist-info/WHEEL`` is metadata about the archive "
"itself in the same basic key: value format::"
msgstr ""
"``{distribution}-{version}.dist-info/WHEEL`` são metadados sobre p arquivo "
"em si no mesmo formato \"chave: valor\"::"

#: ../source/specifications/binary-distribution-format.rst:209
msgid "``Wheel-Version`` is the version number of the Wheel specification."
msgstr "``Wheel-Version`` é o número de versão da especificação Wheel."

#: ../source/specifications/binary-distribution-format.rst:210
msgid ""
"``Generator`` is the name and optionally the version of the software that "
"produced the archive."
msgstr ""
"``Generator`` é o nome e, opcionalmente, a versão do software que produziu o "
"arquivo."

#: ../source/specifications/binary-distribution-format.rst:212
msgid ""
"``Root-Is-Purelib`` is true if the top level directory of the archive should "
"be installed into purelib; otherwise the root should be installed into "
"platlib."
msgstr ""
"``Root-Is-Purelib`` é verdadeiro se o diretório de nível superior do arquivo "
"deve ser instalado em purelib; caso contrário, a raiz deve ser instalada no "
"platlib."

#: ../source/specifications/binary-distribution-format.rst:215
msgid ""
"``Tag`` is the wheel's expanded compatibility tags; in the example the "
"filename would contain ``py2.py3-none-any``."
msgstr ""
"``Tag`` são as tags de compatibilidade expandida do wheel; no exemplo, o "
"nome do arquivo conteria ``py2.py3-none-any``."

#: ../source/specifications/binary-distribution-format.rst:217
msgid ""
"``Build`` is the build number and is omitted if there is no build number."
msgstr ""
"``Build`` é o número da construção e é omitido se não houver número da "
"construção."

#: ../source/specifications/binary-distribution-format.rst:218
msgid ""
"A wheel installer should warn if Wheel-Version is greater than the version "
"it supports, and must fail if Wheel-Version has a greater major version than "
"the version it supports."
msgstr ""
"Um instalador de wheel deve avisar se Wheel-Version é maior do que a versão "
"que ele suporta, e deve falhar se Wheel-Version tiver uma versão principal "
"maior do que a versão que ele suporta."

#: ../source/specifications/binary-distribution-format.rst:221
msgid ""
"Wheel, being an installation format that is intended to work across multiple "
"versions of Python, does not generally include .pyc files."
msgstr ""
"O Wheel, sendo um formato de instalação destinado a funcionar em várias "
"versões do Python, geralmente não inclui arquivos .pyc."

#: ../source/specifications/binary-distribution-format.rst:223
msgid "Wheel does not contain setup.py or setup.cfg."
msgstr "Wheel não contém setup.py ou setup.cfg."

#: ../source/specifications/binary-distribution-format.rst:225
msgid ""
"This version of the wheel specification is based on the distutils install "
"schemes and does not define how to install files to other locations. The "
"layout offers a superset of the functionality provided by the existing "
"wininst and egg binary formats."
msgstr ""
"Esta versão da especificação do wheel é baseada nos esquemas de instalação "
"do distutils e não define como instalar arquivos em outros locais. O layout "
"oferece um superconjunto da funcionalidade fornecida pelos formatos binários "
"wininst e egg existentes."

#: ../source/specifications/binary-distribution-format.rst:232
#: ../source/specifications/recording-installed-packages.rst:23
msgid "The .dist-info directory"
msgstr "O diretório .dist-info"

#: ../source/specifications/binary-distribution-format.rst:234
msgid ""
"Wheel .dist-info directories include at a minimum METADATA, WHEEL, and "
"RECORD."
msgstr ""
"Os diretórios .dist-info de wheels incluem no mínimo METADATA, WHEEL e "
"RECORD."

#: ../source/specifications/binary-distribution-format.rst:236
msgid ""
"METADATA is the package metadata, the same format as PKG-INFO as found at "
"the root of sdists."
msgstr ""
"METADATA são os metadados do pacote, o mesmo formato do PKG-INFO encontrado "
"na raiz dos sdists."

#: ../source/specifications/binary-distribution-format.rst:238
msgid "WHEEL is the wheel metadata specific to a build of the package."
msgstr ""
"WHEEL são os metadados de wheel específicos para uma construção do pacote."

#: ../source/specifications/binary-distribution-format.rst:239
msgid ""
"RECORD is a list of (almost) all the files in the wheel and their secure "
"hashes.  Unlike PEP 376, every file except RECORD, which cannot contain a "
"hash of itself, must include its hash.  The hash algorithm must be sha256 or "
"better; specifically, md5 and sha1 are not permitted, as signed wheel files "
"rely on the strong hashes in RECORD to validate the integrity of the archive."
msgstr ""
"RECORD é uma lista de (quase) todos os arquivos no wheel seus hashes "
"seguros. Ao contrário da PEP 376, nenhum arquivo, exceto RECORD, pode conter "
"um hash de si mesmo, deve incluir seu hash. O algoritmo hash deve ser sha256 "
"ou melhor; especificamente, md5 e sha1 não são permitidos, pois os arquivos "
"wheel assinados contam com hashes fortes em RECORD para validar a "
"integridade do arquivo."

#: ../source/specifications/binary-distribution-format.rst:245
msgid "PEP 376's INSTALLER and REQUESTED are not included in the archive."
msgstr "INSTALLER e REQUESTED da PEP 376 não são incluídos no arquivo."

#: ../source/specifications/binary-distribution-format.rst:246
msgid ""
"RECORD.jws is used for digital signatures.  It is not mentioned in RECORD."
msgstr ""
"RECORD.jws é usado para assinaturas digitais. Não é mencionado no RECORD."

#: ../source/specifications/binary-distribution-format.rst:248
msgid ""
"RECORD.p7s is allowed as a courtesy to anyone who would prefer to use S/MIME "
"signatures to secure their wheel files.  It is not mentioned in RECORD."
msgstr ""
"RECORD.p7s é permitido como cortesia para qualquer pessoa que prefira usar "
"assinaturas S/MIME para proteger seus arquivos wheels. Não é mencionado no "
"RECORD."

#: ../source/specifications/binary-distribution-format.rst:251
msgid ""
"During extraction, wheel installers verify all the hashes in RECORD against "
"the file contents.  Apart from RECORD and its signatures, installation will "
"fail if any file in the archive is not both mentioned and correctly hashed "
"in RECORD."
msgstr ""
"Durante a extração, os instaladores de wheels verificam todos os hashes em "
"RECORD em relação ao conteúdo do arquivo. Além de RECORD e suas assinaturas, "
"a instalação falhará se qualquer arquivo no arquivo não for mencionado e com "
"hash correto em RECORD."

#: ../source/specifications/binary-distribution-format.rst:257
msgid "Subdirectories in :file:`.dist-info/`"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:259
msgid ""
"Subdirectories under :file:`.dist-info/` are reserved for future use. The "
"following subdirectory names under :file:`.dist-info/` are reserved for "
"specific usage:"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:263
#, fuzzy
#| msgid "Project name"
msgid "Subdirectory name"
msgstr "Nome do projeto"

#: ../source/specifications/binary-distribution-format.rst:263
msgid "PEP / Standard"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:265
#, fuzzy
#| msgid "``license``"
msgid "``licenses``"
msgstr "``license``"

#: ../source/specifications/binary-distribution-format.rst:265
#: ../source/specifications/binary-distribution-format.rst:266
#, fuzzy
#| msgid ":pep:`600`"
msgid ":pep:`639`"
msgstr ":pep:`600`"

#: ../source/specifications/binary-distribution-format.rst:266
#, fuzzy
#| msgid "``license``"
msgid "``license_files``"
msgstr "``license``"

#: ../source/specifications/binary-distribution-format.rst:267
#, fuzzy
#| msgid "``LIB``"
msgid "``LICENSES``"
msgstr "``LIB``"

#: ../source/specifications/binary-distribution-format.rst:267
msgid "`REUSE licensing framework <https://reuse.software>`__"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:268
msgid "``sboms``"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:268
#, fuzzy
#| msgid ":pep:`571`"
msgid ":pep:`770`"
msgstr ":pep:`571`"

#: ../source/specifications/binary-distribution-format.rst:272
#, fuzzy
#| msgid "The .dist-info directory"
msgid "The :file:`.dist-info/licenses/` directory"
msgstr "O diretório .dist-info"

#: ../source/specifications/binary-distribution-format.rst:274
msgid ""
"If the metadata version is 2.4 or greater and one or more ``License-File`` "
"fields is specified, the :file:`.dist-info/` directory MUST contain a :file:"
"`licenses/` subdirectory, which MUST contain the files listed in the "
"``License-File`` fields in the :file:`METADATA` file at their respective "
"paths relative to the :file:`licenses/` directory."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:281
#, fuzzy
#| msgid "The .dist-info directory"
msgid "The :file:`.dist-info/sboms/` directory"
msgstr "O diretório .dist-info"

#: ../source/specifications/binary-distribution-format.rst:283
msgid ""
"All files contained within the :file:`.dist-info/sboms/` directory MUST be "
"Software Bill-of-Materials (SBOM) files that describe software contained "
"within the distribution archive."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:288
msgid "The .data directory"
msgstr "O diretório .data"

#: ../source/specifications/binary-distribution-format.rst:290
msgid ""
"Any file that is not normally installed inside site-packages goes into the ."
"data directory, named as the .dist-info directory but with the .data/ "
"extension::"
msgstr ""
"Qualquer arquivo que não é normalmente instalado dentro de site-packages vai "
"para o diretório .data, nomeado como o diretório .dist-info, mas com a "
"extensão .data/::"

#: ../source/specifications/binary-distribution-format.rst:298
msgid ""
"The .data directory contains subdirectories with the scripts, headers, "
"documentation and so forth from the distribution.  During installation the "
"contents of these subdirectories are moved onto their destination paths."
msgstr ""
"O diretório .data contém subdiretórios com os scripts, cabeçalhos, "
"documentação e assim por diante da distribuição. Durante a instalação, o "
"conteúdo desses subdiretórios é movido para seus caminhos de destino."

#: ../source/specifications/binary-distribution-format.rst:304
msgid "Signed wheel files"
msgstr "Arquivos wheels assinados"

#: ../source/specifications/binary-distribution-format.rst:306
msgid ""
"Wheel files include an extended RECORD that enables digital signatures.  PEP "
"376's RECORD is altered to include a secure hash "
"``digestname=urlsafe_b64encode_nopad(digest)`` (urlsafe base64 encoding with "
"no trailing = characters) as the second column instead of an md5sum.  All "
"possible entries are hashed, including any generated files such as .pyc "
"files, but not RECORD which cannot contain its own hash. For example::"
msgstr ""
"Os arquivos wheels incluem um RECORD estendido que permite assinaturas "
"digitais. O RECORD da PEP 376 foi alterado para incluir um hash seguro "
"``digestname=urlsafe_b64encode_nopad(digest)`` (codificação base64 de "
"urlsafe sem caracteres ao final =) como a segunda coluna em vez de um "
"md5sum. Todas as entradas possíveis são hash, incluindo quaisquer arquivos "
"gerados, como arquivos .pyc, mas não RECORD, que não pode conter seu próprio "
"hash. Por exemplo::"

#: ../source/specifications/binary-distribution-format.rst:317
msgid ""
"The signature file(s) RECORD.jws and RECORD.p7s are not mentioned in RECORD "
"at all since they can only be added after RECORD is generated. Every other "
"file in the archive must have a correct hash in RECORD or the installation "
"will fail."
msgstr ""
"O(s) arquivo(s) de assinatura RECORD.jws e RECORD.p7s não são mencionados em "
"RECORD, pois eles só podem ser adicionados após RECORD ser gerado. Todos os "
"outros arquivos no arquivo devem ter um hash correto em RECORD ou a "
"instalação falhará."

#: ../source/specifications/binary-distribution-format.rst:322
#, fuzzy
msgid ""
"If JSON web signatures are used, one or more JSON Web Signature JSON "
"Serialization (JWS-JS) signatures is stored in a file RECORD.jws adjacent to "
"RECORD.  JWS is used to sign RECORD by including the SHA-256 hash of RECORD "
"as the signature's JSON payload:"
msgstr ""
"Se assinaturas da web JSON forem usadas, uma ou mais assinaturas JSON Web "
"Signature JSON Serialization (JWS-JS) serão armazenadas em um arquivo RECORD."
"jws adjacente a RECORD. JWS é usado para assinar RECORD incluindo o hash "
"SHA-256 de RECORD como a carga JSON da assinatura::"

#: ../source/specifications/binary-distribution-format.rst:331
msgid "(The hash value is the same format used in RECORD.)"
msgstr "(O valor hash é o mesmo formato usado em RECORD.)"

#: ../source/specifications/binary-distribution-format.rst:333
msgid ""
"If RECORD.p7s is used, it must contain a detached S/MIME format signature of "
"RECORD."
msgstr ""
"Se RECORD.p7s for usado, ele deve conter uma assinatura de formato S/MIME "
"separada de RECORD."

#: ../source/specifications/binary-distribution-format.rst:336
msgid ""
"A wheel installer is not required to understand digital signatures but MUST "
"verify the hashes in RECORD against the extracted file contents. When the "
"installer checks file hashes against RECORD, a separate signature checker "
"only needs to establish that RECORD matches the signature."
msgstr ""
"Um instalador de wheel não precisa entender as assinaturas digitais, mas "
"DEVE verificar os hashes em RECORD em relação ao conteúdo do arquivo "
"extraído. Quando o instalador verifica os hashes do arquivo em relação ao "
"RECORD, um verificador de assinatura separado só precisa estabelecer se "
"RECORD corresponde à assinatura."

#: ../source/specifications/binary-distribution-format.rst:341
msgid "See"
msgstr "Veja"

#: ../source/specifications/binary-distribution-format.rst:343
msgid "https://datatracker.ietf.org/doc/html/rfc7515"
msgstr "https://datatracker.ietf.org/doc/html/rfc7515"

#: ../source/specifications/binary-distribution-format.rst:344
msgid ""
"https://datatracker.ietf.org/doc/html/draft-jones-json-web-signature-json-"
"serialization-01"
msgstr ""
"https://datatracker.ietf.org/doc/html/draft-jones-json-web-signature-json-"
"serialization-01"

#: ../source/specifications/binary-distribution-format.rst:345
msgid "https://datatracker.ietf.org/doc/html/rfc7517"
msgstr "https://datatracker.ietf.org/doc/html/rfc7517"

#: ../source/specifications/binary-distribution-format.rst:346
msgid ""
"https://datatracker.ietf.org/doc/html/draft-jones-jose-json-private-key-01"
msgstr ""
"https://datatracker.ietf.org/doc/html/draft-jones-jose-json-private-key-01"

#: ../source/specifications/binary-distribution-format.rst:350
#: ../source/specifications/platform-compatibility-tags.rst:370
msgid "FAQ"
msgstr "FAQ"

#: ../source/specifications/binary-distribution-format.rst:354
msgid "Wheel defines a .data directory.  Should I put all my data there?"
msgstr "Wheel define um diretório .data. Devo colocar todos os meus dados lá?"

#: ../source/specifications/binary-distribution-format.rst:356
msgid ""
"This specification does not have an opinion on how you should organize your "
"code.  The .data directory is just a place for any files that are not "
"normally installed inside ``site-packages`` or on the PYTHONPATH. In other "
"words, you may continue to use ``pkgutil.get_data(package, resource)`` even "
"though *those* files will usually not be distributed in *wheel's* ``.data`` "
"directory."
msgstr ""
"Esta especificação não tem uma opinião sobre como você deve organizar seu "
"código. O diretório .data é apenas um lugar para quaisquer arquivos que não "
"são normalmente instalados dentro de ``site-packages`` ou no PYTHONPATH. Em "
"outras palavras, você pode continuar a usar ``pkgutil.get_data(package, "
"resource)`` ainda que *esses* arquivos normalmente não sejam distribuídos no "
"diretório ``.data`` do *wheel*."

#: ../source/specifications/binary-distribution-format.rst:365
msgid "Why does wheel include attached signatures?"
msgstr "Por que o wheel inclui assinaturas anexadas?"

#: ../source/specifications/binary-distribution-format.rst:367
msgid ""
"Attached signatures are more convenient than detached signatures because "
"they travel with the archive.  Since only the individual files are signed, "
"the archive can be recompressed without invalidating the signature or "
"individual files can be verified without having to download the whole "
"archive."
msgstr ""
"Assinaturas anexadas são mais convenientes do que assinaturas separadas "
"porque elas viajam com o arquivo. Uma vez que apenas os arquivos individuais "
"são assinados, o arquivo pode ser recompactado sem invalidar a assinatura ou "
"os arquivos individuais podem ser verificados sem ter que baixar todo o "
"arquivo."

#: ../source/specifications/binary-distribution-format.rst:375
msgid "Why does wheel allow JWS signatures?"
msgstr "Por que wheel permite assinaturas JWS?"

#: ../source/specifications/binary-distribution-format.rst:377
msgid ""
"The JOSE specifications of which JWS is a part are designed to be easy to "
"implement, a feature that is also one of wheel's primary design goals.  JWS "
"yields a useful, concise pure-Python implementation."
msgstr ""
"As especificações JOSE das quais o JWS faz parte foram projetadas para serem "
"fáceis de implementar, um recurso que também é um dos principais objetivos "
"do projeto da roda. O JWS produz uma implementação puro Python concisa e "
"útil."

#: ../source/specifications/binary-distribution-format.rst:383
msgid "Why does wheel also allow S/MIME signatures?"
msgstr "Por que wheel também permite assinaturas S/MIME?"

#: ../source/specifications/binary-distribution-format.rst:385
msgid ""
"S/MIME signatures are allowed for users who need or want to use existing "
"public key infrastructure with wheel."
msgstr ""
"Assinaturas S/MIME são permitidas para usuários que precisam ou querem usar "
"uma infraestrutura de chaves públicas existente com o wheel."

#: ../source/specifications/binary-distribution-format.rst:388
msgid ""
"Signed packages are only a basic building block in a secure package update "
"system.  Wheel only provides the building block."
msgstr ""
"Pacotes assinados são apenas um bloco de construção básico em um sistema de "
"atualização segura de pacotes. Wheel só fornece o bloco de construção."

#: ../source/specifications/binary-distribution-format.rst:393
msgid "What's the deal with \"purelib\" vs. \"platlib\"?"
msgstr "Qual é a diferença entre \"purelib\" e \"platlib\"?"

#: ../source/specifications/binary-distribution-format.rst:395
msgid ""
"Wheel preserves the \"purelib\" vs. \"platlib\" distinction, which is "
"significant on some platforms. For example, Fedora installs pure Python "
"packages to '/usr/lib/pythonX.Y/site-packages' and platform dependent "
"packages to '/usr/lib64/pythonX.Y/site-packages'."
msgstr ""
"O Wheel preserva a distinção \"purelib\" vs. \"platlib\", que é "
"significativa em algumas plataformas. Por exemplo, o Fedora instala pacotes "
"puro Python em '/usr/lib/pythonX.Y/site-packages' e pacotes dependentes de "
"plataforma em '/usr/lib64/pythonX.Y/site-packages'."

#: ../source/specifications/binary-distribution-format.rst:400
msgid ""
"A wheel with \"Root-Is-Purelib: false\" with all its files in ``{name}-"
"{version}.data/purelib`` is equivalent to a wheel with \"Root-Is-Purelib: "
"true\" with those same files in the root, and it is legal to have files in "
"both the \"purelib\" and \"platlib\" categories."
msgstr ""
"Um wheel com \"Root-Is-Purelib: false\" com todos os seus arquivos em "
"``{nome}-{versão}.data/purelib`` é equivalente a um wheel com \"Root-Is-"
"Purelib: true\" com os mesmos arquivos na raiz, e é válido ter arquivos nas "
"categorias \"purelib\" e \"platlib\"."

#: ../source/specifications/binary-distribution-format.rst:405
msgid ""
"In practice a wheel should have only one of \"purelib\" or \"platlib\" "
"depending on whether it is pure Python or not and those files should be at "
"the root with the appropriate setting given for \"Root-is-purelib\"."
msgstr ""
"Na prática, um wheel deve ter apenas um de \"purelib\" ou \"platlib\" "
"dependendo se é puro Python ou não e esses arquivos devem estar na raiz com "
"a configuração apropriada fornecida para \"Root-is-purelib\"."

#: ../source/specifications/binary-distribution-format.rst:413
msgid "Is it possible to import Python code directly from a wheel file?"
msgstr "É possível importar código Python diretamente de um arquivo wheel?"

#: ../source/specifications/binary-distribution-format.rst:415
msgid ""
"Technically, due to the combination of supporting installation via simple "
"extraction and using an archive format that is compatible with "
"``zipimport``, a subset of wheel files *do* support being placed directly on "
"``sys.path``. However, while this behaviour is a natural consequence of the "
"format design, actually relying on it is generally discouraged."
msgstr ""
"Tecnicamente, devido à combinação de suporte de instalação via extração "
"simples e usando um formato de arquivo compatível com ``zipimport``, um "
"subconjunto de arquivos wheel oferece suporte a ser colocado diretamente no "
"``sys.path``. No entanto, embora esse comportamento seja uma consequência "
"natural do design do formato, não é recomendável confiar nele."

#: ../source/specifications/binary-distribution-format.rst:421
msgid ""
"Firstly, wheel *is* designed primarily as a distribution format, so skipping "
"the installation step also means deliberately avoiding any reliance on "
"features that assume full installation (such as being able to use standard "
"tools like ``pip`` and ``virtualenv`` to capture and manage dependencies in "
"a way that can be properly tracked for auditing and security update "
"purposes, or integrating fully with the standard build machinery for C "
"extensions by publishing header files in the appropriate place)."
msgstr ""
"Em primeiro lugar, o wheel *é* projetado principalmente como um formato de "
"distribuição, então pular a etapa de instalação também significa evitar "
"deliberadamente qualquer dependência de recursos que pressupõem a instalação "
"completa (como ser capaz de usar ferramentas padrão como ``pip`` e "
"``virtualenv`` para capturar e gerenciar dependências de uma forma que "
"possam ser devidamente rastreadas para fins de auditoria e atualização de "
"segurança, ou integração completa com o maquinário de construção padrão para "
"extensões C, publicando arquivos de cabeçalho no local apropriado)."

#: ../source/specifications/binary-distribution-format.rst:430
msgid ""
"Secondly, while some Python software is written to support running directly "
"from a zip archive, it is still common for code to be written assuming it "
"has been fully installed. When that assumption is broken by trying to run "
"the software from a zip archive, the failures can often be obscure and hard "
"to diagnose (especially when they occur in third party libraries). The two "
"most common sources of problems with this are the fact that importing C "
"extensions from a zip archive is *not* supported by CPython (since doing so "
"is not supported directly by the dynamic loading machinery on any platform) "
"and that when running from a zip archive the ``__file__`` attribute no "
"longer refers to an ordinary filesystem path, but to a combination path that "
"includes both the location of the zip archive on the filesystem and the "
"relative path to the module inside the archive. Even when software correctly "
"uses the abstract resource APIs internally, interfacing with external "
"components may still require the availability of an actual on-disk file."
msgstr ""
"Em segundo lugar, embora alguns softwares Python sejam escritos para "
"suportar a execução direta de um arquivo zip, ainda é comum que o código "
"seja escrito assumindo que foi totalmente instalado. Quando essa suposição é "
"quebrada ao tentar executar o software a partir de um arquivo zip, as falhas "
"podem frequentemente ser obscuras e difíceis de diagnosticar (especialmente "
"quando ocorrem em bibliotecas de terceiros). As duas fontes mais comuns de "
"problemas com isso são o fato de que a importação de extensões C de um "
"arquivo zip *não* ser suportada pelo CPython (uma vez que fazer isso não é "
"suportado diretamente pela máquina de carregamento dinâmico em qualquer "
"plataforma) e que quando executando a partir de um arquivo zip, o atributo "
"``__file__`` não se refere mais a um caminho de sistema de arquivos comum, "
"mas a um caminho de combinação que inclui tanto a localização do arquivo zip "
"no sistema de arquivos quanto o caminho relativo para o módulo dentro do "
"arquivo. Mesmo quando o software usa corretamente as APIs de recursos "
"abstratos internamente, a interface com componentes externos ainda pode "
"exigir a disponibilidade de um arquivo real no disco."

#: ../source/specifications/binary-distribution-format.rst:447
msgid ""
"Like metaclasses, monkeypatching and metapath importers, if you're not "
"already sure you need to take advantage of this feature, you almost "
"certainly don't need it. If you *do* decide to use it anyway, be aware that "
"many projects will require a failure to be reproduced with a fully installed "
"package before accepting it as a genuine bug."
msgstr ""
"Como metaclasses, *monkeypatching* e importadores de metacaminho, se você "
"ainda não tem certeza de que precisa tirar proveito desse recurso, é quase "
"certo que não precisa dele. Se você decidir usá-lo de qualquer maneira, "
"esteja ciente de que muitos projetos exigirão que uma falha seja reproduzida "
"com um pacote totalmente instalado antes de aceitá-lo como um bug genuíno."

#: ../source/specifications/binary-distribution-format.rst:455
#: ../source/specifications/core-metadata.rst:934
#: ../source/specifications/dependency-groups.rst:250
#: ../source/specifications/dependency-specifiers.rst:516
#: ../source/specifications/direct-url-data-structure.rst:292
#: ../source/specifications/direct-url.rst:67
#: ../source/specifications/entry-points.rst:164
#: ../source/specifications/externally-managed-environments.rst:472
#: ../source/specifications/inline-script-metadata.rst:213
#: ../source/specifications/name-normalization.rst:50
#: ../source/specifications/platform-compatibility-tags.rst:434
#: ../source/specifications/pylock-toml.rst:826
#: ../source/specifications/pyproject-toml.rst:537
#: ../source/specifications/recording-installed-packages.rst:278
#: ../source/specifications/simple-repository-api.rst:1012
#: ../source/specifications/source-distribution-format.rst:153
#: ../source/specifications/version-specifiers.rst:1269
#: ../source/specifications/virtual-environments.rst:54
msgid "History"
msgstr "Histórico"

#: ../source/specifications/binary-distribution-format.rst:457
msgid "February 2013: This specification was approved through :pep:`427`."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:458
#, fuzzy
msgid ""
"February 2021: The rules on escaping in wheel filenames were revised, to "
"bring them into line with what popular tools actually do."
msgstr ""
"As regras sobre como escapar em nomes de arquivos wheel foram revisadas, "
"para alinhá-las com o que as ferramentas populares realmente fazem "
"(fevereiro de 2021)."

#: ../source/specifications/binary-distribution-format.rst:460
msgid ""
"December 2024: Clarified that the ``scripts`` folder should only contain "
"regular files (the expected behaviour of consuming tools when encountering "
"symlinks or subdirectories in this folder is not formally defined, and hence "
"may vary between tools)."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:464
#: ../source/specifications/recording-installed-packages.rst:288
#, fuzzy
#| msgid ""
#| "This document describes the dependency specifiers format as originally "
#| "specified in :pep:`508`."
msgid ""
"December 2024: The :file:`.dist-info/licenses/` directory was specified "
"through :pep:`639`."
msgstr ""
"Este documento descreve o formato dos especificadores de dependência "
"conforme originalmente especificado na :pep:`508`."

#: ../source/specifications/binary-distribution-format.rst:466
msgid ""
"January 2025: Clarified that name and version needs to be normalized for ``."
"dist-info`` and ``.data`` directories."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:471
msgid "Appendix"
msgstr "Apêndice"

#: ../source/specifications/binary-distribution-format.rst:473
msgid "Example urlsafe-base64-nopad implementation::"
msgstr "Exemplo de implementação de urlsafe-base64-nopad::"

#: ../source/specifications/build-details/index.rst:7
#: ../source/specifications/build-details/index.rst:41
msgid "v1.0"
msgstr ""

#: ../source/specifications/build-details/index.rst:5
msgid ":file:`build-details.json`"
msgstr ""

#: ../source/specifications/build-details/index.rst:13
msgid ""
"The ``build-details.json`` file is a standardized file format that provides "
"build-specfic information of a Python installation, such as its version, "
"extension ABI details, and other information that is specific to that "
"particular build of Python."
msgstr ""

#: ../source/specifications/build-details/index.rst:18
msgid ""
"Starting from Python 3.14, a ``build-details.json`` file is installed in the "
"platform-independent standard library directory (``stdlib``, e.g. ``/usr/lib/"
"python3.14/build-details.json``)."
msgstr ""

#: ../source/specifications/build-details/index.rst:22
msgid ""
"Please refer to the :ref:`latest version <build-details-v1.0>` for its "
"specification."
msgstr ""

#: ../source/specifications/build-details/index.rst:28
#: ../source/specifications/build-details/v1.0.rst:16
#: ../source/specifications/inline-script-metadata.rst:100
#: ../source/specifications/pylock-toml.rst:722
msgid "Example"
msgstr "Exemplo"

#: ../source/specifications/build-details/index.rst:35
#, fuzzy
#| msgid "Changes"
msgid "Changelog"
msgstr "Alterações"

#: ../source/specifications/build-details/index.rst:45
#: ../source/specifications/build-details/v1.0.rst:9
#: ../source/specifications/dependency-groups.rst:20
#: ../source/specifications/dependency-specifiers.rst:26
#: ../source/specifications/direct-url-data-structure.rst:19
#: ../source/specifications/direct-url.rst:15
#: ../source/specifications/file-yanking.rst:20
#: ../source/specifications/index-hosted-attestations.rst:17
#: ../source/specifications/inline-script-metadata.rst:13
#: ../source/specifications/license-expression.rst:12
#: ../source/specifications/project-status-markers.rst:20
msgid "Specification"
msgstr "Especificação"

#: ../source/specifications/build-details/index.rst:46
msgid ":ref:`build-details-v1.0`"
msgstr ""

#: ../source/specifications/build-details/index.rst:48
msgid "Schema"
msgstr ""

#: ../source/specifications/build-details/index.rst:49
#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"https://packaging.python.org/en/latest/specifications/schemas/build-details-"
"v1.0.schema.json"
msgstr ""

#: ../source/specifications/build-details/index.rst:52
msgid "Initial version, introduced by :pep:`739`."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:5
msgid "``build-details.json`` v1.0"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"*build-details.json — a static description file with build details of Python "
"installations*"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "type"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "Project"
msgid "*object*"
msgstr "Projeto"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "properties"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**schema\\_version**"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "Semantic versioning"
msgid "Schema version."
msgstr "Versionamento semântico"

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This is a string following the format ``<MAJOR>.<MINOR>``, where ``<MAJOR>`` "
"and ``<MINOR>`` are unpaded numbers and represent the **major** and "
"**minor** components of the version. Versions may be arithmetically compared "
"by intrepreting the version string as a decimal number."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"For this specification version, this value is constant and **MUST** be "
"``1.0``."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"Future versions of this schema **MUST** use a higher version number. Future "
"versions of this schema **MUST NOT** use the same **major** version "
"component as other schema version unless its specification is deemed "
"backwards-compatible with them — it can't change, or extend, any parts of "
"the current specification in such a way as the semantics of the interpreted "
"data differ, or that data valid under the new specification is invalid under "
"the older specification, with the exception of additional properties (errors "
"caused by ``additionalProperties``)."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "*string*"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "enscons"
msgid "const"
msgstr "enscons"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "1.0"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**base\\_prefix**"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Base prefix of the Python installation."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"Either an absolute path, or a path relative to directory where this file is "
"contained."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "Examples"
msgid "examples"
msgstr "Exemplos"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "/usr"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "../.."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "base\\_interpreter"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "The path to the Python interprer of the base installation."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Either an absolute path, or a path relative to ``base_prefix``."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This field **MUST** be present if the installation provides an interpreter "
"executable."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "/usr/bin/python"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "python"
msgid "bin/python"
msgstr "python"

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "platform tag"
msgid "**platform**"
msgstr "platform tag"

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "platform tag"
msgid "System platform string."
msgstr "platform tag"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "This field **SHOULD** be equivalent to ``sysconfig.get_platform()``."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "linux_x86_64"
msgid "linux-x86\\_64"
msgstr "linux_x86_64"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**language**"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Object containing details related to the Python language specification."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "version"
msgid "**version**"
msgstr "version"

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"String representation the Python language version — a version string "
"consisting only of the *major* and *minor* components."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This field **SHOULD** be equivalent to ``sysconfig.get_python_version()``."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "3.14"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "version"
msgid "version\\_info"
msgstr "version"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Object in the format of :py:data:`sys.version_info`."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "This section **SHOULD** be equivalent to :py:data:`sys.version_info`."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "major"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "3"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "minor"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "14"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "micro"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "1"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "Release"
msgid "releaselevel"
msgstr "Lançamento"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "final"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "Mercurial"
msgid "serial"
msgstr "Mercurial"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "0"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**major**"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "**Numbers**"
msgid "*number*"
msgstr "**Números**"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**minor**"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**micro**"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**releaselevel**"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "enum"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "alpha, beta, candidate, final"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**serial**"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "Additional notes"
msgid "additionalProperties"
msgstr "Notas adicionais"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "False"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
msgid "**implementation**"
msgstr "Tipos de documentação"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Object containing details related to Python implementation."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This section **SHOULD** be equivalent to :py:data:`sys.implementation`. It "
"follows specification defined in PEP 421, meaning that on top of the "
"required keys, implementation-specific keys can also exist, but must be "
"prefixed with an underscore."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "name"
msgid "**name**"
msgstr "name"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Lower-case name of the Python implementation."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "python"
msgid "cpython"
msgstr "python"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "pypy"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"Object in the format of :py:data:`sys.version_info`, containing the "
"implementation version."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "7"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "16"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "True"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "abi tag"
msgid "abi"
msgstr "abi tag"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Object containing details related to ABI."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "**Headings**"
msgid "**flags**"
msgstr "**Títulos**"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Build configuration flags, used to calculate the extension suffix."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"The flags **MUST** be defined in the order they appear on the extension "
"suffix."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "*array*"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "t"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "d"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "extension\\_suffix"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"Suffix used for extensions built against the current implementation version."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This field **MUST** be present if the Python implementation supports "
"extensions, otherwise this entry will be missing."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ".cpython-314-x86\\_64-linux-gnu.so"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "stable\\_abi\\_suffix"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Suffix used for extensions built against the stable ABI."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This field **MUST** be present if the Python implementation has a stable ABI "
"extension suffix, otherwise this entry will be missing."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ".abi3.so"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "suffixes"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Valid module suffixes grouped by type."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This section **MUST** be present if the Python installation supports "
"importing external files, and it **SHOULD** be equivalent to the ``importlib."
"machinery.*_SUFFIXES`` attributes."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"Additionally, if a Python implementation provides extension kinds other than "
"the ones listed on ``importlib.machinery`` module, they **MAY** add a sub-"
"section for them."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "source"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ".py"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "bytecode"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ".pyc"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "optimized_bytecode"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "debug_bytecode"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "Versions"
msgid "extensions"
msgstr "Versões"

#: ../source/specifications/build-details/v1.0.rst:12
msgid ".cpython-313-x86\\_64-linux-gnu.so"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ".so"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "python"
msgid "libpython"
msgstr "python"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Object containing details related to the ``libpython`` library."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This section **MUST** by present if Python installation provides a "
"``libpython`` library, otherwise this section will be missing."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "``dynamic``"
msgid "dynamic"
msgstr "``dynamic``"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "The path to the dynamic ``libpython`` library."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This field **MUST** be present if the Python installation provides a dynamic "
"``libpython`` library, otherwise this entry will be missing."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "/usr/lib/libpython3.14.so.1.0"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "lib/libpython3.14.so.1.0"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "dynamic\\_stableabi"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "The path to the dynamic ``libpython`` library for the stable ABI."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This field **MUST** be present if the Python installation provides a dynamic "
"``libpython`` library targeting the Stable ABI, otherwise this entry will be "
"missing."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "If this key is present ``dynamic`` **MUST** also be set."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "/usr/lib/libpython3.so"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "lib/libpython3.so"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "static"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "The path to the static ``libpython`` library."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This field **MUST** be present if the Python installation provides a static "
"``libpython`` library, otherwise this entry will be missing."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "/usr/lib/python3.14/config-3.14-x86\\_64-linux-gnu/libpython3.14.a"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "lib/python3.14/config-3.14-x86\\_64-linux-gnu/libpython3.14.a"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "Building binary extensions"
msgid "link\\_extensions"
msgstr "Construindo extensões binárias"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Should extensions built against a dynamic ``libpython`` link to it?"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "*boolean*"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "c\\_api"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Object containing details related to the Python C API."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This section **MUST** be present if the Python implementation provides a C "
"API, otherwise this section will be missing."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "**Numbers**"
msgid "**headers**"
msgstr "**Números**"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "The path to the C API headers."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "/usr/include/python3.14"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "include/python3.14"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "pkgconfig\\_path"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "The path to the pkg-config definition files."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This field **MUST** be present if the Python implementation provides pkg-"
"config definition files, otherwise this section will be missing."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "/usr/lib/pkgconfig"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid "lib/pkgconfig"
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
#, fuzzy
#| msgid "Arbitrary equality"
msgid "arbitrary\\_data"
msgstr "Igualdade arbitrária"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Object containing extra arbitrary data."
msgstr ""

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This is meant to be used as an escape-hatch, to include any relevant data "
"that is not covered by this specification. Implementations may choose what "
"data to provide in this section."
msgstr ""

#: ../source/specifications/core-metadata.rst:7
msgid "Core metadata specifications"
msgstr "Especificações de metadados principais"

#: ../source/specifications/core-metadata.rst:9
msgid "This page describes version 2.4, approved in August 2024."
msgstr ""

#: ../source/specifications/core-metadata.rst:11
msgid ""
"Fields defined in the following specification should be considered valid, "
"complete and not subject to change. The required fields are:"
msgstr ""
"Os campos definidos nas especificações a seguir devem ser considerados "
"válidos, completos e não sujeitos a alterações. Os campos obrigatórios são:"

#: ../source/specifications/core-metadata.rst:14
msgid "``Metadata-Version``"
msgstr ""

#: ../source/specifications/core-metadata.rst:15
msgid "``Name``"
msgstr "``Name``"

#: ../source/specifications/core-metadata.rst:16
msgid "``Version``"
msgstr ""

#: ../source/specifications/core-metadata.rst:18
msgid "All the other fields are optional."
msgstr "Todos os outros campos são opcionais."

#: ../source/specifications/core-metadata.rst:20
msgid ""
"The standard file format for metadata (including in :doc:`wheels <binary-"
"distribution-format>` and :doc:`installed projects <recording-installed-"
"packages>`) is based on the format of email headers. However, email formats "
"have been revised several times, and exactly which email RFC applies to "
"packaging metadata is not specified. In the absence of a precise definition, "
"the practical standard is set by what the standard library :mod:`python:"
"email.parser` module can parse using the :data:`~.python:email.policy."
"compat32` policy."
msgstr ""
"O formato de arquivo padrão para metadados (incluindo em :doc:`wheels "
"<binary-distribution-format>` e :doc:`projetos instalados <recording-"
"installed-packages>`) é baseado no formato de cabeçalhos de e-mail. No "
"entanto, os formatos de e-mail foram revisados várias vezes e não é "
"especificado exatamente qual RFC de e-mail se aplica aos metadados do "
"pacote. Na ausência de uma definição precisa, o padrão prático é definido "
"pelo que o módulo da biblioteca padrão :mod:`python:email.parser` pode "
"analisar usando a política :data:`~.python:email.policy.compat32`."

#: ../source/specifications/core-metadata.rst:29
msgid ""
"Whenever metadata is serialised to a byte stream (for example, to save to a "
"file), strings must be serialised using the UTF-8 encoding."
msgstr ""
"Sempre que os metadados são serializados para um fluxo de bytes (por "
"exemplo, para salvar em um arquivo), as strings devem ser serializadas "
"usando a codificação UTF-8."

#: ../source/specifications/core-metadata.rst:32
msgid ""
"Although :pep:`566` defined a way to transform metadata into a JSON-"
"compatible dictionary, this is not yet used as a standard interchange "
"format. The need for tools to work with years worth of existing packages "
"makes it difficult to shift to a new format."
msgstr ""
"Embora a :pep:`566` tenha definido uma maneira de transformar metadados em "
"um dicionário compatível com JSON, isso ainda não é usado como um formato de "
"intercâmbio padrão. A necessidade de ferramentas para trabalhar com anos de "
"pacotes existentes torna difícil mudar para um novo formato."

#: ../source/specifications/core-metadata.rst:37
msgid ""
"*Interpreting old metadata:* In :pep:`566`, the version specifier field "
"format specification was relaxed to accept the syntax used by popular "
"publishing tools (namely to remove the requirement that version specifiers "
"must be surrounded by parentheses). Metadata consumers may want to use the "
"more relaxed formatting rules even for metadata files that are nominally "
"less than version 2.1."
msgstr ""
"*Interpretando metadados antigos:* Na :pep:`566`, a especificação do formato "
"do campo do especificador de versão foi relaxada para aceitar a sintaxe "
"usada por ferramentas de publicação populares (nomeadamente para remover o "
"requisito de que os especificadores de versão devem estar entre parênteses). "
"Os consumidores de metadados podem querer usar regras de formatação mais "
"relaxadas, mesmo para arquivos de metadados que são nominalmente inferiores "
"à versão 2.1."

#: ../source/specifications/core-metadata.rst:48
msgid "Metadata-Version"
msgstr "Metadata-Version"

#: ../source/specifications/core-metadata.rst:52
#, fuzzy
#| msgid ""
#| "Version of the file format; legal values are \"1.0\", \"1.1\", \"1.2\", "
#| "\"2.1\", \"2.2\", and \"2.3\"."
msgid ""
"Version of the file format; legal values are \"1.0\", \"1.1\", \"1.2\", "
"\"2.1\", \"2.2\", \"2.3\", and \"2.4\"."
msgstr ""
"Versão do formato de arquivo; valores válidos são \"1.0\", \"1.1\", \"1.2\", "
"\"2.1\", \"2.2\" e \"2.3\"."

#: ../source/specifications/core-metadata.rst:55
msgid ""
"Automated tools consuming metadata SHOULD warn if ``metadata_version`` is "
"greater than the highest version they support, and MUST fail if "
"``metadata_version`` has a greater major version than the highest version "
"they support (as described in the :ref:`Version specifier specification "
"<version-specifiers>`, the major version is the value before the first dot)."
msgstr ""
"Ferramentas automatizadas que consomem metadados DEVEM avisar se "
"``metadata_version`` é maior que a versão mais alta à qual oferecem suporte, "
"e DEVEM falhar se ``metadata_version`` tem uma versão maior do que a versão "
"mais alta à qual oferecem suporte (como descrito na :ref:`especificação de "
"especificadores de versão <version-specifiers>`, a versão principal é o "
"valor antes do primeiro ponto)."

#: ../source/specifications/core-metadata.rst:62
msgid ""
"For broader compatibility, build tools MAY choose to produce distribution "
"metadata using the lowest metadata version that includes all of the needed "
"fields."
msgstr ""
"Para uma compatibilidade mais ampla, as ferramentas de construção PODEM "
"escolher produzir metadados de distribuição usando a versão de metadados "
"mais baixa que inclui todos os campos necessários."

#: ../source/specifications/core-metadata.rst:66
#: ../source/specifications/core-metadata.rst:84
#: ../source/specifications/core-metadata.rst:101
#: ../source/specifications/core-metadata.rst:176
#: ../source/specifications/core-metadata.rst:191
#: ../source/specifications/core-metadata.rst:229
#: ../source/specifications/core-metadata.rst:301
#: ../source/specifications/core-metadata.rst:305
#: ../source/specifications/core-metadata.rst:309
#: ../source/specifications/core-metadata.rst:313
#: ../source/specifications/core-metadata.rst:345
#: ../source/specifications/core-metadata.rst:367
#: ../source/specifications/core-metadata.rst:385
#: ../source/specifications/core-metadata.rst:410
#: ../source/specifications/core-metadata.rst:432
#: ../source/specifications/core-metadata.rst:652
#: ../source/specifications/core-metadata.rst:687
#: ../source/specifications/core-metadata.rst:697
#: ../source/specifications/core-metadata.rst:831
#: ../source/specifications/core-metadata.rst:928
msgid "Example::"
msgstr "Exemplo::"

#: ../source/specifications/core-metadata.rst:74
msgid "Name"
msgstr "Nome"

#: ../source/specifications/core-metadata.rst:77
#, fuzzy
msgid "Added restrictions on format from the :ref:`name format <name-format>`."
msgstr "Adicionadas restrições adicionais ao formato da :pep:`508`"

#: ../source/specifications/core-metadata.rst:80
msgid ""
"The name of the distribution. The name field is the primary identifier for a "
"distribution. It must conform to the :ref:`name format specification <name-"
"format>`."
msgstr ""

#: ../source/specifications/core-metadata.rst:88
msgid ""
"For comparison purposes, the names should be :ref:`normalized <name-"
"normalization>` before comparing."
msgstr ""
"Para propósitos de comparação, os nomes devem ser :ref:`normalizados <name-"
"normalization>` antes da comparação."

#: ../source/specifications/core-metadata.rst:93
msgid "Version"
msgstr "Versão"

#: ../source/specifications/core-metadata.rst:97
msgid ""
"A string containing the distribution's version number.  This field  must be "
"in the format specified in the :ref:`Version specifier specification "
"<version-specifiers>`."
msgstr ""
"Uma string contendo o número da versão da distribuição. Este campo deve "
"estar no formato especificado na :ref:`especificação de especificadores de "
"versão <version-specifiers>`."

#: ../source/specifications/core-metadata.rst:109
msgid "Dynamic (multiple use)"
msgstr "Dynamic (vários usos)"

#: ../source/specifications/core-metadata.rst:113
msgid ""
"A string containing the name of another core metadata field. The field names "
"``Name``, ``Version``, and ``Metadata-Version`` may not be specified in this "
"field."
msgstr ""
"Uma string contendo o nome de outro campo de metadados principal. Os nomes "
"dos campos ``Name``, ``Version`` e ``Metadata-Version`` não podem ser "
"especificados neste campo."

#: ../source/specifications/core-metadata.rst:117
msgid ""
"When found in the metadata of a source distribution, the following rules "
"apply:"
msgstr ""
"Quando encontrados nos metadados de uma distribuição fonte, as seguintes "
"regras se aplicam:"

#: ../source/specifications/core-metadata.rst:120
msgid ""
"If a field is *not* marked as ``Dynamic``, then the value of the field in "
"any wheel built from the sdist MUST match the value in the sdist. If the "
"field is not in the sdist, and not marked as ``Dynamic``, then it MUST NOT "
"be present in the wheel."
msgstr ""
"Se um campo *não* estiver marcado como ``Dynamic``, então o valor do campo "
"em qualquer wheel construído a partir do sdist DEVE corresponder ao valor do "
"sdist. Se o campo não estiver no sdist e não estiver marcado como "
"``Dynamic``, ele NÃO DEVE estar presente no wheel."

#: ../source/specifications/core-metadata.rst:124
msgid ""
"If a field is marked as ``Dynamic``, it may contain any valid value in a "
"wheel built from the sdist (including not being present at all)."
msgstr ""
"Se um campo for marcado como ``Dynamic``, ele pode conter qualquer valor "
"válido em um wheel construído a partir do sdist (incluindo não estar "
"presente)."

#: ../source/specifications/core-metadata.rst:127
msgid ""
"If the sdist metadata version is older than version 2.2, then all fields "
"should be treated as if they were specified with ``Dynamic`` (i.e. there are "
"no special restrictions on the metadata of wheels built from the sdist)."
msgstr ""
"Se a versão dos metadados sdist for anterior à versão 2.2, todos os campos "
"devem ser tratados como se tivessem sido especificados com ``Dynamic`` (ou "
"seja, não há restrições especiais sobre os metadados dos wheels construídos "
"a partir do sdist)."

#: ../source/specifications/core-metadata.rst:131
msgid ""
"In any context other than a source distribution, ``Dynamic`` is for "
"information only, and indicates that the field value was calculated at wheel "
"build time, and may not be the same as the value in the sdist or in other "
"wheels for the project."
msgstr ""
"Em qualquer contexto que não seja uma distribuição fonte, ``Dynamic`` é "
"apenas para informação e indica que o valor do campo foi calculado no tempo "
"de construção do wheel, e pode não ser o mesmo que o valor no sdist ou em "
"outros wheels para o projeto."

#: ../source/specifications/core-metadata.rst:136
msgid ""
"Note in particular that if you have obtained a prebuilt wheel, you cannot "
"assume that a field which is not marked as ``Dynamic`` will have the same "
"value in other wheels, as some wheels are not built directly from the sdist, "
"but are modified from existing wheels (the ``auditwheel`` tool does this, "
"for example, and it's commonly used when building wheels for PyPI). Such "
"modifications *could* include changing metadata (even non-dynamic "
"metadata).  Similarly, if you have a sdist and a wheel which you didn't "
"build from that sdist, you cannot assume that the wheel's metadata matches "
"that of the sdist, even if the field is not marked as ``Dynamic``."
msgstr ""

#: ../source/specifications/core-metadata.rst:146
msgid ""
"Full details of the semantics of ``Dynamic`` are described in :pep:`643`."
msgstr ""
"Detalhes completos da semântica de ``Dynamic`` são descritos na :pep:`643`."

#: ../source/specifications/core-metadata.rst:151
msgid "Platform (multiple use)"
msgstr "Platform (vários usos)"

#: ../source/specifications/core-metadata.rst:155
msgid ""
"A Platform specification describing an operating system supported by the "
"distribution which is not listed in the \"Operating System\" Trove "
"classifiers. See \"Classifier\" below."
msgstr ""
"Uma especificação da plataforma que descreve um sistema operacional "
"suportado pela distribuição que não está listado nos classificadores Trove "
"de \"Operating System\". Veja \"Classifier\" abaixo."

#: ../source/specifications/core-metadata.rst:159
#: ../source/specifications/core-metadata.rst:465
#: ../source/specifications/core-metadata.rst:486
#: ../source/specifications/core-metadata.rst:509
#: ../source/specifications/core-metadata.rst:538
#: ../source/specifications/core-metadata.rst:579
#: ../source/specifications/core-metadata.rst:635
#: ../source/specifications/core-metadata.rst:772
#: ../source/specifications/core-metadata.rst:802
#: ../source/specifications/core-metadata.rst:882
#: ../source/specifications/core-metadata.rst:904
msgid "Examples::"
msgstr "Exemplos::"

#: ../source/specifications/core-metadata.rst:167
msgid "Supported-Platform (multiple use)"
msgstr "Supported-Platform (vários usos)"

#: ../source/specifications/core-metadata.rst:171
msgid ""
"Binary distributions containing a PKG-INFO file will use the Supported-"
"Platform field in their metadata to specify the OS and CPU for which the "
"binary distribution was compiled.  The semantics of the Supported-Platform "
"field are not specified in this PEP."
msgstr ""
"As distribuições binárias contendo um arquivo PKG-INFO usarão o campo "
"Supported-Platform em seus metadados para especificar o sistema operacional "
"e a CPU para os quais a distribuição binária foi compilada. A semântica do "
"campo Supported-Platform não é especificada nesta PEP."

#: ../source/specifications/core-metadata.rst:185
msgid "Summary"
msgstr "Summary"

#: ../source/specifications/core-metadata.rst:189
msgid "A one-line summary of what the distribution does."
msgstr "Um resumo de uma linha do que a distribuição faz."

#: ../source/specifications/core-metadata.rst:209
msgid "This field may be specified in the message body instead."
msgstr "Este campo pode ser especificado no corpo da mensagem."

#: ../source/specifications/core-metadata.rst:212
msgid ""
"A longer description of the distribution that can run to several "
"paragraphs.  Software that deals with metadata should not assume any maximum "
"size for this field, though people shouldn't include their instruction "
"manual as the description."
msgstr ""
"Uma descrição mais longa da distribuição que pode ter vários parágrafos. "
"Software que lida com metadados não deve presumir nenhum tamanho máximo para "
"este campo, embora as pessoas não devam incluir seu manual de instruções "
"como a descrição."

#: ../source/specifications/core-metadata.rst:217
msgid ""
"The contents of this field can be written using reStructuredText markup "
"[1]_.  For programs that work with the metadata, supporting markup is "
"optional; programs can also display the contents of the field as-is.  This "
"means that authors should be conservative in the markup they use."
msgstr ""
"O conteúdo deste campo pode ser escrito usando a marcação reStructuredText "
"[1]_. Para programas que funcionam com metadados, o suporte à marcação é "
"opcional; os programas também podem exibir o conteúdo do campo como está. "
"Isso significa que os autores devem ser conservadores na marcação que usam."

#: ../source/specifications/core-metadata.rst:223
msgid ""
"To support empty lines and lines with indentation with respect to the RFC "
"822 format, any CRLF character has to be suffixed by 7 spaces followed by a "
"pipe (\"|\") char. As a result, the Description field is encoded into a "
"folded field that can be interpreted by RFC822 parser [2]_."
msgstr ""
"Para oferecer suporte a linhas vazias e linhas com indentação em relação ao "
"formato do RFC 822, qualquer caractere CRLF deve ser sufixado por 7 espaços "
"seguidos por um caractere de encadeamento ou pipe (\"|\"). Como resultado, o "
"campo Description é codificado em um campo dobrado que pode ser interpretado "
"pelo analisador RFC822 [2]_."

#: ../source/specifications/core-metadata.rst:240
msgid ""
"This encoding implies that any occurrences of a CRLF followed by 7 spaces "
"and a pipe char have to be replaced by a single CRLF when the field is "
"unfolded using a RFC822 reader."
msgstr ""
"Esta codificação implica que quaisquer ocorrências de um CRLF seguido por 7 "
"espaços e um caractere pipe devem ser substituídos por um único CRLF quando "
"o campo é desdobrado usando um leitor de RFC822."

#: ../source/specifications/core-metadata.rst:244
msgid ""
"Alternatively, the distribution's description may instead be provided in the "
"message body (i.e., after a completely blank line following the headers, "
"with no indentation or other special formatting necessary)."
msgstr ""
"Alternativamente, a descrição da distribuição pode ser fornecida no corpo da "
"mensagem (ou seja, após uma linha completamente em branco após os "
"cabeçalhos, sem recuo ou outra formatação especial necessária)."

#: ../source/specifications/core-metadata.rst:253
msgid "Description-Content-Type"
msgstr "Description-Content-Type"

#: ../source/specifications/core-metadata.rst:257
msgid ""
"A string stating the markup syntax (if any) used in the distribution's "
"description, so that tools can intelligently render the description."
msgstr ""
"Uma string informando a sintaxe de marcação (se houver) usada na descrição "
"da distribuição, para que as ferramentas possam renderizar a descrição de "
"maneira inteligente."

#: ../source/specifications/core-metadata.rst:260
msgid ""
"Historically, PyPI supported descriptions in plain text and "
"`reStructuredText (reST) <https://docutils.sourceforge.io/docs/ref/rst/"
"restructuredtext.html>`_, and could render reST into HTML. However, it is "
"common for distribution authors to write the description in `Markdown "
"<https://daringfireball.net/projects/markdown/>`_ (:rfc:`7763`) as many code "
"hosting sites render Markdown READMEs, and authors would reuse the file for "
"the description. PyPI didn't recognize the format and so could not render "
"the description correctly. This resulted in many packages on PyPI with "
"poorly-rendered descriptions when Markdown is left as plain text, or worse, "
"was attempted to be rendered as reST. This field allows the distribution "
"author to specify the format of their description, opening up the "
"possibility for PyPI and other tools to be able to render Markdown and other "
"formats."
msgstr ""
"Historicamente, o PyPI oferecia suporte a descrições em texto simples e "
"`reStructuredText (reST) <http://docutils.sourceforge.net/docs/ref/rst/"
"restructuredtext.html>`_, e poderia renderizar reST em HTML. No entanto, é "
"comum que os autores da distribuição escrevam a descrição em `Markdown "
"<https://daringfireball.net/projects/markdown/>`_ (:rfc:`7763`) visto que "
"tantos sites de hospedagem de código renderizam READMEs de Markdown, e os "
"autores reutilizariam o arquivo para a descrição. O PyPI não reconhecia o "
"formato e, portanto, não conseguia processar a descrição corretamente. Isso "
"resultava em muitos pacotes no PyPI com descrições mal renderizadas quando "
"Markdown é deixado como texto simples, ou pior, era tentado ser renderizado "
"como reST. Este campo permite que o autor da distribuição especifique o "
"formato de sua descrição, abrindo a possibilidade para PyPI e outras "
"ferramentas serem capazes de renderizar Markdown e outros formatos."

#: ../source/specifications/core-metadata.rst:273
msgid ""
"The format of this field is the same as the ``Content-Type`` header in HTTP "
"(i.e.: `RFC 1341 <https://www.w3.org/Protocols/rfc1341/4_Content-Type."
"html>`_). Briefly, this means that it has a ``type/subtype`` part and then "
"it can optionally have a number of parameters:"
msgstr ""
"O formato deste campo é o mesmo do cabeçalho ``Content-Type`` em HTTP (ou "
"seja: `RFC 1341 <https://www.w3.org/Protocols/rfc1341/4_Content-Type."
"html>`_). Resumidamente, isso significa que ele tem uma parte do ``tipo/"
"subtipo`` e então pode opcionalmente ter uma série de parâmetros:"

#: ../source/specifications/core-metadata.rst:279
msgid "Format::"
msgstr "Formato::"

#: ../source/specifications/core-metadata.rst:283
msgid "The ``type/subtype`` part has only a few legal values:"
msgstr "A parta ``tipo/subtipo`` tem apenas alguns poucos valores válidos:"

#: ../source/specifications/core-metadata.rst:285
msgid "``text/plain``"
msgstr "``text/plain``"

#: ../source/specifications/core-metadata.rst:286
msgid "``text/x-rst``"
msgstr "``text/x-rst``"

#: ../source/specifications/core-metadata.rst:287
msgid "``text/markdown``"
msgstr "``text/markdown``"

#: ../source/specifications/core-metadata.rst:289
msgid ""
"The ``charset`` parameter can be used to specify the character encoding of "
"the description. The only legal value is ``UTF-8``. If omitted, it is "
"assumed to be ``UTF-8``."
msgstr ""
"O parâmetro ``charset`` pode ser usado para especificar a codificação de "
"caracteres da descrição. O único valor válido é ``UTF-8``. Se omitido, é "
"considerado ``UTF-8``."

#: ../source/specifications/core-metadata.rst:293
msgid ""
"Other parameters might be specific to the chosen subtype. For example, for "
"the ``markdown`` subtype, there is an optional ``variant`` parameter that "
"allows specifying the variant of Markdown in use (defaults to ``GFM`` if not "
"specified). Currently, two variants are recognized:"
msgstr ""
"Outros parâmetros podem ser específicos para o subtipo escolhido. Por "
"exemplo, para o subtipo ``markdown``, existe um parâmetro opcional "
"``variant`` que permite especificar a variante do Markdown em uso (o padrão "
"é ``GFM`` se não for especificado). Atualmente, duas variantes são "
"reconhecidas:"

#: ../source/specifications/core-metadata.rst:298
msgid "``GFM`` for :rfc:`GitHub-flavored Markdown <7764#section-3.2>`"
msgstr "``GFM`` para :rfc:`GitHub-flavored Markdown <7764#section-3.2>`"

#: ../source/specifications/core-metadata.rst:299
msgid "``CommonMark`` for :rfc:`CommonMark <7764#section-3.5>`"
msgstr "``CommonMark`` para :rfc:`CommonMark <7764#section-3.5>`"

#: ../source/specifications/core-metadata.rst:317
msgid ""
"If a ``Description-Content-Type`` is not specified, then applications should "
"attempt to render it as ``text/x-rst; charset=UTF-8`` and fall back to "
"``text/plain`` if it is not valid rst."
msgstr ""
"Se um ``Description-Content-Type`` não for especificado, as aplicações devem "
"tentar renderizá-lo como ``text/x-rst; charset=UTF-8`` e volta para ``text/"
"plain`` se não for válido primeiro."

#: ../source/specifications/core-metadata.rst:321
msgid ""
"If a ``Description-Content-Type`` is an unrecognized value, then the assumed "
"content type is ``text/plain`` (Although PyPI will probably reject anything "
"with an unrecognized value)."
msgstr ""
"Se um ``Description-Content-Type`` é um valor não reconhecido, então o tipo "
"de conteúdo presumido ser ``text/plain`` (embora PyPI provavelmente rejeite "
"qualquer coisa com um valor não reconhecido)."

#: ../source/specifications/core-metadata.rst:325
msgid ""
"If the ``Description-Content-Type`` is ``text/markdown`` and ``variant`` is "
"not specified or is set to an unrecognized value, then the assumed "
"``variant`` is ``GFM``."
msgstr ""
"Se o ``Description-Content-Type`` for ``text/markdown`` e ``variant`` não "
"for especificado ou estiver definido com um valor não reconhecido, então a "
"presume-se ``variant`` ser ``GFM`` ."

#: ../source/specifications/core-metadata.rst:329
msgid ""
"So for the last example above, the ``charset`` defaults to ``UTF-8`` and the "
"``variant`` defaults to ``GFM`` and thus it is equivalent to the example "
"before it."
msgstr ""
"Portanto, para o último exemplo acima, o ``charset`` padrão é ``UTF-8`` e o "
"``variant`` padrão ``GFM`` e, portanto, é equivalente ao exemplo anterior."

#: ../source/specifications/core-metadata.rst:338
msgid "Keywords"
msgstr "Keywords"

#: ../source/specifications/core-metadata.rst:342
msgid ""
"A list of additional keywords, separated by commas, to be used to assist "
"searching for the distribution in a larger catalog."
msgstr ""
"Uma lista de palavras-chave adicionais, separadas por vírgulas, a serem "
"usadas para auxiliar na busca pela distribuição em um catálogo maior."

#: ../source/specifications/core-metadata.rst:351
msgid ""
"The specification previously showed keywords separated by spaces, but "
"distutils and setuptools implemented it with commas. These tools have been "
"very widely used for many years, so it was easier to update the "
"specification to match the de facto standard."
msgstr ""
"A especificação anteriormente mostrava palavras-chave separadas por espaços, "
"mas distutils e setuptools a implementaram com vírgulas. Essas ferramentas "
"foram amplamente utilizadas por muitos anos, então era mais fácil atualizar "
"a especificação para corresponder ao padrão de fato."

#: ../source/specifications/core-metadata.rst:360
msgid "Author"
msgstr "Author"

#: ../source/specifications/core-metadata.rst:364
msgid ""
"A string containing the author's name at a minimum; additional contact "
"information may be provided."
msgstr ""
"Um string contendo o nome do autor, no mínimo; informações de contato "
"adicionais podem ser fornecidas."

#: ../source/specifications/core-metadata.rst:377
msgid "Author-email"
msgstr "Author-email"

#: ../source/specifications/core-metadata.rst:381
msgid ""
"A string containing the author's e-mail address.  It can contain a name and "
"e-mail address in the legal forms for a RFC-822 ``From:`` header."
msgstr ""
"Uma string contendo o endereço de e-mail do autor. Ela pode conter um nome e "
"endereço de e-mail nas formas válidos para um cabeçalho ``From:`` do RFC-822."

#: ../source/specifications/core-metadata.rst:389
#: ../source/specifications/core-metadata.rst:436
msgid ""
"Per RFC-822, this field may contain multiple comma-separated e-mail "
"addresses::"
msgstr ""
"De acordo com RFC-822, este campo pode conter vários endereços de e-mail "
"separados por vírgula::"

#: ../source/specifications/core-metadata.rst:399
msgid "Maintainer"
msgstr "Mantenedor"

#: ../source/specifications/core-metadata.rst:403
msgid ""
"A string containing the maintainer's name at a minimum; additional contact "
"information may be provided."
msgstr ""
"Uma string contendo o nome do mantenedor, no mínimo; informações de contato "
"adicionais podem ser fornecidas."

#: ../source/specifications/core-metadata.rst:406
msgid ""
"Note that this field is intended for use when a project is being maintained "
"by someone other than the original author:  it should be omitted if it is "
"identical to ``Author``."
msgstr ""
"Observe que este campo deve ser usado quando um projeto está sendo mantido "
"por alguém que não seja o autor original: ele deve ser omitido se for "
"idêntico a ``Author``."

#: ../source/specifications/core-metadata.rst:420
msgid "Maintainer-email"
msgstr "Maintainer-email"

#: ../source/specifications/core-metadata.rst:424
msgid ""
"A string containing the maintainer's e-mail address.  It can contain a name "
"and e-mail address in the legal forms for a RFC-822 ``From:`` header."
msgstr ""
"Uma string contendo o endereço de e-mail do mantenedor. Ela pode conter um "
"nome e endereço de e-mail nas formas válidas para um cabeçalho ``From:`` do "
"RFC-822."

#: ../source/specifications/core-metadata.rst:428
msgid ""
"Note that this field is intended for use when a project is being maintained "
"by someone other than the original author:  it should be omitted if it is "
"identical to ``Author-email``."
msgstr ""
"Observe que este campo deve ser usado quando um projeto está sendo mantido "
"por alguém que não seja o autor original: ele deve ser omitido se for "
"idêntico a ``Author-email``."

#: ../source/specifications/core-metadata.rst:446
msgid "License"
msgstr "License"

#: ../source/specifications/core-metadata.rst:449
#, fuzzy
#| msgid "in favour of ``Requires-Dist``"
msgid "in favour of ``License-Expression``."
msgstr "em favor de ``Requires-Dist``"

#: ../source/specifications/core-metadata.rst:453
msgid ""
"As of Metadata 2.4, ``License`` and ``License-Expression`` are mutually "
"exclusive. If both are specified, tools which parse metadata will disregard "
"``License`` and PyPI will reject uploads. See `PEP 639 <https://peps.python."
"org/pep-0639/#deprecate-license-field>`__."
msgstr ""

#: ../source/specifications/core-metadata.rst:458
msgid ""
"Text indicating the license covering the distribution where the license is "
"not a selection from the \"License\" Trove classifiers. See :ref:"
"`\"Classifier\" <metadata-classifier>` below. This field may also be used to "
"specify a particular version of a license which is named via the "
"``Classifier`` field, or to indicate a variation or exception to such a "
"license."
msgstr ""
"Texto indicando a licença cobrindo a distribuição onde a licença não é uma "
"seleção dos classificadores Trove \"License\". Veja :ref:`\"Classifier "
"\"<metadata-classifier>` abaixo. Este campo também pode ser usado para "
"especificar uma versão particular de uma licença que é nomeada através do "
"campo ``Classifier``, ou para indicar uma variação ou exceção a tal licença."

#: ../source/specifications/core-metadata.rst:478
msgid "License-Expression"
msgstr ""

#: ../source/specifications/core-metadata.rst:482
msgid ""
"Text string that is a valid SPDX :term:`license expression <License "
"Expression>`, as specified in :doc:`/specifications/license-expression`."
msgstr ""

#: ../source/specifications/core-metadata.rst:501
#, fuzzy
#| msgid "Requires-Dist (multiple use)"
msgid "License-File (multiple use)"
msgstr "Requires-Dist (vários usos)"

#: ../source/specifications/core-metadata.rst:505
msgid ""
"Each entry is a string representation of the path of a license-related file. "
"The path is located within the project source tree, relative to the project "
"root directory. For details see :pep:`639`."
msgstr ""

#: ../source/specifications/core-metadata.rst:522
msgid "Classifier (multiple use)"
msgstr "Classifier (vários usos)"

#: ../source/specifications/core-metadata.rst:526
msgid ""
"Each entry is a string giving a single classification value for the "
"distribution.  Classifiers are described in :pep:`301`, and the Python "
"Package Index publishes a dynamic list of `currently defined classifiers "
"<https://pypi.org/classifiers/>`__."
msgstr ""
"Cada entrada é uma string que fornece um único valor de classificação para a "
"distribuição. Os classificadores são descritos na :pep:`301`, e o Python "
"Package Index publica uma lista dinâmica de `classificadores atualmente "
"definidos <https://pypi.org/classifiers/>`__."

#: ../source/specifications/core-metadata.rst:532
msgid ""
"The use of ``License ::`` classifiers  is deprecated as of Metadata 2.4, use "
"``License-Expression`` instead. See `PEP 639 <https://peps.python.org/"
"pep-0639/#deprecate-license-classifiers>`_."
msgstr ""

#: ../source/specifications/core-metadata.rst:536
#: ../source/specifications/core-metadata.rst:626
#: ../source/specifications/core-metadata.rst:770
#: ../source/specifications/core-metadata.rst:795
msgid "This field may be followed by an environment marker after a semicolon."
msgstr ""
"Este campo pode ser seguido por um marcador de ambiente após um ponto e "
"vírgula."

#: ../source/specifications/core-metadata.rst:547
msgid "Requires-Dist (multiple use)"
msgstr "Requires-Dist (vários usos)"

#: ../source/specifications/core-metadata.rst:550
#: ../source/specifications/core-metadata.rst:613
#: ../source/specifications/core-metadata.rst:742
#: ../source/specifications/core-metadata.rst:784
msgid ""
"The field format specification was relaxed to accept the syntax used by "
"popular publishing tools."
msgstr ""
"A especificação do formato de campo foi relaxada para aceitar a sintaxe "
"usada por ferramentas de publicação populares."

#: ../source/specifications/core-metadata.rst:554
msgid ""
"Each entry contains a string naming some other distutils project required by "
"this distribution."
msgstr ""
"Cada entrada contém uma string nomeando algum outro projeto distutils "
"requerido por esta distribuição."

#: ../source/specifications/core-metadata.rst:557
msgid "The format of a requirement string contains from one to four parts:"
msgstr "O formato de uma string de requisito contém de uma a quatro partes:"

#: ../source/specifications/core-metadata.rst:559
msgid ""
"A project name, in the same format as the ``Name:`` field. The only "
"mandatory part."
msgstr ""
"Um nome de projeto, no mesmo formato do campo ``Name:``. A única parte "
"obrigatória."

#: ../source/specifications/core-metadata.rst:561
msgid ""
"A comma-separated list of 'extra' names. These are defined by the required "
"project, referring to specific features which may need extra dependencies. "
"The names MUST conform to the restrictions specified by the ``Provides-Extra:"
"`` field."
msgstr ""
"Uma lista separada por vírgulas de nomes \"extras\". Estes são definidos "
"pelo projeto requerido, referindo-se a recursos específicos que podem "
"precisar de dependências extras. Os nomes DEVEM estar em conformidade com as "
"restrições especificadas pelo campo ``Provides-Extra:``."

#: ../source/specifications/core-metadata.rst:565
msgid ""
"A version specifier. Tools parsing the format should accept optional "
"parentheses around this, but tools generating it should not use parentheses."
msgstr ""
"Um especificador de versão. As ferramentas que analisam o formato devem "
"aceitar parênteses opcionais em torno disso, mas as ferramentas que o geram "
"não devem usar parênteses."

#: ../source/specifications/core-metadata.rst:568
msgid ""
"An environment marker after a semicolon. This means that the requirement is "
"only needed in the specified conditions."
msgstr ""
"Um marcador de ambiente após um ponto e vírgula. Isso significa que o "
"requisito só é necessário nas condições especificadas."

#: ../source/specifications/core-metadata.rst:571
msgid "See :pep:`508` for full details of the allowed format."
msgstr "Veja a :pep:`508` para detalhes completos do formato permitido."

#: ../source/specifications/core-metadata.rst:573
msgid ""
"The project names should correspond to names as found on the `Python Package "
"Index`_."
msgstr ""
"Os nomes dos projetos devem corresponder aos nomes encontrados no `Python "
"Package Index`_."

#: ../source/specifications/core-metadata.rst:576
msgid ""
"Version specifiers must follow the rules described in :doc:`version-"
"specifiers`."
msgstr ""
"Os especificadores de versão devem seguir as regras descritas em :doc:"
"`version-specifiers`."

#: ../source/specifications/core-metadata.rst:590
msgid "Requires-Python"
msgstr "Requires-Python"

#: ../source/specifications/core-metadata.rst:594
msgid ""
"This field specifies the Python version(s) that the distribution is "
"compatible with. Installation tools may look at this when picking which "
"version of a project to install."
msgstr ""
"Este campo especifica a(s) versão(ões) do Python com as quais a distribuição "
"é compatível. As ferramentas de instalação podem observar isso ao escolher "
"qual versão de um projeto instalar."

#: ../source/specifications/core-metadata.rst:598
msgid "The value must be in the format specified in :doc:`version-specifiers`."
msgstr ""
"O valor deve estar no formato especificado em :doc:`version-specifiers`."

#: ../source/specifications/core-metadata.rst:600
#, fuzzy
msgid ""
"For example, if a distribution uses :ref:`f-strings <whatsnew36-pep498>` "
"then it may prevent installation on Python < 3.6 by specifying::"
msgstr ""
"Por exemplo, se uma distribuição usa :ref:`f-strings <whatsnew36-pep498>` "
"então pode impedir a instalação em Python < 3.6 especificando::"

#: ../source/specifications/core-metadata.rst:605
msgid "This field cannot be followed by an environment marker."
msgstr "Este campo não pode ser seguido por um marcador de ambiente."

#: ../source/specifications/core-metadata.rst:610
msgid "Requires-External (multiple use)"
msgstr "Requires-External (vários usos)"

#: ../source/specifications/core-metadata.rst:617
msgid ""
"Each entry contains a string describing some dependency in the system that "
"the distribution is to be used.  This field is intended to serve as a hint "
"to downstream project maintainers, and has no semantics which are meaningful "
"to the ``distutils`` distribution."
msgstr ""
"Cada entrada contém uma string que descreve alguma dependência no sistema de "
"que a distribuição deve ser usada. Este campo tem como objetivo servir como "
"uma dica para os mantenedores do projeto downstream, e não tem semântica que "
"seja significativa para a distribuição ``distutils``."

#: ../source/specifications/core-metadata.rst:622
msgid ""
"The format of a requirement string is a name of an external dependency, "
"optionally followed by a version declaration within parentheses."
msgstr ""
"O formato de uma string de requisito é o nome de uma dependência externa, "
"opcionalmente seguido por uma declaração de versão entre parênteses."

#: ../source/specifications/core-metadata.rst:628
msgid ""
"Because they refer to non-Python software releases, version numbers for this "
"field are **not** required to conform to the format specified in the :ref:"
"`Version specifier specification <version-specifiers>`: they should "
"correspond to the version scheme used by the external dependency."
msgstr ""
"Como eles se referem a lançamentos de software não-Python, os números de "
"versão para este campo **não** são obrigados a estar em conformidade com o "
"formato especificado na :ref:`especificação de especificadores de versão "
"<version-specifiers>`: eles devem corresponder ao esquema de versão usado "
"pela dependência externa."

#: ../source/specifications/core-metadata.rst:633
msgid "Notice that there is no particular rule on the strings to be used."
msgstr ""
"Observe que não há uma regra específica sobre as strings a serem usadas."

#: ../source/specifications/core-metadata.rst:645
msgid "Project-URL (multiple-use)"
msgstr "Project-URL (vários usos)"

#: ../source/specifications/core-metadata.rst:649
msgid ""
"A string containing a browsable URL for the project and a label for it, "
"separated by a comma."
msgstr ""
"Uma string contendo uma URL navegável para o projeto e um rótulo para ele, "
"separados por uma vírgula."

#: ../source/specifications/core-metadata.rst:656
msgid "The label is free text limited to 32 characters."
msgstr "O rótulo é um texto livre limitado a 32 caracteres."

#: ../source/specifications/core-metadata.rst:658
msgid ""
"Starting with :pep:`753`, project metadata consumers (such as the Python "
"Package Index) can use a standard normalization process to discover \"well-"
"known\" labels, which can then be given special presentations when being "
"rendered for human consumption. See :ref:`well-known-project-urls`."
msgstr ""

#: ../source/specifications/core-metadata.rst:668
msgid "Provides-Extra (multiple use)"
msgstr "Provides-Extra (vários usos)"

#: ../source/specifications/core-metadata.rst:671
msgid ""
":pep:`685` restricted valid values to be unambiguous (i.e. no normalization "
"required). For older metadata versions, value restrictions were brought into "
"line with ``Name:`` and normalization rules were introduced."
msgstr ""
"A :pep:`685` restringiu os valores válidos para serem inequívocos (ou seja, "
"sem necessidade de normalização). Para versões de metadados mais antigas, as "
"restrições de valor foram alinhadas com ``Name:`` e as regras de "
"normalização foram introduzidas."

#: ../source/specifications/core-metadata.rst:676
msgid ""
"A string containing the name of an optional feature. A valid name consists "
"only of lowercase ASCII letters, ASCII numbers, and hyphen. It must start "
"and end with a letter or number. Hyphens cannot be followed by another "
"hyphen. Names are limited to those which match the following regex (which "
"guarantees unambiguity)::"
msgstr ""
"Uma string contendo o nome de um recurso opcional. Um nome válido consiste "
"apenas em letras ASCII minúsculas e números ASCII e hífen. Deve começar e "
"terminar com uma letra ou número. Hífenes não podem ser seguidos por outro "
"hífen. Os nomes são limitados àqueles que correspondem ao seguinte regex "
"(que elimina ambiguidade)::"

#: ../source/specifications/core-metadata.rst:684
msgid ""
"The specified name may be used to make a dependency conditional on whether "
"the optional feature has been requested."
msgstr ""
"O nome especificado pode ser usado para tornar uma dependência condicional "
"ao fato de o recurso opcional ter sido solicitado."

#: ../source/specifications/core-metadata.rst:692
msgid ""
"A second distribution requires an optional dependency by placing it inside "
"square brackets, and can request multiple features by separating them with a "
"comma (,). The requirements are evaluated for each requested feature and "
"added to the set of requirements for the distribution."
msgstr ""
"Uma segunda distribuição requer uma dependência opcional, colocando-a entre "
"colchetes, e pode solicitar vários recursos, separando-os com uma vírgula "
"(,). Os requisitos são avaliados para cada recurso solicitado e adicionados "
"ao conjunto de requisitos para a distribuição."

#: ../source/specifications/core-metadata.rst:702
msgid ""
"Two feature names ``test`` and ``doc`` are reserved to mark dependencies "
"that are needed for running automated tests and generating documentation, "
"respectively."
msgstr ""
"Dois nomes de recursos ``test`` e ``doc`` são reservados para marcar "
"dependências que são necessárias para executar testes automatizados e gerar "
"documentação, respectivamente."

#: ../source/specifications/core-metadata.rst:706
msgid ""
"It is legal to specify ``Provides-Extra:`` without referencing it in any "
"``Requires-Dist:``."
msgstr ""
"É válido especificar ``Provides-Extra:`` sem referenciá-lo em qualquer "
"``Requer-Dist:``."

#: ../source/specifications/core-metadata.rst:709
msgid ""
"When writing data for older metadata versions, names MUST be normalized "
"following the same rules used for the ``Name:`` field when performing "
"comparisons. Tools writing metadata MUST raise an error if two ``Provides-"
"Extra:`` entries would clash after being normalized."
msgstr ""
"Ao escrever dados para versões de metadados mais antigas, os nomes DEVEM ser "
"normalizados seguindo as mesmas regras usadas para o campo ``Name:`` ao "
"realizar comparações. Ferramentas que escrevem metadados DEVEM gerar um erro "
"se duas entradas ``Provides-Extra:`` colidirem após serem normalizadas."

#: ../source/specifications/core-metadata.rst:714
msgid ""
"When reading data for older metadata versions, tools SHOULD warn when values "
"for this field would be invalid under newer metadata versions. If a value "
"would be invalid following the rules for ``Name:`` in any core metadata "
"version, the user SHOULD be warned and the value ignored to avoid ambiguity. "
"Tools MAY choose to raise an error when reading an invalid name for older "
"metadata versions."
msgstr ""
"Ao ler dados para versões de metadados mais antigas, as ferramentas DEVEM "
"avisar quando os valores para este campo seriam inválidos em versões de "
"metadados mais recentes. Se um valor for inválido seguindo as regras para "
"``Name:`` em qualquer versão de metadados principais, o usuário DEVE ser "
"avisado e o valor ignorado para evitar ambiguidade. As ferramentas PODEM "
"optar por gerar um erro ao ler um nome inválido para versões de metadados "
"mais antigas."

#: ../source/specifications/core-metadata.rst:722
msgid "Rarely Used Fields"
msgstr "Campos raramente usados"

#: ../source/specifications/core-metadata.rst:724
msgid ""
"The fields in this section are currently rarely used, as their design was "
"inspired by comparable mechanisms in Linux package management systems, and "
"it isn't at all clear how tools should interpret them in the context of an "
"open index server such as `PyPI <https://pypi.org>`__."
msgstr ""
"Os campos nesta seção são raramente usados atualmente, já que seu design foi "
"inspirado por mecanismos comparáveis em sistemas de gerenciamento de pacotes "
"Linux, e não está claro como as ferramentas devem interpretá-los no contexto "
"de um servidor de indexação aberto, como `PyPI <https://pypi.org>`__."

#: ../source/specifications/core-metadata.rst:729
msgid ""
"As a result, popular installation tools ignore them completely, which in "
"turn means there is little incentive for package publishers to set them "
"appropriately. However, they're retained in the metadata specification, as "
"they're still potentially useful for informational purposes, and can also be "
"used for their originally intended purpose in combination with a curated "
"package repository."
msgstr ""
"Como resultado, as ferramentas de instalação populares os ignoram "
"completamente, o que significa que há pouco incentivo para os editores de "
"pacotes configurá-los apropriadamente. No entanto, eles são retidos na "
"especificação de metadados, pois ainda são potencialmente úteis para fins "
"informativos e também podem ser usados para o propósito originalmente "
"pretendido em combinação com um repositório de pacotes com curadoria."

#: ../source/specifications/core-metadata.rst:739
msgid "Provides-Dist (multiple use)"
msgstr "Provides-Dist (vários usos)"

#: ../source/specifications/core-metadata.rst:746
msgid ""
"Each entry contains a string naming a Distutils project which is contained "
"within this distribution.  This field *must* include the project identified "
"in the ``Name`` field, followed by the version : Name (Version)."
msgstr ""
"Cada entrada contém uma string nomeando um projeto Distutils que está "
"contido nesta distribuição. Este campo *deve* incluir o projeto identificado "
"no campo ``Name``, seguido da versão: Nome (Versão)."

#: ../source/specifications/core-metadata.rst:751
msgid ""
"A distribution may provide additional names, e.g. to indicate that multiple "
"projects have been bundled together.  For instance, source distributions of "
"the ``ZODB`` project have historically included the ``transaction`` project, "
"which is now available as a separate distribution.  Installing such a source "
"distribution satisfies requirements for both ``ZODB`` and ``transaction``."
msgstr ""
"Uma distribuição pode fornecer nomes adicionais, por exemplo, para indicar "
"que vários projetos foram agrupados. Por exemplo, distribuições de código-"
"fonte do projeto ``ZODB`` historicamente incluíram o projeto "
"``transaction``, que agora está disponível como uma distribuição separada. "
"Instalar tal distribuição de código-fonte satisfaz os requisitos para "
"``ZODB`` e ``transaction``."

#: ../source/specifications/core-metadata.rst:758
msgid ""
"A distribution may also provide a \"virtual\" project name, which does not "
"correspond to any separately-distributed project:  such a name might be used "
"to indicate an abstract capability which could be supplied by one of "
"multiple projects.  E.g., multiple projects might supply RDBMS bindings for "
"use by a given ORM:  each project might declare that it provides ``ORM-"
"bindings``, allowing other projects to depend only on having at most one of "
"them installed."
msgstr ""
"Uma distribuição também pode fornecer um nome de projeto \"virtual\", que "
"não corresponde a nenhum projeto distribuído separadamente: tal nome pode "
"ser usado para indicar uma capacidade abstrata que pode ser fornecida por um "
"de vários projetos. Por exemplo, vários projetos podem fornecer ligações "
"*(bindings)* de RDBMS para uso por um determinado ORM: cada projeto pode "
"declarar que fornece ``ORM-bindings``, permitindo que outros projetos "
"dependam apenas de ter no máximo um deles instalado."

#: ../source/specifications/core-metadata.rst:766
msgid ""
"A version declaration may be supplied and must follow the rules described "
"in :doc:`version-specifiers`. The distribution's version number will be "
"implied if none is specified."
msgstr ""
"Uma declaração de versão pode ser fornecida e deve seguir as regras "
"descritas em :doc:`version-specifiers`. O número da versão da distribuição "
"estará implícito se nenhum for especificado."

#: ../source/specifications/core-metadata.rst:781
msgid "Obsoletes-Dist (multiple use)"
msgstr "Obsoletes-Dist (vários usos)"

#: ../source/specifications/core-metadata.rst:788
msgid ""
"Each entry contains a string describing a distutils project's distribution "
"which this distribution renders obsolete, meaning that the two projects "
"should not be installed at the same time."
msgstr ""
"Cada entrada contém uma string que descreve a distribuição de um projeto "
"distutils que esta distribuição torna obsoleta, o que significa que os dois "
"projetos não devem ser instalados ao mesmo tempo."

#: ../source/specifications/core-metadata.rst:792
msgid ""
"Version declarations can be supplied.  Version numbers must be in the format "
"specified in :doc:`version-specifiers`."
msgstr ""
"Declarações de versão podem ser fornecidas. Os números de versão devem estar "
"no formato especificado em :doc:`version-specifiers`."

#: ../source/specifications/core-metadata.rst:797
msgid ""
"The most common use of this field will be in case a project name changes, e."
"g. Gorgon 2.3 gets subsumed into Torqued Python 1.0. When you install "
"Torqued Python, the Gorgon distribution should be removed."
msgstr ""
"O uso mais comum deste campo será no caso de alteração do nome de um "
"projeto, por exemplo, Gorgon 2.3 é incluído no Torqued Python 1.0. Quando "
"você instala o Torqued Python, a distribuição Gorgon deve ser removida."

#: ../source/specifications/core-metadata.rst:810
msgid "Deprecated Fields"
msgstr "Campos descontinuados"

#: ../source/specifications/core-metadata.rst:812
msgid ""
"Deprecated fields should be avoided, but they are valid metadata fields. "
"They may be removed in future versions of the core metadata standard (at "
"which point they will only be valid in files that specify a metadata version "
"prior to the removal). Tools SHOULD warn users when deprecated fields are "
"used."
msgstr ""

#: ../source/specifications/core-metadata.rst:821
msgid "Home-page"
msgstr "Home-page"

#: ../source/specifications/core-metadata.rst:827
#: ../source/specifications/core-metadata.rst:844
msgid "Per :pep:`753`, use :ref:`core-metadata-project-url` instead."
msgstr ""

#: ../source/specifications/core-metadata.rst:829
msgid "A string containing the URL for the distribution's home page."
msgstr "Uma string contendo a URL para a página da distribuição."

#: ../source/specifications/core-metadata.rst:838
msgid "Download-URL"
msgstr "Download-URL"

#: ../source/specifications/core-metadata.rst:846
#, fuzzy
#| msgid ""
#| "A string containing the URL from which this version of the distribution "
#| "can be downloaded.  (This means that the URL can't be something like "
#| "\".../BeagleVote-latest.tgz\", but instead must be \".../BeagleVote-0.45."
#| "tgz\".)"
msgid ""
"A string containing the URL from which this version of the distribution can "
"be downloaded.  (This means that the URL can't be something like \"``.../"
"BeagleVote-latest.tgz``\", but instead must be \"``.../BeagleVote-0.45."
"tgz``\".)"
msgstr ""
"Uma string contendo a URL a partir da qual esta versão da distribuição pode "
"ser baixada. (Isso significa que a URL não pode ser algo como \".../"
"BeagleVote-latest.tgz\", mas deve ser \".../BeagleVote-0.45.tgz\".)"

#: ../source/specifications/core-metadata.rst:852
msgid "Requires"
msgstr "Requires"

#: ../source/specifications/core-metadata.rst:855
msgid "in favour of ``Requires-Dist``"
msgstr "em favor de ``Requires-Dist``"

#: ../source/specifications/core-metadata.rst:858
msgid ""
"Each entry contains a string describing some other module or package "
"required by this package."
msgstr ""
"Cada entrada contém uma string descrevendo algum outro módulo ou pacote "
"requerido por este pacote."

#: ../source/specifications/core-metadata.rst:861
msgid ""
"The format of a requirement string is identical to that of a module or "
"package name usable with the ``import`` statement, optionally followed by a "
"version declaration within parentheses."
msgstr ""
"O formato de uma string de requisito é idêntico ao de um nome de módulo ou "
"pacote utilizável com a instrução ``import``, opcionalmente seguida por uma "
"declaração de versão dentro de parênteses."

#: ../source/specifications/core-metadata.rst:865
msgid ""
"A version declaration is a series of conditional operators and version "
"numbers, separated by commas. Conditional operators must be one of \"<\", "
"\">\"', \"<=\", \">=\", \"==\", and \"!=\". Version numbers must be in the "
"format accepted by the ``distutils.version.StrictVersion`` class: two or "
"three dot-separated numeric components, with an optional \"pre-release\" tag "
"on the end consisting of the letter 'a' or 'b' followed by a number. Example "
"version numbers are \"1.0\", \"2.3a2\", \"1.3.99\","
msgstr ""
"Uma declaração de versão é uma série de operadores condicionais e números de "
"versão, separados por vírgulas. Os operadores condicionais devem ser um dos "
"\"<\", \">\"', \"<=\", \">=\", \"=\", e \"!=\". Os números da versão devem "
"estar no formato aceito pela classe ``distutils.version.StrictVersion``: "
"dois ou três componentes numéricos separados por ponto, com uma tag \"pre-"
"release\" opcional no final que consiste na letra 'a' ou 'b' seguida de um "
"número. Os números da versão do exemplo são \"1.0\", \"2.3a2\", \"1.3.99\"."

#: ../source/specifications/core-metadata.rst:873
msgid ""
"Any number of conditional operators can be specified, e.g. the string "
"\">1.0, !=1.3.4, <2.0\" is a legal version declaration."
msgstr ""
"Qualquer número de operadores condicionais pode ser especificado, por "
"exemplo, a string \">1.0, !=1.3.4, <2.0\" é uma declaração de versão válida."

#: ../source/specifications/core-metadata.rst:876
msgid ""
"All of the following are possible requirement strings: \"rfc822\", \"zlib "
"(>=1.1.4)\", \"zope\"."
msgstr ""
"Todos os seguintes são possíveis strings de requisito: \"rfc822\", \"zlib "
"(>=1.1.4)\", \"zope\"."

#: ../source/specifications/core-metadata.rst:879
msgid ""
"There’s no canonical list of what strings should be used; the Python "
"community is left to choose its own standards."
msgstr ""
"Não há nenhuma lista canônica de quais strings devem ser usadas; a "
"comunidade Python é livre para escolher seus próprios padrões."

#: ../source/specifications/core-metadata.rst:892
msgid "Provides"
msgstr "Provides"

#: ../source/specifications/core-metadata.rst:895
msgid "in favour of ``Provides-Dist``"
msgstr "em favor de ``Provides-Dist``"

#: ../source/specifications/core-metadata.rst:898
msgid ""
"Each entry contains a string describing a package or module that will be "
"provided by this package once it is installed. These strings should match "
"the ones used in Requirements fields. A version declaration may be supplied "
"(without a comparison operator); the package’s version number will be "
"implied if none is specified."
msgstr ""
"Cada entrada contém uma string descrevendo um pacote ou módulo que será "
"fornecido por este pacote uma vez instalado. Essas strings devem "
"corresponder às usadas nos campos Requirements. Uma declaração de versão "
"pode ser fornecida (sem um operador de comparação); o número de versão do "
"pacote será implícito se nenhum for especificado."

#: ../source/specifications/core-metadata.rst:914
msgid "Obsoletes"
msgstr "Obsoletes"

#: ../source/specifications/core-metadata.rst:917
msgid "in favour of ``Obsoletes-Dist``"
msgstr "em favor de ``Obsoletes-Dist``"

#: ../source/specifications/core-metadata.rst:920
msgid ""
"Each entry contains a string describing a package or module that this "
"package renders obsolete, meaning that the two packages should not be "
"installed at the same time. Version declarations can be supplied."
msgstr ""
"Cada entrada contém uma string descrevendo um pacote ou módulo que este "
"pacote torna obsoleta, o que significa que os dois projetos não devem ser "
"instalados ao mesmo tempo. Declarações de versão pode ser fornecidas."

#: ../source/specifications/core-metadata.rst:924
msgid ""
"The most common use of this field will be in case a package name changes, e."
"g. Gorgon 2.3 gets subsumed into Torqued Python 1.0. When you install "
"Torqued Python, the Gorgon package should be removed."
msgstr ""
"O uso mais comum deste campo será no caso de alteração do nome de um "
"projeto, por exemplo, Gorgon 2.3 é incluído no Torqued Python 1.0. Quando "
"você instala o Torqued Python, o pacote Gorgon deve ser removido."

#: ../source/specifications/core-metadata.rst:936
msgid ""
"August 2025: Clarified that ``Dynamic`` only affects how fields must be "
"treated when building a wheel from a sdist, not when modifying a wheel."
msgstr ""

#: ../source/specifications/core-metadata.rst:940
msgid "August 2024: Core metadata 2.4 was approved through :pep:`639`."
msgstr ""

#: ../source/specifications/core-metadata.rst:942
#, fuzzy
#| msgid "Added the ``Dynamic`` field."
msgid "Added the ``License-Expression`` field."
msgstr "Adicionado o campo ``Dinâmico``."

#: ../source/specifications/core-metadata.rst:943
#, fuzzy
#| msgid "Added the ``Dynamic`` field."
msgid "Added the ``License-File`` field."
msgstr "Adicionado o campo ``Dinâmico``."

#: ../source/specifications/core-metadata.rst:945
msgid "March 2022: Core metadata 2.3 was approved through :pep:`685`."
msgstr ""

#: ../source/specifications/core-metadata.rst:947
msgid "Restricted extra names to be normalized."
msgstr ""

#: ../source/specifications/core-metadata.rst:949
msgid "October 2020: Core metadata 2.2 was approved through :pep:`643`."
msgstr ""

#: ../source/specifications/core-metadata.rst:951
msgid "Added the ``Dynamic`` field."
msgstr "Adicionado o campo ``Dinâmico``."

#: ../source/specifications/core-metadata.rst:953
msgid "February 2018: Core metadata 2.1 was approved through :pep:`566`."
msgstr ""

#: ../source/specifications/core-metadata.rst:955
#, fuzzy
msgid "Added ``Description-Content-Type`` and ``Provides-Extra``."
msgstr ""
"Adicionada documentação para o campo ``Description-Content-Type``. (:pr:"
"`258`)"

#: ../source/specifications/core-metadata.rst:956
msgid "Added canonical method for transforming metadata to JSON."
msgstr ""

#: ../source/specifications/core-metadata.rst:957
msgid "Restricted the grammar of the ``Name`` field."
msgstr ""

#: ../source/specifications/core-metadata.rst:959
msgid "February 2010: Core metadata 1.2 was approved through :pep:`345`."
msgstr ""

#: ../source/specifications/core-metadata.rst:961
msgid "April 2003: Core metadata 1.1 was approved through :pep:`314`:"
msgstr ""

#: ../source/specifications/core-metadata.rst:963
msgid "March 2001: Core metadata 1.0 was approved through :pep:`241`."
msgstr ""

#: ../source/specifications/core-metadata.rst:967
msgid "reStructuredText markup: https://docutils.sourceforge.io/"
msgstr "Marcação reStructuredText: https://docutils.sourceforge.io/"

#: ../source/specifications/core-metadata.rst:972
msgid "RFC 822 Long Header Fields: :rfc:`822#section-3.1.1`"
msgstr "RFC 822 Long Header Fields: :rfc:`822#section-3.1.1`"

#: ../source/specifications/dependency-groups.rst:5
#, fuzzy
#| msgid "Dependency Overrides"
msgid "Dependency Groups"
msgstr "Substitui dependências"

#: ../source/specifications/dependency-groups.rst:7
msgid ""
"This specification defines Dependency Groups, a mechanism for storing "
"package requirements in ``pyproject.toml`` files such that they are not "
"included in project metadata when it is built."
msgstr ""

#: ../source/specifications/dependency-groups.rst:11
msgid ""
"Dependency Groups are suitable for internal development use-cases like "
"linting and testing, as well as for projects which are not built for "
"distribution, like collections of related scripts."
msgstr ""

#: ../source/specifications/dependency-groups.rst:15
msgid ""
"Fundamentally, Dependency Groups should be thought of as being a "
"standardized subset of the capabilities of ``requirements.txt`` files (which "
"are ``pip``-specific)."
msgstr ""

#: ../source/specifications/dependency-groups.rst:25
msgid "This is a simple table which shows ``docs`` and ``test`` groups::"
msgstr ""

#: ../source/specifications/dependency-groups.rst:31
msgid ""
"and a similar table which defines ``docs``, ``test``, and ``coverage`` "
"groups::"
msgstr ""

#: ../source/specifications/dependency-groups.rst:39
msgid "The ``[dependency-groups]`` Table"
msgstr ""

#: ../source/specifications/dependency-groups.rst:41
msgid ""
"Dependency Groups are defined as a table in ``pyproject.toml`` named "
"``dependency-groups``. The ``dependency-groups`` table contains an arbitrary "
"number of user-defined keys, each of which has, as its value, a list of "
"requirements."
msgstr ""

#: ../source/specifications/dependency-groups.rst:46
msgid ""
"``[dependency-groups]`` keys, sometimes also called \"group names\", must "
"be :ref:`valid non-normalized names <name-format>`. Tools which handle "
"Dependency Groups MUST :ref:`normalize <name-normalization>` these names "
"before comparisons."
msgstr ""

#: ../source/specifications/dependency-groups.rst:51
msgid ""
"Tools SHOULD prefer to present the original, non-normalized name to users, "
"and if duplicate names are detected after normalization, tools SHOULD emit "
"an error."
msgstr ""

#: ../source/specifications/dependency-groups.rst:55
msgid ""
"Requirement lists, the values in ``[dependency-groups]``, may contain "
"strings, tables (``dict`` in Python), or a mix of strings and tables. "
"Strings must be valid :ref:`dependency specifiers <dependency-specifiers>`, "
"and tables must be valid Dependency Group Includes."
msgstr ""

#: ../source/specifications/dependency-groups.rst:61
#, fuzzy
#| msgid "Dependency Overrides"
msgid "Dependency Group Include"
msgstr "Substitui dependências"

#: ../source/specifications/dependency-groups.rst:63
msgid ""
"A Dependency Group Include includes another Dependency Group in the current "
"group."
msgstr ""

#: ../source/specifications/dependency-groups.rst:66
msgid ""
"An include is a table with exactly one key, ``\"include-group\"``, whose "
"value is a string, the name of another Dependency Group."
msgstr ""

#: ../source/specifications/dependency-groups.rst:69
msgid ""
"Includes are defined to be exactly equivalent to the contents of the named "
"Dependency Group, inserted into the current group at the location of the "
"include. For example, if ``foo = [\"a\", \"b\"]`` is one group, and ``bar = "
"[\"c\", {include-group = \"foo\"}, \"d\"]`` is another, then ``bar`` should "
"evaluate to ``[\"c\", \"a\", \"b\", \"d\"]`` when Dependency Group Includes "
"are expanded."
msgstr ""

#: ../source/specifications/dependency-groups.rst:75
msgid ""
"Dependency Group Includes may specify the same package multiple times. Tools "
"SHOULD NOT deduplicate or otherwise alter the list contents produced by the "
"include. For example, given the following table:"
msgstr ""

#: ../source/specifications/dependency-groups.rst:92
msgid ""
"The resolved value of ``all`` SHOULD be ``[\"foo\", \"foo\", \"foo>1.0\", "
"\"foo<1.0\"]``. Tools should handle such a list exactly as they would handle "
"any other case in which they are asked to process the same requirement "
"multiple times with different version constraints."
msgstr ""

#: ../source/specifications/dependency-groups.rst:97
msgid ""
"Dependency Group Includes may include groups containing Dependency Group "
"Includes, in which case those includes should be expanded as well. "
"Dependency Group Includes MUST NOT include cycles, and tools SHOULD report "
"an error if they detect a cycle."
msgstr ""

#: ../source/specifications/dependency-groups.rst:102
#, fuzzy
#| msgid "Package upload"
msgid "Package Building"
msgstr "Envio de pacotes"

#: ../source/specifications/dependency-groups.rst:104
msgid ""
"Build backends MUST NOT include Dependency Group data in built distributions "
"as package metadata. This means that sdist ``PKG-INFO`` and wheel "
"``METADATA`` files should not include referenceable fields containing "
"Dependency Groups."
msgstr ""

#: ../source/specifications/dependency-groups.rst:108
msgid ""
"It is, however, valid to use Dependency Groups in the evaluation of dynamic "
"metadata, and ``pyproject.toml`` files included in sdists will still contain "
"``[dependency-groups]``. However, the table's contents are not part of a "
"built package's interfaces."
msgstr ""

#: ../source/specifications/dependency-groups.rst:114
#, fuzzy
#| msgid "Installing Setuptools \"Extras\""
msgid "Installing Dependency Groups & Extras"
msgstr "Instalando Setuptools \"extras\""

#: ../source/specifications/dependency-groups.rst:116
msgid ""
"There is no syntax or specification-defined interface for installing or "
"referring to Dependency Groups. Tools are expected to provide dedicated "
"interfaces for this purpose."
msgstr ""

#: ../source/specifications/dependency-groups.rst:120
msgid ""
"Tools MAY choose to provide the same or similar interfaces for interacting "
"with Dependency Groups as they do for managing extras. Tools authors are "
"advised that the specification does not forbid having an extra whose name "
"matches a Dependency Group. Separately, users are advised to avoid creating "
"Dependency Groups whose names match extras, and tools MAY treat such "
"matching as an error."
msgstr ""

#: ../source/specifications/dependency-groups.rst:128
#, fuzzy
msgid "Validation and Compatibility"
msgstr "Compatibilidade da ABI"

#: ../source/specifications/dependency-groups.rst:130
msgid ""
"Tools supporting Dependency Groups may want to validate data before using "
"it. When implementing such validation, authors should be aware of the "
"possibility of future extensions to the specification, so that they do not "
"unnecessarily emit errors or warnings."
msgstr ""

#: ../source/specifications/dependency-groups.rst:135
msgid ""
"Tools SHOULD error when evaluating or processing unrecognized data in "
"Dependency Groups."
msgstr ""

#: ../source/specifications/dependency-groups.rst:138
msgid ""
"Tools SHOULD NOT eagerly validate the contents of *all* Dependency Groups "
"unless they have a need to do so."
msgstr ""

#: ../source/specifications/dependency-groups.rst:141
msgid ""
"This means that in the presence of the following data, most tools should "
"allow the ``foo`` group to be used and only error if the ``bar`` group is "
"used:"
msgstr ""

#: ../source/specifications/dependency-groups.rst:152
msgid ""
"There are several known cases of tools which have good cause to be stricter. "
"Linters and validators are an example, as their purpose is to validate the "
"contents of all Dependency Groups."
msgstr ""

#: ../source/specifications/dependency-groups.rst:157
#: ../source/specifications/inline-script-metadata.rst:123
#, fuzzy
msgid "Reference Implementation"
msgstr "Tipos de documentação"

#: ../source/specifications/dependency-groups.rst:159
msgid ""
"The following Reference Implementation prints the contents of a Dependency "
"Group to stdout, newline delimited. The output is therefore valid "
"``requirements.txt`` data."
msgstr ""

#: ../source/specifications/dependency-groups.rst:252
#, fuzzy
#| msgid ""
#| "This document describes the dependency specifiers format as originally "
#| "specified in :pep:`508`."
msgid "October 2024: This specification was approved through :pep:`735`."
msgstr ""
"Este documento descreve o formato dos especificadores de dependência "
"conforme originalmente especificado na :pep:`508`."

#: ../source/specifications/dependency-specifiers.rst:7
msgid "Dependency specifiers"
msgstr "Especificadores de dependência"

#: ../source/specifications/dependency-specifiers.rst:9
msgid ""
"This document describes the dependency specifiers format as originally "
"specified in :pep:`508`."
msgstr ""
"Este documento descreve o formato dos especificadores de dependência "
"conforme originalmente especificado na :pep:`508`."

#: ../source/specifications/dependency-specifiers.rst:12
msgid ""
"The job of a dependency is to enable tools like pip [#pip]_ to find the "
"right package to install. Sometimes this is very loose - just specifying a "
"name, and sometimes very specific - referring to a specific file to install. "
"Sometimes dependencies are only relevant in one platform, or only some "
"versions are acceptable, so the language permits describing all these cases."
msgstr ""
"O trabalho de uma dependência é permitir que ferramentas como pip [#pip]_ "
"encontrem o pacote certo para instalar. Às vezes, isso é muito vago -- "
"apenas especificando um nome -- e, às vezes, muito específico -- referindo-"
"se a um arquivo específico a ser instalado. Às vezes, as dependências são "
"relevantes apenas em uma plataforma, ou apenas algumas versões são "
"aceitáveis, então a linguagem permite descrever todos esses casos."

#: ../source/specifications/dependency-specifiers.rst:18
#, fuzzy
msgid ""
"The language defined is a compact line based format which is already in "
"widespread use in pip requirements files, though we do not specify the "
"command line option handling that those files permit. There is one caveat - "
"the URL reference form, specified in :ref:`Versioning specifier "
"specification <version-specifiers>` is not actually implemented in pip, but "
"we use that format rather than pip's current native format."
msgstr ""
"A linguagem definida é um formato compacto baseado em linha que já está em "
"uso generalizado em arquivos de requisitos pip, embora não especifiquemos a "
"manipulação de opção de linha de comando que esses arquivos permitem. Há uma "
"ressalva: o formulário de referência de URL, especificado em :pep:`440`, não "
"é realmente implementado em pip, mas como :pep:`440` é aceito, usamos esse "
"formato em vez do formato nativo atual de pip."

#: ../source/specifications/dependency-specifiers.rst:31
msgid "All features of the language shown with a name based lookup::"
msgstr ""
"Todos os recursos do idioma mostrados com uma pesquisa baseada em nome ::"

#: ../source/specifications/dependency-specifiers.rst:35
msgid "A minimal URL based lookup::"
msgstr "Uma pesquisa baseada em URL mínima ::"

#: ../source/specifications/dependency-specifiers.rst:40
msgid "Concepts"
msgstr "Conceitos"

#: ../source/specifications/dependency-specifiers.rst:42
msgid ""
"A dependency specification always specifies a distribution name. It may "
"include extras, which expand the dependencies of the named distribution to "
"enable optional features. The version installed can be controlled using "
"version limits, or giving the URL to a specific artifact to install. Finally "
"the dependency can be made conditional using environment markers."
msgstr ""
"Uma especificação de dependência sempre especifica um nome de distribuição. "
"Pode incluir extras, que expandem as dependências da distribuição nomeada "
"para habilitar recursos opcionais. A versão instalada pode ser controlada "
"usando limites de versão ou fornecendo a URL para um artefato específico "
"para instalação. Finalmente, a dependência pode ser condicionada usando "
"marcadores de ambiente."

#: ../source/specifications/dependency-specifiers.rst:49
msgid "Grammar"
msgstr "Gramática"

#: ../source/specifications/dependency-specifiers.rst:51
msgid ""
"We first cover the grammar briefly and then drill into the semantics of each "
"section later."
msgstr ""
"Primeiro, abordamos brevemente a gramática e, posteriormente, detalhamos a "
"semântica de cada seção."

#: ../source/specifications/dependency-specifiers.rst:54
msgid ""
"A distribution specification is written in ASCII text. We use a parsley "
"[#parsley]_ grammar to provide a precise grammar. It is expected that the "
"specification will be embedded into a larger system which offers framing "
"such as comments, multiple line support via continuations, or other such "
"features."
msgstr ""
"Uma especificação de distribuição é escrita em texto ASCII. Usamos uma "
"gramática de parsley [#parsley]_ para fornecer uma gramática precisa. Espera-"
"se que a especificação seja incorporada a um sistema maior que ofereça "
"enquadramento, como comentários, suporte a várias linhas por meio de "
"continuações ou outros recursos semelhantes."

#: ../source/specifications/dependency-specifiers.rst:59
msgid ""
"The full grammar including annotations to build a useful parse tree is "
"included at the end of this document."
msgstr ""
"A gramática completa, incluindo anotações para construir uma árvore de "
"análise útil, está incluída no final deste documento."

#: ../source/specifications/dependency-specifiers.rst:62
msgid ""
"Versions may be specified according to the rules of the :ref:`Version "
"specifier specification <version-specifiers>`. (Note: URI is defined in :rfc:"
"`std-66 <3986>`)::"
msgstr ""
"As versões podem ser especificadas de acordo com as regras da :ref:"
"`especificação de especificadores de versão <version-specifiers>`. (Nota: "
"URI é definido em :rfc:`std-66 <3986>`)::"

#: ../source/specifications/dependency-specifiers.rst:73
msgid ""
"Environment markers allow making a specification only take effect in some "
"environments::"
msgstr ""
"Os marcadores de ambiente permitem que uma especificação só tenha efeito em "
"alguns ambientes ::"

#: ../source/specifications/dependency-specifiers.rst:102
msgid ""
"Optional components of a distribution may be specified using the extras "
"field::"
msgstr ""
"Componentes opcionais de uma distribuição podem ser especificados usando o "
"campo extras::"

#: ../source/specifications/dependency-specifiers.rst:111
msgid "Restrictions on names for extras is defined in :pep:`685`."
msgstr "Restrições de nomes para extras são definidas na :pep:`685`."

#: ../source/specifications/dependency-specifiers.rst:113
msgid "Giving us a rule for name based requirements::"
msgstr "Fornecendo uma regra para requisitos baseados em nome ::"

#: ../source/specifications/dependency-specifiers.rst:117
msgid "And a rule for direct reference specifications::"
msgstr "E uma regra para especificações de referência direta ::"

#: ../source/specifications/dependency-specifiers.rst:121
msgid "Leading to the unified rule that can specify a dependency.::"
msgstr "Levando à regra unificada que pode especificar uma dependência.::"

#: ../source/specifications/dependency-specifiers.rst:126
msgid "Whitespace"
msgstr "Espaço em branco"

#: ../source/specifications/dependency-specifiers.rst:128
msgid ""
"Non line-breaking whitespace is mostly optional with no semantic meaning. "
"The sole exception is detecting the end of a URL requirement."
msgstr ""
"O espaço em branco sem quebra de linha é principalmente opcional, sem "
"significado semântico. A única exceção é detectar o fim de um requisito de "
"URL."

#: ../source/specifications/dependency-specifiers.rst:134
msgid "Names"
msgstr "Nomes"

#: ../source/specifications/dependency-specifiers.rst:136
msgid ""
"Python distribution names are currently defined in :pep:`345`. Names act as "
"the primary identifier for distributions. They are present in all dependency "
"specifications, and are sufficient to be a specification on their own. "
"However, PyPI places strict restrictions on names - they must match a case "
"insensitive regex or they won't be accepted. Accordingly, in this document "
"we limit the acceptable values for identifiers to that regex. A full "
"redefinition of name may take place in a future metadata PEP. The regex (run "
"with re.IGNORECASE) is::"
msgstr ""
"Nomes de distribuição Python são atualmente definidos na :pep:`345`. Os "
"nomes atuam como o identificador primário para distribuições. Eles estão "
"presentes em todas as especificações de dependência e são suficientes para "
"serem uma especificação por conta própria. No entanto, PyPI impõe restrições "
"estritas aos nomes: eles devem corresponder a uma regex que não diferencie "
"maiúsculas de minúsculas ou não serão aceitos. Assim, neste documento, "
"limitamos os valores aceitáveis para identificadores a essa regex. Uma "
"redefinição completa do nome pode ocorrer em um futuro PEP de metadados. A "
"regex (executada com re.IGNORECASE) é ::"

#: ../source/specifications/dependency-specifiers.rst:150
msgid "Extras"
msgstr "Extras"

#: ../source/specifications/dependency-specifiers.rst:152
msgid ""
"An extra is an optional part of a distribution. Distributions can specify as "
"many extras as they wish, and each extra results in the declaration of "
"additional dependencies of the distribution **when** the extra is used in a "
"dependency specification. For instance::"
msgstr ""
"Um extra é uma parte opcional de uma distribuição. As distribuições podem "
"especificar quantos extras desejarem, e cada extra resulta na declaração de "
"dependências adicionais da distribuição **quando** o extra é usado em uma "
"especificação de dependência. Por exemplo ::"

#: ../source/specifications/dependency-specifiers.rst:159
msgid ""
"Extras union in the dependencies they define with the dependencies of the "
"distribution they are attached to. The example above would result in "
"requests being installed, and requests own dependencies, and also any "
"dependencies that are listed in the \"security\" extra of requests."
msgstr ""
"União de extras nas dependências que definem com as dependências da "
"distribuição à qual estão anexados. O exemplo acima resultaria na instalação "
"de solicitações e nas próprias dependências das solicitações, além de "
"quaisquer dependências listadas no extra de \"security\" das solicitações."

#: ../source/specifications/dependency-specifiers.rst:164
msgid ""
"If multiple extras are listed, all the dependencies are unioned together."
msgstr "Se vários extras forem listados, todas as dependências serão unidas."

#: ../source/specifications/dependency-specifiers.rst:169
msgid "Versions"
msgstr "Versões"

#: ../source/specifications/dependency-specifiers.rst:171
msgid ""
"See the :ref:`Version specifier specification <version-specifiers>` for more "
"detail on both version numbers and version comparisons. Version "
"specifications limit the versions of a distribution that can be used. They "
"only apply to distributions looked up by name, rather than via a URL. "
"Version comparison are also used in the markers feature. The optional "
"brackets around a version are present for compatibility with :pep:`345` but "
"should not be generated, only accepted."
msgstr ""
"Consulte a :ref:`especificação de especificadores de versão <version-"
"specifiers>` para obter mais detalhes sobre números de versão e comparações "
"de versões. As especificações de versão limitam as versões de uma "
"distribuição que podem ser usadas. Elas se aplicam apenas a distribuições "
"pesquisadas pelo nome, e não por meio de uma URL. A comparação de versões "
"também é usada no recurso de marcadores. Os colchetes opcionais em torno de "
"uma versão estão presentes para compatibilidade com :pep:`345`, mas não "
"devem ser gerados, apenas aceitos."

#: ../source/specifications/dependency-specifiers.rst:182
msgid "Environment Markers"
msgstr "Marcadores de ambiente"

#: ../source/specifications/dependency-specifiers.rst:184
msgid ""
"Environment markers allow a dependency specification to provide a rule that "
"describes when the dependency should be used. For instance, consider a "
"package that needs argparse. In Python 2.7 argparse is always present. On "
"older Python versions it has to be installed as a dependency. This can be "
"expressed as so::"
msgstr ""
"Os marcadores de ambiente permitem que uma especificação de dependência "
"forneça uma regra que descreva quando a dependência deve ser usada. Por "
"exemplo, considere um pacote que precisa de argparse. No Python 2.7, o "
"argparse está sempre presente. Em versões mais antigas Python, ele deve ser "
"instalado como uma dependência. Isso pode ser expresso como ::"

#: ../source/specifications/dependency-specifiers.rst:191
msgid ""
"A marker expression evaluates to either True or False. When it evaluates to "
"False, the dependency specification should be ignored."
msgstr ""
"Uma expressão de marcador é avaliada como True ou False. Quando for avaliado "
"como False, a especificação de dependência deve ser ignorada."

#: ../source/specifications/dependency-specifiers.rst:194
msgid ""
"The marker language is inspired by Python itself, chosen for the ability to "
"safely evaluate it without running arbitrary code that could become a "
"security vulnerability. Markers were first standardised in :pep:`345`. This "
"document fixes some issues that were observed in the design described in :"
"pep:`426`."
msgstr ""
"A linguagem do marcador é inspirada no próprio Python, escolhido pela "
"capacidade de avaliá-lo com segurança sem executar código arbitrário que "
"pode se tornar uma vulnerabilidade de segurança. Os marcadores foram "
"padronizados pela primeira vez na :pep:`345`. Este documento corrige alguns "
"problemas que foram observados no projeto descrito em :pep:`426`."

#: ../source/specifications/dependency-specifiers.rst:199
#, fuzzy
#| msgid ""
#| "Comparisons in marker expressions are typed by the comparison operator.  "
#| "The <marker_op> operators that are not in <version_cmp> perform the same "
#| "as they do for strings in Python. The <version_cmp> operators use the "
#| "version comparison rules of the :ref:`Version specifier specification "
#| "<version-specifiers>` when those are defined (that is when both sides "
#| "have a valid version specifier). If there is no defined behaviour of this "
#| "specification and the operator exists in Python, then the operator falls "
#| "back to the Python behaviour. Otherwise an error should be raised. e.g. "
#| "the following will result in  errors::"
msgid ""
"Comparisons in marker expressions are typed by the comparison operator and "
"the type of the marker value. The <marker_op> operators that are not in "
"<version_cmp> perform the same as they do for strings or sets in Python "
"based on whether the marker value is a string or set itself. The "
"<version_cmp> operators use the version comparison rules of the :ref:"
"`Version specifier specification <version-specifiers>` when those are "
"defined (that is when both sides have a valid version specifier). If there "
"is no defined behaviour of this specification and the operator exists in "
"Python, then the operator falls back to the Python behaviour for the types "
"involved. Otherwise an error should be raised. e.g. the following will "
"result in errors::"
msgstr ""
"As comparações em expressões de marcador são tipadas pelo operador de "
"comparação. Os operadores <marker_op> que não estão em <version_cmp> fazem o "
"mesmo que para strings no Python. Os operadores <version_cmp> usam as regras "
"de comparação de versão da :ref:`especificação de especificadores de versão "
"<version-specifiers>` quando são definidas (ou seja, quando ambos os lados "
"têm um especificador de versão válido). Se não houver comportamento definido "
"desta especificação e o operador existir no Python, o operador voltará ao "
"comportamento do Python. Caso contrário, um erro deve ser levantado. Por "
"exemplo, o seguinte resultará em erros ::"

#: ../source/specifications/dependency-specifiers.rst:213
msgid ""
"User supplied constants are always encoded as strings with either ``'`` or "
"``\"`` quote marks. Note that backslash escapes are not defined, but "
"existing implementations do support them. They are not included in this "
"specification because they add complexity and there is no observable need "
"for them today. Similarly we do not define non-ASCII character support: all "
"the runtime variables we are referencing are expected to be ASCII-only."
msgstr ""
"As constantes fornecidas pelo usuário são sempre codificadas como strings "
"com as aspas ``'`` ou ``\"``. Observe que os escapes de barra invertida não "
"são definidos, mas as implementações existentes os suportam. Eles não estão "
"incluídos nesta especificação porque adicionam complexidade e não há nenhuma "
"necessidade observável para eles hoje.Da mesma forma, não definimos suporte "
"a caracteres não-ASCII: espera-se que todas as variáveis de tempo de "
"execução às quais nos referimos sejam somente ASCII."

#: ../source/specifications/dependency-specifiers.rst:220
msgid ""
"The variables in the marker grammar such as \"os_name\" resolve to values "
"looked up in the Python runtime. With the exception of \"extra\" all values "
"are defined on all Python versions today - it is an error in the "
"implementation of markers if a value is not defined."
msgstr ""
"As variáveis na gramática do marcador, como \"os_name\", resolvem os valores "
"pesquisados no tempo de execução do Python. Com exceção de \"extra\" todos "
"os valores são definidos em todas as versões Python hoje -- é um erro na "
"implementação de marcadores se um valor não for definido."

#: ../source/specifications/dependency-specifiers.rst:225
msgid ""
"Unknown variables must raise an error rather than resulting in a comparison "
"that evaluates to True or False."
msgstr ""
"Variáveis desconhecidas devem gerar um erro em vez de resultar em uma "
"comparação avaliada como True ou False."

#: ../source/specifications/dependency-specifiers.rst:228
msgid ""
"Variables whose value cannot be calculated on a given Python implementation "
"should evaluate to ``0`` for versions, and an empty string for all other "
"variables."
msgstr ""
"As variáveis cujo valor não pode ser calculado em uma determinada "
"implementação do Python devem ser avaliadas como ``0`` para versões e uma "
"string vazia para todas as outras variáveis."

#: ../source/specifications/dependency-specifiers.rst:232
msgid ""
"The \"extra\" variable is special. It is used by wheels to signal which "
"specifications apply to a given extra in the wheel ``METADATA`` file, but "
"since the ``METADATA`` file is based on a draft version of :pep:`426`, there "
"is no current specification for this. Regardless, outside of a context where "
"this special handling is taking place, the \"extra\" variable should result "
"in an error like all other unknown variables."
msgstr ""
"A variável \"extra\" é especial. É usada pelo wheels para sinalizar quais "
"especificações se aplicam a um determinado extra no arquivo ``METADATA`` do "
"wheel, mas como o arquivo ``METADATA`` é baseado em uma versão de rascunho "
"da :pep:`426`, não há especificação atual para isso. Independentemente "
"disso, fora de um contexto em que esse tratamento especial esteja ocorrendo, "
"a variável \"extra\" deve resultar em um erro como todas as outras variáveis "
"desconhecidas."

#: ../source/specifications/dependency-specifiers.rst:239
msgid ""
"The \"extras\" and \"dependency_groups\" variables are also special. They "
"are used to specify any requested extras or dependency groups when "
"installing from a lock file. Outside of the context of lock files, these two "
"variables should result in an error like all other unknown variables."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:247
msgid "Marker"
msgstr "Marcador"

#: ../source/specifications/dependency-specifiers.rst:248
msgid "Python equivalent"
msgstr "Equivalente no Python"

#: ../source/specifications/dependency-specifiers.rst:249
msgid "Type"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:250
msgid "Sample values"
msgstr "Valores de amostra"

#: ../source/specifications/dependency-specifiers.rst:251
msgid "``os_name``"
msgstr "``os_name``"

#: ../source/specifications/dependency-specifiers.rst:252
#, fuzzy
msgid ":py:data:`os.name`"
msgstr "``os.name``"

#: ../source/specifications/dependency-specifiers.rst:253
#: ../source/specifications/dependency-specifiers.rst:257
#: ../source/specifications/dependency-specifiers.rst:262
#: ../source/specifications/dependency-specifiers.rst:266
#: ../source/specifications/dependency-specifiers.rst:270
#: ../source/specifications/dependency-specifiers.rst:274
#: ../source/specifications/dependency-specifiers.rst:278
#: ../source/specifications/dependency-specifiers.rst:292
#: ../source/specifications/dependency-specifiers.rst:301
msgid "String"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:254
msgid "``posix``, ``java``"
msgstr "``posix``, ``java``"

#: ../source/specifications/dependency-specifiers.rst:255
msgid "``sys_platform``"
msgstr "``sys_platform``"

#: ../source/specifications/dependency-specifiers.rst:256
#, fuzzy
msgid ":py:data:`sys.platform`"
msgstr "``sys.platform``"

#: ../source/specifications/dependency-specifiers.rst:258
msgid ""
"``linux``, ``linux2``, ``darwin``, ``java1.8.0_51`` (note that \"linux\" is "
"from Python3 and \"linux2\" from Python2)"
msgstr ""
"``linux``, ``linux2``, ``darwin``, ``java1.8.0_51`` (observe que \"linux\" é "
"do Python3 e \"linux2\" do Python2)"

#: ../source/specifications/dependency-specifiers.rst:260
msgid "``platform_machine``"
msgstr "``platform_machine``"

#: ../source/specifications/dependency-specifiers.rst:261
#, fuzzy
msgid ":py:func:`platform.machine()`"
msgstr "``platform.machine()``"

#: ../source/specifications/dependency-specifiers.rst:263
#: ../source/specifications/platform-compatibility-tags.rst:256
msgid "``x86_64``"
msgstr "``x86_64``"

#: ../source/specifications/dependency-specifiers.rst:264
msgid "``platform_python_implementation``"
msgstr "``platform_python_implementation``"

#: ../source/specifications/dependency-specifiers.rst:265
#, fuzzy
msgid ":py:func:`platform.python_implementation()`"
msgstr "``platform.python_implementation()``"

#: ../source/specifications/dependency-specifiers.rst:267
msgid "``CPython``, ``Jython``"
msgstr "``CPython``, ``Jython``"

#: ../source/specifications/dependency-specifiers.rst:268
msgid "``platform_release``"
msgstr "``platform_release``"

#: ../source/specifications/dependency-specifiers.rst:269
#, fuzzy
msgid ":py:func:`platform.release()`"
msgstr "``platform.release()``"

#: ../source/specifications/dependency-specifiers.rst:271
msgid "``3.14.1-x86_64-linode39``, ``14.5.0``, ``1.8.0_51``"
msgstr "``3.14.1-x86_64-linode39``, ``14.5.0``, ``1.8.0_51``"

#: ../source/specifications/dependency-specifiers.rst:272
msgid "``platform_system``"
msgstr "``platform_system``"

#: ../source/specifications/dependency-specifiers.rst:273
#, fuzzy
msgid ":py:func:`platform.system()`"
msgstr "``platform.system()``"

#: ../source/specifications/dependency-specifiers.rst:275
msgid "``Linux``, ``Windows``, ``Java``"
msgstr "``Linux``, ``Windows``, ``Java``"

#: ../source/specifications/dependency-specifiers.rst:276
msgid "``platform_version``"
msgstr "``platform_version``"

#: ../source/specifications/dependency-specifiers.rst:277
#, fuzzy
msgid ":py:func:`platform.version()`"
msgstr "``platform.version()``"

#: ../source/specifications/dependency-specifiers.rst:279
msgid ""
"``#1 SMP Fri Apr 25 13:07:35 EDT 2014`` ``Java HotSpot(TM) 64-Bit Server VM, "
"25.51-b03, Oracle Corporation`` ``Darwin Kernel Version 14.5.0: Wed Jul 29 "
"02:18:53 PDT 2015; root:xnu-2782.40.9~2/RELEASE_X86_64``"
msgstr ""
"``#1 SMP Fri Apr 25 13:07:35 EDT 2014`` ``Java HotSpot(TM) 64-Bit Server VM, "
"25.51-b03, Oracle Corporation`` ``Darwin Kernel Version 14.5.0: Wed Jul 29 "
"02:18:53 PDT 2015; root:xnu-2782.40.9~2/RELEASE_X86_64``"

#: ../source/specifications/dependency-specifiers.rst:282
msgid "``python_version``"
msgstr "``python_version``"

#: ../source/specifications/dependency-specifiers.rst:283
msgid "``'.'.join(platform.python_version_tuple()[:2])``"
msgstr "``'.'.join(platform.python_version_tuple()[:2])``"

#: ../source/specifications/dependency-specifiers.rst:284
#: ../source/specifications/dependency-specifiers.rst:288
#: ../source/specifications/dependency-specifiers.rst:296
#, fuzzy
#| msgid "Version specifiers"
msgid ":ref:`Version <version-specifiers>`"
msgstr "Especificadores de versão"

#: ../source/specifications/dependency-specifiers.rst:285
msgid "``3.4``, ``2.7``"
msgstr "``3.4``, ``2.7``"

#: ../source/specifications/dependency-specifiers.rst:286
msgid "``python_full_version``"
msgstr "``python_full_version``"

#: ../source/specifications/dependency-specifiers.rst:287
#, fuzzy
msgid ":py:func:`platform.python_version()`"
msgstr "``platform.python_version()``"

#: ../source/specifications/dependency-specifiers.rst:289
#: ../source/specifications/dependency-specifiers.rst:297
msgid "``3.4.0``, ``3.5.0b1``"
msgstr "``3.4.0``, ``3.5.0b1``"

#: ../source/specifications/dependency-specifiers.rst:290
msgid "``implementation_name``"
msgstr "``implementation_name``"

#: ../source/specifications/dependency-specifiers.rst:291
#, fuzzy
msgid ":py:data:`sys.implementation.name <sys.implementation>`"
msgstr "``sys.implementation.name``"

#: ../source/specifications/dependency-specifiers.rst:293
msgid "``cpython``"
msgstr "``cpython``"

#: ../source/specifications/dependency-specifiers.rst:294
msgid "``implementation_version``"
msgstr "``implementation_version``"

#: ../source/specifications/dependency-specifiers.rst:295
msgid "see definition below"
msgstr "veja a definição abaixo"

#: ../source/specifications/dependency-specifiers.rst:298
msgid "``extra``"
msgstr "``extra``"

#: ../source/specifications/dependency-specifiers.rst:299
#: ../source/specifications/dependency-specifiers.rst:304
#: ../source/specifications/dependency-specifiers.rst:309
msgid ""
"An error except when defined by the context interpreting the specification."
msgstr ""
"Um erro, exceto quando definido pelo contexto que interpreta a especificação."

#: ../source/specifications/dependency-specifiers.rst:302
#, fuzzy
msgid "``toml``"
msgstr "pyproject.toml"

#: ../source/specifications/dependency-specifiers.rst:303
#: ../source/specifications/pylock-toml.rst:108
#, fuzzy
#| msgid "``extra``"
msgid "``extras``"
msgstr "``extra``"

#: ../source/specifications/dependency-specifiers.rst:306
#: ../source/specifications/dependency-specifiers.rst:311
msgid "Set of strings"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:307
msgid "``{\"toml\"}``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:308
#, fuzzy
#| msgid "``dependencies``"
msgid "``dependency_groups``"
msgstr "``dependencies``"

#: ../source/specifications/dependency-specifiers.rst:312
#, fuzzy
#| msgid "``test``"
msgid "``{\"test\"}``"
msgstr "``test``"

#: ../source/specifications/dependency-specifiers.rst:314
#, fuzzy
msgid ""
"The ``implementation_version`` marker variable is derived from :py:data:`sys."
"implementation.version <sys.implementation>`:"
msgstr ""
"A variável do marcador ``implementation_version`` é derivada de ``sys."
"implementation.version``::"

#: ../source/specifications/dependency-specifiers.rst:331
msgid ""
"This environment markers section, initially defined through :pep:`508`, "
"supersedes the environment markers section in :pep:`345`."
msgstr ""
"Esta seção de marcadores de ambiente, inicialmente definida na :pep:`508`, "
"substitui a seção de marcadores de ambiente na :pep:`345`."

#: ../source/specifications/dependency-specifiers.rst:337
msgid "Complete Grammar"
msgstr "Gramática completa"

#: ../source/specifications/dependency-specifiers.rst:339
msgid "The complete parsley grammar::"
msgstr "A gramática completa do persley ::"

#: ../source/specifications/dependency-specifiers.rst:446
#, fuzzy
msgid "A test program - if the grammar is in a string ``grammar``:"
msgstr ""
"Um programa de teste -- se a gramática estiver em uma string ``grammar``::"

#: ../source/specifications/dependency-specifiers.rst:518
msgid "November 2015: This specification was approved through :pep:`508`."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:519
#, fuzzy
msgid ""
"July 2019: The definition of ``python_version`` was `changed <python-version-"
"change_>`_ from ``platform.python_version()[:3]`` to ``'.'.join(platform."
"python_version_tuple()[:2])``, to accommodate potential future versions of "
"Python with 2-digit major and minor versions (e.g. 3.10). [#future_versions]_"
msgstr ""
"A definição de ``python_version`` foi alterada de ``platform.python_version()"
"[:3]`` para ``'.'.join(platform.python_version_tuple()[:2])``, para acomodar "
"potenciais futuras versões do Python com versões principais e secundárias de "
"2 dígitos (por exemplo, 3.10). [#future_versions]_"

#: ../source/specifications/dependency-specifiers.rst:524
msgid ""
"June 2024: The definition of ``version_many`` was changed to allow trailing "
"commas, matching with the behavior of the Python implementation that has "
"been in use since late 2022."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:527
msgid ""
"April 2025: Added ``extras`` and ``dependency_groups`` for :ref:`lock-file-"
"spec` as approved through :pep:`751`."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:529
#: ../source/specifications/name-normalization.rst:56
msgid ""
"August 2025: The suggested name validation regex was fixed to match the "
"field specification (it previously finished with ``$`` instead of ``\\Z``, "
"incorrectly permitting trailing newlines)"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:537
msgid ""
"pip, the recommended installer for Python packages (http://pip.readthedocs."
"org/en/stable/)"
msgstr ""
"pip, o instalador recomendado para pacotes Python (http://pip.readthedocs."
"org/en/stable/)"

#: ../source/specifications/dependency-specifiers.rst:540
msgid "The parsley PEG library. (https://pypi.python.org/pypi/parsley/)"
msgstr ""
"A biblioteca de PEG do parsley. (https://pypi.python.org/pypi/parsley/)"

#: ../source/specifications/dependency-specifiers.rst:543
msgid ""
"Future Python versions might be problematic with the definition of "
"Environment Marker Variable ``python_version`` (https://github.com/python/"
"peps/issues/560)"
msgstr ""
"Versões futuras do Python podem ser problemáticas com a definição da "
"variável do marcador de ambiente ``python_version`` (https://github.com/"
"python/peps/issues/560)"

#: ../source/specifications/direct-url.rst:6
msgid "Recording the Direct URL Origin of installed distributions"
msgstr "Gravando a Origem da URL Direta de distribuições instaladas"

#: ../source/specifications/direct-url.rst:8
msgid ""
"This document specifies a :file:`direct_url.json` file in the ``*.dist-"
"info`` directory of an installed distribution, to record the Direct URL "
"Origin of the distribution. The general structure and usage of ``*.dist-"
"info`` directories is described in :ref:`recording-installed-packages`."
msgstr ""
"Este documento especifica um arquivo :file:`direct_url.json` no diretório "
"``*.dist-info`` de uma distribuição instalada, para registrar a origem da "
"URL direta da distribuição. A estrutura geral e uso de diretórios ``*.dist-"
"info`` é descrita em :ref:`recording-installed-packages`."

#: ../source/specifications/direct-url.rst:17
msgid ""
"The :file:`direct_url.json` file MUST be created in the :file:`*.dist-info` "
"directory by installers when installing a distribution from a requirement "
"specifying a direct URL reference (including a VCS URL)."
msgstr ""
"O arquivo :file:`direct_url.json` DEVE ser criado no diretório :file:`*.dist-"
"info` pelos instaladores ao instalar uma distribuição a partir de um "
"requisito especificando uma referência de URL direta (incluindo uma URL de "
"VCS)."

#: ../source/specifications/direct-url.rst:21
#: ../source/specifications/recording-installed-packages.rst:222
msgid ""
"This file MUST NOT be created when installing a distribution from an other "
"type of requirement (i.e. name plus version specifier)."
msgstr ""
"Este arquivo NÃO DEVE ser criado ao instalar uma distribuição de outro tipo "
"de requisito (ou seja, nome mais especificador de versão)."

#: ../source/specifications/direct-url.rst:24
msgid ""
"This JSON file MUST be a UTF-8 encoded, :rfc:`8259` compliant, serialization "
"of the :doc:`direct-url-data-structure`."
msgstr ""
"Este arquivo JSON DEVE ser codificado em UTF-8, compatível com :rfc:`8259`, "
"serialização da :doc:`direct-url-data-structure`."

#: ../source/specifications/direct-url.rst:29
msgid ""
"When the requested URL has the file:// scheme and points to a local "
"directory that happens to contain a VCS checkout, installers MUST NOT "
"attempt to infer any VCS information and therefore MUST NOT output any VCS "
"related information (such as ``vcs_info``) in :file:`direct_url.json`."
msgstr ""
"Quando a URL solicitada tem o esquema file:// e aponta para um diretório "
"local que contém um checkout VCS, os instaladores NÃO DEVEM tentar inferir "
"nenhuma informação VCS e, portanto, NÃO DEVEM emitir nenhuma informação "
"relacionada ao VCS (como ``vcs_info``) in :file:`direct_url.json`."

#: ../source/specifications/direct-url.rst:36
msgid ""
"As a general rule, installers should as much as possible preserve the "
"information that was provided in the requested URL when generating :file:"
"`direct_url.json`. For example user:password environment variables should be "
"preserved and ``requested_revision`` should reflect the revision that was "
"provided in the requested URL as faithfully as possible. This information is "
"however *enriched* with more precise data, such as ``commit_id``."
msgstr ""
"Como regra geral, os instaladores devem, tanto quanto possível, preservar as "
"informações fornecidas na URL solicitada ao gerar :file:`direct_url.json`. "
"Por exemplo, as variáveis de ambiente usuário:senha devem ser preservadas e "
"``required_revision`` deve refletir a revisão que foi fornecida na URL "
"solicitada o mais fielmente possível. No entanto, essas informações são "
"*enriquecidas* com dados mais precisos, como ``commit_id``."

#: ../source/specifications/direct-url.rst:45
msgid "Example pip commands and their effect on direct_url.json"
msgstr "Exemplo de comandos pip e seus efeitos em direct_url.json"

#: ../source/specifications/direct-url.rst:47
msgid "Commands that generate a ``direct_url.json``:"
msgstr "Comandos que geram um ``direct_url.json``:"

#: ../source/specifications/direct-url.rst:49
#, fuzzy
msgid "``pip install https://example.com/app-1.0.tgz``"
msgstr "pip install https://example.com/app-1.0.tgz"

#: ../source/specifications/direct-url.rst:50
#, fuzzy
msgid "``pip install https://example.com/app-1.0.whl``"
msgstr "pip install https://example.com/app-1.0.whl"

#: ../source/specifications/direct-url.rst:51
msgid ""
"``pip install \"app @ git+https://example.com/repo/app."
"git#subdirectory=setup\"``"
msgstr ""
"``pip install \"app @ git+https://example.com/repo/app."
"git#subdirectory=setup\"``"

#: ../source/specifications/direct-url.rst:52
#, fuzzy
msgid "``pip install ./app``"
msgstr "pip install ./app"

#: ../source/specifications/direct-url.rst:53
#, fuzzy
msgid "``pip install file:///home/user/app``"
msgstr "pip install file:///home/user/app"

#: ../source/specifications/direct-url.rst:54
msgid ""
"``pip install --editable \"app @ git+https://example.com/repo/app."
"git#subdirectory=setup\"`` (in which case, ``url`` will be the local "
"directory where the git repository has been cloned to, and ``dir_info`` will "
"be present with ``\"editable\": true`` and no ``vcs_info`` will be set)"
msgstr ""
"``pip install --editable \"app @ git+https://example.com/repo/app."
"git#subdirectory=setup\"`` (caso em que, ``url`` será o diretório local para "
"o qual o repositório git foi clonado e ``dir_info`` estará presente com "
"``\"editable\": true`` e nenhum ``vcs_info`` será definido)"

#: ../source/specifications/direct-url.rst:58
#, fuzzy
msgid "``pip install -e ./app``"
msgstr "pip install -e ./app"

#: ../source/specifications/direct-url.rst:60
msgid "Commands that *do not* generate a ``direct_url.json``"
msgstr "Comandos que *não* geram um ``direct_url.json``"

#: ../source/specifications/direct-url.rst:62
#, fuzzy
msgid "``pip install app``"
msgstr "pip install app"

#: ../source/specifications/direct-url.rst:63
#, fuzzy
msgid "``pip install app --no-index --find-links https://example.com/``"
msgstr "pip install app --no-index --find-links https://example.com/"

#: ../source/specifications/direct-url.rst:69
msgid "March 2020: This specification was approved through :pep:`610`."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:7
msgid "Direct URL Data Structure"
msgstr "Estrutura de dados de URL direta"

#: ../source/specifications/direct-url-data-structure.rst:9
msgid ""
"This document specifies a JSON-serializable abstract data structure that can "
"represent URLs to python projects and distribution artifacts such as VCS "
"source trees, local source trees, source distributions and wheels."
msgstr ""
"Este documento especifica uma estrutura de dados abstrata serializável em "
"JSON que pode representar URLs para projetos python e artefatos de "
"distribuição, como árvores de fonte VCS, árvores de fonte local, "
"distribuições fonte e wheels."

#: ../source/specifications/direct-url-data-structure.rst:13
#, fuzzy
msgid ""
"At time of writing, it is not formally specified how to merge the parts of "
"this data structure into a single URL that can be passed to tools. A common "
"representation is the pip URL format (`VCS Support <pip-vcs-support_>`_), "
"other examples are provided in the :ref:`Version specifier specification "
"<version-specifiers>`."
msgstr ""
"A representação dos componentes desta estrutura de dados como uma URL :rfc:"
"`1738` não é especificada formalmente no momento da escrita. Uma "
"representação comum é o formato de URL do pip. Outros exemplos são "
"fornecidos na :ref:`especificação de especificadores de versão <version-"
"specifiers>`."

#: ../source/specifications/direct-url-data-structure.rst:21
msgid ""
"The Direct URL Data Structure MUST be a dictionary, serializable to JSON "
"according to :rfc:`8259`."
msgstr ""
"A estrutura de dados da URL direta DEVE ser um dicionário serializável para "
"JSON de acordo com :rfc:`8259`."

#: ../source/specifications/direct-url-data-structure.rst:24
msgid ""
"It MUST contain at least two fields. The first one is ``url``, with type "
"``string``. Its content must be a valid URL according to the `WHATWG URL "
"Standard <whatwg-url-standard_>`_."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:28
#, fuzzy
msgid ""
"Depending on what ``url`` refers to, the second field MUST be one of "
"``vcs_info`` (if ``url`` is a VCS reference), ``archive_info`` (if ``url`` "
"is a source archive or a wheel), or ``dir_info`` (if ``url``  is a local "
"directory). These info fields have a (possibly empty) subdictionary as "
"value, with the possible keys defined below."
msgstr ""
"DEVE conter pelo menos dois campos. O primeiro é ``url``, com tipo "
"``string``. Dependendo de qual ``url`` se refere, o segundo campo DEVE ser "
"um de ``vcs_info`` (se ``url`` é uma referência de VCS), ``archive_info`` "
"(se ``url`` é um pacote de código-fonte ou um wheel) ou ``dir_info`` (se "
"``url`` é um diretório local). Estes campos informacionais têm um "
"subdicionário (possivelmente vazio) como valor, com as chaves possíveis "
"definidas abaixo."

#: ../source/specifications/direct-url-data-structure.rst:35
msgid "Security Considerations"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:37
msgid ""
"When persisted, ``url`` MUST be stripped of any sensitive authentication "
"information, for security reasons."
msgstr ""
"Quando persistido, ``url`` DEVE ser podado a fim de retirar qualquer "
"informação sensível de autenticação, por razões de segurança."

#: ../source/specifications/direct-url-data-structure.rst:40
#, fuzzy
msgid ""
"The user:password section of the URL MAY however be composed of environment "
"variables, matching the following regular expression:"
msgstr ""
"A seção usuário:senha da URL PODE, entretanto, ser composta de variáveis de "
"ambiente, correspondendo à seguinte expressão regular::"

#: ../source/specifications/direct-url-data-structure.rst:48
#, fuzzy
msgid ""
"Additionally, the user:password section of the URL MAY be a well-known, non "
"security sensitive string. A typical example is ``git`` in the case of a URL "
"such as ``ssh://git@gitlab.com/user/repo``."
msgstr ""
"Além disso, a seção usuário:senha da URL PODE ser uma string bem conhecida e "
"não sensível à segurança. Um exemplo típico é ``git`` no caso de uma URL "
"como ``ssh://git@gitlab.com/user/repo``."

#: ../source/specifications/direct-url-data-structure.rst:55
msgid "VCS URLs"
msgstr "URLs de VCS"

#: ../source/specifications/direct-url-data-structure.rst:57
msgid ""
"When ``url`` refers to a VCS repository, the ``vcs_info`` key MUST be "
"present as a dictionary with the following keys:"
msgstr ""
"Quando a ``url`` faz referência a um repositório VCS, a chave ``vcs_info`` "
"DEVE estar presente como um dicionário com as seguintes chaves:"

#: ../source/specifications/direct-url-data-structure.rst:60
msgid ""
"A ``vcs`` key (type ``string``) MUST be present, containing the name of the "
"VCS (i.e. one of ``git``, ``hg``, ``bzr``, ``svn``). Other VCS's SHOULD be "
"registered by writing a PEP to amend this specification. The ``url`` value "
"MUST be compatible with the corresponding VCS, so an installer can hand it "
"off without transformation to a checkout/download command of the VCS."
msgstr ""
"Uma chave ``vcs`` (tipo ``string``) DEVE estar presente, contendo o nome do "
"VCS (ou seja, um de ``git``, ``hg``, ``bzr``, ``svn``). Outros VCS DEVERIAM "
"ser registrados escrevendo uma PEP para alterar esta especificação. O valor "
"``url`` DEVE ser compatível com o VCS correspondente, para que um instalador "
"possa entregá-lo sem transformação em um comando de checkout/download do VCS."

#: ../source/specifications/direct-url-data-structure.rst:66
#, fuzzy
msgid ""
"A ``requested_revision`` key (type ``string``) MAY be present naming a "
"branch/tag/ref/commit/revision/etc (in a format compatible with the VCS). "
"This field MUST match the revision requested by the user and MUST NOT exist "
"when the user did not select a specific revision."
msgstr ""
"Uma chave ``required_revision`` (tipo ``string``) PODE estar presente "
"nomeando um branch/tag/ref/commit/revisão/etc (em um formato compatível com "
"o VCS) para instalar."

#: ../source/specifications/direct-url-data-structure.rst:70
msgid ""
"A ``commit_id`` key (type ``string``) MUST be present, containing the exact "
"commit/revision number that was/is to be installed. If the VCS supports "
"commit-hash based revision identifiers, such commit-hash MUST be used as "
"``commit_id`` in order to reference an immutable version of the source code."
msgstr ""
"Uma chave ``commit_id`` (tipo ``string``) DEVE estar presente, contendo o "
"número exato de commit/revisão que foi/será instalado. Se o VCS oferecer "
"suporte a identificadores de revisão baseados em hash de commit, tal hash de "
"commit DEVE ser usado como ``commit_id`` para referenciar a versão imutável "
"do código-fonte."

#: ../source/specifications/direct-url-data-structure.rst:80
msgid "Archive URLs"
msgstr "URLs de arquivos"

#: ../source/specifications/direct-url-data-structure.rst:82
msgid ""
"When ``url`` refers to a source archive or a wheel, the ``archive_info`` key "
"MUST be present as a dictionary with the following keys:"
msgstr ""
"Quando ``url`` se refere a um arquivo fonte ou wheel, a chave "
"``archive_info`` DEVE estar presente como um dicionário com as seguintes "
"chaves:"

#: ../source/specifications/direct-url-data-structure.rst:85
msgid ""
"A ``hashes`` key SHOULD be present as a dictionary mapping a hash name to a "
"hex encoded digest of the file."
msgstr ""
"Uma chave ``hashes`` DEVE estar presente como um dicionário mapeando um nome "
"de hash para um resumo de arquivo codificado em hex."

#: ../source/specifications/direct-url-data-structure.rst:88
msgid ""
"Multiple hashes can be included, and it is up to the consumer to decide what "
"to do with multiple hashes (it may validate all of them or a subset of them, "
"or nothing at all)."
msgstr ""
"Vários hashes podem ser incluídos e cabe ao consumidor decidir o que fazer "
"com vários hashes (pode validar todos eles ou um subconjunto deles, ou nada)."

#: ../source/specifications/direct-url-data-structure.rst:92
msgid "These hash names SHOULD always be normalized to be lowercase."
msgstr ""
"Esses nomes de hash DEVEM sempre ser normalizados para letras minúsculas."

#: ../source/specifications/direct-url-data-structure.rst:94
#, fuzzy
msgid ""
"Any hash algorithm available via :py:mod:`hashlib` (specifically any that "
"can be passed to :py:func:`hashlib.new()` and do not require additional "
"parameters) can be used as a key for the hashes dictionary. At least one "
"secure algorithm from :py:data:`hashlib.algorithms_guaranteed` SHOULD always "
"be included. At time of writing, ``sha256`` specifically is recommended."
msgstr ""
"Qualquer algoritmo de hash disponível via ``hashlib`` (especificamente "
"qualquer um que possa ser passado para ``hashlib.new()`` e não requeira "
"parâmetros adicionais) pode ser usado como uma chave para o dicionário de "
"hashes. Pelo menos um algoritmo seguro de ``hashlib.algorithms_guaranteed`` "
"DEVE sempre ser incluído. No momento da escrita, ``sha256`` especificamente "
"é recomendado."

#: ../source/specifications/direct-url-data-structure.rst:100
msgid ""
"A deprecated ``hash`` key (type ``string``) MAY be present for backwards "
"compatibility purposes, with value ``<hash-algorithm>=<expected-hash>``."
msgstr ""
"Uma chave descontinuada ``hash`` (tipo ``string``) PODE estar presente para "
"fins de compatibilidade com versões anteriores, com valor ``<hash-"
"algorithm>=<expected-hash>``."

#: ../source/specifications/direct-url-data-structure.rst:103
msgid ""
"Producers of the data structure SHOULD emit the ``hashes`` key whether one "
"or multiple hashes are available. Producers SHOULD continue to emit the "
"``hash`` key in contexts where they did so before, so as to keep backwards "
"compatibility for existing clients."
msgstr ""
"Os produtores da estrutura de dados DEVEM emitir a chave ``hashes`` se um ou "
"vários hashes estiverem disponíveis. Os produtores DEVEM continuar a emitir "
"a chave ``hash`` em contextos onde o faziam antes, de modo a manter a "
"compatibilidade com versões anteriores para clientes existentes."

#: ../source/specifications/direct-url-data-structure.rst:107
msgid ""
"When both the ``hash`` and ``hashes`` keys are present, the hash represented "
"in the ``hash`` key MUST also be present in the ``hashes`` dictionary, so "
"consumers can consider the ``hashes`` key only if it is present, and fall "
"back to ``hash`` otherwise."
msgstr ""
"Quando as chaves ``hash`` e ``hashes`` estão presentes, o hash representado "
"na chave ``hash`` DEVE também estar presente no dicionário ``hashes``, para "
"que os consumidores possam considerar a chave ``hashes`` apenas se estiver "
"presente, e voltar para ``hash`` caso contrário."

#: ../source/specifications/direct-url-data-structure.rst:114
msgid "Local directories"
msgstr "Diretórios locais"

#: ../source/specifications/direct-url-data-structure.rst:116
msgid ""
"When ``url`` refers to a local directory, the ``dir_info`` key MUST be "
"present as a dictionary with the following key:"
msgstr ""
"Quando ``url`` se refere a um diretório local, a chave ``dir_info`` DEVE "
"estar presente como um dicionário com a seguinte chave:"

#: ../source/specifications/direct-url-data-structure.rst:119
msgid ""
"``editable`` (type: ``boolean``): ``true`` if the distribution was/is to be "
"installed in editable mode, ``false`` otherwise. If absent, default to "
"``false``."
msgstr ""
"``editable`` (tipo: ``boolean``): ``true`` se a distribuição foi/será "
"instalada em modo editável, ``false`` caso contrário. Se ausente, é usado o "
"padrão ``false``."

#: ../source/specifications/direct-url-data-structure.rst:122
msgid ""
"When ``url`` refers to a local directory, it MUST have the ``file`` scheme "
"and be compliant with :rfc:`8089`. In particular, the path component must be "
"absolute. Symbolic links SHOULD be preserved when making relative paths "
"absolute."
msgstr ""
"Quando ``url`` se refere a um diretório local, ele DEVE ter o esquema "
"``file`` e ser compatível com :rfc:`8089` Em particular, o componente do "
"caminho deve ser absoluto. Links simbólicos DEVERIAM ser preservados ao "
"tornar os caminhos relativos absolutos."

#: ../source/specifications/direct-url-data-structure.rst:130
msgid "Projects in subdirectories"
msgstr "Projetos em subdiretórios"

#: ../source/specifications/direct-url-data-structure.rst:132
msgid ""
"A top-level ``subdirectory`` field MAY be present containing a directory "
"path, relative to the root of the VCS repository, source archive or local "
"directory, to specify where ``pyproject.toml`` or ``setup.py`` is located."
msgstr ""
"Um campo ``subdirectory`` de nível superior PODE estar presente contendo um "
"caminho de diretório, relativo à raiz do repositório VCS, arquivo fonte ou "
"diretório local, para especificar onde ``pyproject.toml`` ou ``setup.py`` "
"está localizado."

#: ../source/specifications/direct-url-data-structure.rst:139
msgid "Registered VCS"
msgstr "VCS registrados"

#: ../source/specifications/direct-url-data-structure.rst:141
msgid ""
"This section lists the registered VCS's; expanded, VCS-specific information "
"on how to use the ``vcs``, ``requested_revision``, and other fields of "
"``vcs_info``; and in some cases additional VCS-specific fields. Tools MAY "
"support other VCS's although it is RECOMMENDED to register them by writing a "
"PEP to amend this specification. The ``vcs`` field SHOULD be the command "
"name (lowercased). Additional fields that would be necessary to support such "
"VCS SHOULD be prefixed with the VCS command name."
msgstr ""
"Esta seção lista os VCS registrados; expandidos, informações específicas do "
"VCS sobre como usar ``vcs``, ``required_revision`` e outros campos de "
"``vcs_info``; e, em alguns casos, campos adicionais específicos de VCS. As "
"ferramentas PODEM oferecer suporte a outros VCS, embora seja RECOMENDADO "
"registrá-las escrevendo uma PEP para alterar esta especificação. O campo "
"``vcs`` DEVERIA ser o nome do comando (em letras minúsculas). Os campos "
"adicionais que seriam necessários para oferecer suporte a esse VCS DEVERIAM "
"ser prefixados com o nome do comando VCS."

#: ../source/specifications/direct-url-data-structure.rst:151
msgid "Git"
msgstr "Git"

#: ../source/specifications/direct-url-data-structure.rst:154
#: ../source/specifications/direct-url-data-structure.rst:181
#: ../source/specifications/direct-url-data-structure.rst:199
#: ../source/specifications/direct-url-data-structure.rst:217
msgid "Home page"
msgstr "Site"

#: ../source/specifications/direct-url-data-structure.rst:154
msgid "https://git-scm.com/"
msgstr "https://git-scm.com/"

#: ../source/specifications/direct-url-data-structure.rst:157
#: ../source/specifications/direct-url-data-structure.rst:184
#: ../source/specifications/direct-url-data-structure.rst:202
#: ../source/specifications/direct-url-data-structure.rst:220
msgid "vcs command"
msgstr "Comando vcs"

#: ../source/specifications/direct-url-data-structure.rst:157
#: ../source/specifications/direct-url-data-structure.rst:160
msgid "git"
msgstr "git"

#: ../source/specifications/direct-url-data-structure.rst:160
#: ../source/specifications/direct-url-data-structure.rst:187
#: ../source/specifications/direct-url-data-structure.rst:205
#: ../source/specifications/direct-url-data-structure.rst:223
msgid "``vcs`` field"
msgstr "Campo ``vcs``"

#: ../source/specifications/direct-url-data-structure.rst:164
#: ../source/specifications/direct-url-data-structure.rst:190
#: ../source/specifications/direct-url-data-structure.rst:208
#: ../source/specifications/direct-url-data-structure.rst:227
msgid "``requested_revision`` field"
msgstr "Campo ``requested_revision``"

#: ../source/specifications/direct-url-data-structure.rst:163
msgid ""
"A tag name, branch name, Git ref, commit hash, shortened commit hash, or "
"other commit-ish."
msgstr ""
"Um nome de tag, nome de branch, ref Git, hash de commit, hash de commit "
"encurtado ou outra coisa relacionada a commit."

#: ../source/specifications/direct-url-data-structure.rst:167
#: ../source/specifications/direct-url-data-structure.rst:193
#: ../source/specifications/direct-url-data-structure.rst:211
#: ../source/specifications/direct-url-data-structure.rst:232
msgid "``commit_id`` field"
msgstr "Campo ``commit_id``"

#: ../source/specifications/direct-url-data-structure.rst:167
msgid "A commit hash (40 hexadecimal characters sha1)."
msgstr "Um hash de confirmação (40 caracteres hexadecimais sha1)."

#: ../source/specifications/direct-url-data-structure.rst:171
msgid ""
"Tools can use the ``git show-ref`` and ``git symbolic-ref`` commands to "
"determine if the ``requested_revision`` corresponds to a Git ref. In turn, a "
"ref beginning with ``refs/tags/`` corresponds to a tag, and a ref beginning "
"with ``refs/remotes/origin/`` after cloning corresponds to a branch."
msgstr ""
"As ferramentas podem usar os comandos ``git show-ref`` e ``git symbolic-"
"ref`` para determinar se o ``required_revision`` corresponde a um ref Git. "
"Por sua vez, um ref começando com ``refs/tags/`` corresponde a uma tag, e um "
"ref começando com ``refs/remotes/origin/`` após a clonagem corresponde a um "
"branch."

#: ../source/specifications/direct-url-data-structure.rst:178
msgid "Mercurial"
msgstr "Mercurial"

#: ../source/specifications/direct-url-data-structure.rst:181
msgid "https://www.mercurial-scm.org/"
msgstr "https://www.mercurial-scm.org/"

#: ../source/specifications/direct-url-data-structure.rst:184
#: ../source/specifications/direct-url-data-structure.rst:187
msgid "hg"
msgstr "hg"

#: ../source/specifications/direct-url-data-structure.rst:190
msgid "A tag name, branch name, changeset ID, shortened changeset ID."
msgstr ""
"Um nome de tag, nome de branch, ID de changeset, ID de changeset abreviado."

#: ../source/specifications/direct-url-data-structure.rst:193
msgid "A changeset ID (40 hexadecimal characters)."
msgstr "Um ID de changeset (40 caracteres hexadecimais)."

#: ../source/specifications/direct-url-data-structure.rst:196
msgid "Bazaar"
msgstr "Bazaar"

#: ../source/specifications/direct-url-data-structure.rst:199
#, fuzzy
msgid "https://www.breezy-vcs.org/"
msgstr "https://www.mercurial-scm.org/"

#: ../source/specifications/direct-url-data-structure.rst:202
#: ../source/specifications/direct-url-data-structure.rst:205
msgid "bzr"
msgstr "bzr"

#: ../source/specifications/direct-url-data-structure.rst:208
msgid "A tag name, branch name, revision id."
msgstr "Um nome de tag, nome de branch, id de revisão."

#: ../source/specifications/direct-url-data-structure.rst:211
msgid "A revision id."
msgstr "Um id de revisão."

#: ../source/specifications/direct-url-data-structure.rst:214
msgid "Subversion"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:217
msgid "https://subversion.apache.org/"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:220
#: ../source/specifications/direct-url-data-structure.rst:223
msgid "svn"
msgstr "svn"

#: ../source/specifications/direct-url-data-structure.rst:226
msgid ""
"``requested_revision`` must be compatible with ``svn checkout`` ``--"
"revision`` option. In Subversion, branch or tag is part of ``url``."
msgstr ""
"``requested_revision`` deve ser compatível com a opção ``--revision`` do "
"``svn checkout``. No Subversion, branch ou tag é parte de ``url``."

#: ../source/specifications/direct-url-data-structure.rst:230
msgid ""
"Since Subversion does not support globally unique identifiers, this field is "
"the Subversion revision number in the corresponding repository."
msgstr ""
"Visto que o Subversion não oferece suporte a identificadores globalmente "
"únicos, este campo é o número da revisão do Subversion no repositório "
"correspondente."

#: ../source/specifications/direct-url-data-structure.rst:235
msgid "JSON Schema"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:237
msgid ""
"The following JSON Schema can be used to validate the contents of "
"``direct_url.json``:"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:244
msgid "Source archive:"
msgstr "Arquivo fonte:"

#: ../source/specifications/direct-url-data-structure.rst:257
msgid "Git URL with tag and commit-hash:"
msgstr "URL Git com tag e hash de commit:"

#: ../source/specifications/direct-url-data-structure.rst:270
msgid "Local directory:"
msgstr "Diretório local:"

#: ../source/specifications/direct-url-data-structure.rst:279
msgid "Local directory in editable mode:"
msgstr "Diretório local em modo editável:"

#: ../source/specifications/direct-url-data-structure.rst:294
msgid ""
"March 2020: This specification was approved through :pep:`610`, defining the "
"``direct_url.json`` metadata file."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:296
#, fuzzy
msgid ""
"January 2023: Added the ``archive_info.hashes`` key (`discussion <archive-"
"info-hashes_>`_)."
msgstr ""
"Janeiro de 2023: Adicionada a chave ``archive_info.hashes`` (`discussão "
"<https://discuss.python.org/t/22299>`__)."

#: ../source/specifications/entry-points.rst:5
msgid "Entry points specification"
msgstr "Especificação de pontos de entrada"

#: ../source/specifications/entry-points.rst:7
msgid ""
"*Entry points* are a mechanism for an installed distribution to advertise "
"components it provides to be discovered and used by other code. For example:"
msgstr ""
"*Pontos de entrada* são um mecanismo para uma distribuição instalada "
"anunciar componentes que ela fornece para serem descobertos e usados por "
"outro código. Por exemplo:"

#: ../source/specifications/entry-points.rst:11
msgid ""
"Distributions can specify ``console_scripts`` entry points, each referring "
"to a function. When *pip* (or another console_scripts aware installer) "
"installs the distribution, it will create a command-line wrapper for each "
"entry point."
msgstr ""
"As distribuições podem especificar pontos de entrada ``console_scripts``, "
"cada um referindo-se a uma função. Quando *pip* (ou outro instalador "
"compatível com console_scripts) instala a distribuição, ele cria um wrapper "
"de linha de comando para cada ponto de entrada."

#: ../source/specifications/entry-points.rst:14
msgid ""
"Applications can use entry points to load plugins; e.g. Pygments (a syntax "
"highlighting tool) can use additional lexers and styles from separately "
"installed packages. For more about this, see :doc:`/guides/creating-and-"
"discovering-plugins`."
msgstr ""
"As aplicações podem usar pontos de entrada para carregar plug-ins; por "
"exemplo, Pygments (uma ferramenta de realce de sintaxe) pode usar lexers e "
"estilos adicionais de pacotes instalados separadamente. Para mais "
"informações, consulte :doc:`/guides/creating-and-discovering-plugins`."

#: ../source/specifications/entry-points.rst:19
#, fuzzy
msgid ""
"The entry point file format was originally developed to allow packages built "
"with setuptools to provide integration point metadata that would be read at "
"runtime with :py:mod:`importlib.metadata`. It is now defined as a PyPA "
"interoperability specification in order to allow build tools other than "
"``setuptools`` to publish :py:mod:`importlib.metadata` compatible entry "
"point metadata, and runtime libraries other than :py:mod:`importlib."
"metadata` to portably read published entry point metadata (potentially with "
"different caching and conflict resolution strategies)."
msgstr ""
"O formato de arquivo de ponto de entrada foi originalmente desenvolvido para "
"permitir que pacotes construídos com setuptools forneçam metadados de ponto "
"de integração que seriam lidos em tempo de execução com ``importlib."
"metadata``. Ele agora é definido como uma especificação de "
"interoperabilidade PyPA a fim de permitir que outras ferramentas de "
"construção além do setuptools publiquem metadados de ponto de entrada "
"compatíveis com ``importlib.metadata`` e bibliotecas de tempo de execução "
"diferentes de ``importlib.metadata`` para ler portavelmente publicado "
"metadados de ponto de entrada (potencialmente com diferentes estratégias de "
"cache e resolução de conflitos)."

#: ../source/specifications/entry-points.rst:28
msgid "Data model"
msgstr "Modelo de dados"

#: ../source/specifications/entry-points.rst:30
msgid "Conceptually, an entry point is defined by three required properties:"
msgstr ""
"Conceitualmente, um ponto de entrada é definido por três propriedades "
"necessárias:"

#: ../source/specifications/entry-points.rst:32
msgid ""
"The **group** that an entry point belongs to indicates what sort of object "
"it provides. For instance, the group ``console_scripts`` is for entry points "
"referring to functions which can be used as a command, while ``pygments."
"styles`` is the group for classes defining pygments styles. The consumer "
"typically defines the expected interface. To avoid clashes, consumers "
"defining a new group should use names starting with a PyPI name owned by the "
"consumer project, followed by ``.``. Group names must be one or more groups "
"of letters, numbers and underscores, separated by dots (regex ``^\\w+(\\."
"\\w+)*$``)."
msgstr ""
"O **grupo** ao qual um ponto de entrada pertence indica que tipo de objeto "
"ele fornece. Por exemplo, o grupo ``console_scripts`` é para pontos de "
"entrada referentes a funções que podem ser usadas como um comando, enquanto "
"``pygments.styles`` é o grupo para classes que definem estilos de pigmentos. "
"O consumidor normalmente define a interface esperada. Para evitar conflitos, "
"os consumidores que definem um novo grupo devem usar nomes começando com um "
"nome PyPI pertencente ao projeto do consumidor, seguido por ``.``. Os nomes "
"dos grupos devem ser um ou mais grupos de letras, números e sublinhados, "
"separados por pontos (regex ``^\\w+(\\.\\w+)*$``)."

#: ../source/specifications/entry-points.rst:42
msgid ""
"The **name** identifies this entry point within its group. The precise "
"meaning of this is up to the consumer. For console scripts, the name of the "
"entry point is the command that will be used to launch it. Within a "
"distribution, entry point names should be unique. If different distributions "
"provide the same name, the consumer decides how to handle such conflicts. "
"The name may contain any characters except ``=``, but it cannot start or end "
"with any whitespace character, or start with ``[``. For new entry points, it "
"is recommended to use only letters, numbers, underscores, dots and dashes "
"(regex ``[\\w.-]+``)."
msgstr ""
"O **nome** identifica este ponto de entrada em seu grupo. O significado "
"preciso disso depende do cliente. Para scripts de console, o nome do ponto "
"de entrada é o comando que será usado para iniciá-lo. Em uma distribuição, "
"os nomes dos pontos de entrada devem ser exclusivos. Se distribuições "
"diferentes fornecerem o mesmo nome, o consumidor decide como lidar com tais "
"conflitos. O nome pode conter quaisquer caracteres, exceto ``=``, mas não "
"pode começar ou terminar com nenhum caractere de espaço em branco, ou "
"começar com ``[``. Para novos pontos de entrada, é recomendado usar apenas "
"letras, números, sublinhados, pontos e travessões (regex ``[\\w.-]+``)."

#: ../source/specifications/entry-points.rst:51
msgid ""
"The **object reference** points to a Python object. It is either in the form "
"``importable.module``, or ``importable.module:object.attr``. Each of the "
"parts delimited by dots and the colon is a valid Python identifier. It is "
"intended to be looked up like this::"
msgstr ""
"A **referência de objeto** aponta para um objeto Python. Ele está no formato "
"``importable.module`` ou ``importable.module:object.attr``. Cada uma das "
"partes delimitadas por pontos e dois pontos é um identificador válido "
"Python. Destina-se a ser consultado assim::"

#: ../source/specifications/entry-points.rst:64
msgid ""
"Some tools call this kind of object reference by itself an 'entry point', "
"for want of a better term, especially where it points to a function to "
"launch a program."
msgstr ""
"Algumas ferramentas chamam esse tipo de referência de objeto por si só de "
"\"ponto de entrada\", por falta de um termo melhor, especialmente quando "
"aponta para uma função para iniciar um programa."

#: ../source/specifications/entry-points.rst:68
msgid ""
"There is also an optional property: the **extras** are a set of strings "
"identifying optional features of the distribution providing the entry point. "
"If these are specified, the entry point requires the dependencies of those "
"'extras'. See the metadata field :ref:`metadata_provides_extra`."
msgstr ""
"Há também uma propriedade opcional: os **extras** são um conjunto de strings "
"que identifica recursos opcionais da distribuição que fornece o ponto de "
"entrada. Se forem especificados, o ponto de entrada requer as dependências "
"desses 'extras'. Veja o campo de metadados :ref:`metadata_provides_extra`."

#: ../source/specifications/entry-points.rst:73
msgid ""
"Using extras for an entry point is no longer recommended. Consumers should "
"support parsing them from existing distributions, but may then ignore them. "
"New publishing tools need not support specifying extras. The functionality "
"of handling extras was tied to setuptools' model of managing 'egg' packages, "
"but newer tools such as pip and virtualenv use a different model."
msgstr ""
"Usar extras para um ponto de entrada não é mais recomendado. Os consumidores "
"devem oferecer suporte para analisá-los em distribuições existentes, mas "
"podem então ignorá-los. Novas ferramentas de publicação não precisam "
"suportar especificações extras. A funcionalidade de manipulação de extras "
"estava ligada ao modelo do setuptools de gerenciamento de pacotes \"egg\", "
"mas as ferramentas mais recentes, como pip e virtualenv, usam um modelo "
"diferente."

#: ../source/specifications/entry-points.rst:80
msgid "File format"
msgstr "Formato de arquivo"

#: ../source/specifications/entry-points.rst:82
msgid ""
"Entry points are defined in a file called :file:`entry_points.txt` in the :"
"file:`*.dist-info` directory of the distribution. This is the directory "
"described in :ref:`recording-installed-packages` for installed "
"distributions, and in :ref:`binary-distribution-format` for wheels. The file "
"uses the UTF-8 character encoding."
msgstr ""
"Os pontos de entrada são definidos em um arquivo chamado :file:`entry_points."
"txt` no diretório :file:`*.dist-info` da distribuição. Este é o diretório "
"descrito em :ref:`recording-installed-packages` para distribuições "
"instaladas e em :ref:`binary-distribution-format` para wheels. O arquivo usa "
"a codificação de caracteres UTF-8."

#: ../source/specifications/entry-points.rst:88
msgid ""
"The file contents are in INI format, as read by Python's :mod:`configparser` "
"module. However, configparser treats names as case-insensitive by default, "
"whereas entry point names are case sensitive. A case-sensitive config parser "
"can be made like this::"
msgstr ""
"O conteúdo do arquivo está no formato INI, conforme lido pelo módulo :mod:"
"`configparser` do Python. No entanto, o configparser trata os nomes como não "
"diferenciando maiúsculas de minúsculas por padrão, enquanto os nomes de "
"pontos de entrada diferenciam maiúsculas de minúsculas. Um analisador de "
"configuração com distinção entre maiúsculas e minúsculas pode ser feito "
"assim::"

#: ../source/specifications/entry-points.rst:98
msgid ""
"The entry points file must always use ``=`` to delimit names from values "
"(whereas configparser also allows using ``:``)."
msgstr ""
"O arquivo de pontos de entrada deve sempre usar ``=`` para delimitar nomes "
"de valores (enquanto o configparser também permite o uso de ``:``)."

#: ../source/specifications/entry-points.rst:101
msgid ""
"The sections of the config file represent entry point groups, the names are "
"names, and the values encode both the object reference and the optional "
"extras. If extras are used, they are a comma-separated list inside square "
"brackets."
msgstr ""
"As seções do arquivo de configuração representam grupos de pontos de "
"entrada, os nomes são nomes e os valores codificam a referência do objeto e "
"os extras opcionais. Se extras forem usados, eles serão uma lista separada "
"por vírgulas entre colchetes."

#: ../source/specifications/entry-points.rst:105
msgid ""
"Within a value, readers must accept and ignore spaces (including multiple "
"consecutive spaces) before or after the colon, between the object reference "
"and the left square bracket, between the extra names and the square brackets "
"and colons delimiting them, and after the right square bracket. The syntax "
"for extras is formally specified as part of :pep:`508` (as ``extras``) and "
"restrictions on values specified in :pep:`685`. For tools writing the file, "
"it is recommended only to insert a space between the object reference and "
"the left square bracket."
msgstr ""
"Dentro de um valor, os leitores devem aceitar e ignorar os espaços "
"(incluindo vários espaços consecutivos) antes ou depois dos dois pontos, "
"entre a referência do objeto e o colchete esquerdo, entre os nomes extras e "
"os colchetes e dois pontos que os delimitam, e depois do quadrado direito "
"suporte. A sintaxe para extras é formalmente especificada como parte da :pep:"
"`508` (como ``extras``) e restrições em valores especificados na :pep:`685`. "
"Para ferramentas de gravação de arquivo, é recomendável inserir apenas um "
"espaço entre a referência do objeto e o colchete esquerdo."

#: ../source/specifications/entry-points.rst:128
msgid "Use for scripts"
msgstr "Uso para scripts"

#: ../source/specifications/entry-points.rst:130
msgid ""
"Two groups of entry points have special significance in packaging: "
"``console_scripts`` and ``gui_scripts``. In both groups, the name of the "
"entry point should be usable as a command in a system shell after the "
"package is installed. The object reference points to a function which will "
"be called with no arguments when this command is run. The function may "
"return an integer to be used as a process exit code, and returning ``None`` "
"is equivalent to returning ``0``."
msgstr ""
"Dois grupos de pontos de entrada têm um significado especial no "
"empacotamento: ``console_scripts`` e ``gui_scripts``. Em ambos os grupos, o "
"nome do ponto de entrada deve ser usado como um comando em um shell do "
"sistema após a instalação do pacote. A referência do objeto aponta para uma "
"função que será chamada sem argumentos quando este comando for executado. A "
"função pode retornar um inteiro para ser usado como um código de saída do "
"processo, e retornar ``None`` é equivalente a retornar ``0``."

#: ../source/specifications/entry-points.rst:138
msgid ""
"For instance, the entry point ``mycmd = mymod:main`` would create a command "
"``mycmd`` launching a script like this::"
msgstr ""
"Por exemplo, o ponto de entrada ``mycmd = mymod:main`` criaria um comando "
"``mycmd`` lançando um script como este::"

#: ../source/specifications/entry-points.rst:145
#, fuzzy
msgid ""
"The difference between ``console_scripts`` and ``gui_scripts`` only affects "
"Windows systems. ``console_scripts`` are wrapped in a console executable, so "
"they are attached to a console and can use :py:data:`sys.stdin`, :py:data:"
"`sys.stdout` and :py:data:`sys.stderr` for input and output. ``gui_scripts`` "
"are wrapped in a GUI executable, so they can be started without a console, "
"but cannot use standard streams unless application code redirects them. "
"Other platforms do not have the same distinction."
msgstr ""
"A diferença entre ``console_scripts`` e ``gui_scripts`` afeta apenas os "
"sistemas Windows. ``console_scripts`` são empacotados em um executável de "
"console, então eles são anexados a um console e podem usar ``sys.stdin``, "
"``sys.stdout`` e ``sys.stderr`` para entrada e saída. ``gui_scripts`` são "
"empacotados em um executável GUI, então eles podem ser iniciados sem um "
"console, mas não podem usar streams padrão a menos que o código da aplicação "
"os redirecione. Outras plataformas não têm a mesma distinção."

#: ../source/specifications/entry-points.rst:153
msgid ""
"Install tools are expected to set up wrappers for both ``console_scripts`` "
"and ``gui_scripts`` in the scripts directory of the install scheme. They are "
"not responsible for putting this directory in the ``PATH`` environment "
"variable which defines where command-line tools are found."
msgstr ""
"Espera-se que as ferramentas de instalação configurem wrappers para "
"``console_scripts`` e ``gui_scripts`` no diretório de scripts do esquema de "
"instalação. Eles não são responsáveis por colocar este diretório na variável "
"de ambiente ``PATH`` que define onde as ferramentas de linha de comando são "
"encontradas."

#: ../source/specifications/entry-points.rst:158
msgid ""
"As files are created from the names, and some filesystems are case-"
"insensitive, packages should avoid using names in these groups which differ "
"only in case. The behaviour of install tools when names differ only in case "
"is undefined."
msgstr ""
"Como os arquivos são criados a partir dos nomes e alguns sistemas de "
"arquivos não fazem distinção entre maiúsculas e minúsculas, os pacotes devem "
"evitar o uso de nomes nesses grupos que diferem apenas em maiúsculas e "
"minúsculas. O comportamento das ferramentas de instalação quando os nomes "
"diferem apenas no caso de ser indefinido."

#: ../source/specifications/entry-points.rst:166
msgid ""
"October 2017: This specification was written to formalize the existing entry "
"points feature of setuptools (discussion_)."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:6
msgid "Externally Managed Environments"
msgstr "Ambiente gerenciado externamente"

#: ../source/specifications/externally-managed-environments.rst:8
msgid ""
"While some Python installations are entirely managed by the user that "
"installed Python, others may be provided and managed by another means (such "
"as the operating system package manager in a Linux distribution, or as a "
"bundled Python environment in an application with a dedicated installer)."
msgstr ""
"Embora algumas instalações do Python sejam totalmente gerenciadas pelo "
"usuário que instalou o Python, outras podem ser fornecidas e gerenciadas por "
"outros meios (como o gerenciador de pacotes do sistema operacional em uma "
"distribuição Linux ou como um ambiente integrado Python em um aplicativo com "
"um instalador dedicado)."

#: ../source/specifications/externally-managed-environments.rst:13
msgid ""
"Attempting to use conventional Python packaging tools to manipulate such "
"environments can be confusing at best and outright break the entire "
"underlying operating system at worst. Documentation and interoperability "
"guides only go so far in resolving such problems."
msgstr ""
"A tentativa de usar ferramentas de empacotamento convencionais Python para "
"manipular esses ambientes pode ser confusa, na melhor das hipóteses, e, na "
"pior das hipóteses, quebrar completamente todo o sistema operacional "
"subjacente. Os guias de documentação e interoperabilidade passam longe da "
"resolução de tais problemas."

#: ../source/specifications/externally-managed-environments.rst:18
#, fuzzy
msgid ""
"This specification defines an ``EXTERNALLY-MANAGED`` marker file that allows "
"a Python installation to indicate to Python-specific tools such as ``pip`` "
"that they neither install nor remove packages into the interpreter’s default "
"installation environment, and should instead guide the end user towards "
"using :ref:`virtual-environments`."
msgstr ""
"A :pep:`668` definiu um arquivo marcador ``EXTERNALLY-MANAGED`` que permite "
"que uma instalação do Python indique para ferramentas específicas do Python, "
"como ``pip``, que eles não instalam nem removem pacotes no ambiente de "
"instalação padrão do interpretador, e deve orientar o usuário final para "
"usar :ref:`virtual-environments`."

#: ../source/specifications/externally-managed-environments.rst:24
msgid ""
"It also standardizes an interpretation of the ``sysconfig`` schemes so that, "
"if a Python-specific package manager is about to install a package in an "
"interpreter-wide context, it can do so in a manner that will avoid "
"conflicting with the external package manager and reduces the risk of "
"breaking software shipped by the external package manager."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:32
msgid "Terminology"
msgstr "Terminologia"

#: ../source/specifications/externally-managed-environments.rst:34
msgid ""
"A few terms used in this specification have multiple meanings in the "
"contexts that it spans. For clarity, this specification uses the following "
"terms in specific ways:"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:61
#, fuzzy
msgid "distro"
msgstr "distribution"

#: ../source/specifications/externally-managed-environments.rst:39
msgid ""
"Short for \"distribution,\" a collection of various sorts of software, "
"ideally designed to work properly together, including (in contexts relevant "
"to this document) the Python interpreter itself, software written in Python, "
"and software written in other languages. That is, this is the sense used in "
"phrases such as \"Linux distro\" or \"Berkeley Software Distribution.\""
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:46
msgid ""
"A distro can be an operating system (OS) of its own, such as Debian, Fedora, "
"or FreeBSD. It can also be an overlay distribution that installs on top of "
"an existing OS, such as Homebrew or MacPorts."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:51
msgid ""
"This document uses the short term \"distro,\" because the term "
"\"distribution\" has another meaning in Python packaging contexts: a source "
"or binary distribution package of a single piece of Python language "
"software, that is, in the sense of ``setuptools.dist.Distribution`` or "
"\"sdist\". To avoid confusion, this document does not use the plain term "
"\"distribution\" at all. In the Python packaging sense, it uses the full "
"phrase \"distribution package\" or just \"package\" (see below)."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:60
msgid ""
"The provider of a distro - the team or company that collects and publishes "
"the software and makes any needed modifications - is its **distributor**."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:79
#, fuzzy
msgid "package"
msgstr "empacotamento"

#: ../source/specifications/externally-managed-environments.rst:64
msgid ""
"A unit of software that can be installed and used within Python. That is, "
"this refers to what Python-specific packaging tools tend to call a :term:"
"`distribution package` or simply a \"distribution\"; the colloquial "
"abbreviation \"package\" is used in the sense of the Python Package Index."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:70
msgid ""
"This document does not use \"package\" in the sense of an importable name "
"that contains Python modules, though in many cases, a distribution package "
"consists of a single importable package of the same name."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:75
msgid ""
"This document generally does not use the term \"package\" to refer to units "
"of installation by a distro's package manager (such as ``.deb`` or ``.rpm`` "
"files). When needed, it uses phrasing such as \"a distro's package."
"\" (Again, in many cases, a Python package is shipped inside a distro's "
"package named something like ``python-`` plus the Python package name.)"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:102
#, fuzzy
msgid "Python-specific package manager"
msgstr "O gerenciador de pacotes multiplataforma conda"

#: ../source/specifications/externally-managed-environments.rst:82
msgid ""
"A tool for installing, upgrading, and/or removing Python packages in a "
"manner that conforms to Python packaging standards. The most popular Python-"
"specific package manager is pip_; other examples include the old `Easy "
"Install command <easy-install_>`_ as well as direct usage of a ``setup.py`` "
"command."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:92
msgid ""
"(Note that the ``easy_install`` command was removed in setuptools version "
"52, released 23 January 2021.)"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:96
msgid ""
"(Conda_ is a bit of a special case, as the ``conda`` command can install "
"much more than just Python packages, making it more like a distro package "
"manager in some senses. Since the ``conda`` command generally only operates "
"on Conda-created environments, most of the concerns in this document do not "
"apply to ``conda`` when acting as a Python-specific package manager.)"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:118
#, fuzzy
msgid "distro package manager"
msgstr "Instaladores e gerenciadores de pacote para macOS"

#: ../source/specifications/externally-managed-environments.rst:105
msgid ""
"A tool for installing, upgrading, and/or removing a distro's packages in an "
"installed instance of that distro, which is capable of installing Python "
"packages as well as non-Python packages, and therefore generally has its own "
"database of installed software unrelated to the :ref:`database of installed "
"distributions <recording-installed-packages>`. Examples include ``apt``, "
"``dpkg``, ``dnf``, ``rpm``, ``pacman``, and ``brew``. The salient feature is "
"that if a package was installed by a distro package manager, removing or "
"upgrading it in a way that would satisfy a Python-specific package manager "
"will generally leave a distro package manager in an inconsistent state."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:117
msgid ""
"This document also uses phrases like \"external package manager\" or "
"\"system's package manager\" to refer to a distro package manager in certain "
"contexts."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:127
msgid "shadow"
msgstr "sombra"

#: ../source/specifications/externally-managed-environments.rst:121
msgid ""
"To shadow an installed Python package is to cause some other package to be "
"preferred for imports without removing any files from the shadowed package. "
"This requires multiple entries on ``sys.path``: if package A 2.0 installs "
"module ``a.py`` in one ``sys.path`` entry, and package A 1.0 installs module "
"``a.py`` in a later ``sys.path`` entry, then ``import a`` returns the module "
"from the former, and we say that A 2.0 shadows A 1.0."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:132
#, fuzzy
msgid "This specification is twofold."
msgstr "Especificações do PyPA"

#: ../source/specifications/externally-managed-environments.rst:134
msgid ""
"First, it describes **a way for distributors of a Python interpreter to mark "
"that interpreter as having its packages managed by means external to "
"Python**, such that Python-specific tools like pip should not change the "
"installed packages in the interpreter's global ``sys.path`` in any way (add, "
"upgrade/downgrade, or remove) unless specifically overridden. It also "
"provides a means for the distributor to indicate how to use a virtual "
"environment as an alternative."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:142
msgid ""
"This is an opt-in mechanism: by default, the Python interpreter compiled "
"from upstream sources will not be so marked, and so running ``pip install`` "
"with a self-compiled interpreter, or with a distro that has not explicitly "
"marked its interpreter, will work as it always has worked."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:148
msgid ""
"Second, it sets the rule that when installing packages to an interpreter's "
"global context (either to an unmarked interpreter, or if overriding the "
"marking), **Python-specific package managers should modify or delete files "
"only within the directories of the sysconfig scheme in which they would "
"create files**. This permits a distributor of a Python interpreter to set up "
"two directories, one for its own managed packages, and one for unmanaged "
"packages installed by the end user, and ensure that installing unmanaged "
"packages will not delete (or overwrite) files owned by the external package "
"manager."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:160
msgid "Marking an interpreter as using an external package manager"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:162
msgid ""
"Before a Python-specific package installer (that is, a tool such as pip - "
"not an external tool such as apt) installs a package into a certain Python "
"context, it should make the following checks by default:"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:167
msgid ""
"Is it running outside of a virtual environment? It can determine this by "
"whether ``sys.prefix == sys.base_prefix``."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:170
msgid ""
"Is there an ``EXTERNALLY-MANAGED`` file in the directory identified by "
"``sysconfig.get_path(\"stdlib\", sysconfig.get_default_scheme())``?"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:173
msgid ""
"If both of these conditions are true, the installer should exit with an "
"error message indicating that package installation into this Python "
"interpreter's directory are disabled outside of a virtual environment."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:177
msgid ""
"The installer should have a way for the user to override these rules, such "
"as a command-line flag ``--break-system-packages``. This option should not "
"be enabled by default and should carry some connotation that its use is "
"risky."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:182
msgid ""
"The ``EXTERNALLY-MANAGED`` file is an INI-style metadata file intended to be "
"parsable by the standard library configparser_ module. If the file can be "
"parsed by ``configparser.ConfigParser(interpolation=None)`` using the UTF-8 "
"encoding, and it contains a section ``[externally-managed]``, then the "
"installer should look for an error message specified in the file and output "
"it as part of its error. If the first element of the tuple returned by "
"``locale.getlocale(locale.LC_MESSAGES)``, i.e., the language code, is not "
"``None``, it should look for the error message as the value of a key named "
"``Error-`` followed by the language code. If that key does not exist, and if "
"the language code contains underscore or hyphen, it should look for a key "
"named ``Error-`` followed by the portion of the language code before the "
"underscore or hyphen. If it cannot find either of those, or if the language "
"code is ``None``, it should look for a key simply named ``Error``."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:200
msgid ""
"If the installer cannot find an error message in the file (either because "
"the file cannot be parsed or because no suitable error key exists), then the "
"installer should just use a pre-defined error message of its own, which "
"should suggest that the user create a virtual environment to install "
"packages."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:206
msgid ""
"Software distributors who have a non-Python-specific package manager that "
"manages libraries in the ``sys.path`` of their Python package should, in "
"general, ship an ``EXTERNALLY-MANAGED`` file in their standard library "
"directory. For instance, Debian may ship a file in ``/usr/lib/python3.9/"
"EXTERNALLY-MANAGED`` consisting of something like"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:230
msgid ""
"which provides useful and distro-relevant information to a user trying to "
"install a package. Optionally, translations can be provided in the same file:"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:240
msgid ""
"In certain contexts, such as single-application container images that aren't "
"updated after creation, a distributor may choose not to ship an ``EXTERNALLY-"
"MANAGED`` file, so that users can install whatever they like (as they can "
"today) without having to manually override this rule."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:247
msgid "Writing to only the target ``sysconfig`` scheme"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:249
msgid ""
"Usually, a Python package installer installs to directories in a scheme "
"returned by the ``sysconfig`` standard library package. Ordinarily, this is "
"the scheme returned by ``sysconfig.get_default_scheme()``, but based on "
"configuration (e.g. ``pip install --user``), it may use a different scheme."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:255
msgid ""
"Whenever the installer is installing to a ``sysconfig`` scheme, this "
"specification declares that the installer should never modify or delete "
"files outside of that scheme. For instance, if it's upgrading a package, and "
"the package is already installed in a directory outside that scheme (perhaps "
"in a directory from another scheme), it should leave the existing files "
"alone."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:262
msgid ""
"If the installer does end up shadowing an existing installation during an "
"upgrade, we recommend that it produces a warning at the end of its run."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:266
msgid ""
"If the installer is installing to a location outside of a ``sysconfig`` "
"scheme (e.g., ``pip install --target``), then this subsection does not apply."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:271
msgid "Recommendations for distros"
msgstr "Recomendações para distribuições"

#: ../source/specifications/externally-managed-environments.rst:273
msgid ""
"This section is non-normative. It provides best practices we believe distros "
"should follow unless they have a specific reason otherwise."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:277
msgid "Mark the installation as externally managed"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:279
msgid ""
"Distros should create an ``EXTERNALLY-MANAGED`` file in their ``stdlib`` "
"directory."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:283
#, fuzzy
msgid "Guide users towards virtual environments"
msgstr "Ativando um ambiente virtual"

#: ../source/specifications/externally-managed-environments.rst:285
msgid ""
"The file should contain a useful and distro-relevant error message "
"indicating both how to install system-wide packages via the distro's package "
"manager and how to set up a virtual environment. If your distro is often "
"used by users in a state where the ``python3`` command is available (and "
"especially where ``pip`` or ``get-pip`` is available) but ``python3 -m "
"venv`` does not work, the message should indicate clearly how to make "
"``python3 -m venv`` work properly."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:293
msgid ""
"Consider packaging pipx_, a tool for installing Python-language "
"applications, and suggesting it in the error. pipx automatically creates a "
"virtual environment for that application alone, which is a much better "
"default for end users who want to install some Python-language software "
"(which isn't available in the distro) but are not themselves Python users. "
"Packaging pipx in the distro avoids the irony of instructing users to ``pip "
"install --user --break-system-packages pipx`` to *avoid* breaking system "
"packages. Consider arranging things so your distro's package / environment "
"for Python for end users (e.g., ``python3`` on Fedora or ``python3-full`` on "
"Debian) depends on pipx."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:308
msgid "Keep the marker file in container images"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:310
msgid ""
"Distros that produce official images for single-application containers (e."
"g., Docker container images) should keep the ``EXTERNALLY-MANAGED`` file, "
"preferably in a way that makes it not go away if a user of that image "
"installs package updates inside their image (think ``RUN apt-get dist-"
"upgrade``)."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:317
msgid "Create separate distro and local directories"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:319
msgid ""
"Distros should place two separate paths on the system interpreter's ``sys."
"path``, one for distro-installed packages and one for packages installed by "
"the local system administrator, and configure ``sysconfig."
"get_default_scheme()`` to point at the latter path. This ensures that tools "
"like pip will not modify distro-installed packages. The path for the local "
"system administrator should come before the distro path on ``sys.path`` so "
"that local installs take preference over distro packages."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:328
msgid ""
"For example, Fedora and Debian (and their derivatives) both implement this "
"split by using ``/usr/local`` for locally-installed packages and ``/usr`` "
"for distro-installed packages. Fedora uses ``/usr/local/lib/python3.x/site-"
"packages`` vs. ``/usr/lib/python3.x/site-packages``. (Debian uses ``/usr/"
"local/lib/python3/dist-packages`` vs. ``/usr/lib/python3/dist-packages`` as "
"an additional layer of separation from a locally-compiled Python "
"interpreter: if you build and install upstream CPython in ``/usr/local/"
"bin``, it will look at ``/usr/local/lib/python3/site-packages``, and Debian "
"wishes to make sure that packages installed via the locally-built "
"interpreter don't show up on ``sys.path`` for the distro interpreter.)"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:341
msgid ""
"Note that the ``/usr/local`` vs. ``/usr`` split is analogous to how the "
"``PATH`` environment variable typically includes ``/usr/local/bin:/usr/bin`` "
"and non-distro software installs to ``/usr/local`` by default. This split is "
"`recommended by the Filesystem Hierarchy Standard`__."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:349
msgid ""
"There are two ways you could do this. One is, if you are building and "
"packaging Python libraries directly (e.g., your packaging helpers unpack a "
"wheel or call ``setup.py install``), arrange for those tools to use a "
"directory that is not in a ``sysconfig`` scheme but is still on ``sys.path``."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:355
msgid ""
"The other is to arrange for the default ``sysconfig`` scheme to change when "
"running inside a package build versus when running on an installed system. "
"The ``sysconfig`` customization hooks from bpo-43976_ should make this easy "
"(once accepted and implemented): make your packaging tool set an environment "
"variable or some other detectable configuration, and define a "
"``get_preferred_schemes`` function to return a different scheme when called "
"from inside a package build. Then you can use ``pip install`` as part of "
"your distro packaging."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:367
msgid ""
"We propose adding a ``--scheme=...`` option to instruct pip to run against a "
"specific scheme. (See `Implementation Notes`_ below for how pip currently "
"determines schemes.) Once that's available, for local testing and possibly "
"for actual packaging, you would be able to run something like ``pip install "
"--scheme=posix_distro`` to explicitly install a package into your distro's "
"location (bypassing ``get_preferred_schemes``). One could also, if "
"absolutely needed, use ``pip uninstall --scheme=posix_distro`` to use pip to "
"remove packages from the system-managed directory."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:377
msgid ""
"To install packages with pip, you would also need to either suppress the "
"``EXTERNALLY-MANAGED`` marker file to allow pip to run or to override it on "
"the command line. You may want to use the same means for suppressing the "
"marker file in build chroots as you do in container images."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:383
msgid ""
"The advantage of setting these up to be automatic (suppressing the marker "
"file in your build environment and having ``get_preferred_schemes`` "
"automatically return your distro's scheme) is that an unadorned ``pip "
"install`` will work inside a package build, which generally means that an "
"unmodified upstream build script that happens to internally call ``pip "
"install`` will do the right thing. You can, of course, just ensure that your "
"packaging process always calls ``pip install --scheme=posix_distro --break-"
"system-packages``, which would work too."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:393
msgid ""
"The best approach here depends a lot on your distro's conventions and "
"mechanisms for packaging."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:396
msgid ""
"Similarly, the ``sysconfig`` paths that are not for importable Python code - "
"that is, ``include``, ``platinclude``, ``scripts``, and ``data`` - should "
"also have two variants, one for use by distro-packaged software and one for "
"use for locally-installed software, and the distro should be set up such "
"that both are usable. For instance, a typical FHS-compliant distro will use "
"``/usr/local/include`` for the default scheme's ``include`` and ``/usr/"
"include`` for distro-packaged headers and place both on the compiler's "
"search path, and it will use ``/usr/local/bin`` for the default scheme's "
"``scripts`` and ``/usr/bin`` for distro-packaged entry points and place both "
"on ``$PATH``."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:410
#, fuzzy
msgid "Implementation Notes"
msgstr "Tipos de documentação"

#: ../source/specifications/externally-managed-environments.rst:412
msgid ""
"This section is non-normative and contains notes relevant to both the "
"specification and potential implementations."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:415
msgid ""
"Currently (as of May 2021), pip does not directly expose a way to choose a "
"target ``sysconfig`` scheme, but it has three ways of looking up schemes "
"when installing:"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:422
#, fuzzy
msgid "``pip install``"
msgstr "pip install app"

#: ../source/specifications/externally-managed-environments.rst:420
msgid ""
"Calls ``sysconfig.get_default_scheme()``, which is usually (in upstream "
"CPython and most current distros) the same as "
"``get_preferred_scheme('prefix')``."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:425
#, fuzzy
msgid "``pip install --prefix=/some/path``"
msgstr "pip install -e ./app"

#: ../source/specifications/externally-managed-environments.rst:425
msgid "Calls ``sysconfig.get_preferred_scheme('prefix')``."
msgstr "Chame ``sysconfig.get_preferred_scheme('prefix')``."

#: ../source/specifications/externally-managed-environments.rst:428
#, fuzzy
msgid "``pip install --user``"
msgstr "pip install -e ./app"

#: ../source/specifications/externally-managed-environments.rst:428
msgid "Calls ``sysconfig.get_preferred_scheme('user')``."
msgstr "Chame ``sysconfig.get_preferred_scheme('user')``."

#: ../source/specifications/externally-managed-environments.rst:430
msgid ""
"Finally, ``pip install --target=/some/path`` writes directly to ``/some/"
"path`` without looking up any schemes."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:433
msgid ""
"Debian currently carries a `patch to change the default install location "
"inside a virtual environment`__, using a few heuristics (including checking "
"for the ``VIRTUAL_ENV`` environment variable), largely so that the directory "
"used in a virtual environment remains ``site-packages`` and not ``dist-"
"packages``. This does not particularly affect this proposal, because the "
"implementation of that patch does not actually change the default "
"``sysconfig`` scheme, and notably does not change the result of ``sysconfig."
"get_path(\"stdlib\")``."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:445
msgid ""
"Fedora currently carries a `patch to change the default install location "
"when not running inside rpmbuild`__, which they use to implement the two-"
"system-wide-directories approach. This is conceptually the sort of hook "
"envisioned by bpo-43976_, except implemented as a code patch to "
"``distutils`` instead of as a changed ``sysconfig`` scheme."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:454
msgid ""
"The implementation of ``is_virtual_environment`` above, as well as the logic "
"to load the ``EXTERNALLY-MANAGED`` file and find the error message from it, "
"may as well get added to the standard library (``sys`` and ``sysconfig``, "
"respectively), to centralize their implementations, but they don't need to "
"be added yet."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:464
msgid "Copyright"
msgstr "Diretos autorais"

#: ../source/specifications/externally-managed-environments.rst:466
msgid ""
"This document is placed in the public domain or under the CC0-1.0-Universal "
"license, whichever is more permissive."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:474
msgid "June 2022: This specification was approved through :pep:`668`."
msgstr ""

#: ../source/specifications/file-yanking.rst:5
msgid "File Yanking"
msgstr ""

#: ../source/specifications/file-yanking.rst:9
#, fuzzy
#| msgid ""
#| "This document describes the dependency specifiers format as originally "
#| "specified in :pep:`508`."
msgid "This specification was originally defined in :pep:`592`."
msgstr ""
"Este documento descreve o formato dos especificadores de dependência "
"conforme originalmente especificado na :pep:`508`."

#: ../source/specifications/file-yanking.rst:14
msgid ""
":pep:`592` includes changes to the HTML and JSON index APIs. These changes "
"are documented in the :ref:`simple-repository-api` under :ref:`HTML - "
"Project Detail <simple-repository-html-project-detail>` and :ref:`JSON - "
"Project Detail <simple-repository-json-project-detail>`."
msgstr ""

#: ../source/specifications/file-yanking.rst:22
msgid ""
"Links in the simple repository **MAY** have a ``data-yanked`` attribute "
"which may have no value, or may have an arbitrary string as a value. The "
"presence of a ``data-yanked`` attribute **SHOULD** be interpreted as "
"indicating that the file pointed to by this particular link has been "
"\"Yanked\", and should not generally be selected by an installer, except "
"under specific scenarios."
msgstr ""

#: ../source/specifications/file-yanking.rst:29
msgid ""
"The value of the ``data-yanked`` attribute, if present, is an arbitrary "
"string that represents the reason for why the file has been yanked. Tools "
"that process the simple repository API **MAY** surface this string to end "
"users."
msgstr ""

#: ../source/specifications/file-yanking.rst:34
msgid ""
"The yanked attribute is not immutable once set, and may be rescinded in the "
"future (and once rescinded, may be reset as well). Thus API users **MUST** "
"be able to cope with a yanked file being \"unyanked\" (and even yanked "
"again)."
msgstr ""

#: ../source/specifications/file-yanking.rst:40
#, fuzzy
msgid "Installers"
msgstr "Instalador"

#: ../source/specifications/file-yanking.rst:42
msgid ""
"The desirable experience for users is that once a file is yanked, when a "
"human being is currently trying to directly install a yanked file, that it "
"fails as if that file had been deleted. However, when a human did that "
"awhile ago, and now a computer is just continuing to mechanically follow the "
"original order to install the now yanked file, then it acts as if it had not "
"been yanked."
msgstr ""

#: ../source/specifications/file-yanking.rst:49
msgid ""
"An installer **MUST** ignore yanked releases, if the selection constraints "
"can be satisfied with a non-yanked version, and **MAY** refuse to use a "
"yanked release even if it means that the request cannot be satisfied at all. "
"An implementation **SHOULD** choose a policy that follows the spirit of the "
"intention above, and that prevents \"new\" dependencies on yanked releases/"
"files."
msgstr ""

#: ../source/specifications/file-yanking.rst:56
msgid ""
"What this means is left up to the specific installer, to decide how to best "
"fit into the overall usage of their installer. However, there are two "
"suggested approaches to take:"
msgstr ""

#: ../source/specifications/file-yanking.rst:60
msgid ""
"Yanked files are always ignored, unless they are the only file that matches "
"a version specifier that \"pins\" to an exact version using either ``==`` "
"(without any modifiers that make it a range, such as ``.*``) or ``===``. "
"Matching this version specifier should otherwise be done as per :ref:`the "
"version specifiers specification <version-specifiers>` for things like local "
"versions, zero padding, etc."
msgstr ""

#: ../source/specifications/file-yanking.rst:67
msgid ""
"Yanked files are always ignored, unless they are the only file that matches "
"what a lock file (such as ``Pipfile.lock`` or ``poetry.lock``) specifies to "
"be installed. In this case, a yanked file **SHOULD** not be used when "
"creating or updating a lock file from some input file or command."
msgstr ""

#: ../source/specifications/file-yanking.rst:73
msgid ""
"Regardless of the specific strategy that an installer chooses for deciding "
"when to install yanked files, an installer **SHOULD** emit a warning when it "
"does decide to install a yanked file. That warning **MAY** utilize the value "
"of the ``data-yanked`` attribute (if it has a value) to provide more "
"specific feedback to the user about why that file had been yanked."
msgstr ""

#: ../source/specifications/file-yanking.rst:81
msgid "Mirrors"
msgstr ""

#: ../source/specifications/file-yanking.rst:83
msgid "Mirrors can generally treat yanked files one of two ways:"
msgstr ""

#: ../source/specifications/file-yanking.rst:85
msgid ""
"They may choose to omit them from their simple repository API completely, "
"providing a view over the repository that shows only \"active\", unyanked "
"files."
msgstr ""

#: ../source/specifications/file-yanking.rst:88
msgid ""
"They may choose to include yanked files, and additionally mirror the ``data-"
"yanked`` attribute as well."
msgstr ""

#: ../source/specifications/file-yanking.rst:91
msgid ""
"Mirrors **MUST NOT** mirror a yanked file without also mirroring the ``data-"
"yanked`` attribute for it."
msgstr ""

#: ../source/specifications/glob-patterns.rst:3
msgid "``glob`` patterns"
msgstr ""

#: ../source/specifications/glob-patterns.rst:5
msgid ""
"Some PyPA specifications, e.g. :ref:`pyproject.toml's license-files "
"<pyproject-toml-license-files>`, accept certain types of *glob patterns* to "
"match a given string containing wildcards and character ranges against files "
"and directories. This specification defines which patterns are acceptable "
"and how they should be handled."
msgstr ""

#: ../source/specifications/glob-patterns.rst:13
msgid "Valid glob patterns"
msgstr ""

#: ../source/specifications/glob-patterns.rst:15
msgid ""
"For PyPA purposes, a *valid glob pattern* MUST be a string matched against "
"filesystem entries as specified below:"
msgstr ""

#: ../source/specifications/glob-patterns.rst:18
msgid ""
"Alphanumeric characters, underscores (``_``), hyphens (``-``) and dots (``."
"``) MUST be matched verbatim."
msgstr ""

#: ../source/specifications/glob-patterns.rst:21
msgid ""
"Special glob characters: ``*``, ``?``, ``**`` and character ranges: ``[]`` "
"containing only the verbatim matched characters MUST be supported. Within "
"``[...]``, the hyphen indicates a locale-agnostic range (e.g. ``a-z``, order "
"based on Unicode code points). Hyphens at the start or end are matched "
"literally."
msgstr ""

#: ../source/specifications/glob-patterns.rst:27
msgid "Path delimiters MUST be the forward slash character (``/``)."
msgstr ""

#: ../source/specifications/glob-patterns.rst:29
msgid ""
"Patterns always refer to *relative paths*, e.g., when used in :file:"
"`pyproject.toml`, patterns should always be relative to the directory "
"containing that file. Therefore the leading slash character MUST NOT be used."
msgstr ""

#: ../source/specifications/glob-patterns.rst:34
msgid "Parent directory indicators (``..``) MUST NOT be used."
msgstr ""

#: ../source/specifications/glob-patterns.rst:36
msgid ""
"Any characters or character sequences not covered by this specification are "
"invalid. Projects MUST NOT use such values. Tools consuming glob patterns "
"SHOULD reject invalid values with an error."
msgstr ""

#: ../source/specifications/glob-patterns.rst:40
msgid ""
"Literal paths (e.g. :file:`LICENSE`) are valid globs which means they can "
"also be defined."
msgstr ""

#: ../source/specifications/glob-patterns.rst:43
msgid "Tools consuming glob patterns:"
msgstr ""

#: ../source/specifications/glob-patterns.rst:45
msgid ""
"MUST treat each value as a glob pattern, and MUST raise an error if the "
"pattern contains invalid glob syntax."
msgstr ""

#: ../source/specifications/glob-patterns.rst:47
msgid ""
"MUST raise an error if any individual user-specified pattern does not match "
"at least one file."
msgstr ""

#: ../source/specifications/glob-patterns.rst:50
msgid "Examples of valid glob patterns:"
msgstr ""

#: ../source/specifications/glob-patterns.rst:61
msgid "Examples of invalid glob patterns:"
msgstr ""

#: ../source/specifications/glob-patterns.rst:74
#, fuzzy
msgid "Reference implementation in Python"
msgstr "Tipos de documentação"

#: ../source/specifications/glob-patterns.rst:76
msgid ""
"It is possible to defer the majority of the pattern matching against the "
"file system to the :mod:`glob` module in Python's standard library. It is "
"necessary however to perform additional validations."
msgstr ""

#: ../source/specifications/glob-patterns.rst:80
msgid "The code below is as a simple reference implementation:"
msgstr ""

#: ../source/specifications/index.rst:4
msgid "PyPA specifications"
msgstr "Especificações do PyPA"

#: ../source/specifications/index.rst:6
msgid ""
"This is a list of currently active interoperability specifications "
"maintained by the Python Packaging Authority. The process for updating these "
"standards, and for proposing new ones, is documented on `pypa.io <https://"
"www.pypa.io/en/latest/specifications/>`__."
msgstr ""
"Esta é uma lista de especificações de interoperabilidade atualmente ativas "
"mantidas pela Python Packaging Authority. O processo de atualização desses "
"padrões e de proposição de novos está documentado em `pypa.io <https://www."
"pypa.io/en/latest/specifications/>`__."

#: ../source/specifications/index-hosted-attestations.rst:6
msgid "Index hosted attestations"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:8
#, fuzzy
#| msgid ""
#| "This document describes the dependency specifiers format as originally "
#| "specified in :pep:`508`."
msgid "This specification was originally defined in :pep:`740`."
msgstr ""
"Este documento descreve o formato dos especificadores de dependência "
"conforme originalmente especificado na :pep:`508`."

#: ../source/specifications/index-hosted-attestations.rst:12
msgid ""
":pep:`740` includes changes to the HTML and JSON index APIs. These changes "
"are documented in the :ref:`simple-repository-api` under :ref:`simple-"
"repository-api-base` and :ref:`json-serialization`."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:22
msgid "Upload endpoint changes"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:26
msgid ""
"The \"legacy\" upload API is not standardized. See `PyPI's Upload API "
"documentation <https://docs.pypi.org/api/upload/>`_ for how attestations are "
"uploaded."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:33
#, fuzzy
#| msgid "Existing projects"
msgid "Attestation objects"
msgstr "Projetos existentes"

#: ../source/specifications/index-hosted-attestations.rst:35
msgid ""
"An attestation object is a JSON object with several required keys; "
"applications or signers may include additional keys so long as all "
"explicitly listed keys are provided. The required layout of an attestation "
"object is provided as pseudocode below."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:88
msgid ""
"A full data model for each object in ``transparency_entries`` is provided "
"in :ref:`appendix`. Attestation objects **SHOULD** include one or more "
"transparency log entries, and **MAY** include additional keys for other "
"sources of signed time (such as an :rfc:`3161` Time Stamping Authority or a "
"`Roughtime <https://blog.cloudflare.com/roughtime>`__ server)."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:94
msgid ""
"Attestation objects are versioned; this PEP specifies version 1. Each "
"version is tied to a single cryptographic suite to minimize unnecessary "
"cryptographic agility. In version 1, the suite is as follows:"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:98
msgid ""
"Certificates are specified as X.509 certificates, and comply with the "
"profile in :rfc:`5280`."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:100
msgid ""
"The message signature algorithm is ECDSA, with the P-256 curve for public "
"keys and SHA-256 as the cryptographic digest function."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:103
msgid ""
"Future PEPs may change this suite (and the overall shape of the attestation "
"object) by selecting a new version number."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:109
msgid "Attestation statement and signature generation"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:111
msgid ""
"The *attestation statement* is the actual claim that is cryptographically "
"signed over within the attestation object (i.e., the ``envelope.statement``)."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:114
msgid ""
"The attestation statement is encoded as a `v1 in-toto Statement object "
"<https://github.com/in-toto/attestation/blob/v1.0/spec/v1.0/statement."
"md>`__, in JSON form. When serialized the statement is treated as an opaque "
"binary blob, avoiding the need for canonicalization."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:119
msgid ""
"In addition to being a v1 in-toto Statement, the attestation statement is "
"constrained in the following ways:"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:122
msgid "The in-toto ``subject`` **MUST** contain only a single subject."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:123
msgid ""
"``subject[0].name`` is the distribution's filename, which **MUST** be a "
"valid :ref:`source distribution <source-distribution-format>` or :ref:`wheel "
"distribution <binary-distribution-format>` filename."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:126
msgid ""
"``subject[0].digest`` **MUST** contain a SHA-256 digest. Other digests "
"**MAY** be present. The digests **MUST** be represented as hexadecimal "
"strings."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:128
msgid "The following ``predicateType`` values are supported:"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:130
msgid ""
"`SLSA Provenance <https://slsa.dev/provenance/v1>`__: ``https://slsa.dev/"
"provenance/v1``"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:131
msgid ""
"`PyPI Publish Attestation <https://docs.pypi.org/attestations/publish/"
"v1>`__: ``https://docs.pypi.org/attestations/publish/v1``"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:133
msgid ""
"The signature over this statement is constructed using the `v1 DSSE "
"signature protocol <https://github.com/secure-systems-lab/dsse/blob/v1.0.0/"
"protocol.md>`__, with a ``PAYLOAD_TYPE`` of ``application/vnd.in-toto+json`` "
"and a ``PAYLOAD_BODY`` of the JSON-encoded statement above. No other "
"``PAYLOAD_TYPE`` is permitted."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:141
msgid "Provenance objects"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:143
msgid ""
"The index will serve uploaded attestations along with metadata that can "
"assist in verifying them in the form of JSON serialized objects."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:146
msgid ""
"These *provenance objects* will be available via both the Simple Index and "
"JSON-based Simple API as described above, and will have the following layout:"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:169
msgid "or, as pseudocode:"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:217
msgid ""
"``version`` is ``1``. Like attestation objects, provenance objects are "
"versioned, and this PEP only defines version ``1``."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:219
msgid ""
"``attestation_bundles`` is a **required** JSON array, containing one or more "
"\"bundles\" of attestations. Each bundle corresponds to a signing identity "
"(such as a Trusted Publishing identity), and contains one or more "
"attestation objects."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:224
msgid ""
"As noted in the ``Publisher`` model, each ``AttestationBundle.publisher`` "
"object is specific to its Trusted Publisher but must include at minimum:"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:228
msgid ""
"A ``kind`` key, which **MUST** be a JSON string that uniquely identifies the "
"kind of Trusted Publisher."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:230
msgid ""
"A ``claims`` key, which **MUST** be a JSON object containing any context-"
"specific claims retained by the index during Trusted Publisher "
"authentication."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:233
msgid "All other keys in the publisher object are publisher-specific."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:235
msgid ""
"Each array of attestation objects is a superset of the ``attestations`` "
"array supplied by the uploaded through the ``attestations`` field at upload "
"time, as described in :ref:`upload-endpoint` and :ref:`changes-to-provenance-"
"objects`."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:243
msgid "Changes to provenance objects"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:245
msgid ""
"Provenance objects are *not* immutable, and may change over time. Reasons "
"for changes to the provenance object include but are not limited to:"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:248
msgid ""
"Addition of new attestations for a pre-existing signing identity: the index "
"**MAY** choose to allow additional attestations by pre-existing signing "
"identities, such as newer attestation versions for already uploaded files."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:253
msgid ""
"Addition of new signing identities and associated attestations: the index "
"**MAY** choose to support attestations from sources other than the file's "
"uploader, such as third-party auditors or the index itself. These "
"attestations may be performed asynchronously, requiring the index to insert "
"them into the provenance object *post facto*."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:262
msgid "Attestation verification"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:264
msgid ""
"Verifying an attestation object against a distribution file requires "
"verification of each of the following:"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:267
msgid "``version`` is ``1``. The verifier **MUST** reject any other version."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:268
msgid ""
"``verification_material.certificate`` is a valid signing certificate, as "
"issued by an *a priori* trusted authority (such as a root of trust already "
"present within the verifying client)."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:271
msgid ""
"``verification_material.certificate`` identifies an appropriate signing "
"subject, such as the machine identity of the Trusted Publisher that "
"published the package."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:274
msgid ""
"``envelope.statement`` is a valid in-toto v1 Statement, with a subject and "
"digest that **MUST** match the distribution's filename and contents. For the "
"distribution's filename, matching **MUST** be performed by parsing using the "
"appropriate source distribution or wheel filename format, as the statement's "
"subject may be equivalent but normalized."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:279
msgid ""
"``envelope.signature`` is a valid signature for ``envelope.statement`` "
"corresponding to ``verification_material.certificate``, as reconstituted via "
"the `v1 DSSE signature protocol <https://github.com/secure-systems-lab/dsse/"
"blob/v1.0.0/protocol.md>`__."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:284
msgid ""
"In addition to the above required steps, a verifier **MAY** additionally "
"verify ``verification_material.transparency_entries`` on a policy basis, e."
"g. requiring at least one transparency log entry or a threshold of entries. "
"When verifying transparency entries, the verifier **MUST** confirm that the "
"inclusion time for each entry lies within the signing certificate's validity "
"period."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:293
msgid "Appendix: Data models for Transparency Log Entries"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:295
msgid ""
"This appendix contains pseudocoded data models for transparency log entries "
"in attestation objects. Each transparency log entry serves as a source of "
"signed inclusion time, and can be verified either online or offline."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:5
#, fuzzy
msgid "Inline script metadata"
msgstr "Declarando os metadados do projeto"

#: ../source/specifications/inline-script-metadata.rst:7
msgid ""
"This specification defines a metadata format that can be embedded in single-"
"file Python scripts to assist launchers, IDEs and other external tools which "
"may need to interact with such scripts."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:15
msgid ""
"This specification defines a metadata comment block format (loosely inspired "
"by `reStructuredText Directives`__)."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:20
msgid ""
"Any Python script may have top-level comment blocks that MUST start with the "
"line ``# /// TYPE`` where ``TYPE`` determines how to process the content. "
"That is: a single ``#``, followed by a single space, followed by three "
"forward slashes, followed by a single space, followed by the type of "
"metadata. Block MUST end with the line ``# ///``. That is: a single ``#``, "
"followed by a single space, followed by three forward slashes. The ``TYPE`` "
"MUST only consist of ASCII letters, numbers and hyphens."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:28
msgid ""
"Every line between these two lines (``# /// TYPE`` and ``# ///``) MUST be a "
"comment starting with ``#``. If there are characters after the ``#`` then "
"the first character MUST be a space. The embedded content is formed by "
"taking away the first two characters of each line if the second character is "
"a space, otherwise just the first character (which means the line consists "
"of only a single ``#``)."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:35
msgid ""
"Precedence for an ending line ``# ///`` is given when the next line is not a "
"valid embedded content line as described above. For example, the following "
"is a single fully valid block:"
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:51
msgid ""
"A starting line MUST NOT be placed between another starting line and its "
"ending line. In such cases tools MAY produce an error. Unclosed blocks MUST "
"be ignored."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:54
msgid ""
"When there are multiple comment blocks of the same ``TYPE`` defined, tools "
"MUST produce an error."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:57
msgid ""
"Tools reading embedded metadata MAY respect the standard Python encoding "
"declaration. If they choose not to do so, they MUST process the file as "
"UTF-8."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:60
msgid ""
"This is the canonical regular expression that MAY be used to parse the "
"metadata:"
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:67
msgid ""
"In circumstances where there is a discrepancy between the text specification "
"and the regular expression, the text specification takes precedence."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:70
msgid ""
"Tools MUST NOT read from metadata blocks with types that have not been "
"standardized by this specification."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:74
msgid "script type"
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:76
msgid ""
"The first type of metadata block is named ``script``, which contains script "
"metadata (dependency data and tool configuration)."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:79
msgid ""
"This document MAY include the top-level fields ``dependencies`` and "
"``requires-python``, and MAY optionally include a ``[tool]`` table."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:82
msgid ""
"The ``[tool]`` table MAY be used by any tool, script runner or otherwise, to "
"configure behavior. It has the same semantics as the :ref:`[tool] table in "
"pyproject.toml <pyproject-tool-table>`."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:86
msgid "The top-level fields are:"
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:88
msgid ""
"``dependencies``: A list of strings that specifies the runtime dependencies "
"of the script. Each entry MUST be a valid :ref:`dependency specifier "
"<dependency-specifiers>`."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:91
msgid ""
"``requires-python``: A string that specifies the Python version(s) with "
"which the script is compatible. The value of this field MUST be a valid :ref:"
"`version specifier <version-specifiers>`."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:95
msgid ""
"Script runners MUST error if the specified ``dependencies`` cannot be "
"provided. Script runners SHOULD error if no version of Python that satisfies "
"the specified ``requires-python`` can be provided."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:102
msgid "The following is an example of a script with embedded metadata:"
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:125
msgid ""
"The following is an example of how to read the metadata on Python 3.11 or "
"higher."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:151
msgid ""
"Often tools will edit dependencies like package managers or dependency "
"update automation in CI. The following is a crude example of modifying the "
"content using the ``tomlkit`` library__."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:182
msgid ""
"Note that this example used a library that preserves TOML formatting. This "
"is not a requirement for editing by any means but rather is a \"nice to "
"have\" feature."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:186
msgid ""
"The following is an example of how to read a stream of arbitrary metadata "
"blocks."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:205
#: ../source/specifications/simple-repository-api.rst:954
#, fuzzy
msgid "Recommendations"
msgstr "Recomendações de ferramentas"

#: ../source/specifications/inline-script-metadata.rst:207
msgid ""
"Tools that support managing different versions of Python should attempt to "
"use the highest available version of Python that is compatible with the "
"script's ``requires-python`` metadata, if defined."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:215
msgid ""
"October 2023: This specification was conditionally approved through :pep:"
"`723`."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:216
msgid ""
"January 2024: Through amendments to :pep:`723`, the ``pyproject`` metadata "
"block type was renamed to ``script``, and the ``[run]`` table was dropped, "
"making the ``dependencies`` and ``requires-python`` keys top-level. "
"Additionally, the specification is no longer provisional."
msgstr ""

#: ../source/specifications/license-expression.rst:5
msgid ""
":pep:`639` defined a new :ref:`pyproject.toml's license <pyproject-toml-"
"license>` value and added a corresponding :ref:`core metadata License-"
"Expression field <core-metadata-license-expression>`. This specification "
"defines which license expressions are acceptable."
msgstr ""

#: ../source/specifications/license-expression.rst:14
msgid ""
"License can be defined as a text string that is a valid SPDX :term:`license "
"expression <License Expression>`, as documented in the `SPDX specification "
"<spdxpression_>`__, either Version 2.2 or a later compatible version."
msgstr ""

#: ../source/specifications/license-expression.rst:19
msgid "A license expression can use the following license identifiers:"
msgstr ""

#: ../source/specifications/license-expression.rst:21
msgid ""
"Any SPDX-listed license short-form identifiers that are published in the "
"`SPDX License List <spdxlist_>`__, version 3.17 or any later compatible "
"version."
msgstr ""

#: ../source/specifications/license-expression.rst:25
msgid ""
"The custom ``LicenseRef-[idstring]`` string(s), where ``[idstring]`` is a "
"unique string containing letters, numbers, ``.`` and/or ``-``, to identify "
"licenses that are not included in the SPDX license list. The custom "
"identifiers must follow the SPDX specification, `clause 10.1 "
"<spdxcustom_>`__ of the given specification version."
msgstr ""

#: ../source/specifications/license-expression.rst:32
#, fuzzy
#| msgid "in favour of ``Requires-Dist``"
msgid "Examples of valid license expressions:"
msgstr "em favor de ``Requires-Dist``"

#: ../source/specifications/license-expression.rst:45
#, fuzzy
#| msgid "in favour of ``Requires-Dist``"
msgid "Examples of invalid license expressions:"
msgstr "em favor de ``Requires-Dist``"

#: ../source/specifications/name-normalization.rst:3
#, fuzzy
msgid "Names and normalization"
msgstr "Normalização de nome de pacote"

#: ../source/specifications/name-normalization.rst:5
msgid ""
"This specification defines the format that names for packages and extras are "
"required to follow. It also describes how to normalize them, which should be "
"done before lookups and comparisons."
msgstr ""

#: ../source/specifications/name-normalization.rst:13
#, fuzzy
msgid "Name format"
msgstr "Formato de arquivo"

#: ../source/specifications/name-normalization.rst:15
#, fuzzy
msgid ""
"A valid name consists only of ASCII letters and numbers, period, underscore "
"and hyphen. It must start and end with a letter or number. This means that "
"valid project names are limited to those which match the following regex "
"(run with :py:data:`re.IGNORECASE`)::"
msgstr ""
"Um nome válido consiste apenas em letras e números ASCII, ponto, sublinhado "
"e hífen. Deve começar e terminar com uma letra ou número. Isso significa que "
"nomes de projeto válidos são limitados àqueles que correspondem ao seguinte "
"regex (executado com ``re.IGNORECASE``)::"

#: ../source/specifications/name-normalization.rst:26
#, fuzzy
msgid "Name normalization"
msgstr "Normalização"

#: ../source/specifications/name-normalization.rst:28
msgid ""
"The name should be lowercased with all runs of the characters ``.``, ``-``, "
"or ``_`` replaced with a single ``-`` character. This can be implemented in "
"Python with the re module:"
msgstr ""
"O nome deve ser colocado em letras minúsculas com todos os caracteres ``.``, "
"``-`` ou ``_`` substituídos por um único caractere ``-``. Isso pode ser "
"implementado em Python com o módulo re:"

#: ../source/specifications/name-normalization.rst:39
msgid "This means that the following names are all equivalent:"
msgstr "Isso significa que os seguintes nomes são todos equivalentes:"

#: ../source/specifications/name-normalization.rst:41
msgid "``friendly-bard`` (normalized form)"
msgstr "``friendly-bard`` (forma normalizada)"

#: ../source/specifications/name-normalization.rst:42
msgid "``Friendly-Bard``"
msgstr "``Friendly-Bard``"

#: ../source/specifications/name-normalization.rst:43
msgid "``FRIENDLY-BARD``"
msgstr "``FRIENDLY-BARD``"

#: ../source/specifications/name-normalization.rst:44
msgid "``friendly.bard``"
msgstr "``friendly.bard``"

#: ../source/specifications/name-normalization.rst:45
msgid "``friendly_bard``"
msgstr "``friendly_bard``"

#: ../source/specifications/name-normalization.rst:46
msgid "``friendly--bard``"
msgstr "``friendly--bard``"

#: ../source/specifications/name-normalization.rst:47
#, fuzzy
msgid ""
"``FrIeNdLy-._.-bArD`` (a *terrible* way to write a name, but it is valid)"
msgstr ""
"``FrIeNdLy-._.-bArD`` (uma forma _terrível_ de descrever um nome, mas é "
"válida)"

#: ../source/specifications/name-normalization.rst:52
msgid ""
"September 2015: The specification of name normalized was approved through :"
"pep:`503 <503#normalized-names>`."
msgstr ""

#: ../source/specifications/name-normalization.rst:54
msgid ""
"November 2015: The specification of valid names was approved through :pep:"
"`508 <508#names>`."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:6
msgid "Platform compatibility tags"
msgstr "Tags de compatibilidade de plataforma"

#: ../source/specifications/platform-compatibility-tags.rst:8
msgid ""
"Platform compatibility tags allow build tools to mark distributions as being "
"compatible with specific platforms, and allows installers to understand "
"which distributions are compatible with the system they are running on."
msgstr ""
"As tags de compatibilidade de plataforma permitem que ferramentas de "
"construção marquem as distribuições como sendo compatíveis com plataformas "
"específicas e permitem que os instaladores entendam quais distribuições são "
"compatíveis com o sistema em que estão executando."

#: ../source/specifications/platform-compatibility-tags.rst:16
msgid "The tag format is ``{python tag}-{abi tag}-{platform tag}``."
msgstr "Oformato da tag é ``{python tag}-{abi tag}-{platform tag}``."

#: ../source/specifications/platform-compatibility-tags.rst:18
msgid "python tag"
msgstr "python tag"

#: ../source/specifications/platform-compatibility-tags.rst:19
msgid "'py27', 'cp33'"
msgstr "'py27', 'cp33'"

#: ../source/specifications/platform-compatibility-tags.rst:21
msgid "'cp32dmu', 'none'"
msgstr "'cp32dmu', 'none'"

#: ../source/specifications/platform-compatibility-tags.rst:23
msgid "'linux_x86_64', 'any'"
msgstr "'linux_x86_64', 'any'"

#: ../source/specifications/platform-compatibility-tags.rst:25
msgid ""
"For example, the tag ``py27-none-any`` indicates compatibility with Python "
"2.7 (any Python 2.7 implementation) with no abi requirement, on any platform."
msgstr ""
"Por exemplo, a tag ``py27-none-any`` indica compatibilidade com Python 2.7 "
"(qualquer implementação Python 2.7), com nenhum requisito de ABI, em "
"qualquer plataforma."

#: ../source/specifications/platform-compatibility-tags.rst:28
msgid ""
"The ``wheel`` built package format includes these tags in its filenames, of "
"the form ``{distribution}-{version}(-{build tag})?-{python tag}-{abitag}-"
"{platform tag}.whl``. Other package formats may have their own conventions."
msgstr ""
"O formato de pacote construído ``wheel`` inclui essas tags em seus nomes de "
"arquivo, no formato ``{distribution}-{version}(-{build tag})?-{python tag}-"
"{abitag}-{platform tag} .whl``. Outros formatos de pacote podem ter suas "
"próprias convenções."

#: ../source/specifications/platform-compatibility-tags.rst:33
msgid "Any potential spaces in any tag should be replaced with ``_``."
msgstr ""
"Quaisquer espaços em potencial em alguma tag deve ser substituído por ``_``."

#: ../source/specifications/platform-compatibility-tags.rst:37
msgid "Python Tag"
msgstr "A tag Python"

#: ../source/specifications/platform-compatibility-tags.rst:39
msgid ""
"The Python tag indicates the implementation and version required by a "
"distribution.  Major implementations have abbreviated codes, initially:"
msgstr ""
"A tag Python indica a implementação e a versão exigida por uma distribuição. "
"As principais implementações têm códigos abreviados, inicialmente:"

#: ../source/specifications/platform-compatibility-tags.rst:42
msgid "py: Generic Python (does not require implementation-specific features)"
msgstr "py: Python genérico (não requer recursos específicos de implementação)"

#: ../source/specifications/platform-compatibility-tags.rst:43
msgid "cp: CPython"
msgstr "cp: CPython"

#: ../source/specifications/platform-compatibility-tags.rst:44
msgid "ip: IronPython"
msgstr "ip: IronPython"

#: ../source/specifications/platform-compatibility-tags.rst:45
msgid "pp: PyPy"
msgstr "pp: PyPy"

#: ../source/specifications/platform-compatibility-tags.rst:46
msgid "jy: Jython"
msgstr "jy: Jython"

#: ../source/specifications/platform-compatibility-tags.rst:48
#, fuzzy
msgid ""
"Other Python implementations should use :py:data:`sys.implementation.name "
"<sys.implementation>`."
msgstr "Outras implementações Python devem usar ``sys.implementation.name``."

#: ../source/specifications/platform-compatibility-tags.rst:50
msgid ""
"The version is ``py_version_nodot``.  CPython gets away with no dot, but if "
"one is needed the underscore ``_`` is used instead.  PyPy should probably "
"use its own versions here ``pp18``, ``pp19``."
msgstr ""
"A versão é ``py_version_nodot``. CPython fica sem ponto, mas se um for "
"necessário, o sublinhado ``_`` é usado em seu lugar. PyPy provavelmente deve "
"usar suas próprias versões aqui ``pp18``, ``pp19``."

#: ../source/specifications/platform-compatibility-tags.rst:54
msgid ""
"The version can be just the major version ``2`` or ``3`` ``py2``, ``py3`` "
"for many pure-Python distributions."
msgstr ""
"A versão pode ser apenas a versão principal ``2`` ou ``3`` ``py2``, ``py3`` "
"para muitas distribuições de Python puro."

#: ../source/specifications/platform-compatibility-tags.rst:57
msgid ""
"Importantly, major-version-only tags like ``py2`` and ``py3`` are not "
"shorthand for ``py20`` and ``py30``.  Instead, these tags mean the packager "
"intentionally released a cross-version-compatible distribution."
msgstr ""
"É importante ressaltar que as tags somente da versão principal, como ``py2`` "
"e ``py3``, não são abreviações para ``py20`` e ``py30``. Em vez disso, essas "
"tags significam que o empacotador lançou intencionalmente uma distribuição "
"compatível com várias versões."

#: ../source/specifications/platform-compatibility-tags.rst:61
msgid ""
"A single-source Python 2/3 compatible distribution can use the compound tag "
"``py2.py3``.  See `Compressed Tag Sets`_, below."
msgstr ""
"Uma distribuição compatível com Python 2/3 de fonte única pode usar a tag "
"composta ``py2.py3``. Consulte `Conjuntos de tags compactadas`_, abaixo."

#: ../source/specifications/platform-compatibility-tags.rst:66
msgid "ABI Tag"
msgstr "A tag ABI"

#: ../source/specifications/platform-compatibility-tags.rst:68
msgid ""
"The ABI tag indicates which Python ABI is required by any included extension "
"modules.  For implementation-specific ABIs, the implementation is "
"abbreviated in the same way as the Python Tag, e.g. ``cp33d`` would be the "
"CPython 3.3 ABI with debugging."
msgstr ""
"A tag ABI indica qual ABI do Python é necessária para qualquer módulo de "
"extensão incluído. Para ABIs específicos de implementação, a implementação é "
"abreviada da mesma forma que a tag Python, por exemplo ``cp33d`` seria o ABI "
"CPython 3.3 com depuração."

#: ../source/specifications/platform-compatibility-tags.rst:73
msgid "The CPython stable ABI is ``abi3`` as in the shared library suffix."
msgstr ""
"A ABI estável do CPython é ``abi3`` como no sufixo da biblioteca "
"compartilhada."

#: ../source/specifications/platform-compatibility-tags.rst:75
msgid ""
"Implementations with a very unstable ABI may use the first 6 bytes (as 8 "
"base64-encoded characters) of the SHA-256 hash of their source code revision "
"and compiler flags, etc, but will probably not have a great need to "
"distribute binary distributions. Each implementation's community may decide "
"how to best use the ABI tag."
msgstr ""
"Implementações com uma ABI muito instável podem usar os primeiros 6 bytes "
"(como 8 caracteres codificados em base64) do hash SHA-256 de sua revisão de "
"código-fonte e sinalizadores de compilador, etc, mas provavelmente não terão "
"uma grande necessidade de distribuir distribuições binárias. A comunidade de "
"cada implementação pode decidir como usar melhor a tag ABI."

#: ../source/specifications/platform-compatibility-tags.rst:83
msgid "Platform Tag"
msgstr "A tag Platform"

#: ../source/specifications/platform-compatibility-tags.rst:86
#, fuzzy
msgid "Basic platform tags"
msgstr "platform tag"

#: ../source/specifications/platform-compatibility-tags.rst:88
#, fuzzy
msgid ""
"In its simplest form, the platform tag is :py:func:`sysconfig."
"get_platform()` with all hyphens ``-`` and periods ``.`` replaced with "
"underscore ``_``. Until the removal of :ref:`distutils` in Python 3.12, this "
"was ``distutils.util.get_platform()``. For example:"
msgstr ""
"A tag da plataforma é simplesmente ``distutils.util.get_platform()`` com "
"todos os hífens ``-`` e pontos ``.`` substituídos por sublinhados ``_``."

#: ../source/specifications/platform-compatibility-tags.rst:93
msgid "win32"
msgstr "win32"

#: ../source/specifications/platform-compatibility-tags.rst:94
msgid "linux_i386"
msgstr "linux_i386"

#: ../source/specifications/platform-compatibility-tags.rst:95
msgid "linux_x86_64"
msgstr "linux_x86_64"

#: ../source/specifications/platform-compatibility-tags.rst:101
msgid "``manylinux``"
msgstr "``manylinux``"

#: ../source/specifications/platform-compatibility-tags.rst:103
#, fuzzy
msgid ""
"The simple scheme above is insufficient for public distribution of wheel "
"files to Linux platforms, due to the large ecosystem of Linux platforms and "
"subtle differences between them."
msgstr ""
"O esquema definido na :pep:`425` é insuficiente para distribuição pública de "
"arquivos wheel (e arquivos wheel do \\*nix em geral) para plataformas Linux, "
"devido ao grande ecossistema de plataformas Linux e diferenças sutis entre "
"elas."

#: ../source/specifications/platform-compatibility-tags.rst:107
#, fuzzy
msgid ""
"Instead, for those platforms, the ``manylinux`` standard represents a common "
"subset of Linux platforms, and allows building wheels tagged with the "
"``manylinux`` platform tag which can be used across most common Linux "
"distributions."
msgstr ""
"Em vez disso, a :pep:`600` define o padrão ``manylinux``, que representa um "
"subconjunto comum de plataformas Linux, e permite a construção de wheels com "
"a tag de plataforma ``manylinux`` que pode ser usada na maioria das "
"distribuições Linux."

#: ../source/specifications/platform-compatibility-tags.rst:112
msgid ""
"The current standard is the future-proof :file:`manylinux_{x}_{y}` standard. "
"It defines tags of the form :file:`manylinux_{x}_{y}_{arch}`, where ``x`` "
"and ``y`` are glibc major and minor versions supported (e.g. "
"``manylinux_2_24_xxx`` should work on any distro using glibc 2.24+), and "
"``arch`` is the architecture, matching the value of :py:func:`sysconfig."
"get_platform()` on the system as in the \"simple\" form above."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:118
msgid ""
"The following older tags are still supported for backward compatibility:"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:120
#, fuzzy
msgid ""
"``manylinux1`` supports glibc 2.5 on ``x86_64`` and ``i686`` architectures."
msgstr ""
"``manylinux1`` (:pep:`513`) oferece suporte às arquiteturas ``x86_64`` e "
"``i686`` e é baseado em uma plataforma Linux compatível de 2007."

#: ../source/specifications/platform-compatibility-tags.rst:121
msgid "``manylinux2010`` supports glibc 2.12 on ``x86_64`` and ``i686``."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:122
msgid ""
"``manylinux2014`` supports glibc 2.17 on ``x86_64``, ``i686``, ``aarch64``, "
"``armv7l``, ``ppc64``, ``ppc64le``, and ``s390x``."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:125
msgid ""
"In general, distributions built for older versions of the specification are "
"forwards-compatible (meaning that ``manylinux1`` distributions should "
"continue to work on modern systems) but not backwards-compatible (meaning "
"that ``manylinux2010`` distributions are not expected to work on platforms "
"that existed before 2010)."
msgstr ""
"Em geral, as distribuições construídas para versões mais antigas da "
"especificação são compatíveis com versões futuras (o que significa que as "
"distribuições ``manylinux1`` devem continuar a funcionar em sistemas "
"modernos), mas não compatíveis com versões anteriores (significando que "
"distribuições ``manylinux2010`` não devem trabalhar em plataformas que "
"existiam antes de 2010)."

#: ../source/specifications/platform-compatibility-tags.rst:131
msgid ""
"Package maintainers should attempt to target the most compatible "
"specification possible, with the caveat that the provided build environment "
"for ``manylinux1`` and ``manylinux2010`` have reached end-of-life meaning "
"that these images will no longer receive security updates."
msgstr ""
"Os mantenedores do pacote devem tentar atingir a especificação mais "
"compatível possível, com a ressalva de que o ambiente de compilação "
"fornecido para ``manylinux1`` e ``manylinux2010`` atingiu o fim da vida, o "
"que significa que essas imagens não receberão mais atualizações de segurança."

#: ../source/specifications/platform-compatibility-tags.rst:136
msgid ""
"The following table shows the minimum versions of relevant projects to "
"support the various ``manylinux`` standards:"
msgstr ""
"A tabela a seguir mostra as versões mínimas de projetos relevantes para "
"oferecer suporte aos vários padrões ``manylinux``:"

#: ../source/specifications/platform-compatibility-tags.rst:140
msgid "Tool"
msgstr "Ferramenta"

#: ../source/specifications/platform-compatibility-tags.rst:140
msgid "``manylinux1``"
msgstr "``manylinux1``"

#: ../source/specifications/platform-compatibility-tags.rst:140
msgid "``manylinux2010``"
msgstr "``manylinux2010``"

#: ../source/specifications/platform-compatibility-tags.rst:140
msgid "``manylinux2014``"
msgstr "``manylinux2014``"

#: ../source/specifications/platform-compatibility-tags.rst:140
msgid "``manylinux_x_y``"
msgstr "``manylinux_x_y``"

#: ../source/specifications/platform-compatibility-tags.rst:142
msgid "``>=8.1.0``"
msgstr "``>=8.1.0``"

#: ../source/specifications/platform-compatibility-tags.rst:142
msgid "``>=19.0``"
msgstr "``>=19.0``"

#: ../source/specifications/platform-compatibility-tags.rst:142
msgid "``>=19.3``"
msgstr "``>=19.3``"

#: ../source/specifications/platform-compatibility-tags.rst:142
msgid "``>=20.3``"
msgstr "``>=20.3``"

#: ../source/specifications/platform-compatibility-tags.rst:143
msgid "auditwheel"
msgstr "auditwheel"

#: ../source/specifications/platform-compatibility-tags.rst:143
msgid "``>=1.0.0``"
msgstr "``>=1.0.0``"

#: ../source/specifications/platform-compatibility-tags.rst:143
msgid "``>=2.0.0``"
msgstr "``>=2.0.0``"

#: ../source/specifications/platform-compatibility-tags.rst:143
msgid "``>=3.0.0``"
msgstr "``>=3.0.0``"

#: ../source/specifications/platform-compatibility-tags.rst:143
msgid "``>=3.3.0`` [#]_"
msgstr "``>=3.3.0`` [#]_"

#: ../source/specifications/platform-compatibility-tags.rst:146
msgid "Only support for ``manylinux_2_24`` has been added in auditwheel 3.3.0"
msgstr ""
"Suporte somente para ``manylinux_2_24`` foi adicionado em auditwheel 3.3.0"

#: ../source/specifications/platform-compatibility-tags.rst:150
#, fuzzy
msgid "``musllinux``"
msgstr "``manylinux``"

#: ../source/specifications/platform-compatibility-tags.rst:152
msgid ""
"The ``musllinux`` family of tags is similar to ``manylinux``, but for Linux "
"platforms that use the musl_ libc rather than glibc (a prime example being "
"Alpine Linux). The schema is :file:`musllinux_{x}_{y}_{arch}`, supporting "
"musl ``x.y`` and higher on the architecture ``arch``."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:157
msgid ""
"The musl version values can be obtained by executing the musl libc shared "
"library the Python interpreter is currently running on, and parsing the "
"output:"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:188
msgid ""
"There are currently two possible ways to find the musl library’s location "
"that a Python interpreter is running on, either with the system ldd_ "
"command, or by parsing the ``PT_INTERP`` section’s value from the "
"executable’s ELF_ header."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:197
msgid ""
"macOS uses the ``macosx`` family of tags (the ``x`` suffix is a historical "
"artefact of Apple's official macOS naming scheme). The schema for "
"compatibility tags is :file:`macosx_{x}_{y}_{arch}`, indicating that the "
"wheel is compatible with macOS ``x.y`` or later on the architecture ``arch``."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:202
msgid ""
"The values of ``x`` and ``y`` correspond to the major and minor version "
"number of the macOS release, respectively. They must both be positive "
"integers, with the ``x`` value being ``>= 10``. The version number always "
"includes a major *and* minor version, even if Apple's official version "
"numbering only refers to the major value. For example, ``macosx_11_0_arm64`` "
"indicates compatibility with macOS 11 or later."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:209
msgid ""
"macOS binaries can be compiled for a single architecture, or can include "
"support for multiple architectures in the same binary (sometimes called "
"\"fat\" binaries). To indicate support for a single architecture, the value "
"of ``arch`` must match the value of :py:func:`platform.machine()` on the "
"system. To indicate support multiple architectures, the ``arch`` tag should "
"be an identifier from the following list that describes the set of supported "
"architectures:"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:217
msgid "``arch``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:217
msgid "Architectures supported"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:219
msgid "``universal2``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:219
#, fuzzy
#| msgid "``x86_64``"
msgid "``arm64``, ``x86_64``"
msgstr "``x86_64``"

#: ../source/specifications/platform-compatibility-tags.rst:220
msgid "``universal``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:220
msgid "``i386``, ``ppc``, ``ppc64``, ``x86_64``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:221
#, fuzzy
#| msgid "``install``"
msgid "``intel``"
msgstr "``install``"

#: ../source/specifications/platform-compatibility-tags.rst:221
#, fuzzy
#| msgid "``x86_64``"
msgid "``i386``, ``x86_64``"
msgstr "``x86_64``"

#: ../source/specifications/platform-compatibility-tags.rst:222
msgid "``fat``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:222
#, fuzzy
#| msgid "``3.4``, ``2.7``"
msgid "``i386``, ``ppc``"
msgstr "``3.4``, ``2.7``"

#: ../source/specifications/platform-compatibility-tags.rst:223
msgid "``fat3``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:223
msgid "``i386``, ``ppc``, ``x86_64``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:224
#, fuzzy
#| msgid "``x86_64``"
msgid "``fat64``"
msgstr "``x86_64``"

#: ../source/specifications/platform-compatibility-tags.rst:224
#, fuzzy
#| msgid "``x86_64``"
msgid "``ppc64``, ``x86_64``"
msgstr "``x86_64``"

#: ../source/specifications/platform-compatibility-tags.rst:227
msgid ""
"The minimum supported macOS version may also be constrained by architecture. "
"For example, macOS 11 (Big Sur) was the first release to support arm64. "
"These additional constraints are enforced transparently by the macOS "
"compilation toolchain when building binaries that support multiple "
"architectures."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:235
msgid "Android"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:237
msgid ""
"Android uses the schema :file:`android_{apilevel}_{abi}`, indicating "
"compatibility with the given Android API level or later, on the given ABI. "
"For example, ``android_27_arm64_v8a`` indicates support for API level 27 or "
"later, on ``arm64_v8a`` devices. Android makes no distinction between "
"physical devices and emulated devices."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:243
msgid ""
"The API level should be a positive integer. This is *not* the same thing as "
"the user-facing Android version. For example, the release known as Android "
"12 (code named \"Snow Cone\") uses API level 31 or 32, depending on the "
"specific Android version in use. Android's release documentation contains "
"the `full list of Android versions and their corresponding API levels "
"<https://developer.android.com/tools/releases/platforms>`__."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:250
msgid ""
"There are 4 `supported ABIs <https://developer.android.com/ndk/guides/"
"abis>`__. Normalized according to the rules above, they are:"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:253
msgid "``armeabi_v7a``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:254
msgid "``arm64_v8a``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:255
#, fuzzy
#| msgid "``x86_64``"
msgid "``x86``"
msgstr "``x86_64``"

#: ../source/specifications/platform-compatibility-tags.rst:258
msgid ""
"Virtually all current physical devices use one of the ARM architectures. "
"``x86`` and ``x86_64`` are supported for use in the emulator. ``x86`` has "
"not been supported as a development platform since 2020, and no new emulator "
"images have been released since then."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:266
msgid "iOS"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:268
msgid ""
"iOS uses the schema :file:`ios_{x}_{y}_{arch}_{sdk}`, indicating "
"compatibility with iOS ``x.y`` or later, on the ``arch`` architecture, using "
"the ``sdk`` SDK."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:271
msgid ""
"The value of ``x`` and ``y`` correspond to the major and minor version "
"number of the iOS release, respectively. They must both be positive "
"integers. The version number always includes a major *and* minor version, "
"even if Apple's official version numbering only refers to the major value. "
"For example, a ``ios_13_0_arm64_iphonesimulator`` indicates compatibility "
"with iOS 13 or later."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:277
msgid ""
"The value of ``arch`` must match the value of :py:func:`platform.machine()` "
"on the system."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:280
msgid ""
"The value of ``sdk`` must be either ``iphoneos`` (for physical devices), or "
"``iphonesimulator`` (for device simulators). These SDKs have the same API "
"surface, but are incompatible at the binary level, even if they are running "
"on the same CPU architecture. Code compiled for an arm64 simulator will not "
"run on an arm64 device."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:286
msgid ""
"The combination of :file:`{arch}_{sdk}` is referred to as the \"multiarch\". "
"There are three possible values for multiarch:"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:289
msgid ""
"``arm64_iphoneos``, for physical iPhone/iPad devices. This includes every "
"iOS device manufactured since ~2015;"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:291
msgid ""
"``arm64_iphonesimulator``, for simulators running on Apple Silicon macOS "
"hardware; and"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:293
msgid "``x86_64_iphonesimulator``, for simulators running on x86_64 hardware."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:296
msgid "Use"
msgstr "Uso"

#: ../source/specifications/platform-compatibility-tags.rst:298
msgid ""
"The tags are used by installers to decide which built distribution (if any) "
"to download from a list of potential built distributions. The installer "
"maintains a list of (pyver, abi, arch) tuples that it will support.  If the "
"built distribution's tag is ``in`` the list, then it can be installed."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:304
msgid ""
"It is recommended that installers try to choose the most feature complete "
"built distribution available (the one most specific to the installation "
"environment) by default before falling back to pure Python versions "
"published for older Python releases. Installers are also recommended to "
"provide a way to configure and re-order the list of allowed compatibility "
"tags; for example, a user might accept only the ``*-none-any`` tags to only "
"download built packages that advertise themselves as being pure Python."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:312
msgid ""
"Another desirable installer feature might be to include \"re-compile from "
"source if possible\" as more preferable than some of the compatible but "
"legacy pre-built options."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:316
msgid ""
"This example list is for an installer running under CPython 3.3 on a "
"linux_x86_64 system. It is in order from most-preferred (a distribution with "
"a compiled extension module, built for the current version of Python) to "
"least-preferred (a pure-Python distribution built with an older version of "
"Python):"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:322
msgid "cp33-cp33m-linux_x86_64"
msgstr "cp33-cp33m-linux_x86_64"

#: ../source/specifications/platform-compatibility-tags.rst:323
msgid "cp33-abi3-linux_x86_64"
msgstr "cp33-abi3-linux_x86_64"

#: ../source/specifications/platform-compatibility-tags.rst:324
msgid "cp3-abi3-linux_x86_64"
msgstr "cp3-abi3-linux_x86_64"

#: ../source/specifications/platform-compatibility-tags.rst:325
msgid "cp33-none-linux_x86_64*"
msgstr "cp33-none-linux_x86_64*"

#: ../source/specifications/platform-compatibility-tags.rst:326
msgid "cp3-none-linux_x86_64*"
msgstr "cp3-none-linux_x86_64*"

#: ../source/specifications/platform-compatibility-tags.rst:327
msgid "py33-none-linux_x86_64*"
msgstr "py33-none-linux_x86_64*"

#: ../source/specifications/platform-compatibility-tags.rst:328
msgid "py3-none-linux_x86_64*"
msgstr "py3-none-linux_x86_64*"

#: ../source/specifications/platform-compatibility-tags.rst:329
msgid "cp33-none-any"
msgstr "cp33-none-any"

#: ../source/specifications/platform-compatibility-tags.rst:330
msgid "cp3-none-any"
msgstr "cp3-none-any"

#: ../source/specifications/platform-compatibility-tags.rst:331
msgid "py33-none-any"
msgstr "py33-none-any"

#: ../source/specifications/platform-compatibility-tags.rst:332
msgid "py3-none-any"
msgstr "py3-none-any"

#: ../source/specifications/platform-compatibility-tags.rst:333
msgid "py32-none-any"
msgstr "py32-none-any"

#: ../source/specifications/platform-compatibility-tags.rst:334
msgid "py31-none-any"
msgstr "py31-none-any"

#: ../source/specifications/platform-compatibility-tags.rst:335
msgid "py30-none-any"
msgstr "py30-none-any"

#: ../source/specifications/platform-compatibility-tags.rst:337
msgid ""
"Built distributions may be platform specific for reasons other than C "
"extensions, such as by including a native executable invoked as a subprocess."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:341
msgid ""
"Sometimes there will be more than one supported built distribution for a "
"particular version of a package.  For example, a packager could release a "
"package tagged ``cp33-abi3-linux_x86_64`` that contains an optional C "
"extension and the same distribution tagged ``py3-none-any`` that does not. "
"The index of the tag in the supported tags list breaks the tie, and the "
"package with the C extension is installed in preference to the package "
"without because that tag appears first in the list."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:350
msgid "Compressed Tag Sets"
msgstr "Conjuntos de Etiquetas Comprimidos"

#: ../source/specifications/platform-compatibility-tags.rst:352
msgid ""
"To allow for compact filenames of bdists that work with more than one "
"compatibility tag triple, each tag in a filename can instead be a '.'-"
"separated, sorted, collection of tags.  For example, pip, a pure-Python "
"package that is written to run under Python 2 and 3 with the same source "
"code, could distribute a bdist with the tag ``py2.py3-none-any``. The full "
"list of simple tags is::"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:364
msgid ""
"A bdist format that implements this scheme should include the expanded tags "
"in bdist-specific metadata.  This compression scheme can generate large "
"numbers of unsupported tags and \"impossible\" tags that are supported by no "
"Python implementation e.g. \"cp33-cp31u-win64\", so use it sparingly."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:377
msgid "What tags are used by default?"
msgstr "Quais etiquetas são utilizadas por padrão?"

#: ../source/specifications/platform-compatibility-tags.rst:373
msgid ""
"Tools should use the most-preferred architecture dependent tag e.g. ``cp33-"
"cp33m-win32`` or the most-preferred pure python tag e.g. ``py33-none-any`` "
"by default.  If the packager overrides the default it indicates that they "
"intended to provide cross-Python compatibility."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:387
msgid ""
"What tag do I use if my distribution uses a feature exclusive to the newest "
"version of Python?"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:380
msgid ""
"Compatibility tags aid installers in selecting the *most compatible* build "
"of a *single version* of a distribution. For example, when there is no "
"Python 3.3 compatible build of ``beaglevote-1.2.0`` (it uses a Python 3.4 "
"exclusive feature) it may still use the ``py3-none-any`` tag instead of the "
"``py34-none-any`` tag. A Python 3.3 user must combine other qualifiers, such "
"as a requirement for the older release ``beaglevote-1.1.0`` that does not "
"use the new feature, to get a compatible build."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:392
msgid "Why isn't there a ``.`` in the Python version number?"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:390
msgid ""
"CPython has lasted 20+ years without a 3-digit major release. This should "
"continue for some time.  Other implementations may use _ as a delimiter, "
"since both - and . delimit the surrounding filename."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:398
msgid ""
"Why normalise hyphens and other non-alphanumeric characters to underscores?"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:395
msgid ""
"To avoid conflicting with the ``.`` and ``-`` characters that separate "
"components of the filename, and for better compatibility with the widest "
"range of filesystem limitations for filenames (including being usable in URL "
"paths without quoting)."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:407
msgid "Why not use special character <X> rather than ``.`` or ``-``?"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:401
msgid ""
"Either because that character is inconvenient or potentially confusing in "
"some contexts (for example, ``+`` must be quoted in URLs, ``~`` is used to "
"denote the user's home directory in POSIX), or because the advantages "
"weren't sufficiently compelling to justify changing the existing reference "
"implementation for the wheel format defined in :pep:`427` (for example, "
"using ``,`` rather than ``.`` to separate components in a compressed tag)."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:412
msgid "Who will maintain the registry of abbreviated implementations?"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:410
msgid ""
"New two-letter abbreviations can be requested on the python-dev mailing "
"list.  As a rule of thumb, abbreviations are reserved for the current 4 most "
"prominent implementations."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:417
msgid "Does the compatibility tag go into METADATA or PKG-INFO?"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:415
msgid ""
"No.  The compatibility tag is part of the built distribution's metadata.  "
"METADATA / PKG-INFO should be valid for an entire distribution, not a single "
"build of that distribution."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:423
msgid "Why didn't you mention my favorite Python implementation?"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:420
msgid ""
"The abbreviated tags facilitate sharing compiled Python code in a public "
"index.  Your Python implementation can use this specification too, but with "
"longer tags. Recall that all \"pure Python\" built distributions just use "
"``py``."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:431
msgid ""
"Why is the ABI tag (the second tag) sometimes \"none\" in the reference "
"implementation?"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:426
msgid ""
"Since Python 2 does not have an easy way to get to the SOABI (the concept "
"comes from newer versions of Python 3) the reference implementation at the "
"time of writing guesses \"none\".  Ideally it would detect \"py27(d|m|u)\" "
"analogous to newer versions of Python, but in the meantime \"none\" is a "
"good enough way to say \"don't know\"."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:436
msgid ""
"February 2013: The original version of this specification was approved "
"through :pep:`425`."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:438
msgid "January 2016: The ``manylinux1`` tag was approved through :pep:`513`."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:439
msgid "April 2018: The ``manylinux2010`` tag was approved through :pep:`571`."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:440
msgid "July 2019: The ``manylinux2014`` tag was approved through :pep:`599`."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:441
msgid ""
"November 2019: The ``manylinux_x_y`` perennial tag was approved through :pep:"
"`600`."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:443
msgid "April 2021: The ``musllinux_x_y`` tag was approved through :pep:`656`."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:444
#, fuzzy
#| msgid ""
#| "This document describes the dependency specifiers format as originally "
#| "specified in :pep:`508`."
msgid "December 2023: The tags for iOS were approved through :pep:`730`."
msgstr ""
"Este documento descreve o formato dos especificadores de dependência "
"conforme originalmente especificado na :pep:`508`."

#: ../source/specifications/platform-compatibility-tags.rst:445
#, fuzzy
#| msgid ""
#| "This document describes the dependency specifiers format as originally "
#| "specified in :pep:`508`."
msgid "March 2024: The tags for Android were approved through :pep:`738`."
msgstr ""
"Este documento descreve o formato dos especificadores de dependência "
"conforme originalmente especificado na :pep:`508`."

#: ../source/specifications/project-status-markers.rst:5
#, fuzzy
#| msgid "Project Summaries"
msgid "Project Status Markers"
msgstr "Resumos de projetos"

#: ../source/specifications/project-status-markers.rst:9
#, fuzzy
#| msgid ""
#| "This document describes the dependency specifiers format as originally "
#| "specified in :pep:`508`."
msgid "This specification was originally defined in :pep:`792`."
msgstr ""
"Este documento descreve o formato dos especificadores de dependência "
"conforme originalmente especificado na :pep:`508`."

#: ../source/specifications/project-status-markers.rst:14
msgid ""
":pep:`792` includes changes to the HTML and JSON index APIs. These changes "
"are documented in the :ref:`simple-repository-api` under :ref:`HTML - "
"Project Detail <simple-repository-html-project-detail>` and :ref:`JSON - "
"Project Detail <simple-repository-json-project-detail>`."
msgstr ""

#: ../source/specifications/project-status-markers.rst:22
msgid ""
"A project always has exactly one status. If no status is explicitly noted, "
"then the project is considered to be in the ``active`` state."
msgstr ""

#: ../source/specifications/project-status-markers.rst:25
msgid ""
"Indices **MAY** implement any subset of the status markers specified, as "
"applicable to their needs."
msgstr ""

#: ../source/specifications/project-status-markers.rst:28
msgid ""
"This standard does not prescribe *which* principals (i.e. project "
"maintainers, index administrators, etc.) are allowed to set and unset which "
"statuses."
msgstr ""

#: ../source/specifications/project-status-markers.rst:32
msgid "``active``"
msgstr ""

#: ../source/specifications/project-status-markers.rst:34
msgid ""
"Description: The project is active. This is the default status for a project."
msgstr ""

#: ../source/specifications/project-status-markers.rst:36
#: ../source/specifications/project-status-markers.rst:49
#: ../source/specifications/project-status-markers.rst:65
#: ../source/specifications/project-status-markers.rst:83
msgid "Index semantics:"
msgstr ""

#: ../source/specifications/project-status-markers.rst:38
msgid ""
"The index hosting the project **MUST** allow uploads of new distributions to "
"the project."
msgstr ""

#: ../source/specifications/project-status-markers.rst:40
#: ../source/specifications/project-status-markers.rst:53
msgid ""
"The index **MUST** offer existing distributions of the project for download."
msgstr ""

#: ../source/specifications/project-status-markers.rst:42
#, fuzzy
#| msgid "Installation"
msgid "Installer semantics: none."
msgstr "Instalação"

#: ../source/specifications/project-status-markers.rst:45
#, fuzzy
#| msgid "``packages``"
msgid "``archived``"
msgstr "``packages``"

#: ../source/specifications/project-status-markers.rst:47
msgid "Description: The project does not expect to be updated in the future."
msgstr ""

#: ../source/specifications/project-status-markers.rst:51
#: ../source/specifications/project-status-markers.rst:67
msgid ""
"The index hosting the project **MUST NOT** allow uploads of new "
"distributions to the project."
msgstr ""

#: ../source/specifications/project-status-markers.rst:55
#: ../source/specifications/project-status-markers.rst:71
#: ../source/specifications/project-status-markers.rst:87
#, fuzzy
msgid "Installer semantics:"
msgstr "Instalador"

#: ../source/specifications/project-status-markers.rst:57
msgid "Installers **MAY** produce warnings about a project's archival."
msgstr ""

#: ../source/specifications/project-status-markers.rst:60
msgid "``quarantined``"
msgstr ""

#: ../source/specifications/project-status-markers.rst:62
msgid ""
"Description: The project is considered generally unsafe for use, e.g. due to "
"malware."
msgstr ""

#: ../source/specifications/project-status-markers.rst:69
msgid ""
"The index **MUST NOT** offer any distributions of the project for download."
msgstr ""

#: ../source/specifications/project-status-markers.rst:73
msgid ""
"Installers **MAY** produce warnings about a project's quarantine, although "
"doing so is effectively moot (as the index will not offer any distributions "
"for installation)."
msgstr ""

#: ../source/specifications/project-status-markers.rst:78
#, fuzzy
#| msgid "Deprecated"
msgid "``deprecated``"
msgstr "Descontinuado"

#: ../source/specifications/project-status-markers.rst:80
msgid ""
"Description: The project is considered obsolete, and may have been "
"superseded by another project."
msgstr ""

#: ../source/specifications/project-status-markers.rst:85
msgid "This status shares the same semantics as ``active``."
msgstr ""

#: ../source/specifications/project-status-markers.rst:89
msgid "Installers **MAY** produce warnings about a project's deprecation."
msgstr ""

#: ../source/specifications/pylock-toml.rst:6
#, fuzzy
#| msgid "``pyproject.toml`` specification"
msgid "``pylock.toml`` Specification"
msgstr "Especificação do ``pyproject.toml``"

#: ../source/specifications/pylock-toml.rst:8
msgid ""
"The ``pylock.toml`` file format is for specifying dependencies to enable "
"reproducible installation in a Python environment."
msgstr ""

#: ../source/specifications/pylock-toml.rst:11
#, fuzzy
#| msgid ""
#| "This document describes the dependency specifiers format as originally "
#| "specified in :pep:`508`."
msgid "This specification was originally defined in :pep:`751`."
msgstr ""
"Este documento descreve o formato dos especificadores de dependência "
"conforme originalmente especificado na :pep:`508`."

#: ../source/specifications/pylock-toml.rst:16
#, fuzzy
#| msgid "Name"
msgid "File Name"
msgstr "Nome"

#: ../source/specifications/pylock-toml.rst:18
msgid ""
"A lock file MUST be named :file:`pylock.toml` or match the regular "
"expression ``r\"^pylock\\.([^.]+)\\.toml$\"`` if a name for the lock file is "
"desired or if multiple lock files exist (i.e. the regular expression "
"``r\"^pylock\\.([^.]+\\.)?toml$\"`` for any file name). The prefix and "
"suffix of a named file MUST be lowercase when possible, for easy detection "
"and removal, e.g.:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:30
msgid ""
"The expectation is that services that automatically install from lock files "
"will search for:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:33
msgid "The lock file with the service's name and doing the default install"
msgstr ""

#: ../source/specifications/pylock-toml.rst:34
msgid ""
"A multi-use :file:`pylock.toml` with a dependency group with the name of the "
"service"
msgstr ""

#: ../source/specifications/pylock-toml.rst:35
msgid "The default install of :file:`pylock.toml`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:37
msgid ""
"E.g. a cloud host service named \"spam\" would first look for :file:`pylock."
"spam.toml` to install from, and if that file didn't exist then install from :"
"file:`pylock.toml` and look for a dependency group named \"spam\" to use if "
"present."
msgstr ""

#: ../source/specifications/pylock-toml.rst:42
msgid ""
"The lock file(s) SHOULD be located in the directory as appropriate for the "
"scope of the lock file. Locking against a single :file:`pyproject.toml`, for "
"instance, would place the :file:`pylock.toml` in the same directory. If the "
"lock file covered multiple projects in a monorepo, then the expectation is "
"the :file:`pylock.toml` file would be in the directory that held all the "
"projects being locked."
msgstr ""

#: ../source/specifications/pylock-toml.rst:53
msgid "The format of the file is TOML_."
msgstr ""

#: ../source/specifications/pylock-toml.rst:55
msgid ""
"Tools SHOULD write their lock files in a consistent way to minimize noise in "
"diff output. Keys in tables -- including the top-level table -- SHOULD be "
"recorded in a consistent order (if inspiration is desired, this "
"specification has tried to write down keys in a logical order). As well, "
"tools SHOULD sort arrays in consistent order. Usage of inline tables SHOULD "
"also be kept consistent."
msgstr ""

#: ../source/specifications/pylock-toml.rst:65
#, fuzzy
#| msgid "``platform_version``"
msgid "``lock-version``"
msgstr "``platform_version``"

#: ../source/specifications/pylock-toml.rst:67
msgid "**Type**: string; value of ``\"1.0\"``"
msgstr ""

#: ../source/specifications/pylock-toml.rst:68
#: ../source/specifications/pylock-toml.rst:174
#: ../source/specifications/pylock-toml.rst:189
#: ../source/specifications/pylock-toml.rst:202
#: ../source/specifications/pylock-toml.rst:298
#: ../source/specifications/pylock-toml.rst:348
#: ../source/specifications/pylock-toml.rst:397
#: ../source/specifications/pylock-toml.rst:494
#: ../source/specifications/pylock-toml.rst:689
#, fuzzy
#| msgid "Requires"
msgid "**Required?**: yes"
msgstr "Requires"

#: ../source/specifications/pylock-toml.rst:69
msgid "**Inspiration**: :ref:`core-metadata-metadata-version`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:70
msgid "Record the file format version that the file adheres to."
msgstr ""

#: ../source/specifications/pylock-toml.rst:71
msgid ""
"This PEP specifies the initial version -- and only valid value until future "
"updates to the standard change it -- as ``\"1.0\"``."
msgstr ""

#: ../source/specifications/pylock-toml.rst:73
msgid ""
"If a tool supports the major version but not the minor version, a tool "
"SHOULD warn when an unknown key is seen."
msgstr ""

#: ../source/specifications/pylock-toml.rst:75
msgid "If a tool doesn't support a major version, it MUST raise an error."
msgstr ""

#: ../source/specifications/pylock-toml.rst:81
#, fuzzy
#| msgid "``entry-points``"
msgid "``environments``"
msgstr "``entry-points``"

#: ../source/specifications/pylock-toml.rst:83
#: ../source/specifications/pylock-toml.rst:110
#: ../source/specifications/pylock-toml.rst:132
#: ../source/specifications/pylock-toml.rst:154
#, fuzzy
#| msgid "TOML_ type: array of strings"
msgid "**Type**: Array of strings"
msgstr "Tipo TOML_: vetor de strings"

#: ../source/specifications/pylock-toml.rst:84
#: ../source/specifications/pylock-toml.rst:98
#: ../source/specifications/pylock-toml.rst:213
#: ../source/specifications/pylock-toml.rst:230
#: ../source/specifications/pylock-toml.rst:243
#: ../source/specifications/pylock-toml.rst:255
#: ../source/specifications/pylock-toml.rst:334
#: ../source/specifications/pylock-toml.rst:362
#: ../source/specifications/pylock-toml.rst:435
#: ../source/specifications/pylock-toml.rst:469
#: ../source/specifications/pylock-toml.rst:482
#: ../source/specifications/pylock-toml.rst:519
#: ../source/specifications/pylock-toml.rst:674
#: ../source/specifications/pylock-toml.rst:700
#: ../source/specifications/pylock-toml.rst:715
msgid "**Required?**: no"
msgstr ""

#: ../source/specifications/pylock-toml.rst:85
#: ../source/specifications/pylock-toml.rst:520
#: ../source/specifications/pylock-toml.rst:538
msgid "**Inspiration**: uv_"
msgstr ""

#: ../source/specifications/pylock-toml.rst:86
msgid ""
"A list of :ref:`dependency-specifiers-environment-markers` for which the "
"lock file is considered compatible with."
msgstr ""

#: ../source/specifications/pylock-toml.rst:88
msgid ""
"Tools SHOULD write exclusive/non-overlapping environment markers to ease in "
"understanding."
msgstr ""

#: ../source/specifications/pylock-toml.rst:97
#: ../source/specifications/pylock-toml.rst:173
#: ../source/specifications/pylock-toml.rst:201
#: ../source/specifications/pylock-toml.rst:212
#: ../source/specifications/pylock-toml.rst:229
#: ../source/specifications/pylock-toml.rst:242
#: ../source/specifications/pylock-toml.rst:308
#: ../source/specifications/pylock-toml.rst:319
#: ../source/specifications/pylock-toml.rst:333
#: ../source/specifications/pylock-toml.rst:347
#: ../source/specifications/pylock-toml.rst:361
#: ../source/specifications/pylock-toml.rst:396
#: ../source/specifications/pylock-toml.rst:518
#: ../source/specifications/pylock-toml.rst:551
#: ../source/specifications/pylock-toml.rst:620
#: ../source/specifications/pylock-toml.rst:688
#, fuzzy
#| msgid "TOML_ type: string"
msgid "**Type**: string"
msgstr "Tipo TOML_: string"

#: ../source/specifications/pylock-toml.rst:99
#: ../source/specifications/pylock-toml.rst:190
#: ../source/specifications/pylock-toml.rst:256
#: ../source/specifications/pylock-toml.rst:555
#: ../source/specifications/pylock-toml.rst:608
#: ../source/specifications/pylock-toml.rst:624
msgid "**Inspiration**: PDM_, Poetry_, uv_"
msgstr ""

#: ../source/specifications/pylock-toml.rst:100
msgid ""
"Specifies the :ref:`core-metadata-requires-python` for the minimum Python "
"version compatible for any environment supported by the lock file (i.e. the "
"minimum viable Python version for the lock file)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:111
#: ../source/specifications/pylock-toml.rst:133
#: ../source/specifications/pylock-toml.rst:155
msgid "**Required?**: no; defaults to ``[]``"
msgstr ""

#: ../source/specifications/pylock-toml.rst:112
msgid "**Inspiration**: :ref:`core-metadata-provides-extra`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:113
msgid ""
"The list of :ref:`extras <core-metadata-provides-extra>` supported by this "
"lock file."
msgstr ""

#: ../source/specifications/pylock-toml.rst:115
#: ../source/specifications/pylock-toml.rst:138
msgid ""
"Lockers MAY choose to not support writing lock files that support extras and "
"dependency groups (i.e. tools may only support exporting a single-use lock "
"file)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:118
msgid "Tools supporting extras MUST also support dependency groups."
msgstr ""

#: ../source/specifications/pylock-toml.rst:119
msgid ""
"Tools should explicitly set this key to an empty array to signal that the "
"inputs used to generate the lock file had no extras (e.g. a :ref:`pyproject."
"toml <pyproject-toml-spec>` file had no :ref:`[project.optional-"
"dependencies] <pyproject-toml-optional-dependencies>` table), signalling "
"that the lock file is, in effect, multi-use even if it only looks to be "
"single-use."
msgstr ""

#: ../source/specifications/pylock-toml.rst:130
#, fuzzy
#| msgid "``dependencies``"
msgid "``dependency-groups``"
msgstr "``dependencies``"

#: ../source/specifications/pylock-toml.rst:134
#: ../source/specifications/pylock-toml.rst:701
#: ../source/specifications/pylock-toml.rst:716
#, fuzzy
#| msgid ":ref:`pyproject-toml-spec`"
msgid "**Inspiration**: :ref:`pyproject-tool-table`"
msgstr ":ref:`pyproject-toml-spec`"

#: ../source/specifications/pylock-toml.rst:135
msgid ""
"The list of :ref:`dependency-groups` publicly supported by this lock file (i."
"e. dependency groups users are expected to be able to specify via a tool's "
"UI)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:141
msgid "Tools supporting dependency groups MUST also support extras."
msgstr ""

#: ../source/specifications/pylock-toml.rst:142
msgid ""
"Tools SHOULD explicitly set this key to an empty array to signal that the "
"inputs used to generate the lock file had no dependency groups (e.g. a :ref:"
"`pyproject.toml <pyproject-toml-spec>` file had no :ref:`[dependency-groups] "
"<dependency-groups>` table), signalling that the lock file is, in effect, "
"multi-use even if it only looks to be single-use."
msgstr ""

#: ../source/specifications/pylock-toml.rst:152
msgid "``default-groups``"
msgstr ""

#: ../source/specifications/pylock-toml.rst:156
msgid "**Inspiration**: Poetry_, PDM_"
msgstr ""

#: ../source/specifications/pylock-toml.rst:157
msgid ""
"The name of synthetic dependency groups to represent what should be "
"installed by default (e.g. what :ref:`[project.dependencies] <pyproject-toml-"
"dependencies>` implicitly represents)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:161
msgid ""
"Meant to be used in situations where :ref:`pylock-packages-marker` "
"necessitates such a group to exist."
msgstr ""

#: ../source/specifications/pylock-toml.rst:163
msgid ""
"The groups listed by this key SHOULD NOT be listed in :ref:`pylock-"
"dependency-groups` as the groups are not meant to be directly exposed to "
"users by name but instead via an installer's UI."
msgstr ""

#: ../source/specifications/pylock-toml.rst:171
msgid "``created-by``"
msgstr ""

#: ../source/specifications/pylock-toml.rst:175
msgid "**Inspiration**: Tools with their name in their lock file name"
msgstr ""

#: ../source/specifications/pylock-toml.rst:176
#, fuzzy
#| msgid ""
#| "``INSTALLER``: records the name of the tool used to install the project."
msgid "Records the name of the tool used to create the lock file."
msgstr ""
"``INSTALLER``: registra o nome da ferramenta usada para instalar o projeto."

#: ../source/specifications/pylock-toml.rst:177
msgid ""
"Tools MAY use the :ref:`pylock-tool` table to record enough details that it "
"can be inferred what inputs were used to create the lock file."
msgstr ""

#: ../source/specifications/pylock-toml.rst:179
msgid ""
"Tools SHOULD record the normalized name of the tool if it is available as a "
"Python package to facilitate finding the tool."
msgstr ""

#: ../source/specifications/pylock-toml.rst:186
#, fuzzy
#| msgid "``packages``"
msgid "``[[packages]]``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:188
#: ../source/specifications/pylock-toml.rst:254
#: ../source/specifications/pylock-toml.rst:605
#: ../source/specifications/pylock-toml.rst:673
#, fuzzy
#| msgid "TOML_ type: array of strings"
msgid "**Type**: array of tables"
msgstr "Tipo TOML_: vetor de strings"

#: ../source/specifications/pylock-toml.rst:191
msgid "An array containing all packages that *may* be installed."
msgstr ""

#: ../source/specifications/pylock-toml.rst:192
msgid ""
"Packages MAY be listed multiple times with varying data, but all packages to "
"be installed MUST narrow down to a single entry at install time."
msgstr ""

#: ../source/specifications/pylock-toml.rst:199
#, fuzzy
#| msgid "``packages``"
msgid "``packages.name``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:203
msgid "**Inspiration**: :ref:`core-metadata-name`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:204
#, fuzzy
#| msgid ""
#| "For comparison purposes, the names should be :ref:`normalized <name-"
#| "normalization>` before comparing."
msgid "The name of the package :ref:`normalized <name-normalization>`."
msgstr ""
"Para propósitos de comparação, os nomes devem ser :ref:`normalizados <name-"
"normalization>` antes da comparação."

#: ../source/specifications/pylock-toml.rst:210
#, fuzzy
#| msgid "``packages``"
msgid "``packages.version``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:214
msgid "**Inspiration**: :ref:`core-metadata-version`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:215
#, fuzzy
msgid "The version of the package."
msgstr "Criando arquivos do pacote"

#: ../source/specifications/pylock-toml.rst:216
msgid ""
"The version SHOULD be specified when the version is known to be stable (i.e. "
"when an :ref:`sdist <source-distribution-format>` or :ref:`wheels <binary-"
"distribution-format>` are specified)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:219
msgid ""
"The version MUST NOT be included when it cannot be guaranteed to be "
"consistent with the code used (i.e. when a :ref:`source tree <source-"
"distribution-format-source-tree>` is used)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:227
#, fuzzy
#| msgid "``packages``"
msgid "``packages.marker``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:231
msgid "**Inspiration**: PDM_"
msgstr ""

#: ../source/specifications/pylock-toml.rst:232
msgid ""
"The :ref:`environment marker <dependency-specifiers-environment-markers>` "
"which specify when the package should be installed."
msgstr ""

#: ../source/specifications/pylock-toml.rst:240
#, fuzzy
#| msgid "``requires-python``"
msgid "``packages.requires-python``"
msgstr "``requires-python``"

#: ../source/specifications/pylock-toml.rst:244
msgid "**Inspiration**: :ref:`core-metadata-requires-python`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:245
msgid ""
"Holds the :ref:`version-specifiers` for Python version compatibility for the "
"package."
msgstr ""

#: ../source/specifications/pylock-toml.rst:252
#, fuzzy
#| msgid "``dependencies``"
msgid "``[[packages.dependencies]]``"
msgstr "``dependencies``"

#: ../source/specifications/pylock-toml.rst:257
msgid ""
"Records the other entries in :ref:`pylock-packages` which are direct "
"dependencies of this package."
msgstr ""

#: ../source/specifications/pylock-toml.rst:259
msgid ""
"Each entry is a table which contains the minimum information required to "
"tell which other package entry it corresponds to where doing a key-by-key "
"comparison would find the appropriate package with no ambiguity (e.g. if "
"there are two entries for the ``spam`` package, then you can include the "
"version number like ``{name = \"spam\", version = \"1.0.0\"}``, or by source "
"like ``{name = \"spam\", vcs = { url = \"...\"}``)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:265
msgid ""
"Tools MUST NOT use this information when doing installation; it is purely "
"informational for auditing purposes."
msgstr ""

#: ../source/specifications/pylock-toml.rst:272
#, fuzzy
#| msgid "``packages``"
msgid "``[packages.vcs]``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:274
#: ../source/specifications/pylock-toml.rst:376
#: ../source/specifications/pylock-toml.rst:434
#: ../source/specifications/pylock-toml.rst:535
#: ../source/specifications/pylock-toml.rst:699
#: ../source/specifications/pylock-toml.rst:714
#, fuzzy
#| msgid "TOML_ type: table"
msgid "**Type**: table"
msgstr "Tipo TOML_: tabela"

#: ../source/specifications/pylock-toml.rst:275
msgid ""
"**Required?**: no; mutually-exclusive with :ref:`pylock-packages-"
"directory`, :ref:`pylock-packages-archive`, :ref:`pylock-packages-sdist`, "
"and :ref:`pylock-packages-wheels`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:278
msgid "**Inspiration**: :ref:`direct-url-data-structure`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:279
msgid ""
"Record the version control system details for the :ref:`source tree <source-"
"distribution-format-source-tree>` it contains."
msgstr ""

#: ../source/specifications/pylock-toml.rst:282
msgid ""
"Tools MAY choose to not support version control systems, both from a locking "
"and/or installation perspective."
msgstr ""

#: ../source/specifications/pylock-toml.rst:284
msgid "Tools MAY choose to only support a subset of the available VCS types."
msgstr ""

#: ../source/specifications/pylock-toml.rst:285
msgid ""
"Tools SHOULD provide a way for users to opt in/out of using version control "
"systems."
msgstr ""

#: ../source/specifications/pylock-toml.rst:287
msgid ""
"Installation from a version control system is considered originating from a :"
"ref:`direct URL reference <direct-url>`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:294
#, fuzzy
#| msgid "``packages``"
msgid "``packages.vcs.type``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:296
msgid ""
"**Type**: string; supported values specified in :ref:`direct-url-data-"
"structure-registered-vcs`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:299
#: ../source/specifications/pylock-toml.rst:310
#: ../source/specifications/pylock-toml.rst:321
#: ../source/specifications/pylock-toml.rst:335
#: ../source/specifications/pylock-toml.rst:349
msgid "**Inspiration**: :ref:`direct-url-data-structure-vcs`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:300
#, fuzzy
#| msgid "Install from version control systems"
msgid "The type of version control system used."
msgstr "Instalar a partir de sistemas de controle de versão"

#: ../source/specifications/pylock-toml.rst:306
#, fuzzy
#| msgid "``packages``"
msgid "``packages.vcs.url``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:309
msgid "**Required?**: if :ref:`pylock-packages-vcs-path` is not specified"
msgstr ""

#: ../source/specifications/pylock-toml.rst:311
#, fuzzy
#| msgid "The source tree"
msgid "The URL_ to the source tree."
msgstr "A árvore fonte"

#: ../source/specifications/pylock-toml.rst:317
#, fuzzy
#| msgid "``packages``"
msgid "``packages.vcs.path``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:320
msgid "**Required?**: if :ref:`pylock-packages-vcs-url` is not specified"
msgstr ""

#: ../source/specifications/pylock-toml.rst:322
msgid "The path to the local directory of the source tree."
msgstr ""

#: ../source/specifications/pylock-toml.rst:323
msgid ""
"If a relative path is used it MUST be relative to the location of this file."
msgstr ""

#: ../source/specifications/pylock-toml.rst:324
msgid ""
"If the path is relative it MAY use POSIX-style path separators explicitly "
"for portability."
msgstr ""

#: ../source/specifications/pylock-toml.rst:331
#, fuzzy
#| msgid "``requested_revision`` field"
msgid "``packages.vcs.requested-revision``"
msgstr "Campo ``requested_revision``"

#: ../source/specifications/pylock-toml.rst:336
msgid "The branch/tag/ref/commit/revision/etc. that the user requested."
msgstr ""

#: ../source/specifications/pylock-toml.rst:337
msgid ""
"This is purely informational and to facilitate writing the :ref:`direct-url-"
"data-structure`; it MUST NOT be used to checkout the repository."
msgstr ""

#: ../source/specifications/pylock-toml.rst:345
#, fuzzy
#| msgid "``packages``"
msgid "``packages.vcs.commit-id``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:350
msgid "The exact commit/revision number that is to be installed."
msgstr ""

#: ../source/specifications/pylock-toml.rst:351
#, fuzzy
#| msgid ""
#| "A ``commit_id`` key (type ``string``) MUST be present, containing the "
#| "exact commit/revision number that was/is to be installed. If the VCS "
#| "supports commit-hash based revision identifiers, such commit-hash MUST be "
#| "used as ``commit_id`` in order to reference an immutable version of the "
#| "source code."
msgid ""
"If the VCS supports commit-hash based revision identifiers, such a commit-"
"hash, it MUST be used as the commit ID in order to reference an immutable "
"version of the source code."
msgstr ""
"Uma chave ``commit_id`` (tipo ``string``) DEVE estar presente, contendo o "
"número exato de commit/revisão que foi/será instalado. Se o VCS oferecer "
"suporte a identificadores de revisão baseados em hash de commit, tal hash de "
"commit DEVE ser usado como ``commit_id`` para referenciar a versão imutável "
"do código-fonte."

#: ../source/specifications/pylock-toml.rst:359
msgid "``packages.vcs.subdirectory``"
msgstr ""

#: ../source/specifications/pylock-toml.rst:363
msgid "**Inspiration**: :ref:`direct-url-data-structure-subdirectories`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:364
msgid ""
"The subdirectory within the :ref:`source tree <source-distribution-format-"
"source-tree>` where the project root of the project is (e.g. the location of "
"the :ref:`pyproject.toml <pyproject-toml-spec>` file)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:368
msgid "The path MUST be relative to the root of the source tree structure."
msgstr ""

#: ../source/specifications/pylock-toml.rst:374
#, fuzzy
#| msgid "``packages``"
msgid "``[packages.directory]``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:377
msgid ""
"**Required?**: no; mutually-exclusive with :ref:`pylock-packages-vcs`, :ref:"
"`pylock-packages-archive`, :ref:`pylock-packages-sdist`, and :ref:`pylock-"
"packages-wheels`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:380
#: ../source/specifications/pylock-toml.rst:398
#: ../source/specifications/pylock-toml.rst:412
msgid "**Inspiration**: :ref:`direct-url-data-structure-local-directory`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:381
msgid ""
"Record the local directory details for the :ref:`source tree <source-"
"distribution-format-source-tree>` it contains."
msgstr ""

#: ../source/specifications/pylock-toml.rst:384
msgid ""
"Tools MAY choose to not support local directories, both from a locking and/"
"or installation perspective."
msgstr ""

#: ../source/specifications/pylock-toml.rst:386
msgid ""
"Tools SHOULD provide a way for users to opt in/out of using local "
"directories."
msgstr ""

#: ../source/specifications/pylock-toml.rst:387
msgid ""
"Installation from a directory is considered originating from a :ref:`direct "
"URL reference <direct-url>`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:394
#, fuzzy
#| msgid "``package_data``"
msgid "``packages.directory.path``"
msgstr "``package_data``"

#: ../source/specifications/pylock-toml.rst:399
msgid "The local directory where the source tree is."
msgstr ""

#: ../source/specifications/pylock-toml.rst:400
msgid ""
"If the path is relative it MUST be relative to the location of the lock file."
msgstr ""

#: ../source/specifications/pylock-toml.rst:401
msgid ""
"If the path is relative it MAY use POSIX-style path separators for "
"portability."
msgstr ""

#: ../source/specifications/pylock-toml.rst:408
msgid "``packages.directory.editable``"
msgstr ""

#: ../source/specifications/pylock-toml.rst:410
msgid "**Type**: boolean"
msgstr ""

#: ../source/specifications/pylock-toml.rst:411
msgid "**Required?**: no; defaults to ``false``"
msgstr ""

#: ../source/specifications/pylock-toml.rst:413
msgid ""
"A flag representing whether the source tree was an editable install at lock "
"time."
msgstr ""

#: ../source/specifications/pylock-toml.rst:415
msgid ""
"An installer MAY choose to ignore this flag if user actions or context would "
"make an editable install unnecessary or undesirable (e.g. a container image "
"that will not be mounted for development purposes but instead deployed to "
"production where it would be treated at read-only)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:424
msgid "``packages.directory.subdirectory``"
msgstr ""

#: ../source/specifications/pylock-toml.rst:426
#: ../source/specifications/pylock-toml.rst:510
msgid "See :ref:`pylock-packages-vcs-subdirectory`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:432
#, fuzzy
#| msgid "``packages``"
msgid "``[packages.archive]``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:436
msgid "**Inspiration**: :ref:`direct-url-data-structure-archive`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:437
msgid ""
"A direct reference to an archive file to install from (this can include "
"wheels and sdists, as well as other archive formats containing a source "
"tree)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:440
msgid ""
"Tools MAY choose to not support archive files, both from a locking and/or "
"installation perspective."
msgstr ""

#: ../source/specifications/pylock-toml.rst:442
msgid ""
"Tools SHOULD provide a way for users to opt in/out of using archive files."
msgstr ""

#: ../source/specifications/pylock-toml.rst:443
msgid ""
"Installation from an archive file is considered originating from a :ref:"
"`direct URL reference <direct-url>`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:450
#, fuzzy
#| msgid "``packages``"
msgid "``packages.archive.url``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:452
msgid "See :ref:`pylock-packages-vcs-url`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:458
#, fuzzy
#| msgid "``packages``"
msgid "``packages.archive.path``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:460
msgid "See :ref:`pylock-packages-vcs-path`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:466
#, fuzzy
#| msgid "``packages``"
msgid "``packages.archive.size``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:468
msgid "**Type**: integer"
msgstr ""

#: ../source/specifications/pylock-toml.rst:470
msgid "**Inspiration**: uv_, :ref:`simple-repository-api`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:471
#, fuzzy
#| msgid "The name of the project."
msgid "The size of the archive file."
msgstr "O nome do projeto."

#: ../source/specifications/pylock-toml.rst:472
msgid ""
"Tools SHOULD provide the file size when reasonably possible (e.g. the file "
"size is available via the Content-Length_ header from a HEAD_ HTTP request)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:479
msgid "``packages.archive.upload-time``"
msgstr ""

#: ../source/specifications/pylock-toml.rst:481
msgid "**Type**: datetime"
msgstr ""

#: ../source/specifications/pylock-toml.rst:483
msgid "**Inspiration**: :ref:`simple-repository-api`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:484
#, fuzzy
#| msgid "Where the guide is deployed"
msgid "The time the file was uploaded."
msgstr "Onde o guia é disponibilizado"

#: ../source/specifications/pylock-toml.rst:485
msgid "The date and time MUST be recorded in UTC."
msgstr ""

#: ../source/specifications/pylock-toml.rst:491
msgid "``[packages.archive.hashes]``"
msgstr ""

#: ../source/specifications/pylock-toml.rst:493
#, fuzzy
#| msgid "TOML_ type: array of strings"
msgid "**Type**: Table of strings"
msgstr "Tipo TOML_: vetor de strings"

#: ../source/specifications/pylock-toml.rst:495
msgid "**Inspiration**: PDM_, Poetry_, uv_, :ref:`simple-repository-api`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:496
#, fuzzy
#| msgid ""
#| "A table of URLs where the key is the URL label and the value is the URL "
#| "itself."
msgid ""
"A table listing known hash values of the file where the key is the hash "
"algorithm and the value is the hash value."
msgstr ""
"Uma tabela de URLs onde a chave é o rótulo da URL e o valor é a URL em si."

#: ../source/specifications/pylock-toml.rst:498
msgid "The table MUST contain at least one entry."
msgstr ""

#: ../source/specifications/pylock-toml.rst:499
msgid "Hash algorithm keys SHOULD be lowercase."
msgstr ""

#: ../source/specifications/pylock-toml.rst:500
msgid ""
"At least one secure algorithm from :py:data:`hashlib.algorithms_guaranteed` "
"SHOULD always be included (at time of writing, sha256 specifically is "
"recommended."
msgstr ""

#: ../source/specifications/pylock-toml.rst:508
msgid "``packages.archive.subdirectory``"
msgstr ""

#: ../source/specifications/pylock-toml.rst:516
#, fuzzy
#| msgid "``packages``"
msgid "``packages.index``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:521
msgid ""
"The base URL for the package index from :ref:`simple-repository-api` where "
"the sdist and/or wheels were found (e.g. ``https://pypi.org/simple/``)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:523
msgid ""
"When possible, this SHOULD be specified to assist with generating `software "
"bill of materials`_ -- aka SBOMs -- and to assist in finding a file if a URL "
"ceases to be valid."
msgstr ""

#: ../source/specifications/pylock-toml.rst:526
msgid ""
"Tools MAY support installing from an index if the URL recorded for a "
"specific file is no longer valid (e.g. returns a 404 HTTP error code)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:533
#, fuzzy
#| msgid "``packages``"
msgid "``[packages.sdist]``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:536
#: ../source/specifications/pylock-toml.rst:606
msgid ""
"**Required?**: no; mutually-exclusive with :ref:`pylock-packages-vcs`, :ref:"
"`pylock-packages-directory`, and :ref:`pylock-packages-archive`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:539
msgid "Details of a :ref:`source-distribution-format-sdist` for the package."
msgstr ""

#: ../source/specifications/pylock-toml.rst:541
msgid ""
"Tools MAY choose to not support sdist files, both from a locking and/or "
"installation perspective."
msgstr ""

#: ../source/specifications/pylock-toml.rst:543
msgid ""
"Tools SHOULD provide a way for users to opt in/out of using sdist files."
msgstr ""

#: ../source/specifications/pylock-toml.rst:549
#, fuzzy
#| msgid "``package_data``"
msgid "``packages.sdist.name``"
msgstr "``package_data``"

#: ../source/specifications/pylock-toml.rst:552
msgid ""
"**Required?**: no, not when the last component of :ref:`pylock-packages-"
"sdist-path`/ :ref:`pylock-packages-sdist-url` would be the same value"
msgstr ""

#: ../source/specifications/pylock-toml.rst:556
msgid "The file name of the :ref:`source-distribution-format-sdist` file."
msgstr ""

#: ../source/specifications/pylock-toml.rst:562
#, fuzzy
#| msgid "``package_data``"
msgid "``packages.sdist.upload-time``"
msgstr "``package_data``"

#: ../source/specifications/pylock-toml.rst:564
#: ../source/specifications/pylock-toml.rst:633
msgid "See :ref:`pylock-packages-archive-upload-time`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:570
#, fuzzy
#| msgid "``packages``"
msgid "``packages.sdist.url``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:572
#: ../source/specifications/pylock-toml.rst:641
msgid "See :ref:`pylock-packages-archive-url`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:578
#, fuzzy
#| msgid "``package_data``"
msgid "``packages.sdist.path``"
msgstr "``package_data``"

#: ../source/specifications/pylock-toml.rst:580
#: ../source/specifications/pylock-toml.rst:649
msgid "See :ref:`pylock-packages-archive-path`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:586
#, fuzzy
#| msgid "``packages``"
msgid "``packages.sdist.size``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:588
#: ../source/specifications/pylock-toml.rst:657
msgid "See :ref:`pylock-packages-archive-size`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:594
#, fuzzy
#| msgid "``package_data``"
msgid "``packages.sdist.hashes``"
msgstr "``package_data``"

#: ../source/specifications/pylock-toml.rst:596
#: ../source/specifications/pylock-toml.rst:665
msgid "See :ref:`pylock-packages-archive-hashes`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:603
#, fuzzy
#| msgid "``packages``"
msgid "``[[packages.wheels]]``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:609
msgid ""
"For recording the wheel files as specified by :ref:`binary-distribution-"
"format` for the package."
msgstr ""

#: ../source/specifications/pylock-toml.rst:611
msgid ""
"Tools MUST support wheel files, both from a locking and installation "
"perspective."
msgstr ""

#: ../source/specifications/pylock-toml.rst:618
#, fuzzy
#| msgid "``packages``"
msgid "``packages.wheels.name``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:621
msgid ""
"**Required?**: no, not when the last component of :ref:`pylock-packages-"
"wheels-path`/ :ref:`pylock-packages-wheels-url` would be the same value"
msgstr ""

#: ../source/specifications/pylock-toml.rst:625
msgid "The file name of the :ref:`binary-distribution-format` file."
msgstr ""

#: ../source/specifications/pylock-toml.rst:631
msgid "``packages.wheels.upload-time``"
msgstr ""

#: ../source/specifications/pylock-toml.rst:639
#, fuzzy
#| msgid "``packages``"
msgid "``packages.wheels.url``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:647
#, fuzzy
#| msgid "``packages``"
msgid "``packages.wheels.path``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:655
#, fuzzy
#| msgid "``packages``"
msgid "``packages.wheels.size``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:663
#, fuzzy
#| msgid "``packages``"
msgid "``packages.wheels.hashes``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:671
msgid "``[[packages.attestation-identities]]``"
msgstr ""

#: ../source/specifications/pylock-toml.rst:675
#: ../source/specifications/pylock-toml.rst:690
#, fuzzy
#| msgid ":ref:`pyproject-toml-spec`"
msgid "**Inspiration**: :ref:`provenance-object`"
msgstr ":ref:`pyproject-toml-spec`"

#: ../source/specifications/pylock-toml.rst:676
msgid ""
"A recording of the attestations for **any** file recorded for this package."
msgstr ""

#: ../source/specifications/pylock-toml.rst:677
msgid "If available, tools SHOULD include the attestation identities found."
msgstr ""

#: ../source/specifications/pylock-toml.rst:678
msgid ""
"Publisher-specific keys are to be included in the table as-is (i.e. top-"
"level), following the spec at :ref:`index-hosted-attestations`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:686
msgid "``packages.attestation-identities.kind``"
msgstr ""

#: ../source/specifications/pylock-toml.rst:691
msgid "The unique identity of the Trusted Publisher."
msgstr ""

#: ../source/specifications/pylock-toml.rst:697
#, fuzzy
#| msgid "``packages``"
msgid "``[packages.tool]``"
msgstr "``packages``"

#: ../source/specifications/pylock-toml.rst:702
msgid ""
"Similar usage as that of the :ref:`pylock-tool` table from the :ref:"
"`pyproject-toml-spec`, but at the package version level instead of at the "
"lock file level (which is also available via :ref:`pylock-tool`)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:705
msgid ""
"Data recorded in the table MUST be disposable (i.e. it MUST NOT affect "
"installation)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:712
msgid "``[tool]``"
msgstr ""

#: ../source/specifications/pylock-toml.rst:717
msgid "See :ref:`pylock-packages-tool`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:731
msgid ""
"The following outlines the steps to be taken to install from a lock file "
"(while the requirements are prescriptive, the general steps and order are a "
"suggestion):"
msgstr ""

#: ../source/specifications/pylock-toml.rst:735
msgid ""
"Gather the extras and dependency groups to install and set ``extras`` and "
"``dependency_groups`` for marker evaluation, respectively."
msgstr ""

#: ../source/specifications/pylock-toml.rst:738
msgid "``extras`` SHOULD be set to the empty set by default."
msgstr ""

#: ../source/specifications/pylock-toml.rst:739
msgid ""
"``dependency_groups`` SHOULD be the set created from :ref:`pylock-default-"
"groups` by default."
msgstr ""

#: ../source/specifications/pylock-toml.rst:742
msgid ""
"Check if the metadata version specified by :ref:`pylock-lock-version` is "
"supported; an error or warning MUST be raised as appropriate."
msgstr ""

#: ../source/specifications/pylock-toml.rst:744
msgid ""
"If :ref:`pylock-requires-python` is specified, check that the environment "
"being installed for meets the requirement; an error MUST be raised if it is "
"not met."
msgstr ""

#: ../source/specifications/pylock-toml.rst:747
msgid ""
"If :ref:`pylock-environments` is specified, check that at least one of the "
"environment marker expressions is satisfied; an error MUST be raised if no "
"expression is satisfied."
msgstr ""

#: ../source/specifications/pylock-toml.rst:750
msgid "For each package listed in :ref:`pylock-packages`:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:752
msgid ""
"If :ref:`pylock-packages-marker` is specified, check if it is satisfied; if "
"it isn't, skip to the next package."
msgstr ""

#: ../source/specifications/pylock-toml.rst:754
msgid ""
"If :ref:`pylock-packages-requires-python` is specified, check if it is "
"satisfied; an error MUST be raised if it isn't."
msgstr ""

#: ../source/specifications/pylock-toml.rst:756
msgid ""
"Check that no other conflicting instance of the package has been slated to "
"be installed; an error about the ambiguity MUST be raised otherwise."
msgstr ""

#: ../source/specifications/pylock-toml.rst:758
msgid ""
"Check that the source of the package is specified appropriately (i.e. there "
"are no conflicting sources in the package entry); an error MUST be raised if "
"any issues are found."
msgstr ""

#: ../source/specifications/pylock-toml.rst:761
msgid "Add the package to the set of packages to install."
msgstr ""

#: ../source/specifications/pylock-toml.rst:763
msgid "For each package to be installed:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:765
msgid "If :ref:`pylock-packages-vcs` is set:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:767
msgid ""
"Clone the repository to the commit ID specified in :ref:`pylock-packages-vcs-"
"commit-id`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:769
msgid ""
":ref:`Build <source-distribution-format-source-tree>` the package, "
"respecting :ref:`pylock-packages-vcs-subdirectory`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:771
#: ../source/specifications/pylock-toml.rst:777
#: ../source/specifications/pylock-toml.rst:786
#: ../source/specifications/pylock-toml.rst:806
#: ../source/specifications/pylock-toml.rst:821
#, fuzzy
#| msgid "Binary distribution format"
msgid ":ref:`Install <binary-distribution-format>`."
msgstr "Formato de distribuição binária"

#: ../source/specifications/pylock-toml.rst:773
msgid "Else if :ref:`pylock-packages-directory` is set:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:775
msgid ""
":ref:`Build <source-distribution-format-source-tree>` the package, "
"respecting :ref:`pylock-packages-directory-subdirectory`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:779
msgid "Else if :ref:`pylock-packages-archive` is set:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:781
#: ../source/specifications/pylock-toml.rst:811
msgid "Get the file."
msgstr ""

#: ../source/specifications/pylock-toml.rst:782
msgid ""
"Validate using :ref:`pylock-packages-archive-size` and :ref:`pylock-packages-"
"archive-hashes`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:784
msgid ""
":ref:`Build <source-distribution-format-source-tree>` the package, "
"respecting :ref:`pylock-packages-archive-subdirectory`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:788
msgid "Else if there are entries for :ref:`pylock-packages-wheels`:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:790
msgid ""
"Look for the appropriate wheel file based on :ref:`pylock-packages-wheels-"
"name`; if one is not found then move on to :ref:`pylock-packages-sdist` or "
"an error MUST be raised about a lack of source for the project."
msgstr ""

#: ../source/specifications/pylock-toml.rst:794
msgid "Get the file:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:796
msgid "If :ref:`pylock-packages-wheels-path` is set, use it."
msgstr ""

#: ../source/specifications/pylock-toml.rst:797
msgid ""
"Else if :ref:`pylock-packages-wheels-url` is set, try to use it; optionally "
"tools MAY use :ref:`pylock-packages-index` or some tool-specific mechanism "
"to download the selected wheel file (tools MUST NOT try to change what wheel "
"file to download based on what's available; what file to install should be "
"determined in an offline fashion for reproducibility)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:804
msgid ""
"Validate using :ref:`pylock-packages-wheels-size` and :ref:`pylock-packages-"
"wheels-hashes`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:808
msgid ""
"Else if no :ref:`pylock-packages-wheels` file is found or :ref:`pylock-"
"packages-sdist` is solely set:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:813
msgid "If :ref:`pylock-packages-sdist-path` is set, use it."
msgstr ""

#: ../source/specifications/pylock-toml.rst:814
msgid ""
"Else if :ref:`pylock-packages-sdist-url` is set, try to use it; tools MAY "
"use :ref:`pylock-packages-index` or some tool-specific mechanism to download "
"the file."
msgstr ""

#: ../source/specifications/pylock-toml.rst:818
msgid ""
"Validate using :ref:`pylock-packages-sdist-size` and :ref:`pylock-packages-"
"sdist-hashes`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:820
msgid ":ref:`Build <source-distribution-format-sdist>` the package."
msgstr ""

#: ../source/specifications/pylock-toml.rst:828
msgid "April 2025: Initial version, approved via :pep:`751`."
msgstr ""

#: ../source/specifications/pypirc.rst:6
msgid "The :file:`.pypirc` file"
msgstr "O arquivo :file:`.pypirc`"

#: ../source/specifications/pypirc.rst:8
msgid ""
"A :file:`.pypirc` file allows you to define the configuration for :term:"
"`package indexes <Package Index>` (referred to here as \"repositories\"), so "
"that you don't have to enter the URL, username, or password whenever you "
"upload a package with :ref:`twine` or :ref:`flit`."
msgstr ""
"Um arquivo :file:`.pypirc` permite que você defina a configuração para :term:"
"`índices de pacotes <Índice de Pacotes>` (referido aqui como "
"\"repositórios\"), para que você não precise inserir a URL, nome de usuário "
"ou senha sempre que você enviar um pacote com :ref:`twine` ou :ref:`flit`."

#: ../source/specifications/pypirc.rst:13
msgid "The format (originally defined by the :ref:`distutils` package) is:"
msgstr "O formato (originalmente definido pelo pacote :ref:`distutils`) é:"

#: ../source/specifications/pypirc.rst:32
msgid ""
"The ``distutils`` section defines an ``index-servers`` field that lists the "
"name of all sections describing a repository."
msgstr ""
"A seção ``distutils`` define um campo ``index-servers`` que lista o nome de "
"todas as seções descrevendo um repositório."

#: ../source/specifications/pypirc.rst:35
msgid "Each section describing a repository defines three fields:"
msgstr "Cada seção descrevendo um repositório define três campos:"

#: ../source/specifications/pypirc.rst:37
msgid "``repository``: The URL of the repository."
msgstr "``repository``: A URL do repositório."

#: ../source/specifications/pypirc.rst:38
msgid "``username``: The registered username on the repository."
msgstr "``username``: O nome de usuário registrado no repositório."

#: ../source/specifications/pypirc.rst:39
msgid "``password``: The password that will used to authenticate the username."
msgstr ""
"``password``: A senha que será usada para autenticar o nome de usuário."

#: ../source/specifications/pypirc.rst:43
msgid ""
"Be aware that this stores your password in plain text. For better security, "
"consider an alternative like `keyring`_, setting environment variables, or "
"providing the password on the command line."
msgstr ""
"Esteja ciente de que isso armazena sua senha em texto simples. Para melhor "
"segurança, considere uma alternativa como `chaveiro`_, configurando "
"variáveis de ambiente ou fornecendo a senha na linha de comando."

#: ../source/specifications/pypirc.rst:47
msgid ""
"Otherwise, set the permissions on :file:`.pypirc` so that only you can view "
"or modify it. For example, on Linux or macOS, run:"
msgstr ""
"Caso contrário, defina as permissões em :file:`.pypirc` para que somente "
"você possa ver ou modificá-lo. Por exemplo, no Linux ou macOS, execute:"

#: ../source/specifications/pypirc.rst:57
msgid "Common configurations"
msgstr "Configurações comuns"

#: ../source/specifications/pypirc.rst:61
msgid ""
"These examples apply to :ref:`twine`. Other projects (e.g. :ref:`flit`) also "
"use :file:`.pypirc`, but with different defaults. Please refer to each "
"project's documentation for more details and usage instructions."
msgstr ""
"Esses exemplos se aplicam a :ref:`twine`. Outros projetos (por exemplo, :ref:"
"`flit`) também usam :file:`.pypirc`, mas com padrões diferentes. Consulte a "
"documentação de cada projeto para obter mais detalhes e instruções de uso."

#: ../source/specifications/pypirc.rst:65
msgid ""
"Twine's default configuration mimics a :file:`.pypirc` with repository "
"sections for PyPI and TestPyPI:"
msgstr ""
"A configuração padrão do Twine imita um :file:`.pypirc` com seções de "
"repositório para PyPI e TestPyPI:"

#: ../source/specifications/pypirc.rst:81
msgid ""
"Twine will add additional configuration from :file:`$HOME/.pypirc`, the "
"command line, and environment variables to this default configuration."
msgstr ""
"Twine irá adicionar configuração adicional de :file:`$HOME/.pypirc`, a linha "
"de comando e variáveis de ambiente a esta configuração padrão."

#: ../source/specifications/pypirc.rst:85
msgid "Using a PyPI token"
msgstr "Usando um token do PyPI"

#: ../source/specifications/pypirc.rst:87
msgid ""
"To set your `API token`_ for PyPI, you can create a :file:`$HOME/.pypirc` "
"similar to:"
msgstr ""
"Para definir seu `token de API`_ para PyPI, você pode criar um :file:`$HOME/."
"pypirc` semelhante a:"

#: ../source/specifications/pypirc.rst:96
msgid ""
"For :ref:`TestPyPI <using-test-pypi>`, add a ``[testpypi]`` section, using "
"the API token from your TestPyPI account."
msgstr ""
"Para o :ref:`TestPyPI <using-test-pypi>`, adicione a seção ``[testpypi]``, "
"usando o token de API de sua conta do TestPyPI."

#: ../source/specifications/pypirc.rst:102
msgid "Using another package index"
msgstr "Usando outro índice de pacotes"

#: ../source/specifications/pypirc.rst:104
msgid ""
"To configure an additional repository, you'll need to redefine the ``index-"
"servers`` field to include the repository name. Here is a complete example "
"of a :file:`$HOME/.pypirc` for PyPI, TestPyPI, and a private repository:"
msgstr ""
"Para configurar um repositório adicional, você precisará redefinir o campo "
"``index-servers`` para incluir o nome do repositório. Aqui está um exemplo "
"completo de um :file:`$HOME/.pypirc` para PyPI, TestPyPI e um repositório "
"privado:"

#: ../source/specifications/pypirc.rst:131
msgid ""
"Instead of using the ``password`` field, consider saving your API tokens and "
"passwords securely using `keyring`_ (which is installed by Twine):"
msgstr ""
"Em vez de usar o campo ``password``, considere salvar seus tokens de API e "
"senhas com segurança usando um `chaveiro`_ (que é instalado pelo Twine):"

#: ../source/specifications/pyproject-toml.rst:6
msgid "``pyproject.toml`` specification"
msgstr "Especificação do ``pyproject.toml``"

#: ../source/specifications/pyproject-toml.rst:10
msgid ""
"This is a **technical, formal specification**. For a gentle, user-friendly "
"guide to ``pyproject.toml``, see :ref:`writing-pyproject-toml`."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:14
msgid ""
"The ``pyproject.toml`` file acts as a configuration file for packaging-"
"related tools (as well as other tools)."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:17
msgid "This specification was originally defined in :pep:`518` and :pep:`621`."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:19
msgid ""
"The ``pyproject.toml`` file is written in `TOML <https://toml.io>`_. Three "
"tables are currently specified, namely :ref:`[build-system] <pyproject-build-"
"system-table>`, :ref:`[project] <pyproject-project-table>` and :ref:`[tool] "
"<pyproject-tool-table>`. Other tables are reserved for future use (tool-"
"specific configuration should use the ``[tool]`` table)."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:29
#, fuzzy
msgid "Declaring build system dependencies: the ``[build-system]`` table"
msgstr "Declarando dependências do sistema de construção"

#: ../source/specifications/pyproject-toml.rst:31
#, fuzzy
msgid ""
"The ``[build-system]`` table declares any Python level dependencies that "
"must be installed in order to run the project's build system successfully."
msgstr ""
"`pyproject.toml` é um formato de arquivo independente do sistema de "
"construção definido na :pep:`518` que os projetos podem fornecer para "
"declarar quaisquer dependências de nível Python que devem ser instaladas "
"para executar o sistema de construção do projeto com sucesso."

#: ../source/specifications/pyproject-toml.rst:37
msgid ""
"The ``[build-system]`` table is used to store build-related data. Initially, "
"only one key of the table is valid and is mandatory for the table: "
"``requires``. This key must have a value of a list of strings representing "
"dependencies required to execute the build system. The strings in this list "
"follow the :ref:`version specifier specification <version-specifiers>`."
msgstr ""
"A tabela ``[build-system]`` é usada para armazenar dados relacionados a "
"construção. Inicialmente, apenas uma chave da tabela é válida e é "
"obrigatória para a tabela: ``requires``. Esta chave deve ter um valor de uma "
"lista de strings que representam dependências necessárias para executar o "
"sistema de construção. As strings nesta lista seguem a :ref:`especificação "
"de especificadores de versão <version-specifiers>`."

#: ../source/specifications/pyproject-toml.rst:44
msgid ""
"An example ``[build-system]`` table for a project built with ``setuptools`` "
"is:"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:53
msgid ""
"Build tools are expected to use the example configuration file above as "
"their default semantics when a ``pyproject.toml`` file is not present."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:56
msgid ""
"Tools should not require the existence of the ``[build-system]`` table. A "
"``pyproject.toml`` file may be used to store configuration details other "
"than build-related data and thus lack a ``[build-system]`` table "
"legitimately. If the file exists but is lacking the ``[build-system]`` table "
"then the default values as specified above should be used. If the table is "
"specified but is missing required fields then the tool should consider it an "
"error."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:65
msgid ""
"To provide a type-specific representation of the resulting data from the "
"TOML file for illustrative purposes only, the following `JSON Schema "
"<https://json-schema.org>`_ would match the data format:"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:103
#, fuzzy
msgid "Declaring project metadata: the ``[project]`` table"
msgstr "Declarando os metadados do projeto"

#: ../source/specifications/pyproject-toml.rst:105
msgid ""
"The ``[project]`` table specifies the project's :ref:`core metadata <core-"
"metadata>`."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:107
msgid ""
"There are two kinds of metadata: *static* and *dynamic*. Static metadata is "
"specified in the ``pyproject.toml`` file directly and cannot be specified or "
"changed by a tool (this includes data *referred* to by the metadata, e.g. "
"the contents of files referenced by the metadata). Dynamic metadata is "
"listed via the ``dynamic`` key (defined later in this specification) and "
"represents metadata that a tool will later provide."
msgstr ""
"Existem dois tipos de metadados: *estáticos* e *dinâmicos*. Metadados "
"estáticos são especificados diretamente no arquivo ``pyproject.toml`` e não "
"podem ser especificados ou alterados por uma ferramenta (isso inclui dados "
"*referenciados* pelo metadados, por exemplo, o conteúdo de arquivos "
"referenciados pelos metadados). Os metadados dinâmicos são listados por meio "
"da chave ``dynamic`` (definido posteriormente nesta especificação) e "
"representam os metadados que uma ferramenta fornecerá posteriormente."

#: ../source/specifications/pyproject-toml.rst:115
msgid ""
"The lack of a ``[project]`` table implicitly means the :term:`build backend "
"<Build Backend>` will dynamically provide all keys."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:118
msgid "The only keys required to be statically defined are:"
msgstr "As únicas chaves que precisam ser definidos estaticamente são:"

#: ../source/specifications/pyproject-toml.rst:122
msgid ""
"The keys which are required but may be specified *either* statically or "
"listed as dynamic are:"
msgstr ""
"As chaves que são obrigatórias, mas podem ser especificadas estaticamente "
"*ou* listadas como dinâmicas são:"

#: ../source/specifications/pyproject-toml.rst:127
msgid ""
"All other keys are considered optional and may be specified statically, "
"listed as dynamic, or left unspecified."
msgstr ""
"Todas as outras chaves são consideradas opcionais e podem ser especificadas "
"estaticamente, listadas como dinâmicas ou não especificadas."

#: ../source/specifications/pyproject-toml.rst:130
msgid "The complete list of keys allowed in the ``[project]`` table are:"
msgstr "A lista completa de chaves permitidas na tabela ``[project]`` são:"

#: ../source/specifications/pyproject-toml.rst:132
msgid "``authors``"
msgstr "``authors``"

#: ../source/specifications/pyproject-toml.rst:134
msgid "``dependencies``"
msgstr "``dependencies``"

#: ../source/specifications/pyproject-toml.rst:136
#: ../source/specifications/pyproject-toml.rst:479
msgid "``dynamic``"
msgstr "``dynamic``"

#: ../source/specifications/pyproject-toml.rst:137
msgid "``entry-points``"
msgstr "``entry-points``"

#: ../source/specifications/pyproject-toml.rst:138
msgid "``gui-scripts``"
msgstr "``gui-scripts``"

#: ../source/specifications/pyproject-toml.rst:142
msgid "``maintainers``"
msgstr "``maintainers``"

#: ../source/specifications/pyproject-toml.rst:144
msgid "``optional-dependencies``"
msgstr "``optional-dependencies``"

#: ../source/specifications/pyproject-toml.rst:157
#: ../source/specifications/pyproject-toml.rst:172
#: ../source/specifications/pyproject-toml.rst:187
#: ../source/specifications/pyproject-toml.rst:241
#: ../source/specifications/pyproject-toml.rst:253
msgid "TOML_ type: string"
msgstr "Tipo TOML_: string"

#: ../source/specifications/pyproject-toml.rst:158
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Name <core-"
"metadata-name>`"
msgstr ""
"Campo correspondente dos :ref:`metadados principais <core-metadata>`: :ref:"
"`Name <core-metadata-name>`"

#: ../source/specifications/pyproject-toml.rst:161
msgid "The name of the project."
msgstr "O nome do projeto."

#: ../source/specifications/pyproject-toml.rst:163
msgid ""
"Tools SHOULD :ref:`normalize <name-normalization>` this name, as soon as it "
"is read for internal consistency."
msgstr ""
"As ferramentas DEVEM :ref:`normalizar <name-normalization>` este nome, "
"conforme especificado por :pep:`503`, assim que for lido para consistência "
"interna."

#: ../source/specifications/pyproject-toml.rst:173
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Version "
"<core-metadata-version>`"
msgstr ""
"Campo correspondente dos :ref:`metadados principais <core-metadata>`: :ref:"
"`Version <core-metadata-version>`"

#: ../source/specifications/pyproject-toml.rst:176
msgid ""
"The version of the project, as defined in the :ref:`Version specifier "
"specification <version-specifiers>`."
msgstr ""
"A versão do projeto, conforme definido na :ref:`especificação de "
"especificadores de versão <version-specifiers>`."

#: ../source/specifications/pyproject-toml.rst:179
msgid "Users SHOULD prefer to specify already-normalized versions."
msgstr "Os usuários DEVEM preferir especificar versões já normalizadas."

#: ../source/specifications/pyproject-toml.rst:188
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Summary "
"<core-metadata-summary>`"
msgstr ""
"Campo correspondente dos :ref:`metadados principais <core-metadata>`: :ref:"
"`Summary <core-metadata-summary>`"

#: ../source/specifications/pyproject-toml.rst:191
msgid ""
"The summary description of the project in one line. Tools MAY error if this "
"includes multiple lines."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:200
msgid "TOML_ type: string or table"
msgstr "Tipo TOML_: string ou tabela"

#: ../source/specifications/pyproject-toml.rst:201
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Description "
"<core-metadata-description>` and :ref:`Description-Content-Type <core-"
"metadata-description-content-type>`"
msgstr ""
"Campos correspondente dos :ref:`metadados principais <core-metadata>`: :ref:"
"`Description <core-metadata-description>` e :ref:`Description-Content-Type "
"<core-metadata-description-content-type>`"

#: ../source/specifications/pyproject-toml.rst:205
msgid "The full description of the project (i.e. the README)."
msgstr "A descrição completa do projeto (isto é, o README)."

#: ../source/specifications/pyproject-toml.rst:207
msgid ""
"The key accepts either a string or a table. If it is a string then it is a "
"path relative to ``pyproject.toml`` to a text file containing the full "
"description. Tools MUST assume the file's encoding is UTF-8. If the file "
"path ends in a case-insensitive ``.md`` suffix, then tools MUST assume the "
"content-type is ``text/markdown``. If the file path ends in a case-"
"insensitive ``.rst``, then tools MUST assume the content-type is ``text/x-"
"rst``. If a tool recognizes more extensions than this PEP, they MAY infer "
"the content-type for the user without specifying this key as ``dynamic``. "
"For all unrecognized suffixes when a content-type is not provided, tools "
"MUST raise an error."
msgstr ""
"A chave aceita uma string ou uma tabela. Se for uma string, então é um "
"caminho relativo ao ``pyproject.toml`` para um arquivo texto contendo a "
"descrição completa. As ferramentas DEVEM presumir que a codificação do "
"arquivo é UTF-8. Se o caminho do arquivo termina com um sufixo ``.md``, ou "
"sua versão em caixa alta, então as ferramentas DEVEM presumir que o tipo de "
"conteúdo é ``text/markdown``. Se o caminho do arquivo termina em ``.rst``, "
"então as ferramentas DEVEM presumir que o tipo de conteúdo é ``text/x-rst``. "
"Se uma ferramenta reconhece mais extensões do que esta PEP, elas podem "
"inferir o tipo de conteúdo para o usuário sem especificar esta chave como "
"``dynamic``. Para todos os sufixos não reconhecidos quando um tipo de "
"conteúdo não é fornecido, as ferramentas DEVEM levantar um erro."

#: ../source/specifications/pyproject-toml.rst:218
msgid ""
"The ``readme`` key may also take a table. The ``file`` key has a string "
"value representing a path relative to ``pyproject.toml`` to a file "
"containing the full description. The ``text`` key has a string value which "
"is the full description. These keys are mutually-exclusive, thus tools MUST "
"raise an error if the metadata specifies both keys."
msgstr ""
"A chave ``readme`` também pode receber uma tabela. A chave ``file`` tem um "
"valor string que representa um caminho relativo a ``pyproject.toml`` para um "
"arquivo contendo a descrição completa. A chave ``text`` tem um valor de "
"string que é a descrição completa. Essas chaves são mutuamente exclusivas, "
"portanto, as ferramentas DEVEM levantar um erro se os metadados "
"especificarem ambas as chaves."

#: ../source/specifications/pyproject-toml.rst:225
msgid ""
"A table specified in the ``readme`` key also has a ``content-type`` key "
"which takes a string specifying the content-type of the full description. A "
"tool MUST raise an error if the metadata does not specify this key in the "
"table. If the metadata does not specify the ``charset`` parameter, then it "
"is assumed to be UTF-8. Tools MAY support other encodings if they choose to. "
"Tools MAY support alternative content-types which they can transform to a "
"content-type as supported by the :ref:`core metadata <core-metadata>`. "
"Otherwise tools MUST raise an error for unsupported content-types."
msgstr ""
"Uma tabela especificada na chave ``readme`` também possui uma chave "
"``content-type`` que recebe uma string especificando o tipo de conteúdo da "
"descrição completa. Uma ferramenta DEVE levantar um erro se os metadados não "
"especificarem esse campo na tabela. Se os metadados não especificarem o "
"parâmetro ``charset``, será considerado UTF-8. As ferramentas PODEM oferecer "
"suporte a outras codificações, se assim o desejarem. As ferramentas PODEM "
"oferecer suporte a tipos de conteúdo alternativos que podem transformar em "
"um tipo de conteúdo conforme suportado pelos :ref:`metadados principais "
"<core-metadata>`. Caso contrário, as ferramentas DEVEM levantar um erro para "
"tipos de conteúdo não suportados."

#: ../source/specifications/pyproject-toml.rst:242
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Requires-"
"Python <core-metadata-requires-python>`"
msgstr ""
"Campo correspondente dos :ref:`metadados principais <core-metadata>`: :ref:"
"`Requires-Python <core-metadata-requires-python>`"

#: ../source/specifications/pyproject-toml.rst:245
msgid "The Python version requirements of the project."
msgstr "Os requisitos de versão do Python do projeto."

#: ../source/specifications/pyproject-toml.rst:254
#, fuzzy
#| msgid ""
#| "Corresponding :ref:`core metadata <core-metadata>` field: :ref:`License "
#| "<core-metadata-license>`"
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`License-"
"Expression <core-metadata-license-expression>`"
msgstr ""
"Campo correspondente dos :ref:`metadados principais <core-metadata>`: :ref:"
"`License <core-metadata-license>`"

#: ../source/specifications/pyproject-toml.rst:257
msgid ""
"Text string that is a valid SPDX :term:`license expression <License "
"Expression>`, as specified in :doc:`/specifications/license-expression`. "
"Tools SHOULD validate and perform case normalization of the expression."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:262
msgid ""
"This key should **only** be specified if the license expression for any and "
"all distribution files created by a build backend using the :file:`pyproject."
"toml` is the same as the one specified. If the license expression will "
"differ then it should either be specified as dynamic or not set at all."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:269
#, fuzzy
#| msgid "PyPA specifications"
msgid "Legacy specification"
msgstr "Especificações do PyPA"

#: ../source/specifications/pyproject-toml.rst:271
msgid "TOML_ type: table"
msgstr "Tipo TOML_: tabela"

#: ../source/specifications/pyproject-toml.rst:272
#, fuzzy
#| msgid ""
#| "Corresponding :ref:`core metadata <core-metadata>` field: :ref:`License "
#| "<core-metadata-license>`"
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`License "
"<core-metadata-license>`"
msgstr ""
"Campo correspondente dos :ref:`metadados principais <core-metadata>`: :ref:"
"`License <core-metadata-license>`"

#: ../source/specifications/pyproject-toml.rst:275
#, fuzzy
#| msgid ""
#| "The table may have one of two keys. The ``file`` key has a string value "
#| "that is a file path relative to ``pyproject.toml`` to the file which "
#| "contains the license for the project. Tools MUST assume the file's "
#| "encoding is UTF-8. The ``text`` key has a string value which is the "
#| "license of the project.  These keys are mutually exclusive, so a tool "
#| "MUST raise an error if the metadata specifies both keys."
msgid ""
"The table may have one of two keys. The ``file`` key has a string value that "
"is a file path relative to :file:`pyproject.toml` to the file which contains "
"the license for the project. Tools MUST assume the file's encoding is UTF-8. "
"The ``text`` key has a string value which is the license of the project.  "
"These keys are mutually exclusive, so a tool MUST raise an error if the "
"metadata specifies both keys."
msgstr ""
"A tabela pode ter uma de duas chaves. A chave ``file`` tem um valor de "
"string que é um caminho de arquivo relativo a ``pyproject.toml`` para o "
"arquivo que contém a licença do projeto. As ferramentas DEVEM presumir que a "
"codificação do arquivo é UTF-8. A chave ``text`` tem um valor de string que "
"é a licença do projeto. Essas chaves são mutuamente exclusivas, portanto, "
"uma ferramenta DEVE levantar um erro se os metadados especificarem ambas as "
"chaves."

#: ../source/specifications/pyproject-toml.rst:282
msgid ""
"The table subkeys were deprecated by :pep:`639` in favor of the string value."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:289
#: ../source/specifications/pyproject-toml.rst:372
#: ../source/specifications/pyproject-toml.rst:384
msgid "TOML_ type: array of strings"
msgstr "Tipo TOML_: vetor de strings"

#: ../source/specifications/pyproject-toml.rst:290
#, fuzzy
#| msgid ""
#| "Corresponding :ref:`core metadata <core-metadata>` field: :ref:`License "
#| "<core-metadata-license>`"
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`License-File "
"<core-metadata-license-file>`"
msgstr ""
"Campo correspondente dos :ref:`metadados principais <core-metadata>`: :ref:"
"`License <core-metadata-license>`"

#: ../source/specifications/pyproject-toml.rst:293
msgid ""
"An array specifying paths in the project source tree relative to the project "
"root directory (i.e. directory containing :file:`pyproject.toml` or legacy "
"project configuration files, e.g. :file:`setup.py`, :file:`setup.cfg`, etc.) "
"to file(s) containing licenses and other legal notices to be distributed "
"with the package."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:299
msgid ""
"The strings MUST contain valid glob patterns, as specified in :doc:`/"
"specifications/glob-patterns`."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:302
msgid ""
"Patterns are relative to the directory containing :file:`pyproject.toml`,"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:304
msgid ""
"Tools MUST assume that license file content is valid UTF-8 encoded text, and "
"SHOULD validate this and raise an error if it is not."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:307
msgid "Build tools:"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:309
msgid ""
"MUST include all files matched by a listed pattern in all distribution "
"archives."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:311
msgid ""
"MUST list each matched file path under a License-File field in the Core "
"Metadata."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:314
msgid ""
"If the ``license-files`` key is present and is set to a value of an empty "
"array, then tools MUST NOT include any license files and MUST NOT raise an "
"error. If the ``license-files`` key is not defined, tools can decide how to "
"handle license files. For example they can choose not to include any files "
"or use their own logic to discover the appropriate files in the distribution."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:328
msgid "TOML_ type: Array of inline tables with string keys and values"
msgstr "Tipo TOML_: Vetor de tabelas em linha com strings de chaves e valores"

#: ../source/specifications/pyproject-toml.rst:329
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Author <core-"
"metadata-author>`, :ref:`Author-email <core-metadata-author-email>`, :ref:"
"`Maintainer <core-metadata-maintainer>`, and :ref:`Maintainer-email <core-"
"metadata-maintainer-email>`"
msgstr ""
"Campos correspondentes dos :ref:`metadados principais <core-metadata>`: :ref:"
"`Author <core-metadata-author>`, :ref:`Author-email <core-metadata-author-"
"email>`, :ref:`Maintainer <core-metadata-maintainer>` e :ref:`Maintainer-"
"email <core-metadata-maintainer-email>`"

#: ../source/specifications/pyproject-toml.rst:335
msgid ""
"The people or organizations considered to be the \"authors\" of the project. "
"The exact meaning is open to interpretation — it may list the original or "
"primary authors, current maintainers, or owners of the package."
msgstr ""
"As pessoas ou organizações consideradas \"autoras\" do projeto. O "
"significado exato está aberto à interpretação -- pode listar os autores "
"originais ou primários, mantenedores atuais ou proprietários do pacote."

#: ../source/specifications/pyproject-toml.rst:340
msgid ""
"The \"maintainers\" key is similar to \"authors\" in that its exact meaning "
"is open to interpretation."
msgstr ""
"A chave \"maintainers\" é semelhante a \"authors\" no sentido de que seu "
"significado exato está aberto à interpretação."

#: ../source/specifications/pyproject-toml.rst:343
msgid ""
"These keys accept an array of tables with 2 keys: ``name`` and ``email``. "
"Both values must be strings. The ``name`` value MUST be a valid email name "
"(i.e. whatever can be put as a name, before an email, in :rfc:`822`) and not "
"contain commas. The ``email`` value MUST be a valid email address. Both keys "
"are optional, but at least one of the keys must be specified in the table."
msgstr ""
"Estas chaves aceitam um vetor de tabelas com 2 chaves: ``name`` e ``email``. "
"Ambos os valores devem ser strings. O valor ``name`` DEVE ser um nome de e-"
"mail válido (ou seja, o que quer que possa ser colocado como um nome, antes "
"de um e-mail, em :rfc:`822`) e não conter vírgulas. O valor ``email`` DEVE "
"ser um endereço de email válido. Ambas as chaves são opcionais, mas ao menos "
"uma das chaves deve ser especificada na tabela."

#: ../source/specifications/pyproject-toml.rst:350
msgid ""
"Using the data to fill in :ref:`core metadata <core-metadata>` is as follows:"
msgstr ""
"O uso dos dados para preencher :ref:`metadados principais <core-metadata>` "
"deve ser feito da seguinte forma:"

#: ../source/specifications/pyproject-toml.rst:353
msgid ""
"If only ``name`` is provided, the value goes in :ref:`Author <core-metadata-"
"author>` or :ref:`Maintainer <core-metadata-maintainer>` as appropriate."
msgstr ""
"Se somente ``name`` for fornecido, o valor vai em :ref:`Author <core-"
"metadata-author>` ou :ref:`Maintainer <core-metadata-maintainer>` conforme "
"apropriado."

#: ../source/specifications/pyproject-toml.rst:356
msgid ""
"If only ``email`` is provided, the value goes in :ref:`Author-email <core-"
"metadata-author-email>` or :ref:`Maintainer-email <core-metadata-maintainer-"
"email>` as appropriate."
msgstr ""
"Se somente ``email`` é fornecido, o valor vai em :ref:`Author-email <core-"
"metadata-author-email>` ou :ref:`Maintainer-email <core-metadata-maintainer-"
"email>` conforme apropriado."

#: ../source/specifications/pyproject-toml.rst:360
msgid ""
"If both ``email`` and ``name`` are provided, the value goes in :ref:`Author-"
"email <core-metadata-author-email>` or :ref:`Maintainer-email <core-metadata-"
"maintainer-email>` as appropriate, with the format ``{name} <{email}>``."
msgstr ""
"Se ``email`` e ``name`` são fornecidos, o valor vai em :ref:`Author-email "
"<core-metadata-author-email>` ou :ref:`Maintainer-email <core-metadata-"
"maintainer-email>` conforme apropriado, com o formado ``{name} <{email}>``."

#: ../source/specifications/pyproject-toml.rst:364
msgid "Multiple values should be separated by commas."
msgstr "Vários valores devem ser separados por vírgulas."

#: ../source/specifications/pyproject-toml.rst:373
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Keywords "
"<core-metadata-keywords>`"
msgstr ""
"Campo correspondente dos :ref:`metadados principais <core-metadata>`: :ref:"
"`Keywords <core-metadata-keywords>`"

#: ../source/specifications/pyproject-toml.rst:376
msgid "The keywords for the project."
msgstr "As palavras-chave do projeto."

#: ../source/specifications/pyproject-toml.rst:385
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Classifier "
"<core-metadata-classifier>`"
msgstr ""
"Campo correspondente dos :ref:`metadados principais <core-metadata>`: :ref:"
"`Classifier <core-metadata-classifier>`"

#: ../source/specifications/pyproject-toml.rst:388
msgid "Trove classifiers which apply to the project."
msgstr "Classificadores Trove que se aplicam ao projeto."

#: ../source/specifications/pyproject-toml.rst:390
msgid ""
"The use of ``License ::`` classifiers is deprecated and tools MAY issue a "
"warning informing users about that. Build tools MAY raise an error if both "
"the ``license`` string value (translating to ``License-Expression`` metadata "
"field) and the ``License ::`` classifiers are used."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:402
msgid "TOML_ type: table with keys and values of strings"
msgstr "Tipo TOML_: tabela com chaves e valores de strings"

#: ../source/specifications/pyproject-toml.rst:403
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Project-URL "
"<core-metadata-project-url>`"
msgstr ""
"Campo correspondente dos :ref:`metadados principais <core-metadata>`: :ref:"
"`Project-URL <core-metadata-project-url>`"

#: ../source/specifications/pyproject-toml.rst:406
msgid ""
"A table of URLs where the key is the URL label and the value is the URL "
"itself. See :ref:`well-known-project-urls` for normalization rules and well-"
"known rules when processing metadata for presentation."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:416
msgid "Entry points"
msgstr "Pontos de entrada"

#: ../source/specifications/pyproject-toml.rst:418
msgid ""
"TOML_ type: table (``[project.scripts]``, ``[project.gui-scripts]``, and "
"``[project.entry-points]``)"
msgstr ""
"Tipo TOML_: tabela (``[project.scripts]``, ``[project.gui-scripts]`` e "
"``[project.entry-points]``)"

#: ../source/specifications/pyproject-toml.rst:420
msgid ":ref:`Entry points specification <entry-points>`"
msgstr ":ref:`Especificação de pontos de entrada <entry-points>`"

#: ../source/specifications/pyproject-toml.rst:422
msgid ""
"There are three tables related to entry points. The ``[project.scripts]`` "
"table corresponds to the ``console_scripts`` group in the :ref:`entry points "
"specification <entry-points>`. The key of the table is the name of the entry "
"point and the value is the object reference."
msgstr ""
"Existem três tabelas relacionadas aos pontos de entrada. A tabela ``[project."
"scripts]`` corresponde ao grupo ``console_scripts`` na :ref:`especificação "
"de pontos de entrada <entry-points>`. A chave da tabela é o nome do ponto de "
"entrada e o valor é a referência do objeto."

#: ../source/specifications/pyproject-toml.rst:428
msgid ""
"The ``[project.gui-scripts]`` table corresponds to the ``gui_scripts`` group "
"in the :ref:`entry points specification <entry-points>`. Its format is the "
"same as ``[project.scripts]``."
msgstr ""
"A tabela ``[project.gui-scripts]`` corresponde ao grupo ``gui_scripts`` na :"
"ref:`especificação de pontos de entrada <entry-points>`. Seu formato é o "
"mesmo que ``[project.scripts]``."

#: ../source/specifications/pyproject-toml.rst:432
msgid ""
"The ``[project.entry-points]`` table is a collection of tables. Each sub-"
"table's name is an entry point group. The key and value semantics are the "
"same as ``[project.scripts]``. Users MUST NOT create nested sub-tables but "
"instead keep the entry point groups to only one level deep."
msgstr ""
"A tabela ``[project.entry-points]`` é uma coleção de tabelas. O nome de cada "
"subtabela é um grupo de pontos de entrada. A chave e a semântica do valor "
"são iguais a ``[project.scripts]``. Os usuários NÃO DEVEM criar subtabelas "
"aninhadas, mas sim manter os grupos de pontos de entrada em apenas um nível "
"de profundidade."

#: ../source/specifications/pyproject-toml.rst:438
msgid ""
"Build back-ends MUST raise an error if the metadata defines a ``[project."
"entry-points.console_scripts]`` or ``[project.entry-points.gui_scripts]`` "
"table, as they would be ambiguous in the face of ``[project.scripts]`` and "
"``[project.gui-scripts]``, respectively."
msgstr ""
"Backends de construção DEVEM levantar um erro se os metadados definem uma "
"tabela ``[project.entry-points.console_scripts]`` ou ``[project.entry-points."
"gui_scripts]``, pois elas seriam ambíguas perante ``[project.scripts]`` e "
"``[project.gui-scripts]``, respectivamente."

#: ../source/specifications/pyproject-toml.rst:451
msgid ""
"TOML_ type: Array of :pep:`508` strings (``dependencies``), and a table with "
"values of arrays of :pep:`508` strings (``optional-dependencies``)"
msgstr ""
"Tipo TOML_: Vetor de strings da :pep:`508` (``dependencies``) e uma tabela "
"com valores de vetores de strings da :pep:`508` (``optional-dependencies``)"

#: ../source/specifications/pyproject-toml.rst:454
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Requires-"
"Dist <core-metadata-requires-dist>` and :ref:`Provides-Extra <core-metadata-"
"provides-extra>`"
msgstr ""
"Campo correspondente dos :ref:`metadados principais <core-metadata>`: :ref:"
"`Requires-Dist <core-metadata-requires-dist>` e :ref:`Provides-Extra <core-"
"metadata-provides-extra>`"

#: ../source/specifications/pyproject-toml.rst:458
msgid "The (optional) dependencies of the project."
msgstr "As dependências (opcionais) do projeto."

#: ../source/specifications/pyproject-toml.rst:460
msgid ""
"For ``dependencies``, it is a key whose value is an array of strings. Each "
"string represents a dependency of the project and MUST be formatted as a "
"valid :pep:`508` string. Each string maps directly to a :ref:`Requires-Dist "
"<core-metadata-requires-dist>` entry."
msgstr ""
"Para ``dependencies``, é uma chave cujo valor é um array de strings. Cada "
"string representa uma dependência do projeto e DEVE ser formatada como uma "
"string válida :pep:`508`. Cada string mapeia diretamente para um :ref:"
"`Requires-Dist <core-metadata-requires-dist>`."

#: ../source/specifications/pyproject-toml.rst:465
msgid ""
"For ``optional-dependencies``, it is a table where each key specifies an "
"extra and whose value is an array of strings. The strings of the arrays must "
"be valid :pep:`508` strings. The keys MUST be valid values for :ref:"
"`Provides-Extra <core-metadata-provides-extra>`. Each value in the array "
"thus becomes a corresponding :ref:`Requires-Dist <core-metadata-requires-"
"dist>` entry for the matching :ref:`Provides-Extra <core-metadata-provides-"
"extra>` metadata."
msgstr ""
"Para ``optional-dependencies``, é uma tabela onde cada chave especifica um "
"extra e cujo valor é um vetor de strings. As strings dos vetores devem ser "
"strings válidas da :pep:`508`. As chaves DEVEM ser valores válidos para :ref:"
"`Provides-Extra <core-metadata-provides-extra>`. Cada valor no vetor torna-"
"se assim uma entrada correspondente de :ref:`Requer-Dist <core-metadata-"
"requires-dist>` para os metadados correspondentes de :ref:`Provides-Extra "
"<core-metadata-provides-extra>`."

#: ../source/specifications/pyproject-toml.rst:481
msgid "TOML_ type: array of string"
msgstr "Tipo TOML_: vetor de string"

#: ../source/specifications/pyproject-toml.rst:482
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Dynamic "
"<core-metadata-dynamic>`"
msgstr ""
"Campo correspondente dos :ref:`metadados principais <core-metadata>`: :ref:"
"`Dynamic <core-metadata-dynamic>`"

#: ../source/specifications/pyproject-toml.rst:485
msgid ""
"Specifies which keys listed by this PEP were intentionally unspecified so "
"another tool can/will provide such metadata dynamically. This clearly "
"delineates which metadata is purposefully unspecified and expected to stay "
"unspecified compared to being provided via tooling later on."
msgstr ""
"Especifica quais chaves listadas por esta PEP foram intencionalmente não "
"especificadas para que outra ferramenta possa/vai fornecer tais metadados "
"dinamicamente. Isso delineia claramente quais metadados são propositalmente "
"não especificados e espera-se que permaneçam não especificados em comparação "
"a serem fornecidos por meio de ferramentas posteriormente."

#: ../source/specifications/pyproject-toml.rst:491
msgid ""
"A build back-end MUST honour statically-specified metadata (which means the "
"metadata did not list the key in ``dynamic``)."
msgstr ""
"Um backend de construção DEVE respeitar metadados especificados "
"estaticamente (o que significa que os metadados não listam a chave em "
"``dynamic``)."

#: ../source/specifications/pyproject-toml.rst:493
msgid ""
"A build back-end MUST raise an error if the metadata specifies ``name`` in "
"``dynamic``."
msgstr ""
"Um backend de construção DEVE gerar um erro se os metadados especificarem "
"``name`` em ``dynamic``."

#: ../source/specifications/pyproject-toml.rst:495
msgid ""
"If the :ref:`core metadata <core-metadata>` specification lists a field as "
"\"Required\", then the metadata MUST specify the key statically or list it "
"in ``dynamic`` (build back-ends MUST raise an error otherwise, i.e. it "
"should not be possible for a required key to not be listed somehow in the "
"``[project]`` table)."
msgstr ""
"Se a especificação de :ref:`metadados principais <core-metadata>` lista um "
"campo como \"Required\", então os metadados DEVEM especificar a chave "
"estaticamente ou listá-la em ``dynamic`` (backends de construção DEVEM gerar "
"um erro, caso contrário , ou seja, não deve ser possível que uma chave "
"obrigatória não seja listada de alguma forma na tabela ``[project]``)."

#: ../source/specifications/pyproject-toml.rst:500
msgid ""
"If the :ref:`core metadata <core-metadata>` specification lists a field as "
"\"Optional\", the metadata MAY list it in ``dynamic`` if the expectation is "
"a build back-end will provide the data for the key later."
msgstr ""
"Se a especificação de :ref:`metadados principais <core-metadata>` listar um "
"campo como \"Optional\", os metadados PODEM listá-lo em ``dynamic`` se a "
"expectativa for um backend de construção fornecerá os dados para a chave "
"mais tarde."

#: ../source/specifications/pyproject-toml.rst:504
msgid ""
"Build back-ends MUST raise an error if the metadata specifies a key "
"statically as well as being listed in ``dynamic``."
msgstr ""
"Os backends de construção DEVEM levantar um erro se os metadados "
"especificarem uma chave estaticamente, além de serem listados em ``dynamic``."

#: ../source/specifications/pyproject-toml.rst:506
msgid ""
"If the metadata does not list a key in ``dynamic``, then a build back-end "
"CANNOT fill in the requisite metadata on behalf of the user (i.e. "
"``dynamic`` is the only way to allow a tool to fill in metadata and the user "
"must opt into the filling in)."
msgstr ""
"Se os metadados não listam uma chave em ``dynamic``, então um backend de "
"construção NÃO PODE preencher os metadados necessários em nome do usuário "
"(ou seja, ``dynamic`` é a única maneira de permitir que uma ferramenta "
"preencha metadados e o usuário deve optar pelo preenchimento)."

#: ../source/specifications/pyproject-toml.rst:510
msgid ""
"Build back-ends MUST raise an error if the metadata specifies a key in "
"``dynamic`` but the build back-end was unable to determine the data for it "
"(omitting the data, if determined to be the accurate value, is acceptable)."
msgstr ""
"Os backends de construção DEVEM levantar um erro se os metadados "
"especificarem uma chave em ``dynamic``, mas o backend de construção não foi "
"capaz de determinar os dados para ele (omitir os dados, se determinado como "
"o valor exato, é aceitável) ."

#: ../source/specifications/pyproject-toml.rst:520
msgid "Arbitrary tool configuration: the ``[tool]`` table"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:522
msgid ""
"The ``[tool]`` table is where any tool related to your Python project, not "
"just build tools, can have users specify configuration data as long as they "
"use a sub-table within ``[tool]``, e.g. the `flit <https://pypi.python.org/"
"pypi/flit>`_ tool would store its configuration in ``[tool.flit]``."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:528
msgid ""
"A mechanism is needed to allocate names within the ``tool.*`` namespace, to "
"make sure that different projects do not attempt to use the same sub-table "
"and collide. Our rule is that a project can use the subtable ``tool.$NAME`` "
"if, and only if, they own the entry for ``$NAME`` in the Cheeseshop/PyPI."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:539
msgid ""
"May 2016: The initial specification of the ``pyproject.toml`` file, with "
"just a ``[build-system]`` containing a ``requires`` key and a ``[tool]`` "
"table, was approved through :pep:`518`."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:543
msgid ""
"November 2020: The specification of the ``[project]`` table was approved "
"through :pep:`621`."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:546
msgid ""
"December 2024: The ``license`` key was redefined, the ``license-files`` key "
"was added and ``License::`` classifiers were deprecated through :pep:`639`."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:549
msgid ""
"September 2025: Clarity that the ``license`` key applies to all distribution "
"files generated from the :file:`pyproject.toml` file."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:7
msgid "Recording installed projects"
msgstr "Gravando projetos instalados"

#: ../source/specifications/recording-installed-packages.rst:9
msgid ""
"This document specifies a common format of recording information about "
"Python :term:`projects <Project>` installed in an environment. A common "
"metadata format allows tools to query, manage or uninstall projects, "
"regardless of how they were installed."
msgstr ""
"Este documento especifica um formato comum de gravação de informações sobre :"
"term:`projetos <Projeto>` Python instalados em um ambiente. Um formato de "
"metadados comum permite que as ferramentas consultem, gerenciem ou "
"desinstalem projetos, independentemente de como foram instalados."

#: ../source/specifications/recording-installed-packages.rst:14
msgid ""
"Almost all information is optional. This allows tools outside the Python "
"ecosystem, such as Linux package managers, to integrate with Python tooling "
"as much as possible. For example, even if an installer cannot easily provide "
"a list of installed files in a format specific to Python tooling, it should "
"still record the name and version of the installed project."
msgstr ""
"Quase todas as informações são opcionais. Isso permite que ferramentas fora "
"do ecossistema Python, como gerenciadores de pacotes Linux, se integrem com "
"as ferramentas Python tanto quanto possível. Por exemplo, mesmo se um "
"instalador não puder fornecer facilmente uma lista de arquivos instalados em "
"um formato específico para as ferramentas Python, ele ainda deve registrar o "
"nome e a versão do projeto instalado."

#: ../source/specifications/recording-installed-packages.rst:25
msgid ""
"Each project installed from a distribution must, in addition to files, "
"install a \"``.dist-info``\" directory located alongside importable modules "
"and packages (commonly, the ``site-packages`` directory)."
msgstr ""
"Cada projeto instalado de uma distribuição deve, além dos arquivos, instalar "
"um diretório \"``.dist-info``\" localizado junto com os módulos e pacotes "
"importáveis (comumente, o diretório ``site-packages``)."

#: ../source/specifications/recording-installed-packages.rst:29
#, fuzzy
msgid ""
"This directory is named as ``{name}-{version}.dist-info``, with ``name`` and "
"``version`` fields corresponding to :ref:`core-metadata`. Both fields must "
"be normalized (see the :ref:`name normalization specification <name-"
"normalization>` and the :ref:`version normalization specification <version-"
"specifiers-normalization>`), and replace dash (``-``) characters with "
"underscore (``_``) characters, so the ``.dist-info`` directory always has "
"exactly one dash (``-``) character in its stem, separating the ``name`` and "
"``version`` fields."
msgstr ""
"Este diretório é nomeado como ``{name}-{version}.dist-info``, com os campos "
"``name`` e ``version`` correspondendo a :ref:`core-metadata`. Ambos os "
"campos devem ser normalizados (consulte a :ref:`name-normalization` e a :pep:"
"`PEP 440 <440#normalization>` para a definição de normalização para cada "
"campo respectivamente) e substitua os caracteres de traço (``-``) por "
"caracteres de sublinhado (``_``), então o diretório ``.dist-info`` sempre "
"tem exatamente um caractere de traço (``-``) em seu radical, separando os "
"campos ``name`` e ``version``."

#: ../source/specifications/recording-installed-packages.rst:37
msgid ""
"Historically, tools have failed to replace dot characters or normalize case "
"in the ``name`` field, or not perform normalization in the ``version`` "
"field. Tools consuming ``.dist-info`` directories should expect those fields "
"to be unnormalized, and treat them as equivalent to their normalized "
"counterparts. New tools that write ``.dist-info`` directories MUST normalize "
"both ``name`` and ``version`` fields using the rules described above, and "
"existing tools are encouraged to start normalizing those fields."
msgstr ""
"Historicamente, as ferramentas falharam em substituir caracteres de ponto ou "
"normalizar maiúsculas e minúsculas no campo ``name``, ou não realizar a "
"normalização no campo ``version``. Ferramentas que consomem diretórios ``."
"dist-info`` devem esperar que esses campos sejam desnormalizados e tratá-los "
"como equivalentes a suas contrapartes normalizadas. Novas ferramentas que "
"escrevem diretórios ``.dist-info`` DEVEM normalizar ambos os campos ``name`` "
"e ``version`` usando as regras descritas acima, e as ferramentas existentes "
"são encorajadas a começar a normalizar esses campos."

#: ../source/specifications/recording-installed-packages.rst:47
#, fuzzy
msgid ""
"The ``.dist-info`` directory's name is formatted to unambiguously represent "
"a distribution as a filesystem path. Tools presenting a distribution name to "
"a user should avoid using the normalized name, and instead present the "
"specified name (when needed prior to resolution to an installed package), or "
"read the respective fields in Core Metadata, since values listed there are "
"unescaped and accurately reflect the distribution. Libraries should provide "
"API for such tools to consume, so tools can have access to the unnormalized "
"name when displaying distribution information."
msgstr ""
"O nome do diretório ``.dist-info`` é formatado para representar "
"inequivocamente uma distribuição como um caminho do sistema de arquivos. As "
"ferramentas que apresentam um nome de distribuição a um usuário devem evitar "
"o uso do nome normalizado e, em vez disso, apresentar o nome especificado "
"(quando necessário antes da resolução de um pacote instalado) ou ler os "
"respectivos campos nos metadados principais, uma vez que os valores listados "
"não têm escape e são precisos refletem a distribuição. As bibliotecas devem "
"fornecer API para o consumo dessas ferramentas, de forma que as ferramentas "
"possam ter acesso ao nome não normalizado ao exibir informações de "
"distribuição."

#: ../source/specifications/recording-installed-packages.rst:56
#, fuzzy
msgid ""
"This ``.dist-info`` directory may contain the following files, described in "
"detail below:"
msgstr ""
"Este diretório ``.dist-info`` pode conter esses arquivos, descritos em "
"detalhes abaixo:"

#: ../source/specifications/recording-installed-packages.rst:59
msgid "``METADATA``: contains project metadata"
msgstr "``METADATA``: contém metadados do projeto"

#: ../source/specifications/recording-installed-packages.rst:60
msgid "``RECORD``: records the list of installed files."
msgstr "``RECORD``: registra a lista de arquivos instalados."

#: ../source/specifications/recording-installed-packages.rst:61
msgid ""
"``INSTALLER``: records the name of the tool used to install the project."
msgstr ""
"``INSTALLER``: registra o nome da ferramenta usada para instalar o projeto."

#: ../source/specifications/recording-installed-packages.rst:62
msgid "``entry_points.txt``: see :ref:`entry-points` for details"
msgstr "``entry_points.txt``: veja :ref:`entry-points` para mais detalhes"

#: ../source/specifications/recording-installed-packages.rst:63
msgid "``direct_url.json``: see :ref:`direct-url` for details"
msgstr "``direct_url.json``: veja :ref:`direct-url` para mais detalhes"

#: ../source/specifications/recording-installed-packages.rst:65
msgid ""
"The ``METADATA`` file is mandatory. All other files may be omitted at the "
"installing tool's discretion. Additional installer-specific files may be "
"present."
msgstr ""
"O arquivo ``METADATA`` é obrigatório. Todos os outros arquivos podem ser "
"omitidos a critério da ferramenta de instalação. Arquivos adicionais "
"específicos do instalador podem estar presentes."

#: ../source/specifications/recording-installed-packages.rst:69
#, fuzzy
msgid ""
"This :file:`.dist-info/` directory may contain the following directories, "
"described in detail below:"
msgstr ""
"Este diretório ``.dist-info`` pode conter esses arquivos, descritos em "
"detalhes abaixo:"

#: ../source/specifications/recording-installed-packages.rst:72
msgid ":file:`licenses/`: contains license files."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:73
msgid ":file:`sboms/`: contains Software Bill-of-Materials files (SBOMs)."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:77
msgid ""
"The :ref:`binary-distribution-format` specification describes additional "
"files that may appear in the ``.dist-info`` directory of a :term:`Wheel`. "
"Such files may be copied to the ``.dist-info`` directory of an installed "
"project."
msgstr ""
"A especificação :ref:`binary-distribution-format` descreve arquivos "
"adicionais que podem aparecer no diretório ``.dist-info`` de um :term:"
"`Wheel`. Esses arquivos podem ser copiados para o diretório ``.dist-info`` "
"de um projeto instalado."

#: ../source/specifications/recording-installed-packages.rst:82
msgid ""
"The previous versions of this specification also specified a ``REQUESTED`` "
"file. This file is now considered a tool-specific extension, but may be "
"standardized again in the future. See `PEP 376 <https://www.python.org/dev/"
"peps/pep-0376/#requested>`_ for its original meaning."
msgstr ""
"As versões anteriores desta especificação também especificavam um arquivo "
"``REQUESTED``. Este arquivo agora é considerado uma extensão específica da "
"ferramenta, mas pode ser padronizado novamente no futuro. Consulte `PEP 376 "
"<https://www.python.org/dev/peps/pep-0376/#requested>`_ para seu significado "
"original."

#: ../source/specifications/recording-installed-packages.rst:89
msgid "The METADATA file"
msgstr "O arquivo METADATA"

#: ../source/specifications/recording-installed-packages.rst:91
msgid ""
"The ``METADATA`` file contains metadata as described in the :ref:`core-"
"metadata` specification, version 1.1 or greater."
msgstr ""
"O arquivo ``METADATA`` contém metadados conforme descrito na especificação :"
"ref:`core-metadata`, versão 1.1 ou superior."

#: ../source/specifications/recording-installed-packages.rst:94
msgid ""
"The ``METADATA`` file is mandatory. If it cannot be created, or if required "
"core metadata is not available, installers must report an error and fail to "
"install the project."
msgstr ""
"O arquivo ``METADATA`` é obrigatório. Se não puder ser criado ou se os "
"metadados principais necessários não estiverem disponíveis, os instaladores "
"devem relatar um erro e falhar ao instalar o projeto."

#: ../source/specifications/recording-installed-packages.rst:100
msgid "The RECORD file"
msgstr "O arquivo RECORD"

#: ../source/specifications/recording-installed-packages.rst:102
msgid ""
"The ``RECORD`` file holds the list of installed files. It is a CSV file "
"containing one record (line) per installed file."
msgstr ""
"O arquivo ``RECORD`` contém a lista de arquivos instalados. É um arquivo CSV "
"contendo um registro (linha) por arquivo instalado."

#: ../source/specifications/recording-installed-packages.rst:105
msgid ""
"The CSV dialect must be readable with the default ``reader`` of Python's "
"``csv`` module:"
msgstr ""
"O dialeto CSV deve ser legível com o ``reader`` padrão do módulo ``csv`` do "
"Python:"

#: ../source/specifications/recording-installed-packages.rst:108
msgid "field delimiter: ``,`` (comma),"
msgstr "delimitador de campo: ``,`` (vírgula),"

#: ../source/specifications/recording-installed-packages.rst:109
msgid "quoting char: ``\"`` (straight double quote),"
msgstr "caractere de aspas: ``\"`` (aspas duplas),"

#: ../source/specifications/recording-installed-packages.rst:110
msgid "line terminator: either ``\\r\\n`` or ``\\n``."
msgstr "terminador de linha: ``\\r\\n`` ou ``\\n``."

#: ../source/specifications/recording-installed-packages.rst:112
msgid ""
"Each record is composed of three elements: the file's **path**, the **hash** "
"of the contents, and its **size**."
msgstr ""
"Cada registro é composto de três elementos: o **caminho** do arquivo, o "
"**hash** do conteúdo e seu **tamanho**."

#: ../source/specifications/recording-installed-packages.rst:115
msgid ""
"The *path* may be either absolute, or relative to the directory containing "
"the ``.dist-info`` directory (commonly, the ``site-packages`` directory). On "
"Windows, directories may be separated either by forward- or backslashes (``/"
"`` or ``\\``)."
msgstr ""
"O *caminho* pode ser absoluto ou relativo ao diretório que contém o "
"diretório ``.dist-info`` (comumente, o diretório ``site-packages``). No "
"Windows, os diretórios podem ser separados por barras ou barras invertidas "
"(``/`` ou ``\\``)."

#: ../source/specifications/recording-installed-packages.rst:120
#, fuzzy
msgid ""
"The *hash* is either an empty string or the name of a hash algorithm from :"
"py:data:`hashlib.algorithms_guaranteed`, followed by the equals character "
"``=`` and the digest of the file's contents, encoded with the urlsafe-base64-"
"nopad encoding (:py:func:`base64.urlsafe_b64encode(digest) <base64."
"urlsafe_b64encode()>` with trailing ``=`` removed)."
msgstr ""
"O *hash* é uma string vazia ou o nome de um algoritmo hash de ``hashlib."
"algorithms_guaranteed``, seguido pelo caractere igual ``=`` e o resumo do "
"conteúdo do arquivo, codificado com a codificação urlsafe-base64-nopad "
"(``base64.urlsafe_b64encode(digest)`` com ``=`` ao final removido)."

#: ../source/specifications/recording-installed-packages.rst:125
msgid ""
"The *size* is either the empty string, or file's size in bytes, as a base 10 "
"integer."
msgstr ""
"O *tamanho* é a string vazia ou o tamanho do arquivo em bytes, como um "
"inteiro de base 10."

#: ../source/specifications/recording-installed-packages.rst:128
msgid ""
"For any file, either or both of the *hash* and *size* fields may be left "
"empty. Commonly, entries for ``.pyc`` files and the ``RECORD`` file itself "
"have empty *hash* and *size*. For other files, leaving the information out "
"is discouraged, as it prevents verifying the integrity of the installed "
"project."
msgstr ""
"Para qualquer arquivo, um ou ambos os campos de *hash* e *tamanho* podem ser "
"deixados em branco. Normalmente, entradas para arquivos ``.pyc`` e o próprio "
"arquivo ``RECORD`` têm *hash* e *tamanho* vazios. Para os demais arquivos, "
"não é recomendável deixar as informações de fora, pois impede a verificação "
"da integridade do projeto instalado."

#: ../source/specifications/recording-installed-packages.rst:134
msgid ""
"If the ``RECORD`` file is present, it must list all installed files of the "
"project, except ``.pyc`` files corresponding to ``.py`` files listed in "
"``RECORD``, which are optional. Notably, the contents of the ``.dist-info`` "
"directory (including the ``RECORD`` file itself) must be listed. Directories "
"should not be listed."
msgstr ""
"Se o arquivo ``RECORD`` estiver presente, ele deve listar todos os arquivos "
"instalados do projeto, exceto os arquivos ``.pyc`` correspondentes aos "
"arquivos ``.py`` listados em ``RECORD``, que são opcionais. Notavelmente, o "
"conteúdo do diretório ``.dist-info`` (incluindo o próprio arquivo "
"``RECORD``) deve ser listado. Os diretórios não devem ser listados."

#: ../source/specifications/recording-installed-packages.rst:141
msgid ""
"To completely uninstall a package, a tool needs to remove all files listed "
"in ``RECORD``, all ``.pyc`` files (of all optimization levels) corresponding "
"to removed ``.py`` files, and any directories emptied by the uninstallation."
msgstr ""
"Para desinstalar completamente um pacote, uma ferramenta precisa remover "
"todos os arquivos listados em ``RECORD``, todos os arquivos ``.pyc`` (de "
"todos os níveis de otimização) correspondentes aos arquivos ``.py`` "
"removidos e quaisquer diretórios esvaziados pela desinstalação."

#: ../source/specifications/recording-installed-packages.rst:146
msgid "Here is an example snippet of a possible ``RECORD`` file::"
msgstr "Aqui está um trecho de exemplo de um possível arquivo ``RECORD``::"

#: ../source/specifications/recording-installed-packages.rst:165
#, fuzzy
msgid ""
"If the ``RECORD`` file is missing, tools that rely on ``.dist-info`` must "
"not attempt to uninstall or upgrade the package. (This restriction does not "
"apply to tools that rely on other sources of information, such as system "
"package managers in Linux distros.)"
msgstr ""
"Se o arquivo ``RECORD`` estiver faltando, as ferramentas que dependem de ``."
"dist-info`` não devem tentar desinstalar ou atualizar o pacote. (Isso não se "
"aplica a ferramentas que dependem de outras fontes de informação, como "
"gerenciadores de pacotes do sistema em distros Linux.)"

#: ../source/specifications/recording-installed-packages.rst:172
msgid ""
"It is *strongly discouraged* for an installed package to modify itself (e."
"g., store cache files under its namespace in ``site-packages``). Changes "
"inside ``site-packages`` should be left to specialized installer tools such "
"as pip. If a package is nevertheless modified in this way, then the "
"``RECORD`` must be updated, otherwise uninstalling the package will leave "
"unlisted files in place (possibly resulting in a zombie namespace package)."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:181
msgid "The INSTALLER file"
msgstr "O arquivo INSTALLER"

#: ../source/specifications/recording-installed-packages.rst:183
msgid ""
"If present, ``INSTALLER`` is a single-line text file naming the tool used to "
"install the project. If the installer is executable from the command line, "
"``INSTALLER`` should contain the command name. Otherwise, it should contain "
"a printable ASCII string."
msgstr ""
"Se presente, ``INSTALLER`` é um arquivo de texto de uma linha que nomeia a "
"ferramenta usada para instalar o projeto. Se o instalador for executável a "
"partir da linha de comando, ``INSTALLER`` deve conter o nome do comando. "
"Caso contrário, deve conter uma string ASCII imprimível."

#: ../source/specifications/recording-installed-packages.rst:189
msgid "The file can be terminated by zero or more ASCII whitespace characters."
msgstr ""
"O arquivo pode ser encerrado com zero ou mais caracteres de espaço em branco "
"ASCII."

#: ../source/specifications/recording-installed-packages.rst:191
msgid "Here are examples of two possible ``INSTALLER`` files::"
msgstr "Aqui estão exemplos de dois possíveis arquivos ``INSTALLER``::"

#: ../source/specifications/recording-installed-packages.rst:199
msgid ""
"This value should be used for informational purposes only. For example, if a "
"tool is asked to uninstall a project but finds no ``RECORD`` file, it may "
"suggest that the tool named in ``INSTALLER`` may be able to do the "
"uninstallation."
msgstr ""
"Este valor deve ser usado apenas para fins informativos. Por exemplo, se uma "
"ferramenta é solicitada a desinstalar um projeto, mas não encontra o arquivo "
"``RECORD``, pode sugerir que a ferramenta nomeada em ``INSTALLER`` pode ser "
"capaz de fazer a desinstalação."

#: ../source/specifications/recording-installed-packages.rst:206
msgid "The entry_points.txt file"
msgstr "O arquivo entry_points.txt"

#: ../source/specifications/recording-installed-packages.rst:208
msgid ""
"This file MAY be created by installers to indicate when packages contain "
"components intended for discovery and use by other code, including console "
"scripts and other applications that the installer has made available for "
"execution."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:213
#, fuzzy
msgid "Its detailed specification is at :ref:`entry-points`."
msgstr "Sua especificação detalhada está em :ref:`direct-url`."

#: ../source/specifications/recording-installed-packages.rst:217
msgid "The direct_url.json file"
msgstr "O arquivo direct_url.json"

#: ../source/specifications/recording-installed-packages.rst:219
msgid ""
"This file MUST be created by installers when installing a distribution from "
"a requirement specifying a direct URL reference (including a VCS URL)."
msgstr ""
"Este arquivo DEVE ser criado por instaladores ao instalar uma distribuição a "
"partir de um requisito que especifica uma referência de URL direta "
"(incluindo uma URL de VCS)."

#: ../source/specifications/recording-installed-packages.rst:225
msgid "Its detailed specification is at :ref:`direct-url`."
msgstr "Sua especificação detalhada está em :ref:`direct-url`."

#: ../source/specifications/recording-installed-packages.rst:229
msgid "The :file:`licenses/` subdirectory"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:231
msgid ""
"If the metadata version is 2.4 or greater and one or more ``License-File`` "
"fields is specified, the :file:`.dist-info/` directory MUST contain a :file:"
"`licenses/` subdirectory which MUST contain the files listed in the "
"``License-File`` fields in the :file:`METADATA` file at their respective "
"paths relative to the :file:`licenses/` directory. Any files in this "
"directory MUST be copied from wheels by the install tools."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:240
#, fuzzy
#| msgid "The .dist-info directory"
msgid "The :file:`sboms/` subdirectory"
msgstr "O diretório .dist-info"

#: ../source/specifications/recording-installed-packages.rst:242
msgid ""
"All files contained within the :file:`.dist-info/sboms/` directory MUST be "
"Software Bill-of-Materials (SBOM) files that describe software contained "
"within the installed package. Any files in this directory MUST be copied "
"from wheels by the install tools."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:249
msgid "Intentionally preventing changes to installed packages"
msgstr "Prevenindo intencionalmente modificações nos pacotes instalados"

#: ../source/specifications/recording-installed-packages.rst:251
msgid ""
"In some cases (such as when needing to manage external dependencies in "
"addition to Python ecosystem dependencies), it is desirable for a tool that "
"installs packages into a Python environment to ensure that other tools are "
"not used to uninstall or otherwise modify that installed package, as doing "
"so may cause compatibility problems with the wider environment."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:257
msgid "To achieve this, affected tools should take the following steps:"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:259
msgid ""
"Rename or remove the ``RECORD`` file to prevent changes via other tools (e."
"g. appending a suffix to create a non-standard ``RECORD.tool`` file if the "
"tool itself needs the information, or omitting the file entirely if the "
"package contents are tracked and managed via other means)"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:263
msgid ""
"Write an ``INSTALLER`` file indicating the name of the tool that should be "
"used to manage the package (this allows ``RECORD``-aware tools to provide "
"better error notices when asked to modify affected packages)"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:267
msgid ""
"Python runtime providers may also prevent inadvertent modification of "
"platform provided packages by modifying the default Python package "
"installation scheme to use a location other than that used by platform "
"provided packages (while also ensuring both locations appear on the default "
"Python import path)."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:272
msgid ""
"In some circumstances, it may be desirable to block even installation of "
"additional packages via Python-specific tools. For these cases refer to :ref:"
"`externally-managed-environments`"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:280
msgid ""
"June 2009: The original version of this specification was approved through :"
"pep:`376`.  At the time, it was known as the *Database of Installed Python "
"Distributions*."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:283
msgid ""
"March 2020: The specification of the ``direct_url.json`` file was approved "
"through :pep:`610`. It is only mentioned on this page; see :ref:`direct-url` "
"for the full definition."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:286
msgid ""
"September 2020: Various amendments and clarifications were approved through :"
"pep:`627`."
msgstr ""

#: ../source/specifications/schemas/index.rst:4
#, fuzzy
#| msgid "Hybrid schemes"
msgid "PyPA schemas"
msgstr "Esquemas híbridos"

#: ../source/specifications/schemas/index.rst:6
#, fuzzy
#| msgid "``direct_url.json``: see :ref:`direct-url` for details"
msgid "`direct_url.json <direct-url.schema.json>`_"
msgstr "``direct_url.json``: veja :ref:`direct-url` para mais detalhes"

#: ../source/specifications/schemas/index.rst:7
msgid "`build-details.json <build-details-v1.0.schema.json>`_"
msgstr ""

#: ../source/specifications/schemas/index.rst:8
msgid "`pylock.toml <pylock.schema.json>`_"
msgstr ""

#: ../source/specifications/section-distribution-formats.rst:3
msgid "Package Distribution File Formats"
msgstr "Formatos de arquivos de distribuição de pacotes"

#: ../source/specifications/section-distribution-metadata.rst:3
msgid "Package Distribution Metadata"
msgstr "Metadados de distribuição de pacotes"

#: ../source/specifications/section-installation-metadata.rst:3
#, fuzzy
msgid "Package Installation Metadata"
msgstr "Metadados do ambiente de instalação de pacotes"

#: ../source/specifications/section-package-indices.rst:3
msgid "Package Index Interfaces"
msgstr "Interfaces de índices de pacotes"

#: ../source/specifications/section-python-description-formats.rst:3
#, fuzzy
#| msgid "Python versions over time"
msgid "Python Description Formats"
msgstr "Versões Python ao longo do tempo"

#: ../source/specifications/section-reproducible-environments.rst:3
#, fuzzy
#| msgid "Virtual Environment"
msgid "Reproducible Environments"
msgstr "Ambiente Virtual"

#: ../source/specifications/simple-repository-api.rst:6
msgid "Simple repository API"
msgstr "API de repositório simples"

#: ../source/specifications/simple-repository-api.rst:8
msgid ""
"The keywords \"**MUST**\", \"**MUST NOT**\", \"**REQUIRED**\", "
"\"**SHALL**\", \"**SHALL NOT**\", \"**SHOULD**\", \"**SHOULD NOT**\", "
"\"**RECOMMENDED**\", \"**MAY**\", and \"**OPTIONAL**\"\" in this document "
"are to be interpreted as described in :rfc:`2119`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:13
msgid ""
"The interface for querying available package versions and retrieving "
"packages from an index server comes in two forms: :ref:`HTML <simple-"
"repository-html-serialization>` and :ref:`JSON <json-serialization>`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:21
msgid "Base API"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:23
msgid ""
"A repository that implements the simple API is defined by its base URL. This "
"is the top level URL that all additional URLs are below. The API is named "
"the \"simple\" repository due to the fact that PyPI's base URL is ``https://"
"pypi.org/simple/``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:28
msgid ""
"All subsequent URLs in this document will be relative to this base URL (so "
"given PyPI's URL, a URL of ``/foo/`` would be ``https://pypi.org/simple/foo/"
"``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:33
#, fuzzy
msgid "Normalized Names"
msgstr "Nomes não normalizados válidos"

#: ../source/specifications/simple-repository-api.rst:35
msgid ""
"This spec references the concept of a \"normalized\" project name. As per :"
"ref:`the name normalization specification <name-normalization>` the only "
"valid characters in a name are the ASCII alphabet, ASCII numbers, ``.``, ``-"
"``, and ``_``. The name should be lowercased with all runs of the characters "
"``.``, ``-``, or ``_`` replaced with a single ``-`` character. This can be "
"implemented in Python with the ``re`` module::"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:50
msgid "Versioning PyPI's Simple API"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:52
msgid ""
"This spec proposes the inclusion of a meta tag on the responses of every "
"successful request to a simple API page, which contains a name attribute of "
"``pypi:repository-version``, and a content that is a :ref:`version "
"specifiers specification <version-specifiers>` compatible version number, "
"which is further constrained to ONLY be Major.Minor, and none of the "
"additional features supported by :ref:`the version specifiers specification "
"<version-specifiers>`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:60
msgid "This would end up looking like:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:66
msgid "When interpreting the repository version:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:68
msgid ""
"Incrementing the major version is used to signal a backwards incompatible "
"change such that existing clients would no longer be expected to be able to "
"meaningfully use the API."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:71
msgid ""
"Incrementing the minor version is used to signal a backwards compatible "
"change such that existing clients would still be expected to be able to "
"meaningfully use the API."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:75
msgid ""
"It is left up to the discretion of any future specs as to what specifically "
"constitutes a backwards incompatible vs compatible change beyond the broad "
"suggestion that existing clients will be able to \"meaningfully\" continue "
"to use the API, and can include adding, modifying, or removing existing "
"features."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:81
msgid ""
"It is expectation of this spec that the major version will never be "
"incremented, and any future major API evolutions would utilize a different "
"mechanism for API evolution. However the major version is included to "
"disambiguate with future versions (e.g. a hypothetical simple api v2 that "
"lived at /v2/, but which would be confusing if the repository-version was "
"set to a version >= 2)."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:89
msgid "API Version History"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:91
msgid ""
"This section contains only an abbreviated history of changes, as marked by "
"the API version number. For a full history of changes including changes made "
"before API versioning, see :ref:`History <simple-repository-history>`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:95
msgid "API version 1.0: Initial version of the API, declared with :pep:`629`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:96
msgid ""
"API version 1.1: Added ``versions``, ``files[].size``, and ``files[].upload-"
"time`` metadata to the JSON serialization, declared with :pep:`700`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:98
msgid ""
"API version 1.2: Added repository \"tracks\" metadata, declared with :pep:"
"`708`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:99
msgid "API version 1.3: Added provenance metadata, declared with :pep:`740`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:100
msgid "API version 1.4: Added status markers, declared with :pep:`792`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:103
#, fuzzy
msgid "Clients"
msgstr "Conteúdo"

#: ../source/specifications/simple-repository-api.rst:105
msgid ""
"Clients interacting with the simple API **SHOULD** introspect each response "
"for the repository version, and if that data does not exist **MUST** assume "
"that it is version 1.0."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:109
msgid ""
"When encountering a major version greater than expected, clients **MUST** "
"hard fail with an appropriate error message for the user."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:112
msgid ""
"When encountering a minor version greater than expected, clients **SHOULD** "
"warn users with an appropriate message."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:115
msgid ""
"Clients **MAY** still continue to use feature detection in order to "
"determine what features a repository uses."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:121
#, fuzzy
msgid "HTML Serialization"
msgstr "Normalização"

#: ../source/specifications/simple-repository-api.rst:125
msgid ""
"The following constraints apply to all HTML serialized responses described "
"in this spec:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:128
msgid "All HTML responses **MUST** be a valid HTML5 document."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:129
msgid ""
"HTML responses **MAY** contain one or more ``meta`` tags in the ``<head>`` "
"section. The semantics of these tags are defined below."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:133
#: ../source/specifications/simple-repository-api.rst:428
#, fuzzy
msgid "Project List"
msgstr "Projeto"

#: ../source/specifications/simple-repository-api.rst:135
msgid ""
"Within a repository, the root URL (``/`` for this spec which represents the "
"base URL) **MUST** be a valid HTML5 page with a single anchor element per "
"project in the repository."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:139
msgid ""
"The text of each anchor tag **MUST** be the name of the project and the "
"``href`` attribute **MUST** link to the URL for that particular project. As "
"an example:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:156
#: ../source/specifications/simple-repository-api.rst:473
#, fuzzy
msgid "Project Detail"
msgstr "Nome do projeto"

#: ../source/specifications/simple-repository-api.rst:158
msgid ""
"Below the root URL is another URL for each individual project contained "
"within a repository. The format of this URL is ``/<project>/``, where the "
"``<project>`` is replaced by the normalized name for that project."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:164
msgid ""
"For example, a project named \"HolyGrail\" would have a URL like ``/"
"holygrail/``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:167
msgid ""
"The project detail URL must respond with a valid HTML5 page with a single "
"anchor element per file for the project. The ``href`` attribute **MUST** be "
"a URL that links to the location of the file for download, and the text of "
"the anchor tag **MUST** match the final path component (the filename) of the "
"URL."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:172
msgid ""
"Each file URL **SHOULD** include a hash in the form of a URL fragment with "
"the following syntax: ``#<hashname>=<hashvalue>``, where ``<hashname>`` is "
"the lowercase name of the hash function (such as ``sha256``) and "
"``<hashvalue>`` is the hex encoded digest."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:177
msgid ""
"In addition to the above, the following constraints are placed on the API:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:179
msgid ""
"All URLs which respond with an HTML5 page **MUST** end with a ``/`` and the "
"repository **SHOULD** redirect the URLs without a ``/`` to add a ``/`` to "
"the end."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:183
msgid ""
"URLs may be either absolute or relative as long as they point to the correct "
"location."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:186
msgid ""
"There are no constraints on where the files must be hosted relative to the "
"repository."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:189
msgid ""
"There may be any other HTML elements on the API pages as long as the "
"required anchor elements exist."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:192
msgid ""
"Repositories **MAY** redirect unnormalized URLs to the canonical normalized "
"URL (e.g. ``/Foobar/`` may redirect to ``/foobar/``), however clients **MUST "
"NOT** rely on this redirection and **MUST** request the normalized URL."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:197
msgid ""
"Repositories **SHOULD** choose a hash function from one of the ones "
"guaranteed to be available via the :py:mod:`hashlib` module in the Python "
"standard library (currently ``md5``, ``sha1``, ``sha224``, ``sha256``, "
"``sha384``, ``sha512``). The current recommendation is to use ``sha256``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:202
msgid ""
"If there is a GPG signature for a particular distribution file it **MUST** "
"live alongside that file with the same name with a ``.asc`` appended to it. "
"So if the file ``/packages/HolyGrail-1.0.tar.gz`` existed and had an "
"associated signature, the signature would be located at ``/packages/"
"HolyGrail-1.0.tar.gz.asc``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:208
msgid ""
"A repository **MAY** include a ``data-core-metadata`` attribute on a file "
"link."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:211
msgid ""
"The repository **SHOULD** provide the hash of the Core Metadata file as the "
"``data-core-metadata`` attribute's value using the syntax "
"``<hashname>=<hashvalue>``, where ``<hashname>`` is the lower cased name of "
"the hash function used, and ``<hashvalue>`` is the hex encoded digest. The "
"repository **MAY** use ``true`` as the attribute's value if a hash is "
"unavailable."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:217
msgid ""
"A repository **MAY** include a ``data-dist-info-metadata`` attribute on a "
"file link."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:220
msgid ""
"Index clients **MAY** consume this key if present, as a legacy fallback for "
"``data-core-metadata``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:225
msgid ""
"``data-dist-info-metadata`` was standardized with :pep:`658` and renamed to "
"``data-core-metadata`` with :pep:`714`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:228
msgid ""
"A repository **MAY** include a ``data-gpg-sig`` attribute on a file link "
"with a value of either ``true`` or ``false`` to indicate whether or not "
"there is a GPG signature. Repositories that do this **SHOULD** include it on "
"every link."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:232
msgid ""
"A repository **MAY** include a ``data-requires-python`` attribute on a file "
"link. This exposes the :ref:`core-metadata-requires-python` metadata field "
"for the corresponding release. Where this is present, installer tools "
"**SHOULD** ignore the download when installing to a Python version that "
"doesn't satisfy the requirement. For example:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:242
msgid ""
"In the attribute value, < and > have to be HTML encoded as ``&lt;`` and "
"``&gt;``, respectively."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:245
msgid ""
"A repository **MAY** include a ``data-yanked`` attribute on a file link."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:247
msgid ""
"The ``data-yanked`` attribute may have no value, or may have an arbitrary "
"string as a value. The presence of a ``data-yanked`` attribute **SHOULD** be "
"interpreted as indicating that the file pointed to by this particular link "
"has been \"Yanked\", and should not generally be selected by an installer, "
"except under specific scenarios."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:253
msgid ""
"The value of the ``data-yanked`` attribute, if present, is an arbitrary "
"string that represents the reason for why the file has been yanked."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:258
#: ../source/specifications/simple-repository-api.rst:601
msgid ""
"The semantics of how tools should handle yanked files is described in :ref:"
"`file-yanking`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:261
msgid ""
"A repository **MAY** include a ``data-provenance`` attribute on a file link. "
"The value of this attribute **MUST** be a fully qualified URL, signaling "
"that the file's provenance can be found at that URL. This URL **MUST** "
"represent a `secure origin <https://www.chromium.org/Home/chromium-security/"
"prefer-secure-origins-for-powerful-new-features/>`_."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:268
msgid "The ``data-provenance`` attribute was added with API version 1.3."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:272
msgid ""
"The format of the linked provenance is defined in :ref:`index-hosted-"
"attestations`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:274
msgid ""
"A repository **MAY** include ``pypi:project-status`` and ``pypi:project-"
"status-reason`` meta tags on the response itself."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:277
msgid ""
"The value of ``pypi:project-status`` **MUST** be a valid project status "
"marker, while the value of ``pypi:project-status-reason`` **MUST** be an "
"arbitrary string if present."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:283
#: ../source/specifications/simple-repository-api.rst:493
msgid ""
"The set of valid project status markers and their semantics is described in :"
"ref:`project-status-markers`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:288
msgid ""
"The ``pypi:project-status`` and ``pypi:project-status-reason`` meta tags "
"were added with API version 1.4."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:294
msgid "Serve Distribution Metadata in the Simple Repository API"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:296
msgid ""
"In a simple repository's project page, each anchor tag pointing to a "
"distribution **MAY** have a ``data-dist-info-metadata`` attribute. The "
"presence of the attribute indicates the distribution represented by the "
"anchor tag **MUST** contain a Core Metadata file that will not be modified "
"when the distribution is processed and/or installed."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:302
msgid ""
"If a ``data-dist-info-metadata`` attribute is present, the repository "
"**MUST** serve the distribution's Core Metadata file alongside the "
"distribution with a ``.metadata`` appended to the distribution's file name. "
"For example, the Core Metadata of a distribution served at ``/files/"
"distribution-1.0-py3.none.any.whl`` would be located at ``/files/"
"distribution-1.0-py3.none.any.whl.metadata``. This is similar to how :ref:"
"`the base HTML API specification <simple-repository-api-base>` specifies the "
"GPG signature file's location."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:311
msgid ""
"The repository **SHOULD** provide the hash of the Core Metadata file as the "
"``data-dist-info-metadata`` attribute's value using the syntax "
"``<hashname>=<hashvalue>``, where ``<hashname>`` is the lower cased name of "
"the hash function used, and ``<hashvalue>`` is the hex encoded digest. The "
"repository **MAY** use ``true`` as the attribute's value if a hash is "
"unavailable."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:319
#, fuzzy
msgid "Backwards Compatibility"
msgstr "Compatibilidade da ABI"

#: ../source/specifications/simple-repository-api.rst:321
msgid ""
"If an anchor tag lacks the ``data-dist-info-metadata`` attribute, tools are "
"expected to revert to their current behaviour of downloading the "
"distribution to inspect the metadata."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:325
msgid ""
"Older tools not supporting the new ``data-dist-info-metadata`` attribute are "
"expected to ignore the attribute and maintain their current behaviour of "
"downloading the distribution to inspect the metadata. This is similar to how "
"prior ``data-`` attribute additions expect existing tools to operate."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:334
msgid "JSON-based Simple API for Python Package Indexes"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:336
msgid ""
"To enable response parsing with only the standard library, this spec "
"specifies that all responses (besides the files themselves, and the HTML "
"responses from :ref:`the base HTML API specification <simple-repository-api-"
"base>`) should be serialized using `JSON <https://www.json.org/>`_."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:341
msgid ""
"To enable zero configuration discovery and to minimize the amount of "
"additional HTTP requests, this spec extends :ref:`the base HTML API "
"specification <simple-repository-api-base>` such that all of the API "
"endpoints (other than the files themselves) will utilize HTTP content "
"negotiation to allow client and server to select the correct serialization "
"format to serve, i.e. either HTML or JSON."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:351
msgid ""
"Versioning will adhere to :ref:`the API versioning specification <simple-"
"repository-api-versioning>` format (``Major.Minor``), which has defined the "
"existing HTML responses to be ``1.0``. Since this spec does not introduce "
"new features into the API, rather it describes a different serialization "
"format for the existing features, this spec does not change the existing "
"``1.0`` version, and instead just describes how to serialize that into JSON."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:358
msgid ""
"Similar to :ref:`the API versioning specification <simple-repository-api-"
"versioning>`, the major version number **MUST** be incremented if any "
"changes to the new format would result in no longer being able to expect "
"existing clients to meaningfully understand the format."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:364
msgid ""
"Likewise, the minor version **MUST** be incremented if features are added or "
"removed from the format, but existing clients would be expected to continue "
"to meaningfully understand the format."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:368
msgid ""
"Changes that would not result in existing clients being unable to "
"meaningfully understand the format and which do not represent features being "
"added or removed may occur without changing the version number."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:372
msgid ""
"This is intentionally vague, as this spec believes it is best left up to "
"future specs that make any changes to the API to investigate and decide "
"whether or not that change should increment the major or minor version."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:376
msgid ""
"Future versions of the API may add things that can only be represented in a "
"subset of the available serializations of that version. All serializations "
"version numbers, within a major version, **SHOULD** be kept in sync, but the "
"specifics of how a feature serializes into each format may differ, including "
"whether or not that feature is present at all."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:382
msgid ""
"It is the intent of this spec that the API should be thought of as URL "
"endpoints that return data, whose interpretation is defined by the version "
"of that data, and then serialized into the target serialization format."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:390
#, fuzzy
msgid "JSON Serialization"
msgstr "Normalização"

#: ../source/specifications/simple-repository-api.rst:392
msgid ""
"The URL structure from :ref:`the base HTML API specification <simple-"
"repository-html-serialization>` still applies, as this spec only adds an "
"additional serialization format for the already existing API."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:396
msgid ""
"The following constraints apply to all JSON serialized responses described "
"in this spec:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:399
msgid ""
"All JSON responses will *always* be a JSON object rather than an array or "
"other type."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:402
msgid ""
"While JSON doesn't natively support a URL type, any value that represents an "
"URL in this API may be either absolute or relative as long as they point to "
"the correct location. If relative, they are relative to the current URL as "
"if it were HTML."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:407
msgid ""
"Additional keys may be added to any dictionary objects in the API responses "
"and clients **MUST** ignore keys that they don't understand."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:410
msgid ""
"All JSON responses will have a ``meta`` key, which contains information "
"related to the response itself, rather than the content of the response."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:413
msgid ""
"All JSON responses will have a ``meta.api-version`` key, which will be a "
"string that contains the :ref:`API versioning specification <simple-"
"repository-api-versioning>` ``Major.Minor`` version number, with the same "
"fail/warn semantics as defined in :ref:`the API versioning specification "
"<simple-repository-api-versioning>`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:419
msgid ""
"All requirements of :ref:`the base HTML API specification <simple-repository-"
"api-base>` that are not HTML specific still apply."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:422
msgid ""
"Keys (at any level) with a leading underscore are reserved as private for "
"index server use. No future standard will assign a meaning to any such key."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:430
msgid ""
"The root URL ``/`` for this spec (which represents the base URL) will be a "
"JSON encoded dictionary which has a two keys:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:433
msgid ""
"``projects``: An array where each entry is a dictionary with a single key, "
"``name``, which represents string of the project name."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:434
#: ../source/specifications/simple-repository-api.rst:484
msgid ""
"``meta``: The general response metadata as `described earlier <json-"
"serialization_>`__."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:436
#: ../source/specifications/simple-repository-api.rst:632
#, fuzzy
msgid "As an example:"
msgstr "Um exemplo completo"

#: ../source/specifications/simple-repository-api.rst:453
msgid ""
"The ``name`` field is the same as the one from :ref:`the base HTML API "
"specification <simple-repository-api-base>`, which does not specify whether "
"it is the non-normalized display name or the normalized name. In practice "
"different implementations of these specs are choosing differently here, so "
"relying on it being either non-normalized or normalized is relying on an "
"implementation detail of the repository in question."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:463
msgid ""
"While the ``projects`` key is an array, and thus is required to be in some "
"kind of an order, neither :ref:`the base HTML API specification <simple-"
"repository-api-base>` nor this spec requires any specific ordering nor that "
"the ordering is consistent from one request to the next. Mentally this is "
"best thought of as a set, but both JSON and HTML lack the functionality to "
"have sets."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:475
msgid ""
"The format of this URL is ``/<project>/`` where the ``<project>`` is "
"replaced by the :ref:`the base HTML API specification <simple-repository-api-"
"base>` normalized name for that project, so a project named \"Silly_Walk\" "
"would have a URL like ``/silly-walk/``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:480
msgid ""
"This URL must respond with a JSON encoded dictionary that has four keys:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:482
#, fuzzy
msgid "``name``: The normalized name of the project."
msgstr "O nome do projeto."

#: ../source/specifications/simple-repository-api.rst:483
msgid ""
"``files``: A list of dictionaries, each one representing an individual file."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:486
msgid ""
"In addition to the general response metadata, the project detail ``meta`` "
"dictionary **MAY** also include the following:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:489
msgid ""
"``project-status``: If present, this **MUST** be a valid project status "
"marker."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:498
msgid "The ``project-status`` key was added with API version 1.4."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:500
msgid ""
"``project-status-reason``: If present, this **MUST** be an arbitrary string "
"description of the project status."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:505
msgid "The ``project-status-reason`` key was added with API version 1.4."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:507
msgid ""
"``versions``: A list of version strings specifying all of the project "
"versions uploaded for this project. The value of ``versions`` is logically a "
"set, and as such may not contain duplicates, and the order of the versions "
"is not significant."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:514
msgid ""
"All of the files listed in the ``files`` key MUST be associated with one of "
"the versions in the ``versions`` key. The ``versions`` key MAY contain "
"versions with no associated files (to represent versions with no files "
"uploaded, if the server has such a concept)."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:521
msgid ""
"Because servers may hold \"legacy\" data from before the adoption of :ref:"
"`the version specifiers specification (VSS) <version-specifiers>`, version "
"strings currently cannot be required to be valid VSS versions, and therefore "
"cannot be assumed to be orderable using the VSS rules. However, servers "
"**SHOULD** use normalized VSS versions where possible."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:529
msgid "The ``versions`` key was added with API version 1.1."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:531
msgid "Each individual file dictionary has the following keys:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:533
msgid "``filename``: The filename that is being represented."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:534
msgid "``url``: The URL that the file can be fetched from."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:535
#, fuzzy
msgid ""
"``hashes``: A dictionary mapping a hash name to a hex encoded digest of the "
"file. Multiple hashes can be included, and it is up to the client to decide "
"what to do with multiple hashes (it may validate all of them or a subset of "
"them, or nothing at all). These hash names **SHOULD** always be normalized "
"to be lowercase."
msgstr ""
"Vários hashes podem ser incluídos e cabe ao consumidor decidir o que fazer "
"com vários hashes (pode validar todos eles ou um subconjunto deles, ou nada)."

#: ../source/specifications/simple-repository-api.rst:540
msgid ""
"The ``hashes`` dictionary **MUST** be present, even if no hashes are "
"available for the file, however it is **HIGHLY** recommended that at least "
"one secure, guaranteed-to-be-available hash is always included."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:544
#, fuzzy
msgid ""
"By default, any hash algorithm available via :py:mod:`hashlib` (specifically "
"any that can be passed to :py:func:`hashlib.new()` and do not require "
"additional parameters) can be used as a key for the hashes dictionary. At "
"least one secure algorithm from :py:data:`hashlib.algorithms_guaranteed` "
"**SHOULD** always be included. At the time of this spec, ``sha256`` "
"specifically is recommended."
msgstr ""
"Qualquer algoritmo de hash disponível via ``hashlib`` (especificamente "
"qualquer um que possa ser passado para ``hashlib.new()`` e não requeira "
"parâmetros adicionais) pode ser usado como uma chave para o dicionário de "
"hashes. Pelo menos um algoritmo seguro de ``hashlib.algorithms_guaranteed`` "
"DEVE sempre ser incluído. No momento da escrita, ``sha256`` especificamente "
"é recomendado."

#: ../source/specifications/simple-repository-api.rst:549
msgid ""
"``requires-python``: An **optional** key that exposes the :ref:`core-"
"metadata-requires-python` metadata field. Where this is present, installer "
"tools **SHOULD** ignore the download when installing to a Python version "
"that doesn't satisfy the requirement."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:555
msgid ""
"Unlike ``data-requires-python`` in :ref:`the base HTML API specification "
"<simple-repository-api-base>`, the ``requires-python`` key does not require "
"any special escaping other than anything JSON does naturally."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:558
msgid ""
"``core-metadata``: An **optional** key that indicates that metadata for this "
"file is available, via the same location as specified in :ref:`the API "
"metadata file specification <simple-repository-api-metadata-file>` "
"(``{file_url}.metadata``). Where this is present, it **MUST** be either a "
"boolean to indicate if the file has an associated metadata file, or a "
"dictionary mapping hash names to a hex encoded digest of the metadata's hash."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:566
msgid ""
"When this is a dictionary of hashes instead of a boolean, then all the same "
"requirements and recommendations as the ``hashes`` key hold true for this "
"key as well."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:570
msgid ""
"If this key is missing then the metadata file may or may not exist. If the "
"key value is truthy, then the metadata file is present, and if it is falsey "
"then it is not."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:574
msgid ""
"It is recommended that servers make the hashes of the metadata file "
"available if possible."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:577
msgid ""
"``dist-info-metadata``: An **optional**, deprecated alias for ``core-"
"metadata``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:579
msgid ""
"Index clients **MAY** consume this key if present, as a legacy fallback for "
"``core-metadata``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:584
msgid ""
"``dist-info-metadata`` was standardized with :pep:`658` and renamed to "
"``core-metadata`` with :pep:`714`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:587
msgid ""
"``gpg-sig``: An **optional** key that acts a boolean to indicate if the file "
"has an associated GPG signature or not. The URL for the signature file "
"follows what is specified in :ref:`the base HTML API specification <simple-"
"repository-api-base>` (``{file_url}.asc``). If this key does not exist, then "
"the signature may or may not exist."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:593
msgid ""
"``yanked``: An **optional** key which may be either a boolean to indicate if "
"the file has been yanked, or a non empty, but otherwise arbitrary, string to "
"indicate that a file has been yanked with a specific reason. If the "
"``yanked`` key is present and is a truthy value, then it **SHOULD** be "
"interpreted as indicating that the file pointed to by the ``url`` field has "
"been \"Yanked\"."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:604
msgid ""
"``size``: A **mandatory** key. It **MUST** contain an integer which is the "
"file size in bytes."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:608
msgid "The ``size`` key was added with API version 1.1."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:610
msgid ""
"``upload-time``: An **optional** key that, if present, **MUST** contain a "
"valid ISO 8601 date/time string in the format ``yyyy-mm-ddThh:mm:ss."
"ffffffZ`` which represents the time the file was uploaded to the index."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:614
msgid ""
"As indicated by the ``Z`` suffix, the upload time **MUST** use the UTC "
"timezone. The fractional seconds part of the timestamp (the ``.ffffff`` "
"part) is optional, and if present may contain up to 6 digits of precision. "
"If a server does not record upload time information for a file, it **MAY** "
"omit the ``upload-time`` key."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:621
msgid "The ``upload-time`` key was added with API version 1.1."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:623
msgid ""
"``provenance``: An **optional** key which, if present **MUST** be either a "
"JSON string or ``null``. If not ``null``, it **MUST** be a URL to the file's "
"associated provenance, with the same rules as ``data-provenance`` in the :"
"ref:`base HTML API specification <simple-repository-api-base>`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:630
msgid "The ``provenance`` field was added with API version 1.3."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:668
msgid ""
"While the ``files`` key is an array, and thus is required to be in some kind "
"of an order, neither :ref:`the base HTML API specification <simple-"
"repository-api-base>` nor this spec requires any specific ordering nor that "
"the ordering is consistent from one request to the next. Mentally this is "
"best thought of as a set, but both JSON and HTML lack the functionality to "
"have sets."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:677
#, fuzzy
msgid "Content-Types"
msgstr "Conteúdo"

#: ../source/specifications/simple-repository-api.rst:679
msgid ""
"This spec proposes that all responses from the Simple API will have a "
"standard content type that describes what the response is (a Simple API "
"response), what version of the API it represents, and what serialization "
"format has been used."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:683
msgid "The structure of this content type will be:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:689
msgid ""
"Since only major versions should be disruptive to clients attempting to "
"understand one of these API responses, only the major version will be "
"included in the content type, and will be prefixed with a ``v`` to clarify "
"that it is a version number."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:694
msgid "Which means that for the existing 1.0 API, the content types would be:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:696
msgid "**JSON:** ``application/vnd.pypi.simple.v1+json``"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:697
msgid "**HTML:** ``application/vnd.pypi.simple.v1+html``"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:699
msgid ""
"In addition to the above, a special \"meta\" version is supported named "
"``latest``, whose purpose is to allow clients to request the absolute latest "
"version, without having to know ahead of time what that version is. It is "
"recommended however, that clients be explicit about what versions they "
"support."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:704
msgid ""
"To support existing clients which expect the existing :ref:`the base HTML "
"API specification <simple-repository-api-base>` API responses to use the "
"``text/html`` content type, this spec further defines ``text/html`` as an "
"alias for the ``application/vnd.pypi.simple.v1+html`` content type."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:711
#, fuzzy
msgid "Version + Format Selection"
msgstr "Versão"

#: ../source/specifications/simple-repository-api.rst:713
msgid ""
"Now that there is multiple possible serializations, we need a mechanism to "
"allow clients to indicate what serialization formats they're able to "
"understand. In addition, it would be beneficial if any possible new major "
"version to the API can be added without disrupting existing clients "
"expecting the previous API version."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:718
msgid ""
"To enable this, this spec standardizes on the use of HTTP's `Server-Driven "
"Content Negotiation <https://developer.mozilla.org/en-US/docs/Web/HTTP/"
"Content_negotiation>`_."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:721
msgid ""
"While this spec won't fully describe the entirety of server-driven content "
"negotiation, the flow is roughly:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:724
msgid ""
"The client makes an HTTP request containing an ``Accept`` header listing all "
"of the version+format content types that they are able to understand."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:726
msgid ""
"The server inspects that header, selects one of the listed content types, "
"then returns a response using that content type (treating the absence of an "
"``Accept`` header as ``Accept: */*``)."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:729
msgid ""
"If the server does not support any of the content types in the ``Accept`` "
"header then they are able to choose between 3 different options for how to "
"respond:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:733
msgid ""
"Select a default content type other than what the client has requested and "
"return a response with that."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:735
msgid ""
"Return a HTTP ``406 Not Acceptable`` response to indicate that none of the "
"requested content types were available, and the server was unable or "
"unwilling to select a default content type to respond with."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:738
msgid ""
"Return a HTTP ``300 Multiple Choices`` response that contains a list of all "
"of the possible responses that could have been chosen."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:740
msgid ""
"The client interprets the response, handling the different types of "
"responses that the server may have responded with."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:743
msgid ""
"This spec does not specify which choices the server makes in regards to "
"handling a content type that it isn't able to return, and clients **SHOULD** "
"be prepared to handle all of the possible responses in whatever way makes "
"the most sense for that client."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:748
msgid ""
"However, as there is no standard format for how a ``300 Multiple Choices`` "
"response can be interpreted, this spec highly discourages servers from "
"utilizing that option, as clients will have no way to understand and select "
"a different content-type to request. In addition, it's unlikely that the "
"client *could* understand a different content type anyways, so at best this "
"response would likely just be treated the same as a ``406 Not Acceptable`` "
"error."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:755
msgid ""
"This spec **does** require that if the meta version ``latest`` is being "
"used, the server **MUST** respond with the content type for the actual "
"version that is contained in the response (i.e. an ``Accept: application/vnd."
"pypi.simple.latest+json`` request that returns a ``v1.x`` response should "
"have a ``Content-Type`` of ``application/vnd.pypi.simple.v1+json``)."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:762
msgid ""
"The ``Accept`` header is a comma separated list of content types that the "
"client understands and is able to process. It supports three different "
"formats for each content type that is being requested:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:766
msgid "``$type/$subtype``"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:767
msgid "``$type/*``"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:768
msgid "``*/*``"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:770
msgid ""
"For the use of selecting a version+format, the most useful of these is "
"``$type/$subtype``, as that is the only way to actually specify the version "
"and format you want."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:774
msgid ""
"The order of the content types listed in the ``Accept`` header does not have "
"any specific meaning, and the server **SHOULD** consider all of them to be "
"equally valid to respond with. If a client wishes to specify that they "
"prefer a specific content type over another, they may use the ``Accept`` "
"header's `quality value <https://developer.mozilla.org/en-US/docs/Glossary/"
"Quality_values>`_ syntax."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:781
msgid ""
"This allows a client to specify a priority for a specific entry in their "
"``Accept`` header, by appending a ``;q=`` followed by a value between ``0`` "
"and ``1`` inclusive, with up to 3 decimal digits. When interpreting this "
"value, an entry with a higher quality has priority over an entry with a "
"lower quality, and any entry without a quality present will default to a "
"quality of ``1``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:787
msgid ""
"However, clients should keep in mind that a server is free to select **any** "
"of the content types they've asked for, regardless of their requested "
"priority, and it may even return a content type that they did **not** ask "
"for."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:791
msgid ""
"To aid clients in determining the content type of the response that they "
"have received from an API request, this spec requires that servers always "
"include a ``Content-Type`` header indicating the content type of the "
"response. This is technically a backwards incompatible change, however in "
"practice `pip has been enforcing this requirement <https://github.com/pypa/"
"pip/blob/cf3696a81b341925f82f20cb527e656176987565/src/pip/_internal/index/"
"collector.py#L123-L150>`_ so the risks for actual breakages is low."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:798
msgid "An example of how a client can operate would look like:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:849
msgid ""
"If a client wishes to only support HTML or only support JSON, then they "
"would just remove the content types that they do not want from the "
"``Accept`` header, and turn receiving them into an error."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:855
msgid "Alternative Negotiation Mechanisms"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:857
msgid ""
"While using HTTP's Content negotiation is considered the standard way for a "
"client and server to coordinate to ensure that the client is getting an HTTP "
"response that it is able to understand, there are situations where that "
"mechanism may not be sufficient. For those cases this spec has alternative "
"negotiation mechanisms that may *optionally* be used instead."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:865
msgid "URL Parameter"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:867
msgid ""
"Servers that implement the Simple API may choose to support a URL parameter "
"named ``format`` to allow the clients to request a specific version of the "
"URL."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:870
msgid ""
"The value of the ``format`` parameter should be **one** of the valid content "
"types. Passing multiple content types, wild cards, quality values, etc... is "
"**not** supported."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:874
msgid ""
"Supporting this parameter is optional, and clients **SHOULD NOT** rely on it "
"for interacting with the API. This negotiation mechanism is intended to "
"allow for easier human based exploration of the API within a browser, or to "
"allow documentation or notes to link to a specific version+format."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:879
msgid ""
"Servers that do not support this parameter may choose to return an error "
"when it is present, or they may simple ignore its presence."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:882
msgid ""
"When a server does implement this parameter, it **SHOULD** take precedence "
"over any values in the client's ``Accept`` header, and if the server does "
"not support the requested format, it may choose to fall back to the "
"``Accept`` header, or choose any of the error conditions that standard "
"server-driven content negotiation typically has (e.g. ``406 Not Available``, "
"``303 Multiple Choices``, or selecting a default type to return)."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:891
#, fuzzy
msgid "Endpoint Configuration"
msgstr "Configurações comuns"

#: ../source/specifications/simple-repository-api.rst:893
msgid ""
"This option technically is not a special option at all, it is just a natural "
"consequence of using content negotiation and allowing servers to select "
"which of the available content types is their default."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:897
msgid ""
"If a server is unwilling or unable to implement the server-driven content "
"negotiation, and would instead rather require users to explicitly configure "
"their client to select the version they want, then that is a supported "
"configuration."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:901
msgid ""
"To enable this, a server should make multiple endpoints (for instance, ``/"
"simple/v1+html/`` and/or ``/simple/v1+json/``) for each version+format that "
"they wish to support. Under that endpoint, they can host a copy of their "
"repository that only supports one (or a subset) of the content-types. When a "
"client makes a request using the ``Accept`` header, the server can ignore it "
"and return the content type that corresponds to that endpoint."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:908
msgid ""
"For clients that wish to require specific configuration, they can keep track "
"of which version+format a specific repository URL was configured for, and "
"when making a request to that server, emit an ``Accept`` header that *only* "
"includes the correct content type."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:915
msgid "TUF Support - PEP 458"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:917
msgid ""
":pep:`458` requires that all API responses are hashable and that they can be "
"uniquely identified by a path relative to the repository root. For a Simple "
"API repository, the target path is the Root of our API (e.g. ``/simple/`` on "
"PyPI). This creates challenges when accessing the API using a TUF client "
"instead of directly using a standard HTTP client, as the TUF client cannot "
"handle the fact that a target could have multiple different representations "
"that all hash differently."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:924
msgid ""
":pep:`458` does not specify what the target path should be for the Simple "
"API, but TUF requires that the target paths be \"file-like\", in other "
"words, a path like ``simple/PROJECT/`` is not acceptable, because it "
"technically points to a directory."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:929
msgid ""
"The saving grace is that the target path does not *have* to actually match "
"the URL being fetched from the Simple API, and it can just be a sigil that "
"the fetching code knows how to transform into the actual URL that needs to "
"be fetched. This same thing can hold true for other aspects of the actual "
"HTTP request, such as the ``Accept`` header."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:935
msgid ""
"Ultimately figuring out how to map a directory to a filename is out of scope "
"for this spec (but it would be in scope for :pep:`458`), and this spec "
"defers making a decision about how exactly to represent this inside of :pep:"
"`458` metadata."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:939
msgid ""
"However, it appears that the current WIP branch against pip that attempts to "
"implement :pep:`458` is using a target path like ``simple/PROJECT/index."
"html``. This could be modified to include the API version and serialization "
"format using something like ``simple/PROJECT/vnd.pypi.simple.vN.FORMAT``. So "
"the v1 HTML format would be ``simple/PROJECT/vnd.pypi.simple.v1.html`` and "
"the v1 JSON format would be ``simple/PROJECT/vnd.pypi.simple.v1.json``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:946
msgid ""
"In this case, since ``text/html`` is an alias to ``application/vnd.pypi."
"simple.v1+html`` when interacting through TUF, it likely will make the most "
"sense to normalize to the more explicit name."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:950
msgid ""
"Likewise the ``latest`` metaversion should not be included in the targets, "
"only explicitly declared versions should be supported."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:956
msgid ""
"This section is non-normative, and represents what the spec authors believe "
"to be the best default implementation decisions for something implementing "
"this spec, but it does **not** represent any sort of requirement to match "
"these decisions."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:960
msgid ""
"These decisions have been chosen to maximize the number of requests that can "
"be moved onto the newest version of an API, while maintaining the greatest "
"amount of compatibility. In addition, they've also tried to make using the "
"API provide guardrails that attempt to push clients into making the best "
"choices it can."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:965
msgid "It is recommended that servers:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:967
msgid ""
"Support all 3 content types described in this spec, using server-driven "
"content negotiation, for as long as they reasonably can, or at least as long "
"as they're receiving non trivial traffic that uses the HTML responses."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:971
msgid ""
"When encountering an ``Accept`` header that does not contain any content "
"types that it knows how to work with, the server should not ever return a "
"``300 Multiple Choice`` response, and instead return a ``406 Not "
"Acceptable`` response."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:976
msgid ""
"However, if choosing to use the endpoint configuration, you should prefer to "
"return a ``200 OK`` response in the expected content type for that endpoint."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:979
msgid ""
"When selecting an acceptable version, the server should choose the highest "
"version that the client supports, with the most expressive/featureful "
"serialization format, taking into account the specificity of the client "
"requests as well as any quality priority values they have expressed, and it "
"should only use the ``text/html`` content type as a last resort."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:985
msgid "It is recommended that clients:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:987
msgid ""
"Support all 3 content types described in this spec, using server-driven "
"content negotiation, for as long as they reasonably can."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:990
msgid ""
"When constructing an ``Accept`` header, include all of the content types "
"that you support."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:993
msgid ""
"You should generally *not* include a quality priority value for your content "
"types, unless you have implementation specific reasons that you want the "
"server to take into account (for example, if you're using the standard "
"library HTML parser and you're worried that there may be some kinds of HTML "
"responses that you're unable to parse in some edge cases)."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:999
msgid ""
"The one exception to this recommendation is that it is recommended that you "
"*should* include a ``;q=0.01`` value on the legacy ``text/html`` content "
"type, unless it is the only content type that you are requesting."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:1003
msgid ""
"Explicitly select what versions they are looking for, rather than using the "
"``latest`` meta version during normal operation."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:1006
msgid ""
"Check the ``Content-Type`` of the response and ensure it matches something "
"that you were expecting."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:1014
msgid "September 2015: initial form of the HTML format, in :pep:`503`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:1015
msgid "July 2016: Requires-Python metadata, in an update to :pep:`503`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:1016
msgid "May 2019: \"yank\" support, in :pep:`592`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:1017
msgid ""
"July 2020: API versioning convention and metadata, and declaring the HTML "
"format as API v1, in :pep:`629`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:1019
msgid ""
"May 2021: providing package metadata independently from a package, in :pep:"
"`658`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:1021
msgid ""
"May 2022: initial form of the JSON format, with a mechanism for clients to "
"choose between them, and declaring both formats as API v1, in :pep:`691`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:1023
msgid ""
"October 2022: project versions and file size and upload-time in the JSON "
"format, in :pep:`700`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:1025
msgid ""
"June 2023: renaming the field which provides package metadata independently "
"from a package, in :pep:`714`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:1027
msgid ""
"November 2024: provenance metadata in the HTML and JSON formats, in :pep:"
"`740`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:1028
msgid ""
"July 2025: project status markers in the HTML and JSON formats, in :pep:`792`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:1029
msgid ""
"July 2025: layout changes (dedicated page for file yanking, introduce "
"concepts before API details)"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:6
msgid "Source distribution format"
msgstr "Formato de distribuição fonte"

#: ../source/specifications/source-distribution-format.rst:8
#, fuzzy
#| msgid ""
#| "The current standard format of source distribution format is identified "
#| "by the presence of a :file:`pyproject.toml` file in the distribution "
#| "archive.  The layout of such a distribution was originally specified in :"
#| "pep:`517` and is formally documented here."
msgid ""
"The current standard source distribution format is identified by the "
"presence of a :file:`pyproject.toml` file in the distribution archive.  The "
"layout of such a distribution was originally specified in :pep:`517` and is "
"formally documented here."
msgstr ""
"O formato padrão atual do formato de distribuição fonte é identificado pela "
"presença de um arquivo :file:`pyproject.toml` no arquivo de distribuição. O "
"layout de tal distribuição foi originalmente especificado na :pep:`517` e "
"está formalmente documentado aqui."

#: ../source/specifications/source-distribution-format.rst:13
msgid ""
"There is also the legacy source distribution format, implicitly defined by "
"the behaviour of ``distutils`` module in the standard library, when "
"executing :command:`setup.py sdist`. This document does not attempt to "
"standardise this format, except to note that if a legacy source distribution "
"contains a ``PKG-INFO`` file using metadata version 2.2 or later, then it "
"MUST follow the rules applicable to source distributions defined in the "
"metadata specification."
msgstr ""
"Existe também o formato de distribuição fonte legado, implicitamente "
"definido pelo comportamento do módulo ``distutils`` na biblioteca padrão, ao "
"executar :command:`setup.py sdist`. Este documento não tenta padronizar este "
"formato, exceto para observar que se uma distribuição de fonte legada contém "
"um arquivo ``PKG-INFO`` usando metadados versão 2.2 ou posterior, então ela "
"DEVE seguir as regras aplicáveis às distribuições de fonte definidas nos "
"metadados especificação."

#: ../source/specifications/source-distribution-format.rst:21
msgid "Source distributions are also known as *sdists* for short."
msgstr "Distribuições fonte também são conhecidas pela abreviação *sdists*."

#: ../source/specifications/source-distribution-format.rst:26
msgid "Source trees"
msgstr "Árvores fonte"

#: ../source/specifications/source-distribution-format.rst:28
#, fuzzy
#| msgid ""
#| "A *source tree* is a collection of files and directories -- like a "
#| "version control system checkout -- which contains a :file:`pyproject."
#| "toml` file that can be use to build a source distribution from the "
#| "contained files and directories. :pep:`517` and :pep:`518` specify what "
#| "is required to meet the definition of what :file:`pyproject.toml` must "
#| "contain for something to be deemed a source tree."
msgid ""
"A *source tree* is a collection of files and directories -- like a version "
"control system checkout -- which contains a :file:`pyproject.toml` file that "
"can be used to build a source distribution from the contained files and "
"directories. :pep:`517` and :pep:`518` specify what is required to meet the "
"definition of what :file:`pyproject.toml` must contain for something to be "
"deemed a source tree."
msgstr ""
"Uma *árvore fonte* é uma coleção de arquivos e diretórios -- como um "
"checkout local do sistema de controle de versão -- que contém um arquivo :"
"file:`pyproject.toml` que pode ser usado para construir uma distribuição "
"fonte a partir dos arquivos e diretórios contidos. :pep:`517` e :pep:`518` "
"especificam o que é necessário para atender à definição do que :file:"
"`pyproject.toml` deve conter para que algo seja considerado uma árvore fonte."

#: ../source/specifications/source-distribution-format.rst:38
msgid "Source distribution file name"
msgstr "Nome de arquivo da distribuição fonte"

#: ../source/specifications/source-distribution-format.rst:40
msgid ""
"The file name of a sdist was standardised in :pep:`625`. The file name must "
"be in the form ``{name}-{version}.tar.gz``, where ``{name}`` is normalised "
"according to the same rules as for binary distributions (see :ref:`binary-"
"distribution-format`), and ``{version}`` is the canonicalized form of the "
"project version (see :ref:`version-specifiers`)."
msgstr ""
"O nome do arquivo de um sdist foi padronizado na :pep:`625`. O nome do "
"arquivo deve estar no formato ``{name}-{version}.tar.gz``, sendo ``{name}`` "
"normalizado de acordo com as mesmas regras das distribuições binárias (veja :"
"ref:`binary-distribution-format`) e ``{version}`` é a forma canonizada da "
"versão do projeto (veja :ref:`version-specifiers`)."

#: ../source/specifications/source-distribution-format.rst:46
msgid ""
"The name and version components of the filename MUST match the values stored "
"in the metadata contained in the file."
msgstr ""
"O nome e os componentes da versão do nome do arquivo DEVEM corresponder aos "
"valores armazenados nos metadados contidos no arquivo."

#: ../source/specifications/source-distribution-format.rst:49
#, fuzzy
msgid ""
"Code that produces a source distribution file MUST give the file a name that "
"matches this specification. This includes the ``build_sdist`` hook of a :"
"term:`build backend <Build Backend>`."
msgstr ""
"O código que produz um arquivo de distribuição de origem DEVE dar ao arquivo "
"um nome que corresponda a essa especificação. Isso inclui o gancho "
"``build_sdist`` de um backend de construção."

#: ../source/specifications/source-distribution-format.rst:53
msgid ""
"Code that processes source distribution files MAY recognise source "
"distribution files by the ``.tar.gz`` suffix and the presence of precisely "
"*one* hyphen in the filename. Code that does this may then use the "
"distribution name and version from the filename without further verification."
msgstr ""
"Código que processa arquivos de distribuição fonte PODE reconhecer arquivos "
"de distribuição fonte pelo sufixo ``.tar.gz`` e a presença de precisamente "
"*um* hífen no nome do arquivo. O código que faz isso pode usar o nome e "
"versão da distribuição a partir do nome do arquivo sem verificação adicional."

#: ../source/specifications/source-distribution-format.rst:59
msgid "Source distribution file format"
msgstr "Formato de arquivo de distribuição fonte"

#: ../source/specifications/source-distribution-format.rst:61
#, fuzzy
msgid ""
"A ``.tar.gz`` source distribution (sdist) contains a single top-level "
"directory called ``{name}-{version}`` (e.g. ``foo-1.0``), containing the "
"source files of the package. The name and version MUST match the metadata "
"stored in the file. This directory must also contain a :file:`pyproject."
"toml` in the format defined in :ref:`pyproject-toml-spec`, and a :file:`PKG-"
"INFO` file containing metadata in the format described in the :ref:`core-"
"metadata` specification. The metadata MUST conform to at least version 2.2 "
"of the metadata specification."
msgstr ""
"Uma distribuição fonte ``.tar.gz`` (sdist) contém um único diretório de "
"nível superior chamado ``{name}-{version}`` (por exemplo, ``foo-1.0``), "
"contendo os arquivos fonte do pacote. O nome e a versão DEVEM corresponder "
"aos metadados armazenados no arquivo. Este diretório também deve conter um :"
"file:`pyproject.toml` no formato definido em :ref:`declaring-build-"
"dependencies` e um arquivo ``PKG-INFO`` contendo metadados no formato "
"descrito na especificação :ref:`core-metadata`. Os metadados DEVEM estar em "
"conformidade com pelo menos a versão 2.2 da especificação de metadados."

#: ../source/specifications/source-distribution-format.rst:69
msgid ""
"If the metadata version is 2.4 or greater, the source distribution MUST "
"contain any license files specified by the ``License-File`` field in the :"
"file:`PKG-INFO` at their respective paths relative to the root directory of "
"the sdist (containing the :file:`pyproject.toml` and the :file:`PKG-INFO` "
"metadata)."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:74
msgid ""
"No other content of a sdist is required or defined. Build systems can store "
"whatever information they need in the sdist to build the project."
msgstr ""
"Nenhum outro conteúdo de um sdist é necessário ou definido. Os sistemas de "
"construção podem armazenar qualquer informação necessária no sdist para "
"construir o projeto."

#: ../source/specifications/source-distribution-format.rst:77
msgid ""
"The tarball should use the modern POSIX.1-2001 pax tar format, which "
"specifies UTF-8 based file names. In particular, source distribution files "
"must be readable using the standard library tarfile module with the open "
"flag 'r:gz'."
msgstr ""
"O tarball deve usar o formato tar pax POSIX.1-2001 moderno, que especifica "
"nomes de arquivo baseados em UTF-8. Em particular, os arquivos de "
"distribuição fonte devem ser legíveis usando o módulo tarfile de biblioteca "
"padrão com o sinalizador aberto 'r:gz'."

#: ../source/specifications/source-distribution-format.rst:85
#, fuzzy
msgid "Source distribution archive features"
msgstr "Formato de arquivo de distribuição fonte"

#: ../source/specifications/source-distribution-format.rst:87
msgid ""
"Because extracting tar files as-is is dangerous, and the results are "
"platform-specific, archive features of source distributions are limited."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:91
msgid "Unpacking with the data filter"
msgstr "Desempacotando com o filtro de dados"

#: ../source/specifications/source-distribution-format.rst:93
msgid ""
"When extracting a source distribution, tools MUST either use :py:func:"
"`tarfile.data_filter` (e.g. :py:meth:`TarFile.extractall(..., filter='data') "
"<tarfile.TarFile.extractall>`), OR follow the *Unpacking without the data "
"filter* section below."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:97
msgid ""
"As an exception, on Python interpreters without :py:func:`hasattr(tarfile, "
"'data_filter') <tarfile.data_filter>` (:pep:`706`), tools that normally use "
"that filter (directly on indirectly) MAY warn the user and ignore this "
"specification. The trade-off between usability (e.g. fully trusting the "
"archive) and security (e.g. refusing to unpack) is left up to the tool in "
"this case."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:105
msgid "Unpacking without the data filter"
msgstr "Desempacotando sem o filtro de dados"

#: ../source/specifications/source-distribution-format.rst:107
msgid ""
"Tools that do not use the ``data`` filter directly (e.g. for backwards "
"compatibility, allowing additional features, or not using Python) MUST "
"follow this section. (At the time of this writing, the ``data`` filter also "
"follows this section, but it may get out of sync in the future.)"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:113
msgid ""
"The following files are invalid in an *sdist* archive. Upon encountering "
"such an entry, tools SHOULD notify the user, MUST NOT unpack the entry, and "
"MAY abort with a failure:"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:117
msgid "Files that would be placed outside the destination directory."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:118
msgid "Links (symbolic or hard) pointing outside the destination directory."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:119
msgid "Device files (including pipes)."
msgstr "Arquivos de dispositivo (incluindo pipes)."

#: ../source/specifications/source-distribution-format.rst:121
msgid ""
"The following are also invalid. Tools MAY treat them as above, but are NOT "
"REQUIRED to do so:"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:124
msgid "Files with a ``..`` component in the filename or link target."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:125
msgid "Links pointing to a file that is not part of the archive."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:127
msgid ""
"Tools MAY unpack links (symbolic or hard) as regular files, using content "
"from the archive."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:130
#, fuzzy
msgid "When extracting *sdist* archives:"
msgstr "Gerando arquivos de distribuição"

#: ../source/specifications/source-distribution-format.rst:132
msgid ""
"Leading slashes in file names MUST be dropped. (This is nowadays standard "
"behaviour for ``tar`` unpacking.)"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:134
msgid "For each ``mode`` (Unix permission) bit, tools MUST either:"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:136
msgid "use the platform's default for a new file/directory (respectively),"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:137
msgid "set the bit according to the archive, or"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:138
msgid ""
"use the bit from ``rw-r--r--`` (``0o644``) for non-executable files or "
"``rwxr-xr-x`` (``0o755``) for executable files and directories."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:141
msgid "High ``mode`` bits (setuid, setgid, sticky) MUST be cleared."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:142
msgid "It is RECOMMENDED to preserve the user *executable* bit."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:146
msgid "Further hints"
msgstr "Dicas adicionais"

#: ../source/specifications/source-distribution-format.rst:148
msgid ""
"Tool authors are encouraged to consider how *hints for further verification* "
"in ``tarfile`` documentation apply to their tool."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:155
msgid ""
"November 2020: The original version of this specification was approved "
"through :pep:`643`."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:157
msgid "July 2021: Defined what a source tree is."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:158
msgid ""
"September 2022: The filename of a source distribution was standardized "
"through :pep:`625`."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:160
msgid ""
"August 2023: Source distribution archive features were standardized through :"
"pep:`721`."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:162
#, fuzzy
#| msgid ""
#| "This document describes the dependency specifiers format as originally "
#| "specified in :pep:`508`."
msgid ""
"December 2024: License files inclusion into source distribution was "
"standardized through :pep:`639`."
msgstr ""
"Este documento descreve o formato dos especificadores de dependência "
"conforme originalmente especificado na :pep:`508`."

#: ../source/specifications/version-specifiers.rst:7
#: ../source/specifications/version-specifiers.rst:785
msgid "Version specifiers"
msgstr "Especificadores de versão"

#: ../source/specifications/version-specifiers.rst:10
msgid ""
"This specification describes a scheme for identifying versions of Python "
"software distributions, and declaring dependencies on particular versions."
msgstr ""

#: ../source/specifications/version-specifiers.rst:15
#, fuzzy
msgid "Definitions"
msgstr "Especificações"

#: ../source/specifications/version-specifiers.rst:17
msgid ""
"The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL "
"NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and "
"\"OPTIONAL\" in this document are to be interpreted as described in :rfc:"
"`2119`."
msgstr ""

#: ../source/specifications/version-specifiers.rst:21
msgid ""
"\"Build tools\" are automated tools intended to run on development systems, "
"producing source and binary distribution archives. Build tools may also be "
"invoked by integration tools in order to build software distributed as "
"sdists rather than prebuilt binary archives."
msgstr ""

#: ../source/specifications/version-specifiers.rst:26
msgid ""
"\"Index servers\" are active distribution registries which publish version "
"and dependency metadata and place constraints on the permitted metadata."
msgstr ""

#: ../source/specifications/version-specifiers.rst:29
msgid ""
"\"Publication tools\" are automated tools intended to run on development "
"systems and upload source and binary distribution archives to index servers."
msgstr ""

#: ../source/specifications/version-specifiers.rst:32
msgid ""
"\"Installation tools\" are integration tools specifically intended to run on "
"deployment targets, consuming source and binary distribution archives from "
"an index server or other designated location and deploying them to the "
"target system."
msgstr ""

#: ../source/specifications/version-specifiers.rst:37
msgid ""
"\"Automated tools\" is a collective term covering build tools, index "
"servers, publication tools, integration tools and any other software that "
"produces or consumes distribution version and dependency metadata."
msgstr ""

#: ../source/specifications/version-specifiers.rst:43
#, fuzzy
msgid "Version scheme"
msgstr "Versões"

#: ../source/specifications/version-specifiers.rst:45
msgid ""
"Distributions are identified by a public version identifier which supports "
"all defined version comparison operations"
msgstr ""

#: ../source/specifications/version-specifiers.rst:48
msgid ""
"The version scheme is used both to describe the distribution version "
"provided by a particular distribution archive, as well as to place "
"constraints on the version of dependencies needed in order to build or run "
"the software."
msgstr ""

#: ../source/specifications/version-specifiers.rst:57
#, fuzzy
msgid "Public version identifiers"
msgstr "Identificadores de versão local"

#: ../source/specifications/version-specifiers.rst:59
msgid ""
"The canonical public version identifiers MUST comply with the following "
"scheme::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:64
msgid ""
"Public version identifiers MUST NOT include leading or trailing whitespace."
msgstr ""

#: ../source/specifications/version-specifiers.rst:66
msgid "Public version identifiers MUST be unique within a given distribution."
msgstr ""

#: ../source/specifications/version-specifiers.rst:68
msgid ""
"Installation tools SHOULD ignore any public versions which do not comply "
"with this scheme but MUST also include the normalizations specified below. "
"Installation tools MAY warn the user when non-compliant or ambiguous "
"versions are detected."
msgstr ""

#: ../source/specifications/version-specifiers.rst:73
msgid ""
"See also :ref:`version-specifiers-regex` which provides a regular expression "
"to check strict conformance with the canonical format, as well as a more "
"permissive regular expression accepting inputs that may require subsequent "
"normalization."
msgstr ""

#: ../source/specifications/version-specifiers.rst:78
msgid "Public version identifiers are separated into up to five segments:"
msgstr ""

#: ../source/specifications/version-specifiers.rst:80
msgid "Epoch segment: ``N!``"
msgstr "Segmento de época: ``N!``"

#: ../source/specifications/version-specifiers.rst:81
msgid "Release segment: ``N(.N)*``"
msgstr "Segmento de lançamento: ``N(.N)*``"

#: ../source/specifications/version-specifiers.rst:82
msgid "Pre-release segment: ``{a|b|rc}N``"
msgstr "Segmento de pré-lançamento: ``{a|b|rc}N``"

#: ../source/specifications/version-specifiers.rst:83
msgid "Post-release segment: ``.postN``"
msgstr "Segmento de pós lançamento: ``.postN``"

#: ../source/specifications/version-specifiers.rst:84
msgid "Development release segment: ``.devN``"
msgstr "Segmento de versão de desenvolvimento: ``.devN``"

#: ../source/specifications/version-specifiers.rst:86
msgid ""
"Any given release will be a \"final release\", \"pre-release\", \"post-"
"release\" or \"developmental release\" as defined in the following sections."
msgstr ""

#: ../source/specifications/version-specifiers.rst:89
msgid ""
"All numeric components MUST be non-negative integers represented as "
"sequences of ASCII digits."
msgstr ""

#: ../source/specifications/version-specifiers.rst:92
msgid ""
"All numeric components MUST be interpreted and ordered according to their "
"numeric value, not as text strings."
msgstr ""

#: ../source/specifications/version-specifiers.rst:95
msgid ""
"All numeric components MAY be zero. Except as described below for the "
"release segment, a numeric component of zero has no special significance "
"aside from always being the lowest possible value in the version ordering."
msgstr ""

#: ../source/specifications/version-specifiers.rst:101
msgid ""
"Some hard to read version identifiers are permitted by this scheme in order "
"to better accommodate the wide range of versioning practices across existing "
"public and private Python projects."
msgstr ""

#: ../source/specifications/version-specifiers.rst:105
msgid ""
"Accordingly, some of the versioning practices which are technically "
"permitted by the specification are strongly discouraged for new projects. "
"Where this is the case, the relevant details are noted in the following "
"sections."
msgstr ""

#: ../source/specifications/version-specifiers.rst:116
msgid "Local version identifiers MUST comply with the following scheme::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:120
msgid ""
"They consist of a normal public version identifier (as defined in the "
"previous section), along with an arbitrary \"local version label\", "
"separated from the public version identifier by a plus. Local version labels "
"have no specific semantics assigned, but some syntactic restrictions are "
"imposed."
msgstr ""

#: ../source/specifications/version-specifiers.rst:125
msgid ""
"Local version identifiers are used to denote fully API (and, if applicable, "
"ABI) compatible patched versions of upstream projects. For example, these "
"may be created by application developers and system integrators by applying "
"specific backported bug fixes when upgrading to a new upstream release would "
"be too disruptive to the application or other integrated system (such as a "
"Linux distribution)."
msgstr ""

#: ../source/specifications/version-specifiers.rst:132
msgid ""
"The inclusion of the local version label makes it possible to differentiate "
"upstream releases from potentially altered rebuilds by downstream "
"integrators. The use of a local version identifier does not affect the kind "
"of a release but, when applied to a source distribution, does indicate that "
"it may not contain the exact same code as the corresponding upstream release."
msgstr ""

#: ../source/specifications/version-specifiers.rst:138
msgid ""
"To ensure local version identifiers can be readily incorporated as part of "
"filenames and URLs, and to avoid formatting inconsistencies in hexadecimal "
"hash representations, local version labels MUST be limited to the following "
"set of permitted characters:"
msgstr ""

#: ../source/specifications/version-specifiers.rst:143
msgid "ASCII letters (``[a-zA-Z]``)"
msgstr "Letras ASCII (``[a-zA-Z]``)"

#: ../source/specifications/version-specifiers.rst:144
msgid "ASCII digits (``[0-9]``)"
msgstr "Dígitos ASCII (``[0-9]``)"

#: ../source/specifications/version-specifiers.rst:145
msgid "periods (``.``)"
msgstr "períodos (``.``)"

#: ../source/specifications/version-specifiers.rst:147
#, fuzzy
msgid "Local version labels MUST start and end with an ASCII letter or digit."
msgstr "Começar e terminar com uma letra ou dígito ASCII."

#: ../source/specifications/version-specifiers.rst:149
msgid ""
"Comparison and ordering of local versions considers each segment of the "
"local version (divided by a ``.``) separately. If a segment consists "
"entirely of ASCII digits then that section should be considered an integer "
"for comparison purposes and if a segment contains any ASCII letters then "
"that segment is compared lexicographically with case insensitivity. When "
"comparing a numeric and lexicographic segment, the numeric section always "
"compares as greater than the lexicographic segment. Additionally a local "
"version with a great number of segments will always compare as greater than "
"a local version with fewer segments, as long as the shorter local version's "
"segments match the beginning of the longer local version's segments exactly."
msgstr ""

#: ../source/specifications/version-specifiers.rst:160
msgid ""
"An \"upstream project\" is a project that defines its own public versions. A "
"\"downstream project\" is one which tracks and redistributes an upstream "
"project, potentially backporting security and bug fixes from later versions "
"of the upstream project."
msgstr ""

#: ../source/specifications/version-specifiers.rst:165
msgid ""
"Local version identifiers SHOULD NOT be used when publishing upstream "
"projects to a public index server, but MAY be used to identify private "
"builds created directly from the project source. Local version identifiers "
"SHOULD be used by downstream projects when releasing a version that is API "
"compatible with the version of the upstream project identified by the public "
"version identifier, but contains additional changes (such as bug fixes). As "
"the Python Package Index is intended solely for indexing and hosting "
"upstream projects, it MUST NOT allow the use of local version identifiers."
msgstr ""

#: ../source/specifications/version-specifiers.rst:175
msgid ""
"Source distributions using a local version identifier SHOULD provide the "
"``python.integrator`` extension metadata (as defined in :pep:`459`)."
msgstr ""

#: ../source/specifications/version-specifiers.rst:180
#, fuzzy
msgid "Final releases"
msgstr "Publicando lançamentos"

#: ../source/specifications/version-specifiers.rst:182
msgid ""
"A version identifier that consists solely of a release segment and "
"optionally an epoch identifier is termed a \"final release\"."
msgstr ""

#: ../source/specifications/version-specifiers.rst:185
msgid ""
"The release segment consists of one or more non-negative integer values, "
"separated by dots::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:190
msgid ""
"Final releases within a project MUST be numbered in a consistently "
"increasing fashion, otherwise automated tools will not be able to upgrade "
"them correctly."
msgstr ""

#: ../source/specifications/version-specifiers.rst:194
msgid ""
"Comparison and ordering of release segments considers the numeric value of "
"each component of the release segment in turn. When comparing release "
"segments with different numbers of components, the shorter segment is padded "
"out with additional zeros as necessary."
msgstr ""

#: ../source/specifications/version-specifiers.rst:199
msgid ""
"While any number of additional components after the first are permitted "
"under this scheme, the most common variants are to use two components "
"(\"major.minor\") or three components (\"major.minor.micro\")."
msgstr ""

#: ../source/specifications/version-specifiers.rst:203
msgid "For example::"
msgstr "Por exemplo::"

#: ../source/specifications/version-specifiers.rst:218
msgid ""
"A release series is any set of final release numbers that start with a "
"common prefix. For example, ``3.3.1``, ``3.3.5`` and ``3.3.9.45`` are all "
"part of the ``3.3`` release series."
msgstr ""

#: ../source/specifications/version-specifiers.rst:224
msgid ""
"``X.Y`` and ``X.Y.0`` are not considered distinct release numbers, as the "
"release segment comparison rules implicit expand the two component form to "
"``X.Y.0`` when comparing it to any release segment that includes three "
"components."
msgstr ""

#: ../source/specifications/version-specifiers.rst:229
msgid ""
"Date-based release segments are also permitted. An example of a date-based "
"release scheme using the year and month of the release::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:243
#, fuzzy
msgid "Pre-releases"
msgstr "Versionamento de pré-lançamento"

#: ../source/specifications/version-specifiers.rst:245
msgid ""
"Some projects use an \"alpha, beta, release candidate\" pre-release cycle to "
"support testing by their users prior to a final release."
msgstr ""

#: ../source/specifications/version-specifiers.rst:248
msgid ""
"If used as part of a project's development cycle, these pre-releases are "
"indicated by including a pre-release segment in the version identifier::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:256
msgid ""
"A version identifier that consists solely of a release segment and a pre-"
"release segment is termed a \"pre-release\"."
msgstr ""

#: ../source/specifications/version-specifiers.rst:259
msgid ""
"The pre-release segment consists of an alphabetical identifier for the pre-"
"release phase, along with a non-negative integer value. Pre-releases for a "
"given release are ordered first by phase (alpha, beta, release candidate) "
"and then by the numerical component within that phase."
msgstr ""

#: ../source/specifications/version-specifiers.rst:264
msgid ""
"Installation tools MAY accept both ``c`` and ``rc`` releases for a common "
"release segment in order to handle some existing legacy distributions."
msgstr ""

#: ../source/specifications/version-specifiers.rst:267
msgid ""
"Installation tools SHOULD interpret ``c`` versions as being equivalent to "
"``rc`` versions (that is, ``c1`` indicates the same version as ``rc1``)."
msgstr ""

#: ../source/specifications/version-specifiers.rst:270
msgid ""
"Build tools, publication tools and index servers SHOULD disallow the "
"creation of both ``rc`` and ``c`` releases for a common release segment."
msgstr ""

#: ../source/specifications/version-specifiers.rst:275
#, fuzzy
msgid "Post-releases"
msgstr "zest.releaser"

#: ../source/specifications/version-specifiers.rst:277
msgid ""
"Some projects use post-releases to address minor errors in a final release "
"that do not affect the distributed software (for example, correcting an "
"error in the release notes)."
msgstr ""

#: ../source/specifications/version-specifiers.rst:281
msgid ""
"If used as part of a project's development cycle, these post-releases are "
"indicated by including a post-release segment in the version identifier::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:286
msgid ""
"A version identifier that includes a post-release segment without a "
"developmental release segment is termed a \"post-release\"."
msgstr ""

#: ../source/specifications/version-specifiers.rst:289
msgid ""
"The post-release segment consists of the string ``.post``, followed by a non-"
"negative integer value. Post-releases are ordered by their numerical "
"component, immediately following the corresponding release, and ahead of any "
"subsequent release."
msgstr ""

#: ../source/specifications/version-specifiers.rst:296
msgid ""
"The use of post-releases to publish maintenance releases containing actual "
"bug fixes is strongly discouraged. In general, it is better to use a longer "
"release number and increment the final component for each maintenance "
"release."
msgstr ""

#: ../source/specifications/version-specifiers.rst:301
msgid "Post-releases are also permitted for pre-releases::"
msgstr "Pós lançamentos também são permitidos para pré-lançamentos::"

#: ../source/specifications/version-specifiers.rst:309
msgid ""
"Creating post-releases of pre-releases is strongly discouraged, as it makes "
"the version identifier difficult to parse for human readers. In general, it "
"is substantially clearer to simply create a new pre-release by incrementing "
"the numeric component."
msgstr ""

#: ../source/specifications/version-specifiers.rst:316
msgid "Developmental releases"
msgstr "Versões de desenvolvimento"

#: ../source/specifications/version-specifiers.rst:318
msgid ""
"Some projects make regular developmental releases, and system packagers "
"(especially for Linux distributions) may wish to create early releases "
"directly from source control which do not conflict with later project "
"releases."
msgstr ""

#: ../source/specifications/version-specifiers.rst:323
msgid ""
"If used as part of a project's development cycle, these developmental "
"releases are indicated by including a developmental release segment in the "
"version identifier::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:329
msgid ""
"A version identifier that includes a developmental release segment is termed "
"a \"developmental release\"."
msgstr ""

#: ../source/specifications/version-specifiers.rst:332
msgid ""
"The developmental release segment consists of the string ``.dev``, followed "
"by a non-negative integer value. Developmental releases are ordered by their "
"numerical component, immediately before the corresponding release (and "
"before any pre-releases with the same release segment), and following any "
"previous release (including any post-releases)."
msgstr ""

#: ../source/specifications/version-specifiers.rst:338
msgid ""
"Developmental releases are also permitted for pre-releases and post-"
"releases::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:346
msgid ""
"Do note that development releases are considered a type of pre-release when "
"handling them."
msgstr ""

#: ../source/specifications/version-specifiers.rst:351
msgid ""
"While they may be useful for continuous integration purposes, publishing "
"developmental releases of pre-releases to general purpose public index "
"servers is strongly discouraged, as it makes the version identifier "
"difficult to parse for human readers. If such a release needs to be "
"published, it is substantially clearer to instead create a new pre-release "
"by incrementing the numeric component."
msgstr ""

#: ../source/specifications/version-specifiers.rst:358
msgid ""
"Developmental releases of post-releases are also strongly discouraged, but "
"they may be appropriate for projects which use the post-release notation for "
"full maintenance releases which may include code changes."
msgstr ""

#: ../source/specifications/version-specifiers.rst:364
#, fuzzy
msgid "Version epochs"
msgstr "Versões"

#: ../source/specifications/version-specifiers.rst:366
msgid ""
"If included in a version identifier, the epoch appears before all other "
"components, separated from the release segment by an exclamation mark::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:371
msgid "If no explicit epoch is given, the implicit epoch is ``0``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:373
msgid ""
"Most version identifiers will not include an epoch, as an explicit epoch is "
"only needed if a project *changes* the way it handles version numbering in a "
"way that means the normal version ordering rules will give the wrong answer. "
"For example, if a project is using date based versions like ``2014.04`` and "
"would like to switch to semantic versions like ``1.0``, then the new "
"releases would be identified as *older* than the date based releases when "
"using the normal sorting scheme::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:387
msgid ""
"However, by specifying an explicit epoch, the sort order can be changed "
"appropriately, as all versions from a later epoch are sorted after versions "
"from an earlier epoch::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:401
msgid "Normalization"
msgstr "Normalização"

#: ../source/specifications/version-specifiers.rst:403
msgid ""
"In order to maintain better compatibility with existing versions there are a "
"number of \"alternative\" syntaxes that MUST be taken into account when "
"parsing versions. These syntaxes MUST be considered when parsing a version, "
"however they should be \"normalized\" to the standard syntax defined above."
msgstr ""

#: ../source/specifications/version-specifiers.rst:410
msgid "Case sensitivity"
msgstr "Sensível a maiúsculas e minúsculas"

#: ../source/specifications/version-specifiers.rst:412
msgid ""
"All ascii letters should be interpreted case insensitively within a version "
"and the normal form is lowercase. This allows versions such as ``1.1RC1`` "
"which would be normalized to ``1.1rc1``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:418
#, fuzzy
msgid "Integer Normalization"
msgstr "Normalização"

#: ../source/specifications/version-specifiers.rst:420
msgid ""
"All integers are interpreted via the ``int()`` built in and normalize to the "
"string form of the output. This means that an integer version of ``00`` "
"would normalize to ``0`` while ``09000`` would normalize to ``9000``. This "
"does not hold true for integers inside of an alphanumeric segment of a local "
"version such as ``1.0+foo0100`` which is already in its normalized form."
msgstr ""

#: ../source/specifications/version-specifiers.rst:428
#, fuzzy
msgid "Pre-release separators"
msgstr "Versionamento de pré-lançamento"

#: ../source/specifications/version-specifiers.rst:430
msgid ""
"Pre-releases should allow a ``.``, ``-``, or ``_`` separator between the "
"release segment and the pre-release segment. The normal form for this is "
"without a separator. This allows versions such as ``1.1.a1`` or ``1.1-a1`` "
"which would be normalized to ``1.1a1``. It should also allow a separator to "
"be used between the pre-release signifier and the numeral. This allows "
"versions such as ``1.0a.1`` which would be normalized to ``1.0a1``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:439
#, fuzzy
msgid "Pre-release spelling"
msgstr "Versionamento de pré-lançamento"

#: ../source/specifications/version-specifiers.rst:441
msgid ""
"Pre-releases allow the additional spellings of ``alpha``, ``beta``, ``c``, "
"``pre``, and ``preview`` for ``a``, ``b``, ``rc``, ``rc``, and ``rc`` "
"respectively. This allows versions such as ``1.1alpha1``, ``1.1beta2``, or "
"``1.1c3`` which normalize to ``1.1a1``, ``1.1b2``, and ``1.1rc3``. In every "
"case the additional spelling should be considered equivalent to their normal "
"forms."
msgstr ""

#: ../source/specifications/version-specifiers.rst:450
msgid "Implicit pre-release number"
msgstr "Número de pré-lançamento implícito"

#: ../source/specifications/version-specifiers.rst:452
msgid ""
"Pre releases allow omitting the numeral in which case it is implicitly "
"assumed to be ``0``. The normal form for this is to include the ``0`` "
"explicitly. This allows versions such as ``1.2a`` which is normalized to "
"``1.2a0``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:458
msgid "Post release separators"
msgstr "Separadores de pós lançamento"

#: ../source/specifications/version-specifiers.rst:460
msgid ""
"Post releases allow a ``.``, ``-``, or ``_`` separator as well as omitting "
"the separator all together. The normal form of this is with the ``.`` "
"separator. This allows versions such as ``1.2-post2`` or ``1.2post2`` which "
"normalize to ``1.2.post2``. Like the pre-release separator this also allows "
"an optional separator between the post release signifier and the numeral. "
"This allows versions like ``1.2.post-2`` which would normalize to ``1.2."
"post2``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:469
#, fuzzy
msgid "Post release spelling"
msgstr "Versionamento de pré-lançamento"

#: ../source/specifications/version-specifiers.rst:471
msgid ""
"Post-releases allow the additional spellings of ``rev`` and ``r``. This "
"allows versions such as ``1.0-r4`` which normalizes to ``1.0.post4``. As "
"with the pre-releases the additional spellings should be considered "
"equivalent to their normal forms."
msgstr ""

#: ../source/specifications/version-specifiers.rst:478
msgid "Implicit post release number"
msgstr "Número implícito de pós lançamento"

#: ../source/specifications/version-specifiers.rst:480
msgid ""
"Post releases allow omitting the numeral in which case it is implicitly "
"assumed to be ``0``. The normal form for this is to include the ``0`` "
"explicitly. This allows versions such as ``1.2.post`` which is normalized to "
"``1.2.post0``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:486
msgid "Implicit post releases"
msgstr "Pós lançamentos implícitos"

#: ../source/specifications/version-specifiers.rst:488
msgid ""
"Post releases allow omitting the ``post`` signifier all together. When using "
"this form the separator MUST be ``-`` and no other form is allowed. This "
"allows versions such as ``1.0-1`` to be normalized to ``1.0.post1``. This "
"particular normalization MUST NOT be used in conjunction with the implicit "
"post release number rule. In other words, ``1.0-`` is *not* a valid version "
"and it does *not* normalize to ``1.0.post0``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:497
msgid "Development release separators"
msgstr "Separadores de versões de desenvolvimento"

#: ../source/specifications/version-specifiers.rst:499
msgid ""
"Development releases allow a ``.``, ``-``, or a ``_`` separator as well as "
"omitting the separator all together. The normal form of this is with the ``."
"`` separator. This allows versions such as ``1.2-dev2`` or ``1.2dev2`` which "
"normalize to ``1.2.dev2``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:506
msgid "Implicit development release number"
msgstr "Número implícito de versão de desenvolvimento"

#: ../source/specifications/version-specifiers.rst:508
msgid ""
"Development releases allow omitting the numeral in which case it is "
"implicitly assumed to be ``0``. The normal form for this is to include the "
"``0`` explicitly. This allows versions such as ``1.2.dev`` which is "
"normalized to ``1.2.dev0``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:515
#, fuzzy
msgid "Local version segments"
msgstr "Identificadores de versão local"

#: ../source/specifications/version-specifiers.rst:517
msgid ""
"With a local version, in addition to the use of ``.`` as a separator of "
"segments, the use of ``-`` and ``_`` is also acceptable. The normal form is "
"using the ``.`` character. This allows versions such as ``1.0+ubuntu-1`` to "
"be normalized to ``1.0+ubuntu.1``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:524
msgid "Preceding v character"
msgstr "Caractere predecessor v"

#: ../source/specifications/version-specifiers.rst:526
msgid ""
"In order to support the common version notation of ``v1.0`` versions may be "
"preceded by a single literal ``v`` character. This character MUST be ignored "
"for all purposes and should be omitted from all normalized forms of the "
"version. The same version with and without the ``v`` is considered "
"equivalent."
msgstr ""

#: ../source/specifications/version-specifiers.rst:533
msgid "Leading and Trailing Whitespace"
msgstr ""

#: ../source/specifications/version-specifiers.rst:535
msgid ""
"Leading and trailing whitespace must be silently ignored and removed from "
"all normalized forms of a version. This includes ``\" \"``, ``\\t``, "
"``\\n``, ``\\r``, ``\\f``, and ``\\v``. This allows accidental whitespace to "
"be handled sensibly, such as a version like ``1.0\\n`` which normalizes to "
"``1.0``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:542
#, fuzzy
msgid "Examples of compliant version schemes"
msgstr "Aqui estão alguns exemplos de números de versão compatíveis::"

#: ../source/specifications/version-specifiers.rst:544
msgid ""
"The standard version scheme is designed to encompass a wide range of "
"identification practices across public and private Python projects. In "
"practice, a single project attempting to use the full flexibility offered by "
"the scheme would create a situation where human users had difficulty "
"figuring out the relative order of versions, even though the rules above "
"ensure all compliant tools will order them consistently."
msgstr ""

#: ../source/specifications/version-specifiers.rst:551
msgid ""
"The following examples illustrate a small selection of the different "
"approaches projects may choose to identify their releases, while still "
"ensuring that the \"latest release\" and the \"latest stable release\" can "
"be easily determined, both by human users and automated tools."
msgstr ""

#: ../source/specifications/version-specifiers.rst:556
#, fuzzy
msgid "Simple \"major.minor\" versioning::"
msgstr "Versionamento serial"

#: ../source/specifications/version-specifiers.rst:565
msgid "Simple \"major.minor.micro\" versioning::"
msgstr "Versionamento simples \"major.minor.micro\" ::"

#: ../source/specifications/version-specifiers.rst:573
msgid ""
"\"major.minor\" versioning with alpha, beta and candidate pre-releases::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:585
msgid ""
"\"major.minor\" versioning with developmental releases, release candidates "
"and post-releases for minor corrections::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:600
msgid ""
"Date based releases, using an incrementing serial within each year, skipping "
"zero::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:614
msgid "Summary of permitted suffixes and relative ordering"
msgstr ""

#: ../source/specifications/version-specifiers.rst:618
msgid ""
"This section is intended primarily for authors of tools that automatically "
"process distribution metadata, rather than developers of Python "
"distributions deciding on a versioning scheme."
msgstr ""

#: ../source/specifications/version-specifiers.rst:622
msgid ""
"The epoch segment of version identifiers MUST be sorted according to the "
"numeric value of the given epoch. If no epoch segment is present, the "
"implicit numeric value is ``0``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:626
msgid ""
"The release segment of version identifiers MUST be sorted in the same order "
"as Python's tuple sorting when the normalized release segment is parsed as "
"follows::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:632
msgid ""
"All release segments involved in the comparison MUST be converted to a "
"consistent length by padding shorter segments with zeros as needed."
msgstr ""

#: ../source/specifications/version-specifiers.rst:635
msgid ""
"Within a numeric release (``1.0``, ``2.7.3``), the following suffixes are "
"permitted and MUST be ordered as shown::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:640
msgid ""
"Note that ``c`` is considered to be semantically equivalent to ``rc`` and "
"must be sorted as if it were ``rc``. Tools MAY reject the case of having the "
"same ``N`` for both a ``c`` and a ``rc`` in the same release segment as "
"ambiguous and remain in compliance with the specification."
msgstr ""

#: ../source/specifications/version-specifiers.rst:645
msgid ""
"Within an alpha (``1.0a1``), beta (``1.0b1``), or release candidate "
"(``1.0rc1``, ``1.0c1``), the following suffixes are permitted and MUST be "
"ordered as shown::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:651
msgid ""
"Within a post-release (``1.0.post1``), the following suffixes are permitted "
"and MUST be ordered as shown::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:656
msgid ""
"Note that ``devN`` and ``postN`` MUST always be preceded by a dot, even when "
"used immediately following a numeric version (e.g. ``1.0.dev456``, ``1.0."
"post1``)."
msgstr ""

#: ../source/specifications/version-specifiers.rst:660
msgid ""
"Within a pre-release, post-release or development release segment with a "
"shared prefix, ordering MUST be by the value of the numeric component."
msgstr ""

#: ../source/specifications/version-specifiers.rst:663
msgid "The following example covers many of the possible combinations::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:688
msgid "Version ordering across different metadata versions"
msgstr "Ordenação de versões em diferentes versões de metadados"

#: ../source/specifications/version-specifiers.rst:690
msgid ""
"Metadata v1.0 (:pep:`241`) and metadata v1.1 (:pep:`314`) do not specify a "
"standard version identification or ordering scheme. However metadata v1.2 (:"
"pep:`345`) does specify a scheme which is defined in :pep:`386`."
msgstr ""

#: ../source/specifications/version-specifiers.rst:694
msgid ""
"Due to the nature of the simple installer API it is not possible for an "
"installer to be aware of which metadata version a particular distribution "
"was using. Additionally installers required the ability to create a "
"reasonably prioritized list that includes all, or as many as possible, "
"versions of a project to determine which versions it should install. These "
"requirements necessitate a standardization across one parsing mechanism to "
"be used for all versions of a project."
msgstr ""

#: ../source/specifications/version-specifiers.rst:702
msgid ""
"Due to the above, this specification MUST be used for all versions of "
"metadata and supersedes :pep:`386` even for metadata v1.2. Tools SHOULD "
"ignore any versions which cannot be parsed by the rules in this "
"specification, but MAY fall back to implementation defined version parsing "
"and ordering schemes if no versions complying with this specification are "
"available."
msgstr ""

#: ../source/specifications/version-specifiers.rst:708
msgid ""
"Distribution users may wish to explicitly remove non-compliant versions from "
"any private package indexes they control."
msgstr ""

#: ../source/specifications/version-specifiers.rst:713
#, fuzzy
msgid "Compatibility with other version schemes"
msgstr "Lidando com os wheels universais"

#: ../source/specifications/version-specifiers.rst:715
msgid ""
"Some projects may choose to use a version scheme which requires translation "
"in order to comply with the public version scheme defined in this "
"specification. In such cases, the project specific version can be stored in "
"the metadata while the translated public version is published in the version "
"field."
msgstr ""

#: ../source/specifications/version-specifiers.rst:720
msgid ""
"This allows automated distribution tools to provide consistently correct "
"ordering of published releases, while still allowing developers to use the "
"internal versioning scheme they prefer for their projects."
msgstr ""

#: ../source/specifications/version-specifiers.rst:728
msgid ""
"`Semantic versioning`_ is a popular version identification scheme that is "
"more prescriptive than this specification regarding the significance of "
"different elements of a release number. Even if a project chooses not to "
"abide by the details of semantic versioning, the scheme is worth "
"understanding as it covers many of the issues that can arise when depending "
"on other distributions, and when publishing a distribution that others rely "
"on."
msgstr ""

#: ../source/specifications/version-specifiers.rst:735
msgid ""
"The \"Major.Minor.Patch\" (described in this specification as \"major.minor."
"micro\") aspects of semantic versioning (clauses 1-8 in the 2.0.0 "
"specification) are fully compatible with the version scheme defined in this "
"specification, and abiding by these aspects is encouraged."
msgstr ""

#: ../source/specifications/version-specifiers.rst:740
msgid ""
"Semantic versions containing a hyphen (pre-releases - clause 10) or a plus "
"sign (builds - clause 11) are *not* compatible with this specification and "
"are not permitted in the public version field."
msgstr ""

#: ../source/specifications/version-specifiers.rst:744
msgid ""
"One possible mechanism to translate such semantic versioning based source "
"labels to compatible public versions is to use the ``.devN`` suffix to "
"specify the appropriate version order."
msgstr ""

#: ../source/specifications/version-specifiers.rst:748
msgid ""
"Specific build information may also be included in local version labels."
msgstr ""

#: ../source/specifications/version-specifiers.rst:754
#, fuzzy
msgid "DVCS based version labels"
msgstr "Versionamento baseado em data"

#: ../source/specifications/version-specifiers.rst:756
msgid ""
"Many build tools integrate with distributed version control systems like Git "
"and Mercurial in order to add an identifying hash to the version identifier. "
"As hashes cannot be ordered reliably such versions are not permitted in the "
"public version field."
msgstr ""

#: ../source/specifications/version-specifiers.rst:761
msgid ""
"As with semantic versioning, the public ``.devN`` suffix may be used to "
"uniquely identify such releases for publication, while the original DVCS "
"based label can be stored in the project metadata."
msgstr ""

#: ../source/specifications/version-specifiers.rst:765
msgid ""
"Identifying hash information may also be included in local version labels."
msgstr ""

#: ../source/specifications/version-specifiers.rst:769
#, fuzzy
msgid "Olson database versioning"
msgstr "Versionamento baseado em data"

#: ../source/specifications/version-specifiers.rst:771
msgid ""
"The ``pytz`` project inherits its versioning scheme from the corresponding "
"Olson timezone database versioning scheme: the year followed by a lowercase "
"character indicating the version of the database within that year."
msgstr ""

#: ../source/specifications/version-specifiers.rst:775
msgid ""
"This can be translated to a compliant public version identifier as ``<year>."
"<serial>``, where the serial starts at zero or one (for the '<year>a' "
"release) and is incremented with each subsequent database update within the "
"year."
msgstr ""

#: ../source/specifications/version-specifiers.rst:780
msgid ""
"As with other translated version identifiers, the corresponding Olson "
"database version could be recorded in the project metadata."
msgstr ""

#: ../source/specifications/version-specifiers.rst:787
msgid ""
"A version specifier consists of a series of version clauses, separated by "
"commas. For example::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:792
msgid "The comparison operator determines the kind of version clause:"
msgstr ""

#: ../source/specifications/version-specifiers.rst:794
msgid "``~=``: `Compatible release`_ clause"
msgstr "``~=``: `Compatible release`_ clause"

#: ../source/specifications/version-specifiers.rst:795
msgid "``==``: `Version matching`_ clause"
msgstr "``==``: `Version matching`_ clause"

#: ../source/specifications/version-specifiers.rst:796
msgid "``!=``: `Version exclusion`_ clause"
msgstr "``!=``: `Version exclusion`_ clause"

#: ../source/specifications/version-specifiers.rst:797
msgid "``<=``, ``>=``: `Inclusive ordered comparison`_ clause"
msgstr "``<=``, ``>=``: `Inclusive ordered comparison`_ clause"

#: ../source/specifications/version-specifiers.rst:798
msgid "``<``, ``>``: `Exclusive ordered comparison`_ clause"
msgstr "``<``, ``>``: `Exclusive ordered comparison`_ clause"

#: ../source/specifications/version-specifiers.rst:799
msgid "``===``: `Arbitrary equality`_ clause."
msgstr "``===``: `Arbitrary equality`_ clause."

#: ../source/specifications/version-specifiers.rst:801
msgid ""
"The comma (\",\") is equivalent to a logical **and** operator: a candidate "
"version must match all given version clauses in order to match the specifier "
"as a whole."
msgstr ""

#: ../source/specifications/version-specifiers.rst:805
msgid ""
"Whitespace between a conditional operator and the following version "
"identifier is optional, as is the whitespace around the commas."
msgstr ""

#: ../source/specifications/version-specifiers.rst:808
msgid ""
"When multiple candidate versions match a version specifier, the preferred "
"version SHOULD be the latest version as determined by the consistent "
"ordering defined by the standard `Version scheme`_. Whether or not pre-"
"releases are considered as candidate versions SHOULD be handled as described "
"in `Handling of pre-releases`_."
msgstr ""

#: ../source/specifications/version-specifiers.rst:814
msgid ""
"Except where specifically noted below, local version identifiers MUST NOT be "
"permitted in version specifiers, and local version labels MUST be ignored "
"entirely when checking if candidate versions match a given version specifier."
msgstr ""

#: ../source/specifications/version-specifiers.rst:823
msgid "Compatible release"
msgstr "Versão compatível"

#: ../source/specifications/version-specifiers.rst:825
msgid ""
"A compatible release clause consists of the compatible release operator "
"``~=`` and a version identifier. It matches any candidate version that is "
"expected to be compatible with the specified version."
msgstr ""

#: ../source/specifications/version-specifiers.rst:829
msgid ""
"The specified version identifier must be in the standard format described in "
"`Version scheme`_. Local version identifiers are NOT permitted in this "
"version specifier."
msgstr ""

#: ../source/specifications/version-specifiers.rst:833
msgid ""
"For a given release identifier ``V.N``, the compatible release clause is "
"approximately equivalent to the pair of comparison clauses::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:838
msgid ""
"This operator MUST NOT be used with a single segment version number such as "
"``~=1``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:841
#, fuzzy
msgid "For example, the following groups of version clauses are equivalent::"
msgstr "Isso significa que os seguintes nomes são todos equivalentes:"

#: ../source/specifications/version-specifiers.rst:849
msgid ""
"If a pre-release, post-release or developmental release is named in a "
"compatible release clause as ``V.N.suffix``, then the suffix is ignored when "
"determining the required prefix match::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:859
msgid ""
"The padding rules for release segment comparisons means that the assumed "
"degree of forward compatibility in a compatible release clause can be "
"controlled by appending additional zeros to the version specifier::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:871
#, fuzzy
msgid "Version matching"
msgstr "Versão"

#: ../source/specifications/version-specifiers.rst:873
msgid ""
"A version matching clause includes the version matching operator ``==`` and "
"a version identifier."
msgstr ""

#: ../source/specifications/version-specifiers.rst:876
msgid ""
"The specified version identifier must be in the standard format described in "
"`Version scheme`_, but a trailing ``.*`` is permitted on public version "
"identifiers as described below."
msgstr ""

#: ../source/specifications/version-specifiers.rst:880
msgid ""
"By default, the version matching operator is based on a strict equality "
"comparison: the specified version must be exactly the same as the requested "
"version. The *only* substitution performed is the zero padding of the "
"release segment to ensure the release segments are compared with the same "
"length."
msgstr ""

#: ../source/specifications/version-specifiers.rst:886
msgid ""
"Whether or not strict version matching is appropriate depends on the "
"specific use case for the version specifier. Automated tools SHOULD at least "
"issue warnings and MAY reject them entirely when strict version matches are "
"used inappropriately."
msgstr ""

#: ../source/specifications/version-specifiers.rst:891
msgid ""
"Prefix matching may be requested instead of strict comparison, by appending "
"a trailing ``.*`` to the version identifier in the version matching clause. "
"This means that additional trailing segments will be ignored when "
"determining whether or not a version identifier matches the clause. If the "
"specified version includes only a release segment, then trailing components "
"(or the lack thereof) in the release segment are also ignored."
msgstr ""

#: ../source/specifications/version-specifiers.rst:898
#: ../source/specifications/version-specifiers.rst:959
msgid ""
"For example, given the version ``1.1.post1``, the following clauses would "
"match or not as shown::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:905
msgid ""
"For purposes of prefix matching, the pre-release segment is considered to "
"have an implied preceding ``.``, so given the version ``1.1a1``, the "
"following clauses would match or not as shown::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:913
msgid ""
"An exact match is also considered a prefix match (this interpretation is "
"implied by the usual zero padding rules for the release segment of version "
"identifiers). Given the version ``1.1``, the following clauses would match "
"or not as shown::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:925
msgid ""
"It is invalid to have a prefix match containing a development or local "
"release such as ``1.0.dev1.*`` or ``1.0+foo1.*``. If present, the "
"development release segment is always the final segment in the public "
"version, and the local version is ignored for comparison purposes, so using "
"either in a prefix match wouldn't make any sense."
msgstr ""

#: ../source/specifications/version-specifiers.rst:931
msgid ""
"The use of ``==`` (without at least the wildcard suffix) when defining "
"dependencies for published distributions is strongly discouraged as it "
"greatly complicates the deployment of security fixes. The strict version "
"comparison operator is intended primarily for use when defining dependencies "
"for repeatable *deployments of applications* while using a shared "
"distribution index."
msgstr ""

#: ../source/specifications/version-specifiers.rst:938
msgid ""
"If the specified version identifier is a public version identifier (no local "
"version label), then the local version label of any candidate versions MUST "
"be ignored when matching versions."
msgstr ""

#: ../source/specifications/version-specifiers.rst:942
msgid ""
"If the specified version identifier is a local version identifier, then the "
"local version labels of candidate versions MUST be considered when matching "
"versions, with the public version identifier being matched as described "
"above, and the local version label being checked for equivalence using a "
"strict string equality comparison."
msgstr ""

#: ../source/specifications/version-specifiers.rst:950
#, fuzzy
msgid "Version exclusion"
msgstr "Especificador de Versão"

#: ../source/specifications/version-specifiers.rst:952
msgid ""
"A version exclusion clause includes the version exclusion operator ``!=`` "
"and a version identifier."
msgstr ""

#: ../source/specifications/version-specifiers.rst:955
msgid ""
"The allowed version identifiers and comparison semantics are the same as "
"those of the `Version matching`_ operator, except that the sense of any "
"match is inverted."
msgstr ""

#: ../source/specifications/version-specifiers.rst:968
msgid "Inclusive ordered comparison"
msgstr "Comparação ordenada inclusiva"

#: ../source/specifications/version-specifiers.rst:970
msgid ""
"An inclusive ordered comparison clause includes a comparison operator and a "
"version identifier, and will match any version where the comparison is "
"correct based on the relative position of the candidate version and the "
"specified version given the consistent ordering defined by the standard "
"`Version scheme`_."
msgstr ""

#: ../source/specifications/version-specifiers.rst:976
msgid "The inclusive ordered comparison operators are ``<=`` and ``>=``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:978
#: ../source/specifications/version-specifiers.rst:1008
msgid ""
"As with version matching, the release segment is zero padded as necessary to "
"ensure the release segments are compared with the same length."
msgstr ""

#: ../source/specifications/version-specifiers.rst:981
#: ../source/specifications/version-specifiers.rst:1011
msgid "Local version identifiers are NOT permitted in this version specifier."
msgstr ""

#: ../source/specifications/version-specifiers.rst:985
msgid "Exclusive ordered comparison"
msgstr "Comparação ordenada exclusiva"

#: ../source/specifications/version-specifiers.rst:987
msgid ""
"The exclusive ordered comparisons ``>`` and ``<`` are similar to the "
"inclusive ordered comparisons in that they rely on the relative position of "
"the candidate version and the specified version given the consistent "
"ordering defined by the standard `Version scheme`_. However, they "
"specifically exclude pre-releases, post-releases, and local versions of the "
"specified version."
msgstr ""

#: ../source/specifications/version-specifiers.rst:993
msgid ""
"The exclusive ordered comparison ``>V`` **MUST NOT** allow a post-release of "
"the given version unless ``V`` itself is a post release. You may mandate "
"that releases are later than a particular post release, including additional "
"post releases, by using ``>V.postN``. For example, ``>1.7`` will allow "
"``1.7.1`` but not ``1.7.0.post1`` and ``>1.7.post2`` will allow ``1.7.1`` "
"and ``1.7.0.post3`` but not ``1.7.0``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1000
msgid ""
"The exclusive ordered comparison ``>V`` **MUST NOT** match a local version "
"of the specified version."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1003
msgid ""
"The exclusive ordered comparison ``<V`` **MUST NOT** allow a pre-release of "
"the specified version unless the specified version is itself a pre-release. "
"Allowing pre-releases that are earlier than, but not equal to a specific pre-"
"release may be accomplished by using ``<V.rc1`` or similar."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1015
msgid "Arbitrary equality"
msgstr "Igualdade arbitrária"

#: ../source/specifications/version-specifiers.rst:1017
msgid ""
"Arbitrary equality comparisons are simple string equality operations which "
"do not take into account any of the semantic information such as zero "
"padding or local versions. This operator also does not support prefix "
"matching as the ``==`` operator does."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1022
msgid ""
"The primary use case for arbitrary equality is to allow for specifying a "
"version which cannot otherwise be represented by this specification. This "
"operator is special and acts as an escape hatch to allow someone using a "
"tool which implements this specification to still install a legacy version "
"which is otherwise incompatible with this specification."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1028
msgid ""
"An example would be ``===foobar`` which would match a version of ``foobar``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1030
msgid ""
"This operator may also be used to explicitly require an unpatched version of "
"a project such as ``===1.0`` which would not match for a version "
"``1.0+downstream1``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1034
msgid ""
"Use of this operator is heavily discouraged and tooling MAY display a "
"warning when it is used."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1039
#, fuzzy
msgid "Handling of pre-releases"
msgstr "Instalando pré-lançamentos"

#: ../source/specifications/version-specifiers.rst:1041
msgid ""
"Pre-releases of any kind, including developmental releases, are implicitly "
"excluded from all version specifiers, *unless* they are already present on "
"the system, explicitly requested by the user, or if the only available "
"version that satisfies the version specifier is a pre-release."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1046
msgid "By default, dependency resolution tools SHOULD:"
msgstr "Por padrão, ferramentas de resolução de dependências DEVEM:"

#: ../source/specifications/version-specifiers.rst:1048
msgid "accept already installed pre-releases for all version specifiers"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1049
msgid ""
"accept remotely available pre-releases for version specifiers where there is "
"no final or post release that satisfies the version specifier"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1051
msgid "exclude all other pre-releases from consideration"
msgstr "excluir todos os outros pré-lançamentos da consideração"

#: ../source/specifications/version-specifiers.rst:1053
msgid ""
"Dependency resolution tools MAY issue a warning if a pre-release is needed "
"to satisfy a version specifier."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1056
msgid ""
"Dependency resolution tools SHOULD also allow users to request the following "
"alternative behaviours:"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1059
msgid "accepting pre-releases for all version specifiers"
msgstr "aceitando pré-lançamentos para todos os especificadores de versão"

#: ../source/specifications/version-specifiers.rst:1060
msgid ""
"excluding pre-releases for all version specifiers (reporting an error or "
"warning if a pre-release is already installed locally, or if a pre-release "
"is the only way to satisfy a particular specifier)"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1064
msgid ""
"Dependency resolution tools MAY also allow the above behaviour to be "
"controlled on a per-distribution basis."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1067
msgid ""
"Post-releases and final releases receive no special treatment in version "
"specifiers - they are always included unless explicitly excluded."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1074
msgid "``~=3.1``: version 3.1 or later, but not version 4.0 or later."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1075
msgid "``~=3.1.2``: version 3.1.2 or later, but not version 3.2.0 or later."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1076
msgid "``~=3.1a1``: version 3.1a1 or later, but not version 4.0 or later."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1077
msgid ""
"``== 3.1``: specifically version 3.1 (or 3.1.0), excludes all pre-releases, "
"post releases, developmental releases and any 3.1.x maintenance releases."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1079
msgid ""
"``== 3.1.*``: any version that starts with 3.1. Equivalent to the "
"``~=3.1.0`` compatible release clause."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1081
msgid ""
"``~=3.1.0, != 3.1.3``: version 3.1.0 or later, but not version 3.1.3 and not "
"version 3.2.0 or later."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1086
#, fuzzy
msgid "Direct references"
msgstr "Referências"

#: ../source/specifications/version-specifiers.rst:1088
msgid ""
"Some automated tools may permit the use of a direct reference as an "
"alternative to a normal version specifier. A direct reference consists of "
"the specifier ``@`` and an explicit URL."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1092
msgid ""
"Whether or not direct references are appropriate depends on the specific use "
"case for the version specifier. Automated tools SHOULD at least issue "
"warnings and MAY reject them entirely when direct references are used "
"inappropriately."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1097
msgid ""
"Public index servers SHOULD NOT allow the use of direct references in "
"uploaded distributions. Direct references are intended as a tool for "
"software integrators rather than publishers."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1101
msgid ""
"Depending on the use case, some appropriate targets for a direct URL "
"reference may be an sdist or a wheel binary archive. The exact URLs and "
"targets supported will be tool dependent."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1105
msgid "For example, a local source archive may be referenced directly::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1109
msgid "Alternatively, a prebuilt archive may also be referenced::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1113
msgid ""
"All direct references that do not refer to a local file URL SHOULD specify a "
"secure transport mechanism (such as ``https``) AND include an expected hash "
"value in the URL for verification purposes. If a direct reference is "
"specified without any hash information, with hash information that the tool "
"doesn't understand, or with a selected hash algorithm that the tool "
"considers too weak to trust, automated tools SHOULD at least emit a warning "
"and MAY refuse to rely on the URL. If such a direct reference also uses an "
"insecure transport, automated tools SHOULD NOT rely on the URL."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1122
#, fuzzy
msgid ""
"It is RECOMMENDED that only hashes which are unconditionally provided by the "
"latest version of the standard library's :py:mod:`hashlib` module be used "
"for source archive hashes. At time of writing, that list consists of "
"``'md5'``, ``'sha1'``, ``'sha224'``, ``'sha256'``, ``'sha384'``, and "
"``'sha512'``."
msgstr ""
"Uma chave ``hash`` (tipo ``string``) DEVE estar presente, com o valor "
"``<algoritmo-hash>=<hash-esperada>``. É RECOMENDADO que apenas hashes que "
"são fornecidos incondicionalmente pela última versão do módulo ``hashlib`` "
"da biblioteca padrão sejam usados para hashes de arquivo fonte. No momento "
"da escrita, essa lista consistia em 'md5', 'sha1', 'sha224', 'sha256', "
"'sha384' e 'sha512'."

#: ../source/specifications/version-specifiers.rst:1128
msgid ""
"For source archive and wheel references, an expected hash value may be "
"specified by including a ``<hash-algorithm>=<expected-hash>`` entry as part "
"of the URL fragment."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1132
msgid ""
"For version control references, the ``VCS+protocol`` scheme SHOULD be used "
"to identify both the version control system and the secure transport, and a "
"version control system with hash based commit identifiers SHOULD be used. "
"Automated tools MAY omit warnings about missing hashes for version control "
"systems that do not provide hash based commit identifiers."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1138
msgid ""
"To handle version control systems that do not support including commit or "
"tag references directly in the URL, that information may be appended to the "
"end of the URL using the ``@<commit-hash>`` or the ``@<tag>#<commit-hash>`` "
"notation."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1145
msgid ""
"This isn't *quite* the same as the existing VCS reference notation supported "
"by pip. Firstly, the distribution name is moved in front rather than "
"embedded as part of the URL. Secondly, the commit hash is included even when "
"retrieving based on a tag, in order to meet the requirement above that "
"*every* link should include a hash to make things harder to forge (creating "
"a malicious repo with a particular tag is easy, creating one with a specific "
"*hash*, less so)."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1153
#, fuzzy
msgid "Remote URL examples::"
msgstr "Por exemplo::"

#: ../source/specifications/version-specifiers.rst:1161
#, fuzzy
msgid "File URLs"
msgstr "URLs de arquivos"

#: ../source/specifications/version-specifiers.rst:1163
msgid ""
"File URLs take the form of ``file://<host>/<path>``. If the ``<host>`` is "
"omitted it is assumed to be ``localhost`` and even if the ``<host>`` is "
"omitted the third slash MUST still exist. The ``<path>`` defines what the "
"file path on the filesystem that is to be accessed."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1168
msgid ""
"On the various \\*nix operating systems the only allowed values for "
"``<host>`` is for it to be omitted, ``localhost``, or another FQDN that the "
"current machine believes matches its own host. In other words, on \\*nix the "
"``file://`` scheme can only be used to access paths on the local machine."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1173
msgid ""
"On Windows the file format should include the drive letter if applicable as "
"part of the ``<path>`` (e.g. ``file:///c:/path/to/a/file``). Unlike \\*nix "
"on Windows the ``<host>`` parameter may be used to specify a file residing "
"on a network share. In other words, in order to translate ``\\"
"\\machine\\volume\\file`` to a ``file://`` url, it would end up as ``file://"
"machine/volume/file``. For more information on ``file://`` URLs on Windows "
"see `MSDN <https://web.archive.org/web/20130321051043/http://blogs.msdn.com/"
"b/ie/archive/2006/12/06/file-uris-in-windows.aspx>`_."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1184
msgid "Summary of differences from pkg_resources.parse_version"
msgstr "Resumo das diferenças em relação a pkg_resources.parse_version"

#: ../source/specifications/version-specifiers.rst:1186
msgid ""
"Note: this comparison is to ``pkg_resources.parse_version`` as it existed at "
"the time :pep:`440` was written. After the PEP was accepted, setuptools 6.0 "
"and later versions adopted the behaviour described here."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1190
msgid ""
"Local versions sort differently, this specification requires that they sort "
"as greater than the same version without a local version, whereas "
"``pkg_resources.parse_version`` considers it a pre-release marker."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1194
msgid ""
"This specification purposely restricts the syntax which constitutes a valid "
"version while ``pkg_resources.parse_version`` attempts to provide some "
"meaning from *any* arbitrary string."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1198
msgid ""
"``pkg_resources.parse_version`` allows arbitrarily deeply nested version "
"signifiers like ``1.0.dev1.post1.dev5``. This specification however allows "
"only a single use of each type and they must exist in a certain order."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1207
msgid "Appendix: Parsing version strings with regular expressions"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1209
msgid ""
"As noted earlier in the :ref:`public-version-identifiers` section, published "
"version identifiers SHOULD use the canonical format. This section provides "
"regular expressions that can be used to test whether a version is already in "
"that form, and if it's not, extract the various components for subsequent "
"normalization."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1215
msgid ""
"To test whether a version identifier is in the canonical format, you can use "
"the following function:"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1224
msgid ""
"To extract the components of a version identifier, use the following regular "
"expression (as defined by the `packaging <https://github.com/pypa/"
"packaging>`_ project):"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1271
msgid "August 2014: This specification was approved through :pep:`440`."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1272
msgid ""
"May 2025: Clarify that development releases are a form of pre-release when "
"they are handled."
msgstr ""

#: ../source/specifications/virtual-environments.rst:6
#, fuzzy
msgid "Python Virtual Environments"
msgstr "Ambiente Virtual"

#: ../source/specifications/virtual-environments.rst:8
msgid ""
"For Python 3.3 and later versions, :pep:`405` introduced interpreter level "
"support for the concept of \"Python Virtual Environments\". Each virtual "
"environment has its own Python binary (allowing creation of environments "
"with various Python versions) and can have its own independent set of "
"installed Python packages in its site directories, but shares the standard "
"library with the base installed Python. While the concept of virtual "
"environments existed prior to this update, there was no previously "
"standardised mechanism for declaring or discovering them."
msgstr ""

#: ../source/specifications/virtual-environments.rst:18
#, fuzzy
msgid "Runtime detection of virtual environments"
msgstr "Ativando um ambiente virtual"

#: ../source/specifications/virtual-environments.rst:20
msgid ""
"At runtime, virtual environments can be identified by virtue of :py:data:"
"`sys.prefix` (the filesystem location of the running interpreter) having a "
"different value from :py:data:`sys.base_prefix` (the default filesystem "
"location of the standard library directories)."
msgstr ""

#: ../source/specifications/virtual-environments.rst:25
msgid ""
":ref:`venv-explanation` in the Python standard library documentation for "
"the :py:mod:`venv` module covers this along with the concept of "
"\"activating\" a virtual environment in an interactive operating system "
"shell (this activation step is optional and hence the changes it makes can't "
"be reliably used to detect whether a Python program is running in a virtual "
"environment or not)."
msgstr ""

#: ../source/specifications/virtual-environments.rst:33
#, fuzzy
msgid "Declaring installation environments as Python virtual environments"
msgstr "Instalando pacotes usando pip e ambientes virtuais"

#: ../source/specifications/virtual-environments.rst:35
msgid ""
"As described in :pep:`405`, a Python virtual environment in its simplest "
"form consists of nothing more than a copy or symlink of the Python binary "
"accompanied by a ``site-packages`` directory and a ``pyvenv.cfg`` file with "
"a ``home`` key that indicates where to find the Python standard library "
"modules."
msgstr ""

#: ../source/specifications/virtual-environments.rst:40
msgid ""
"While designed to meet the needs of the standard :py:mod:`venv` module, this "
"split installation and ``pyvenv.cfg`` file approach can be used by *any* "
"Python installation provider that desires Python-specific tools to be aware "
"that they are already operating in a virtual environment and no further "
"environment nesting is required or desired."
msgstr ""

#: ../source/specifications/virtual-environments.rst:46
msgid ""
"Even in the absence of a ``pyvenv.cfg`` file, any approach (e.g. "
"``sitecustomize.py``, patching the installed Python runtime) that results "
"in :py:data:`sys.prefix` and :py:data:`sys.base_prefix` having different "
"values, while still providing a matching default package installation scheme "
"in :py:mod:`sysconfig`, will be detected and behave as a Python virtual "
"environment."
msgstr ""

#: ../source/specifications/virtual-environments.rst:56
msgid "May 2012: This specification was approved through :pep:`405`."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:5
#, fuzzy
msgid "Well-known Project URLs in Metadata"
msgstr "Nome do projeto"

#: ../source/specifications/well-known-project-urls.rst:9
msgid ""
"This document is primarily of interest to metadata *consumers*, who should "
"use the normalization rules and well-known list below to make their "
"presentation of project URLs consistent across the Python ecosystem."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:14
msgid ""
"Metadata *producers* (such as build tools and individual package "
"maintainers) may continue to use any labels they please, within the overall "
"``Project-URL`` length restrictions. However, when possible, users are "
"*encouraged* to pick meaningful labels that normalize to well-known labels."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:22
msgid ""
"See :ref:`Writing your pyproject.toml - urls <writing-pyproject-toml-urls>` "
"for user-oriented guidance on choosing project URL labels in your package's "
"metadata."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:26
#, fuzzy
#| msgid ""
#| "This document describes the dependency specifiers format as originally "
#| "specified in :pep:`508`."
msgid "This specification was originally defined in :pep:`753`."
msgstr ""
"Este documento descreve o formato dos especificadores de dependência "
"conforme originalmente especificado na :pep:`508`."

#: ../source/specifications/well-known-project-urls.rst:28
msgid ""
":pep:`753` deprecates the :ref:`core-metadata-home-page` and :ref:`core-"
"metadata-download-url` metadata fields in favor of :ref:`core-metadata-"
"project-url`, and defines a normalization and lookup procedure for "
"determining whether a ``Project-URL`` is \"well-known,\" i.e. has the "
"semantics assigned to ``Home-page``, ``Download-URL``, or other common "
"project URLs."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:35
msgid ""
"This allows indices (such as the Python Package Index) and other downstream "
"metadata consumers to present project URLs in a consistent manner."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:42
#, fuzzy
msgid "Label normalization"
msgstr "Normalização"

#: ../source/specifications/well-known-project-urls.rst:46
msgid ""
"Label normalization is performed by metadata *consumers*, not metadata "
"producers."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:49
msgid ""
"To determine whether a ``Project-URL`` label is \"well-known,\" metadata "
"consumers should normalize the label before comparing it to the :ref:`list "
"of well-known labels <well-known-labels>`."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:53
msgid ""
"The normalization procedure for ``Project-URL`` labels is defined by the "
"following Python function:"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:65
msgid ""
"In plain language: a label is *normalized* by deleting all ASCII punctuation "
"and whitespace, and then converting the result to lowercase."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:68
msgid ""
"The following table shows examples of labels before (raw) and after "
"normalization:"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:74
msgid "Raw"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:75
#, fuzzy
msgid "Normalized"
msgstr "Nomes não normalizados válidos"

#: ../source/specifications/well-known-project-urls.rst:76
#, fuzzy
#| msgid "Home-page"
msgid "``Homepage``"
msgstr "Home-page"

#: ../source/specifications/well-known-project-urls.rst:77
#: ../source/specifications/well-known-project-urls.rst:79
#: ../source/specifications/well-known-project-urls.rst:81
#, fuzzy
#| msgid "Home-page"
msgid "``homepage``"
msgstr "Home-page"

#: ../source/specifications/well-known-project-urls.rst:78
#, fuzzy
#| msgid "Home-page"
msgid "``Home-page``"
msgstr "Home-page"

#: ../source/specifications/well-known-project-urls.rst:80
#, fuzzy
#| msgid "Home page"
msgid "``Home page``"
msgstr "Site"

#: ../source/specifications/well-known-project-urls.rst:82
msgid "``Change_Log``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:83
msgid "``changelog``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:84
msgid "``What's New?``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:85
msgid "``whatsnew``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:86
#: ../source/specifications/well-known-project-urls.rst:87
msgid "``github``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:92
msgid "Well-known labels"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:96
msgid ""
"The list of well-known labels is a living standard, maintained as part of "
"this document."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:99
msgid ""
"The following table lists labels that are well-known for the purpose of "
"specializing the presentation of ``Project-URL`` metadata:"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:105
msgid "Label (Human-readable equivalent)"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:107
msgid "Aliases"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:108
msgid "``homepage`` (Homepage)"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:109
msgid "The project's home page"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:110
#: ../source/specifications/well-known-project-urls.rst:116
#: ../source/specifications/well-known-project-urls.rst:122
msgid "*(none)*"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:111
msgid "``source`` (Source Code)"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:112
msgid "The project's hosted source code or repository"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:113
msgid "``repository``, ``sourcecode``, ``github``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:114
msgid "``download`` (Download)"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:115
msgid ""
"A download URL for the current distribution, equivalent to ``Download-URL``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:117
msgid "``changelog`` (Changelog)"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:118
msgid "The project's comprehensive changelog"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:119
msgid "``changes``, ``whatsnew``, ``history``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:120
msgid "``releasenotes`` (Release Notes)"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:121
msgid "The project's curated release notes"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:123
#, fuzzy
msgid "``documentation`` (Documentation)"
msgstr "Criando documentação"

#: ../source/specifications/well-known-project-urls.rst:124
#, fuzzy
msgid "The project's online documentation"
msgstr "Criando documentação"

#: ../source/specifications/well-known-project-urls.rst:125
#, fuzzy
#| msgid "``upload_docs``"
msgid "``docs``"
msgstr "``upload_docs``"

#: ../source/specifications/well-known-project-urls.rst:126
msgid "``issues`` (Issue Tracker)"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:127
msgid "The project's bug tracker"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:128
msgid "``bugs``, ``issue``, ``tracker``, ``issuetracker``, ``bugtracker``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:129
msgid "``funding`` (Funding)"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:130
#, fuzzy
#| msgid "Basic information"
msgid "Funding Information"
msgstr "Informações básicas"

#: ../source/specifications/well-known-project-urls.rst:131
msgid "``sponsor``, ``donate``, ``donation``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:133
msgid ""
"Package metadata consumers may choose to render aliased labels the same as "
"their \"parent\" well known label, or further specialize them."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:137
#, fuzzy
#| msgid "Example"
msgid "Example behavior"
msgstr "Exemplo"

#: ../source/specifications/well-known-project-urls.rst:139
msgid ""
"The following shows the flow of project URL metadata from ``pyproject.toml`` "
"to core metadata to a potential index presentation:"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:142
msgid "Example project URLs in standard configuration"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:151
#, fuzzy
#| msgid "Core metadata specifications"
msgid "Core metadata representation"
msgstr "Especificações de metadados principais"

#: ../source/specifications/well-known-project-urls.rst:159
msgid "Potential rendering"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:167
msgid ""
"Observe that the core metadata appears in the form provided by the user "
"(since metadata *producers* do not perform normalization), but the metadata "
"*consumer* normalizes and identifies appropriate human-readable equivalents "
"based on the normalized form:"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:172
msgid "``Home page`` becomes ``homepage``, which is rendered as ``Homepage``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:173
msgid ""
"``DOCUMENTATION`` becomes ``documentation``, which is rendered as "
"``Documentation``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:174
msgid ""
"``Repository`` becomes ``repository``, which is rendered as ``Source Code``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:175
msgid ""
"``GitHub`` becomes ``github``, which is rendered as ``Source Code (GitHub)`` "
"(as a specialization of ``Source Code``)"
msgstr ""

#: ../source/support.rst:3
msgid "How to Get Support"
msgstr "Como obter suporte"

#: ../source/support.rst:5
msgid ""
"For support related to a specific project, see the links on the :doc:"
"`Projects <key_projects>` page."
msgstr ""
"Para suporte relacionado a um projeto específico, consulte os links na "
"página :doc:`Projetos <key_projects>`."

#: ../source/support.rst:8
msgid ""
"For something more general, or when you're just not sure, please `open an "
"issue <https://github.com/pypa/packaging-problems/issues/new?"
"template=general_issue.yml>`_ on the `packaging-problems <https://github.com/"
"pypa/packaging-problems>`_ repository on GitHub."
msgstr ""
"Para algo mais geral, ou quando você não tiver certeza, por favor `relate o "
"problema <https://github.com/pypa/packaging-problems/issues/new?"
"template=general_issue.yml>`_ no repositório `packaging-problems <https://"
"github.com/pypa/packaging-problems>`_ no GitHub."

#: ../source/tutorials/creating-documentation.rst:4
#, fuzzy
msgid "Creating documentation"
msgstr "Criando documentação"

#: ../source/tutorials/creating-documentation.rst:6
msgid ""
"This tutorial has been removed since it is not related to packaging and was "
"unmaintained. Please see the `Sphinx tutorial <https://www.sphinx-doc.org/en/"
"master/tutorial>`_ instead."
msgstr ""

#: ../source/tutorials/index.rst:4
msgid ""
"**Tutorials** are opinionated step-by-step guides to help you get familiar "
"with packaging concepts. For more detailed information on specific packaging "
"topics, see :doc:`/guides/index`."
msgstr ""
"**Tutoriais** são guias passo a passo opinativos para ajudá-lo a se "
"familiarizar com os conceitos de empacotamento. Para obter informações mais "
"detalhadas sobre tópicos de empacotamento específicos, consulte :doc:`/"
"guides/index`."

#: ../source/tutorials/installing-packages.rst:5
msgid "Installing Packages"
msgstr "Instalando pacotes"

#: ../source/tutorials/installing-packages.rst:7
msgid ""
"This section covers the basics of how to install Python :term:`packages "
"<Distribution Package>`."
msgstr ""
"Esta seção cobre o básico de como instalar :term:`pacotes <Distribution "
"Package>` Python."

#: ../source/tutorials/installing-packages.rst:10
#, fuzzy
msgid ""
"It's important to note that the term \"package\" in this context is being "
"used to describe a bundle of software to be installed (i.e. as a synonym for "
"a :term:`distribution <Distribution Package>`). It does not refer to the "
"kind of :term:`package <Import Package>` that you import in your Python "
"source code (i.e. a container of modules). It is common in the Python "
"community to refer to a :term:`distribution <Distribution Package>` using "
"the term \"package\".  Using the term \"distribution\" is often not "
"preferred, because it can easily be confused with a Linux distribution, or "
"another larger software distribution like Python itself."
msgstr ""
"É importante notar que o termo \"pacote\" neste contexto está sendo usado "
"para descrever um pacote de software a ser instalado (ou seja, como um "
"sinônimo para uma :term:`distribuição <Pacote de Distribuição>`). Não se "
"refere ao tipo de :term:`pacote <Pacote de Importação>` que você importa em "
"seu código-fonte Python (ou seja, um contêiner de módulos). É comum na "
"comunidade Python referir-se a uma :term:`distribuição <Pacote de "
"Distribuição>` usando o termo \"pacote\". Usar o termo \"distribuição\" "
"geralmente não é preferido, porque pode ser facilmente confundido com uma "
"distribuição Linux ou outra distribuição de software maior como o próprio "
"Python."

#: ../source/tutorials/installing-packages.rst:24
msgid "Requirements for Installing Packages"
msgstr "Requisitos para instalar pacotes"

#: ../source/tutorials/installing-packages.rst:26
msgid ""
"This section describes the steps to follow before installing other Python "
"packages."
msgstr ""
"Esta seção descreve as etapas a serem seguidas antes de instalar outros "
"pacotes Python."

#: ../source/tutorials/installing-packages.rst:31
msgid "Ensure you can run Python from the command line"
msgstr ""
"Certifique-se de que você consegue executar Python a partir da linha de "
"comando"

#: ../source/tutorials/installing-packages.rst:33
msgid ""
"Before you go any further, make sure you have Python and that the expected "
"version is available from your command line. You can check this by running:"
msgstr ""
"Antes de prosseguir, certifique-se de ter o Python e de que a versão "
"esperada está disponível em sua linha de comando. Você pode verificar isso "
"executando:"

#: ../source/tutorials/installing-packages.rst:49
msgid ""
"You should get some output like ``Python 3.6.3``. If you do not have Python, "
"please install the latest 3.x version from `python.org`_ or refer to the :"
"ref:`Installing Python <python-guide:installation>` section of the "
"Hitchhiker's Guide to Python."
msgstr ""
"Você deve obter alguma saída como ``Python 3.6.3``. Se você não tiver o "
"Python, instale a versão 3.x mais recente de `python.org`_ ou consulte a "
"seção :ref:`Instalando Python <python-guide:installation>` do Guia do "
"Mochileiro para Python."

#: ../source/tutorials/installing-packages.rst:53
msgid "If you're a newcomer and you get an error like this:"
msgstr "Se você for um novato e receber um erro como este:"

#: ../source/tutorials/installing-packages.rst:62
msgid ""
"It's because this command and other suggested commands in this tutorial are "
"intended to be run in a *shell* (also called a *terminal* or *console*). See "
"the Python for Beginners `getting started tutorial`_ for an introduction to "
"using your operating system's shell and interacting with Python."
msgstr ""
"É porque este comando e outros comandos sugeridos neste tutorial devem ser "
"executados em um *shell* (também chamado de *terminal* ou *console*). Veja o "
"`tutorial de introdução`_ para iniciantes do Python para uma introdução "
"sobre como usar o shell do seu sistema operacional e interagir com o Python."

#: ../source/tutorials/installing-packages.rst:68
msgid ""
"If you're using an enhanced shell like IPython or the Jupyter notebook, you "
"can run system commands like those in this tutorial by prefacing them with a "
"``!`` character:"
msgstr ""
"Se estiver usando um shell aprimorado como o IPython ou o notebook Jupyter, "
"você pode executar comandos do sistema como os deste tutorial precedendo-os "
"com um caractere ``!``:"

#: ../source/tutorials/installing-packages.rst:78
msgid ""
"It's recommended to write ``{sys.executable}`` rather than plain ``python`` "
"in order to ensure that commands are run in the Python installation matching "
"the currently running notebook (which may not be the same Python "
"installation that the ``python`` command refers to)."
msgstr ""
"É recomendado escrever ``{sys.executable}`` em vez de ``python`` simples "
"para garantir que os comandos sejam executados na instalação do Python "
"correspondendo ao ambiente em execução (que pode não ser o mesmo Python "
"instalação à qual o comando ``python`` se refere)."

#: ../source/tutorials/installing-packages.rst:83
msgid ""
"Due to the way most Linux distributions are handling the Python 3 migration, "
"Linux users using the system Python without creating a virtual environment "
"first should replace the ``python`` command in this tutorial with "
"``python3`` and the ``python -m pip`` command with ``python3 -m pip --"
"user``. Do *not* run any of the commands in this tutorial with ``sudo``: if "
"you get a permissions error, come back to the section on creating virtual "
"environments, set one up, and then continue with the tutorial as written."
msgstr ""
"Devido à forma como a maioria das distribuições Linux está lidando com a "
"migração Python 3, os usuários Linux usando o sistema Python sem criar um "
"ambiente virtual primeiro devem substituir o comando ``python`` neste "
"tutorial por ``python3`` e o comando ``python -m pip`` com ``python3 -m pip "
"--user``. *Não* execute nenhum dos comandos neste tutorial com ``sudo``: se "
"você receber um erro de permissão, volte para a seção sobre como criar "
"ambientes virtuais, configure um e então continue com o tutorial como "
"escrito."

#: ../source/tutorials/installing-packages.rst:95
msgid "Ensure you can run pip from the command line"
msgstr ""
"Certifique-se de que você pode executar o pip a partir da linha de comando"

#: ../source/tutorials/installing-packages.rst:97
msgid ""
"Additionally, you'll need to make sure you have :ref:`pip` available. You "
"can check this by running:"
msgstr ""
"Além disso, você precisa ter certeza de ter :ref:`pip` disponível. Você pode "
"verificar isso executando:"

#: ../source/tutorials/installing-packages.rst:112
msgid ""
"If you installed Python from source, with an installer from `python.org`_, "
"or via `Homebrew`_ you should already have pip. If you're on Linux and "
"installed using your OS package manager, you may have to install pip "
"separately, see :doc:`/guides/installing-using-linux-tools`."
msgstr ""
"Se você instalou Python a partir do código-fonte, com um instalador de "
"`python.org`_, ou via `Homebrew`_, você já deve ter o pip. Se você estiver "
"no Linux e instalado usando o gerenciador de pacotes do sistema operacional, "
"pode ser necessário instalar o pip separadamente, consulte :doc:`/guides/"
"installing-using-linux-tools`."

#: ../source/tutorials/installing-packages.rst:119
msgid ""
"If ``pip`` isn't already installed, then first try to bootstrap it from the "
"standard library:"
msgstr ""
"Se o ``pip`` ainda não estiver instalado, tente primeiro inicializá-lo a "
"partir da biblioteca padrão:"

#: ../source/tutorials/installing-packages.rst:134
msgid "If that still doesn't allow you to run ``python -m pip``:"
msgstr "Se isso ainda não permitir que você execute ``python -m pip``:"

#: ../source/tutorials/installing-packages.rst:136
msgid ""
"Securely Download `get-pip.py <https://bootstrap.pypa.io/get-pip.py>`_ [1]_"
msgstr ""
"Baixe com segurança `get-pip.py <https://bootstrap.pypa.io/get-pip.py>`_ [1]_"

#: ../source/tutorials/installing-packages.rst:139
msgid ""
"Run ``python get-pip.py``. [2]_  This will install or upgrade pip. "
"Additionally, it will install :ref:`setuptools` and :ref:`wheel` if they're "
"not installed already."
msgstr ""
"Execute ``python get-pip.py``. [2]_ Isso vai instalar ou atualizar o pip. "
"Adicionalmente, vai instalar :ref:`setuptools` e :ref:`wheel` se ainda não "
"estiverem instalados."

#: ../source/tutorials/installing-packages.rst:145
msgid ""
"Be cautious if you're using a Python install that's managed by your "
"operating system or another package manager. get-pip.py does not coordinate "
"with those tools, and may leave your system in an inconsistent state. You "
"can use ``python get-pip.py --prefix=/usr/local/`` to install in ``/usr/"
"local`` which is designed for locally-installed software."
msgstr ""
"Tenha cuidado se estiver usando uma instalação do Python gerenciada por seu "
"sistema operacional ou outro gerenciador de pacotes. get-pip.py não coordena "
"com essas ferramentas e pode deixar seu sistema em um estado inconsistente. "
"Você pode usar ``python get-pip.py --prefix=/usr/local/`` para instalar em "
"``/usr/local`` que é projetado para software instalado localmente."

#: ../source/tutorials/installing-packages.rst:154
msgid "Ensure pip, setuptools, and wheel are up to date"
msgstr "Certifique-se que pip, setuptools e wheel estejam atualizados"

#: ../source/tutorials/installing-packages.rst:156
msgid ""
"While ``pip`` alone is sufficient to install from pre-built binary archives, "
"up to date copies of the ``setuptools`` and ``wheel`` projects are useful to "
"ensure you can also install from source archives:"
msgstr ""
"Embora ``pip`` sozinho seja suficiente para instalar a partir de arquivos "
"binários pré-compilados, cópias atualizadas dos projetos ``setuptools`` e "
"``wheel`` são úteis para garantir que você também possa instalar a partir de "
"arquivos fonte:"

#: ../source/tutorials/installing-packages.rst:173
msgid "Optionally, create a virtual environment"
msgstr "Opcionalmente, crie um ambiente virtual"

#: ../source/tutorials/installing-packages.rst:175
msgid ""
"See :ref:`section below <Creating and using Virtual Environments>` for "
"details, but here's the basic :doc:`venv <python:library/venv>` [3]_ command "
"to use on a typical Linux system:"
msgstr ""
"Veja a :ref:`seção abaixo <Creating and using Virtual Environments>` para "
"detalhes, mas aqui está o comando básico de :doc:`venv <python:library/"
"venv>` [3]_ para usar em um sistema Linux típico:"

#: ../source/tutorials/installing-packages.rst:192
msgid ""
"This will create a new virtual environment in the ``tutorial_env`` "
"subdirectory, and configure the current shell to use it as the default "
"``python`` environment."
msgstr ""
"Isso criará um novo ambiente virtual no subdiretório ``tutorial_env`` e "
"configurará o shell atual para usá-lo como o ambiente ``python`` padrão."

#: ../source/tutorials/installing-packages.rst:199
msgid "Creating Virtual Environments"
msgstr "Criando ambientes virtuais"

#: ../source/tutorials/installing-packages.rst:201
msgid ""
"Python \"Virtual Environments\" allow Python :term:`packages <Distribution "
"Package>` to be installed in an isolated location for a particular "
"application, rather than being installed globally. If you are looking to "
"safely install global command line tools, see :doc:`/guides/installing-stand-"
"alone-command-line-tools`."
msgstr ""
"\"Ambientes virtuais\" do Python permitem que :term:`pacotes <Pacote de "
"Distribuição>` Python sejam instalados em um local isolado para uma "
"aplicação em particular, ao invés de serem instalados globalmente. Se você "
"deseja instalar ferramentas de linha de comando globais com segurança, "
"consulte :doc:`/guides/installing-stand-alone-command-line-tools`."

#: ../source/tutorials/installing-packages.rst:207
msgid ""
"Imagine you have an application that needs version 1 of LibFoo, but another "
"application requires version 2. How can you use both these applications? If "
"you install everything into /usr/lib/python3.6/site-packages (or whatever "
"your platform’s standard location is), it’s easy to end up in a situation "
"where you unintentionally upgrade an application that shouldn’t be upgraded."
msgstr ""
"Imagine que você tenha uma aplicação que precisa da versão 1 do LibFoo, mas "
"outra aplicação requer a versão 2. Como você pode usar essas duas "
"aplicações? Se você instalar tudo em /usr/lib/python3.6/site-packages (ou "
"qualquer que seja o local padrão de sua plataforma), é fácil acabar em uma "
"situação em que você atualiza acidentalmente uma aplicação que não deveria "
"ser atualizada."

#: ../source/tutorials/installing-packages.rst:213
msgid ""
"Or more generally, what if you want to install an application and leave it "
"be? If an application works, any change in its libraries or the versions of "
"those libraries can break the application."
msgstr ""
"Ou, de forma mais geral, e se você quiser instalar uma aplicação e deixá-la "
"como está? Se uma aplicação funcionar, qualquer alteração em suas "
"bibliotecas ou nas versões dessas bibliotecas pode interromper a aplicação."

#: ../source/tutorials/installing-packages.rst:217
msgid ""
"Also, what if you can’t install :term:`packages <Distribution Package>` into "
"the global site-packages directory? For instance, on a shared host."
msgstr ""
"Além disso, e se você não puder instalar :term:`pacotes <Pacote de "
"Distribuição>` no diretório global site-packages? Por exemplo, em um host "
"compartilhado."

#: ../source/tutorials/installing-packages.rst:220
msgid ""
"In all these cases, virtual environments can help you. They have their own "
"installation directories and they don’t share libraries with other virtual "
"environments."
msgstr ""
"Em todos esses casos, os ambientes virtuais podem lhe ajudar. Eles têm seus "
"próprios diretórios de instalação e não compartilham bibliotecas com outros "
"ambientes virtuais."

#: ../source/tutorials/installing-packages.rst:224
msgid ""
"Currently, there are two common tools for creating Python virtual "
"environments:"
msgstr ""
"Atualmente, existem duas ferramentas comuns para a criação de ambientes "
"virtuais Python:"

#: ../source/tutorials/installing-packages.rst:226
#, fuzzy
msgid ""
":doc:`venv <python:library/venv>` is available by default in Python 3.3 and "
"later, and installs :ref:`pip` into created virtual environments in Python "
"3.4 and later (Python versions prior to 3.12 also installed :ref:"
"`setuptools`)."
msgstr ""
":doc:`venv <python:library/venv>` está disponível por padrão no Python 3.3 e "
"posterior, e instala :ref:`pip` e :ref:`setuptools` em ambientes virtuais "
"criados no Python 3.4 e posterior."

#: ../source/tutorials/installing-packages.rst:229
#, fuzzy
#| msgid ""
#| ":ref:`virtualenv` needs to be installed separately, but supports Python "
#| "2.7+ and Python 3.3+, and :ref:`pip`, :ref:`setuptools` and :ref:`wheel` "
#| "are always installed into created virtual environments by default "
#| "(regardless of Python version)."
msgid ""
":ref:`virtualenv` needs to be installed separately, but supports Python 2.7+ "
"and Python 3.3+, and :ref:`pip`, :ref:`setuptools` and :ref:`wheel` are "
"installed into created virtual environments by default. Note that "
"``setuptools`` is no longer included by default starting with Python 3.12 "
"(and ``virtualenv`` follows this behavior)."
msgstr ""
":ref:`virtualenv` precisa ser instalado separadamente, mas oferece suporte a "
"Python 2.7+ e Python 3.3+, e :ref:`pip`, :ref:`setuptools` e :ref:`wheel` "
"são sempre instalados em ambientes virtuais criados por padrão "
"(independentemente da versão Python)."

#: ../source/tutorials/installing-packages.rst:234
msgid "The basic usage is like so:"
msgstr "O uso básico é assim:"

#: ../source/tutorials/installing-packages.rst:236
msgid "Using :doc:`venv <python:library/venv>`:"
msgstr "Usando :doc:`venv <python:library/venv>`:"

#: ../source/tutorials/installing-packages.rst:252
msgid "Using :ref:`virtualenv`:"
msgstr "Usando :ref:`virtualenv`:"

#: ../source/tutorials/installing-packages.rst:268
msgid ""
"For more information, see the :doc:`venv <python:library/venv>` docs or the :"
"doc:`virtualenv <virtualenv:index>` docs."
msgstr ""
"Para mais informações, veja a documentação do :doc:`venv <python:library/"
"venv>` ou do :doc:`virtualenv <virtualenv:index>`."

#: ../source/tutorials/installing-packages.rst:271
msgid ""
"The use of :command:`source` under Unix shells ensures that the virtual "
"environment's variables are set within the current shell, and not in a "
"subprocess (which then disappears, having no useful effect)."
msgstr ""
"O uso de :command:`source` em shells Unix garante que as variáveis do "
"ambiente virtual sejam definidas dentro do shell atual, e não em um "
"subprocesso (que então desaparece, sem nenhum efeito útil)."

#: ../source/tutorials/installing-packages.rst:276
#, fuzzy
msgid ""
"In both of the above cases, Windows users should *not* use the :command:"
"`source` command, but should rather run the :command:`activate` script "
"directly from the command shell like so:"
msgstr ""
"Em ambos os casos acima, os usuários Windows não devem _não_ usar o comando :"
"command:`source`, mas devem executar o script :command:`activate` "
"diretamente do shell de comando assim:"

#: ../source/tutorials/installing-packages.rst:286
msgid ""
"Managing multiple virtual environments directly can become tedious, so the :"
"ref:`dependency management tutorial <managing-dependencies>` introduces a "
"higher level tool, :ref:`Pipenv`, that automatically manages a separate "
"virtual environment for each project and application that you work on."
msgstr ""
"Gerenciar vários ambientes virtuais diretamente pode se tornar tedioso, "
"então o :ref:`tutorial de gerenciamento de dependências <managing-"
"dependencies>` apresenta uma ferramenta de alto nível, :ref:`Pipenv`, que "
"gerencia automaticamente um ambiente virtual separado para cada projeto e "
"aplicação no qual você trabalha."

#: ../source/tutorials/installing-packages.rst:293
msgid "Use pip for Installing"
msgstr "Usar pip para instalação"

#: ../source/tutorials/installing-packages.rst:295
msgid ""
":ref:`pip` is the recommended installer.  Below, we'll cover the most common "
"usage scenarios. For more detail, see the :doc:`pip docs <pip:index>`, which "
"includes a complete :doc:`Reference Guide <pip:cli/index>`."
msgstr ""
":ref:`pip` é o instalador recomendado. A seguir, cobriremos os cenários de "
"uso mais comuns. Para obter mais detalhes, consulte a :doc:`documentação do "
"pip <pip:index>`, que inclui um :doc:`Guia de Referências <pip:cli/index>` "
"completo."

#: ../source/tutorials/installing-packages.rst:301
msgid "Installing from PyPI"
msgstr "Instalando a partir do PyPI"

#: ../source/tutorials/installing-packages.rst:303
msgid ""
"The most common usage of :ref:`pip` is to install from the :term:`Python "
"Package Index <Python Package Index (PyPI)>` using a :term:`requirement "
"specifier <Requirement Specifier>`. Generally speaking, a requirement "
"specifier is composed of a project name followed by an optional :term:"
"`version specifier <Version Specifier>`.  A full description of the "
"supported specifiers can be found in the :ref:`Version specifier "
"specification <version-specifiers>`. Below are some examples."
msgstr ""
"O uso mais comum do :ref:`pip` é instalar a partir do :term:`Python Package "
"Index <Python Package Index (PyPI)>` usando um :term:`especificador de "
"requisitos <Especificador de Requisitos>`. De modo geral, um especificador "
"de requisitos é composto de um nome de projeto seguido por um :term:"
"`especificador de versão <Especificador de Versão>` opcional . A descrição "
"completa dos especificadores suportados podem ser encontrados na :ref:"
"`especificação de especificadores de versão <version-specifiers>`. Abaixo "
"estão alguns exemplos."

#: ../source/tutorials/installing-packages.rst:311
msgid "To install the latest version of \"SomeProject\":"
msgstr "Para instalar a versão mais recente de \"SomeProject\":"

#: ../source/tutorials/installing-packages.rst:325
msgid "To install a specific version:"
msgstr "Para instalar uma versão específica:"

#: ../source/tutorials/installing-packages.rst:339
msgid "To install greater than or equal to one version and less than another:"
msgstr "Para instalar maior ou igual a uma versão e menor que outra:"

#: ../source/tutorials/installing-packages.rst:354
#, fuzzy
msgid ""
"To install a version that's :ref:`compatible <version-specifiers-compatible-"
"release>` with a certain version: [4]_"
msgstr ""
"Para instalar uma versão que é :pep:`\"compatível\" <440#compatible-"
"release>` com uma determinada versão: [4]_"

#: ../source/tutorials/installing-packages.rst:369
msgid ""
"In this case, this means to install any version \"==1.4.*\" version that's "
"also \">=1.4.2\"."
msgstr ""
"Nesse caso, isso significa instalar qualquer versão \"==1.4.*\" que também "
"seja \">=1.4.2\"."

#: ../source/tutorials/installing-packages.rst:374
msgid "Source Distributions vs Wheels"
msgstr "Distribuições de fonte vs Wheels"

#: ../source/tutorials/installing-packages.rst:376
msgid ""
":ref:`pip` can install from either :term:`Source Distributions (sdist) "
"<Source Distribution (or \"sdist\")>` or :term:`Wheels <Wheel>`, but if both "
"are present on PyPI, pip will prefer a compatible :term:`wheel <Wheel>`. You "
"can override pip`s default behavior by e.g. using its :ref:`--no-binary <pip:"
"install_--no-binary>` option."
msgstr ""
":ref:`pip` pode instalar a partir de :term:`Distribuições Fonte (sdist) "
"<Distribuição Fonte (ou \"sdist\")>` ou :term:`Wheels <Wheel>`, mas se ambos "
"estiverem presentes no PyPI, pip irá preferir um :term:`wheel <Wheel>` "
"compatível. Você pode substituir o comportamento padrão do pip, por exemplo "
"usando sua opção :ref:`--no-binary <pip:install_--no-binary>`."

#: ../source/tutorials/installing-packages.rst:382
msgid ""
":term:`Wheels <Wheel>` are a pre-built :term:`distribution <Distribution "
"Package>` format that provides faster installation compared to :term:`Source "
"Distributions (sdist) <Source Distribution (or \"sdist\")>`, especially when "
"a project contains compiled extensions."
msgstr ""
":term:`Wheels <Wheel>` são um formato de :term:`distribuição <Pacote de "
"Distribuição>` pré-construído que fornece uma instalação mais rápida em "
"comparação com :term:`Distribuições Fonte (sdist) <Distribuição Fonte (ou "
"\"sdist\")>`, especialmente quando um projeto contém extensões compiladas."

#: ../source/tutorials/installing-packages.rst:387
msgid ""
"If :ref:`pip` does not find a wheel to install, it will locally build a "
"wheel and cache it for future installs, instead of rebuilding the source "
"distribution in the future."
msgstr ""
"Se :ref:`pip` não encontrar um wheel para instalar, ele irá construir um "
"wheel localmente e armazená-lo em cache para instalações futuras, ao invés "
"de reconstruir a distribuição fonte no futuro."

#: ../source/tutorials/installing-packages.rst:395
msgid "Upgrade an already installed ``SomeProject`` to the latest from PyPI."
msgstr "Atualize um ``SomeProject`` já instalado para o mais recente do PyPI."

#: ../source/tutorials/installing-packages.rst:412
msgid "Installing to the User Site"
msgstr "Instalando para o site do usuário"

#: ../source/tutorials/installing-packages.rst:414
msgid ""
"To install :term:`packages <Distribution Package>` that are isolated to the "
"current user, use the ``--user`` flag:"
msgstr ""
"Para instalar :term:`pacotes <Pacote de Distribuição>` que são isolados para "
"o usuário atual, use o sinalizador ``--user``:"

#: ../source/tutorials/installing-packages.rst:429
msgid ""
"For more information see the `User Installs <https://pip.pypa.io/en/latest/"
"user_guide/#user-installs>`_ section from the pip docs."
msgstr ""
"Para obter mais informações, consulte a seção `User Installs <https://pip."
"pypa.io/en/latest/user_guide/#user-installs>`_ da documentação do pip."

#: ../source/tutorials/installing-packages.rst:433
msgid ""
"Note that the ``--user`` flag has no effect when inside a virtual "
"environment - all installation commands will affect the virtual environment."
msgstr ""
"Observe que o sinalizador ``--user`` não tem efeito quando dentro de um "
"ambiente virtual -- todos os comandos de instalação afetarão o ambiente "
"virtual."

#: ../source/tutorials/installing-packages.rst:436
msgid ""
"If ``SomeProject`` defines any command-line scripts or console entry points, "
"``--user`` will cause them to be installed inside the `user base`_'s binary "
"directory, which may or may not already be present in your shell's :envvar:"
"`PATH`.  (Starting in version 10, pip displays a warning when installing any "
"scripts to a directory outside :envvar:`PATH`.)  If the scripts are not "
"available in your shell after installation, you'll need to add the directory "
"to your :envvar:`PATH`:"
msgstr ""
"Se ``SomeProject`` definir quaisquer scripts de linha de comando ou pontos "
"de entrada de console, ``--user`` fará com que sejam instalados dentro do "
"diretório binário da `base do usuário`_, que pode ou não já estar presente "
"em seu :envvar:`PATH` do shell. (A partir da versão 10, pip exibe um aviso "
"ao instalar qualquer script em um diretório fora de :envvar:`PATH`.) Se os "
"scripts não estiverem disponíveis em seu shell após a instalação, você "
"precisará adicionar o diretório ao seu :envvar:`PATH`:"

#: ../source/tutorials/installing-packages.rst:444
msgid ""
"On Linux and macOS you can find the user base binary directory by running "
"``python -m site --user-base`` and adding ``bin`` to the end. For example, "
"this will typically print ``~/.local`` (with ``~`` expanded to the absolute "
"path to your home directory) so you'll need to add ``~/.local/bin`` to your "
"``PATH``.  You can set your ``PATH`` permanently by `modifying ~/.profile`_."
msgstr ""
"No Linux e no macOS você pode encontrar o diretório binário da base do "
"usuário executando ``python -m site --user-base`` e adicionando ``bin`` no "
"final. Por exemplo, isso normalmente imprimirá ``~/.local`` (com ``~`` "
"expandido para o caminho absoluto para o seu diretório inicial), então você "
"precisará adicionar ``~/.local/bin`` para seu ``PATH``. Você pode definir "
"seu ``PATH`` permanentemente `modificando ~/.profile`_."

#: ../source/tutorials/installing-packages.rst:450
msgid ""
"On Windows you can find the user base binary directory by running ``py -m "
"site --user-site`` and replacing ``site-packages`` with ``Scripts``. For "
"example, this could return ``C:"
"\\Users\\Username\\AppData\\Roaming\\Python36\\site-packages`` so you would "
"need to set your ``PATH`` to include ``C:"
"\\Users\\Username\\AppData\\Roaming\\Python36\\Scripts``. You can set your "
"user ``PATH`` permanently in the `Control Panel`_. You may need to log out "
"for the ``PATH`` changes to take effect."
msgstr ""
"No Windows você pode encontrar o diretório binário base do usuário "
"executando ``py -m site --user-site`` e substituindo ``site-packages`` por "
"``Scripts``. Por exemplo, isso poderia retornar ``C:"
"\\Users\\Username\\AppData\\Roaming\\Python36\\site-packages``, então você "
"precisaria definir seu ``PATH`` para incluir ``C:"
"\\Users\\Username\\AppData\\Roaming\\Python36\\Scripts``. Você pode definir "
"seu usuário ``PATH`` permanentemente no `Painel de Controle`_. Você pode "
"precisar encerrar a sessão para que as alterações de ``PATH`` tenham efeito."

#: ../source/tutorials/installing-packages.rst:466
msgid ""
"Install a list of requirements specified in a :ref:`Requirements File <pip:"
"Requirements Files>`."
msgstr ""
"Instale uma lista de requisitos especificados em um :ref:`arquivo de "
"requisitos <pip:Requirements Files>`."

#: ../source/tutorials/installing-packages.rst:482
msgid "Installing from VCS"
msgstr "Instalando a partir de VCS"

#: ../source/tutorials/installing-packages.rst:484
msgid ""
"Install a project from VCS in \"editable\" mode.  For a full breakdown of "
"the syntax, see pip's section on :ref:`VCS Support <pip:VCS Support>`."
msgstr ""
"Instale um projeto a partir de VCS em um modo \"editável\". Para um "
"instrução completa da sintaxe, veja a seção do pip em :ref:`VCS Support <pip:"
"VCS Support>`."

#: ../source/tutorials/installing-packages.rst:506
msgid "Installing from other Indexes"
msgstr "Instalando a partir de outros índices"

#: ../source/tutorials/installing-packages.rst:508
msgid "Install from an alternate index"
msgstr "Instalar a partir de um índice alternativo"

#: ../source/tutorials/installing-packages.rst:522
msgid ""
"Search an additional index during install, in addition to :term:`PyPI "
"<Python Package Index (PyPI)>`"
msgstr ""
"Pesquise um índice adicional durante a instalação, além do :term:`PyPI "
"<Python Package Index (PyPI)>`"

#: ../source/tutorials/installing-packages.rst:538
msgid "Installing from a local src tree"
msgstr "Instalando a partir de uma árvore de fontes local"

#: ../source/tutorials/installing-packages.rst:541
msgid ""
"Installing from local src in :doc:`Development Mode <setuptools:userguide/"
"development_mode>`, i.e. in such a way that the project appears to be "
"installed, but yet is still editable from the src tree."
msgstr ""
"Instale a partir dos fontes locais em :doc:`Development Mode <setuptools:"
"userguide/development_mode>`, ou seja, de tal forma que o projeto parece "
"estar instalado, mas ainda seja editável a partir da árvore de fontes."

#: ../source/tutorials/installing-packages.rst:558
msgid "You can also install normally from src"
msgstr "Você também pode instalar normalmente a partir dos fontes"

#: ../source/tutorials/installing-packages.rst:573
msgid "Installing from local archives"
msgstr "Instalando de arquivos locais"

#: ../source/tutorials/installing-packages.rst:575
msgid "Install a particular source archive file."
msgstr "Instale um arquivo de pacote fonte em particular."

#: ../source/tutorials/installing-packages.rst:589
msgid ""
"Install from a local directory containing archives (and don't check :term:"
"`PyPI <Python Package Index (PyPI)>`)"
msgstr ""
"Instale de um pacote contendo diretório local (e não verifique o :term:`PyPI "
"<Python Package Index (PyPI)>`)"

#: ../source/tutorials/installing-packages.rst:609
msgid "Installing from other sources"
msgstr "Instalando a partir de outras fontes"

#: ../source/tutorials/installing-packages.rst:611
msgid ""
"To install from other data sources (for example Amazon S3 storage) you can "
"create a helper application that presents the data in a format compliant "
"with the :ref:`simple repository API <simple-repository-api>`:, and use the "
"``--extra-index-url`` flag to direct pip to use that index."
msgstr ""
"Para instalar a partir de outras fontes de dados (por exemplo, armazenamento "
"Amazon S3), você pode criar uma aplicação auxiliar que apresente os dados em "
"um formato compatível com a :ref:`API de repositório simples <simple-"
"repository-api>`, e usar o sinalizador ``--extra-index-url`` para direcionar "
"o pip para usar esse índice."

#: ../source/tutorials/installing-packages.rst:623
msgid "Installing Prereleases"
msgstr "Instalando pré-lançamentos"

#: ../source/tutorials/installing-packages.rst:625
msgid ""
"Find pre-release and development versions, in addition to stable versions.  "
"By default, pip only finds stable versions."
msgstr ""
"Encontre versões de pré-lançamento e desenvolvimento, além de versões "
"estáveis. Por padrão, pip só encontra versões estáveis."

#: ../source/tutorials/installing-packages.rst:641
msgid "Installing \"Extras\""
msgstr "Instalando \"Extras\""

#: ../source/tutorials/installing-packages.rst:643
msgid ""
"Extras are optional \"variants\" of a package, which may include additional "
"dependencies, and thereby enable additional functionality from the package.  "
"If you wish to install an extra for a package which you know publishes one, "
"you can include it in the pip installation command:"
msgstr ""
"Extras são \"variantes\" opcionais de um pacote, que podem incluir "
"dependências adicionais e, assim, habilitar funcionalidades adicionais do "
"pacote. Se você deseja instalar um extra para um pacote que você sabe que "
"publica um, você pode incluí-lo no comando de instalação pip:"

#: ../source/tutorials/installing-packages.rst:666
msgid ""
"\"Secure\" in this context means using a modern browser or a tool like :"
"command:`curl` that verifies SSL certificates when downloading from https "
"URLs."
msgstr ""
"\"Segurança\" neste contexto significa usar um navegador moderno ou uma "
"ferramenta como :command:`curl` que verifica os certificados SSL ao baixar "
"de URLs https."

#: ../source/tutorials/installing-packages.rst:675
msgid ""
"Beginning with Python 3.4, ``venv`` (a stdlib alternative to :ref:"
"`virtualenv`) will create virtualenv environments with ``pip`` pre-"
"installed, thereby making it an equal alternative to :ref:`virtualenv`."
msgstr ""
"Começando com Python 3.4, ``venv`` (uma alternativa à biblioteca padrão "
"para :ref:`virtualenv`) criará ambientes do virtualenv com ``pip`` pré-"
"instalado, tornando-o uma alternativa igual a :ref:`virtualenv`."

#: ../source/tutorials/installing-packages.rst:680
msgid ""
"The compatible release specifier was accepted in :pep:`440` and support was "
"released in :ref:`setuptools` v8.0 and :ref:`pip` v6.0"
msgstr ""
"O especificador de versão compatível foi aceito em :pep:`440` e o suporte "
"foi lançado em :ref:`setuptools` v8.0 e :ref:`pip` v6.0"

#: ../source/tutorials/managing-dependencies.rst:4
msgid "Managing Application Dependencies"
msgstr "Gerenciando dependências de aplicações"

#: ../source/tutorials/managing-dependencies.rst:6
msgid ""
"The :ref:`package installation tutorial <installing-packages>` covered the "
"basics of getting set up to install and update Python packages."
msgstr ""
"O :ref:`tutorial de instalação do pacote <installing-packages>` cobriu os "
"fundamentos da configuração para instalar e atualizar pacotes Python."

#: ../source/tutorials/managing-dependencies.rst:9
msgid ""
"However, running these commands interactively can get tedious even for your "
"own personal projects, and things get even more difficult when trying to set "
"up development environments automatically for projects with multiple "
"contributors."
msgstr ""
"No entanto, executar esses comandos interativamente pode se tornar tedioso "
"até mesmo para seus próprios projetos pessoais, e as coisas ficam ainda mais "
"difíceis ao tentar configurar ambientes de desenvolvimento automaticamente "
"para projetos com vários contribuidores."

#: ../source/tutorials/managing-dependencies.rst:13
msgid ""
"This tutorial walks you through the use of :ref:`Pipenv` to manage "
"dependencies for an application. It will show you how to install and use the "
"necessary tools and make strong recommendations on best practices."
msgstr ""
"Este tutorial orienta você no uso de :ref:`Pipenv` para gerenciar "
"dependências para uma aplicação. Ele mostrará como instalar e usar as "
"ferramentas necessárias e fará recomendações fortes sobre as melhores "
"práticas."

#: ../source/tutorials/managing-dependencies.rst:17
msgid ""
"Keep in mind that Python is used for a great many different purposes, and "
"precisely how you want to manage your dependencies may change based on how "
"you decide to publish your software. The guidance presented here is most "
"directly applicable to the development and deployment of network services "
"(including web applications), but is also very well suited to managing "
"development and testing environments for any kind of project."
msgstr ""
"Lembre-se de que Python é usado para muitos propósitos diferentes e, "
"precisamente, como você deseja gerenciar suas dependências pode mudar com "
"base em como você decide publicar seu software. A orientação apresentada "
"aqui é mais diretamente aplicável ao desenvolvimento e implantação de "
"serviços de rede (incluindo aplicações web), mas também é muito adequada "
"para gerenciar ambientes de desenvolvimento e teste para qualquer tipo de "
"projeto."

#: ../source/tutorials/managing-dependencies.rst:24
msgid ""
"For alternatives, see `Other Tools for Application Dependency Management`_."
msgstr ""
"Para alternativas, veja `Outras ferramentas para gerenciamento de "
"dependências de aplicações`_."

#: ../source/tutorials/managing-dependencies.rst:27
msgid "Installing Pipenv"
msgstr "Instalando Pipenv"

#: ../source/tutorials/managing-dependencies.rst:29
msgid ""
":ref:`Pipenv` is a dependency manager for Python projects. If you're "
"familiar with Node.js' `npm`_ or Ruby's `bundler`_, it is similar in spirit "
"to those tools. While :ref:`pip` alone is often sufficient for personal use, "
"Pipenv is recommended for collaborative projects as it's a higher-level tool "
"that simplifies dependency management for common use cases."
msgstr ""
":ref:`Pipenv` é um gerenciador de dependências para projetos Python. Se você "
"está familiarizado com o `npm`_ do Node.js ou o `bundler`_ do Ruby, é "
"semelhante em espírito a essas ferramentas. Enquanto :ref:`pip` por si só "
"costuma ser suficiente para uso pessoal, Pipenv é recomendado para projetos "
"colaborativos por ser uma ferramenta de nível superior que simplifica o "
"gerenciamento de dependências para casos de uso comuns."

#: ../source/tutorials/managing-dependencies.rst:35
msgid "Use ``pip`` to install Pipenv:"
msgstr "Use ``pip`` para instalar Pipenv:"

#: ../source/tutorials/managing-dependencies.rst:51
msgid ""
"This does a `user installation`_ to prevent breaking any system-wide "
"packages. If ``pipenv`` isn't available in your shell after installation, "
"you'll need to add the :py:data:`user base <python:site.USER_BASE>`'s binary "
"directory to your ``PATH``. See :ref:`Installing to the User Site` for more "
"information."
msgstr ""
"fIsso faz uma `instalação do usuário`_ para evitar quebrar qualquer pacote "
"do sistema. Se ``pipenv`` não estiver disponível em seu shell após a "
"instalação, você precisará adicionar o diretório binário da :py:data:`base "
"de usuário <python:site.USER_BASE>` ao seu ``PATH``. Veja :ref:`Instalando "
"no Site do Usuário <Installing to the User Site>` para mais informações."

#: ../source/tutorials/managing-dependencies.rst:62
msgid "Installing packages for your project"
msgstr "Instalando pacotes para seu projeto"

#: ../source/tutorials/managing-dependencies.rst:64
msgid ""
"Pipenv manages dependencies on a per-project basis. To install packages, "
"change into your project's directory (or just an empty directory for this "
"tutorial) and run:"
msgstr ""
"O Pipenv gerencia dependências por projeto. Para instalar pacotes, mude para "
"o diretório do seu projeto (ou apenas um diretório vazio para este tutorial) "
"e execute:"

#: ../source/tutorials/managing-dependencies.rst:73
msgid ""
"Pipenv will install the `Requests`_ library and create a ``Pipfile`` for you "
"in your project's directory. The :ref:`Pipfile` is used to track which "
"dependencies your project needs in case you need to re-install them, such as "
"when you share your project with others. You should get output similar to "
"this (although the exact paths shown will vary):"
msgstr ""
"Pipenv irá instalar a biblioteca `Requests`_ e criar um ``Pipfile`` para "
"você no diretório do seu projeto. O :ref:`Pipfile` é usado para rastrear "
"quais dependências seu projeto precisa no caso de você precisar reinstalá-"
"las, como quando você compartilha seu projeto com outras pessoas. Você deve "
"obter uma saída semelhante a esta (embora os caminhos exatos mostrados "
"variem):"

#: ../source/tutorials/managing-dependencies.rst:109
msgid "Using installed packages"
msgstr "Usando pacotes instalados"

#: ../source/tutorials/managing-dependencies.rst:111
msgid ""
"Now that Requests is installed you can create a simple :file:`main.py` file "
"to use it:"
msgstr ""
"Agora que Requests está instalado você pode criar um :file:`main.py` simples "
"para usá-lo:"

#: ../source/tutorials/managing-dependencies.rst:122
msgid "Then you can run this script using ``pipenv run``:"
msgstr "Então, você pode executar este script usando ``pipenv run``:"

#: ../source/tutorials/managing-dependencies.rst:128
msgid "You should get output similar to this:"
msgstr "Você deve obter uma saída similar a esta:"

#: ../source/tutorials/managing-dependencies.rst:134
msgid ""
"Using ``pipenv run`` ensures that your installed packages are available to "
"your script. It's also possible to spawn a new shell that ensures all "
"commands have access to your installed packages with ``pipenv shell``."
msgstr ""
"Usar ``pipenv run`` garante que seus pacotes instalados estejam disponíveis "
"para seu script. Também é possível gerar um novo shell que garante que todos "
"os comandos tenham acesso aos seus pacotes instalados com ``pipenv shell``."

#: ../source/tutorials/managing-dependencies.rst:140
#: ../source/tutorials/packaging-projects.rst:484
msgid "Next steps"
msgstr "Próximos passos"

#: ../source/tutorials/managing-dependencies.rst:142
msgid ""
"Congratulations, you now know how to effectively manage dependencies and "
"development environments on a collaborative Python project! ✨ 🍰 ✨"
msgstr ""
"Parabéns, agora você sabe como gerenciar dependências e ambientes de "
"desenvolvimento com eficácia em um projeto colaborativo Python! ✨ 🍰 ✨"

#: ../source/tutorials/managing-dependencies.rst:145
msgid ""
"If you're interested in creating and distributing your own Python packages, "
"see the :ref:`tutorial on packaging and distributing packages <distributing-"
"packages>`."
msgstr ""
"Se você estiver interessado em criar e distribuir seus próprios pacotes "
"Python, veja o :ref:`tutorial sobre empacotamento e distribuição de pacotes "
"<distributing-packages>`."

#: ../source/tutorials/managing-dependencies.rst:148
msgid ""
"Note that when your application includes definitions of Python source "
"packages, they (and their dependencies) can be added to your ``pipenv`` "
"environment with ``pipenv install -e <relative-path-to-source-directory>`` "
"(e.g. ``pipenv install -e .`` or ``pipenv install -e src``)."
msgstr ""
"Observe que quando sua aplicação inclui definições de pacotes fonte do "
"Python, elas (e suas dependências) podem ser adicionadas ao seu ambiente de "
"``pipenv`` com ``pipenv install -e <caminho-relativo-ao-diretório-fonte>`` "
"(por exemplo, ``pipenv install -e .`` ou ``pipenv install -e src``)."

#: ../source/tutorials/managing-dependencies.rst:157
msgid "Other Tools for Application Dependency Management"
msgstr "Outras ferramentas para gerenciamento de dependências de aplicações"

#: ../source/tutorials/managing-dependencies.rst:159
msgid ""
"If you find this particular approach to managing application dependencies "
"isn't working well for you or your use case, you may want to explore these "
"other tools and techniques, listed in alphabetical order, to see if one of "
"them is a better fit:"
msgstr ""
"Se você achar que essa abordagem específica para gerenciar dependências de "
"aplicações não está funcionando bem para você ou seu caso de uso, convém "
"explorar essas outras ferramentas e técnicas, listadas em ordem alfabética, "
"para ver se uma delas se encaixa melhor:"

#: ../source/tutorials/managing-dependencies.rst:163
msgid ""
"`hatch <https://github.com/pypa/hatch>`_ for opinionated coverage of even "
"more steps in the project management workflow, such as incrementing versions "
"and creating new skeleton projects from project templates."
msgstr ""
"`hatch <https://github.com/pypa/hatch>`_ para uma cobertura opinativa de "
"ainda mais etapas no fluxo de trabalho de gerenciamento de projeto, como "
"incrementar versões e criar novos projetos básicos a partir de modelos de "
"projeto."

#: ../source/tutorials/managing-dependencies.rst:166
msgid ""
"`micropipenv <https://github.com/thoth-station/micropipenv>`_ for a "
"lightweight wrapper around pip that supports ``requirements.txt``, Pipenv "
"and Poetry lock files, or converting them to pip-tools compatible output. "
"Designed for containerized Python applications, but not limited to them."
msgstr ""
"micropipenv <https://github.com/thoth-station/micropipenv>`_ para um "
"invólucro leve do pip que oferece suporte a ``requirements.txt``, arquivos "
"de bloqueio de Pipenv e de Poetry ou convertê-los em saída compatível com "
"pip-tools. Projetado para aplicações em contêineres Python, mas não se "
"limitando a elas."

#: ../source/tutorials/managing-dependencies.rst:170
#, fuzzy
msgid ""
"`PDM <https://github.com/pdm-project/pdm>`_ for a modern Python package "
"management relying on standards such as :pep:`517` and :pep:`621`."
msgstr ""
"`PDM <https://github.com/pdm-project/pdm>`_ para uma ferramenta moderna de "
"gerenciamento de pacotes Python que oferece suporte a :pep:`582` "
"(substituindo ambientes virtuais pelo diretório ``__pypackages__`` para "
"instalação de pacotes) e contando com padrões como :pep:`517` e :pep:`621`."

#: ../source/tutorials/managing-dependencies.rst:172
msgid ""
"`pip-tools <https://github.com/jazzband/pip-tools>`_ for creating a lock "
"file of all dependencies from a list of packages directly used in a project, "
"and ensuring that only those dependencies are installed."
msgstr ""
"`pip-tools <https://github.com/jazzband/pip-tools>`_ para criar um arquivo "
"de bloqueio de todas as dependências de uma lista de pacotes usados "
"diretamente em um projeto e garantir que apenas essas dependências estão "
"instalados."

#: ../source/tutorials/managing-dependencies.rst:175
msgid ""
"`Poetry <https://github.com/python-poetry/poetry>`__ for a tool comparable "
"in scope to Pipenv that focuses more directly on use cases where the project "
"being managed is structured as a distributable Python package with a valid "
"``pyproject.toml`` file. By contrast, Pipenv explicitly avoids making the "
"assumption that the application being worked on will support distribution as "
"a ``pip``-installable Python package."
msgstr ""
"`Poetry <https://github.com/python-poetry/poetry>`__ para uma ferramenta "
"comparável em escopo a Pipenv que se concentra mais diretamente em casos de "
"uso onde o projeto sendo gerenciado é estruturado como um pacote Python "
"distribuível com um arquivo ``pyproject.toml`` válido. Por outro lado, "
"Pipenv explicitamente evita fazer a suposição de que a aplicação na qual "
"está sendo trabalhada será compatível com a distribuição como um pacote "
"Python instalável com ``pip``."

#: ../source/tutorials/managing-dependencies.rst:180
msgid ""
"`uv <https://docs.astral.sh/uv/>`__ for a single tool that covers the entire "
"project management workflow, including dependency management, packaging, and "
"publishing."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:2
msgid "Packaging Python Projects"
msgstr "Empacotando projetos Python"

#: ../source/tutorials/packaging-projects.rst:4
msgid ""
"This tutorial walks you through how to package a simple Python project. It "
"will show you how to add the necessary files and structure to create the "
"package, how to build the package, and how to upload it to the Python "
"Package Index (PyPI)."
msgstr ""
"Este tutorial mostra como empacotar um projeto Python simples. Ele mostrará "
"como adicionar os arquivos e a estrutura necessários para criar o pacote, "
"como construir o pacote e como enviá-lo para o Índice de Pacotes do Python "
"(PyPI)."

#: ../source/tutorials/packaging-projects.rst:10
msgid ""
"If you have trouble running the commands in this tutorial, please copy the "
"command and its output, then `open an issue`_ on the `packaging-problems`_ "
"repository on GitHub. We'll do our best to help you!"
msgstr ""
"Se você tiver problemas para executar os comandos neste tutorial, copie o "
"comando e sua saída e, em seguida, `relate um problema`_ no repositório "
"`packaging-problems`_ no GitHub. Faremos o nosso melhor para ajudá-lo!"

#: ../source/tutorials/packaging-projects.rst:18
msgid ""
"Some of the commands require a newer version of :ref:`pip`, so start by "
"making sure you have the latest version installed:"
msgstr ""
"Alguns comandos exigem uma nova versão de :ref:`pip`, então comece "
"certificando-se de que você tenha a versão mais recente instalada:"

#: ../source/tutorials/packaging-projects.rst:35
msgid "A simple project"
msgstr "Um projeto simples"

#: ../source/tutorials/packaging-projects.rst:37
msgid ""
"This tutorial uses a simple project named "
"``example_package_YOUR_USERNAME_HERE``. If your username is ``me``, then the "
"package would be ``example_package_me``; this ensures that you have a unique "
"package name that doesn't conflict with packages uploaded by other people "
"following this tutorial. We recommend following this tutorial as-is using "
"this project, before packaging your own project."
msgstr ""
"Este tutorial usa um projeto simples chamado "
"``example_package_YOUR_USERNAME_HERE``. Se seu nome de usuário for ``me``, "
"então o pacote seria ``example_package_me``; isso garante que você tenha um "
"nome de pacote exclusivo que não entre em conflito com os pacotes carregados "
"por outras pessoas seguindo este tutorial. Recomendamos seguir este tutorial "
"como está usando este projeto, antes de empacotar seu próprio projeto."

#: ../source/tutorials/packaging-projects.rst:44
msgid "Create the following file structure locally:"
msgstr "Crie a seguinte estrutura de arquivos localmente:"

#: ../source/tutorials/packaging-projects.rst:54
msgid ""
"The directory containing the Python files should match the project name. "
"This simplifies the configuration and is more obvious to users who install "
"the package."
msgstr ""
"O diretório que contém os arquivos Python deve corresponder ao nome do "
"projeto. Isso simplifica a configuração e é mais óbvio para os usuários que "
"instalam o pacote."

#: ../source/tutorials/packaging-projects.rst:57
#, fuzzy
msgid ""
"Creating the file :file:`__init__.py` is recommended because the existence "
"of an :file:`__init__.py` file allows users to import the directory as a "
"regular package, even if (as is the case in this tutorial) :file:`__init__."
"py` is empty. [#namespace-packages]_"
msgstr ""
":file:`__init__.py` é necessário para importar o diretório como um pacote, e "
"deve estar vazio."

#: ../source/tutorials/packaging-projects.rst:62
msgid ""
":file:`example.py` is an example of a module within the package that could "
"contain the logic (functions, classes, constants, etc.) of your package. "
"Open that file and enter the following content:"
msgstr ""
":file:`example.py` é um exemplo de módulo dentro do pacote que pode conter a "
"lógica (funções, classes, constantes, etc.) do seu pacote. Abra esse arquivo "
"e insira o seguinte conteúdo:"

#: ../source/tutorials/packaging-projects.rst:71
msgid ""
"If you are unfamiliar with Python's :term:`modules <Module>` and :term:"
"`import packages <Import Package>`, take a few minutes to read over the "
"`Python documentation for packages and modules`_."
msgstr ""
"Se você não está familiarizado com :term:`módulos <Módulo>` e :term:`pacotes "
"de importação <Pacote de Importação>` do Python, reserve alguns minutos para "
"ler a `documentação do Python para pacotes e módulos`_."

#: ../source/tutorials/packaging-projects.rst:75
msgid ""
"Once you create this structure, you'll want to run all of the commands in "
"this tutorial within the ``packaging_tutorial`` directory."
msgstr ""
"Depois de criar esta estrutura, você desejará executar todos os comandos "
"neste tutorial dentro do diretório ``packaging_tutorial``."

#: ../source/tutorials/packaging-projects.rst:83
msgid "Creating the package files"
msgstr "Criando arquivos do pacote"

#: ../source/tutorials/packaging-projects.rst:85
msgid ""
"You will now add files that are used to prepare the project for "
"distribution. When you're done, the project structure will look like this:"
msgstr ""
"Agora você adicionará arquivos que são usados para preparar o projeto para "
"distribuição. Quando terminar, a estrutura do projeto ficará assim:"

#: ../source/tutorials/packaging-projects.rst:103
msgid "Creating a test directory"
msgstr "Criando um diretório de teste"

#: ../source/tutorials/packaging-projects.rst:105
msgid ":file:`tests/` is a placeholder for test files. Leave it empty for now."
msgstr ""
":file:`tests/` é um espaço reservado, ou *placeholder*, para arquivos de "
"teste. Deixe-o vazio por enquanto."

#: ../source/tutorials/packaging-projects.rst:111
msgid "Choosing a build backend"
msgstr "Escolhendo uma construção de backend"

#: ../source/tutorials/packaging-projects.rst:113
msgid ""
"Tools like :ref:`pip` and :ref:`build` do not actually convert your sources "
"into a :term:`distribution package <Distribution Package>` (like a wheel); "
"that job is performed by a :term:`build backend <Build Backend>`. The build "
"backend determines how your project will specify its configuration, "
"including metadata (information about the project, for example, the name and "
"tags that are displayed on PyPI) and input files. Build backends have "
"different levels of functionality, such as whether they support building :"
"term:`extension modules <Extension Module>`, and you should choose one that "
"suits your needs and preferences."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:122
#, fuzzy
msgid ""
"You can choose from a number of backends; this tutorial uses :ref:`Hatchling "
"<hatch>` by default, but it will work identically with :ref:`setuptools`, :"
"ref:`Flit <flit>`, :ref:`PDM <pdm>`, and others that support the "
"``[project]`` table for :ref:`metadata <configuring metadata>`."
msgstr ""
":file:`pyproject.toml` diz a ferramentas de construção \"frontend\" como :"
"ref:`pip` e :ref:`build` qual ferramenta \"backend\" usar para criar :term:"
"`pacotes de distribuição <Pacote de Distribuição>` para o seu projeto. Você "
"pode escolher entre vários backends; este tutorial usa :ref:`Hatchling "
"<hatch>` por padrão, mas funcionará de forma idêntica com :ref:"
"`setuptools`, :ref:`Flit <flit>`, :ref:`PDM <pdm>` e outros que oferecem "
"suporte à tabela ``[project]`` para :ref:`metadados <configuring metadata>`."

#: ../source/tutorials/packaging-projects.rst:129
msgid ""
"Some build backends are part of larger tools that provide a command-line "
"interface with additional features like project initialization and version "
"management, as well as building, uploading, and installing packages. This "
"tutorial uses single-purpose tools that work independently."
msgstr ""
"Alguns backends de construção fazem parte de ferramentas maiores que "
"fornecem uma interface de linha de comando com recursos adicionais, como "
"inicialização de projeto e gerenciamento de versão, além de construção, "
"envio e instalação de pacotes. Este tutorial usa ferramentas de propósito "
"único que funcionam de forma independente."

#: ../source/tutorials/packaging-projects.rst:134
#, fuzzy
msgid ""
"The :file:`pyproject.toml` tells :term:`build frontend <Build Frontend>` "
"tools like :ref:`pip` and :ref:`build` which backend to use for your "
"project. Below are some examples for common build backends, but check your "
"backend's own documentation for more details."
msgstr ""
":file:`pyproject.toml` informa as ferramentas de construção (como :ref:`pip` "
"e :ref:`build`) o que é necessário para construir seu projeto. Este tutorial "
"usa :ref:`setuptools`, então abra :file:`pyproject.toml` e insira o seguinte "
"conteúdo:"

#: ../source/tutorials/packaging-projects.rst:141
msgid ""
"The ``requires`` key is a list of packages that are needed to build your "
"package. The :term:`frontend <Build Frontend>` should install them "
"automatically when building your package. Frontends usually run builds in "
"isolated environments, so omitting dependencies here may cause build-time "
"errors. This should always include your backend's package, and might have "
"other build-time dependencies. The minimum version specified in the above "
"code block is the one that introduced support for :ref:`the new license "
"metadata <license-and-license-files>`."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:150
#, fuzzy
msgid ""
"The ``build-backend`` key is the name of the Python object that frontends "
"will use to perform the build."
msgstr ""
"``build-backend`` é o nome do objeto Python que os frontends usarão para "
"executar a construção."

#: ../source/tutorials/packaging-projects.rst:153
msgid ""
"Both of these values will be provided by the documentation for your build "
"backend, or generated by its command line interface. There should be no need "
"for you to customize these settings."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:157
msgid ""
"Additional configuration of the build tool will either be in a ``tool`` "
"section of the ``pyproject.toml``, or in a special file defined by the build "
"tool. For example, when using ``setuptools`` as your build backend, "
"additional configuration may be added to a ``setup.py`` or ``setup.cfg`` "
"file, and specifying ``setuptools.build_meta`` in your build allows the "
"tools to locate and use these automatically."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:167
msgid "Configuring metadata"
msgstr "Configurando metadados"

#: ../source/tutorials/packaging-projects.rst:169
msgid ""
"Open :file:`pyproject.toml` and enter the following content. Change the "
"``name`` to include your username; this ensures that you have a unique "
"package name that doesn't conflict with packages uploaded by other people "
"following this tutorial."
msgstr ""
"Abra :file:`pyproject.toml` e insira o seguinte conteúdo. Mude o ``name`` "
"para incluir seu nome de usuário; isso garante que você tenha um nome de "
"pacote exclusivo que não entre em conflito com os pacotes carregados por "
"outras pessoas que seguem este tutorial."

#: ../source/tutorials/packaging-projects.rst:196
msgid ""
"``name`` is the *distribution name* of your package. This can be any name as "
"long as it only contains letters, numbers, ``.``, ``_`` , and ``-``. It also "
"must not already be taken on PyPI. **Be sure to update this with your "
"username** for this tutorial, as this ensures you won't try to upload a "
"package with the same name as one which already exists."
msgstr ""
"``name`` é o *nome da distribuição* do seu pacote. Pode ser qualquer nome, "
"desde que contenha apenas letras, números, ``.``, ``_`` e ``-``. Também não "
"deve ser feito em PyPI. **Certifique-se de atualizá-lo com seu nome de "
"usuário** para este tutorial, pois isso garante que você não tentará enviar "
"um pacote com o mesmo nome de um que já existe."

#: ../source/tutorials/packaging-projects.rst:201
#, fuzzy
msgid ""
"``version`` is the package version. (Some build backends allow it to be "
"specified another way, such as from a file or Git tag.)"
msgstr ""
"``version`` é a versão do pacote. Veja a :ref:`especificação de "
"especificadores de versão <version-specifiers>` para mais detalhes sobre as "
"versões. Alguns backends de construção permitem que ela seja especificada de "
"outra maneira, como a partir de um arquivo ou de uma tag git."

#: ../source/tutorials/packaging-projects.rst:203
msgid ""
"``authors`` is used to identify the author of the package; you specify a "
"name and an email for each author. You can also list ``maintainers`` in the "
"same format."
msgstr ""
"``authors`` é usado para identificar o autor do pacote; você especifica um "
"nome e um e-mail para cada autor. Você também pode listar ``maintainers`` no "
"mesmo formato."

#: ../source/tutorials/packaging-projects.rst:206
msgid "``description`` is a short, one-sentence summary of the package."
msgstr "``description`` é um resumo curto do pacote contendo apenas uma frase."

#: ../source/tutorials/packaging-projects.rst:207
#, fuzzy
msgid ""
"``readme`` is a path to a file containing a detailed description of the "
"package. This is shown on the package detail page on PyPI. In this case, the "
"description is loaded from :file:`README.md` (which is a common pattern). "
"There also is a more advanced table form described in the :ref:`pyproject."
"toml guide <writing-pyproject-toml>`."
msgstr ""
"``readme`` é um caminho para um arquivo contendo uma descrição detalhada do "
"pacote. Isso é mostrado na página de detalhes do pacote em PyPI. Neste caso, "
"a descrição é carregada de :file:`README.md` (que é um padrão comum). Há "
"também um formulário de tabela mais avançado descrito na :ref:`especificação "
"de metadados do projeto <declaring-project-metadata>`."

#: ../source/tutorials/packaging-projects.rst:212
#, fuzzy
msgid ""
"``requires-python`` gives the versions of Python supported by your project. "
"An installer like :ref:`pip` will look back through older versions of "
"packages until it finds one that has a matching Python version."
msgstr ""
"``requires-python`` fornece as versões do Python suportadas pelo seu "
"projeto. Instaladores como :ref:`pip` olharão para as versões anteriores dos "
"pacotes até encontrar um que tenha uma versão correspondente do Python."

#: ../source/tutorials/packaging-projects.rst:215
#, fuzzy
#| msgid ""
#| "``classifiers`` gives the index and :ref:`pip` some additional metadata "
#| "about your package. In this case, the package is only compatible with "
#| "Python 3, is licensed under the MIT license, and is OS-independent. You "
#| "should always include at least which version(s) of Python your package "
#| "works on, which license your package is available under, and which "
#| "operating systems your package will work on. For a complete list of "
#| "classifiers, see https://pypi.org/classifiers/."
msgid ""
"``classifiers`` gives the index and :ref:`pip` some additional metadata "
"about your package. In this case, the package is only compatible with Python "
"3 and is OS-independent. You should always include at least which version(s) "
"of Python your package works on and which operating systems your package "
"will work on. For a complete list of classifiers, see https://pypi.org/"
"classifiers/."
msgstr ""
"``classifiers`` fornece o índice e :ref:`pip` alguns metadados adicionais "
"sobre seu pacote. Nesse caso, o pacote é compatível apenas com Python 3, "
"está licenciado sob a licença MIT e é independente do sistema operacional. "
"Você deve sempre incluir pelo menos a(s) versão(ões) do Python em que seu "
"pacote funciona, em que licença seu pacote está disponível e em quais "
"sistemas operacionais seu pacote funcionará. Para obter uma lista completa "
"de classificadores, consulte https://pypi.org/classifiers/."

#: ../source/tutorials/packaging-projects.rst:222
msgid ""
"``license`` is the :term:`SPDX license expression <License Expression>` of "
"your package."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:224
#, fuzzy
#| msgid ""
#| "Now run this command from the same directory where :file:`pyproject.toml` "
#| "is located:"
msgid ""
"``license-files`` is the list of glob paths to the license files, relative "
"to the directory where :file:`pyproject.toml` is located."
msgstr ""
"Agora, execute este comando a partir do mesmo diretório no qual :file:"
"`pyproject.toml` está localizado:"

#: ../source/tutorials/packaging-projects.rst:226
msgid ""
"``urls`` lets you list any number of extra links to show on PyPI. Generally "
"this could be to the source, documentation, issue trackers, etc."
msgstr ""
"``urls`` permite listar qualquer número de links extras para mostrar no "
"PyPI. Geralmente, isso pode ser para o código-fonte, a documentação, os "
"rastreadores de problemas, etc."

#: ../source/tutorials/packaging-projects.rst:229
#, fuzzy
msgid ""
"See the :ref:`pyproject.toml guide <writing-pyproject-toml>` for details on "
"these and other fields that can be defined in the ``[project]`` table. Other "
"common fields are ``keywords`` to improve discoverability and the "
"``dependencies`` that are required to install your package."
msgstr ""
"Veja a :ref:`especificação de metadados do projeto <declaring-project-"
"metadata>` para detalhes sobre estes e outros campos que podem ser definidos "
"na tabela ``[project]``. Outros campos comuns são ``keywords`` para melhorar "
"a descoberta e as ``dependencies`` que são necessárias para instalar seu "
"pacote."

#: ../source/tutorials/packaging-projects.rst:236
msgid "Creating README.md"
msgstr "Criando README.md"

#: ../source/tutorials/packaging-projects.rst:238
msgid ""
"Open :file:`README.md` and enter the following content. You can customize "
"this if you'd like."
msgstr ""
"Abra :file:`README.md` e insira o seguinte conteúdo. Você pode personalizar "
"isso se desejar."

#: ../source/tutorials/packaging-projects.rst:251
msgid "Creating a LICENSE"
msgstr "Criando um LICENSE"

#: ../source/tutorials/packaging-projects.rst:253
msgid ""
"It's important for every package uploaded to the Python Package Index to "
"include a license. This tells users who install your package the terms under "
"which they can use your package. For help picking a license, see https://"
"choosealicense.com/. Once you have chosen a license, open :file:`LICENSE` "
"and enter the license text. For example, if you had chosen the MIT license:"
msgstr ""
"É importante que cada pacote enviado para o Índice de Pacotes do Python "
"inclua uma licença. Isso informa aos usuários que instalam seu pacote os "
"termos sob os quais eles podem usá-lo. Para obter ajuda na escolha de uma "
"licença, consulte https://choosealicense.com/. Depois de escolher uma "
"licença, abra :file:`LICENSE` e digite o texto da licença. Por exemplo, se "
"você escolheu a licença MIT:"

#: ../source/tutorials/packaging-projects.rst:282
msgid ""
"Most build backends automatically include license files in packages. See "
"your backend's documentation for more details. If you include the path to "
"license in the ``license-files`` key of :file:`pyproject.toml`, and your "
"build backend supports :pep:`639`, the file will be automatically included "
"in the package."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:290
msgid "Including other files"
msgstr "Incluindo outros arquivos"

#: ../source/tutorials/packaging-projects.rst:292
msgid ""
"The files listed above will be included automatically in your :term:`source "
"distribution <Source Distribution (or \"sdist\")>`. If you want to include "
"additional files, see the documentation for your build backend."
msgstr ""
"Os arquivos listados acima serão incluídos automaticamente em sua :term:"
"`distribuição fonte <Distribuição Fonte (ou \"sdist\")>`. Se você deseja "
"incluir arquivos adicionais, veja a documentação para seu backend de "
"construção."

#: ../source/tutorials/packaging-projects.rst:299
msgid "Generating distribution archives"
msgstr "Gerando arquivos de distribuição"

#: ../source/tutorials/packaging-projects.rst:301
msgid ""
"The next step is to generate :term:`distribution packages <Distribution "
"Package>` for the package. These are archives that are uploaded to the "
"Python Package Index and can be installed by :ref:`pip`."
msgstr ""
"O próximo passo é gerar :term:`pacotes de distribuição <Pacote de "
"Distribuição>` para o pacote. Estes são arquivos que são enviados para o "
"Índice de Pacotes do Python e podem ser instalados pelo :ref:`pip`."

#: ../source/tutorials/packaging-projects.rst:305
msgid "Make sure you have the latest version of PyPA's :ref:`build` installed:"
msgstr ""
"Certifique-se de que você tenha a versão mais recente da :ref:`construção "
"<build>` do PyPA instalada:"

#: ../source/tutorials/packaging-projects.rst:319
msgid ""
"If you have trouble installing these, see the :doc:`installing-packages` "
"tutorial."
msgstr ""
"Se você tiver problemas ao instalá-los, veja o tutorial :doc:`installing-"
"packages`."

#: ../source/tutorials/packaging-projects.rst:322
msgid ""
"Now run this command from the same directory where :file:`pyproject.toml` is "
"located:"
msgstr ""
"Agora, execute este comando a partir do mesmo diretório no qual :file:"
"`pyproject.toml` está localizado:"

#: ../source/tutorials/packaging-projects.rst:336
msgid ""
"This command should output a lot of text and once completed should generate "
"two files in the :file:`dist` directory:"
msgstr ""
"Este comando deve produzir muito texto e, uma vez concluído, deve gerar dois "
"arquivos no diretório :file:`dist`:"

#: ../source/tutorials/packaging-projects.rst:346
msgid ""
"The ``tar.gz`` file is a :term:`source distribution <Source Distribution (or "
"\"sdist\")>` whereas the ``.whl`` file is a :term:`built distribution <Built "
"Distribution>`. Newer :ref:`pip` versions preferentially install built "
"distributions, but will fall back to source distributions if needed. You "
"should always upload a source distribution and provide built distributions "
"for the platforms your project is compatible with. In this case, our example "
"package is compatible with Python on any platform so only one built "
"distribution is needed."
msgstr ""
"O arquivo ``tar.gz`` é um :term:`distribuição fonte <Distribuição Fonte (ou "
"\"sdist\")>` enquanto o arquivo ``.whl`` é uma :term:`distribuição "
"construída <Distribuição Construída>`. As versões :ref:`pip` mais recentes "
"instalam preferencialmente distribuições construídas, mas irão recorrer às "
"distribuições fonte se necessário. Você deve sempre enviar uma distribuição "
"fonte e fornecer distribuições construídas para as plataformas com as quais "
"seu projeto é compatível. Neste caso, nosso pacote de exemplo é compatível "
"com Python em qualquer plataforma, portanto, apenas uma distribuição "
"construída é necessária."

#: ../source/tutorials/packaging-projects.rst:355
msgid "Uploading the distribution archives"
msgstr "Enviando os arquivos de distribuição"

#: ../source/tutorials/packaging-projects.rst:357
msgid "Finally, it's time to upload your package to the Python Package Index!"
msgstr ""
"Finalmente, é hora de enviar seu pacote para o Índice de Pacotes do Python!"

#: ../source/tutorials/packaging-projects.rst:359
msgid ""
"The first thing you'll need to do is register an account on TestPyPI, which "
"is a separate instance of the package index intended for testing and "
"experimentation. It's great for things like this tutorial where we don't "
"necessarily want to upload to the real index. To register an account, go to "
"https://test.pypi.org/account/register/ and complete the steps on that page. "
"You will also need to verify your email address before you're able to upload "
"any packages.  For more details, see :doc:`/guides/using-testpypi`."
msgstr ""
"A primeira coisa que você precisa fazer é registrar uma conta no Test PyPI, "
"que é uma instância separada do índice do pacote destinada a teste e "
"experimentação. É ótimo para coisas como este tutorial, em que não queremos "
"necessariamente enviar para o índice real. Para registrar uma conta, vá em "
"https://test.pypi.org/account/register/ e conclua as etapas nessa página. "
"Você também precisará verificar seu endereço de e-mail antes de enviar "
"qualquer pacote. Para mais detalhes, veja :doc:`/guides/using-testpypi`."

#: ../source/tutorials/packaging-projects.rst:367
msgid ""
"To securely upload your project, you'll need a PyPI `API token`_. Create one "
"at https://test.pypi.org/manage/account/#api-tokens, setting the \"Scope\" "
"to \"Entire account\". **Don't close the page until you have copied and "
"saved the token — you won't see that token again.**"
msgstr ""
"Para enviar seu projeto com segurança, você precisará de um `token de API`_ "
"do PyPI. Crie um em https://test.pypi.org/manage/account/#api-tokens, "
"definindo o \"Escopo\" como \"Toda a conta\". **Não feche a página antes de "
"copiar e salvar o token -- você não verá o token novamente.**"

#: ../source/tutorials/packaging-projects.rst:374
msgid ""
"Now that you are registered, you can use :ref:`twine` to upload the "
"distribution packages. You'll need to install Twine:"
msgstr ""
"Agora que você está registrado, você pode usar :ref:`twine` para enviar os "
"pacotes de distribuição. Você precisará instalar o Twine:"

#: ../source/tutorials/packaging-projects.rst:389
msgid ""
"Once installed, run Twine to upload all of the archives under :file:`dist`:"
msgstr ""
"Uma vez instalado, execute o Twine para enviar de todos os arquivos em :file:"
"`dist`:"

#: ../source/tutorials/packaging-projects.rst:403
msgid ""
"You will be prompted for an API token. Use the token value, including the "
"``pypi-`` prefix. Note that the input will be hidden, so be sure to paste "
"correctly."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:406
msgid "After the command completes, you should see output similar to this:"
msgstr ""
"Depois que o comando for concluído, você deverá ver uma saída semelhante a "
"esta:"

#: ../source/tutorials/packaging-projects.rst:417
msgid ""
"Once uploaded, your package should be viewable on TestPyPI; for example: "
"``https://test.pypi.org/project/example_package_YOUR_USERNAME_HERE``."
msgstr ""
"Depois de enviado, seu pacote pode ser visto no Test PyPI; por exemplo: "
"``https://test.pypi.org/project/example_package_YOUR_USERNAME_HERE``."

#: ../source/tutorials/packaging-projects.rst:422
msgid "Installing your newly uploaded package"
msgstr "Instalando seu pacote recém-enviado"

#: ../source/tutorials/packaging-projects.rst:424
msgid ""
"You can use :ref:`pip` to install your package and verify that it works. "
"Create a :ref:`virtual environment <Creating and using Virtual "
"Environments>` and install your package from TestPyPI:"
msgstr ""
"Você pode usar o :ref:`pip` para instalar seu pacote e verificar se ele "
"funciona. Crie um :ref:`ambiente virtual <Creating and using Virtual "
"Environments>` e instale seu pacote a partir do Test PyPI:"

#: ../source/tutorials/packaging-projects.rst:440
msgid "Make sure to specify your username in the package name!"
msgstr "Certifique-se de especificar seu nome de usuário no nome do pacote!"

#: ../source/tutorials/packaging-projects.rst:442
msgid ""
"pip should install the package from TestPyPI and the output should look "
"something like this:"
msgstr ""
"pip deve instalar o pacote de Test PyPI e a saída deve ser semelhante a esta:"

#: ../source/tutorials/packaging-projects.rst:452
msgid ""
"This example uses ``--index-url`` flag to specify TestPyPI instead of live "
"PyPI. Additionally, it specifies ``--no-deps``. Since TestPyPI doesn't have "
"the same packages as the live PyPI, it's possible that attempting to install "
"dependencies may fail or install something unexpected. While our example "
"package doesn't have any dependencies, it's a good practice to avoid "
"installing dependencies when using TestPyPI."
msgstr ""
"Este exemplo usa o sinalizador ``--index-url`` para especificar Test PyPI em "
"vez do PyPI real. Além disso, ele especifica ``--no-deps``. Como o Test PyPI "
"não tem os mesmos pacotes que o PyPI real, é possível que a tentativa de "
"instalação de dependências falhe ou instale algo inesperado. Embora nosso "
"pacote de exemplo não tenha nenhuma dependência, é uma boa prática evitar "
"instalar dependências ao usar o Test PyPI."

#: ../source/tutorials/packaging-projects.rst:459
msgid ""
"You can test that it was installed correctly by importing the package. Make "
"sure you're still in your virtual environment, then run Python:"
msgstr ""
"Você pode testar se ele foi instalado corretamente importando o pacote. "
"Certifique-se de que ainda está em seu ambiente virtual e execute o Python:"

#: ../source/tutorials/packaging-projects.rst:474
msgid "and import the package:"
msgstr "e importe o pacote:"

#: ../source/tutorials/packaging-projects.rst:486
msgid ""
"**Congratulations, you've packaged and distributed a Python project!** ✨ 🍰 "
"✨"
msgstr "**Parabéns, você empacotou e distribuiu um projeto Python!** ✨ 🍰 ✨"

#: ../source/tutorials/packaging-projects.rst:489
msgid ""
"Keep in mind that this tutorial showed you how to upload your package to "
"Test PyPI, which isn't a permanent storage. The Test system occasionally "
"deletes packages and accounts. It is best to use TestPyPI for testing and "
"experiments like this tutorial."
msgstr ""
"Lembre-se de que este tutorial mostrou como enviar o seu pacote para Test "
"PyPI, que não é um armazenamento permanente. O sistema de teste "
"ocasionalmente exclui pacotes e contas. É melhor usar Test PyPI para testes "
"e experimentos como este tutorial."

#: ../source/tutorials/packaging-projects.rst:494
msgid ""
"When you are ready to upload a real package to the Python Package Index you "
"can do much the same as you did in this tutorial, but with these important "
"differences:"
msgstr ""
"Quando estiver pronto para carregar um pacote real para o Índice de Pacotes "
"do Python, você pode fazer quase o mesmo que fez neste tutorial, mas com "
"estas diferenças importantes:"

#: ../source/tutorials/packaging-projects.rst:498
msgid ""
"Choose a memorable and unique name for your package. You don't have to "
"append your username as you did in the tutorial, but you can't use an "
"existing name."
msgstr ""
"Escolha um nome único e memorável para o seu pacote. Você não precisa "
"acrescentar seu nome de usuário como fez no tutorial, mas você não pode usar "
"um nome existente."

#: ../source/tutorials/packaging-projects.rst:500
msgid ""
"Register an account on https://pypi.org - note that these are two separate "
"servers and the login details from the test server are not shared with the "
"main server."
msgstr ""
"Registre uma conta em https://pypi.org -- observe que esses são dois "
"servidores separados e os detalhes de login do servidor de teste não são "
"compartilhados com o servidor principal."

#: ../source/tutorials/packaging-projects.rst:503
msgid ""
"Use ``twine upload dist/*`` to upload your package and enter your "
"credentials for the account you registered on the real PyPI.  Now that "
"you're uploading the package in production, you don't need to specify ``--"
"repository``; the package will upload to https://pypi.org/ by default."
msgstr ""
"Use ``twine upload dist/*`` para enviar seu pacote e insira suas credenciais "
"para a conta que você registrou no PyPI real. Agora que você está enviando o "
"pacote em produção, você não precisa especificar ``--repository``; o pacote "
"será enviado para https://pypi.org/ por padrão."

#: ../source/tutorials/packaging-projects.rst:507
msgid ""
"Install your package from the real PyPI using ``python3 -m pip install [your-"
"package]``."
msgstr ""
"Instale seu pacote a partir do PyPI real usando ``python3 -m pip install "
"[seu-pacote]``."

#: ../source/tutorials/packaging-projects.rst:509
msgid ""
"At this point if you want to read more on packaging Python libraries here "
"are some things you can do:"
msgstr ""
"Neste ponto, se você quiser ler mais sobre o empacotamento de bibliotecas "
"Python, aqui estão algumas coisas que você pode fazer:"

#: ../source/tutorials/packaging-projects.rst:512
msgid ""
"Read about advanced configuration for your chosen build backend: `Hatchling "
"<hatchling-config_>`_, :doc:`setuptools <setuptools:userguide/"
"pyproject_config>`, :doc:`Flit <flit:pyproject_toml>`, `PDM <pdm-config_>`_."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:516
msgid ""
"Look at the :doc:`guides </guides/index>` on this site for more advanced "
"practical information, or the :doc:`discussions </discussions/index>` for "
"explanations and background on specific topics."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:519
msgid ""
"Consider packaging tools that provide a single command-line interface for "
"project management and packaging, such as :ref:`hatch`, :ref:`flit`, :ref:"
"`pdm`, and :ref:`poetry`."
msgstr ""
"Considere as ferramentas de empacotamento que fornecem uma única interface "
"de linha de comando para gerenciamento e empacotamento de projetos, como :"
"ref:`hatch`, :ref:`flit`, :ref:`pdm` e :ref:`poetry`."

#: ../source/tutorials/packaging-projects.rst:527
msgid "Notes"
msgstr "Notas"

#: ../source/tutorials/packaging-projects.rst:529
msgid ""
"Technically, you can also create Python packages without an ``__init__.py`` "
"file, but those are called :doc:`namespace packages </guides/packaging-"
"namespace-packages>` and considered an **advanced topic** (not covered in "
"this tutorial). If you are only getting started with Python packaging, it is "
"recommended to stick with *regular packages* and ``__init__.py`` (even if "
"the file is empty)."
msgstr ""

#~ msgid "`Vagrant <https://www.vagrantup.com/>`_"
#~ msgstr "`Vagrant <https://www.vagrantup.com/>`_"

#, fuzzy
#~| msgid ":ref:`pyproject-toml-spec`"
#~ msgid "**Inspiration**: :ref:`  pyproject-tool-table`"
#~ msgstr ":ref:`pyproject-toml-spec`"

#~ msgid "Signing the distribution packages"
#~ msgstr "Assinando os pacotes de distribuição"

#~ msgid ""
#~ "The following job signs the distribution packages with `Sigstore`_, the "
#~ "same artifact signing system `used to sign CPython <https://www.python."
#~ "org/download/sigstore/>`_."
#~ msgstr ""
#~ "O trabalho a seguir assina os pacotes de distribuição com `Sigstore`_, o "
#~ "mesmo sistema de assinatura de artefato `usado para assinar o CPython "
#~ "<https://www.python.org/download/sigstore/>`_."

#~ msgid ""
#~ "Firstly, it uses the `sigstore/gh-action-sigstore-python GitHub Action`_ "
#~ "to sign the distribution packages. In the next step, an empty GitHub "
#~ "Release from the current tag is created using the ``gh`` CLI. Note this "
#~ "step can be further customised. See the `gh release documentation "
#~ "<https://cli.github.com/manual/gh_release>`_ as a reference."
#~ msgstr ""
#~ "Em primeiro lugar, ele usa `sigstore/gh-action-sigstore-python do GitHub "
#~ "Action`_ para assinar os pacotes de distribuição. Na próxima etapa, uma "
#~ "versão vazia do GitHub da tag atual é criada usando a CLI ``gh``. Observe "
#~ "que esta etapa pode ser ainda mais personalizada. Consulte a "
#~ "`documentação de lançamento do gh <https://cli.github.com/manual/"
#~ "gh_release>`_ como referência."

#~ msgid ""
#~ "You may need to manage your ``GITHUB_TOKEN`` permissions to enable "
#~ "creating the GitHub Release. See the `GitHub documentation <https://docs."
#~ "github.com/repositories/managing-your-repositorys-settings-and-features/"
#~ "enabling-features-for-your-repository/managing-github-actions-settings-"
#~ "for-a-repository#configuring-the-default-github_token-permissions>`_ for "
#~ "instructions. Specifically, the token needs the ``contents: write`` "
#~ "permission."
#~ msgstr ""
#~ "Pode ser necessário gerenciar suas permissões do ``GITHUB_TOKEN`` para "
#~ "permitir a criação da versão do GitHub. Consulte a `documentação do "
#~ "GitHub <https://docs.github.com/repositories/managing-your-repositorys-"
#~ "settings-and-features/enabling-features-for-your-repository/managing-"
#~ "github-actions-settings-for-a-repository#configuring-the-default-"
#~ "github_token-permissions>`_ para obter instruções. Especificamente, o "
#~ "token precisa da permissão ``contents: write``."

#~ msgid ""
#~ "Finally, the signed distributions are uploaded to the GitHub Release."
#~ msgstr ""
#~ "Finalmente, as distribuições assinadas são enviadas para o GitHub Release."

#~ msgid ""
#~ "This is a replacement for GPG signatures, for which support has been "
#~ "`removed from PyPI <https://blog.pypi.org/posts/2023-05-23-removing-pgp/"
#~ ">`_. However, this job is not mandatory for uploading to PyPI and can be "
#~ "omitted."
#~ msgstr ""
#~ "Este é um substituto para assinaturas GPG, para as quais o suporte foi "
#~ "`removido do PyPI <https://blog.pypi.org/posts/2023-05-23-removing-pgp/"
#~ ">`_. No entanto, este trabalho não é obrigatório para o envio para PyPI e "
#~ "pode ser omitido."

#, fuzzy
#~| msgid ""
#~| "This can take two forms. You can put your license in a file, typically "
#~| "``LICENSE`` or ``LICENSE.txt``, and link that file here:"
#~ msgid ""
#~ "This can take two forms. You can put your license in a file, typically :"
#~ "file:`LICENSE` or :file:`LICENSE.txt`, and link that file here:"
#~ msgstr ""
#~ "Isto pode tomar duas formas. Você pode colocar sua licença em um arquivo, "
#~ "tipicamente ``LICENSE`` ou ``LICENSE.txt``, e vincular esse arquivo aqui:"

#~ msgid "or you can write the name of the license:"
#~ msgstr "ou você pode escrever o nome da licença:"

#, fuzzy
#~ msgid ""
#~ "If you are using a standard, well-known license, it is not necessary to "
#~ "use this field. Instead, you should use one of the :ref:`classifiers` "
#~ "starting with ``License ::``. (As a general rule, it is a good idea to "
#~ "use a standard, well-known license, both to avoid confusion and because "
#~ "some organizations avoid software whose license is unapproved.)"
#~ msgstr ""
#~ "O argumento ``license`` é mais comumente usado para indicar diferenças de "
#~ "licenças conhecidas ou para incluir sua própria licença exclusiva. Como "
#~ "regra geral, é uma boa ideia usar uma licença padrão bem conhecida, tanto "
#~ "para evitar confusão quanto porque algumas organizações evitam software "
#~ "cuja licença não é aprovada."

#, fuzzy
#~ msgid "Additional file information"
#~ msgstr "Notas adicionais"

#~ msgid ""
#~ "Most build backends automatically include license files in packages. See "
#~ "your backend's documentation for more details."
#~ msgstr ""
#~ "A maioria dos backends de construção inclui automaticamente arquivos de "
#~ "licença em pacotes. Consulte a documentação do seu backend para obter "
#~ "mais detalhes."

#~ msgid ""
#~ "conda is the package management tool for `Anaconda <https://docs.anaconda."
#~ "com/anaconda/>`__ Python installations. Anaconda Python is a distribution "
#~ "from `Anaconda, Inc <https://www.anaconda.com/products/individual>`__ "
#~ "specifically aimed at the scientific community, and in particular on "
#~ "Windows where the installation of binary extensions is often difficult."
#~ msgstr ""
#~ "conda é a ferramenta de gerenciamento de pacotes para as instalações do "
#~ "`Anaconda <https://docs.anaconda.com/anaconda/>`__ Python . Anaconda "
#~ "Python é uma distribuição do `Anaconda, Inc <https://www.anaconda.com/"
#~ "products/individual>`__ voltada especificamente para a comunidade "
#~ "científica, e em particular no Windows onde a instalação de extensões "
#~ "binárias é frequentemente difícil ."

#~ msgid ""
#~ "You will be prompted for a username and password. For the username, use "
#~ "``__token__``. For the password, use the token value, including the "
#~ "``pypi-`` prefix."
#~ msgstr ""
#~ "Você será solicitado a fornecer um nome de usuário e uma senha. Para o "
#~ "nome de usuário, use ``__token__``. Para a senha, use o valor do token, "
#~ "incluindo o prefixo ``pypi-``."

#~ msgid "Update this page for build backends other than setuptools."
#~ msgstr "Atualizar esta página para construir backends além do setuptools."

#~ msgid ""
#~ "Read the file in :file:`setup.py` and get the version. Example (from `pip "
#~ "setup.py <https://github.com/pypa/pip/blob/003c7ac/setup.py>`_)::"
#~ msgstr ""
#~ "Leia o arquivo em :file:`setup.py` e obtenha a versão. Exemplo (do `setup."
#~ "py do pip <https://github.com/pypa/pip/blob/003c7ac/setup.py>`_)::"

#~ msgid ""
#~ "As of the release of setuptools 46.4.0, one can accomplish the same thing "
#~ "by instead placing the following in the project's :file:`setup.cfg` file "
#~ "(replacing \"package\" with the import name of the package):"
#~ msgstr ""
#~ "A partir do lançamento do setuptools 46.4.0, pode-se realizar a mesma "
#~ "coisa colocando o seguinte no arquivo :file:`setup.cfg` do projeto "
#~ "(substituindo \"pacote\" pelo nome de importação do pacote):"

#~ msgid ""
#~ "As of the release of setuptools 61.0.0, one can specify the version "
#~ "dynamically in the project's :file:`pyproject.toml` file."
#~ msgstr ""
#~ "A partir do lançamento do setuptools 61.0.0, pode-se especificar a versão "
#~ "dinamicamente no arquivo :file:`pyproject.toml` do projeto."

#~ msgid ""
#~ "Please be aware that declarative config indicators, including the ``attr:"
#~ "`` directive, are not supported in parameters to :file:`setup.py`."
#~ msgstr ""
#~ "Esteja ciente de que os indicadores de configuração declarativos, "
#~ "incluindo a diretiva ``attr:``, não são suportados em parâmetros para :"
#~ "file:`setup.py`."

#~ msgid ""
#~ "Use an external build tool that either manages updating both locations, "
#~ "or offers an API that both locations can use."
#~ msgstr ""
#~ "Use uma ferramenta de construção externa que gerencia a atualização de "
#~ "ambos os locais ou oferece uma API que ambos os locais podem usar."

#~ msgid ""
#~ "Few tools you could use, in no particular order, and not necessarily "
#~ "complete: `bump2version <https://pypi.org/project/bump2version>`_, "
#~ "`changes <https://pypi.org/project/changes>`_, `commitizen <https://pypi."
#~ "org/project/commitizen>`_, `zest.releaser <https://pypi.org/project/zest."
#~ "releaser>`_."
#~ msgstr ""
#~ "Poucas ferramentas que você poderia usar, sem nenhuma ordem específica, e "
#~ "não necessariamente completas: `bump2version <https://pypi.org/project/"
#~ "bump2version>`_, `changes <https://pypi.org/project/changes>`_, "
#~ "`commitizen <https://pypi.org/project/commitizen>`_, `zest.releaser "
#~ "<https://pypi.org/project/zest.releaser>`_."

#~ msgid ""
#~ "Set the value to a ``__version__`` global variable in a dedicated module "
#~ "in your project (e.g. :file:`version.py`), then have :file:`setup.py` "
#~ "read and ``exec`` the value into a variable."
#~ msgstr ""
#~ "Defina o valor para uma variável global ``__version__`` em um módulo "
#~ "dedicado em seu projeto (por exemplo, :file:`version.py`), então faça com "
#~ "que :file:`setup.py` leia e execute (``exec``) o valor em uma variável."

#~ msgid ""
#~ "Example using this technique: `warehouse <https://github.com/pypa/"
#~ "warehouse/blob/64ca42e42d5613c8339b3ec5e1cb7765c6b23083/warehouse/"
#~ "__about__.py>`_."
#~ msgstr ""
#~ "Exemplo usando esta técnica: `warehouse <https://github.com/pypa/"
#~ "warehouse/blob/64ca42e42d5613c8339b3ec5e1cb7765c6b23083/warehouse/"
#~ "__about__.py>`_."

#~ msgid ""
#~ "Place the value in a simple ``VERSION`` text file and have both :file:"
#~ "`setup.py` and the project code read it."
#~ msgstr ""
#~ "Coloque o valor em um arquivo de texto simples ``VERSION`` e tenha ambos :"
#~ "file:`setup.py` e o código do projeto lidos."

#~ msgid ""
#~ "An advantage with this technique is that it's not specific to Python.  "
#~ "Any tool can read the version."
#~ msgstr ""
#~ "Uma vantagem dessa técnica é que ela não é específica do Python. Qualquer "
#~ "ferramenta pode ler a versão."

#~ msgid ""
#~ "With this approach you must make sure that the ``VERSION`` file is "
#~ "included in all your source and binary distributions (e.g. add ``include "
#~ "VERSION`` to your :file:`MANIFEST.in`)."
#~ msgstr ""
#~ "Com esta abordagem, você deve se certificar de que o arquivo ``VERSION`` "
#~ "está incluído em todas as suas distribuições de fonte e binárias (por "
#~ "exemplo, adicione ``include VERSION`` ao seu :file:`MANIFEST.in`)."

#~ msgid ""
#~ "Set the value in :file:`setup.py`, and have the project code use the "
#~ "``importlib.metadata`` API to fetch the value at runtime. (``importlib."
#~ "metadata`` was introduced in Python 3.8 and is available to older "
#~ "versions as the ``importlib-metadata`` project.)  An installed project's "
#~ "version can be fetched with the API as follows::"
#~ msgstr ""
#~ "Defina o valor em :file:`setup.py` e faça com que o código do projeto use "
#~ "a API ``importlib.metadata`` para buscar o valor em tempo de execução. "
#~ "(``importlib.metadata`` foi introduzido no Python 3.8 e está disponível "
#~ "para versões anteriores como o projeto ``importlib-metadata``.) A versão "
#~ "de um projeto instalado pode ser obtida com a API da seguinte forma::"

#~ msgid ""
#~ "Be aware that the ``importlib.metadata`` API only knows about what's in "
#~ "the installation metadata, which is not necessarily the code that's "
#~ "currently imported."
#~ msgstr ""
#~ "Esteja ciente de que a API ``importlib.metadata`` só sabe sobre o que "
#~ "está nos metadados de instalação, o que não é necessariamente o código "
#~ "que está importado no momento."

#~ msgid ""
#~ "If a project uses this method to fetch its version at runtime, then its "
#~ "``install_requires`` value needs to be edited to install ``importlib-"
#~ "metadata`` on pre-3.8 versions of Python like so::"
#~ msgstr ""
#~ "Se um projeto usa este método para buscar sua versão em tempo de "
#~ "execução, então seu valor ``install_requires`` precisa ser editado para "
#~ "instalar ``importlib-metadata`` em versões pré-3.8 do Python como::"

#~ msgid ""
#~ "An older (and less efficient) alternative to ``importlib.metadata`` is "
#~ "the ``pkg_resources`` API provided by ``setuptools``::"
#~ msgstr ""
#~ "’Uma alternativa mais antiga (e menos eficiente) ao ``importlib."
#~ "metadata`` é a API ``pkg_resources`` fornecida pelo ``setuptools``::"

#~ msgid ""
#~ "If a project uses ``pkg_resources`` to fetch its own version at runtime, "
#~ "then ``setuptools`` must be added to the project's ``install_requires`` "
#~ "list."
#~ msgstr ""
#~ "Se um projeto usa ``pkg_resources`` para buscar sua própria versão em "
#~ "tempo de execução, então ``setuptools`` deve ser adicionado à lista "
#~ "``install_requires`` do projeto."

#~ msgid ""
#~ "Example using this technique: `setuptools <https://github.com/pypa/"
#~ "setuptools/blob/main/setuptools/version.py>`_."
#~ msgstr ""
#~ "Exemplo usando esta técnica: `setuptools <https://github.com/pypa/"
#~ "setuptools/blob/main/setuptools/version.py>`_."

#~ msgid ""
#~ "Set the value to ``__version__`` in ``sample/__init__.py`` and import "
#~ "``sample`` in :file:`setup.py`."
#~ msgstr ""
#~ "Defina o valor para ``__version__`` em ``sample/__init__.py`` e importe "
#~ "``sample`` no :file:`setup.py`."

#~ msgid ""
#~ "Although this technique is common, beware that it will fail if ``sample/"
#~ "__init__.py`` imports packages from ``install_requires`` dependencies, "
#~ "which will very likely not be installed yet when :file:`setup.py` is run."
#~ msgstr ""
#~ "Embora esta técnica seja comum, esteja ciente que ela vai falhar se "
#~ "``sample/__init__.py`` importar pacotes de dependências "
#~ "``install_requires``, que muito provavelmente ainda não estarão "
#~ "instalados quando :file:`setup.py` for executado."

#~ msgid ""
#~ "Keep the version number in the tags of a version control system (Git, "
#~ "Mercurial, etc) instead of in the code, and automatically extract it from "
#~ "there using `setuptools_scm <https://pypi.org/project/setuptools-scm/>`_."
#~ msgstr ""
#~ "Mantenha o número da versão nas tags de um sistema de controle de versão "
#~ "(Git, Mercurial, etc), em vez de no código, e extraia-o automaticamente "
#~ "de lá usando `setuptools_scm <https://pypi.org/project/setuptools-scm/>`_."

#~ msgid ""
#~ "There is a significant difference between the ``[build-system]`` and "
#~ "``[project]`` tables. The former should always be present, regardless of "
#~ "which build backend you use (since it *defines* the tool you use). The "
#~ "latter is understood by *most* build backends, but some build backends "
#~ "use a different format."
#~ msgstr ""
#~ "Há uma diferença significativa entre as tabelas ``[build-system]`` e "
#~ "``[project]``. O primeiro deve estar sempre presente, independentemente "
#~ "de qual backend de construção você usa (já que *define* a ferramenta que "
#~ "você usa). Este último é entendido pela *maioria* dos backends de "
#~ "construção mas alguns backends de construção usam um formato diferente."

#~ msgid ""
#~ "Additionally, the user:password section of the URL MAY be a well-known, "
#~ "non security sensitive string. A typical example is ``git`` in the case "
#~ "of an URL such as ``ssh://git@gitlab.com/user/repo``."
#~ msgstr ""
#~ "Além disso, a seção usuário:senha da URL PODE ser uma string bem "
#~ "conhecida e não sensível à segurança. Um exemplo típico é ``git`` no caso "
#~ "de uma URL como ``ssh://git@gitlab.com/user/repo``."

#~ msgid ""
#~ "This guide is specifically for users of :ref:`setuptools`, other "
#~ "packaging tools such as ``flit`` may offer similar functionality but "
#~ "users will need to consult relevant documentation."
#~ msgstr ""
#~ "Este guia é especificamente para usuários de :ref:`setuptools`, outras "
#~ "ferramentas de empacotamento como ``flit`` podem oferecer funcionalidade "
#~ "semelhante, mas os usuários precisarão consultar a documentação relevante."

#~ msgid "This workflow requires that:"
#~ msgstr "Este fluxo de trabalho exige que:"

#~ msgid "The publisher is using the latest version of :ref:`setuptools`,"
#~ msgstr "O editor esteja usando a versão mais recente de :ref:`setuptools`,"

#~ msgid "The latest version of :ref:`twine` is used to upload the package,"
#~ msgstr "A última versão do :ref:`twine` seja usada para enviar o pacote,"

#~ msgid ""
#~ "Since it is possible to override the :file:`setup.cfg` settings via CLI "
#~ "flags, make sure that your scripts don't have ``--universal`` in your "
#~ "package creation scripts."
#~ msgstr ""
#~ "Visto que ser possível sobrescrever as configurações de :file:`setup.cfg` "
#~ "via sinalizadores CLI, certifique-se de que seus scripts não tenham ``--"
#~ "universal`` em seus scripts de criação de pacote."

#~ msgid "1. Download the newest version of Setuptools"
#~ msgstr "1. Baixe a versão mais recente do Setuptools"

#~ msgid ""
#~ "Ensure that before you generate source distributions or binary "
#~ "distributions, you update Setuptools and install twine."
#~ msgstr ""
#~ "Certifique-se de, antes de gerar distribuições de fontes ou distribuições "
#~ "binárias, atualizar o Setuptools e instalar o twine."

#~ msgid "Steps:"
#~ msgstr "Passos:"

#~ msgid "``setuptools`` version should be above 24.0.0."
#~ msgstr "A versão do ``setuptools`` deve ser superior a 24.0.0."

#~ msgid "Examples:"
#~ msgstr "Exemplos:"

#~ msgid ""
#~ "The way to set those values is within the call to ``setup`` within your :"
#~ "file:`setup.py` script. This will insert the ``Requires-Python`` metadata "
#~ "values based on the argument you provide in ``python_requires``."
#~ msgstr ""
#~ "A maneira de definir esses valores está na chamada de ``setup`` dentro do "
#~ "seu script :file:`setup.py`. Isso irá inserir os valores de metadados "
#~ "``Requires-Python`` com base no argumento fornecido em "
#~ "``python_requires``."

#~ msgid "4. Using Twine to publish"
#~ msgstr "4. Usando Twine para publicar"

#~ msgid ""
#~ "Twine has a number of advantages, apart from being faster it is now the "
#~ "supported method for publishing packages."
#~ msgstr ""
#~ "Twine tem uma série de vantagens, além de ser mais rápido, agora é o "
#~ "método suportado para publicação de pacotes."

#~ msgid "Make sure you are using the newest version of Twine, at least 1.9."
#~ msgstr ""
#~ "Certifique-se de estar usando a versão mais recente do Twine, pelo menos "
#~ "1.9."

#~ msgid ""
#~ "Once you have published a package with the Requires-Python metadata, you "
#~ "can then make a further update removing that Python runtime from support."
#~ msgstr ""
#~ "Depois de publicar um pacote com os metadados de Requires-Python, você "
#~ "pode fazer uma atualização adicional removendo esse tempo de execução "
#~ "Python do suporte."

#~ msgid "It must be done in this order for the automated fallback to work."
#~ msgstr ""
#~ "Deve ser feito nesta ordem para que o alternativa automatizada funcione."

#~ msgid ""
#~ "For example, you published the Requires-Python: \">=2.7\" as version "
#~ "1.0.0 of your package."
#~ msgstr ""
#~ "Por exemplo, você publicou o Requires-Python: \">=2.7\" como a versão "
#~ "1.0.0 do seu pacote."

#~ msgid ""
#~ "If you were then to update the version string to \">=3.5\", and publish a "
#~ "new version 2.0.0 of your package, any users running Pip 9.0+ from "
#~ "version 2.7 will have version 1.0.0 of the package installed, and any "
#~ ">=3.5 users will receive version 2.0.0."
#~ msgstr ""
#~ "Se você atualizasse a string da versão para \">=3.5\" e publicasse uma "
#~ "nova versão 2.0.0 do seu pacote, todos os usuários executando o Pip 9.0+ "
#~ "a partir da versão 2.7 terão a versão 1.0.0 do pacote instalada e "
#~ "qualquer >=3.5 usuários receberão a versão 2.0.0."

#~ msgid ""
#~ "The standard :term:`Built Distribution` format. See :ref:`package-"
#~ "formats` for more information."
#~ msgstr ""
#~ "O formato padrão de :term:`Distribuição Construída`. Veja :ref:`package-"
#~ "formats` para mais informações."

#~ msgid "The summary description of the project."
#~ msgstr "A descrição resumida do projeto."

#~ msgid ""
#~ "A ``requested_revision`` key (type ``string``) MAY be present naming a "
#~ "branch/tag/ref/commit/revision/etc (in a format compatible with the VCS)."
#~ msgstr ""
#~ "Uma chave ``required_revision`` (tipo ``string``) PODE estar presente "
#~ "nomeando um branch/tag/ref/commit/revisão/etc (em um formato compatível "
#~ "com o VCS)."

#~ msgid "Wheel vs Egg"
#~ msgstr "Wheel vs Egg"

#~ msgid ""
#~ ":term:`Wheel` and :term:`Egg` are both packaging formats that aim to "
#~ "support the use case of needing an install artifact that doesn't require "
#~ "building or compilation, which can be costly in testing and production "
#~ "workflows."
#~ msgstr ""
#~ ":term:`Wheel` e :term:`Egg` são formatos de empacotamento que visam "
#~ "oferecer suporte ao caso de uso de necessidade de um artefato de "
#~ "instalação que não requer construção ou compilação, o que pode ser caro "
#~ "em testes e fluxos de trabalho de produção."

#~ msgid ""
#~ ":term:`Wheel` is currently considered the standard for :term:`built "
#~ "<Built Distribution>` and :term:`binary <Binary Distribution>` packaging "
#~ "for Python."
#~ msgstr ""
#~ ":term:`Wheel` é atualmente considerado o padrão para o empacotamento :"
#~ "term:`contruído <Built Distribution>` e :term:`binário <Binary "
#~ "Distribution>` para Python."

#~ msgid ""
#~ ":term:`Egg` uploads have been disabled for upload to PyPI, per :pep:"
#~ "`715`. Read the `deprecation notice <https://blog.pypi.org/"
#~ "posts/2023-06-26-deprecate-egg-uploads/>`_ for more information."
#~ msgstr ""
#~ "Envio de :term:`Egg` foram desativados para o envio para o PyPI, "
#~ "conforme :pep:`715`. Leia o `aviso de descontinuação <https://blog.pypi."
#~ "org/posts/2023-06-26-deprecate-egg-uploads/>`_ para mais informações."

#~ msgid ""
#~ "A :term:`Built Distribution` format introduced by :ref:`setuptools`, "
#~ "which is being replaced by :term:`Wheel`.  For details, see :doc:`The "
#~ "Internal Structure of Python Eggs <setuptools:deprecated/python_eggs>` "
#~ "and `Python Eggs <http://peak.telecommunity.com/DevCenter/PythonEggs>`_"
#~ msgstr ""
#~ "Um formato :term:`Distribuição Construída` introduzido por :ref:"
#~ "`setuptools`, que está sendo substituído por :term:`Wheel`. Para obter "
#~ "detalhes, consulte :doc:`The Internal Structure of Python Eggs "
#~ "<setuptools:deprecated/python_eggs>` e `Python Eggs <http://peak."
#~ "telecommunity.com/DevCenter/PythonEggs>`_"

#~ msgid ""
#~ "A :term:`Built Distribution` format introduced by an official :doc:"
#~ "`standard specification </specifications/binary-distribution-format/>`, "
#~ "which is intended to replace the :term:`Egg` format.  Wheel is currently "
#~ "supported by :ref:`pip`."
#~ msgstr ""
#~ "Um formato de :term:`Distribuição Construída` introduzido por um :doc:"
#~ "`especificação de padrão </specifications/binary-distribution-format/>` "
#~ "oficial, que se destina a substituir o formato :term:`Egg`. O Wheel é "
#~ "atualmente suportado pelo :ref:`pip`."

#~ msgid ""
#~ "If you're familiar with Python packaging and installation, and just want "
#~ "to know what tools are currently recommended, then here it is."
#~ msgstr ""
#~ "Se você está familiarizado com o pacote e a instalação do Python e só "
#~ "deseja saber quais ferramentas são recomendadas atualmente, aqui está."

#~ msgid "Application dependency management"
#~ msgstr "Gerenciamento de dependências de aplicações"

#~ msgid ""
#~ "Use :ref:`pip` in a `secure manner`_ to install a Python application and "
#~ "its dependencies during deployment."
#~ msgstr ""
#~ "Use :ref:`pip` de uma `maneira segura`_ para instalar um aplicativo "
#~ "Python e suas dependências durante a implantação."

#~ msgid ""
#~ "Use :ref:`virtualenv` or :doc:`venv <python:library/venv>` to isolate "
#~ "application-specific dependencies from a shared Python installation. [4]_"
#~ msgstr ""
#~ "Use :ref:`virtualenv` ou :doc:`venv <python:library/venv>` para isolar "
#~ "dependências específicas da aplicação de uma instalação compartilhada do "
#~ "Python. [4]_"

#~ msgid ""
#~ "Use `pip-tools`_, :ref:`pipenv`, or `poetry`_ to generate the fully-"
#~ "specified application-specific dependencies, when developing Python "
#~ "applications."
#~ msgstr ""
#~ "Use `pip-tools`_, :ref:`pipenv`, ou `poetry`_ para gerar as dependências "
#~ "específicas da aplicação totalmente especificadas, ao desenvolver "
#~ "aplicações Python."

#~ msgid "Installation tool recommendations"
#~ msgstr "Recomendações de ferramentas de instalação"

#~ msgid ""
#~ "Use :ref:`pip` to install Python :term:`packages <Distribution Package>` "
#~ "from :term:`PyPI <Python Package Index (PyPI)>`. [1]_ [2]_ Depending on "
#~ "how :ref:`pip` is installed, you may need to also install :ref:`wheel` to "
#~ "get the benefit of wheel caching. [3]_"
#~ msgstr ""
#~ "Use :ref:`pip` para instalar :term:`pacotes <Pacote de Distribuição>` do "
#~ "Python a partir do :term:`PyPI <Python Package Index (PyPI)>`. [1]_ [2]_ "
#~ "Dependendo de como :ref:`pip` é instalado, você também pode precisar "
#~ "instalar o :ref:`wheel` para obter o benefício do armazenamento em cache "
#~ "do wheel. [3]_"

#~ msgid ""
#~ "Use :ref:`virtualenv` or :doc:`venv <python:library/venv>` to isolate "
#~ "project-specific dependencies from a shared Python installation. [4]_"
#~ msgstr ""
#~ "Use :ref:`virtualenv` ou :doc:`venv <python:library/venv>` para isolar "
#~ "dependências específicas do projeto de uma instalação compartilhada do "
#~ "Python. [4]_"

#~ msgid ""
#~ "If you're looking for management of fully integrated cross-platform "
#~ "software stacks, consider:"
#~ msgstr ""
#~ "Se você estiver procurando por gerenciamento de pilhas de software "
#~ "multiplataforma totalmente integradas, considere:"

#~ msgid ":ref:`buildout`: primarily focused on the web development community"
#~ msgstr ""
#~ ":ref:`buildout`: focado principalmente na comunidade de desenvolvimento "
#~ "web"

#~ msgid ""
#~ ":ref:`spack`, :ref:`hashdist`, or :ref:`conda`: primarily focused on the "
#~ "scientific community."
#~ msgstr ""
#~ ":ref:`spack`, :ref:`hashdist` ou :ref:`conda`: focado principalmente na "
#~ "comunidade científica."

#~ msgid "Packaging tool recommendations"
#~ msgstr "Recomendações de ferramentas de empacotamento"

#~ msgid "Use :ref:`setuptools` to define projects. [5]_ [6]_"
#~ msgstr "Use :ref:`setuptools` para definir projetos. [5]_ [6]_"

#~ msgid ""
#~ "Use :ref:`build` to create :term:`Source Distributions <Source "
#~ "Distribution (or \"sdist\")>` and :term:`wheels <Wheel>`."
#~ msgstr ""
#~ "Use :ref:`build` para criar :term:`Distribuições Fontes <Distribuição "
#~ "Fonte (ou \"sdist\")>` e :term:`wheels <Wheel>`."

#~ msgid ""
#~ "Use `twine <https://pypi.org/project/twine>`_ for uploading distributions "
#~ "to :term:`PyPI <Python Package Index (PyPI)>`."
#~ msgstr ""
#~ "Use `twine <https://pypi.org/project/twine>`_ para enviar distribuições "
#~ "para o :term:`PyPI <Python Package Index (PyPI)>`."

#~ msgid "Publishing platform migration"
#~ msgstr "Migração da plataforma de publicação"

#~ msgid ""
#~ "The original Python Package Index implementation (previously hosted at "
#~ "`pypi.python.org <https://pypi.python.org>`_) has been phased out in "
#~ "favour of an updated implementation hosted at `pypi.org <https://pypi."
#~ "org>`_."
#~ msgstr ""
#~ "A implementação do Python Package Index original (anteriormente hospedada "
#~ "em `pypi.python.org <https://pypi.python.org>`_) foi eliminada em favor "
#~ "de uma implementação atualizada hospedada em `pypi.org <https://pypi."
#~ "org>`_."

#~ msgid ""
#~ "See :ref:`Migrating to PyPI.org` for more information on the status of "
#~ "the migration, and what settings to change in your clients."
#~ msgstr ""
#~ "Veja :ref:`Migrando para PyPI.org <Migrating to PyPI.org>` para mais "
#~ "informações sobre o status da migração, e quais configurações alterar em "
#~ "seus clientes."

#~ msgid ""
#~ "There are some cases where you might choose to use ``easy_install`` "
#~ "(from :ref:`setuptools`), e.g. if you need to install from :term:`Eggs "
#~ "<Egg>` (which pip doesn't support).  For a detailed breakdown, see :ref:"
#~ "`pip vs easy_install`."
#~ msgstr ""
#~ "Existem alguns casos em que você pode escolher usar ``easy_install`` (do :"
#~ "ref:`setuptools`), por exemplo se você precisar instalar a partir de :"
#~ "term:`Eggs <Egg>` (que pip não oferece suporte). Para uma análise "
#~ "detalhada, consulte :ref:`pip vs easy_install`."

#~ msgid ""
#~ "The acceptance of :pep:`453` means that :ref:`pip` will be available by "
#~ "default in most installations of Python 3.4 or later.  See the :pep:"
#~ "`rationale section <453#rationale>` from :pep:`453` as for why pip was "
#~ "chosen."
#~ msgstr ""
#~ "A aceitação da :pep:`453` significa que :ref:`pip` estará disponível por "
#~ "padrão na maioria das instalações do Python 3.4 ou posterior. Veja a :pep:"
#~ "`seção de motivos <453#rationale>` da :pep:`453` para saber por que pip "
#~ "foi escolhido."

#~ msgid ""
#~ "`get-pip.py <https://github.com/pypa/get-pip/#readme>`_ and :ref:"
#~ "`virtualenv` install :ref:`wheel`, whereas :ref:`ensurepip` and :ref:"
#~ "`venv <venv>` do not currently.  Also, the common \"python-pip\" package "
#~ "that's found in various linux distros, does not depend on \"python-"
#~ "wheel\" currently."
#~ msgstr ""
#~ "`get-pip.py <https://github.com/pypa/get-pip/#readme>`_ e :ref:"
#~ "`virtualenv` instalam :ref:`wheel`, enquanto :ref:`ensurepip` e :ref:"
#~ "`venv <venv>` não instalam atualmente. Além disso, o pacote comum "
#~ "\"python-pip\" que é encontrado em várias distros do Linux, não depende "
#~ "do \"python-wheel\" atualmente."

#~ msgid ""
#~ "Beginning with Python 3.4, ``venv`` will create virtualenv environments "
#~ "with ``pip`` installed, thereby making it an equal alternative to :ref:"
#~ "`virtualenv`. However, using :ref:`virtualenv` will still be recommended "
#~ "for users that need cross-version consistency."
#~ msgstr ""
#~ "A partir do Python 3.4, ``venv`` criará ambientes virtualenv com ``pip`` "
#~ "instalado, tornando-o uma alternativa igual a :ref:`virtualenv`. No "
#~ "entanto, usar :ref:`virtualenv` ainda será recomendado para usuários que "
#~ "precisam de consistência entre versões."

#~ msgid ""
#~ "Although you can use pure :ref:`distutils` for many projects, it does not "
#~ "support defining dependencies on other projects and is missing several "
#~ "convenience utilities for automatically populating distribution metadata "
#~ "correctly that are provided by ``setuptools``. Being outside the standard "
#~ "library, ``setuptools`` also offers a more consistent feature set across "
#~ "different versions of Python, and (unlike ``distutils``), recent versions "
#~ "of ``setuptools`` support all of the modern metadata fields described in :"
#~ "ref:`core-metadata`."
#~ msgstr ""
#~ "Embora você possa usar :ref:`distutils` puro para muitos projetos, ele "
#~ "não oferece suporta à definição de dependências em outros projetos e não "
#~ "possui vários utilitários de conveniência para preencher automaticamente "
#~ "os metadados de distribuição fornecidos pelo ``setuptools``. Estando fora "
#~ "da biblioteca padrão, ``setuptools`` também oferece um conjunto de "
#~ "recursos mais consistente em diferentes versões do Python e (ao contrário "
#~ "de ``distutils``), versões recentes do ``setuptools`` oferecem suporte a "
#~ "todos os campos de metadados modernos descritos em :ref:`core-metadata`."

#~ msgid ""
#~ "Even for projects that do choose to use ``distutils``, when :ref:`pip` "
#~ "installs such projects directly from source (rather than installing from "
#~ "a prebuilt :term:`wheel <Wheel>` file), it will actually build your "
#~ "project using :ref:`setuptools` instead."
#~ msgstr ""
#~ "Mesmo para projetos que escolhem usar ``distutils``, quando o :ref:`pip` "
#~ "instala tais projetos diretamente da fonte (ao invés de instalar de um "
#~ "arquivo :term:`wheel <Wheel>` pré-construído), ele irá, na verdade, "
#~ "construir seu projeto usando :ref:`setuptools`."

#~ msgid ""
#~ "`distribute`_ (a fork of setuptools) was merged back into :ref:"
#~ "`setuptools` in June 2013, thereby making setuptools the default choice "
#~ "for packaging."
#~ msgstr ""
#~ "`distribute`_ (um fork do setuptools) foi mesclado no :ref:`setuptools` "
#~ "em junho de 2013, tornando assim setuptools a escolha padrão para "
#~ "empacotamento."

#~ msgid "Standards compliance for interoperability"
#~ msgstr "Conformidade de padrões para interoperabilidade"

#~ msgid "Here are some examples of compliant version numbers::"
#~ msgstr "Aqui estão alguns exemplos de números de versão compatíveis::"

#~ msgid ""
#~ "To further accommodate historical variations in approaches to version "
#~ "numbering, :pep:`440` also defines a comprehensive technique for :pep:"
#~ "`version normalisation <440#normalization>` that maps variant spellings "
#~ "of different version numbers to a standardised canonical form."
#~ msgstr ""
#~ "Para acomodar ainda mais as variações históricas nas abordagens de "
#~ "numeração de versão, :pep:`440` também define uma técnica abrangente "
#~ "para :pep:`normalização de versão <440#normalization>` que mapeia grafias "
#~ "variantes de diferentes números de versão para uma forma canônica "
#~ "padronizada."

#~ msgid "Scheme choices"
#~ msgstr "Opções de esquema"

#~ msgid ""
#~ "For new projects, the recommended versioning scheme is based on `Semantic "
#~ "Versioning <https://semver.org/>`_, but adopts a different approach to "
#~ "handling pre-releases and build metadata."
#~ msgstr ""
#~ "Para novos projetos, o esquema de controle de versão recomendado é "
#~ "baseado em `Versionamento semântico <https://semver.org/>`_, mas adota "
#~ "uma abordagem diferente para lidar com pré-lançamentos e metadados de "
#~ "compilação."

#~ msgid ""
#~ "Adopting this approach as a project author allows users to make use of :"
#~ "pep:`\"compatible release\" <440#compatible-release>` specifiers, where "
#~ "``name ~= X.Y`` requires at least release X.Y, but also allows any later "
#~ "release with a matching MAJOR version."
#~ msgstr ""
#~ "Adotar essa abordagem como autor do projeto permite que os usuários façam "
#~ "uso dos especificadores de :pep:`\"lançamentos compatíveis\" "
#~ "<440#compatible-release>`, onde ``name ~= X.Y`` requer pelo menos a "
#~ "versão X.Y, mas também permite qualquer versão posterior com uma versão "
#~ "PRINCIPAL correspondente."

#~ msgid "Date based versioning"
#~ msgstr "Versionamento baseado em data"

#~ msgid ""
#~ "Version numbers for date based projects typically take the form of YEAR."
#~ "MONTH (for example, ``12.04``, ``15.10``)."
#~ msgstr ""
#~ "Os números de versão para projetos baseados em data normalmente assumem a "
#~ "forma de ANO.MÊS (por exemplo, ``12.04``, ``15.10``)."

#~ msgid ""
#~ "This is the simplest possible versioning scheme, and consists of a single "
#~ "number which is incremented every release."
#~ msgstr ""
#~ "Este é o esquema de versionamento mais simples possível e consiste em um "
#~ "único número que é incrementado a cada versão."

#~ msgid "Pre-release versioning"
#~ msgstr "Versionamento de pré-lançamento"

#~ msgid ""
#~ "Regardless of the base versioning scheme, pre-releases for a given final "
#~ "release may be published as:"
#~ msgstr ""
#~ "Independentemente do esquema de versionamento base, os pré-lançamentos "
#~ "para uma determinada versão final podem ser publicados como:"

#~ msgid "zero or more dev releases (denoted with a \".devN\" suffix)"
#~ msgstr "zero ou mais versões dev (denotadas com um sufixo \".devN\")"

#~ msgid "zero or more alpha releases (denoted with a \".aN\" suffix)"
#~ msgstr "zero ou mais versões alfa (denotadas com um sufixo \".aN\")"

#~ msgid "zero or more beta releases (denoted with a \".bN\" suffix)"
#~ msgstr "zero ou mais versões beta (denotadas com um sufixo \".bN\")"

#~ msgid "zero or more release candidates (denoted with a \".rcN\" suffix)"
#~ msgstr ""
#~ "zero ou mais candidatos a lançamento (denotados com um sufixo \".rcN\")"

#~ msgid ""
#~ "``pip`` and other modern Python package installers ignore pre-releases by "
#~ "default when deciding which versions of dependencies to install."
#~ msgstr ""
#~ "``pip`` e outros instaladores de pacotes Python modernos ignoram os pré-"
#~ "lançamentos por padrão ao decidir quais versões de dependências instalar."

#~ msgid ""
#~ "A local version identifier takes the form ``<public version "
#~ "identifier>+<local version label>``. For example::"
#~ msgstr ""
#~ "Um identificador de versão local assume a forma ``<identificador de "
#~ "versão pública>+<rótulo de versão local>``. Por exemplo::"

#~ msgid "Three options are available in this area:"
#~ msgstr "Três opções estão disponíveis nesta área:"

#~ msgid "pip provides local caching options,"
#~ msgstr "pip fornece opções de cache local,"

#~ msgid ""
#~ "devpi provides higher-level caching option, potentially shared amongst "
#~ "many users or machines, and"
#~ msgstr ""
#~ "devpi fornece uma opção de cache de alto nível, potencialmente "
#~ "compartilhada entre vários usuários ou várias máquinas, e"

#~ msgid ""
#~ "bandersnatch provides a local complete mirror of all PyPI :term:`packages "
#~ "<Distribution Package>`."
#~ msgstr ""
#~ "bandersnatch fornece um espelho local completo de todos os :term:`pacotes "
#~ "<Pacote de Distribuição>` do PyPI."

#~ msgid "Caching with devpi"
#~ msgstr "Fazendo cache com devpi"

#~ msgid ""
#~ "devpi is a caching proxy server which you run on your laptop, or some "
#~ "other machine you know will always be available to you. See the `devpi "
#~ "documentation for getting started`__."
#~ msgstr ""
#~ "devpi é um servidor proxy de cache que você executa em seu laptop ou "
#~ "alguma outra máquina que você sabe que sempre estará disponível para "
#~ "você. Veja a `documentação do devpi para começar`__."

#~ msgid "Complete mirror with bandersnatch"
#~ msgstr "Espelho completo com bandersnatch"

#~ msgid ""
#~ "bandersnatch will set up a complete local mirror of all PyPI :term:"
#~ "`packages <Distribution Package>` (externally-hosted packages are not "
#~ "mirrored). See the `bandersnatch documentation for getting that going`__."
#~ msgstr ""
#~ "bandersnatch irá configurar um espelho local completo de todos os :term:"
#~ "`pacotes <Pacote de Distribuição>` do PyPI (pacotes hospedados "
#~ "externamente não são espelhados). Veja a `documentação do bandersnatch "
#~ "para fazer isso`__."

#~ msgid ""
#~ "A benefit of devpi is that it will create a mirror which includes :term:"
#~ "`packages <Distribution Package>` that are external to PyPI, unlike "
#~ "bandersnatch which will only cache :term:`packages <Distribution "
#~ "Package>` hosted on PyPI."
#~ msgstr ""
#~ "Um benefício do devpi é que ele criará um espelho que inclui :term:"
#~ "`pacotes <Pacote de Distribuição>` que são externos ao PyPI, ao contrário "
#~ "do bandersnatch que armazenará apenas em cache os :term:`pacotes <Pacote "
#~ "de Distribuição>` hospedados no PyPI."

#, fuzzy
#~ msgid ""
#~ "By default, any hash algorithm available via `hashlib <https://docs."
#~ "python.org/3/library/hashlib.html>`_ (specifically any that can be passed "
#~ "to ``hashlib.new()`` and do not require additional parameters) can be "
#~ "used as a key for the hashes dictionary. At least one secure algorithm "
#~ "from ``hashlib.algorithms_guaranteed`` **SHOULD** always be included. At "
#~ "the time of this spec, ``sha256`` specifically is recommended."
#~ msgstr ""
#~ "Qualquer algoritmo de hash disponível via ``hashlib`` (especificamente "
#~ "qualquer um que possa ser passado para ``hashlib.new()`` e não requeira "
#~ "parâmetros adicionais) pode ser usado como uma chave para o dicionário de "
#~ "hashes. Pelo menos um algoritmo seguro de ``hashlib."
#~ "algorithms_guaranteed`` DEVE sempre ser incluído. No momento da escrita, "
#~ "``sha256`` especificamente é recomendado."

#, fuzzy
#~ msgid "pyproject type"
#~ msgstr "pyproject.toml"

#~ msgid ""
#~ "pex is both a library and tool for generating :file:`.pex` (Python "
#~ "EXecutable) files, standalone Python environments in the spirit of :ref:"
#~ "`virtualenv`. :file:`.pex` files are just carefully constructed zip files "
#~ "with a ``#!/usr/bin/env python`` and special :file:`__main__.py`, and are "
#~ "designed to make deployment of Python applications as simple as ``cp``."
#~ msgstr ""
#~ "pex é uma biblioteca e ferramenta para gerar arquivos :file:`.pex` "
#~ "(Python EXecutable), ambientes autônomos Python no espírito de :ref:"
#~ "`virtualenv`. Os arquivos :file:`.pex` são apenas arquivos zip "
#~ "cuidadosamente construídos com um ``#!/usr/bin/env python`` e um :file:"
#~ "`__main__.py` especial, e são projetados para fazer a implantação de "
#~ "aplicações Python tão simples quanto ``cp``."

#, fuzzy
#~ msgid ""
#~ "The HTML format is defined in :pep:`503`, with the addition of \"yank\" "
#~ "support (allowing a kind of file deletion) in :pep:`592`, specifying the "
#~ "interface version provided by an index server in :pep:`629`, and "
#~ "providing package metadata independently from a package in :pep:`658` and "
#~ "revised in :pep:`714`."
#~ msgstr ""
#~ "A interface atual para consultar versões de pacotes disponíveis e "
#~ "recuperar pacotes de um servidor de indexação é definida na :pep:`503`, "
#~ "com a adição de suporte a retirada ou \"yank\" (que permite um tipo de "
#~ "exclusão de arquivo) na :pep:`592`, especificando a versão da interface "
#~ "fornecida por um servidor de indexação na :pep:`629` e fornecendo "
#~ "metadados de pacotes independentemente de um pacote na :pep:`658`."

#~ msgid ""
#~ "If you're developing for a \"Platform-as-a-Service\" or \"PaaS\" like "
#~ "Heroku or Google App Engine, you are going to want to follow their "
#~ "respective packaging guides."
#~ msgstr ""
#~ "Se estiver desenvolvendo para uma \"plataforma como serviço\" ou "
#~ "\"PaaS\", como Heroku ou Google App Engine, você vai querer seguir seus "
#~ "respectivos guias de empacotamento."

#~ msgid ""
#~ "`Heroku <https://devcenter.heroku.com/articles/getting-started-with-"
#~ "python>`_"
#~ msgstr ""
#~ "`Heroku <https://devcenter.heroku.com/articles/getting-started-with-"
#~ "python>`_"

#~ msgid ""
#~ "`Google App Engine <https://cloud.google.com/appengine/docs/python/>`_"
#~ msgstr ""
#~ "`Google App Engine <https://cloud.google.com/appengine/docs/python/>`_"

#~ msgid "`PythonAnywhere <https://www.pythonanywhere.com/>`_"
#~ msgstr "`PythonAnywhere <https://www.pythonanywhere.com/>`_"

#~ msgid "`OpenShift <https://blog.openshift.com/getting-started-python/>`_"
#~ msgstr "`OpenShift <https://blog.openshift.com/getting-started-python/>`_"

#~ msgid "\"Serverless\" frameworks like :gh:`Zappa <zappa/Zappa>`"
#~ msgstr "Frameworks \"serverless\" como :gh:`Zappa <zappa/Zappa>`"

#~ msgid ""
#~ "There were multiple iterations of the ``manylinux`` specification, each "
#~ "representing the common subset of Linux platforms at a given point in "
#~ "time:"
#~ msgstr ""
#~ "Houve várias iterações da especificação ``manylinux``, cada uma "
#~ "representando o subconjunto comum de plataformas Linux em um determinado "
#~ "ponto no tempo:"

#~ msgid ""
#~ "``manylinux2010`` (:pep:`571`) supports ``x86_64`` and ``i686`` "
#~ "architectures. and updates the previous specification to be based on a "
#~ "compatible Linux platform from 2010 instead."
#~ msgstr ""
#~ "``manylinux2010`` (:pep:`571`) oferece suporte às arquiteturas ``x86_64`` "
#~ "e ``i686`` e atualiza a especificação anterior para se basear em uma "
#~ "plataforma Linux compatível a partir de 2010."

#~ msgid ""
#~ "``manylinux2014`` (:pep:`599`) adds support for a number of additional "
#~ "architectures (``aarch64``, ``armv7l``, ``ppc64``, ``ppc64le``, and "
#~ "``s390x``) and updates the base platform to a compatible Linux platform "
#~ "from 2014."
#~ msgstr ""
#~ "``manylinux2014`` (:pep:`599`) adiciona suporte para várias arquiteturas "
#~ "adicionais (``aarch64``, ``armv7l``, ``ppc64``, ``ppc64le`` e ``s390x``) "
#~ "e atualiza a plataforma base para uma plataforma Linux compatível de 2014."

#~ msgid ""
#~ "``manylinux_x_y`` (:pep:`600`) supersedes all previous PEPs to define a "
#~ "future-proof standard. It defines ``x`` and ``y`` as glibc major an minor "
#~ "versions supported (e.g. ``manylinux_2_24`` should work on any distro "
#~ "using glibc 2.24+). Previous tags are still supported for backward "
#~ "compatibility."
#~ msgstr ""
#~ "``manylinux_x_y`` (:pep:`600`) substitui todas as PEPs anteriores para "
#~ "definir um padrão à prova de futuro. Ele define ``x`` e ``y`` como as "
#~ "versões principais e secundárias do glibc suportadas (por exemplo, "
#~ "``manylinux_2_24`` deve funcionar em qualquer distro usando glibc 2.24+). "
#~ "Tags anteriores ainda são suportadas para compatibilidade com versões "
#~ "anteriores."

#~ msgid "Manylinux compatibility support"
#~ msgstr "Suporte a compatibilidade de manylinux"

#~ msgid ""
#~ "The ``manylinux2014`` specification is relatively new and is not yet "
#~ "widely recognised by install tools."
#~ msgstr ""
#~ "A especificação de ``manylinux2014`` é relativamente nova e ainda não é "
#~ "amplamente reconhecida pelas ferramentas de instalação."

#~ msgid ""
#~ "The ``manylinux_x_y`` specification is relatively new and is not yet "
#~ "widely recognised by install tools."
#~ msgstr ""
#~ "A especificação de ``manylinux_x_y`` é relativamente nova e não é "
#~ "amplamente reconhecida pelas ferramentas de instalação."

#, fuzzy
#~ msgid "The following changes were applied since the initial version:"
#~ msgstr ""
#~ "As seguintes alterações foram feitas com base no feedback após sua "
#~ "implementação inicial:"

#~ msgid ""
#~ "The rules on escaping in wheel filenames were revised, to bring them into "
#~ "line with what popular tools actually do (February 2021)."
#~ msgstr ""
#~ "As regras sobre como escapar em nomes de arquivos wheel foram revisadas, "
#~ "para alinhá-las com o que as ferramentas populares realmente fazem "
#~ "(fevereiro de 2021)."

#~ msgid ""
#~ "The name of the distribution. The name field is the primary identifier "
#~ "for a distribution. A valid name consists only of ASCII letters and "
#~ "numbers, period, underscore and hyphen. It must start and end with a "
#~ "letter or number. Distribution names are limited to those which match the "
#~ "following regex (run with ``re.IGNORECASE``)::"
#~ msgstr ""
#~ "O nome da distribuição. O campo de nome é o identificador principal de "
#~ "uma distribuição. Um nome válido consiste apenas em letras e números "
#~ "ASCII, ponto, sublinhado e hífen. Deve começar e terminar com uma letra "
#~ "ou número. Os nomes de distribuição são limitados àqueles que "
#~ "correspondem ao seguinte regex (executado com ``re.IGNORECASE``)::"

#~ msgid "Summary of changes to PEP 508"
#~ msgstr "Resumo das alterações à PEP 508"

#~ msgid ""
#~ "The following changes were made based on feedback after its initial "
#~ "implementation:"
#~ msgstr ""
#~ "As seguintes alterações foram feitas com base no feedback após sua "
#~ "implementação inicial:"

#~ msgid ""
#~ "The definition of ``python_version`` was changed from ``platform."
#~ "python_version()[:3]`` to ``'.'.join(platform.python_version_tuple()"
#~ "[:2])``, to accommodate potential future versions of Python with 2-digit "
#~ "major and minor versions (e.g. 3.10). [#future_versions]_"
#~ msgstr ""
#~ "A definição de ``python_version`` foi alterada de ``platform."
#~ "python_version()[:3]`` para ``'.'.join(platform.python_version_tuple()"
#~ "[:2])``, para acomodar potenciais futuras versões do Python com versões "
#~ "principais e secundárias de 2 dígitos (por exemplo, 3.10). "
#~ "[#future_versions]_"

#~ msgid ""
#~ "March 2020: the ``direct_url.json`` metadata file was originally "
#~ "specified in :pep:`610` and is formally documented here."
#~ msgstr ""
#~ "Março de 2020: o arquivo de metadados ``direct_url.json`` foi "
#~ "originalmente especificado na :pep:`610` e está formalmente documentado "
#~ "aqui."

#~ msgid ""
#~ "March 2020: this data structure was originally specified as part of the "
#~ "``direct_url.json`` metadata file in :pep:`610` and is formally "
#~ "documented here."
#~ msgstr ""
#~ "Março de 2020: esta estrutura de dados foi originalmente especificada "
#~ "como parte do arquivo de metadados ``direct_url.json`` em :pep:`610` e "
#~ "está formalmente documentada aqui."

#~ msgid ""
#~ "January 2023: Added the ``archive_info.hashes`` key ([discussion](https://"
#~ "discuss.python.org/t/22299))."
#~ msgstr ""
#~ "Janeiro de 2023: Adicionada a chave ``archive_info.hashes`` (`discussão "
#~ "<https://discuss.python.org/t/22299>`__)."

#~ msgid ""
#~ "Project names are \"normalized\" for use in various contexts. This "
#~ "document describes how project names should be normalized."
#~ msgstr ""
#~ "Os nomes dos projetos são \"normalizados\" para uso em vários contextos. "
#~ "Este documento descreve como os nomes dos projetos devem ser normalizados."

#~ msgid "The following PEPs contributed to this spec:"
#~ msgstr "Os seguintes PEPs contribuíram para esta especificação:"

#~ msgid ":pep:`425`"
#~ msgstr ":pep:`425`"

#~ msgid ":pep:`513`"
#~ msgstr ":pep:`513`"

#~ msgid ":pep:`599`"
#~ msgstr ":pep:`599`"

#~ msgid "History and change workflow"
#~ msgstr "Histórico e fluxo de trabalho de mudança"

#, fuzzy
#~ msgid ""
#~ "The metadata described here was first specified in :pep:`376`, and later "
#~ "amended in :pep:`627` (and other PEPs). It was formerly known as "
#~ "*Database of Installed Python Distributions*. As with other PyPA "
#~ "specifications, editorial amendments with no functional impact may be "
#~ "made through the GitHub pull request workflow. Proposals for functional "
#~ "changes that would require amendments to package building and/or "
#~ "installation tools must be made through the PEP process (see :pep:`1`)."
#~ msgstr ""
#~ "Os metadados descritos aqui foram especificados primeiro na :pep:`376`, e "
#~ "posteriormente alterados na :pep:`627`. Era conhecido anteriormente como "
#~ "*Banco de dados de distribuições Python instaladas*. Outras alterações "
#~ "(exceto correções triviais de linguagem ou tipografia) devem ser feitas "
#~ "através do processo de PEP (veja :pep:`1`)."

#, fuzzy
#~ msgid ""
#~ "While this document is the normative specification, the PEPs that "
#~ "introduce changes to it may include additional information such as "
#~ "rationales and backwards compatibility considerations."
#~ msgstr ""
#~ "Embora este documento seja a especificação normativa, essas PEPs que "
#~ "introduzem alterações nele podem incluir informações adicionais, como "
#~ "justificativas e considerações de compatibilidade com versões anteriores."

#~ msgid ""
#~ "This is the name of your project, determining how your project is listed "
#~ "on :term:`PyPI <Python Package Index (PyPI)>`.  Per :pep:`508`, valid "
#~ "project names must:"
#~ msgstr ""
#~ "Este é o nome do seu projeto, determinando como ele está listado no :term:"
#~ "`PyPI <Python Package Index (PyPI)>`. Conforme :pep:`508`, nomes de "
#~ "projetos válidos devem:"

#~ msgid "Start & end with an ASCII letter or digit."
#~ msgstr "Começar e terminar com uma letra ou dígito ASCII."

#~ msgid ""
#~ "This is the current version of your project, allowing your users to "
#~ "determine whether or not they have the latest version, and to indicate "
#~ "which specific versions they've tested their own software against."
#~ msgstr ""
#~ "Esta é a versão atual do seu projeto, permitindo que seus usuários "
#~ "determinem se têm ou não a versão mais recente e indiquem em quais "
#~ "versões específicas eles testaram seu próprio software."

#~ msgid ""
#~ "Versions are displayed on :term:`PyPI <Python Package Index (PyPI)>` for "
#~ "each release if you publish your project."
#~ msgstr ""
#~ "As versões são exibidas em :term:`PyPI <Python Package Index (PyPI)>` "
#~ "para cada lançamento se você publicar seu projeto."

#~ msgid ""
#~ "If the project code itself needs run-time access to the version, the "
#~ "simplest way is to keep the version in both :file:`setup.py` and your "
#~ "code. If you'd rather not duplicate the value, there are a few ways to "
#~ "manage this. See the \":ref:`Single sourcing the version`\" Advanced "
#~ "Topics section."
#~ msgstr ""
#~ "Se o código do projeto em si precisa de acesso em tempo de execução para "
#~ "a versão, a maneira mais simples é manter a versão em :file:`setup.py` e "
#~ "seu código. Se você preferir não duplicar o valor, existem algumas "
#~ "maneiras de gerenciar isso. Consulte a seção de tópicos avançados \":ref:"
#~ "`Fonte única da versão <Single sourcing the version>`\"."

#~ msgid "Give a short and long description for your project."
#~ msgstr "Da uma descrição curta e longa para seu projeto."

#~ msgid ""
#~ "These values will be displayed on :term:`PyPI <Python Package Index "
#~ "(PyPI)>` if you publish your project. On ``pypi.org``, the user interface "
#~ "displays ``description`` in the grey banner and ``long_description`` in "
#~ "the section named \"Project Description\"."
#~ msgstr ""
#~ "Esses valores serão exibidos no :term:`PyPI <Python Package Index "
#~ "(PyPI)>` se você publicar seu projeto. No ``pypi.org``, a interface do "
#~ "usuário exibe ``description`` no banner cinza e ``long_description`` na "
#~ "seção chamada \"Descrição do Projeto\"."

#~ msgid ""
#~ "``description`` is also displayed in lists of projects. For example, it's "
#~ "visible in the search results pages such as https://pypi.org/search/?"
#~ "q=jupyter, the front-page lists of trending projects and new releases, "
#~ "and the list of projects you maintain within your account profile (such "
#~ "as https://pypi.org/user/jaraco/)."
#~ msgstr ""
#~ "``description`` também é exibido em listas de projetos. Por exemplo, ele "
#~ "é visível nas páginas de resultados de pesquisa, como https://pypi.org/"
#~ "search/?q=jupyter, nas listas da página inicial de projetos populares e "
#~ "novos lançamentos e na lista de projetos que você mantém no perfil de sua "
#~ "conta (como https://pypi.org/user/jaraco/)."

#~ msgid ""
#~ "A :ref:`content type <core-metadata-description-content-type>` can be "
#~ "specified with the ``long_description_content_type`` argument, which can "
#~ "be one of ``text/plain``, ``text/x-rst``, or ``text/markdown``, "
#~ "corresponding to no formatting, `reStructuredText (reST) <https://"
#~ "docutils.sourceforge.io/docs/ref/rst/restructuredtext.html#reference-"
#~ "names>`_, and the GitHub-flavored Markdown dialect of `Markdown <https://"
#~ "daringfireball.net/projects/markdown/>`_ respectively."
#~ msgstr ""
#~ "Um :ref:`tipo de conteúdo <core-metadata-description-content-type>` pode "
#~ "ser especificado com o argumento ``long_description_content_type``, que "
#~ "pode ser um de ``text/plain``, ``text/x-rst`` ou ``text/markdown``, "
#~ "correspondendo a nenhuma formatação, `reStructuredText (reST) <https://"
#~ "docutils.sourceforge.io/docs/ref/rst/restructuredtext.html#reference-"
#~ "names>`_, e o dialeto Markdown com sabor do GitHub de `Markdown <https://"
#~ "daringfireball.net/projects/markdown/>`_ respectivamente."

#~ msgid "``url``"
#~ msgstr "``url``"

#~ msgid "Give a homepage URL for your project."
#~ msgstr "Fornece o URL da página inicial do seu projeto."

#, fuzzy
#~ msgid "``author``"
#~ msgstr "author"

#~ msgid "Provide details about the author."
#~ msgstr "Fornece detalhes sobre o autor."

#~ msgid ""
#~ "The ``license`` argument doesn't have to indicate the license under which "
#~ "your package is being released, although you may optionally do so if you "
#~ "want.  If you're using a standard, well-known license, then your main "
#~ "indication can and should be via the ``classifiers`` argument. "
#~ "Classifiers exist for all major open-source licenses."
#~ msgstr ""
#~ "O argumento ``license`` não precisa indicar a licença sob a qual seu "
#~ "pacote está sendo lançado, embora você possa opcionalmente fazer isso se "
#~ "desejar. Se você estiver usando uma licença padrão bem conhecida, sua "
#~ "indicação principal pode e deve ser por meio do argumento "
#~ "``classifiers``. Existem classificadores para todas as principais "
#~ "licenças de código aberto."

#~ msgid ""
#~ "Provide a list of classifiers that categorize your project. For a full "
#~ "listing, see https://pypi.org/classifiers/."
#~ msgstr ""
#~ "Fornece uma lista de classificadores que categorizam seu projeto. Para "
#~ "obter uma lista completa, consulte https://pypi.org/classifiers/."

#~ msgid "List keywords that describe your project."
#~ msgstr "Lista as palavras-chave que descrevem seu projeto."

#, fuzzy
#~ msgid "``project_urls``"
#~ msgstr "project_urls"

#~ msgid ""
#~ "List additional relevant URLs about your project. This is the place to "
#~ "link to bug trackers, source repositories, or where to support package "
#~ "development. The string of the key is the exact text that will be "
#~ "displayed on PyPI."
#~ msgstr ""
#~ "Lista URLs relevantes adicionais sobre seu projeto. Este é o lugar para "
#~ "se conectar a rastreadores de bugs, repositórios fontes ou onde oferecer "
#~ "suporte ao desenvolvimento de pacotes. A string da chave é o texto exato "
#~ "que será exibido no PyPI."

#, fuzzy
#~ msgid "``python_requires``"
#~ msgstr "python_requires"

#~ msgid ""
#~ "If your project only runs on certain Python versions, setting the "
#~ "``python_requires`` argument to the appropriate :pep:`440` version "
#~ "specifier string will prevent :ref:`pip` from installing the project on "
#~ "other Python versions.  For example, if your package is for Python 3+ "
#~ "only, write::"
#~ msgstr ""
#~ "Se o seu projeto só funciona em certas versões do Python, definir o "
#~ "argumento ``python_requires`` para a string apropriada especificadora de "
#~ "versão da :pep:`440` impedirá :ref:`pip` de instalar o projeto em outras "
#~ "versões do Python. Por exemplo, se seu pacote for apenas para Python 3+, "
#~ "escreva::"

#~ msgid ""
#~ "If your package is for Python 2.6, 2.7, and all versions of Python 3 "
#~ "starting with 3.3, write::"
#~ msgstr ""
#~ "Se o seu pacote for para Python 2.6, 2.7 e todas as versões do Python 3 "
#~ "começando com 3.3, escreva::"

#~ msgid "And so on."
#~ msgstr "E por aí vai."

#~ msgid ""
#~ "Support for this feature is relatively recent.  Your project's source "
#~ "distributions and wheels (see :ref:`Packaging Your Project`) must be "
#~ "built using at least version 24.2.0 of :ref:`setuptools` in order for the "
#~ "``python_requires`` argument to be recognized and the appropriate "
#~ "metadata generated."
#~ msgstr ""
#~ "O suporte para esse recurso é relativamente recente. As distribuições de "
#~ "código-fonte e wheels do seu projeto (veja :ref:`Empacotando seu projeto "
#~ "<Packaging Your Project>`) devem ser construídas usando pelo menos a "
#~ "versão 24.2.0 do :ref:`setuptools` para que o argumento "
#~ "``python_requires`` seja reconhecido e os metadados apropriados gerados."

#~ msgid ""
#~ "In addition, only versions 9.0.0 and higher of :ref:`pip` recognize the "
#~ "``python_requires`` metadata.  Users with earlier versions of pip will be "
#~ "able to download & install projects on any Python version regardless of "
#~ "the projects' ``python_requires`` values."
#~ msgstr ""
#~ "Além disso, apenas as versões 9.0.0 e superiores do :ref:`pip` reconhecem "
#~ "os metadados de ``python_requires``. Usuários com versões anteriores do "
#~ "pip serão capazes de baixar e instalar projetos em qualquer versão do "
#~ "Python, independentemente dos valores de ``python_requires`` dos projetos."

#~ msgid "``entry_points``"
#~ msgstr "``entry_points``"

#~ msgid ""
#~ "Use this keyword to specify any plugins that your project provides for "
#~ "any named entry points that may be defined by your project or others that "
#~ "you depend on."
#~ msgstr ""
#~ "Use esta palavra-chave para especificar quaisquer plugins que seu projeto "
#~ "fornece para quaisquer pontos de entrada nomeados que podem ser definidos "
#~ "por seu projeto ou outros dos quais você depende."

#~ msgid ""
#~ "For more information, see the section on :ref:`Advertising Behavior "
#~ "<setuptools:dynamic discovery of services and plugins>` from the :ref:"
#~ "`setuptools` docs."
#~ msgstr ""
#~ "Para obter mais informações, consulte a seção sobre :ref:`Comportamento "
#~ "de Publicidade <setuptools:dynamic discovery of services and plugins>` da "
#~ "documentação do :ref:`setuptools`."

#~ msgid ""
#~ "The most commonly used entry point is \"console_scripts\" (see below)."
#~ msgstr ""
#~ "O ponto de entrada mais comumente usado é \"console_scripts\" (veja "
#~ "abaixo)."

#, fuzzy
#~ msgid "``console_scripts``"
#~ msgstr "console_scripts"

#~ msgid ""
#~ "Use ``console_script`` :ref:`entry points <setuptools:dynamic discovery "
#~ "of services and plugins>` to register your script interfaces. You can "
#~ "then let the toolchain handle the work of turning these interfaces into "
#~ "actual scripts [2]_.  The scripts will be generated during the install of "
#~ "your :term:`distribution <Distribution Package>`."
#~ msgstr ""
#~ "Use :ref:`pontos de entrada <setuptools:dynamic discovery of services and "
#~ "plugins>` de ``console_script`` para registrar suas interfaces de script. "
#~ "Você pode então deixar o conjunto de ferramentas lidar com o trabalho de "
#~ "transformar essas interfaces em scripts reais [2]_. Os scripts serão "
#~ "gerados durante a instalação do seu :term:`distribuição <Distribution "
#~ "Package>`."

#~ msgid ""
#~ "For more information, see :doc:`Entry Points <setuptools:userguide/"
#~ "entry_point>` from the :doc:`setuptools docs <setuptools:index>`."
#~ msgstr ""
#~ "Para mais informações, veja :doc:`Entry Points <setuptools:userguide/"
#~ "entry_point>` (pontos de entrada, em português) da :doc:`documentação do "
#~ "setuptools <setuptools:index>`."

#~ msgid ""
#~ "Specifically, the \"console_script\" approach generates ``.exe`` files on "
#~ "Windows, which are necessary because the OS special-cases ``.exe`` files. "
#~ "Script-execution features like ``PATHEXT`` and the :pep:`Python Launcher "
#~ "for Windows <397>` allow scripts to be used in many cases, but not all."
#~ msgstr ""
#~ "Especificamente, a abordagem \"console_script\" gera arquivos ``.exe`` no "
#~ "Windows, que são necessários por causa dos arquivos ``.exe`` de casos "
#~ "especiais do sistema operacional. Recursos de execução de script como "
#~ "``PATHEXT`` e o :pep:`Inicializador do Python para Windows <397>` "
#~ "permitem que scripts sejam usados em muitos casos, mas não em todos."

#~ msgid ""
#~ "The binary distribution format (:term:`wheel <Wheel>`) was originally "
#~ "defined in :pep:`427`. The current version of the specification is here."
#~ msgstr ""
#~ "O formato de distribuição binária (:term:`wheel <Wheel>`) foi "
#~ "originalmente definido na :pep:`427`. A versão atual da especificação "
#~ "está aqui."

#~ msgid "Abstract"
#~ msgstr "Abstrato"

#~ msgid ""
#~ "This PEP describes a built-package format for Python called \"wheel\"."
#~ msgstr ""
#~ "Esta PEP descreve um formato de pacote construído para Python chamado "
#~ "\"wheel\"."

#~ msgid "PEP Acceptance"
#~ msgstr "Aceitação da PEP"

#~ msgid ""
#~ "This PEP was accepted, and the defined wheel version updated to 1.0, by "
#~ "Nick Coghlan on 16th February, 2013 [1]_"
#~ msgstr ""
#~ "Esta PEP foi aceita, e a versão do wheel definida foi atualizada para "
#~ "1.0, por Nick Coghlan em 16 de fevereiro de 2013 [1]_"

#~ msgid "Rationale"
#~ msgstr "Justificativa"

#~ msgid ""
#~ "Python needs a package format that is easier to install than sdist. "
#~ "Python's sdist packages are defined by and require the distutils and "
#~ "setuptools build systems, running arbitrary code to build-and-install, "
#~ "and re-compile, code just so it can be installed into a new virtualenv.  "
#~ "This system of conflating build-install is slow, hard to maintain, and "
#~ "hinders innovation in both build systems and installers."
#~ msgstr ""
#~ "Python precisa de um formato de pacote mais fácil de instalar do que "
#~ "sdist. Os pacotes sdist do Python são definidos e requerem os sistemas de "
#~ "construção distutils e setuptools, executando código arbitrário para "
#~ "construir e instalar e recompilar o código apenas para que possa ser "
#~ "instalado em um novo virtualenv. Este sistema de combinação entre "
#~ "construção e instalação é lento, difícil de manter e impede a inovação "
#~ "tanto nos sistemas de construção quanto nos instaladores."

#~ msgid ""
#~ "Wheel attempts to remedy these problems by providing a simpler interface "
#~ "between the build system and the installer.  The wheel binary package "
#~ "format frees installers from having to know about the build system, saves "
#~ "time by amortizing compile time over many installations, and removes the "
#~ "need to install a build system in the target environment."
#~ msgstr ""
#~ "O wheel tenta remediar esses problemas fornecendo uma interface mais "
#~ "simples entre o sistema de compilação e o instalador. O formato do pacote "
#~ "binário wheel libera os instaladores de ter que saber sobre o sistema de "
#~ "compilação, economiza tempo amortizando o tempo de compilação em muitas "
#~ "instalações e elimina a necessidade de instalar um sistema de compilação "
#~ "no ambiente de destino."

#~ msgid "Comparison to .egg"
#~ msgstr "Comparação com .egg"

#~ msgid ""
#~ "Wheel is an installation format; egg is importable.  Wheel archives do "
#~ "not need to include .pyc and are less tied to a specific Python version "
#~ "or implementation. Wheel can install (pure Python) packages built with "
#~ "previous versions of Python so you don't always have to wait for the "
#~ "packager to catch up."
#~ msgstr ""
#~ "Wheel é um formato de instalação; ovo é importável. Os arquivos wheel não "
#~ "precisam incluir .pyc e estão menos vinculados a uma versão ou "
#~ "implementação específica do Python. O Wheel pode instalar pacotes (puro "
#~ "Python) construídos com versões anteriores do Python, portanto, você nem "
#~ "sempre precisa esperar que o empacotador os atualize."

#~ msgid ""
#~ "Wheel uses .dist-info directories; egg uses .egg-info.  Wheel is "
#~ "compatible with the new world of Python packaging and the new concepts it "
#~ "brings."
#~ msgstr ""
#~ "O Wheel usa diretórios .dist-info; egg usa .egg-info. Wheel é compatível "
#~ "com o novo mundo da empacotamento de Python e os novos conceitos que ele "
#~ "traz."

#~ msgid ""
#~ "Wheel has a richer file naming convention for today's multi-"
#~ "implementation world.  A single wheel archive can indicate its "
#~ "compatibility with a number of Python language versions and "
#~ "implementations, ABIs, and system architectures.  Historically the ABI "
#~ "has been specific to a CPython release, wheel is ready for the stable ABI."
#~ msgstr ""
#~ "O Wheel tem uma convenção de nomenclatura de arquivo mais rica para o "
#~ "mundo de múltiplas implementações de hoje. Um único arquivo de wheel pode "
#~ "indicar sua compatibilidade com várias versões e implementações de "
#~ "linguagem Python, ABIs e arquiteturas de sistema. Historicamente, a ABI "
#~ "tem sido específica para uma versão do CPython, o wheel estando pronto "
#~ "para a ABI estável."

#~ msgid ""
#~ "Wheel is lossless.  The first wheel implementation bdist_wheel always "
#~ "generates egg-info, and then converts it to a .whl.  It is also possible "
#~ "to convert existing eggs and bdist_wininst distributions."
#~ msgstr ""
#~ "O wheel não causa perdas. A implementação do primeiro wheel, bdist_wheel, "
#~ "sempre gera egg-info e, então, as converte em .whl. Também é possível "
#~ "converter eggs existentes e distribuições de bdist_wininst."

#~ msgid ""
#~ "Wheel is versioned.  Every wheel file contains the version of the wheel "
#~ "specification and the implementation that packaged it. Hopefully the next "
#~ "migration can simply be to Wheel 2.0."
#~ msgstr ""
#~ "Wheel é versionado. Cada arquivo wheel contém a versão da especificação "
#~ "wheel e a implementação que a empacotou. Esperançosamente, a próxima "
#~ "migração pode ser simplesmente para Wheel 2.0."

#~ msgid "Wheel is a reference to the other Python."
#~ msgstr "Wheel é uma referência a outro Python."

#~ msgid "Since :pep:`427`, this specification has changed as follows:"
#~ msgstr "Desde a :pep:`427`, esta especificação mudou da seguinte forma:"

#~ msgid ""
#~ "PEP acceptance (https://mail.python.org/pipermail/python-dev/2013-"
#~ "February/124103.html)"
#~ msgstr ""
#~ "Aceitação da PEP (https://mail.python.org/pipermail/python-dev/2013-"
#~ "February/124103.html)"

#~ msgid "This document has been placed into the public domain."
#~ msgstr "Este documento foi colocado em domínio público."

#~ msgid "``python -m twine check``"
#~ msgstr "``python -m twine check``"

#~ msgid "``python -m twine register``"
#~ msgstr "``python -m twine register``"

#~ msgid "``python -m twine upload``"
#~ msgstr "``python -m twine upload``"

#~ msgid "``python -m setuptools-scm``"
#~ msgstr "``python -m setuptools-scm``"

#~ msgid ""
#~ "a ``[project]`` table containing project :doc:`Core Metadata </"
#~ "specifications/core-metadata/>` (name, version, author and so forth); "
#~ "see :doc:`Declaring project metadata </specifications/declaring-project-"
#~ "metadata/>` for more detail"
#~ msgstr ""
#~ "uma tabela ``[project]`` contendo os :doc:`Metadados Principais </"
#~ "specifications/core-metadata/>` (nome, versão, autor e assim por diante) "
#~ "do projeto; veja :doc:`Declarando os metadados do projeto </"
#~ "specifications/declaring-project-metadata/>` para mais detalhes"

#~ msgid "a ``[tool]`` table containing tool-specific configuration options"
#~ msgstr ""
#~ "uma tabela ``[tool]`` contendo opções de configuração específicas da "
#~ "ferramenta"

#~ msgid ""
#~ "A `content type <https://packaging.python.org/specifications/core-"
#~ "metadata/#description-content-type-optional>`_ can be specified with the "
#~ "``long_description_content_type`` argument, which can be one of ``text/"
#~ "plain``, ``text/x-rst``, or ``text/markdown``, corresponding to no "
#~ "formatting, `reStructuredText (reST) <https://docutils.sourceforge.io/"
#~ "docs/ref/rst/restructuredtext.html#reference-names>`_, and the GitHub-"
#~ "flavored Markdown dialect of `Markdown <https://daringfireball.net/"
#~ "projects/markdown/>`_ respectively."
#~ msgstr ""
#~ "Um `tipo de conteúdo <https://packaging.python.org/specifications/core-"
#~ "metadata/#description-content-type-optional>`_ pode ser especificado com "
#~ "o argumento ``long_description_content_type``, que pode ser um de ``text/"
#~ "plain``, ``text/x-rst`` ou ``text/markdown``, correspondendo a nenhuma "
#~ "formatação, `reStructuredText (reST) <https://docutils.sourceforge.io/"
#~ "docs/ref/rst/restructuredtext.html#reference-names>`_, e o dialeto "
#~ "Markdown com sabor do GitHub de `Markdown <https://daringfireball.net/"
#~ "projects/markdown/>`_ respectivamente."

#~ msgid "You can learn more about pipx at https://pypa.github.io/pipx/."
#~ msgstr "Você pode aprender mais sobre pipx em https://pypa.github.io/pipx/."

#~ msgid ":ref:`declaring-build-dependencies`"
#~ msgstr ":ref:`declaring-build-dependencies`"

#~ msgid ""
#~ "Read :ref:`declaring-project-metadata` for the full specification of the "
#~ "content allowed in the ``[project]`` table."
#~ msgstr ""
#~ "Leia :ref:`declaring-project-metadata` para a especificação completa do "
#~ "conteúdo permitido na tabela ``[project]``."

#~ msgid ":ref:`declaring-project-metadata`"
#~ msgstr ":ref:`declaring-project-metadata`"

#~ msgid ""
#~ "`Docs <https://pypa.github.io/pipx/>`__ | `GitHub <https://github.com/"
#~ "pypa/pipx>`__ | `PyPI <https://pypi.org/project/pipx/>`__"
#~ msgstr ""
#~ "`Documentação <https://pypa.github.io/pipx/>`__ | `GitHub <https://github."
#~ "com/pypa/pipx>`__ | `PyPI <https://pypi.org/project/pipx/>`__"

#~ msgid ""
#~ ":doc:`Docs <packaging.python.org:index>` | `Issues <https://github.com/"
#~ "pypa/packaging.python.org/issues>`__ | `GitHub <https://github.com/pypa/"
#~ "packaging.python.org>`__"
#~ msgstr ""
#~ ":doc:`Documentação <packaging:index>` | `Issues <https://github.com/pypa/"
#~ "packaging.python.org/issues>`__ | `GitHub <https://github.com/pypa/"
#~ "packaging.python.org>`__"

#~ msgid ""
#~ "trove-classifiers is the canonical source for `classifiers on PyPI "
#~ "<https://pypi.org/classifiers/>`_, which project maintainers use to "
#~ "`systematically describe their projects <https://packaging.python.org/"
#~ "specifications/core-metadata/#classifier-multiple-use>`_ so that users "
#~ "can better find projects that match their needs on the PyPI."
#~ msgstr ""
#~ "trove-classifiers é a fonte canônica para `classificadores no PyPI "
#~ "<https://pypi.org/classifiers/>`_, que os mantenedores de projetos usam "
#~ "para `descrever sistematicamente seus projetos <https://packaging.python."
#~ "org/specifications/core-metadata/#classifier-multiple-use>`_ para que os "
#~ "usuários possam encontrar melhor os projetos que correspondem às suas "
#~ "necessidades no PyPI."

#, fuzzy
#~ msgid ""
#~ "The ``pyproject.toml`` file is written in `TOML <https://toml.io>`_. "
#~ "Among other metadata (such as :ref:`project metadata <declaring-project-"
#~ "metadata>`), it declares any Python level dependencies that must be "
#~ "installed in order to run the project's build system successfully."
#~ msgstr ""
#~ "`pyproject.toml` é um formato de arquivo independente do sistema de "
#~ "construção definido na :pep:`518` que os projetos podem fornecer para "
#~ "declarar quaisquer dependências de nível Python que devem ser instaladas "
#~ "para executar o sistema de construção do projeto com sucesso."

#~ msgid ""
#~ ":pep:`621` specifies how to write a project's :ref:`core metadata <core-"
#~ "metadata>` in a ``pyproject.toml`` file for packaging-related tools to "
#~ "consume. It defines the following specification as the canonical source "
#~ "for the format used."
#~ msgstr ""
#~ "A :pep:`621` especifica como escrever :ref:`metadados principais <core-"
#~ "metadata>` de um projeto em um arquivo ``pyproject.toml`` para "
#~ "ferramentas relacionadas ao empacotamento consumirem. Ele define a "
#~ "seguinte especificação como a fonte canônica para o formato usado."

#, fuzzy
#~ msgid ""
#~ "The keys defined in this specification MUST be in a table named "
#~ "``[project]`` in ``pyproject.toml``. No tools may add keys to this table "
#~ "which are not defined by this specification. For tools wishing to store "
#~ "their own settings in ``pyproject.toml``, they may use the ``[tool]`` "
#~ "table as defined in the :ref:`build dependency declaration specification "
#~ "<declaring-build-dependencies>`. The lack of a ``[project]`` table "
#~ "implicitly means the :term:`build backend <Build Backend>` will "
#~ "dynamically provide all keys."
#~ msgstr ""
#~ "As chaves definidas nesta especificação DEVEM estar em uma tabela chamada "
#~ "``[project]`` no arquivo ``pyproject.toml``. Nenhuma ferramenta pode "
#~ "adicionar chaves a esta tabela que não sejam definidas por esta "
#~ "especificação. Para ferramentas que desejam armazenar suas próprias "
#~ "configurações em ``pyproject.toml``, elas podem usar a tabela ``[tool]`` "
#~ "conforme definido na :ref:`especificação da declaração de dependências de "
#~ "construção <declaring-build-dependencies>`. A falta de uma tabela "
#~ "``[project]`` implicitamente significa que o backend da construção "
#~ "fornecerá dinamicamente todas as chaves."

#~ msgid ""
#~ "A ``.tar.gz`` source distribution (sdist) contains a single top-level "
#~ "directory called ``{name}-{version}`` (e.g. ``foo-1.0``), containing the "
#~ "source files of the package. The name and version MUST match the metadata "
#~ "stored in the file. This directory must also contain a :file:`pyproject."
#~ "toml` in the format defined in :ref:`declaring-build-dependencies`, and a "
#~ "``PKG-INFO`` file containing metadata in the format described in the :ref:"
#~ "`core-metadata` specification. The metadata MUST conform to at least "
#~ "version 2.2 of the metadata specification."
#~ msgstr ""
#~ "Uma distribuição fonte ``.tar.gz`` (sdist) contém um único diretório de "
#~ "nível superior chamado ``{name}-{version}`` (por exemplo, ``foo-1.0``), "
#~ "contendo os arquivos fonte do pacote. O nome e a versão DEVEM "
#~ "corresponder aos metadados armazenados no arquivo. Este diretório também "
#~ "deve conter um :file:`pyproject.toml` no formato definido em :ref:"
#~ "`declaring-build-dependencies` e um arquivo ``PKG-INFO`` contendo "
#~ "metadados no formato descrito na especificação :ref:`core-metadata`. Os "
#~ "metadados DEVEM estar em conformidade com pelo menos a versão 2.2 da "
#~ "especificação de metadados."

#~ msgid ""
#~ "Read :pep:`517` and :pep:`518` for background and details on build tool "
#~ "configuration."
#~ msgstr ""
#~ "Leia a :pep:`517` e a :pep:`518` para um informações e detalhes sobre a "
#~ "configuração de ferramenta de construção."

#~ msgid "Read about :doc:`/guides/packaging-binary-extensions`."
#~ msgstr "Leia sobre :doc:`/guides/packaging-binary-extensions`."

#, fuzzy
#~ msgid "Current recommendation"
#~ msgstr "Recomendações de ferramentas"

#~ msgid ""
#~ "`distribute`_ was a fork of setuptools that was merged back into "
#~ "setuptools (in v0.7), thereby making setuptools the primary choice for "
#~ "Python packaging."
#~ msgstr ""
#~ "`distribute`_ era um fork do setuptools que foi mesclado no setuptools "
#~ "(na v0.7), tornando assim setuptools a escolha primária para o "
#~ "empacotamento Python."

#~ msgid ""
#~ "When building a :term:`source distribution <Source Distribution (or "
#~ "\"sdist\")>` for your package, by default only a minimal set of files are "
#~ "included.  You may find yourself wanting to include extra files in the "
#~ "source distribution, such as an authors/contributors file, a :file:`docs/"
#~ "` directory, or a directory of data files used for testing purposes.  "
#~ "There may even be extra files that you *need* to include; for example, if "
#~ "your :file:`setup.py` computes your project's ``long_description`` by "
#~ "reading from both a README and a changelog file, you'll need to include "
#~ "both those files in the sdist so that people that build or install from "
#~ "the sdist get the correct results."
#~ msgstr ""
#~ "Ao construir uma :term:`distribuição fonte <Distribuição fonte (ou "
#~ "\"sdist\")>` para o seu pacote, por padrão apenas um conjunto mínimo de "
#~ "arquivos é incluído. Você pode querer incluir arquivos extras na "
#~ "distribuição, como um arquivo de autores/contribuidores, um diretório :"
#~ "file:`docs/` ou um diretório de arquivos de dados usado para fins de "
#~ "teste. Pode até haver arquivos extras que você *precisa* incluir; por "
#~ "exemplo, se o seu :file:`setup.py` calcula a ``long_description`` do seu "
#~ "projeto lendo um arquivo README e um changelog, você precisará incluir "
#~ "ambos os arquivos no sdist para que as pessoas que construam ou instalar "
#~ "a partir do sdist obtém os resultados corretos."

#~ msgid ""
#~ "Adding & removing files to & from the source distribution is done by "
#~ "writing a :file:`MANIFEST.in` file at the project root."
#~ msgstr ""
#~ "Adicionar e remover arquivos para e da distribuição fonte é feito "
#~ "escrevendo um arquivo :file:`MANIFEST.in` na raiz do projeto."

#~ msgid "How files are included in an sdist"
#~ msgstr "Como os arquivos são incluídos em um sdist"

#~ msgid ""
#~ "The following files are included in a source distribution by default:"
#~ msgstr ""
#~ "Os seguintes arquivos são incluídos em uma distribuição fonte por padrão:"

#~ msgid ""
#~ "all Python source files implied by the ``py_modules`` and ``packages`` "
#~ "``setup()`` arguments"
#~ msgstr ""
#~ "todos os arquivos fonte Python implícitos pelos argumentos ``py_modules`` "
#~ "e ``packages`` do ``setup()``"

#~ msgid ""
#~ "all C source files mentioned in the ``ext_modules`` or ``libraries`` "
#~ "``setup()`` arguments"
#~ msgstr ""
#~ "todos os arquivos fonte C mencionados nos argumentos ``ext_modules`` ou "
#~ "``libraries`` do ``setup()``"

#~ msgid "scripts specified by the ``scripts`` ``setup()`` argument"
#~ msgstr "scripts especificados pelo argumento ``scripts`` do ``setup()``"

#~ msgid ""
#~ "all files specified by the ``package_data`` and ``data_files`` "
#~ "``setup()`` arguments"
#~ msgstr ""
#~ "todos os arquivos especificados pelos argumentos ``package_data`` e "
#~ "``data_files`` do ``setup()``"

#~ msgid ""
#~ "the file specified by the ``license_file`` option in :file:`setup.cfg` "
#~ "(setuptools 40.8.0+)"
#~ msgstr ""
#~ "o arquivo especificado pela opção ``license_file`` em :file:`setup.cfg` "
#~ "(setuptools 40.8.0+)"

#~ msgid ""
#~ "all files specified by the ``license_files`` option in :file:`setup.cfg` "
#~ "(setuptools 42.0.0+)"
#~ msgstr ""
#~ "todos os arquivos especificados pela opção ``license_files`` em :file:"
#~ "`setup.cfg` (setuptools 42.0.0+)"

#~ msgid "all files matching the pattern :file:`test/test*.py`"
#~ msgstr "todos os arquivos correspondendo ao padrão :file:`test/test*.py`"

#~ msgid ":file:`setup.py` (or whatever you called your setup script)"
#~ msgstr ""
#~ ":file:`setup.py` (ou o que quer que você tenha chamado de seu script de "
#~ "configuração)"

#~ msgid ":file:`setup.cfg`"
#~ msgstr ":file:`setup.cfg`"

#~ msgid ":file:`README`"
#~ msgstr ":file:`README`"

#~ msgid ":file:`README.txt`"
#~ msgstr ":file:`README.txt`"

#~ msgid ":file:`README.rst` (Python 3.7+ or setuptools 0.6.27+)"
#~ msgstr ":file:`README.rst` (Python 3.7+ ou setuptools 0.6.27+)"

#~ msgid ":file:`README.md` (setuptools 36.4.0+)"
#~ msgstr ":file:`README.md` (setuptools 36.4.0+)"

#~ msgid ":file:`pyproject.toml` (setuptools 43.0.0+)"
#~ msgstr ":file:`pyproject.toml` (setuptools 43.0.0+)"

#~ msgid ":file:`MANIFEST.in`"
#~ msgstr ":file:`MANIFEST.in`"

#~ msgid ""
#~ "After adding the above files to the sdist, the commands in :file:"
#~ "`MANIFEST.in` (if such a file exists) are executed in order to add and "
#~ "remove further files to and from the sdist.  Default files can even be "
#~ "removed from the sdist with the appropriate :file:`MANIFEST.in` command."
#~ msgstr ""
#~ "Depois de adicionar os arquivos acima ao sdist, os comandos em :file:"
#~ "`MANIFEST.in` (se tal arquivo existir) são executados para adicionar e "
#~ "remover outros arquivos para e do sdist. Os arquivos padrão podem até "
#~ "mesmo ser removidos do sdist com o comando apropriado de :file:`MANIFEST."
#~ "in`."

#~ msgid ""
#~ "After processing the :file:`MANIFEST.in` file, setuptools removes the :"
#~ "file:`build/` directory as well as any directories named :file:`RCS`, :"
#~ "file:`CVS`, or :file:`.svn` from the sdist, and it adds a :file:`PKG-"
#~ "INFO` file and an :file:`*.egg-info` directory.  This behavior cannot be "
#~ "changed with :file:`MANIFEST.in`."
#~ msgstr ""
#~ "Após processar o arquivo :file:`MANIFEST.in`, setuptools remove o "
#~ "diretório :file:`build/` bem como quaisquer diretórios chamados :file:"
#~ "`RCS`, :file:`CVS` ou :file:`.svn` do sdist, e adiciona um arquivo :file:"
#~ "`PKG-INFO` e um diretório :file:`*.egg-info`. Este comportamento não pode "
#~ "ser alterado com :file:`MANIFEST.in`."

#~ msgid ":file:`MANIFEST.in` commands"
#~ msgstr "Comandos do :file:`MANIFEST.in`"

#~ msgid ""
#~ "A :file:`MANIFEST.in` file consists of commands, one per line, "
#~ "instructing setuptools to add or remove some set of files from the "
#~ "sdist.  The commands are:"
#~ msgstr ""
#~ "Um arquivo :file:`MANIFEST.in` consiste em comandos, um por linha, "
#~ "instruindo o setuptools a adicionar ou remover algum conjunto de arquivos "
#~ "do sdist. Os comandos são:"

#~ msgid "Command"
#~ msgstr "Comando"

#~ msgid ":samp:`include {pat1} {pat2} ...`"
#~ msgstr ":samp:`include {padrão1} {padrão2} ...`"

#~ msgid ""
#~ "Add all files matching any of the listed patterns (Files must be given as "
#~ "paths relative to the root of the project)"
#~ msgstr ""
#~ "Adicione todos os arquivos que correspondam a qualquer um dos padrões "
#~ "listados (os arquivos devem ser fornecidos como caminhos relativos à raiz "
#~ "do projeto)"

#~ msgid ":samp:`exclude {pat1} {pat2} ...`"
#~ msgstr ":samp:`exclude {padrão1} {padrão2} ...`"

#~ msgid ""
#~ "Remove all files matching any of the listed patterns (Files must be given "
#~ "as paths relative to the root of the project)"
#~ msgstr ""
#~ "Remove todos os arquivos correspondendo a qualquer um dos padrões "
#~ "listados (Arquivos devem ser fornecidos como caminhos relativos à raiz do "
#~ "projeto)"

#~ msgid ":samp:`recursive-include {dir-pattern} {pat1} {pat2} ...`"
#~ msgstr ":samp:`recursive-include {padrão-dir} {padrão1} {padrão2} ...`"

#~ msgid ""
#~ "Add all files under directories matching ``dir-pattern`` that match any "
#~ "of the listed patterns"
#~ msgstr ""
#~ "Adiciona todos os arquivos sob diretórios correspondendo a ``padrão-dir`` "
#~ "que correspondem a qualquer um dos padrões listados"

#~ msgid ":samp:`recursive-exclude {dir-pattern} {pat1} {pat2} ...`"
#~ msgstr ":samp:`recursive-exclude {padrão-dir} {padrão1} {padrão2} ...`"

#~ msgid ""
#~ "Remove all files under directories matching ``dir-pattern`` that match "
#~ "any of the listed patterns"
#~ msgstr ""
#~ "Remove todos os arquivos sob diretórios correspondendo a ``padrão-dir`` "
#~ "que correspondem a qualquer um dos padrões listados"

#~ msgid ":samp:`global-include {pat1} {pat2} ...`"
#~ msgstr ":samp:`global-include {padrão1} {padrão2} ...`"

#~ msgid ""
#~ "Add all files anywhere in the source tree matching any of the listed "
#~ "patterns"
#~ msgstr ""
#~ "Adiciona todos os arquivos em qualquer lugar na árvore de fontes que "
#~ "correspondam a qualquer um dos padrões listados"

#~ msgid ":samp:`global-exclude {pat1} {pat2} ...`"
#~ msgstr ":samp:`global-exclude {padrão1} {padrão2} ...`"

#~ msgid ""
#~ "Remove all files anywhere in the source tree matching any of the listed "
#~ "patterns"
#~ msgstr ""
#~ "Remove todos os arquivos de qualquer lugar na árvore de fontes que "
#~ "correspondam a qualquer um dos padrões listados"

#~ msgid ":samp:`graft {dir-pattern}`"
#~ msgstr ":samp:`graft {padrão-dir}`"

#~ msgid "Add all files under directories matching ``dir-pattern``"
#~ msgstr ""
#~ "Adiciona todos os arquivos sob diretórios correspondendo a ``padrão-dir``"

#~ msgid ":samp:`prune {dir-pattern}`"
#~ msgstr ":samp:`prune {padrão-dir}`"

#~ msgid "Remove all files under directories matching ``dir-pattern``"
#~ msgstr ""
#~ "Remove todos os arquivos sob diretórios correspondendo a ``padrão-dir``"

#~ msgid ""
#~ "The patterns here are glob-style patterns: ``*`` matches zero or more "
#~ "regular filename characters (on Unix, everything except forward slash; on "
#~ "Windows, everything except backslash and colon); ``?`` matches a single "
#~ "regular filename character, and ``[chars]`` matches any one of the "
#~ "characters between the square brackets (which may contain character "
#~ "ranges, e.g., ``[a-z]`` or ``[a-fA-F0-9]``).  Setuptools also has "
#~ "undocumented support for ``**`` matching zero or more characters "
#~ "including forward slash, backslash, and colon."
#~ msgstr ""
#~ "Os padrões aqui são padrões do estilo glob: ``*`` corresponde a zero ou "
#~ "mais caracteres de nome de arquivo regulares (no Unix, tudo exceto barra; "
#~ "no Windows, tudo exceto barra invertida e dois pontos); ``?`` corresponde "
#~ "a um único caractere de nome de arquivo regular, e ``[chars]`` "
#~ "corresponde a qualquer um dos caracteres entre os colchetes (que podem "
#~ "conter intervalos de caracteres, por exemplo, ``[az]`` ou ``[ a-fA-"
#~ "F0-9]``). Setuptools também oferece suporte não documentado a ``**`` "
#~ "correspondendo a zero ou mais caracteres, incluindo barra, barra "
#~ "invertida e dois pontos."

#~ msgid ""
#~ "Directory patterns are relative to the root of the project directory; e."
#~ "g., ``graft example*`` will include a directory named :file:`examples` in "
#~ "the project root but will not include :file:`docs/examples/`."
#~ msgstr ""
#~ "Os padrões de diretório são relativos à raiz do diretório do projeto; por "
#~ "exemplo, ``graft exemplo*`` incluirá um diretório chamado :file:"
#~ "`exemplos` na raiz do projeto, mas não incluirá :file:`docs/exemplos/`."

#~ msgid ""
#~ "File & directory names in :file:`MANIFEST.in` should be ``/``-separated; "
#~ "setuptools will automatically convert the slashes to the local platform's "
#~ "appropriate directory separator."
#~ msgstr ""
#~ "Nomes de arquivos e diretórios em :file:`MANIFEST.in` devem ser separados "
#~ "por ``/``; setuptools irá converter automaticamente as barras para o "
#~ "separador de diretório apropriado da plataforma local."

#~ msgid ""
#~ "Commands are processed in the order they appear in the :file:`MANIFEST."
#~ "in` file.  For example, given the commands:"
#~ msgstr ""
#~ "Os comandos são processados na ordem em que aparecem no arquivo :file:"
#~ "`MANIFEST.in`. Por exemplo, dados os comandos:"

#~ msgid ""
#~ "the contents of the directory tree :file:`tests` will first be added to "
#~ "the sdist, and then after that all files in the sdist with a ``.pyc``, ``."
#~ "pyo``, or ``.pyd`` extension will be removed from the sdist.  If the "
#~ "commands were in the opposite order, then ``*.pyc`` files etc. would be "
#~ "only be removed from what was already in the sdist before adding :file:"
#~ "`tests`, and if :file:`tests` happened to contain any ``*.pyc`` files, "
#~ "they would end up included in the sdist because the exclusion happened "
#~ "before they were included."
#~ msgstr ""
#~ "o conteúdo da árvore de diretórios :file:`tests` será primeiro adicionado "
#~ "ao sdist, e depois disso todos os arquivos no sdist com uma extensão ``."
#~ "pyc``, ``.pyo`` ou ``.pyd`` será removidos do sdist. Se os comandos "
#~ "estivessem na ordem oposta, então os arquivos ``*.pyc`` etc. seriam "
#~ "removidos apenas do que já estava no sdist antes de adicionar :file:"
#~ "`tests`, e se :file:`tests` contivesse quaisquer arquivos ``*.pyc``, eles "
#~ "acabariam incluídos no sdist porque a exclusão aconteceu antes de serem "
#~ "incluídos."

#~ msgid ""
#~ "Use `pkgutil-style namespace packages`_. This is recommended for new "
#~ "packages that need to support Python 2 and 3 and installation via both "
#~ "``pip`` and ``python setup.py install``."
#~ msgstr ""
#~ "Usar `pacotes de espaço de nomes no estilo pkgutil`_. Isso é recomendado "
#~ "para novos pacotes que precisam oferecer suporte a Python 2 e 3 e à "
#~ "instalação via ``pip`` e ``python setup.py install``."

#~ msgid ""
#~ "Use `pkg_resources-style namespace packages`_. This method is recommended "
#~ "if you need compatibility with packages already using this method or if "
#~ "your package needs to be zip-safe."
#~ msgstr ""
#~ "Usar `pacotes de espaço de nomes no estilo pkg_resources`_. Este método é "
#~ "recomendado se você precisa de compatibilidade com pacotes que já usam "
#~ "este método ou se seu pacote precisa ser seguro para uso de zip."

#~ msgid ""
#~ "Because ``mynamespace`` doesn't contain an :file:`__init__.py`, :func:"
#~ "`setuptools.find_packages` won't find the sub-package. You must use :func:"
#~ "`setuptools.find_namespace_packages` instead or explicitly list all "
#~ "packages in your :file:`setup.py`. For example:"
#~ msgstr ""
#~ "Porque ``mynamespace`` não contém um :file:`__init__.py`, :func:"
#~ "`setuptools.find_packages` não encontrará o subpacote. Você deve usar :"
#~ "func:`setuptools.find_namespace_packages` ou listar explicitamente todos "
#~ "os pacotes em seu :file:`setup.py`. Por exemplo:"

#~ msgid "You can make sure that pip is up-to-date by running:"
#~ msgstr "Você pode ter certeza de que o pip está atualizado executando:"

#~ msgid ""
#~ "This guide discusses how to install packages using :ref:`pip` and a "
#~ "virtual environment manager: either :ref:`venv` for Python 3 or :ref:"
#~ "`virtualenv` for Python 2. These are the lowest-level tools for managing "
#~ "Python packages and are recommended if higher-level tools do not suit "
#~ "your needs."
#~ msgstr ""
#~ "Este guia discute como instalar pacotes usando :ref:`pip` e um "
#~ "gerenciador de ambiente virtual: ou :ref:`venv` para Python 3 ou :ref:"
#~ "`virtualenv` para Python 2 Estas são as ferramentas de nível mais baixo "
#~ "para gerenciar pacotes Python e são recomendadas se as ferramentas de "
#~ "nível mais alto não atenderem às suas necessidades."

#~ msgid "Installing pip"
#~ msgstr "Instalando pip"

#~ msgid ""
#~ "Debian and most other distributions include a `python-pip`_ package; if "
#~ "you want to use the Linux distribution-provided versions of pip, see :doc:"
#~ "`/guides/installing-using-linux-tools`."
#~ msgstr ""
#~ "O Debian e a maioria das outras distribuições incluem um pacote `python-"
#~ "pip`_; se você deseja usar as versões fornecidas pela distribuição Linux "
#~ "do pip, consulte :doc:`/guides/installing-using-linux-tools`."

#~ msgid ""
#~ "You can also install pip yourself to ensure you have the latest version. "
#~ "It's recommended to use the system pip to bootstrap a user installation "
#~ "of pip:"
#~ msgstr ""
#~ "Você também pode instalar o pip por conta própria para garantir que "
#~ "possui a versão mais recente. É recomendado usar o sistema pip para "
#~ "inicializar uma instalação de usuário do pip:"

#~ msgid "Installing virtualenv"
#~ msgstr "Instalando virtualenv"

#~ msgid ""
#~ "If you are using Python 3.3 or newer, the :mod:`venv` module is the "
#~ "preferred way to create and manage virtual environments. venv is included "
#~ "in the Python standard library and requires no additional installation. "
#~ "If you are using venv, you may skip this section."
#~ msgstr ""
#~ "Se você estiver usando o Python 3.3 ou mais recente, o módulo :mod:`venv` "
#~ "é a forma preferida de criar e gerenciar ambientes virtuais. venv está "
#~ "incluído na biblioteca padrão Python e não requer instalação adicional. "
#~ "Se você estiver usando venv, pode pular esta seção."

#~ msgid ""
#~ ":ref:`virtualenv` is used to manage Python packages for different "
#~ "projects. Using virtualenv allows you to avoid installing Python packages "
#~ "globally which could break system tools or other projects. You can "
#~ "install virtualenv using pip."
#~ msgstr ""
#~ ":ref:`virtualenv` é usado para gerenciar pacotes Python para diferentes "
#~ "projetos. O uso do virtualenv permite que você evite instalar pacotes "
#~ "Python globalmente, o que poderia quebrar as ferramentas do sistema ou "
#~ "outros projetos. Você pode instalar virtualenv usando pip."

#~ msgid "It should be in the ``env`` directory:"
#~ msgstr "Deve estar no diretório ``env``:"

#~ msgid "Leaving the virtual environment"
#~ msgstr "Saindo do ambiente virtual"

#~ msgid "Installing specific versions"
#~ msgstr "Instalando versões específicas"

#~ msgid "pip can install a package directly from source, for example:"
#~ msgstr ""
#~ "pip pode instalar um pacote diretamente do código-fonte, por exemplo:"

#~ msgid "Installing Packages:"
#~ msgstr "Instalando pacotes:"

#~ msgid "Miscellaneous:"
#~ msgstr "Diversos:"

#~ msgid "The version of the project as supported by :pep:`440`."
#~ msgstr "A versão do projeto conforme suportado pela :pep:`440`."

#~ msgid ""
#~ "Version numbering requirements and the semantics for specifying "
#~ "comparisons between versions are defined in :pep:`440`."
#~ msgstr ""
#~ "Os requisitos de numeração de versão e a semântica para especificar "
#~ "comparações entre as versões são definidos na :pep:`440`."

#~ msgid ""
#~ "The version specifiers section in this PEP supersedes the version "
#~ "specifiers section in :pep:`345`."
#~ msgstr ""
#~ "A seção de especificadores de versão nesta PEP substitui a seção de "
#~ "especificadores de versão na :pep:`345`."

#~ msgid "FIXME"
#~ msgstr "FIXME"

#~ msgid "mention the stable ABI (3.2+, link to the CPython C API docs)"
#~ msgstr ""
#~ "mencionar a ABI estável (3.2+, link para os documentos da API CPython C)"

#~ msgid "mention the implications of the GIL for extension modules"
#~ msgstr "mencionar as implicações do GIL para módulos de extensão"

#~ msgid ""
#~ "For interim guidance on this topic, see the discussion in :issue:`this "
#~ "issue <284>`."
#~ msgstr ""
#~ "Para obter orientações provisórias sobre este tópico, consulte a "
#~ "discussão :issue:`neste relatório de problema <284>`."

#~ msgid "cover publishing as wheel files on PyPI or a custom index server"
#~ msgstr ""
#~ "cobrir a publicação como arquivos wheel no PyPI ou um servidor de "
#~ "indexação personalizado"

#~ msgid "cover creation of Windows and macOS installers"
#~ msgstr "cobrir a criação de instaladores do Windows e do macOS"

#~ msgid ""
#~ "mention the fact that Linux distros have a requirement to build from "
#~ "source in their own build systems, so binary-only releases are strongly "
#~ "discouraged"
#~ msgstr ""
#~ "mencionar o fato de que as distribuições Linux têm um requisito para "
#~ "construir a partir da fonte em seus próprios sistemas de construção, "
#~ "portanto, versões somente binárias são fortemente desencorajadas"

#~ msgid ""
#~ "This section covers the basics of how to create documentation using "
#~ "`Sphinx`_ and host the documentation for free in `Read The Docs`_."
#~ msgstr ""
#~ "Esta seção cobre o básico de como criar documentação usando `Sphinx`_ e "
#~ "hospedar a documentação gratuitamente em `Read The Docs`_."

#~ msgid "Installing Sphinx"
#~ msgstr "Instalando o Sphinx"

#~ msgid "Use ``pip`` to install Sphinx:"
#~ msgstr "Use ``pip`` para instalar o Sphinx:"

#~ msgid ""
#~ "For other installation methods, see this :doc:`installation guide <sphinx:"
#~ "usage/installation>` by Sphinx."
#~ msgstr ""
#~ "Para outros métodos de instalação, veja esta :doc:`guia de instalação "
#~ "<sphinx:usage/installation>` do Sphinx."

#~ msgid "Getting Started With Sphinx"
#~ msgstr "Primeiros passos com Sphinx"

#~ msgid ""
#~ "Create a ``docs`` directory inside your project to hold your "
#~ "documentation:"
#~ msgstr ""
#~ "Crie um diretório ``docs`` dentro de seu projeto para conter sua "
#~ "documentação:"

#~ msgid "Run ``sphinx-quickstart`` inside the ``docs`` directory:"
#~ msgstr "Execute ``sphinx-quickstart`` dentro do diretório ``docs``:"

#~ msgid ""
#~ "This sets up a source directory, walks you through some basic "
#~ "configurations, and creates an ``index.rst`` file as well as a ``conf."
#~ "py`` file."
#~ msgstr ""
#~ "Isso configura um diretório fonte, orienta você por algumas configurações "
#~ "básicas e cria um arquivo ``index.rst``, bem como um arquivo ``conf.py``."

#~ msgid ""
#~ "You can add some information about your project in ``index.rst``, then "
#~ "build them:"
#~ msgstr ""
#~ "Você pode adicionar algumas informações sobre o seu projeto em ``index."
#~ "rst`` e, em seguida, construí-las:"

#~ msgid ""
#~ "For more details on the build process, see this `guide`_ by Read The Docs."
#~ msgstr ""
#~ "Para mais detalhes sobre o processo de construção, veja o `guia`_ do Read "
#~ "The Docs."

#~ msgid ""
#~ "For a more detailed guide on how to use Sphinx and reStructuredText, "
#~ "please see this `documentation tutorial`_ on Hitchhiker's Guide to Python."
#~ msgstr ""
#~ "Para um guia mais detalhado sobre como usar o Sphinx e o "
#~ "reStructuredText, consulte este `tutorial de documentação`_ no Guia do "
#~ "Mochileiro para Python."

#~ msgid ""
#~ "Essential tools and concepts for working within the Python development "
#~ "ecosystem are covered in our :doc:`tutorials/index` section:"
#~ msgstr ""
#~ "Ferramentas e conceitos essenciais para trabalhar dentro do ecossistema "
#~ "de desenvolvimento do Python são abordados em nossa seção de :doc:"
#~ "`tutorials/index`:"

#~ msgid ""
#~ "To get an overview of packaging options for Python libraries and "
#~ "applications, see the :doc:`Overview of Python Packaging <overview>`"
#~ msgstr ""
#~ "Para obter uma visão geral das opções de empacotamento para bibliotecas e "
#~ "aplicações Python, veja a :doc:`Visão geral de empacotamento no Python "
#~ "<overview>`"

#~ msgid "Learn more"
#~ msgstr "Saiba mais"

#~ msgid ""
#~ "Beyond our :doc:`tutorials/index`, this guide has several other resources:"
#~ msgstr ""
#~ "Além de nossos :doc:`tutorials/index`, este guia possui vários outros "
#~ "recursos:"

#~ msgid ""
#~ "The :doc:`guides/index` section for walk throughs, such as :doc:`guides/"
#~ "installing-using-linux-tools` or :doc:`guides/packaging-binary-"
#~ "extensions`."
#~ msgstr ""
#~ "A seção :doc:`guides/index` para passos a passos, tal como :doc:`guides/"
#~ "installing-using-linux-tools` ou :doc:`guides/packaging-binary-"
#~ "extensions`."

#~ msgid ""
#~ "The :doc:`discussions/index` section for in-depth references on topics "
#~ "such as :doc:`discussions/deploying-python-applications` or :doc:"
#~ "`discussions/pip-vs-easy-install`."
#~ msgstr ""
#~ "A seção :doc:`discussions/index` para referências detalhadas sobre "
#~ "tópicos como :doc:`discussions/deploying-python-applications` ou :doc:"
#~ "`discussions/pip-vs-easy-install`."

#~ msgid ""
#~ "``requires`` is a list of packages that are needed to build your package. "
#~ "You don't need to install them; build frontends like :ref:`pip` will "
#~ "install them automatically in a temporary, isolated virtual environment "
#~ "for use during the build process."
#~ msgstr ""
#~ "``requires`` é uma lista de pacotes que são necessários para construir "
#~ "seu pacote. Você não precisa instalá-los; frontends de construção como :"
#~ "ref:`pip` irá instalá-los automaticamente em um ambiente virtual isolado "
#~ "temporário para uso durante o processo de compilação."

#~ msgid ""
#~ "`Docs <https://docs.python.org/3/library/distutils.html>`__ | `Issues "
#~ "<https://bugs.python.org/>`__"
#~ msgstr ""
#~ "`Documentação <https://docs.python.org/pt-br/3/library/distutils.html>`__ "
#~ "| `Issues <https://bugs.python.org/>`__"

#~ msgid "Saving credentials on GitHub"
#~ msgstr "Salvando credenciais no GitHub"

#~ msgid ""
#~ "In this guide, we'll demonstrate uploading to both PyPI and TestPyPI, "
#~ "meaning that we'll have two separate sets of credentials. And we'll need "
#~ "to save them in the GitHub repository settings."
#~ msgstr ""
#~ "Neste guia, demonstraremos o envio para o PyPI e TestPyPI, o que "
#~ "significa que teremos dois conjuntos separados de credenciais. E "
#~ "precisaremos salvá-los nas configurações do repositório do GitHub."

#~ msgid ""
#~ "Go to https://pypi.org/manage/account/#api-tokens and create a new `API "
#~ "token`_. If you have the project on PyPI already, limit the token scope "
#~ "to just that project. You can call it something like ``GitHub Actions CI/"
#~ "CD — project-org/project-repo`` in order for it to be easily "
#~ "distinguishable in the token list. **Don't close the page just yet — you "
#~ "won't see that token again.**"
#~ msgstr ""
#~ "Vá para https://pypi.org/manage/account/#api-tokens e crie um novo `token "
#~ "de API`_. Se você já tem o projeto no PyPI, limite o escopo do token "
#~ "apenas a esse projeto. Você pode chamá-lo de algo como ``GitHub Actions "
#~ "CI/CD — project-org/project-repo`` para que seja facilmente distinguível "
#~ "na lista de tokens. **Não feche a página ainda -- você não verá esse "
#~ "token novamente.**"

#~ msgid ""
#~ "In a separate browser tab or window, go to the ``Settings`` tab of your "
#~ "target repository and then click on `Secrets`_ in the left sidebar."
#~ msgstr ""
#~ "Em uma guia ou janela separada do navegador, vá para a aba "
#~ "``Configurações`` do seu repositório de destino e clique em `Secrets`_ na "
#~ "barra lateral esquerda."

#~ msgid ""
#~ "Create a new secret called ``PYPI_API_TOKEN`` and copy-paste the token "
#~ "from the first step."
#~ msgstr ""
#~ "Crie um novo segredo chamado ` PYPI_API_TOKEN`` e copie e cole o token da "
#~ "primeira etapa."

#~ msgid ""
#~ "Now, let's add initial setup for our job. It's a process that will "
#~ "execute commands that we'll define later. In this guide, we'll use the "
#~ "latest stable Ubuntu LTS version provided by GitHub Actions:"
#~ msgstr ""
#~ "Agora, vamos adicionar a configuração inicial para nosso trabalho. É um "
#~ "processo que executará comandos que definiremos mais tarde. Neste guia, "
#~ "usaremos a versão estável mais recente do Ubuntu LTS fornecido pelo "
#~ "GitHub Actions:"

#~ msgid "Then, add the following under the ``build-n-publish`` section:"
#~ msgstr "Então, adicione o seguinte sob a seção ``build-n-publish``:"

#, fuzzy
#~ msgid ""
#~ "You can use any other method for building distributions as long as it "
#~ "produces ready-to-upload artifacts saved into the ``dist/`` folder. You "
#~ "can even use ``actions/upload-artifact`` and ``actions/download-"
#~ "artifact`` to transfer files between jobs or make them accessible for "
#~ "download from the web CI interface."
#~ msgstr ""
#~ "Você pode usar qualquer outro método para construir distribuições, desde "
#~ "que produza artefatos prontos para enviar, salvos na pasta ``dist/``. "
#~ "Você pode até mesmo usar ``actions/upload-artifact`` e ``actions/download-"
#~ "artifact`` para transferir arquivos entre trabalhos ou torná-los "
#~ "acessíveis para download a partir da interface web de CI."

#~ msgid "So add this to the steps list:"
#~ msgstr "Então, adicione isso à lista de etapas:"

#~ msgid ""
#~ "These two steps use the `pypa/gh-action-pypi-publish`_ GitHub Action: the "
#~ "first one uploads contents of the ``dist/`` folder into TestPyPI "
#~ "unconditionally and the second does that to PyPI, but only if the current "
#~ "commit is tagged. It is recommended you use the latest release tag; a "
#~ "tool like GitHub's dependabot can keep these updated regularly."
#~ msgstr ""
#~ "Essas duas etapas usam a GitHub Action `pypa/gh-action-pypi-publish`_: a "
#~ "primeira carrega o conteúdo da pasta ``dist /`` para TestPyPI "
#~ "incondicionalmente e a segunda faz isso para PyPI, mas apenas se o commit "
#~ "atual estiver marcado. É recomendado que você use a tag de lançamento "
#~ "mais recente; uma ferramenta como o dependabot do GitHub pode mantê-los "
#~ "atualizados regularmente."

#~ msgid ""
#~ "`Docs <https://github.com/pypiserver/pypiserver/blob/master/README."
#~ "rst>`__ | `GitHub <https://github.com/pypiserver/pypiserver>`__ | `PyPI "
#~ "<https://pypi.org/project/pypiserver/>`__"
#~ msgstr ""
#~ "`Documentação <https://github.com/pypiserver/pypiserver/blob/master/"
#~ "README.rst>`__ | `GitHub <https://github.com/pypiserver/pypiserver>`__ | "
#~ "`PyPI <https://pypi.org/project/pypiserver/>`__"

#~ msgid "_`https://bazaar.canonical.com` *(Not responding as of 5/2023)*"
#~ msgstr "_`https://bazaar.canonical.com` *(Não responde desde 5/2023)*"

#~ msgid ""
#~ "This is a list of currently active interoperability specifications "
#~ "maintained by the Python Packaging Authority. The process for updating "
#~ "these standards, and for proposing new ones, is documented on `pypa.io "
#~ "<https://www.pypa.io/en/latest/specifications.html>`__."
#~ msgstr ""
#~ "Esta é uma lista de especificações de interoperabilidade atualmente "
#~ "ativas mantidas pela Python Packaging Authority. O processo de "
#~ "atualização desses padrões e de proposição de novos está documentado em "
#~ "`pypa.io <https://www.pypa.io/en/latest/specifications.html>`__."

#~ msgid ""
#~ "It may also be known that project A follows semantic versioning, and that "
#~ "v2 of 'A' will indicate a break in compatibility, so it makes sense to "
#~ "not allow v2:"
#~ msgstr ""
#~ "Também pode ser sabido que o projeto A segue versionamento semântico, e "
#~ "que a v2 de \"A\" irá indicar uma quebra na compatibilidade, então faz "
#~ "sentido não permitir a v2:"

#~ msgid ":term:`Wheel` has an :pep:`official PEP <427>`. :term:`Egg` did not."
#~ msgstr ""
#~ ":term:`Wheel` tem uma :pep:`PEP oficial <427>`. :term:`Egg` não tinha."

#~ msgid ""
#~ "Circumstantially, in some cases, wheels can be used as an importable "
#~ "runtime format, although :pep:`this is not officially supported at this "
#~ "time <427#is-it-possible-to-import-python-code-directly-from-a-wheel-"
#~ "file>`."
#~ msgstr ""
#~ "Circunstancialmente, em alguns casos, wheels podem ser usados como um "
#~ "formato de tempo de execução importável, embora :pep:`não haja suporte "
#~ "oficial a isso no momento <427#is-it-possible-to-import-python-code-"
#~ "directly-from-a-wheel-file>`."

#~ msgid ""
#~ "Note that the rows are stored in a partitioned, which helps limit the "
#~ "cost of queries. These example queries analyze downloads from recent "
#~ "history by filtering on the ``timestamp`` column."
#~ msgstr ""
#~ "Observe que as linhas são armazenadas em uma partição particionada, o que "
#~ "ajuda a limitar o custo das consultas. Essas consultas de exemplo "
#~ "analisam downloads do histórico recente filtrando na coluna ``timestamp``."

#~ msgid ""
#~ "To only count downloads from pip, filter on the ``details.installer."
#~ "name`` column."
#~ msgstr ""
#~ "Para contar apenas os downloads do pip, filtre na coluna ``details."
#~ "installer.name``."

#~ msgid "For CentOS, see here: https://www.softwarecollections.org/en/"
#~ msgstr "Para CentOS, veja aqui: https://www.softwarecollections.org/en/"

#~ msgid "Debian/Ubuntu"
#~ msgstr "Debian/Ubuntu"

#~ msgid ""
#~ "This will download your repository into the CI runner and then install "
#~ "and activate Python 3.10."
#~ msgstr ""
#~ "Isso fará o download do seu repositório no executor de CI e, em seguida, "
#~ "instalará e ativará o Python 3.10."

#~ msgid ""
#~ "This is great for sharing simple scripts and snippets between people who "
#~ "both have compatible Python versions (such as via email, StackOverflow, "
#~ "or GitHub gists). There are even some entire Python libraries that offer "
#~ "this as an option, such as `bottle.py <https://bottlepy.org/docs/dev/>`_ "
#~ "and :doc:`boltons <boltons:architecture>`."
#~ msgstr ""
#~ "Isso é ótimo para compartilhar scripts e trechos simples entre pessoas "
#~ "que possuem versões Python compatíveis (como via e-mail, StackOverflow ou "
#~ "gists do GitHub). Existem até algumas bibliotecas Python inteiras que "
#~ "oferecem isso como uma opção, como `bottle.py <https://bottlepy.org/docs/"
#~ "dev/>`_ e :doc:`boltons <boltons:architecture>`."

#~ msgid ""
#~ "Computing as we know it is defined by the ability to execute programs. "
#~ "Every operating system natively supports one or more formats of program "
#~ "they can natively execute."
#~ msgstr ""
#~ "A computação como a conhecemos é definida pela capacidade de executar "
#~ "programas. Cada sistema operacional oferece suporte nativamente a um ou "
#~ "mais formatos de programa que eles podem executar nativamente."

#~ msgid ""
#~ "These techniques are mostly reserved for larger scale deployments in data "
#~ "centers, though certain complex applications can benefit from this "
#~ "packaging. Technologies are Python agnostic, and include:"
#~ msgstr ""
#~ "Essas técnicas são reservadas principalmente para implantações em grande "
#~ "escala em datacenters, embora algumas aplicativas complexas possam se "
#~ "beneficiar desse pacote. As tecnologias são agnósticas ao Python e "
#~ "incluem:"

#, fuzzy
#~ msgid "https://bazaar.canonical.com"
#~ msgstr "https://bazaar.canonical.com/"

#~ msgid ""
#~ "It's the command line interface for running various commands that relate "
#~ "to packaging tasks. To get a listing of available commands, run ``python "
#~ "setup.py --help-commands``."
#~ msgstr ""
#~ "É a interface de linha de comando para executar vários comandos "
#~ "relacionados a tarefas de empacotamento. Para obter uma lista dos "
#~ "comandos disponíveis, execute ``python setup.py --help-commands``."

#~ msgid ""
#~ "A variation on the above which pre-builds the installation files for the "
#~ "requirements using :ref:`python -m pip wheel <pip:pip wheel>`:"
#~ msgstr ""
#~ "Uma variação acima, que pré-constrói os arquivos de instalação para os "
#~ "requisitos usando :ref:`python -m pip wheel <pip:pip wheel>`:"

#~ msgid ""
#~ "This can be worked around by setting all dependencies in ``__main__."
#~ "__requires__`` before importing ``pkg_resources`` for the first time, but "
#~ "that approach does mean that standard command line invocations of the "
#~ "affected tools can't be used - it's necessary to write a custom wrapper "
#~ "script or use ``python -c '<command>'`` to invoke the application's main "
#~ "entry point directly."
#~ msgstr ""
#~ "Isso pode ser contornado definindo todas as dependências em ``__main__.__ "
#~ "require__`` antes de importar ``pkg_resources`` pela primeira vez, mas "
#~ "essa abordagem significa que as invocações de linha de comando padrão das "
#~ "ferramentas afetadas não podem ser usadas -- é necessário escrever um "
#~ "script wrapper personalizado ou usar ``python -c '<comando>'`` para "
#~ "invocar o ponto de entrada principal da aplicação diretamente."

#, fuzzy
#~ msgid ""
#~ "This is great for sharing simple scripts and snippets between people who "
#~ "both have compatible Python versions (such as via email, StackOverflow, "
#~ "or GitHub gists). There are even some entire Python libraries that offer "
#~ "this as an option, such as `bottle.py <https://pypi.org/project/bottle/"
#~ ">`_ and :doc:`boltons <boltons:architecture>`."
#~ msgstr ""
#~ "Isso é ótimo para compartilhar scripts e trechos simples entre pessoas "
#~ "que possuem versões Python compatíveis (como via e-mail, StackOverflow ou "
#~ "gists do GitHub). Existem até algumas bibliotecas Python inteiras que "
#~ "oferecem isso como uma opção, como `bottle.py <https://bottlepy.org/docs/"
#~ "dev/>`_ e :doc:`boltons <boltons:architecture>`."

#~ msgid ""
#~ "This guide *assumes* that you already have a project that you know how to "
#~ "build distributions for and *it lives on GitHub*."
#~ msgstr ""
#~ "Este guia *presume* que você já tem um projeto para o qual sabe como "
#~ "construir distribuições e *ele reside no GitHub*."

#~ msgid ""
#~ "And now we can build dists from source. In this example, we'll use "
#~ "``build`` package, assuming that your project has a ``pyproject.toml`` "
#~ "properly set up (see :pep:`517`/:pep:`518`)."
#~ msgstr ""
#~ "E agora podemos construir dists a partir da fonte. Neste exemplo, "
#~ "usaremos o pacote ``build``, presumindo que seu projeto tem um "
#~ "``pyproject.toml`` configurado corretamente (veja :pep:`517` /:pep:`518`)."

#~ msgid ""
#~ "You can use any other method for building distributions as long as it "
#~ "produces ready-to-upload artifacts saved into the ``dist/`` folder."
#~ msgstr ""
#~ "Você pode usar qualquer outro método para construir distribuições, desde "
#~ "que produza artefatos prontos para enviar, salvos na pasta ``dist/``."

#~ msgid ""
#~ "This JSON file MUST be a dictionary, compliant with :rfc:`8259` and UTF-8 "
#~ "encoded."
#~ msgstr ""
#~ "Este arquivo JSON DEVE ser um dicionário compatível com :rfc:`8259` e "
#~ "codificado em UTF-8."

#~ msgid "Example direct_url.json"
#~ msgstr "Exemplo de direct_url.json"

#~ msgid ""
#~ "The platform compatibility tagging model used for the ``wheel`` "
#~ "distribution format is defined in :pep:`425`."
#~ msgstr ""
#~ "O modelo de tag de compatibilidade de plataforma usado para o formato de "
#~ "distribuição ``wheel`` é definido em :pep:`425`."

#~ msgid "Platform tags for Windows"
#~ msgstr "Tags de plataforma para Windows"

#~ msgid ""
#~ "The scheme defined in :pep:`425` covers public distribution of wheel "
#~ "files to systems running Windows."
#~ msgstr ""
#~ "O esquema definido em :pep:`425` cobre a distribuição pública de arquivos "
#~ "wheel para sistemas executando Windows."

#~ msgid "Platform tags for macOS (Mac OS X)"
#~ msgstr "Tags de plataforma para macOS (Mac OS X)"

#~ msgid ""
#~ "The scheme defined in :pep:`425` covers public distribution of wheel "
#~ "files to systems running macOS (previously known as Mac OS X)."
#~ msgstr ""
#~ "O esquema definido em :pep:`425` cobre a distribuição pública de arquivos "
#~ "wheel para sistemas que executam macOS (anteriormente conhecido como Mac "
#~ "OS X)."

#~ msgid "Platform tags for common Linux distributions"
#~ msgstr "Tags de plataforma para distribuições Linux comuns"

#~ msgid "Platform tags for other \\*nix platforms"
#~ msgstr "Tags de plataforma para outras plataformas \\*nix"

#~ msgid ""
#~ "The scheme defined in :pep:`425` is not generally sufficient for public "
#~ "distribution of wheel files to other \\*nix platforms. Efforts are "
#~ "currently (albeit intermittently) under way to define improved "
#~ "compatibility tagging schemes for AIX and for Alpine Linux."
#~ msgstr ""
#~ "O esquema definido na :pep:`425` geralmente não é suficiente para a "
#~ "distribuição pública de arquivos wheel para outras plataformas \\*nix. "
#~ "Esforços estão atualmente (embora de forma intermitente) em andamento "
#~ "para definir esquemas de marcação de compatibilidade aprimorados para AIX "
#~ "e Alpine Linux."

#~ msgid ""
#~ "For projects which don't provide their own Windows installers (and even "
#~ "some which do), Christoph Gohlke at the University of California provides "
#~ "a `collection of Windows installers <https://www.lfd.uci.edu/~gohlke/"
#~ "pythonlibs/>`__. Many Python users on Windows have reported a positive "
#~ "experience with these prebuilt versions."
#~ msgstr ""
#~ "Para projetos que não fornecem seus próprios instaladores para Windows (e "
#~ "até mesmo alguns que oferecem), Christoph Gohlke da Universidade da "
#~ "Califórnia fornece uma `coleção de instaladores para Windows <https://www."
#~ "lfd.uci.edu/~gohlke/pythonlibs/>`__. Muitos usuários do Python no Windows "
#~ "relataram uma experiência positiva com essas versões pré-construídas."

#~ msgid ""
#~ "Earlier versions of setuptools implemented the ``attr:`` directive by "
#~ "importing the module, but setuptools 46.4.0 added rudimentary AST "
#~ "analysis so that ``attr:`` can function without having to import any of "
#~ "the package's dependencies."
#~ msgstr ""
#~ "Versões anteriores de setuptools implementavam a diretiva ``attr:`` "
#~ "importando o módulo, mas setuptools 46.4.0 adicionou uma análise de AST "
#~ "rudimentar para que ``attr:`` possa funcionar sem ter que importar "
#~ "nenhuma das dependências do pacote."

#~ msgid ""
#~ ":doc:`Setuptools <setuptools:index>` provides :doc:`special support "
#~ "<setuptools:userguide/entry_point>` for plugins. By providing the "
#~ "``entry_points`` argument to :func:`setup` in :file:`setup.py` plugins "
#~ "can register themselves for discovery."
#~ msgstr ""
#~ ":doc:`Setuptools <setuptools:index>` fornece :doc:`suporte especial "
#~ "<setuptools:userguide/entry_point>` para plugins. Fornecendo o argumento "
#~ "``entry_points`` para :func:`setup` em :file:`setup.py`, os plugins podem "
#~ "se registrar para serem descobertos."

#~ msgid ""
#~ "A corresponding :ref:`core metadata <core-metadata>` field does not exist"
#~ msgstr ""
#~ "Não há um campo correspondente dos :ref:`metadados principais <core-"
#~ "metadata>`"

#~ msgid ""
#~ "To build the guide, run the following bash command in the source folder:"
#~ msgstr ""
#~ "Para construir o guia, execute o seguinte comando bash na pasta do código-"
#~ "fonte:"

#~ msgid ""
#~ "`GitHub and Docs <https://github.com/jazzband/pip-tools/>`__ | `PyPI "
#~ "<https://pypi.org/project/pip-tools/>`__"
#~ msgstr ""
#~ "`GitHub e documentação <https://github.com/jazzband/pip-tools/>`__ | "
#~ "`PyPI <https://pypi.org/project/pip-tools/>`__"

#~ msgid ""
#~ ":doc:`Docs <distlib:index>` | `Issues <https://bitbucket.org/pypa/distlib/"
#~ "issues?status=new&status=open>`__ | `Bitbucket <https://bitbucket.org/"
#~ "pypa/distlib>`__ | `PyPI <https://pypi.org/project/distlib>`__"
#~ msgstr ""
#~ ":doc:`Documentação <distlib:index>` | `Issues <https://bitbucket.org/pypa/"
#~ "distlib/issues?status=new&status=open>`__ | `Bitbucket <https://bitbucket."
#~ "org/pypa/distlib>`__ | `PyPI <https://pypi.org/project/distlib>`__"

#~ msgid ""
#~ "For more information, see `Automatic Script Creation <https://setuptools."
#~ "readthedocs.io/en/latest/userguide/quickstart.html#entry-points-and-"
#~ "automatic-script-creation>`_ from the :doc:`setuptools docs <setuptools:"
#~ "index>`."
#~ msgstr ""
#~ "Para obter mais informações, consulte `Automatic Script Creation <https://"
#~ "setuptools.readthedocs.io/en/latest/userguide/quickstart.html#entry-"
#~ "points-and-automatic-script-creation>`_ da `documentação do setuptools "
#~ "<setuptools:index>`."

#~ msgid "Install `setuptools extras`_."
#~ msgstr "Instale `setuptools extras`_."

#~ msgid ""
#~ "This tutorial uses a simple project named ``example_package``.  We "
#~ "recommend following this tutorial as-is using this project, before "
#~ "packaging your own project."
#~ msgstr ""
#~ "Este tutorial usa um projeto simples chamado ``example_package``. "
#~ "Recomendamos seguir este tutorial como está usando este projeto, antes de "
#~ "empacotar seu próprio projeto."

#~ msgid ""
#~ "``build-system.requires`` gives a list of packages that are needed to "
#~ "build your package. Listing something here will *only* make it available "
#~ "during the build, not after it is installed."
#~ msgstr ""
#~ "``build-system.requires`` fornece uma lista de pacotes que são "
#~ "necessários para construir seu pacote. Listar algo aqui *apenas* o "
#~ "tornará disponível durante a construção, não depois de instalado."

#~ msgid ""
#~ "``build-system.build-backend`` is the name of Python object that will be "
#~ "used to perform the build. If you were to use a different build system, "
#~ "such as :ref:`flit` or :ref:`poetry`, those would go here, and the "
#~ "configuration details would be completely different than the :ref:"
#~ "`setuptools` configuration described below."
#~ msgstr ""
#~ "``build-system.build-backend`` é o nome do objeto Python que será usado "
#~ "para realizar a construção. Se você fosse usar um sistema de construção "
#~ "diferente, como :ref:`flit` ou :ref:`poetry`, eles iriam aqui, e os "
#~ "detalhes de configuração seriam completamente diferentes da configuração "
#~ "do :ref:`setuptools` descrita abaixo."

#~ msgid "There are two types of metadata: static and dynamic."
#~ msgstr "Há dois tipos de metadados: estáticos e dinâmicos."

#~ msgid ""
#~ "Static metadata (:file:`setup.cfg`): guaranteed to be the same every "
#~ "time. This is simpler, easier to read, and avoids many common errors, "
#~ "like encoding errors."
#~ msgstr ""
#~ "Metadados estáticos (:file:`setup.cfg`): garantidamente os mesmos sempre. "
#~ "Isso é mais simples, fácil de ler e evita muitos erros comuns, como erros "
#~ "de codificação."

#~ msgid ""
#~ "Dynamic metadata (:file:`setup.py`): possibly non-deterministic. Any "
#~ "items that are dynamic or determined at install-time, as well as "
#~ "extension modules or extensions to setuptools, need to go into :file:"
#~ "`setup.py`."
#~ msgstr ""
#~ "Metadados dinâmicos (:file:`setup.py`): possivelmente não "
#~ "determinísticos. Quaisquer itens que são dinâmicos ou determinados no "
#~ "momento da instalação, bem como módulos de extensão ou extensões para "
#~ "setuptools, precisam ir para :file:`setup.py`."

#~ msgid ""
#~ "Static metadata (:file:`setup.cfg`) should be preferred. Dynamic metadata "
#~ "(:file:`setup.py`) should be used only as an escape hatch when absolutely "
#~ "necessary. :file:`setup.py` used to be required, but can be omitted with "
#~ "newer versions of setuptools and pip."
#~ msgstr ""
#~ "Metadados estáticos (:file:`setup.cfg`) devem ser preferidos. Metadados "
#~ "dinâmicos (:file:`setup.py`) devem ser usados apenas como uma saída de "
#~ "emergência quando for absolutamente necessário. :file:`setup.py` "
#~ "costumava ser necessário, mas pode ser omitido com as versões mais "
#~ "recentes de setuptools e pip."

#~ msgid ""
#~ ":file:`setup.cfg` is the configuration file for :ref:`setuptools`. It "
#~ "tells setuptools about your package (such as the name and version) as "
#~ "well as which code files to include. Eventually much of this "
#~ "configuration may be able to move to :file:`pyproject.toml`."
#~ msgstr ""
#~ ":file:`setup.cfg` é o arquivo de configuração para :ref:`setuptools`. Ele "
#~ "informa ao setuptools sobre o seu pacote (como o nome e a versão), bem "
#~ "como os arquivos de código a serem incluídos. Eventualmente, grande parte "
#~ "desta configuração pode ser movida para :file:`pyproject.toml`."

#~ msgid ""
#~ "There are a `variety of metadata and options <https://setuptools."
#~ "readthedocs.io/en/latest/userguide/declarative_config.html>`_ supported "
#~ "here. This is in :doc:`configparser <python:library/configparser>` "
#~ "format; do not place quotes around values. This example package uses a "
#~ "relatively minimal set of ``metadata``:"
#~ msgstr ""
#~ "Há uma `variedade de metadados e opções <https://setuptools.readthedocs."
#~ "io/en/latest/userguide/declarative_config.html>`_ suportados aqui. Isso "
#~ "está no formato :doc:`configparser <python:library/configparser>`; não "
#~ "coloque aspas em torno dos valores. Este pacote de exemplo usa um "
#~ "conjunto relativamente mínimo de ``metadata``:"

#~ msgid ""
#~ "``author`` and ``author_email`` are used to identify the author of the "
#~ "package."
#~ msgstr ""
#~ "``author`` e ``author_email`` são usados para identificar o autor do "
#~ "pacote."

#~ msgid ""
#~ "``long_description_content_type`` tells the index what type of markup is "
#~ "used for the long description. In this case, it's Markdown."
#~ msgstr ""
#~ "``long_description_content_type`` diz ao índice que tipo de marcação é "
#~ "usado para a descrição longa. Neste caso, é Markdown."

#~ msgid ""
#~ "``url`` is the URL for the homepage of the project. For many projects, "
#~ "this will just be a link to GitHub, GitLab, Bitbucket, or similar code "
#~ "hosting service."
#~ msgstr ""
#~ "``url`` é a URL da página inicial do projeto. Para muitos projetos, será "
#~ "apenas um link para GitHub, GitLab, Bitbucket ou serviço de hospedagem de "
#~ "código semelhante."

#~ msgid "In the ``options`` category, we have controls for setuptools itself:"
#~ msgstr ""
#~ "Na categoria ``options``, temos controles para o próprio setuptools:"

#~ msgid ""
#~ "``package_dir`` is a mapping of package names and directories. An empty "
#~ "package name represents the \"root package\" --- the directory in the "
#~ "project that contains all Python source files for the package --- so in "
#~ "this case the ``src`` directory is designated the root package."
#~ msgstr ""
#~ "``package_dir`` é um mapeamento de nomes e diretórios de pacotes. Um nome "
#~ "de pacote vazio representa o \"pacote raiz\" -- o diretório no projeto "
#~ "que contém todos os arquivos fonte Python para o pacote -- então, neste "
#~ "caso, o diretório ``src`` é designado o pacote raiz."

#~ msgid ""
#~ "``packages`` is a list of all Python :term:`import packages <Import "
#~ "Package>` that should be included in the :term:`distribution package "
#~ "<Distribution Package>`. Instead of listing each package manually, we can "
#~ "use the ``find:`` directive to automatically discover all packages and "
#~ "subpackages and ``options.packages.find`` to specify the ``package_dir`` "
#~ "to use. In this case, the list of packages will be ``example_package`` as "
#~ "that's the only package present."
#~ msgstr ""
#~ "``packages`` é uma lista de todos os Python :term:`pacotes de importação "
#~ "<Pacote de Importação>` que devem ser incluídos no :term:`pacote de "
#~ "distribuição <Pacote de Distribuição>`. Em vez de listar cada pacote "
#~ "manualmente, podemos usar a diretiva ``find:`` para descobrir "
#~ "automaticamente todos os pacotes e subpacotes e ``options.packages.find`` "
#~ "para especificar o ``package_dir`` a ser usado. Neste caso, a lista de "
#~ "pacotes será ``example_package`` visto que é o único pacote presente."

#~ msgid ""
#~ "There are many more than the ones mentioned here. See :doc:`/guides/"
#~ "distributing-packages-using-setuptools` for more details."
#~ msgstr ""
#~ "Existem muitos mais do que os mencionados aqui. Veja :doc:`/guides/"
#~ "distributing-packages-using-setuptools` para mais detalhes."

#~ msgid ""
#~ ":file:`setup.py` is the build script for :ref:`setuptools`. It tells "
#~ "setuptools about your package (such as the name and version) as well as "
#~ "which code files to include."
#~ msgstr ""
#~ ":file:`setup.py` é o script de construção para :ref:`setuptools`. Ele "
#~ "informa ao setuptools sobre o seu pacote (como o nome e a versão), bem "
#~ "como os arquivos de código a serem incluídos."

#~ msgid ""
#~ "Open :file:`setup.py` and enter the following content.  Change the "
#~ "``name`` to include your username; this ensures that you have a unique "
#~ "package name and that your package doesn't conflict with packages "
#~ "uploaded by other people following this tutorial."
#~ msgstr ""
#~ "Abra :file:`setup.py` e insira o seguinte conteúdo. Mude o ``name`` para "
#~ "incluir seu nome de usuário; isso garante que você tenha um nome de "
#~ "pacote exclusivo e que seu pacote não entre em conflito com os pacotes "
#~ "carregados por outras pessoas que seguem este tutorial."

#~ msgid ""
#~ ":func:`setup` takes several arguments. This example package uses a "
#~ "relatively minimal set:"
#~ msgstr ""
#~ ":func:`setup` recebe vários argumentos. Este pacote de exemplo usa um "
#~ "conjunto relativamente mínimo:"

#~ msgid ""
#~ "``version`` is the package version. See :pep:`440` for more details on "
#~ "versions."
#~ msgstr ""
#~ "``version`` é a versão do pacote. Consulte :pep:`440` para obter mais "
#~ "detalhes sobre as versões."

#~ msgid ""
#~ "``long_description`` is a detailed description of the package. This is "
#~ "shown on the package detail page on the Python Package Index. In this "
#~ "case, the long description is loaded from :file:`README.md`, which is a "
#~ "common pattern."
#~ msgstr ""
#~ "``long_description`` é uma descrição detalhada do pacote. Isso é mostrado "
#~ "na página de detalhes do pacote no Índice do Pacotes do Python. Neste "
#~ "caso, a descrição longa é carregada de :file:`README.md`, que é um padrão "
#~ "comum."

#~ msgid ""
#~ "``package_dir`` is a dictionary with package names for keys and "
#~ "directories for values. An empty package name represents the \"root "
#~ "package\" --- the directory in the project that contains all Python "
#~ "source files for the package --- so in this case the ``src`` directory is "
#~ "designated the root package."
#~ msgstr ""
#~ "``package_dir`` é um dicionário com nomes de pacotes para chaves e "
#~ "diretórios para valores. Um nome de pacote vazio representa o \"pacote "
#~ "raiz\" -- o diretório no projeto que contém todos os arquivos fonte "
#~ "Python para o pacote -- então, neste caso, o diretório ``src`` é "
#~ "designado o pacote raiz."

#~ msgid ""
#~ "``packages`` is a list of all Python :term:`import packages <Import "
#~ "Package>` that should be included in the :term:`distribution package "
#~ "<Distribution Package>`. Instead of listing each package manually, we can "
#~ "use :func:`find_packages` to automatically discover all packages and "
#~ "subpackages under ``package_dir``. In this case, the list of packages "
#~ "will be ``example_package`` as that's the only package present."
#~ msgstr ""
#~ "``packages`` é uma lista de todos os :term:`pacotes de importação <Pacote "
#~ "de Importação>` do Python que devem ser incluídos no :term:`pacote de "
#~ "distribuição <Pacote de Distribuição>`. Em vez de listar cada pacote "
#~ "manualmente, podemos usar :func:`find_packages` para descobrir "
#~ "automaticamente todos os pacotes e subpacotes em ``package_dir``. Neste "
#~ "caso, a lista de pacotes será ``example_package`` visto que é o único "
#~ "pacote presente."

#~ msgid ""
#~ "``python_requires`` gives the versions of Python supported by your "
#~ "project. Installers like :ref:`pip` will look back though older versions "
#~ "of packages until it finds one that has a matching Python version."
#~ msgstr ""
#~ "``python_requires`` fornece as versões do Python suportadas pelo seu "
#~ "projeto. Instaladores como :ref:`pip` olharão para as versões anteriores "
#~ "dos pacotes até encontrar um que tenha uma versão correspondente do "
#~ "Python."

#~ msgid ""
#~ "You may see some existing projects or other Python packaging tutorials "
#~ "that import their ``setup`` function from ``distutils.core`` rather than "
#~ "``setuptools``. This is a legacy approach that installers support for "
#~ "backwards compatibility purposes [1]_, but using the legacy ``distutils`` "
#~ "API directly in new projects is strongly discouraged, since ``distutils`` "
#~ "is deprecated as per :pep:`632` and will be removed from the standard "
#~ "library in Python 3.12."
#~ msgstr ""
#~ "Você pode ver alguns projetos existentes ou outros tutoriais de "
#~ "empacotamento Python que importam sua função ``setup`` de ``distutils."
#~ "core`` em vez de ``setuptools``. Esta é uma abordagem legada que os "
#~ "instaladores oferece suporte a compatibilidade com versões anteriores "
#~ "[1]_, mas usar a API legada do ``distutils`` diretamente em novos "
#~ "projetos é fortemente desencorajado, uma vez que ``distutils`` foi "
#~ "descontinuado de acordo com :pep:`632 `e será removido da biblioteca "
#~ "padrão em Python 3.12."

#~ msgid ""
#~ "Because our configuration loads :file:`README.md` to provide a "
#~ "``long_description``, :file:`README.md` must be included along with your "
#~ "code when you :ref:`generate a source distribution <generating "
#~ "archives>`. Newer versions of :ref:`setuptools` will do this "
#~ "automatically."
#~ msgstr ""
#~ "Porque nossa configuração carrega :file:`README.md` para fornecer um "
#~ "``long_description``, :file:`README.md` deve ser incluído junto com seu "
#~ "código quando você :ref:`gerar uma distribuição fonte <generating "
#~ "archives>`. Versões mais recentes de :ref:`setuptools` farão isso "
#~ "automaticamente."

#~ msgid ""
#~ "The final :term:`built distribution <Built Distribution>` will have the "
#~ "Python files in the discovered or listed Python packages. If you want to "
#~ "control what goes here, such as to add data files, see :doc:`Including "
#~ "Data Files <setuptools:userguide/datafiles>` from the :doc:`setuptools "
#~ "docs <setuptools:index>`."
#~ msgstr ""
#~ "A :term:`distribuição construída <Distribuição Construída>` final terá os "
#~ "arquivos Python nos pacotes descobertos ou listados Python. Se você "
#~ "deseja controlar o que acontece aqui, como adicionar arquivos de dados, "
#~ "consulte :doc:`Incluindo Arquivos de Dados <setuptools:userguide/"
#~ "datafiles>` da :doc:`documentação do setuptools <setuptools:index>`."

#~ msgid ""
#~ "Note that the :term:`import package <Import Package>` is "
#~ "``example_package`` regardless of what ``name`` you gave your :term:"
#~ "`distribution package <Distribution Package>` in :file:`setup.cfg` or :"
#~ "file:`setup.py` (in this case, ``example-package-YOUR-USERNAME-HERE``)."
#~ msgstr ""
#~ "Note que o :term:`pacote de importação <Pacote de Importação>` é "
#~ "``example_package`` independente de qual ``name`` você deu ao seu :term:"
#~ "`pacote de distribuição <Pacote de Distribuição>` no :file:`setup.cfg` "
#~ "ou :file:`setup.py` (neste caso, ``example-package-YOUR-USERNAME-HERE``)."

#~ msgid ""
#~ "Read more about using :ref:`setuptools` to package libraries in :doc:`/"
#~ "guides/distributing-packages-using-setuptools`."
#~ msgstr ""
#~ "Leia mais sobre como usar :ref:`setuptools` para empacotar bibliotecas "
#~ "em :doc:`/guides/distributing-packages-using-setuptools`."

#~ msgid ""
#~ "Consider alternatives to :ref:`setuptools` such as :ref:`flit`, :ref:"
#~ "`hatch`, and :ref:`poetry`."
#~ msgstr ""
#~ "Considere alternativas ao :ref:`setuptools`, tal como :ref:`flit`, :ref:"
#~ "`hatch` e :ref:`poetry`."

#~ msgid ""
#~ "Some legacy Python environments may not have ``setuptools`` pre-"
#~ "installed, and the operators of those environments may still be requiring "
#~ "users to install packages by running ``setup.py install`` commands, "
#~ "rather than providing an installer like ``pip`` that automatically "
#~ "installs required build dependendencies. These environments will not be "
#~ "able to use many published packages until the environment is updated to "
#~ "provide an up to date Python package installation client (e.g. by running "
#~ "``python -m ensurepip``)."
#~ msgstr ""
#~ "Alguns ambientes Python legados podem não ter o ``setuptools`` pré-"
#~ "instalado, e os operadores desses ambientes ainda podem exigir que os "
#~ "usuários instalem pacotes executando comandos ``setup.py install``, em "
#~ "vez de fornecer um instalador como o ``pip`` que instala automaticamente "
#~ "as dependências de compilação necessárias. Esses ambientes não serão "
#~ "capazes de usar muitos pacotes publicados até que o ambiente seja "
#~ "atualizado para fornecer um cliente de instalação de pacote Python "
#~ "atualizado (por exemplo, executando ``python -m ensurepip``)."

#~ msgid ""
#~ "Use :ref:`pipenv` to manage library dependencies when developing Python "
#~ "applications. See :doc:`../tutorials/managing-dependencies` for more "
#~ "details on using ``pipenv``."
#~ msgstr ""
#~ "Use :ref:`pipenv` para gerenciar as dependências da biblioteca ao "
#~ "desenvolver aplicações Python. Veja :doc:`../tutorials/managing-"
#~ "dependencies` para mais detalhes sobre como usar o ``pip env``."

#~ msgid ""
#~ "When ``pipenv`` does not meet your use case, consider other tools like:"
#~ msgstr ""
#~ "Quando ``pipenv`` não atende ao seu caso de uso, considere outras "
#~ "ferramentas como:"

#~ msgid "`pip-tools <https://github.com/jazzband/pip-tools>`_"
#~ msgstr "`pip-tools <https://github.com/jazzband/pip-tools>`_"

#~ msgid "`Poetry <https://python-poetry.org/>`_"
#~ msgstr "`Poetry <https://python-poetry.org/>`_"

#, fuzzy
#~ msgid ""
#~ "https://self-issued.info/docs/draft-ietf-jose-json-web-signature.html"
#~ msgstr ""
#~ "http://self-issued.info/docs/draft-ietf-jose-json-web-signature.html"

#, fuzzy
#~ msgid "https://self-issued.info/docs/draft-ietf-jose-json-web-key.html"
#~ msgstr "http://self-issued.info/docs/draft-ietf-jose-json-web-key.html"

#~ msgid ""
#~ "Developers of Python libraries, or of applications that support "
#~ "distribution as Python libraries, should also consider the `poetry "
#~ "<https://github.com/python-poetry/poetry>`_ project as an alternative "
#~ "dependency management solution."
#~ msgstr ""
#~ "Desenvolvedores de bibliotecas Python, ou de aplicações que oferece "
#~ "suporte a distribuição como bibliotecas Python, também devem considerar o "
#~ "projeto `poetry <https://github.com/python-poetry/poetry>`_ como uma "
#~ "solução alternativa de gerenciamento de dependências."

#~ msgid ""
#~ "`pip-tools <https://github.com/jazzband/pip-tools>`_ to build your own "
#~ "custom workflow from lower level pieces like ``pip-compile`` and ``pip-"
#~ "sync``"
#~ msgstr ""
#~ "`pip-tools <https://github.com/jazzband/pip-tools>`_ para construir seu "
#~ "próprio fluxo de trabalho personalizado a partir de peças de nível "
#~ "inferior como ``pip-compile`` e ``pip-sync``"

#~ msgid ""
#~ "`Docs <https://flit.readthedocs.io/en/latest/>`__ | `Issues <https://"
#~ "github.com/takluyver/flit/issues>`__ | `PyPI <https://pypi.org/project/"
#~ "flit>`__"
#~ msgstr ""
#~ "`Documentação <https://flit.readthedocs.io/en/latest/>`__ | `Issues "
#~ "<https://github.com/takluyver/flit/issues>`__ | `PyPI <https://pypi.org/"
#~ "project/flit>`__"

#~ msgid ""
#~ "Flit provides a simple way to upload pure Python packages and modules to "
#~ "PyPI. It focuses on `making the easy things easy <flit-rationale_>`_ for "
#~ "packaging. Flit can generate a configuration file to quickly set up a "
#~ "simple project, build source distributions and wheels, and upload them to "
#~ "PyPI."
#~ msgstr ""
#~ "O Flit fornece uma maneira simples de enviar pacotes e módulos puro "
#~ "Python para o PyPI. Ele se concentra em `facilitar as coisas fáceis <flit-"
#~ "rationale_>`_ para empacotar. O Flit pode gerar um arquivo de "
#~ "configuração para configurar rapidamente um projeto simples, construir "
#~ "distribuições fonte e wheels e enviá-los para PyPI."

#~ msgid "2014-11-11"
#~ msgstr "2014-11-11"

#~ msgid ""
#~ "For an example, see the `MANIFEST.in <https://github.com/pypa/"
#~ "sampleproject/blob/master/MANIFEST.in>`_ from the `PyPA sample project "
#~ "<https://github.com/pypa/sampleproject>`_."
#~ msgstr ""
#~ "Para obter um exemplo, consulte o `MANIFEST.in <https://github.com/pypa/"
#~ "sampleproject/blob/master/MANIFEST.in>`_ do `projeto de exemplo PyPA "
#~ "<https://github.com/pypa/ sampleproject>`_."

#~ msgid "description"
#~ msgstr "description"

#~ msgid "license"
#~ msgstr "license"

#~ msgid "keywords"
#~ msgstr "keywords"

#~ msgid ""
#~ "Although not required, it's common to locally install your project in "
#~ "\"editable\" or \"develop\" mode while you're working on it.  This allows "
#~ "your project to be both installed and editable in project form."
#~ msgstr ""
#~ "Embora não seja obrigatório, é comum instalar localmente seu projeto no "
#~ "modo \"editável\" ou \"desenvolvimento\" enquanto você trabalha nele. "
#~ "Isso permite que seu projeto seja instalado e editável na forma de "
#~ "projeto."

#~ msgid "Assuming you're in the root of your project directory, then run:"
#~ msgstr ""
#~ "Supondo que você esteja na raiz do diretório do seu projeto, execute:"

#~ msgid ""
#~ "For more information, see the `Development Mode <https://setuptools."
#~ "readthedocs.io/en/latest/setuptools.html#development-mode>`_ section of "
#~ "the `setuptools docs <https://setuptools.readthedocs.io>`_."
#~ msgstr ""
#~ "Para obter mais informações, consulte a seção `Development Mode <https://"
#~ "setuptools.readthedocs.io/en/latest/setuptools.html#development-mode>`_ "
#~ "da `documentação do setuptools <https://setuptools.readthedocs.io>`_."

#~ msgid "2015-09-17"
#~ msgstr "2015-09-17"

#~ msgid "Fedora 21:"
#~ msgstr "Fedora 21:"

#~ msgid "Python 3: ``sudo yum install python3 python3-wheel``"
#~ msgstr "Python 3: ``sudo yum install python3 python3-wheel``"

#~ msgid "Fedora 22:"
#~ msgstr "Fedora 22:"

#~ msgid "Python 3: ``sudo dnf install python3 python3-wheel``"
#~ msgstr "Python 3: ``sudo dnf install python3 python3-wheel``"

#~ msgid ""
#~ "To get newer versions of pip, setuptools, and wheel for Python 2, you can "
#~ "enable the `PyPA Copr Repo <https://copr.fedoraproject.org/coprs/pypa/"
#~ "pypa/>`_ using the `Copr Repo instructions <https://fedorahosted.org/copr/"
#~ "wiki/HowToEnableRepo>`__, and then run::"
#~ msgstr ""
#~ "Para obter versões mais novas do pip, setuptools e wheel para Python 2, "
#~ "você pode habilitar o `PyPA Copr Repo <https://copr.fedoraproject.org/"
#~ "coprs/pypa/pypa/>`_ usando as `instruções do Copr Repo <https://"
#~ "fedorahosted.org/copr/wiki/HowToEnableRepo>`__ e então executar::"

#~ msgid "On EPEL 7 (but not EPEL 6), you can install wheel like so::"
#~ msgstr ""
#~ "No EPEL 7 (mas não no EPEL 6), você pode instalar wheel desta forma::"

#~ msgid "Python 3::"
#~ msgstr "Python 3::"

#~ msgid ""
#~ "Python 2.7 used Visual Studio 2008, Python 3.3 and 3.4 used Visual Studio "
#~ "2010, and Python 3.5+ uses Visual Studio 2015 or later. Unfortunately, "
#~ "older versions of Visual Studio are no longer easily available from "
#~ "Microsoft, so for versions of Python prior to 3.5, the compilers must be "
#~ "obtained differently if you do not already have a copy of the relevant "
#~ "version of Visual Studio."
#~ msgstr ""
#~ "Python 2.7 usou Visual Studio 2008, Python 3.3 e 3.4 usou Visual Studio "
#~ "2010 e Python 3.5+ usa Visual Studio 2015 ou posterior. Infelizmente, as "
#~ "versões mais antigas do Visual Studio não estão mais facilmente "
#~ "disponíveis na Microsoft, portanto, para versões do Python anteriores a "
#~ "3.5, os compiladores devem ser obtidos de forma diferente se você ainda "
#~ "não tiver uma cópia da versão relevante do Visual Studio."

#~ msgid ""
#~ "To set up a build environment for binary extensions, the steps are as "
#~ "follows:"
#~ msgstr ""
#~ "Para configurar um ambiente de construção para extensões binárias, as "
#~ "etapas são as seguintes:"

#~ msgid "For Python 2.7"
#~ msgstr "Para Python 2.7"

#~ msgid ""
#~ "Install \"Visual C++ Compiler Package for Python 2.7\", which is "
#~ "available from `Microsoft's website <https://www.microsoft.com/en-gb/"
#~ "download/details.aspx?id=44266>`__."
#~ msgstr ""
#~ "Instale \"Visual C++ Compiler Package for Python 2.7\", que está "
#~ "disponível no `site da Microsoft <https://www.microsoft.com/en-gb/"
#~ "download/details.aspx?id=44266>`__."

#~ msgid ""
#~ "Use (a recent version of) setuptools in your setup.py (pip will do this "
#~ "for you, in any case)."
#~ msgstr ""
#~ "Use (uma versão recente de) setuptools em seu setup.py (pip fará isso por "
#~ "você, em qualquer caso)."

#~ msgid "Done."
#~ msgstr "Pronto."

#~ msgid "For Python 3.4"
#~ msgstr "Para Python 3.4"

#~ msgid ""
#~ "Install \"Windows SDK for Windows 7 and .NET Framework 4\" (v7.1), which "
#~ "is available from `Microsoft's website <https://www.microsoft.com/en-gb/"
#~ "download/details.aspx?id=8279>`__."
#~ msgstr ""
#~ "Instale \"Windows SDK for Windows 7 and .NET Framework 4\" (v7.1), que "
#~ "está disponível no `site da Microsoft <https://www.microsoft.com/en-gb/"
#~ "download/details.aspx?id=8279>`__."

#~ msgid ""
#~ "Work from an SDK command prompt (with the environment variables set, and "
#~ "the SDK on PATH)."
#~ msgstr ""
#~ "Trabalhe em um prompt de comando do SDK (com as variáveis de ambiente "
#~ "definidas e o SDK no PATH)."

#~ msgid "Set DISTUTILS_USE_SDK=1"
#~ msgstr "Defina DISTUTILS_USE_SDK=1"

#~ msgid "For Python 3.5"
#~ msgstr "Para Python 3.5"

#~ msgid ""
#~ "Install `Visual Studio 2015 Community Edition <https://www.visualstudio."
#~ "com/en-us/downloads/download-visual-studio-vs.aspx>`__ (or any later "
#~ "version, when these are released)."
#~ msgstr ""
#~ "Instale `Visual Studio 2015 Community Edition <https://www.visualstudio."
#~ "com/en-us/downloads/download-visual-studio-vs.aspx>`__ (ou qualquer "
#~ "versão posterior, quando estas tiverem sido lançadas)."

#~ msgid ""
#~ "Note that from Python 3.5 onwards, Visual Studio works in a backward "
#~ "compatible way, which means that any future version of Visual Studio will "
#~ "be able to build Python extensions for all Python versions from 3.5 "
#~ "onwards."
#~ msgstr ""
#~ "Observe que a partir do Python 3.5 em diante, o Visual Studio funciona de "
#~ "maneira compatível com versões anteriores, o que significa que qualquer "
#~ "versão futura do Visual Studio será capaz de construir extensões Python "
#~ "para todas as versões Python de 3.5 em diante."

#~ msgid ""
#~ "Building with the recommended compiler on Windows ensures that a "
#~ "compatible C library is used throughout the Python process."
#~ msgstr ""
#~ "Construir com o compilador recomendado no Windows garante que uma "
#~ "biblioteca C compatível seja usada em todo o processo do Python."

#~ msgid ""
#~ "Use the ``bdist_wheel`` :ref:`setuptools` extension available from the :"
#~ "ref:`wheel project <wheel>` to create :term:`wheels <Wheel>`.  This is "
#~ "especially beneficial, if your project contains binary extensions."
#~ msgstr ""
#~ "Use a extensão ``bdist_wheel`` :ref:`setuptools` disponível no :ref: "
#~ "`projeto wheel <wheel>` para criar :term:`wheels <Wheel>`. Isso é "
#~ "especialmente benéfico se o seu projeto contiver extensões binárias."

#~ msgid "Add all files matching any of the listed patterns"
#~ msgstr ""
#~ "Adiciona todos os arquivos correspondendo a qualquer um dos padrões "
#~ "listados"

#~ msgid "bento"
#~ msgstr "bento"

#~ msgid ""
#~ "`Docs <http://cournape.github.io/Bento/>`__ | `Issues <https://github.com/"
#~ "cournape/Bento/issues>`__ | `GitHub <https://github.com/cournape/"
#~ "Bento>`__ | `PyPI <https://pypi.org/project/bento>`__"
#~ msgstr ""
#~ "`Documentação <http://cournape.github.io/Bento/>`__ | `Issues <https://"
#~ "github.com/cournape/Bento/issues>`__ | `GitHub <https://github.com/"
#~ "cournape/Bento>`__ | `PyPI <https://pypi.org/project/bento>`__"

#~ msgid ""
#~ "Bento is a packaging tool solution for Python software, targeted as an "
#~ "alternative to :ref:`distutils`, :ref:`setuptools`, etc....  Bento's "
#~ "philosophy is reproducibility, extensibility and simplicity (in that "
#~ "order)."
#~ msgstr ""
#~ "Bento é uma solução de ferramenta de empacotamento para software Python, "
#~ "direcionada como uma alternativa ao :ref:`distutils`, :ref:`setuptools `, "
#~ "etc. A filosofia do Bento é reprodutibilidade, extensibilidade e "
#~ "simplicidade (nesta ordem)."

#~ msgid "`Docs <http://conda.pydata.org/docs/>`__"
#~ msgstr "`Documentação <http://conda.pydata.org/docs/>`__"

#~ msgid "`Enthought Canopy <https://www.enthought.com/product/canopy/>`_"
#~ msgstr "`Enthought Canopy <https://www.enthought.com/product/canopy/>`_"

#~ msgid ""
#~ "`bbFreeze <https://pypi.org/project/bbfreeze>`_ - Windows, Linux, Python "
#~ "2 only"
#~ msgstr ""
#~ "`bbFreeze <https://pypi.org/project/bbfreeze>`_ - Windows, Linux, Python "
#~ "2 apenas"

#~ msgid ""
#~ "RFC 822 Long Header Fields: http://www.freesoft.org/CIE/RFC/822/7.htm"
#~ msgstr ""
#~ "\"Long Header Fields\" do RFC 822: http://www.freesoft.org/CIE/RFC/822/7."
#~ "htm"

#~ msgid "Using `venv`_:"
#~ msgstr "Usando `venv`_:"

#~ msgid ""
#~ "If present, it MUST contain at least two fields. The first one is "
#~ "``url``, with type ``string``. Depending on what ``url`` refers to, the "
#~ "second field MUST be one of ``vcs_info`` (if ``url`` is a VCS reference), "
#~ "``archive_info`` (if ``url`` is a source archives or a wheel), or "
#~ "``dir_info`` (if ``url``  is a local directory). These info fields have a "
#~ "(possibly empty) subdictionary as value, with the possible keys defined "
#~ "below."
#~ msgstr ""
#~ "Se presente, DEVE conter pelo menos dois campos. O primeiro é ``url``, "
#~ "com tipo ``string``. Dependendo de qual ``url`` se refere, o segundo "
#~ "campo DEVE ser um de ``vcs_info`` (se ``url`` é uma referência de VCS), "
#~ "``archive_info`` (se ``url`` é um arquivo de código-fonte ou um wheel) ou "
#~ "``dir_info`` (se ``url`` é um diretório local). Estes campos "
#~ "informacionais têm um subdicionário (possivelmente vazio) como valor, com "
#~ "as chaves possíveis definidas abaixo."

#~ msgid ""
#~ "``url`` MUST be stripped of any sensitive authentication information, for "
#~ "security reasons."
#~ msgstr ""
#~ "``url`` DEVE ser podado a fim de retirar qualquer informação de "
#~ "autenticação sensível, por razões de segurança."

#~ msgid ""
#~ "A ``commit_id`` key (type ``string``) MUST be present, containing the "
#~ "exact commit/revision number that was installed. If the VCS supports "
#~ "commit-hash based revision identifiers, such commit-hash MUST be used as "
#~ "``commit_id`` in order to reference the immutable version of the source "
#~ "code that was installed."
#~ msgstr ""
#~ "Uma chave ``commit_id`` (tipo ``string``) DEVE estar presente, contendo o "
#~ "número exato de commit/revisão que foi instalado. Se o VCS oferecer "
#~ "suporte a identificadores de revisão baseados em hash de commit, tal hash "
#~ "de commit DEVE ser usado como ``commit_id`` para referenciar a versão "
#~ "imutável do código-fonte que foi instalado."

#~ msgid ""
#~ "``editable`` (type: ``boolean``): ``true`` if the distribution was "
#~ "installed in editable mode, ``false`` otherwise. If absent, default to "
#~ "``false``."
#~ msgstr ""
#~ "``editable`` (tipo: ``boolean``): ``true`` se a distribuição foi "
#~ "instalada em modo editável, ``false`` caso contrário. Se ausente, é usado "
#~ "o padrão ``false``."

#~ msgid ""
#~ "When ``url`` refers to a local directory, it MUST have the ``file`` sheme "
#~ "and be compliant with :rfc:`8089`. In particular, the path component must "
#~ "be absolute. Symbolic links SHOULD be preserved when making relative "
#~ "paths absolute."
#~ msgstr ""
#~ "Quando ``url`` se refere a um diretório local, ele DEVE ter o esquema "
#~ "``file`` e ser compatível com :rfc:`8089` Em particular, o componente do "
#~ "caminho deve ser absoluto. Links simbólicos DEVERIAM ser preservados ao "
#~ "tornar os caminhos relativos absolutos."

#~ msgid ""
#~ "Installers can use the ``git show-ref`` and ``git symbolic-ref`` commands "
#~ "to determine if the ``requested_revision`` corresponds to a Git ref. In "
#~ "turn, a ref beginning with ``refs/tags/`` corresponds to a tag, and a ref "
#~ "beginning with ``refs/remotes/origin/`` after cloning corresponds to a "
#~ "branch."
#~ msgstr ""
#~ "Os instaladores podem usar os comandos ``git show-ref`` e ``git symbolic-"
#~ "ref`` para determinar se o ``required_revision`` corresponde a um ref "
#~ "Git. Por sua vez, um ref começando com ``refs/tags/`` corresponde a uma "
#~ "tag, e um ref começando com ``refs/remotes/origin/`` após a clonagem "
#~ "corresponde a um branch."

#~ msgid "Local directory installed in editable mode:"
#~ msgstr "Diretório local instalado em modo editável:"

#~ msgid ""
#~ "January 2023: Added the ``archive_info.hashes`` key (`discussion <https://"
#~ "discuss.python.org/t/22299>`__)."
#~ msgstr ""
#~ "Janeiro de 2023: Adicionada a chave ``archive_info.hashes`` (`discussão "
#~ "<https://discuss.python.org/t/22299>`__)."

#~ msgid ""
#~ "There are two kinds of metadata: *static* and *dynamic*. Static metadata "
#~ "is specified in the ``pyproject.toml`` file directly and cannot be "
#~ "specified or changed by a tool. Dynamic metadata is listed via the "
#~ "``dynamic`` key (defined later in this specification) and represents "
#~ "metadata that a tool will later provide."
#~ msgstr ""
#~ "Existem dois tipos de metadados: *estáticos* e *dinâmicos*. Metadados "
#~ "estáticos são especificados diretamente no arquivo ``pyproject.toml`` e "
#~ "não podem ser especificados ou alterados por uma ferramenta. Os metadados "
#~ "dinâmicos são listados por meio da chave ``dynamic`` (definido "
#~ "posteriormente nesta especificação) e representam os metadados que uma "
#~ "ferramenta fornecerá posteriormente."
