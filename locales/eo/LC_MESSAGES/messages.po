# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013–2020, PyPA
# This file is distributed under the same license as the Python Packaging User Guide package.
# phlostically <phlostically@mailinator.com>, 2021, 2024, 2025.
# meowmeowmeowcat <meowmeowcat1211@gmail.com>, 2021.
# Emilia Meza <emiliameza@users.noreply.hosted.weblate.org>, 2025.
msgid ""
msgstr ""
"Project-Id-Version: Python Packaging User Guide\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-17 00:41+0000\n"
"PO-Revision-Date: 2025-06-29 12:03+0000\n"
"Last-Translator: phlostically <phlostically@mailinator.com>\n"
"Language-Team: Esperanto <https://hosted.weblate.org/projects/pypa/packaging-"
"python-org/eo/>\n"
"Language: eo\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.13-dev\n"

#: ../source/contribute.rst:5
msgid "Contribute to this guide"
msgstr "Kontribui al ĉi tiu gvidilo"

#: ../source/contribute.rst:7
msgid ""
"The |PyPUG| welcomes contributors! There are lots of ways to help out, "
"including:"
msgstr ""
"La |PyPUG| bonvenigas kontribuantojn! Jen kelke el multaj manieroj helpi nin:"

#: ../source/contribute.rst:10
msgid "Reading the guide and giving feedback"
msgstr "Legi la gvidilon kaj doni opiniojn pri ĝi"

#: ../source/contribute.rst:11
msgid "Reviewing new contributions"
msgstr "Revizii novajn kontribuojn"

#: ../source/contribute.rst:12
msgid "Revising existing content"
msgstr "Poluri ekzistantan enhavon"

#: ../source/contribute.rst:13
msgid "Writing new content"
msgstr "Verki novan enhavon"

#: ../source/contribute.rst:14
msgid "Translating the guide"
msgstr "Traduki ĉi tiun gvidilon"

#: ../source/contribute.rst:16
msgid ""
"Most of the work on the |PyPUG| takes place on the `project's GitHub "
"repository`__. To get started, check out the list of `open issues`__ and "
"`pull requests`__. If you're planning to write or edit the guide, please "
"read the :ref:`style guide <contributing_style_guide>`."
msgstr ""
"La plejparto e la laboro pri |PyPUG| okazas ĉe `la GitHub-deponejo de la "
"projekto <project's GitHub repository>`__. Por eki, vidu la liston de "
"`nesolvitaj cimoj <open issues>`__ kaj `tirpetoj <pull requests>`__. Se vi "
"planas verki aŭ redakti la gvidilon, bonvolu legi la :ref:`gvidilon pri "
"stilo <contributing_style_guide>`."

#: ../source/contribute.rst:25
msgid ""
"By contributing to the |PyPUG|, you're expected to follow the PSF's `Code of "
"Conduct`__."
msgstr ""
"Kontribuante al |PyPUG|, vi devas observi la `Kondutkodon <Code of "
"Conduct>`__ de PSF."

#: ../source/contribute.rst:32
msgid "Documentation types"
msgstr "Tipoj de dokumentaro"

#: ../source/contribute.rst:34
msgid ""
"This project consists of four distinct documentation types with specific "
"purposes. The project aspires to follow the `Diátaxis process`_ for creating "
"quality documentation. When proposing new additions to the project please "
"pick the appropriate documentation type."
msgstr ""
"Ĉi tiu projekto konsistas el kvar malsamaj dokumentaj specoj por specifaj "
"celoj. La projekto celas sekvi `la procezon Diátaxis <Diátaxis process>`_ "
"por verki kvalitan dokumentaron. Kiam vi proponas novajn aldonojn al la "
"projekto, bonvolu elekti la taŭgan dokumentan specon."

#: ../source/contribute.rst:42 ../source/index.rst:55
#: ../source/tutorials/index.rst:2
msgid "Tutorials"
msgstr "Lerniloj"

#: ../source/contribute.rst:44
msgid ""
"Tutorials are focused on teaching the reader new concepts by accomplishing a "
"goal. They are opinionated step-by-step guides. They do not include "
"extraneous warnings or information. `example tutorial-style document`_."
msgstr ""
"Lernilo fokusiĝas pri instruado de la leganto pri novaj konceptoj per "
"efektivigado de iu celo. Lernilo estas opinihava, paŝon-post-paŝa dokumento. "
"Ĝi ne inkluzivas negravajn avertojn aŭ informojn. `ekzempla lernileca "
"dokumento <example tutorial-style document>`_."

#: ../source/contribute.rst:51 ../source/guides/index.rst:2
#: ../source/index.rst:69
msgid "Guides"
msgstr "Gvidiloj"

#: ../source/contribute.rst:53
msgid ""
"Guides are focused on accomplishing a specific task and can assume some "
"level of pre-requisite knowledge. These are similar to tutorials, but have a "
"narrow and clear focus and can provide lots of caveats and additional "
"information as needed. They may also discuss multiple approaches to "
"accomplishing the task. :doc:`example guide-style document <guides/packaging-"
"namespace-packages>`."
msgstr ""
"Gvidiloj estas por plenumi specifan taskon kaj povas supozi iun nivelon de "
"scio. Tiuj similas al lerniloj sed havas mallarĝan kaj klaran fokuson kaj "
"povas disponigi multajn avertojn kaj kromajn informojn laŭbezone. Ili ankaŭ "
"povas diskuti plurajn metodojn por unu tasko. :doc:`ekzempla gvidila "
"dokumento <guides/packaging-namespace-packages>`."

#: ../source/contribute.rst:60 ../source/discussions/index.rst:2
msgid "Discussions"
msgstr "Diskutoj"

#: ../source/contribute.rst:62
msgid ""
"Discussions are focused on understanding and information. These explore a "
"specific topic without a specific goal in mind. :doc:`example discussion-"
"style document <discussions/install-requires-vs-requirements>`."
msgstr ""
"Diskutoj estas por komprenado kaj informado. Tiuj esploras specifan temon "
"sen specifa celo. :doc:`ekzempla diskuta dokumento <discussions/install-"
"requires-vs-requirements>`."

#: ../source/contribute.rst:67
msgid "Specifications"
msgstr "Specifiloj"

#: ../source/contribute.rst:69
msgid ""
"Specifications are reference documentation focused on comprehensively "
"documenting an agreed-upon interface for interoperability between packaging "
"tools. :doc:`example specification-style document <specifications/core-"
"metadata>`."
msgstr ""
"Specifoj estas referenca dokumentaro por plene priskribi interkonsentitan "
"interfacon por kongrueco inter iloj pri pakado. :doc:`ekzempla specifo-"
"dokumento <specifications/core-metadata>`."

#: ../source/contribute.rst:75
msgid "Translations"
msgstr "Tradukoj"

#: ../source/contribute.rst:77
msgid ""
"We use `Weblate`_ to manage translations of this project. Please visit the "
"`packaging.python.org`_ project on Weblate to contribute."
msgstr ""
"Ni uzas `Weblate`_ por administri tradukadon de ĉi tiu projekto. Bonvolu "
"viziti la projekton `packaging.python.org`_ ĉe Weblate por kontribui."

#: ../source/contribute.rst:80
msgid ""
"If you are experiencing issues while you are working on translations, please "
"open an issue on `GitHub`_."
msgstr ""
"Se vi spertas problemojn dum tradukado, bonvolu raporti cimon ĉe `GitHub`_."

#: ../source/contribute.rst:85
msgid ""
"Any translations of this project should follow `reStructuredText syntax`_."
msgstr ""
"Traduko de ĉi tiu projekto devas sekvi `la sintakson reStructuredText "
"<reStructuredText syntax>`_."

#: ../source/contribute.rst:93
msgid "Adding a language"
msgstr "Aldoni lingvon"

#: ../source/contribute.rst:95
msgid ""
"If your language is not listed on `packaging.python.org`_, click the button :"
"guilabel:`Start new translation` at the bottom of the language list and add "
"the language you want to translate."
msgstr ""
"Se via lingvo ne estas listigita en `packaging.python.org`_, alklaku la "
"butonon :guilabel:`Start new translation` ĉe la malsupro de la listo de "
"lingvoj, kaj aldonu la lingvon al kiu vi volas traduki."

#: ../source/contribute.rst:100
msgid "Following reStructuredText syntax"
msgstr "Sekvi la sintakson reStructuredText"

#: ../source/contribute.rst:102
msgid ""
"If you are not familiar with reStructuredText (RST) syntax, please read "
"`this guide`_ before translating on Weblate."
msgstr ""
"Se vi ne bone scias la sintakson reStructuredText (RST), bonvolu legi `ĉi "
"tiun gvidilon <this guide>`_ antaŭ ol ektraduki ĉe Weblate."

#: ../source/contribute.rst:118
msgid "**Do not translate the text in reference directly**"
msgstr "**Ne traduku tekston en referenco rekte**"

#: ../source/contribute.rst:106
msgid ""
"When translating the text in reference, please do not translate them "
"directly."
msgstr "Kiam vi tradukas tekston en referenco, bonvolu ne traduki ĝin rekte."

#: ../source/contribute.rst:0
msgid "Wrong: Translate the following text directly:"
msgstr "Malĝuste: Traduki la jenon rekte:"

#: ../source/contribute.rst:0
msgid ""
"Right: Translate the following text with your own language and add the "
"original reference:"
msgstr ""
"Ĝuste: Traduki la jenan tekston al via propra lingvo kaj aldoni la "
"originalan referencon:"

#: ../source/contribute.rst:123
msgid "Building the guide locally"
msgstr "Konstrui la gvidilon loke"

#: ../source/contribute.rst:125
msgid ""
"Though not required to contribute, it may be useful to build this guide "
"locally in order to test your changes. In order to build this guide locally, "
"you'll need:"
msgstr ""
"Kvankam tio ne necesas por kontribui, estas utile konstrui ĉi tiun gvidilon "
"loke por elprovi viajn ŝanĝojn. Por konstrui ĉi tiun gvidilon loke, vi "
"bezonos la jenon:"

#: ../source/contribute.rst:129
msgid ":doc:`Nox <nox:index>`. You can install or upgrade nox using ``pip``:"
msgstr ":doc:`Nox <nox:index>`. Vi povas instali aŭ ĝisdatigi nox per ``pip``:"

#: ../source/contribute.rst:136
msgid ""
"Python 3.11. Our build scripts are usually tested with Python 3.11 only. See "
"the :doc:`Hitchhiker's Guide to Python installation instructions <python-"
"guide:starting/installation>` to install Python 3.11 on your operating "
"system."
msgstr ""
"Python 3.11. Niaj konstruaj programetoj estas ordinare testata nur per "
"Python 3.11. Vidu :doc:`Hitchhiker's Guide to Python installation "
"instructions <python-guide:starting/installation>` por instali Python 3.11 "
"sur via mastruma sistemo."

#: ../source/contribute.rst:140
msgid ""
"To build the guide, run the following shell command in the project's root "
"folder:"
msgstr ""
"Por konstrui la gvidilon, rulu la jenan konzolan komandon ĉe la radika "
"dosierujo de la projekto:"

#: ../source/contribute.rst:146
msgid ""
"After the process has completed you can find the HTML output in the ``./"
"build/html`` directory. You can open the ``index.html`` file to view the "
"guide in web browser, but it's recommended to serve the guide using an HTTP "
"server."
msgstr ""
"Post fino de la procezo, vi povas trovi la HTML-eligaĵon en la dosierujo ``./"
"build/html``. Vi povas malfermi la dosieron ``index.html`` por rigardi la "
"gvidilon en TTT-legilo, sed estas rekomendate servi la gvidilon per HTTP-"
"servilo."

#: ../source/contribute.rst:151
msgid ""
"You can build the guide and serve it via an HTTP server using the following "
"command:"
msgstr ""
"Vi povas konstrui la gvidilon kaj servi ĝin per HTTP-servilo uzante la jenan "
"komandon:"

#: ../source/contribute.rst:158
msgid "The guide will be browsable via http://localhost:8000."
msgstr "La gvidilo estos legebla ĉe http://localhost:8000."

#: ../source/contribute.rst:162
msgid "Where the guide is deployed"
msgstr "Kie la gvidilo disponiĝas"

#: ../source/contribute.rst:164
msgid ""
"The guide is deployed via ReadTheDocs and the configuration lives at https://"
"readthedocs.org/projects/python-packaging-user-guide/. It's served from a "
"custom domain and fronted by Fast.ly."
msgstr ""
"La gvidilo disponiĝas per ReadTheDocs, kaj la agordoj troviĝas ĉe https://"
"readthedocs.org/projects/python-packaging-user-guide/. Ĝi estas servata ĉe "
"propra retadreso per Fast.ly."

#: ../source/contribute.rst:170
msgid "Style guide"
msgstr "Rekomendoj pri stilo"

#: ../source/contribute.rst:172
msgid ""
"This style guide has recommendations for how you should write the |PyPUG|. "
"Before you start writing, please review it. By following the style guide, "
"your contributions will help add to a cohesive whole and make it easier for "
"your contributions to be accepted into the project."
msgstr ""
"Ĉi tiu stila gvidilo havas rekomendojn pri kiel verki la |PyPUG|. Antaŭ ol "
"vi ekverkas, bonvolu revizii ĝin. Sekvante la stilgvidilon, viaj kontribuoj "
"pli koheros kaj iĝos pli akceptindaj en la projekton."

#: ../source/contribute.rst:179
msgid "Purpose"
msgstr "Celo"

#: ../source/contribute.rst:181
msgid ""
"The purpose of the |PyPUG| is to be the authoritative resource on how to "
"package, publish, and install Python projects using current tools."
msgstr ""
"La |PyPUG| celas esti la aŭtoritata dokumento pri kiel enpaki, eldoni kaj "
"instali Python-projektojn per nunaj iloj."

#: ../source/contribute.rst:186
msgid "Scope"
msgstr "Amplekso"

#: ../source/contribute.rst:188
msgid ""
"The guide is meant to answer questions and solve problems with accurate and "
"focused recommendations."
msgstr ""
"La gvidilo celas respondi al demandoj kaj solvi problemojn per precizaj kaj "
"enfokusigitaj rekomendoj."

#: ../source/contribute.rst:191
msgid ""
"The guide isn't meant to be comprehensive and it's not meant to replace "
"individual projects' documentation. For example, pip has dozens of commands, "
"options, and settings. The pip documentation describes each of them in "
"detail, while this guide describes only the parts of pip that are needed to "
"complete the specific tasks described in this guide."
msgstr ""
"La gvidilo ne celas esti plenplena, nek anstataŭigi la dokumentaron de "
"individuaj projektoj. Ekzemple, pip havas dekduojn da komandoj, opciojn, kaj "
"agordoj. La dokumentaro de pip priskribas ĉiujn el tiuj detale, dum la "
"gvidilo nur priskribas tiajn partojn de pip, kiaj necesas por kompletigi la "
"specifajn taskojn priskribitajn en la gvidilo."

#: ../source/contribute.rst:199
msgid "Audience"
msgstr "Legantaro"

#: ../source/contribute.rst:201
msgid "The audience of this guide is anyone who uses Python with packages."
msgstr ""
"La legantoj de ĉi tiu gvidilo estas iuj ajn, kiuj uzas Python kun pakoj."

#: ../source/contribute.rst:203
msgid ""
"Don't forget that the Python community is big and welcoming. Readers may not "
"share your age, gender, education, culture, and more, but they deserve to "
"learn about packaging just as much as you do."
msgstr ""
"Ne forgesu, ke la Python-komunumo estas granda kaj bonveniga. Legantoj ne "
"povas havi la saman aĝon, sekson, edukon, kulturon ktp kiel vi, sed ili "
"meritas lerni pakadon tiel, kiel vi."

#: ../source/contribute.rst:207
msgid ""
"In particular, keep in mind that not all people who use Python see "
"themselves as programmers. The audience of this guide includes astronomers "
"or painters or students as well as professional software developers."
msgstr ""
"Aparte notu, ke ne ĉiuj, kiuj uzas Python, rigardas sin kiel programistojn. "
"La legandaro de ĉi tiu gvidilo inkluzivas astronomojn, pentristojn kaj "
"lernantojn kune kun profesiaj programistoj."

#: ../source/contribute.rst:213
msgid "Voice and tone"
msgstr "Voĉo kaj tono"

#: ../source/contribute.rst:215
msgid ""
"When writing this guide, strive to write with a voice that's approachable "
"and humble, even if you have all the answers."
msgstr ""
"Dum verkado de tiu gvidilo, klopodu skribi kun voĉo amikeca kaj humila, eĉ "
"se vi scias ĉion."

#: ../source/contribute.rst:218
msgid ""
"Imagine you're working on a Python project with someone you know to be smart "
"and skilled. You like working with them and they like working with you. That "
"person has asked you a question and you know the answer. How do you respond? "
"*That* is how you should write this guide."
msgstr ""
"Imagu, ke vi laboras pri Python-projekto kun iu inteligenta kaj sperta. Vi "
"ŝatas labori kun tiu, kaj tiu ŝatas labori kun vi. Tiu ulo demandis al vi, "
"kaj vi scias la respondon. Kiel vi respondus? Jen *tiel* vi verku ĉi tiun "
"gvidilon."

#: ../source/contribute.rst:223
msgid ""
"Here's a quick check: try reading aloud to get a sense for your writing's "
"voice and tone. Does it sound like something you would say or does it sound "
"like you're acting out a part or giving a speech? Feel free to use "
"contractions and don't worry about sticking to fussy grammar rules. You are "
"hereby granted permission to end a sentence in a preposition, if that's what "
"you want to end it with."
msgstr ""
"Jen rapida kontrolo: provu laŭtlegi por senti la voĉon kaj tonon de via "
"verkaĵo. Ĉu ĝi similas ion, kion vi dirus, aŭ similas aktoraĵon aŭ prelegon? "
"Se tio plaĉas al vi, uzu malformalan lingvaĵon kaj ignoru trostriktajn "
"gramatikajn regulojn."

#: ../source/contribute.rst:230
msgid ""
"When writing the guide, adjust your tone for the seriousness and difficulty "
"of the topic. If you're writing an introductory tutorial, it's OK to make a "
"joke, but if you're covering a sensitive security recommendation, you might "
"want to avoid jokes altogether."
msgstr ""
"Dum verkado de la gvidilo, adaptu vian tonon por la graveco kaj malfacileco "
"de la temo. Se vi verkas enkondukan lernilon, estas bone ŝerci, sed se vi "
"diskutas gravan rekomendon pri sekureco, vi eble volas eviti ŝercojn entute."

#: ../source/contribute.rst:237
msgid "Conventions and mechanics"
msgstr "Konvencioj kaj meĥaniko"

#: ../source/contribute.rst:245
msgid "**Write to the reader**"
msgstr "**Verku por la leganto**"

#: ../source/contribute.rst:240
msgid ""
"When giving recommendations or steps to take, address the reader as *you* or "
"use the imperative mood."
msgstr ""
"Kiam vi donas rekomendojn aŭ farendaĵojn, alparolu la leganton kiel «vi», aŭ "
"uzu la imperativon."

#: ../source/contribute.rst:0
msgid "Wrong: To install it, the user runs…"
msgstr "Netaŭga: Por instali ĝin, la uzanto rulas…"

#: ../source/contribute.rst:0
msgid "Right: You can install it by running…"
msgstr "Taŭga: Vi povas instali ĝin per rulado de…"

#: ../source/contribute.rst:0
msgid "Right: To install it, run…"
msgstr "Taŭga: Por instali ĝin, rulu…"

#: ../source/contribute.rst:251
msgid "**State assumptions**"
msgstr "**Klarigu supozojn**"

#: ../source/contribute.rst:248
msgid ""
"Avoid making unstated assumptions. Reading on the web means that any page of "
"the guide may be the first page of the guide that the reader ever sees. If "
"you're going to make assumptions, then say what assumptions that you're "
"going to make."
msgstr ""
"Evitu nedeklaritajn supozojn. Je Interreta legado, iu ajn paĝo de la gvidilo "
"povas esti la unua paĝo vidata de leganto. Se vi supozas ion, do klarigu "
"tiujn supozojn."

#: ../source/contribute.rst:256
msgid "**Cross-reference generously**"
msgstr "**Interreferencu ofte**"

#: ../source/contribute.rst:254
msgid ""
"The first time you mention a tool or practice, link to the part of the guide "
"that covers it, or link to a relevant document elsewhere. Save the reader a "
"search."
msgstr ""
"La unuan fojon vi mencias ilon aŭ praktikon, ligu al la parto de la gvidilo "
"pri ĝi aŭ al signifa dokumento aliloka. Ne serĉigu la leganton."

#: ../source/contribute.rst:266
msgid "**Respect naming practices**"
msgstr "**Respektu nomojn**"

#: ../source/contribute.rst:259
msgid ""
"When naming tools, sites, people, and other proper nouns, use their "
"preferred capitalization."
msgstr ""
"Kiam vi nomas ilojn, retejojn, homojn kaj aliajn proprajn nomojn, uzu iliajn "
"preferatajn usklojn."

#: ../source/contribute.rst:0
msgid "Wrong: Pip uses…"
msgstr "Netaŭga: Pip uzas…"

#: ../source/contribute.rst:0
msgid "Right: pip uses…"
msgstr "Taŭga: pip uzas…"

#: ../source/contribute.rst:0
msgid "Wrong: …hosted on github."
msgstr "Netaŭga: …gastigata ĉe github."

#: ../source/contribute.rst:0
msgid "Right: …hosted on GitHub."
msgstr "Taŭga: …gastigata ĉe GitHub."

#: ../source/contribute.rst:275
msgid "**Use a gender-neutral style**"
msgstr "**Uzu seksneŭtralan stilon**"

#: ../source/contribute.rst:269
msgid ""
"Often, you'll address the reader directly with *you*, *your* and *yours*. "
"Otherwise, use gender-neutral pronouns *they*, *their*, and *theirs* or "
"avoid pronouns entirely."
msgstr ""
"Ofte vi rekte alparolu la leganton per *vi*, *vin* aŭ *via*. Alie, uzu "
"seksneŭtralajn pronomojn *ili*, *ŝ/li* aŭ entute evitu pronomojn."

#: ../source/contribute.rst:0
msgid "Wrong: A maintainer uploads the file. Then he…"
msgstr "Malĝuste: Mastrumanto alŝutas la dosieron. Poste li…"

#: ../source/contribute.rst:0
msgid "Right: A maintainer uploads the file. Then they…"
msgstr "Ĝuste: Mastrumanto alŝutas la dosieron. Poste ŝ/li…"

#: ../source/contribute.rst:0
msgid "Right: A maintainer uploads the file. Then the maintainer…"
msgstr "Ĝuste: Mastrumanto alŝutas la dosieron. Poste la mastrumanto…"

#: ../source/contribute.rst:287
msgid "**Headings**"
msgstr "**Titoloj de paragrafoj**"

#: ../source/contribute.rst:278
msgid ""
"Write headings that use words the reader is searching for. A good way to do "
"this is to have your heading complete an implied question. For example, a "
"reader might want to know *How do I install MyLibrary?* so a good heading "
"might be *Install MyLibrary*."
msgstr ""
"Verku titolojn uzante tiujn vortojn, kiujn la leganto serĉas. Bona maniero "
"fari tion estas kompletigi implicitan demandon. Ekzemple, leganto eble volas "
"scii: *Kiel mi instalu MiaBiblioteko?* Tiel, bona ebla titolo estas *Instali "
"MiaBiblioteko*."

#: ../source/contribute.rst:283
msgid ""
"In section headings, use sentence case. In other words, write headings as "
"you would write a typical sentence."
msgstr ""
"En paragrafaj titoloj, uzu frazan usklon. Alivorte, skribu titolojn tiel, "
"kiel vi skribus ordinaran frazon."

#: ../source/contribute.rst:0
msgid "Wrong: Things You Should Know About Python"
msgstr "Netaŭga: Sciindaĵoj Pri Python"

#: ../source/contribute.rst:0
msgid "Right: Things you should know about Python"
msgstr "Taŭga: Sciindaĵoj pri Python"

#: ../source/contribute.rst:290
msgid "**Numbers**"
msgstr "**Nombroj**"

#: ../source/contribute.rst:290
msgid ""
"In body text, write numbers one through nine as words. For other numbers or "
"numbers in tables, use numerals."
msgstr ""
"En alineo, skribo la nombrojn unu ĝis naŭ kiel vortojn. Por aliaj nombroj aŭ "
"nombroj en tabeloj, uzu ciferojn."

#: ../source/discussions/deploying-python-applications.rst:4
msgid "Deploying Python applications"
msgstr "Disponigi Python-programojn"

#: ../source/discussions/deploying-python-applications.rst:0
#: ../source/discussions/downstream-packaging.rst:0
#: ../source/discussions/single-source-version.rst:0
#: ../source/guides/distributing-packages-using-setuptools.rst:0
#: ../source/guides/index-mirrors-and-caches.rst:0
#: ../source/guides/installing-using-linux-tools.rst:0
#: ../source/guides/migrating-to-pypi-org.rst:0
#: ../source/guides/multi-version-installs.rst:0
#: ../source/guides/packaging-binary-extensions.rst:0
#: ../source/guides/supporting-multiple-python-versions.rst:0
#: ../source/guides/supporting-windows-using-appveyor.rst:0
msgid "Page Status"
msgstr "Stato de la paĝo"

#: ../source/discussions/deploying-python-applications.rst:6
#: ../source/guides/index-mirrors-and-caches.rst:7
#: ../source/guides/installing-using-linux-tools.rst:7
#: ../source/guides/packaging-binary-extensions.rst:7
msgid "Incomplete"
msgstr "Nekompleta"

#: ../source/discussions/deploying-python-applications.rst:0
#: ../source/discussions/downstream-packaging.rst:0
#: ../source/discussions/single-source-version.rst:0
#: ../source/guides/distributing-packages-using-setuptools.rst:0
#: ../source/guides/index-mirrors-and-caches.rst:0
#: ../source/guides/installing-using-linux-tools.rst:0
#: ../source/guides/packaging-binary-extensions.rst:0
#: ../source/guides/supporting-multiple-python-versions.rst:0
#: ../source/guides/supporting-windows-using-appveyor.rst:0
msgid "Last Reviewed"
msgstr "Laste reviziita"

#: ../source/discussions/deploying-python-applications.rst:7
msgid "2021-8-24"
msgstr "24 Aŭgusto 2021"

#: ../source/discussions/deploying-python-applications.rst:11
#: ../source/specifications/externally-managed-environments.rst:130
#: ../source/specifications/platform-compatibility-tags.rst:14
msgid "Overview"
msgstr "Superrigardo"

#: ../source/discussions/deploying-python-applications.rst:15
msgid "Supporting multiple hardware platforms"
msgstr "Subtenante plurajn aparatajn platformojn"

#: ../source/discussions/deploying-python-applications.rst:37
msgid "OS packaging & installers"
msgstr "Pakado kaj instaliloj por mastrumaj sistemoj"

#: ../source/discussions/deploying-python-applications.rst:49
#: ../source/discussions/deploying-python-applications.rst:86
msgid "Windows"
msgstr "Windows"

#: ../source/discussions/deploying-python-applications.rst:58
msgid "Pynsist"
msgstr "Pynsist"

#: ../source/discussions/deploying-python-applications.rst:60
msgid ""
"`Pynsist <https://pypi.org/project/pynsist>`__ is a tool that bundles Python "
"programs together with the Python-interpreter into a single installer based "
"on NSIS. In most cases, packaging only requires the user to choose a version "
"of the Python-interpreter and declare the dependencies of the program. The "
"tool downloads the specified Python-interpreter for Windows and packages it "
"with all the dependencies in a single Windows-executable installer."
msgstr ""
"`Pynsist <https://pypi.org/project/pynsist>`__ estas ilo faskiganta Python-"
"programon kune kun la Python -interpretilo en unu instalilon uzantan NSIS. "
"Plej ofte, pakado nur postulas elekti version de la Python-interpretilo kaj "
"deklari la dependencojn de la programo. La ilo elŝutas la specifitan Python-"
"interpretilon por Windows kaj pakas ĝin kune kun ĉiuj dependaĵoj en unu "
"Windows-ruleblan instalilon."

#: ../source/discussions/deploying-python-applications.rst:67
msgid ""
"The installed program can be started from a shortcut that the installer adds "
"to the start-menu. It uses a Python interpreter installed within its "
"application directory, independent of any other Python installation on the "
"computer."
msgstr ""
"La instalita programo estas lanĉebla per lanĉilo aldonita de la instalilo al "
"la startmenuo. Ĝi uzas Python-interpretilon instalitan ene de ĝia programa "
"dosierujo, sendependan de aliaj Python-instalaĵoj sur la komputilo."

#: ../source/discussions/deploying-python-applications.rst:71
msgid ""
"A big advantage of Pynsist is that the Windows packages can be built on "
"Linux. There are several examples for different kinds of programs (console, "
"GUI) in the :any:`documentation <pynsist:index>`. The tool is released under "
"the MIT-licence."
msgstr ""
"Granda avantaĝo de Pynsist estas, ke la Windows-pakoj estas konstrueblaj sur "
"Linux. Ekzistas pluraj ekzemploj por diversaj specoj de programoj (konzolaj, "
"grafikfasadaj) en la :any:`dokumentaro <pynsist:index>`. La ilo estas sub la "
"licenco MIT."

#: ../source/discussions/deploying-python-applications.rst:77
msgid "Application bundles"
msgstr "Aplikprogramaj faskoj"

#: ../source/discussions/deploying-python-applications.rst:89
msgid "py2exe"
msgstr ""

#: ../source/discussions/deploying-python-applications.rst:91
msgid ""
"`py2exe <https://pypi.org/project/py2exe/>`__ is a distutils extension which "
"allows to build standalone Windows executable programs (32-bit and 64-bit) "
"from Python scripts. Python versions included in the official development "
"cycle are supported (refers to `Status of Python branches`__). py2exe can "
"build console executables and windows (GUI) executables. Building windows "
"services, and DLL/EXE COM servers might work but it is not actively "
"supported. The distutils extension is released under the MIT-licence and "
"Mozilla Public License 2.0."
msgstr ""
"`py2exe <https://pypi.org/project/py2exe/>`__ estas etendaĵo de distutils, "
"kiu ebligas konstrui memstarajn Windows-programojn (32-bitajn aŭ 64-bitajn) "
"el Python-programoj. Versioj de Python inkluzivitaj en la oficiala evolua "
"ciklo estas subtenata (vidu `Staton de la branĉoj de Python <Status of "
"Python branches>`__). py2exe povas konstrui konzolajn programojn kaj "
"fenestrajn (grafikfasadajn) programojn. Konstruado de servoj por Windows kaj "
"servoj DLL/EXE COM eble funkcios, sed tio ne estas aktive subtenata. La "
"etendaĵo de distutils estas disponebla sub la Licenco MIT kaj la Mozilla "
"Public License 2.0."

#: ../source/discussions/deploying-python-applications.rst:103
#: ../source/specifications/platform-compatibility-tags.rst:195
msgid "macOS"
msgstr ""

#: ../source/discussions/deploying-python-applications.rst:106
msgid "py2app"
msgstr ""

#: ../source/discussions/deploying-python-applications.rst:108
msgid ""
"`py2app <https://pypi.org/project/py2app/>`__ is a Python setuptools command "
"which will allow you to make standalone macOS application bundles and "
"plugins from Python scripts. Note that py2app MUST be used on macOS to build "
"applications, it cannot create Mac applications on other platforms. py2app "
"is released under the MIT-license."
msgstr ""
"`py2app <https://pypi.org/project/py2app/>`__ estas komando por Python "
"setuptools, kiu ebligas fari aŭtonoman programfaskon aŭ kromprogramon por "
"macOS el Python-programon. Notu, ke py2app DEVAS esti uzita sur macOS por "
"konstrui; ĝi ne povas krei Mac-programojn sur aliaj platformoj. py2app uzas "
"la licencon MIT."

#: ../source/discussions/deploying-python-applications.rst:115
msgid "Unix (including Linux and macOS)"
msgstr "Unikso (inkluzive de Linux kaj macOS)"

#: ../source/discussions/deploying-python-applications.rst:118
#: ../source/key_projects.rst:576
msgid "pex"
msgstr "pex"

#: ../source/discussions/deploying-python-applications.rst:120
msgid ""
"`pex <https://pypi.org/project/pex/>`__ is  a library for generating .pex "
"(Python EXecutable) files which are executable Python environments in the "
"spirit of virtualenvs. pex is an expansion upon the ideas outlined in :pep:"
"`441` and makes the deployment of Python applications as simple as cp. pex "
"files may even include multiple platform-specific Python distributions, "
"meaning that a single pex file can be portable across Linux and macOS. pex "
"is released under the Apache License 2.0."
msgstr ""
"`pex <https://pypi.org/project/pex/>`__ estas biblioteko por generi .pex-"
"dosieron (Python EXecutable), kiu estas rulebla Python-medio simile al "
"virtualenv. pex estas plivastigo de la ideoj en :pep:`441` kaj igas la "
"disponigon de Python-programojn tiel facila kiel cp. pex-dosiero povas eĉ "
"inkluzivi plurajn platformspecifajn Python-distribuojn; tial, unu pex-"
"dosiero povas esti portebla inter Linux kaj macOS. pex uzas la Apache-"
"Licencon 2.0."

#: ../source/discussions/deploying-python-applications.rst:129
msgid "Configuration management"
msgstr "Administrado de agordoj"

#: ../source/discussions/distribution-package-vs-import-package.rst:5
msgid "Distribution package vs. import package"
msgstr "Distribua pako kaj importa pako"

#: ../source/discussions/distribution-package-vs-import-package.rst:7
msgid ""
"A number of different concepts are commonly referred to by the word "
"\"package\". This page clarifies the differences between two distinct but "
"related meanings in Python packaging, \"distribution package\" and \"import "
"package\"."
msgstr ""
"La vorto «pako» signifas plurajn malsamajn konceptoj. Jen paĝo klariganta la "
"diferencojn inter la du malsamaj sed rilataj signifoj je Python-pakado, "
"«distribua pako» kaj «importa pako»."

#: ../source/discussions/distribution-package-vs-import-package.rst:13
msgid "What's a distribution package?"
msgstr "Kio estas distribua pako?"

#: ../source/discussions/distribution-package-vs-import-package.rst:15
msgid ""
"A distribution package is a piece of software that you can install. Most of "
"the time, this is synonymous with \"project\". When you type ``pip install "
"pkg``, or when you write ``dependencies = [\"pkg\"]`` in your ``pyproject."
"toml``, ``pkg`` is the name of a distribution package. When you search or "
"browse the PyPI_, the most widely known centralized source for installing "
"Python libraries and tools, what you see is a list of distribution packages. "
"Alternatively, the term \"distribution package\" can be used to refer to a "
"specific file that contains a certain version of a project."
msgstr ""
"Distribua pako estas instalebla peco da programaro. Plej ofte, tio estas "
"sinonima al «projekto». Kiam vi tajpas ``pip install pako``, aŭ kiam vi "
"skribas ``dependencies = [\"pako\"]`` en via ``pyproject.toml``, ``pako`` "
"estas la nomo de distribua pako. Kiam vi serĉas aŭ foliumas PyPI_, la plej "
"vaste konata fonto por instali Python-bibliotekojn kaj ilojn, vi vidas "
"liston da distribuaj pakoj. Alternative, la termino «distribua pako» povas "
"signifi specifan dosieron enhavantan specifan version de projekto."

#: ../source/discussions/distribution-package-vs-import-package.rst:24
msgid ""
"Note that in the Linux world, a \"distribution package\", most commonly "
"abbreviated as \"distro package\" or just \"package\", is something provided "
"by the system package manager of the `Linux distribution <distro_>`_, which "
"is a different meaning."
msgstr ""
"Notu, ke en la mondo de Linux, «distribua pako» aŭ simple «pako» estas io "
"provizata de la sistema pakadministrilo de la `Linux-distribuo <distro_>`_, "
"kio estas alia signifo."

#: ../source/discussions/distribution-package-vs-import-package.rst:31
msgid "What's an import package?"
msgstr "Kio estas importa pako?"

#: ../source/discussions/distribution-package-vs-import-package.rst:33
msgid ""
"An import package is a Python module. Thus, when you write ``import pkg`` or "
"``from pkg import func`` in your Python code, ``pkg`` is the name of an "
"import package. More precisely, import packages are special Python modules "
"that can contain submodules. For example, the ``numpy`` package contains "
"modules like ``numpy.linalg`` and ``numpy.fft``. Usually, an import package "
"is a directory on the file system, containing modules as ``.py`` files and "
"subpackages as subdirectories."
msgstr ""
"Importa pako estas Python-modulo. Tiel, kiam vi skribas ``import pako`` aŭ "
"``from pako import funk`` en via Python-kodo, ``pako`` estas la nomo de "
"importa pako. Pli precize, importa pako estas speciala Python-modulo, kiu "
"povas enhavi submodulojn. Ekzemple, la pako ``numpy`` enhavas modulojn kiel "
"``numpy.linalg`` kaj ``numpy.fft``. Ordinare, importa pako estas dosierujo "
"en la dosiersistemo, enhavanta modulojn kiel ``.py``-dosierojn kaj subpakojn "
"kiel subdosierujojn."

#: ../source/discussions/distribution-package-vs-import-package.rst:42
msgid ""
"You can use an import package as soon as you have installed a distribution "
"package that provides it."
msgstr ""
"Vi povas uzi importan pakon tuj, kiam vi instalis distribuan pakon "
"provizanta ĝin."

#: ../source/discussions/distribution-package-vs-import-package.rst:47
msgid "What are the links between distribution packages and import packages?"
msgstr "Kiel ligiĝas distribuaj pakoj kaj importaj pakoj?"

#: ../source/discussions/distribution-package-vs-import-package.rst:49
msgid ""
"Most of the time, a distribution package provides one single import package "
"(or non-package module), with a matching name. For example, ``pip install "
"numpy`` lets you ``import numpy``."
msgstr ""
"Plej ofte, distribua pako provizas nur unu importan pakon (aŭ ne-pakan "
"modulon), kun la sama nomo. Ekzemple, ``pip install numpy`` ebligas vin "
"skribi ``import numpy``."

#: ../source/discussions/distribution-package-vs-import-package.rst:53
msgid ""
"However, this is only a convention. PyPI and other package indices *do not "
"enforce any relationship* between the name of a distribution package and the "
"import packages it provides. (A consequence of this is that you cannot "
"blindly install the PyPI package ``foo`` if you see ``import foo``; this may "
"install an unintended, and potentially even malicious package.)"
msgstr ""
"Tamen, tio estas nur konvencia. PyPI kaj aliaj pakindeksoj *ne devigas ajnan "
"rilaton* inter la nomo de distribua pako kaj la importaj pakoj provizataj de "
"ĝi. (Tial, vi ne simple instalu la PyPI-pakon ``pako``, se vi vidas ``import "
"pako``; tio eble instalos neintencitan aŭ eĉ malican pakon.)"

#: ../source/discussions/distribution-package-vs-import-package.rst:59
msgid ""
"A distribution package could provide an import package with a different "
"name. An example of this is the popular Pillow_ library for image "
"processing. Its distribution package name is ``Pillow``, but it provides the "
"import package ``PIL``. This is for historical reasons: Pillow started as a "
"fork of the PIL library, thus it kept the import name ``PIL`` so that "
"existing PIL users could switch to Pillow with little effort. More "
"generally, a fork of an existing library is a common reason for differing "
"names between the distribution package and the import package."
msgstr ""
"Distribua pako povas provizi importan pakon de alia nomo. Ekzemple, "
"konsideru la popularan bibliotekon Pillow_ por pritraktado de bildoj. La "
"nomo de ĝia distribua pako estas ``Pillow``, sed ĝi provizas la importan "
"pakon ``PIL``. Tio estas pro historiaj kialoj: Pillow komenciĝis kiel forko "
"de la biblioteko PIL kaj retenis la importan nomon ``PIL``, por ke "
"ekzistantaj uzantoj de PIL povas ekuzi Pillow senŝanĝe. Pli ĝenerale, "
"forkado de ekzistanta biblioteko estas ofta kialo por malsamaj nomoj inter "
"la distribua pako kaj la importa pako."

#: ../source/discussions/distribution-package-vs-import-package.rst:69
msgid ""
"On a given package index (like PyPI), distribution package names must be "
"unique. On the other hand, import packages have no such requirement. Import "
"packages with the same name can be provided by several distribution "
"packages. Again, forks are a common reason for this."
msgstr ""
"En iu pakindekso (kiel PyPI), la nomoj de distribuaj pakoj devas esti "
"unikaj. Tamen, neniu simila devo ekzistas por la nomoj de importaj pakoj. "
"Pluraj distribuaj pakoj povas provizi importajn pakojn de la sama nomo. "
"Forkado estas ofta kialo pri tio."

#: ../source/discussions/distribution-package-vs-import-package.rst:74
msgid ""
"Conversely, a distribution package can provide several import packages, "
"although this is less common. An example is the attrs_ distribution package, "
"which provides both an ``attrs`` import package with a newer API, and an "
"``attr`` import package with an older but supported API."
msgstr ""
"Male, distribua pako povas provizi plurajn importajn pakojn, kvankam tio "
"maloftas. Ekzemple, la distribua pako attrs_ provizas kaj importan pakon "
"``attrs`` de pli nova API kaj importan pakon ``attr`` de pli malnova sed "
"subtenata API."

#: ../source/discussions/distribution-package-vs-import-package.rst:81
msgid "How do distribution package names and import package names compare?"
msgstr "Kiel komparas nomo de distribua pako kaj nomo de importa pako?"

#: ../source/discussions/distribution-package-vs-import-package.rst:83
msgid ""
"Import packages should have valid Python identifiers as their name (the :ref:"
"`exact rules <python:identifiers>` are found in the Python documentation) "
"[#non-identifier-mod-name]_. In particular, they use underscores ``_`` as "
"word separator and they are case-sensitive."
msgstr ""
"La nomo de importa pako devas esti validan identigilon de Python (la :ref:"
"`precizaj reguloj <python:identifiers>` troviĝas en la dokumentaro de "
"Python) [#non-identifier-mod-name]_. Speciale, ĝi uzas substrekojn ``_`` "
"kiel vortapartigilojn kaj estas usklecdistinga."

#: ../source/discussions/distribution-package-vs-import-package.rst:88
msgid ""
"On the other hand, distribution packages can use hyphens ``-`` or "
"underscores ``_``. They can also contain dots ``.``, which is sometimes used "
"for packaging a subpackage of a :ref:`namespace package <packaging-namespace-"
"packages>`. For most purposes, they are insensitive to case and to ``-`` "
"vs.  ``_`` differences, e.g., ``pip install Awesome_Package`` is the same as "
"``pip install awesome-package`` (the precise rules are given in the :ref:"
"`name normalization specification <name-normalization>`)."
msgstr ""
"Aliflanke, nomo de distribua pako povas enhavi streketon ``-`` aŭ substrekon "
"``_`` kaj ankaŭ povas enhavi punkton ``.``, kiu estas kelkfoje uzata por "
"paki subpakon de :ref:`nomspaca pako <packaging-namespace-packages>`. Por "
"plej multaj celoj, ĝi estas usklecoblinda kaj al la diferenco inter ``-`` "
"kaj ``_``. Ekzemple, ``pip install Bonega_Pako`` estas sama kiel ``pip "
"install bonega-pako`` (la precizaj reguloj troviĝas en la :ref:`specifo pri "
"normigo de nomoj <name-normalization>`)."

#: ../source/discussions/distribution-package-vs-import-package.rst:101
msgid ""
"Although it is technically possible to import packages/modules that do not "
"have a valid Python identifier as their name, using :doc:`importlib <python:"
"library/importlib>`, this is vanishingly rare and strongly discouraged."
msgstr ""
"Kvantam teĥnike eblas importi pakon/modulon, kies nomo ne estas valida "
"Python-identigilo, per :doc:`importlib <python:library/importlib>`, tio "
"estas maloftega kaj malrekomendegata."

#: ../source/discussions/downstream-packaging.rst:5
msgid "Supporting downstream packaging"
msgstr "Subteni pakadon far malsupruloj"

#: ../source/discussions/downstream-packaging.rst:7
msgid "Draft"
msgstr "Malneto"

#: ../source/discussions/downstream-packaging.rst:8
msgid "2025-?"
msgstr "2025-?"

#: ../source/discussions/downstream-packaging.rst:10
msgid ""
"While PyPI and the Python packaging tools such as :ref:`pip` are the primary "
"means of distributing Python packages, they are also often made available as "
"part of other packaging ecosystems. These repackaging efforts are "
"collectively called *downstream* packaging (your own efforts are called "
"*upstream* packaging), and include such projects as Linux distributions, "
"Conda, Homebrew and MacPorts. They generally aim to provide improved support "
"for use cases that cannot be handled via Python packaging tools alone, such "
"as native integration with a specific operating system, or assured "
"compatibility with specific versions of non-Python software."
msgstr ""
"Kvankam PyPI kaj la Python-pakiloj kiel :ref:`pip` estas la ĉefrimedoj por "
"distribui Python-pakojn, Python-pakoj ankaŭ ofte estas parto de aliaj "
"pakadaj ekosistemoj. Tiaj repakadaj klopodoj kolektive nomiĝas *malsuprula* "
"pakado (viaj propraj klopodoj nomiĝas *suprula* pakado), kaj inkluzivas "
"interalie Linux-distribuojn, Conda, Homebrew kaj MacPorts. Ili ĝenerale "
"celas pli bone subteni tiajn uzkazojn, kiajn Python-pakiloj sole ne povas "
"subteni, kiel ekzemple indiĝenan integriĝon kun iu mastruma sistemo, aŭ "
"certan kongruecon kun iu versio de ne-Python-a programo."

#: ../source/discussions/downstream-packaging.rst:19
msgid ""
"This discussion attempts to explain how downstream packaging is usually "
"done, and what additional challenges downstream packagers typically face. It "
"aims to provide some optional guidelines that project maintainers may choose "
"to follow which help make downstream packaging *significantly* easier "
"(without imposing any major maintenance hassles on the upstream project). "
"Note that this is not an all-or-nothing proposal — anything that upstream "
"maintainers can do is useful, even if it's only a small part. Downstream "
"maintainers are also willing to prepare patches to resolve these issues. "
"Having these patches merged can be very helpful, since it removes the need "
"for different downstreams to carry and keep rebasing the same patches, and "
"the risk of applying inconsistent solutions to the same problem."
msgstr ""
"Ĉi tiu diskuto provas klarigi, kiel malsuprula pakado kutime funkcias kaj "
"kiajn problemojn alfrontas malsupraj pakantoj. Ĝi celas disponigi kelkajn "
"laŭvolajn gvidnormojn por mastrumantoj de projektoj por *pliege* faciligi "
"malsuprulan pakadon (sen grava malfaciligo de la suprula projekto). Notu, ke "
"tio ne estas ĉioma-aŭ-nenioma – utilas io ajn, kion suprula mastrumanto "
"povas fari, eĉ se ĝi estas nur malgranda parto. Malsuprulaj mastrumantoj "
"ankaŭ volas prepari flikojn por solvi tiajn problemojn. Eĉ kelkaj el tiaj "
"flikoj estas tre utilaj, ĉar diversaj malsupruloj ne plu bezonas alporti kaj "
"rebazigi la samajn flikojn aŭ solvi la saman problemon multfoje."

#: ../source/discussions/downstream-packaging.rst:31
msgid ""
"Establishing a good relationship between software maintainers and downstream "
"packagers can bring mutual benefits. Downstreams are often willing to share "
"their experience, time and hardware to improve your package. They are "
"sometimes in a better position to see how your package is used in practice, "
"and to provide information about its relationships with other packages that "
"would otherwise require significant effort to obtain. Packagers can often "
"find bugs before your users hit them in production, provide bug reports of "
"good quality, and supply patches whenever they can. For example, they are "
"regularly active in ensuring the packages they redistribute are updated for "
"any compatibility issues that arise when a new Python version is released."
msgstr ""
"Bonaj rilatoj inter programomastrumantoj kaj malsupraj pakantoj povas helpi "
"unu la aliajn. Malsupruloj ofte volonte donacas siajn sperton, tempon kaj "
"aparatojn por plibonigi vian pakon. Ili fojfoje pli bone scias, kiel via "
"pako uziĝas praktike kaj pri la rilatoj kun aliaj pakoj; ofte ne facilas "
"akiri tiajn informojn alimaniere. Pakantoj ofte povas trovi cimon antaŭ ol "
"la uzantoj trafus ĝin praktike; pakantoj bone raportas cimojn kaj disdonas "
"flikaĵojn tiam ajn kiam eblas. Ekzemple, ili aktive certigas, ke la "
"redistribuataj pakoj estas ĝisdatigitaj kontraŭ problemoj pri kongrueco, "
"kiam nova versio de Python eldoniĝas."

#: ../source/discussions/downstream-packaging.rst:43
msgid ""
"Please note that downstream builds include not only binary redistribution, "
"but also source builds done on user systems (in source-first distributions "
"such as Gentoo Linux, for example)."
msgstr ""
"Bonvolu noti, ke malsuprulaj konstruj inkluzivas ne nur duuman "
"redistribuadon sed ankaŭ konstruojn el fonto sur sistemo de uzanto (en fonto-"
"centra distribuo kiel Gentoo Linux, ekzemple)."

#: ../source/discussions/downstream-packaging.rst:51
msgid "Provide complete source distributions"
msgstr "Provizi plenajn fontajn distribuojn"

#: ../source/discussions/downstream-packaging.rst:54
#: ../source/discussions/downstream-packaging.rst:150
#: ../source/discussions/downstream-packaging.rst:213
#: ../source/discussions/downstream-packaging.rst:303
#: ../source/discussions/downstream-packaging.rst:412
msgid "Why?"
msgstr "Kial?"

#: ../source/discussions/downstream-packaging.rst:56
msgid ""
"The vast majority of downstream packagers prefer to build packages from "
"source, rather than use the upstream-provided binary packages. In some "
"cases, using sources is actually required for the package to be included in "
"the distribution. This is also true of pure Python packages that provide "
"universal wheels. The reasons for using source distributions may include:"
msgstr ""
"Preskaŭ ĉiuj malsuprulaj pakantoj preferas konstrui pakojn el fonto, ne uzi "
"la duumajn pakojn provizitajn de supruloj. Kelkfoje, uzado de la fonto estas "
"deviga por inkluzivi la pakon en la distribuon. Tio ankaŭ estas vera pri "
"pako konsistanta nur el Python provizanta universalan wheel. Jen iuj kialoj "
"por uzi fontan distribuon:"

#: ../source/discussions/downstream-packaging.rst:62
msgid "Being able to audit the source code of all packages."
msgstr "La kapablo inspekti la fontkodon de ĉiuj pakoj."

#: ../source/discussions/downstream-packaging.rst:64
msgid "Being able to run the test suite and build documentation."
msgstr "La kapablo ruli la testaron kaj konstrui la dokumentaron."

#: ../source/discussions/downstream-packaging.rst:66
msgid ""
"Being able to easily apply patches, including backporting commits from the "
"project's repository and sending patches back to the project."
msgstr ""
"La kapablo facile fliki, inkluzive de retroporti modifojn el la projekta "
"deponejo kaj submeti flikaĵojn al la projekto."

#: ../source/discussions/downstream-packaging.rst:69
msgid ""
"Being able to build on a specific platform that is not covered by upstream "
"builds."
msgstr "La kapablo konstrui sur specifa platformo ne provizita de supruloj."

#: ../source/discussions/downstream-packaging.rst:72
msgid "Being able to build against specific versions of system libraries."
msgstr "La kapablo bindi al specifaj versioj de sistemaj bibliotekoj."

#: ../source/discussions/downstream-packaging.rst:74
msgid "Having a consistent build process across all Python packages."
msgstr "Havi koheran konstruprocedon por ĉiaj Python-pakoj."

#: ../source/discussions/downstream-packaging.rst:76
msgid ""
"While it is usually possible to build packages from a Git repository, there "
"are a few important reasons to provide a static archive file instead:"
msgstr ""
"Kvankam ofte oni povas konstrui pakon el Git-deponejo, ekzistas kelkaj "
"gravaj kialoj por anstataŭe disponigi statikan arĥivon:"

#: ../source/discussions/downstream-packaging.rst:79
msgid ""
"Fetching a single file is often more efficient, more reliable and better "
"supported than e.g. using a Git clone. This can help users with poor "
"Internet connectivity."
msgstr ""
"Elŝutado de unu dosiero estas ofte pli rapida, pli dependema kaj pli bone "
"subtenata ol ekz. uzi ``git clone``. Tio povas helpi tiajn uzantojn, kies "
"Interreta konekto malbonas."

#: ../source/discussions/downstream-packaging.rst:83
msgid ""
"Downstreams often use hashes to verify the authenticity of source files on "
"subsequent builds, which require that they remain bitwise identical over "
"time. For example, automatically generated Git archives do not guarantee "
"this, as the compressed data may change if gzip is upgraded on the server."
msgstr ""
"Malsupruloj ofte uzas haketaĵojn por konfirmi la aŭtentikecon de "
"fontdosieroj por sekvaj konstruoj. Tio postulas, ke ili restu bite identaj. "
"Ekzemple, aŭtomate generita Git-arĥivo ne garantias tion, ĉar la densigitaj "
"datenoj povas ŝanĝiĝi, se la servilo ĝisdatigas ``gzip``."

#: ../source/discussions/downstream-packaging.rst:88
msgid ""
"Archive files can be mirrored, reducing both upstream and downstream "
"bandwidth use. The actual builds can afterwards be performed in firewalled "
"or offline environments, that can only access source files provided by the "
"local mirror or redistributed earlier."
msgstr ""
"Oni povas speguli arĥivo-dosierojn, malpliigante Interretan uzadon por ĉiuj. "
"La konstruado mem povas okazi en ŝirmita aŭ senkonekta medio, kiu povas nur "
"atingi fontodosierojn provizitajn de la loka spegulo aŭ redistribuitajn pli "
"frue."

#: ../source/discussions/downstream-packaging.rst:93
msgid ""
"Explicitly publishing archive files can ensure that any dependencies on "
"version control system metadata are resolved when creating the source "
"archive. For example, automatically generated Git archives omit all of the "
"commit tag information, potentially resulting in incorrect version details "
"in the resulting builds."
msgstr ""
"Eksplicite eldoni arĥivo-dosierojn povas certigi, ke ajna dependeco sur "
"versikontrolsistemaj metadatenoj solviĝas dum kreado de la fonta arĥivo. "
"Ekzemple, aŭtomate generita Git-arĥivo ekskluziviĝas informojn pri la "
"enmetaj etikedoj, eble kaŭzante malĝustajn informojn pri versiaj detaloj en "
"la rezultaj konstruoj."

#: ../source/discussions/downstream-packaging.rst:99
#: ../source/discussions/downstream-packaging.rst:179
#: ../source/discussions/downstream-packaging.rst:277
#: ../source/discussions/downstream-packaging.rst:337
#: ../source/discussions/downstream-packaging.rst:441
msgid "How?"
msgstr "Kiel?"

#: ../source/discussions/downstream-packaging.rst:101
msgid ""
"Ideally, **a source distribution archive published on PyPI should include "
"all the files from the package's Git repository** that are necessary to "
"build the package itself, run its test suite, build and install its "
"documentation, and any other files that may be useful to end users, such as "
"shell completions, editor support files, and so on."
msgstr ""
"Ideale, **fontodistribua arĥivo ĉe PyPI inkluzivu ĉiujn dosierojn de la Git-"
"deponejo de la pako** necesajn por konstrui la pako mem, ruli la testaron, "
"konstrui kaj instali la dokumentaron, kaj ĉiajn aliajn dosierojn utilajn por "
"uzantoj, kiel ekzemple ŝelkompletigaĵojn, redaktilajn helpdosierojn ktp."

#: ../source/discussions/downstream-packaging.rst:107
msgid ""
"This point applies only to the files belonging to the package itself. The "
"downstream packaging process, much like Python package managers, will "
"provision the necessary Python dependencies, system tools and external "
"libraries that are needed by your package and its build scripts. However, "
"the files listing these dependencies (for example, ``requirements*.txt`` "
"files) should also be included, to help downstreams determine the needed "
"dependencies, and check for changes in them."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:115
msgid ""
"Some projects have concerns related to Python package managers using source "
"distributions from PyPI. They do not wish to increase their size with files "
"that are not used by these tools, or they do not wish to publish source "
"distributions at all, as they enable a problematic or outright nonfunctional "
"fallback to building the particular project from source. In these cases, a "
"good compromise may be to publish a separate source archive for downstream "
"use elsewhere, for example by attaching it to a GitHub release. "
"Alternatively, large files, such as test data, can be split into separate "
"archives."
msgstr ""
"Kelkaj projektoj havas problemojn pri Python-pakadministrilo uzanta fontan "
"distribuon el PyPI. Ili ne deziras pligrandigi pakojn kun dosieroj ne "
"uzataj, aŭ ili deziras ne eldoni fontan distribuon, ĉar konstrui projekton "
"el fonta distribuo povas esti problemplene aŭ neeble. Tiakaze, bona "
"kompromiso povas esti eldoni apartan fontarĥivon por malsupruloj aliloke, "
"ekzemple per alkroĉado al GitHub-eldono. Alternative, grandaj dosieroj, kiel "
"ekzemple testdatenoj, povas esti dividitaj en apartajn arĥivojn."

#: ../source/discussions/downstream-packaging.rst:124
msgid ""
"On the other hand, some projects (NumPy_, for instance) decide to include "
"tests in their installed packages. This has the added advantage of "
"permitting users to run tests after installing them, for example to check "
"for regressions after upgrading a dependency. Yet another approach is to "
"split tests or test data into a separate Python package. Such an approach "
"was taken by the cryptography_ project, with the large test vectors being "
"split to cryptography-vectors_ package."
msgstr ""
"Aliflanke, kelkaj projektoj (kiel NumPy_ ekzemple) decidas inkluzivi testojn "
"en siaj instalitaj pakoj. Tio havas la ekstran avantaĝon ebligantan uzantojn "
"ruli testojn post instalo, ekzemple por kontroli cimojn post ĝisdatigo de "
"dependaĵo. Alia metodo estas disdividi testojn aŭ testajn datenojn en "
"apartan Python-pakon. Tiun metodon uzas la projekto cryptography_, kies "
"grandaj tekstovektoroj troviĝas en la pako cryptography-vectors_."

#: ../source/discussions/downstream-packaging.rst:132
msgid ""
"A good idea is to use your source distribution in the release workflow. For "
"example, the :ref:`build` tool does exactly that — it first builds a source "
"distribution, and then uses it to build a wheel. This ensures that the "
"source distribution actually works, and that it won't accidentally install "
"fewer files than the official wheels."
msgstr ""
"Bona ideo estas uzi la fontan distribuon en la eldona laborfluo. Ekzemple, "
"la ilo :ref:`build` faras precize tion: ĝi unue konstruas fontan distribuon, "
"kaj poste uzas ĝin por konstrui wheel. Tio certigas, ke la fonta distribuo "
"fakte funkcias, kaj ke ĝi ne preterlasas dosierojn inkluzivitajn en la "
"oficiala wheel."

#: ../source/discussions/downstream-packaging.rst:138
msgid ""
"Ideally, also use the source distribution to run tests, build documentation, "
"and so on, or add specific tests to make sure that all necessary files were "
"actually included. Understandably, this requires more effort, so it's fine "
"not do that — downstream packagers will report any missing files promptly."
msgstr ""
"Ideale, ankaŭ uzu la fontan distribuon por ruli testojn, konstrui "
"dokumentaron, ktp, aŭ aldonu specifajn testojn por certigi, ke ĉiuj necesaj "
"dosieroj inkluziviĝis. Kompreneble, tio postulas pli da peno; tial, estas "
"bone ne fari tion – malsuprulaj pakantoj tuj raportos ian ajn mankantan "
"dosieron."

#: ../source/discussions/downstream-packaging.rst:147
msgid "Do not use the Internet during the build process"
msgstr "Ne uzi Interreton dum konstruado"

#: ../source/discussions/downstream-packaging.rst:152
msgid ""
"Downstream builds are frequently done in sandboxed environments that cannot "
"access the Internet. The package sources are unpacked into this environment, "
"and all the necessary dependencies are installed."
msgstr ""
"Malsuprulo ofte konstruas en izolita medio sen konekto al Interreto, "
"malpakante la resursojn de la pako en tiun medion kaj instalante ĉiujn "
"necesajn dependaĵojn."

#: ../source/discussions/downstream-packaging.rst:156
msgid ""
"Even if this is not the case, and assuming that you took sufficient care to "
"properly authenticate downloads, using the Internet is discouraged for a "
"number of reasons:"
msgstr ""
"Eĉ se ne, kaj supozante, ke oni taŭge aŭtentikigus elŝutojn, uzi Interreton "
"estas malrekomendate pro la jenaj kialoj:"

#: ../source/discussions/downstream-packaging.rst:160
msgid ""
"The Internet connection may be unstable (e.g. due to poor reception) or "
"suffer from temporary problems that could cause the process to fail or hang."
msgstr ""
"La Interreta konekto povas esti malstabila (ekz. pro malbona sendrata reto) "
"aŭ havi dumpteman problemon, kaŭzante malsukceson aŭ paraliziĝon de la "
"procezo."

#: ../source/discussions/downstream-packaging.rst:164
msgid ""
"The remote resources may become temporarily or even permanently unavailable, "
"making the build no longer possible. This is especially problematic when "
"someone needs to build an old package version."
msgstr ""
"La foraj resursoj povas portempe aŭ eĉ daŭre neatingebligi, malebligante la "
"konstruadon. Tio estas aparte problema, kiam oni devas konstrui malnovan "
"version de pako."

#: ../source/discussions/downstream-packaging.rst:168
msgid "The remote resources may change, making the build not reproducible."
msgstr "La foraj resursoj povas ŝanĝiĝi, nereproduktebligante la konstruon."

#: ../source/discussions/downstream-packaging.rst:170
msgid ""
"Accessing remote servers poses a privacy issue and a potential security "
"issue, as it exposes information about the system building the package."
msgstr ""
"Kontakto al fora servilo kaŭzas problemojn pri privateco kaj eble sekureco, "
"ĉar tio tralasas informojn pri la sistemo konstruanta la pakon."

#: ../source/discussions/downstream-packaging.rst:174
msgid ""
"The user may be using a service with a limited data plan, in which "
"uncontrolled Internet access may result in additional charges or other "
"inconveniences."
msgstr ""
"La uzanto eble uzas servon kun limigita datenplano tiel, ke senbrida "
"konektado al Interreto povas kaŭzi kromajn pagendaĵojn aŭ aliajn ĝenojn."

#: ../source/discussions/downstream-packaging.rst:181
msgid ""
"If the package is implementing any custom build *backend* actions that use "
"the Internet, for example by automatically downloading vendored dependencies "
"or fetching Git submodules, its source distribution should either include "
"all of these files or allow provisioning them externally, and the Internet "
"must not be used if the files are already present."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:187
msgid ""
"Note that this point does not apply to Python dependencies that are "
"specified in the package metadata, and are fetched during the build and "
"installation process by *frontends* (such as :ref:`build` or :ref:`pip`). "
"Downstreams use frontends that use local provisioning for Python "
"dependencies."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:192
msgid ""
"Ideally, custom build scripts should not even attempt to access the Internet "
"at all, unless explicitly requested to. If any resources are missing and "
"need to be fetched, they should ask the user for permission first. If that "
"is not feasible, the next best thing is to provide an opt-out switch to "
"disable all Internet access. This could be done e.g. by checking whether a "
"``NO_NETWORK`` environment variable is set to a non-empty value."
msgstr ""
"Ideale, propra konstrua programeto ne eĉ provu atingi Interreton sen "
"eksplicita peto. Se ia resurso mankas kaj estas elŝutenda, la programeto "
"petu por permeso unue. Se tio ne eblas, la dua plej bona opcio estas provizi "
"baskulon por malŝalti ĉian atingon al Interreto, ekzemple kontrolante, ĉu iu "
"media variablo «NO_NETWORK» estas nemalplena."

#: ../source/discussions/downstream-packaging.rst:199
msgid ""
"Since downstreams frequently also run tests and build documentation, the "
"above should ideally extend to these processes as well."
msgstr ""
"Ĉar malsupruloj ofte ankaŭ rulas testojn kaj konstruas dokumentaron, oni "
"faru la ĉi-supron ankaŭ por tiaj procedoj."

#: ../source/discussions/downstream-packaging.rst:202
msgid ""
"Please also remember that if you are fetching remote resources, you "
"absolutely must *verify their authenticity* (usually against a hash), to "
"protect against the file being substituted by a malicious party."
msgstr ""
"Ankaŭ bonvolu memori, ke se oni elŝutas forajn resursojn, oni absolute devas "
"*kontroli la aŭtentikecon* (ofte per haketaĵo), gardante kontraŭ "
"fianstataŭigo far fiulo."

#: ../source/discussions/downstream-packaging.rst:210
msgid "Support building against system dependencies"
msgstr "Ebligi konstruadon uzante sistemajn dependecojn"

#: ../source/discussions/downstream-packaging.rst:215
msgid ""
"Some Python projects have non-Python dependencies, such as libraries written "
"in C or C++. Trying to use the system versions of these dependencies in "
"upstream packaging may cause a number of problems for end users:"
msgstr ""
"Kelkaj Python-projektoj dependas de ne-Python-aj bibliotekoj en ekz. C aŭ C+"
"+. Uzado de sistemaj versioj de tiaj dependaĵoj en suprula pakado kaŭzas "
"multajn problemojn por uzantoj:"

#: ../source/discussions/downstream-packaging.rst:219
msgid ""
"The published wheels require a binary-compatible version of the used library "
"to be present on the user's system. If the library is missing or an "
"incompatible version is installed, the Python package may fail with errors "
"that are not clear to inexperienced users, or even misbehave at runtime."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:224
msgid ""
"Building from a source distribution requires a source-compatible version of "
"the dependency to be present, along with its development headers and other "
"auxiliary files that some systems package separately from the library itself."
msgstr ""
"Konstrui el fonta distribuo postulas font-kongruan version de la dependaĵo, "
"kune kun ĝiaj ĉapoj kaj aliaj helpdosieroj, kiujn kelkaj sistemoj pakas "
"aparte de la biblioteko mem."

#: ../source/discussions/downstream-packaging.rst:229
msgid ""
"Even for an experienced user, installing a compatible dependency version may "
"be very hard. For example, the used Linux distribution may not provide the "
"required version, or some other package may require an incompatible version."
msgstr ""
"Eĉo por spertulo, instali kongruan version de dependaĵo povas esti "
"malfacilege. Ekzemple, la postulata versio povus manki en la uzata Linux-"
"distribuo, aŭ alia pako povus postuli nekongruan version."

#: ../source/discussions/downstream-packaging.rst:234
msgid ""
"The linkage between the Python package and its system dependency is not "
"recorded by the packaging system. The next system update may upgrade the "
"library to a newer version that breaks binary compatibility with the Python "
"package, and requires user intervention to fix."
msgstr ""
"La pakada sistemone registras la ligon inter la Python-pako kaj la sistema "
"dependaĵo. Sistema ĝisdatigo povas ĝisdatigi la bibliotekon al nova versio, "
"rompante binaran kongruecon kun la Python-pako kaj postulante malaŭtomatan "
"riparon."

#: ../source/discussions/downstream-packaging.rst:239
msgid ""
"For these reasons, you may reasonably decide to either statically link your "
"dependencies, or to provide local copies in the installed package. You may "
"also vendor the dependency in your source distribution. Sometimes these "
"dependencies are also repackaged on PyPI, and can be declared as project "
"dependencies like any other Python package."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:245
msgid ""
"However, none of these issues apply to downstream packaging, and downstreams "
"have good reasons to prefer dynamically linking to system dependencies. In "
"particular:"
msgstr ""
"Tamen, neniu el tiuj problemoj validas por malsuprula pakado, kaj "
"malsupruloj havas bonajn kialojn por preferi dinamikan bindadon al sistemaj "
"dependaĵoj. Specife:"

#: ../source/discussions/downstream-packaging.rst:249
msgid ""
"In many cases, reliably sharing dynamic dependencies between components is a "
"large part of the *purpose* of a downstream packaging ecosystem. Helping to "
"support that makes it easier for users of those systems to access upstream "
"projects in their preferred format."
msgstr ""
"Ofte, fidinde komunigi dinamikajn dependaĵojn inter komponantoj estas granda "
"parto de la *celo* de malsupruloa pakada ekosistemo. Helpante tion, oni "
"faciligas por uzantoj de tiaj sistemoj uzi suprulajn projektojn en sia "
"preferata formo."

#: ../source/discussions/downstream-packaging.rst:253
msgid ""
"Static linking and vendoring obscures the use of external dependencies, "
"making source auditing harder."
msgstr ""
"Statika bindado kaj kopiado kaŝas la uzon de eksteraj dependaĵoj, "
"malfaciligante inspektadon de la fonto."

#: ../source/discussions/downstream-packaging.rst:256
msgid ""
"Dynamic linking makes it possible to quickly and systematically replace the "
"used libraries across an entire downstream packaging ecosystem, which can be "
"particularly important when they turn out to contain a security "
"vulnerability or critical bug."
msgstr ""
"Dinamika bindado ebligas rapide kaj sisteme anstataŭigi la uzitajn "
"bibliotekojn tra tuta malsuprula pakada ekosistemo, kio gravas pri sekureca "
"problemo aŭ severa cimo."

#: ../source/discussions/downstream-packaging.rst:260
msgid ""
"Using system dependencies makes the package benefit from downstream "
"customization that can improve the user experience on a particular platform, "
"without the downstream maintainers having to consistently patch the "
"dependencies vendored in different packages. This can include compatibility "
"improvements and security hardening."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:266
msgid ""
"Static linking and vendoring can result in multiple different versions of "
"the same library being loaded in the same process (for example, attempting "
"to import two Python packages that link to different versions of the same "
"library). This sometimes works without incident, but it can also lead to "
"anything from library loading errors, to subtle runtime bugs, to "
"catastrophic failures (like suddenly crashing and losing data)."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:273
msgid ""
"Last but not least, static linking and vendoring results in duplication, and "
"may increase the use of both disk space and memory."
msgstr ""
"Laste, sed grave, statika bindado kaj kopiado de dependaĵoj kreas "
"duplikatojn kaj povas uzi troon da diskospaco kaj memoro."

#: ../source/discussions/downstream-packaging.rst:279
msgid ""
"A good compromise between the needs of both parties is to provide a switch "
"between using vendored and system dependencies. Ideally, if the package has "
"multiple vendored dependencies, it should provide both individual switches "
"for each dependency, and a general switch to control the default for them, e."
"g. via a ``USE_SYSTEM_DEPS`` environment variable."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:285
msgid ""
"If the user requests using system dependencies, and a particular dependency "
"is either missing or incompatible, the build should fail with an explanatory "
"message rather than fall back to a vendored version. This gives the packager "
"the opportunity to notice their mistake and a chance to consciously decide "
"how to solve it."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:291
msgid ""
"It is reasonable for upstream projects to leave *testing* of building with "
"system dependencies to their downstream repackagers. The goal of these "
"guidelines is to facilitate more effective collaboration between upstream "
"projects and downstream repackagers, not to suggest upstream projects take "
"on tasks that downstream repackagers are better equipped to handle."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:300
msgid "Support downstream testing"
msgstr "Subteni testadon far malsupruloj"

#: ../source/discussions/downstream-packaging.rst:305
msgid ""
"A variety of downstream projects run some degree of testing on the packaged "
"Python projects. Depending on the particular case, this can range from "
"minimal smoke testing to comprehensive runs of the complete test suite. "
"There can be various reasons for doing this, for example:"
msgstr ""

#: ../source/discussions/downstream-packaging.rst:310
msgid "Verifying that the downstream packaging did not introduce any bugs."
msgstr "Konfirmi, ke la malsuprula pakado ne kreis cimojn."

#: ../source/discussions/downstream-packaging.rst:312
msgid ""
"Testing on additional platforms that are not covered by upstream testing."
msgstr "Testi sur pliaj platformoj ol la suprula testaro."

#: ../source/discussions/downstream-packaging.rst:314
msgid ""
"Finding subtle bugs that can only be reproduced with particular hardware, "
"system package versions, and so on."
msgstr ""
"Trovi subtilan cimon nur troveblan per specifaj aparatoj, versioj de "
"sistemaj pakoj ktp."

#: ../source/discussions/downstream-packaging.rst:317
msgid ""
"Testing the released package against newer (or older) dependency versions "
"than the ones present during upstream release testing."
msgstr ""
"Testi la eldonitan pakon por versioj de dependaĵoj pli novaj (aŭ malnovaj) "
"ol tiuj de la suprulaj testoj."

#: ../source/discussions/downstream-packaging.rst:320
msgid ""
"Testing the package in an environment closely resembling the production "
"setup. This can detect issues caused by non-trivial interactions between "
"different installed packages, including packages that are not dependencies "
"of your package, but nevertheless can cause issues."
msgstr ""
"Testi la pakon en medio tre simila al la medioj de uzantoj. Tio povas trovi "
"cimojn okazantojn pro komplikaj interagoj inter diversaj instalitaj pakoj, "
"inkluzive de tiuj pakoj, kiuj ne estas dependaĵoj de via pako sed tamen "
"povas kaŭzi problemojn."

#: ../source/discussions/downstream-packaging.rst:325
msgid ""
"Testing the released package against newer Python versions (including newer "
"point releases), or less tested Python implementations such as PyPy."
msgstr ""
"Testi la eldonitan pakon por pli novaj versioj de Python (inkluzive de "
"punktaj eldonoj) aŭ maloftaj Python-realigoj kiel PyPy."

#: ../source/discussions/downstream-packaging.rst:328
msgid ""
"Admittedly, sometimes downstream testing may yield false positives or bug "
"reports about scenarios the upstream project is not interested in "
"supporting. However, perhaps even more often it does provide early notice of "
"problems, or find non-trivial bugs that would otherwise cause issues for the "
"upstream project's users. While mistakes do happen, the majority of "
"downstream packagers are doing their best to double-check their results, and "
"help upstream maintainers triage and fix the bugs that they reported."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:339
msgid ""
"There are a number of things that upstream projects can do to help "
"downstream repackagers test their packages efficiently and effectively, "
"including some of the suggestions already mentioned above. These are "
"typically improvements that make the test suite more reliable and easier to "
"use for everyone, not just downstream packagers. Some specific suggestions "
"are:"
msgstr ""

#: ../source/discussions/downstream-packaging.rst:345
msgid ""
"Include the test files and fixtures in the source distribution, or make it "
"possible to easily download them separately."
msgstr ""
"Inkluzivu la testo-dosierojn kaj testilojn en la fontan distribuon, aŭ "
"faciligu aparte elŝuti ilin."

#: ../source/discussions/downstream-packaging.rst:348
msgid ""
"Do not write to the package directories during testing. Downstream test "
"setups sometimes run tests on top of the installed package, and "
"modifications performed during testing and temporary test files may end up "
"being part of the installed package!"
msgstr ""
"Ne skribu al la pakaj dosierujoj dum testado. Malsupruloj ofte testas sur la "
"instalita pako; modifoj dum testado kaj provizoraj testdosieroj povas "
"inkluziviĝi en la instalita pako!"

#: ../source/discussions/downstream-packaging.rst:353
msgid ""
"Make the test suite work offline. Mock network interactions, using packages "
"such as responses_ or vcrpy_. If that is not possible, make it possible to "
"easily disable the tests using Internet access, e.g. via a pytest_ marker. "
"Use pytest-socket_ to verify that your tests work offline. This often makes "
"your own test workflows faster and more reliable as well."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:359
msgid ""
"Make your tests work without a specialized setup, or perform the necessary "
"setup as part of test fixtures. Do not ever assume that you can connect to "
"system services such as databases — in an extreme case, you could crash a "
"production service!"
msgstr ""
"Igu la testojn ruleblaj sen speciala aranĝo, aŭ faru la necesan aranĝon kiel "
"parton de la testilo. Neniam supozu, ke oni povas konekti al sistemaj servoj "
"kiel ekzemple datenbankoj – oni povus eĉ fiaskigi gravan servon!"

#: ../source/discussions/downstream-packaging.rst:364
msgid ""
"If your package has optional dependencies, make their tests optional as "
"well. Either skip them if the needed packages are not installed, or add "
"markers to make deselecting easy."
msgstr ""
"Se via pako havas laŭvolajn dependecojn, igu iliajn testojn laŭvolaj ankaŭ. "
"Aŭ transsaltu ilin, se la rilataj pakoj mankas, aŭ marku ilin por faciligi "
"malelekti ilin."

#: ../source/discussions/downstream-packaging.rst:368
msgid ""
"More generally, add markers to tests with special requirements. These can "
"include e.g. significant space usage, significant memory usage, long "
"runtime, incompatibility with parallel testing."
msgstr ""
"Pli ĝenerale, marku testojn kun specialaj postuloj. Tiuj povas inkluzivi "
"ekz. signifan uzon de diskospaco aŭ memoro, longan ruladan daŭron, "
"neparaleligeblecon."

#: ../source/discussions/downstream-packaging.rst:372
msgid ""
"Do not assume that the test suite will be run with ``-Werror``. Downstreams "
"often need to disable that, as it causes false positives, e.g. due to newer "
"dependency versions. Assert for warnings using ``pytest.warns()`` rather "
"than ``pytest.raises()``!"
msgstr ""
"Ne supozu, ke oni rulos la testaron kun ``-Werror``. Malsupruloj ofte "
"bezonas malŝalti ĝin pro malĝustaj pozitivoj, ekz. pri pli novaj versioj de "
"dependecoj. Asertu avertojn per ``pytest.warns()``, ne ``pytest.raises()``!"

#: ../source/discussions/downstream-packaging.rst:377
msgid ""
"Aim to make your test suite reliable and reproducible. Avoid flaky tests. "
"Avoid depending on specific platform details, don't rely on exact results of "
"floating-point computation, or timing of operations, and so on. Fuzzing has "
"its advantages, but you want to have static test cases for completeness as "
"well."
msgstr ""
"Provu fidindigi kaj malhazardigi la testaron. Evitu malsukceman teston. "
"Evitu dependi de detaloj pri iu platformo, aŭ ekzaktajn rezultojn de "
"gliskoma operacio, aŭ la daŭro de operacioj ktp. Hazarda testado povas "
"utili, sed ankaŭ havu statikajn testojn por kompleteco."

#: ../source/discussions/downstream-packaging.rst:383
msgid ""
"Split tests by their purpose, and make it easy to skip categories that are "
"irrelevant or problematic. Since the primary purpose of downstream testing "
"is to ensure that the package itself works, downstreams are not generally "
"interested in tasks such as checking code coverage, code formatting, "
"typechecking or running benchmarks. These tests can fail as dependencies are "
"upgraded or the system is under load, without actually affecting the package "
"itself."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:390
msgid ""
"If your test suite takes significant time to run, support testing in "
"parallel. Downstreams often maintain a large number of packages, and testing "
"them all takes a lot of time. Using pytest-xdist_ can help them avoid "
"bottlenecks."
msgstr ""
"Se oni bezonas multon da tempo por ruli la testaron, subtenu paralelan "
"testadon. Malsupruloj ofte mastrumas multajn pakojn, kaj testi ĉiujn "
"postulas multegon da tempo. Uzi pytest-xdist_ povas malhelpi ŝtopiĝon."

#: ../source/discussions/downstream-packaging.rst:395
msgid ""
"Ideally, support running your test suite via ``pytest``. pytest_ has many "
"command-line arguments that are truly helpful to downstreams, such as the "
"ability to conveniently deselect tests, rerun flaky tests (via pytest-"
"rerunfailures_), add a timeout to prevent tests from hanging (via pytest-"
"timeout_) or run tests in parallel (via pytest-xdist_). Note that test "
"suites don't need to be *written* with ``pytest`` to be *executed* with "
"``pytest``: ``pytest`` is able to find and execute almost all test cases "
"that are compatible with the standard library's ``unittest`` test discovery."
msgstr ""
"Ideale, subtenu ruli testaron per ``pytest``. pytest_ havas multajn "
"komandliniajn argumentojn utilegajn al malsupruloj, ekzemple la kapablojn "
"facile malŝalti testojn, reruli malsukcesemajn testojn (per pytest-"
"rerunfailures_), aŭtomate ĉesigi testojn post iom da tempo (per pytest-"
"timeout_) aŭ ruli testojn paralele (per pytest-xdist_). Notu, ke oni povas "
"*ruli* per ``pytest`` testaron ne *verkitan* per ``pytest``: ``pytest`` "
"povas trovi kaj ruli preskaŭ ĉiajn testojn kongruajn kun la testo-trova "
"meĥanismo de ``unittest`` en la norma biblioteko."

#: ../source/discussions/downstream-packaging.rst:409
msgid "Aim for stable releases"
msgstr "Celi stabilajn eldonojn"

#: ../source/discussions/downstream-packaging.rst:414
msgid ""
"Many downstreams provide stable release channels in addition to the main "
"package streams. The goal of these channels is to provide more conservative "
"upgrades to users with higher stability needs. These users often prefer to "
"trade having the newest features available for lower risk of issues."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:419
msgid ""
"While the exact policies differ, an important criterion for including a new "
"package version in a stable release channel is for it to be available in "
"testing for some time already, and have no known major regressions. For "
"example, in Gentoo Linux a package is usually marked stable after being "
"available in testing for a month, and being tested against the versions of "
"its dependencies that are marked stable at the time."
msgstr ""

#: ../source/discussions/downstream-packaging.rst:426
msgid ""
"However, there are circumstances which demand more prompt action. For "
"example, if a security vulnerability or a major bug is found in the version "
"that is currently available in the stable channel, the downstream is facing "
"a need to resolve it. In this case, they need to consider various options, "
"such as:"
msgstr ""

#: ../source/discussions/downstream-packaging.rst:431
msgid "putting a new version in the stable channel early,"
msgstr "frue meti novan version en la stabilan kanalon,"

#: ../source/discussions/downstream-packaging.rst:433
msgid "adding patches to the version currently published,"
msgstr "fliki la aktualan eldonitan version,"

#: ../source/discussions/downstream-packaging.rst:435
msgid "or even downgrading the stable channel to an earlier release."
msgstr "aŭ eĉ malĝisdatigi la stabilan kanalon al pli malnova eldono."

#: ../source/discussions/downstream-packaging.rst:437
msgid ""
"Each of these options involves certain risks and a certain amount of work, "
"and packagers needs to weigh them to determine the course of action."
msgstr ""
"Ĉiu el tiuj opcioj havas riskojn kaj farendaĵojn. Pakanto devas pesi ilin "
"por determini tion, kio oni faru."

#: ../source/discussions/downstream-packaging.rst:443
msgid ""
"There are some things that upstreams can do to tailor their workflow to "
"stable release channels. These actions often are beneficial to the package's "
"users as well. Some specific suggestions are:"
msgstr ""
"Jen kelkaĵoj, kiujn supruloj povas fari, por ebligi stabilajn eldonkanalojn "
"(tiaĵoj ofte utilas ankaŭ por la uzantoj de la pako):"

#: ../source/discussions/downstream-packaging.rst:447
msgid ""
"Adjust the release frequency to the rate of code changes. Packages that are "
"released rarely often bring significant changes with every release, and a "
"higher risk of accidental regressions."
msgstr ""
"Adaptu la oftecon de eldonado al la rapido de kodŝanĝoj. Pako malofte "
"eldonata povas enhavi po multaj ŝanĝoj por ĉiu eldono kaj tial pliigas la "
"riskon de regresoj."

#: ../source/discussions/downstream-packaging.rst:451
msgid ""
"Avoid mixing bug fixes and new features, if possible. In particular, if "
"there are known bug fixes merged already, consider making a new release "
"before merging feature branches."
msgstr ""
"Evitu miksi cimriparojn kaj novajn funkciojn laŭeble. Aparte, se ekzistas "
"konataj cimriparoj jam enmetitaj, konsideru novan eldonon antaŭ ol aldoni "
"novajn funkciojn."

#: ../source/discussions/downstream-packaging.rst:455
msgid ""
"Consider making prereleases after major changes, to provide more testing "
"opportunities for users and downstreams willing to opt-in."
msgstr ""
"Konsideru antaŭeldonojn post gravaj ŝanĝoj, por disponigi pli da ŝancoj pri "
"testado fare de tiuj uzantoj kaj malsupruloj, kiuj volontas."

#: ../source/discussions/downstream-packaging.rst:458
msgid ""
"If your project is subject to very intense development, consider splitting "
"one or more branches that include a more conservative subset of commits, and "
"are released separately. For example, Django_ currently maintains three "
"release branches in addition to main."
msgstr ""
"Se la projekto estas rapidege evoluigata, konsideru, ĉu disfendi unu aŭ "
"plurajn branĉojn, kiuj inkluzivas pli konservativan subaron de ^anĝoj kaj "
"eldoniĝas aparte. Ekzemple, Django_ nuntempe havas tri branĉojn apud la "
"ĉefbranĉo."

#: ../source/discussions/downstream-packaging.rst:463
msgid ""
"Even if you don't wish to maintain additional branches permanently, consider "
"making additional patch releases with minimal changes to the previous "
"version, especially when a security vulnerability is discovered."
msgstr ""
"Eĉ se vi ne deziras mastrumi pliajn branĉojn daŭre, pripensu pliajn flikajn "
"eldonojn kun minimumaj ŝanĝoj al la antaŭa versio, aparte kiam malsekureco "
"troviĝas."

#: ../source/discussions/downstream-packaging.rst:467
msgid ""
"Split your changes into focused commits that address one problem at a time, "
"to make it easier to cherry-pick changes to earlier releases when necessary."
msgstr ""
"Disdividu ŝanĝon en enfokusigitajn modifojn riparantajn po unu problemo, por "
"faciligi elekti modifojn por pli fruaj eldonoj, se tio necesas."

#: ../source/discussions/index.rst:4
msgid ""
"**Discussions** are focused on providing comprehensive information about a "
"specific topic. If you're just trying to get stuff done, see :doc:`/guides/"
"index`."
msgstr ""
"**Diskutoj** celas provizi plenajn informojn pri specifa temo. Se vi nur "
"volas eklabori, legu :doc:`/guides/index`."

#: ../source/discussions/install-requires-vs-requirements.rst:5
msgid "install_requires vs requirements files"
msgstr "install_requires kontraste kun requirements.txt"

#: ../source/discussions/install-requires-vs-requirements.rst:9
msgid "install_requires"
msgstr "install_requires"

#: ../source/discussions/install-requires-vs-requirements.rst:11
msgid ""
"``install_requires`` is a :ref:`setuptools` :file:`setup.py` keyword that "
"should be used to specify what a project **minimally** needs to run "
"correctly. When the project is installed by :ref:`pip`, this is the "
"specification that is used to install its dependencies."
msgstr ""
"``install_requires`` estas ŝlosilvorto de :ref:`setuptools` en :file:`setup."
"py` kiu specifas la *minimumon* necesan por rulado de projekto. Kiam la "
"projekto estas instalata de :ref:`pip`, ĝi estas la specifo uzatan por "
"instali la dependaĵojn."

#: ../source/discussions/install-requires-vs-requirements.rst:16
msgid ""
"For example, if the project requires A and B, your ``install_requires`` "
"would be like so:"
msgstr ""
"Ekzemple, se la projekto postulas A kaj B, via ``install_requires`` estos "
"jena:"

#: ../source/discussions/install-requires-vs-requirements.rst:26
msgid ""
"Additionally, it's best practice to indicate any known lower or upper bounds."
msgstr "Cetere, bone estas specifi ajnan konatan malsupran aŭ supran limojn."

#: ../source/discussions/install-requires-vs-requirements.rst:28
msgid ""
"For example, it may be known, that your project requires at least v1 of 'A', "
"and v2 of 'B', so it would be like so:"
msgstr ""
"Ekzemple, eble vi scias, ke via projekto postulas almenaŭ v1 de «A»k aj v2 "
"de «B», jene:"

#: ../source/discussions/install-requires-vs-requirements.rst:38
msgid ""
"It may also be known that project 'A' introduced a change in its v2 that "
"breaks the compatibility of your project with v2 of 'A' and later, so it "
"makes sense to not allow v2:"
msgstr ""
"Oni eble ankaŭ scias, ke projekto «A» enkondukis ŝanĝon en sia versio 2 "
"rompantan la kongruecon de onia projekton kun versio 2 aŭ posta de «A», kaj "
"tial volas malpermesi version 2:"

#: ../source/discussions/install-requires-vs-requirements.rst:49
msgid ""
"It is not considered best practice to use ``install_requires`` to pin "
"dependencies to specific versions, or to specify sub-dependencies (i.e. "
"dependencies of your dependencies).  This is overly-restrictive, and "
"prevents the user from gaining the benefit of dependency upgrades."
msgstr ""
"Ne estas bona praktiko uzi ``install_requires`` por alpingli dependaĵojn al "
"specifaj versioj aŭ specifi subdependaĵojn (dependaĵojn de dependaĵo).  Tio "
"estas tro strikta kaj malhelpas ĝisdatigon de dependaĵoj."

#: ../source/discussions/install-requires-vs-requirements.rst:54
msgid ""
"Lastly, it's important to understand that ``install_requires`` is a listing "
"of \"Abstract\" requirements, i.e just names and version restrictions that "
"don't determine where the dependencies will be fulfilled from (i.e. from "
"what index or source).  The where (i.e. how they are to be made "
"\"Concrete\") is to be determined at install time using :ref:`pip` options. "
"[1]_"
msgstr ""
"Fine, estas grave kompreni, ke ``install_requires`` estas listo de "
"«Abstraktaj» postuloj, t.e. nuraj nomoj kaj versiaj restriktoj, kiuj ne "
"determinas la lokon, de kiu la dependecoj estos plenumitaj (t.e. de kiu "
"indekso aŭ fonto).  La kieo (t.e. kiel «Konkretigi» ilin) estas determinota "
"rultempe per la opcioj de  :ref:`pip`. [1]_"

#: ../source/discussions/install-requires-vs-requirements.rst:62
#: ../source/tutorials/installing-packages.rst:464
msgid "Requirements files"
msgstr "Dosiero requirements.txt"

#: ../source/discussions/install-requires-vs-requirements.rst:64
msgid ""
":ref:`Requirements Files <pip:Requirements Files>` described most simply, "
"are just a list of :ref:`pip:pip install` arguments placed into a file."
msgstr ""
":ref:`Postulo-Dosiero <pip:Requirements Files>`, plej simple, estas listo de "
"argumentoj al :ref:`pip:pip install` en dosiero."

#: ../source/discussions/install-requires-vs-requirements.rst:67
msgid ""
"Whereas ``install_requires`` defines the dependencies for a single project, :"
"ref:`Requirements Files <pip:Requirements Files>` are often used to define "
"the requirements for a complete Python environment."
msgstr ""
"Dum ``install_requires`` difinas dependecojn de unu projekto, :ref:`Postulo-"
"Dosiero <pip:Requirements Files>` ofte difinas la postulojn pri plena Python-"
"medio."

#: ../source/discussions/install-requires-vs-requirements.rst:71
msgid ""
"Whereas ``install_requires`` requirements are minimal, requirements files "
"often contain an exhaustive listing of pinned versions for the purpose of "
"achieving :ref:`repeatable installations <pip:Repeatability>` of a complete "
"environment."
msgstr ""
"Dum postuloj de ``install_requires`` estas minimumaj, postulo-dosiero ofte "
"enhavas plenan liston de alpinglitaj versioj por :ref:`ripeteblaj instaloj "
"<pip:Repeatability>` de plena medio."

#: ../source/discussions/install-requires-vs-requirements.rst:76
msgid ""
"Whereas ``install_requires`` requirements are \"Abstract\", i.e. not "
"associated with any particular index, requirements files often contain pip "
"options like ``--index-url`` or ``--find-links`` to make requirements "
"\"Concrete\", i.e. associated with a particular index or directory of "
"packages. [1]_"
msgstr ""
"Dum postuloj de ``install_requires`` estas «Abstraktaj» (ne asociitaj al iu "
"indekso), postulo-dosiero ofte enhavas pip-flagojn kiel ``--index-url`` aŭ "
"``--find-links`` por «Konkretigi» la postulojn (asocii ilin al iuj indeksoj "
"aŭ dosierujoj da pakoj). [1]_"

#: ../source/discussions/install-requires-vs-requirements.rst:82
msgid ""
"Whereas ``install_requires`` metadata is automatically analyzed by pip "
"during an install, requirements files are not, and only are used when a user "
"specifically installs them using ``python -m pip install -r``."
msgstr ""
"Dum metadatenoj de ``install_requires`` estas aŭtomate analizitaj far pip "
"dum instalado, postulo-dosieroj ne estas, kaj nur estas uzataj, kiam oni "
"specife instalas per ``python -m pip install -r``."

#: ../source/discussions/install-requires-vs-requirements.rst:88
msgid ""
"For more on \"Abstract\" vs \"Concrete\" requirements, see https://caremad."
"io/posts/2013/07/setup-vs-requirement/."
msgstr ""
"Por pli pri «abstraktaj» kaj «konkretaj» postuloj, legu https://caremad.io/"
"posts/2013/07/setup-vs-requirement/."

#: ../source/discussions/package-formats.rst:5
msgid "Package Formats"
msgstr "Pakaj formoj"

#: ../source/discussions/package-formats.rst:7
msgid ""
"This page discusses the file formats that are used to distribute Python "
"packages and the differences between them."
msgstr ""
"Jen paĝo pri la dosierformoj uzataj por distribui Python-pakojn kaj la "
"diferencojn inter ili."

#: ../source/discussions/package-formats.rst:10
msgid ""
"You will find files in two formats on package indices such as PyPI_: "
"**source distributions**, or **sdists** for short, and **binary "
"distributions**, commonly called **wheels**.  For example, the `PyPI page "
"for pip 23.3.1 <pip-pypi_>`_ lets you download two files, ``pip-23.3.1.tar."
"gz`` and ``pip-23.3.1-py3-none-any.whl``.  The former is an sdist, the "
"latter is a wheel. As explained below, these serve different purposes. When "
"publishing a package on PyPI (or elsewhere), you should always upload both "
"an sdist and one or more wheel."
msgstr ""
"Ekzistas dosieroj en du formoj en pakindicoj kiel PyPI_: **fontaj "
"distribuoj** (anglalingve mallonge **sdist**) kaj **duumaj distribuoj**, "
"ofte konata kiel **wheel**.  Ekzemple, la `paĝo ĉe PyPI por pip 23.3.1 <pip-"
"pypi_>`_ provizas du dosierojn, ``pip-23.3.1.tar.gz`` kaj ``pip-23.3.1-py3-"
"none-any.whl``.  La unua estas fonta distribuo; la dua estas wheel. Kiel "
"klarigite ĉi-sube, tiuj du servas malsamajn celojn. Kiam vi eldonas pakon ĉe "
"PyPI (aŭ aliloke), vi ĉiam elŝutu fontan distribuon kaj unu aŭ pluraj wheel-"
"o(j)n."

#: ../source/discussions/package-formats.rst:21
msgid "What is a source distribution?"
msgstr "Kio estas fonta distribuo?"

#: ../source/discussions/package-formats.rst:23
msgid ""
"Conceptually, a source distribution is an archive of the source code in raw "
"form. Concretely, an sdist is a ``.tar.gz`` archive containing the source "
"code plus an additional special file called ``PKG-INFO``, which holds the "
"project metadata. The presence of this file helps packaging tools to be more "
"efficient by not needing to compute the metadata themselves. The ``PKG-"
"INFO`` file follows the format specified in :ref:`core-metadata` and is not "
"intended to be written by hand [#core-metadata-format]_."
msgstr ""
"Koncepte, fonta distribuo estas arĥivo de la fontkodo en kruda formo. "
"Konkrete, fonta distribuo estas ``.tar.gz``-arĥivo enhavanta la fontkodon "
"kun plia speciala dosiero nomita ``PKG-INFO``, kiu enhavas la projektajn "
"metadatenojn. La ĉeesto de tiu dosiero helpas plirapidigi pakilojn, ĉar ne "
"necesas rekomputi la metadatenojn. La dosiero ``PKG-INFO`` sekvas la formon "
"specifitan en :ref:`core-metadata` kaj ne estas malaŭtomate verkinda [#core-"
"metadata-format]_."

#: ../source/discussions/package-formats.rst:31
msgid ""
"You can thus inspect the contents of an sdist by unpacking it using standard "
"tools to work with tar archives, such as ``tar -xvf`` on UNIX platforms "
"(like Linux and macOS), or :ref:`the command line interface of Python's "
"tarfile module <python:tarfile-commandline>` on any platform."
msgstr ""
"Tial, vi povas inspekti la enhavon de fonta distribuo maldensigante ĝin per "
"normaj enarĥivigiloj kiel ``tar -xvf`` ĉe Unikso (kiel Linux kaj macOS) aŭ :"
"ref:`la komandlinia interfaco de la Python-modulo tarfile <python:tarfile-"
"commandline>` ĉe ajna platformo."

#: ../source/discussions/package-formats.rst:36
msgid ""
"Sdists serve several purposes in the packaging ecosystem. When :ref:`pip`, "
"the standard Python package installer, cannot find a wheel to install, it "
"will fall back on downloading a source distribution, compiling a wheel from "
"it, and installing the wheel. Furthermore, sdists are often used as the "
"package source by downstream packagers (such as Linux distributions, Conda, "
"Homebrew and MacPorts on macOS, ...), who, for various reasons, may prefer "
"them over, e.g., pulling from a Git repository."
msgstr ""
"Fonta distribuo servas plurajn celojn en la pakada ekosistemo. Kiam :ref:"
"`pip`, la norma Python-pakinstalilo, ne povas trovi instaleblan wheel, ĝi "
"elŝutos fontan distribuon, konstruos wheel de ĝi, kaj instalos la wheel. "
"Krome, fonta distribuo ofte estas uzata kiel la paka fonto far subpakantoj "
"(kiel ekzemple Linux-distribuoj, Conda, Homebrew kaj MacPorts sur macOS, "
"…) , kiuj, pro diversaj kialoj, eble preferas fontan distribuon ol interalie "
"la Git-deponejon."

#: ../source/discussions/package-formats.rst:44
msgid ""
"A source distribution is recognized by its file name, which has the form :"
"samp:`{package_name}-{version}.tar.gz`, e.g., ``pip-23.3.1.tar.gz``."
msgstr ""
"Fonta distribuo estas rekonata per ĝia dosiernomo de la formo :samp:"
"`{paknomo}-{versio}.tar.gz`, ekz. ``pip-23.3.1.tar.gz``."

#: ../source/discussions/package-formats.rst:50
msgid ""
"If you want technical details on the sdist format, read the :ref:`sdist "
"specification <source-distribution-format>`."
msgstr ""
"Se vi deziras teĥnikajn detalojn pri la fontdistribua dosierformo, legu :ref:"
"`la specifon pri fontaj distribuoj <source-distribution-format>`."

#: ../source/discussions/package-formats.rst:55
msgid "What is a wheel?"
msgstr "Kio estas wheel?"

#: ../source/discussions/package-formats.rst:57
msgid ""
"Conceptually, a wheel contains exactly the files that need to be copied when "
"installing the package."
msgstr ""
"Koncepte, wheel enhavas precize tiujn dosierojn, kiuj devas esti kopiitaj "
"dum instalado de la pako."

#: ../source/discussions/package-formats.rst:60
msgid ""
"There is a big difference between sdists and wheels for packages with :term:"
"`extension modules <extension module>`, written in compiled languages like "
"C, C++ and Rust, which need to be compiled into platform-dependent machine "
"code. With these packages, wheels do not contain source code (like C source "
"files) but compiled, executable code (like ``.so`` files on Linux or DLLs on "
"Windows)."
msgstr ""
"Ekzistas granda diferenco inter fontaj distribuoj kaj wheel-oj por pakoj "
"kun :term:`etendaj moduloj <extension module>`, verkitaj en tradukendaj "
"lingvoj kiel C, C++ kaj Rust, kiuj devas esti tradukitaj al "
"platformodependaj maŝinkodoj. Je tia pako, wheel ne enhavas fontkodon (kiel "
"C-fontdosieron), sed enhavas tradukitan, ruleblan kodon (kiel la ``.so``-"
"dosierojn ĉe Linux aŭ DLL ĉe Windows)."

#: ../source/discussions/package-formats.rst:66
msgid ""
"Furthermore, while there is only one sdist per version of a project, there "
"may be many wheels. Again, this is most relevant in the context of extension "
"modules. The compiled code of an extension module is tied to an operating "
"system and processor architecture, and often also to the version of the "
"Python interpreter (unless the :ref:`Python stable ABI <cpython-stable-abi>` "
"is used)."
msgstr ""
"Krome, dum ekzistas po unu fonta distribuo por ĉiu versio de projekto, povas "
"ekzisti multaj wheel-oj. Denove, tio plej temas pri etendaĵa modulo. La "
"tradukita kodo de etendaĵa modulo estas ligita al mastruma sistemo kaj "
"procesora arĥitekturo kaj ofte ankaŭ la versio de la Python-interpretilo (se "
"oni ne uzas la :ref:`stabilan ABI de Python <cpython-stable-abi>`)."

#: ../source/discussions/package-formats.rst:72
msgid ""
"For pure-Python packages, the difference between sdists and wheels is less "
"marked. There is normally one single wheel, for all platforms and Python "
"versions.  Python is an interpreted language, which does not need ahead-of-"
"time compilation, so wheels contain ``.py`` files just like sdists."
msgstr ""
"Por pure-Python-a pako, la diferenco inter fonta distribuo kaj wheel estas "
"malpli markita. Estas ordinare unu rado, por ĉiuj platformoj kaj Python-"
"versioj.  Python estas interpretata lingvo ne bezonanta antaŭan tradukadon; "
"tial wheel enhavas nur ``.py``-dosierojn, same kiel fonta distribuo."

#: ../source/discussions/package-formats.rst:77
msgid ""
"If you are wondering about ``.pyc`` bytecode files: they are not included in "
"wheels, since they are cheap to generate, and including them would "
"unnecessarily force a huge number of packages to distribute one wheel per "
"Python version instead of one single wheel. Instead, installers like :ref:"
"`pip` generate them while installing the package."
msgstr ""
"Se vi scivolas pri bajtkodaj ``.pyc``-dosieroj, ili ne inkluziviĝas en "
"wheel, ĉar ili estas facile generebla, kaj inkluzivi ilin nenecese estigus "
"po unu wheel por ĉiu Python-versio por multaj pakoj, anstataŭ ununura pako. "
"Anstataŭe, instalilo kiel :ref:`pip` generas ilin dum instalado de la pako."

#: ../source/discussions/package-formats.rst:83
msgid ""
"With that being said, there are still important differences between sdists "
"and wheels, even for pure Python projects. Wheels are meant to contain "
"exactly what is to be installed, and nothing more. In particular, wheels "
"should never include tests and documentation, while sdists commonly do.  "
"Also, the wheel format is more complex than sdist. For example, it includes "
"a special file -- called ``RECORD`` -- that lists all files in the wheel "
"along with a hash of their content, as a safety check of the download's "
"integrity."
msgstr ""
"Tamen, ekzistas gravaj diferencoj inter fontaj distribuo kaj wheel, eĉ por "
"pure Python-a projekto. Wheel intence enhavas nur tiom, kiom estas "
"instalota, kaj neniom pli. Specife, wheel ne inkluzivu testojn kaj "
"dokumentaron, dum fonta distribuo ja ofte inkluzivas ilin. Ankaŭ, la "
"dosierformo wheel estas pli komplika ol fonta distribuo. Ekzemple, ĝi "
"inkluzivas speciala dosieron nomitan ``RECORD`` listigantan ĉiujn dosierojn "
"en wheel kune kun haketaĵoj de la enhavoj por kontroli la integrecon de la "
"elŝutaĵo."

#: ../source/discussions/package-formats.rst:91
msgid ""
"At a glance, you might wonder if wheels are really needed for \"plain and "
"basic\" pure Python projects. Keep in mind that due to the flexibility of "
"sdists, installers like pip cannot install from sdists directly -- they need "
"to first build a wheel, by invoking the :term:`build backend` that the sdist "
"specifies (the build backend may do all sorts of transformations while "
"building the wheel, such as compiling C extensions). For this reason, even "
"for a pure Python project, you should always upload *both* an sdist and a "
"wheel to PyPI or other package indices. This makes installation much faster "
"for your users, since a wheel is directly installable. By only including "
"files that must be installed, wheels also make for smaller downloads."
msgstr ""
"Vi eble scivolas, ĉu wheel estas vere necesa por «simpla kaj baza» pure "
"Python-a projekto. Pro la fleksebleco de fonta distribuo, instalilo kiel pip "
"ne povas rekte instali fontan distribuon – ĝi devas unue konstrui wheel per :"
"term:`konstrua malfasado <build backend>` specifita de la fonta distribuo "
"(la konstrua malfasado povas ĉiel transformi konstruante la wheel, kiel "
"ekzemple traduki C-etendaĵojn). Tial, eĉ por pure Python-a projekto, vi ĉiam "
"alŝutu kaj fontan distribuon kaj wheel al PyPI aŭ alia pakindekso. Tio multe "
"plirapidigas instaladon por uzantoj, ĉar wheel estas rekte instalebla. "
"Inkluzivante nur instalendajn dosierojn, wheel ankaŭ estas malpli granda por "
"elŝuti."

#: ../source/discussions/package-formats.rst:102
msgid ""
"On the technical level, a wheel is a ZIP archive (unlike sdists which are "
"TAR archives). You can inspect its contents by unpacking it as a normal ZIP "
"archive, e.g., using ``unzip`` on UNIX platforms like Linux and macOS, "
"``Expand-Archive`` in Powershell on Windows, or :ref:`the command line "
"interface of Python's zipfile module <python:zipfile-commandline>`. This can "
"be very useful to check that the wheel includes all the files you need it to."
msgstr ""
"Teĥnike, wheel estas ZIP-arĥivo (malkiel fonta distribuo, kiu estas TAR-"
"arĥivo). Oni povas inspekti la enhavojn malpakante ĝin kiel ordinaran ZIP-"
"arĥivon, ekz., per ``unzip`` sur Uniksaj platformoj kiel Linux kaj macOS, "
"``Expand-Archive`` en Powershell sur Windows aŭ :ref:`la komandlinia fasado "
"de la modulo zipfile de Python <python:zipfile-commandline>`. Tio povas esti "
"utilega por kontroli, ĉu rado inkluzivas ĉiujn dosierojn bezonatajn."

#: ../source/discussions/package-formats.rst:109
msgid ""
"Inside a wheel, you will find the package's files, plus an additional "
"directory called :samp:`{package_name}-{version}.dist-info`. This directory "
"contains various files, including a ``METADATA`` file which is the "
"equivalent of ``PKG-INFO`` in sdists, as well as ``RECORD``. This can be "
"useful to ensure no files are missing from your wheels."
msgstr ""
"Ene de wheel troviĝas la dosieroj de la pako kaj ekstra dosierujo nomita :"
"samp:`{paknomo}-{versio}.dist-info`. Tiu dosierujo enhavas diversajn "
"dosierojn, inkluzive de dosiero ``METADATA``, kiu ekvivalentas ``PKG-INFO`` "
"en fonta dstribuo, kaj ``RECORD``. Tio utilas por certigi, ke neniu dosiero "
"mankas en wheel."

#: ../source/discussions/package-formats.rst:115
msgid ""
"The file name of a wheel (ignoring some rarely used features) looks like "
"this: :samp:`{package_name}-{version}-{python_tag}-{abi_tag}-{platform_tag}."
"whl`. This naming convention identifies which platforms and Python versions "
"the wheel is compatible with. For example, the name ``pip-23.3.1-py3-none-"
"any.whl`` means that:"
msgstr ""
"La dosiernomo de wheel (ignorante kelkajn maloftajn trajtojn) aspektas "
"jene: :samp:`{nomo_de_pako}-{versio}-{python_etikedo}-{abi_etikedo}-"
"{platforma_etikedo}.whl`. Tiu nomada konvencio identigas tiujn platformojn "
"kaj Python-versiojn, kun kiuj la wheel kongruas. Ekzemple, la nomo "
"``pip-23.3.1-py3-none-any.whl`` signifas la jenon:"

#: ../source/discussions/package-formats.rst:121
msgid ""
"(``py3``) This wheel can be installed on any implementation of Python 3, "
"whether CPython, the most widely used Python implementation, or an "
"alternative implementation like PyPy_;"
msgstr ""
"(``py3``) Ĉi tiu wheel estas instalebla sur ajna realigo de Python 3, ĉu "
"CPython, la plej ĝenerale uzata realigo de Python, aŭ alternativa realigo "
"kiel PyPy_;"

#: ../source/discussions/package-formats.rst:124
msgid "(``none``) It does not depend on the Python version;"
msgstr "(``none``) Ĝi ne dependas de la versio de Python;"

#: ../source/discussions/package-formats.rst:125
msgid "(``any``) It does not depend on the platform."
msgstr "(``any``) Ĝi ne dependas de la platformo."

#: ../source/discussions/package-formats.rst:127
msgid ""
"The pattern ``py3-none-any`` is common for pure Python projects. Packages "
"with extension modules typically ship multiple wheels with more complex tags."
msgstr ""
"La patroneo ``py3-none-any`` estas ofta por puraj Python-projektoj. Pakoj "
"kun etendaĵaj moduloj ofte eldonas plurajn wheel-ojn de pli komplikaj "
"etikedoj."

#: ../source/discussions/package-formats.rst:130
msgid ""
"All technical details on the wheel format can be found in the :ref:`wheel "
"specification <binary-distribution-format>`."
msgstr ""
"Ĉiaj teĥnikaj detaloj pri la dosierformo wheel troviĝas en la :ref:`specifo "
"pri wheel <binary-distribution-format>`."

#: ../source/discussions/package-formats.rst:138
msgid "What about eggs?"
msgstr "Kio pri egg?"

#: ../source/discussions/package-formats.rst:140
msgid ""
"\"Egg\" is an old package format that has been replaced with the wheel "
"format.  It should not be used anymore. Since August 2023, PyPI `rejects egg "
"uploads <pypi-eggs-deprecation_>`_."
msgstr ""
"«Egg» estas malnova pakformo anstataŭigita per la formo wheel.  Ĝi ne plu "
"estu uzata. Ekde la Aŭgusto de 2023, PyPI `malakceptas alŝuton de egg <pypi-"
"eggs-deprecation_>`_."

#: ../source/discussions/package-formats.rst:144
msgid "Here's a breakdown of the important differences between wheel and egg."
msgstr "Jen la gravaj diferencoj inter wheel kaj egg."

#: ../source/discussions/package-formats.rst:146
msgid ""
"The egg format was introduced by :ref:`setuptools` in 2004, whereas the "
"wheel format was introduced by :pep:`427` in 2012."
msgstr ""
"La formo egg estis enkondukita de :ref:`setuptools` en 2004, dum la formo "
"wheel estis enkondukita de :pep:`427` en 2012."

#: ../source/discussions/package-formats.rst:149
msgid ""
"Wheel has an :doc:`official standard specification </specifications/binary-"
"distribution-format>`. Egg did not."
msgstr ""
"Wheel havas :doc:`oficialan norman specifon </specifications/binary-"
"distribution-format>`. Specifo ne ekzistis pri Egg."

#: ../source/discussions/package-formats.rst:152
msgid ""
"Wheel is a :term:`distribution <Distribution Package>` format, i.e a "
"packaging format. [#wheel-importable]_ Egg was both a distribution format "
"and a runtime installation format (if left zipped), and was designed to be "
"importable."
msgstr ""
"Wheel estas :term:`distribua <Distribution Package>` formo, alivorte pakada "
"formo. [#wheel-importable]_ Egg estis kaj distribua formo kaj rultempa "
"instala formo (se ĝi restis zip-densigita) kaj estis intence importebla."

#: ../source/discussions/package-formats.rst:156
msgid ""
"Wheel archives do not include ``.pyc`` files. Therefore, when the "
"distribution only contains Python files (i.e. no compiled extensions), and "
"is compatible with Python 2 and 3, it's possible for a wheel to be "
"\"universal\", similar to an :term:`sdist <Source Distribution (or "
"\"sdist\")>`."
msgstr ""
"Wheel-arĥivo ne inkluzivas ``.pyc``-dosierojn. Tial, se la distribuo nur "
"enhavas Python-dosierojn (kaj ne tradukitajn etendaĵojn), kaj kongruas kun "
"Python 2 kaj 3, ĝi povas esti «universala» simile al :term:`fonta distribuo "
"<Source Distribution (or \"sdist\")>`."

#: ../source/discussions/package-formats.rst:161
msgid ""
"Wheel uses standard :ref:`.dist-info directories <recording-installed-"
"packages>`.  Egg used ``.egg-info``."
msgstr ""
"Wheel uzas la norman :ref:`dosierujon .dist-info <recording-installed-"
"packages>`.  Egg uzis ``.egg-info``."

#: ../source/discussions/package-formats.rst:164
msgid ""
"Wheel has a :ref:`richer file naming convention <wheel-file-name-spec>`. A "
"single wheel archive can indicate its compatibility with a number of Python "
"language versions and implementations, ABIs, and system architectures."
msgstr ""
"Wheel havas :ref:`pli riĉan dosiernoman konvencion <wheel-file-name-spec>`. "
"Unu wheel-arĥivo povas indiki sian kongruecon kun pluraj versioj de la "
"lingvo Python, de realigoj de Python, de ABI-oj kaj de sistemaj arĥitekturoj."

#: ../source/discussions/package-formats.rst:168
msgid ""
"Wheel is versioned. Every wheel file contains the version of the wheel "
"specification and the implementation that packaged it."
msgstr ""
"Wheel estas versihava. Ĉiu wheel-dosiero enhavas la versiojn de la wheel-"
"specifo kaj la realigon pakinte ĝin."

#: ../source/discussions/package-formats.rst:171
msgid ""
"Wheel is internally organized by `sysconfig path type <https://docs.python."
"org/2/library/sysconfig.html#installation-paths>`_, therefore making it "
"easier to convert to other formats."
msgstr ""
"Wheel estas interne organizita laŭ `dosierlokaj tipoj de sysconfig <https://"
"docs.python.org/2/library/sysconfig.html#installation-paths>`_, "
"plifaciligante konverti ali aliaj formoj."

#: ../source/discussions/package-formats.rst:177
msgid ""
"This format is email-based. Although this would be unlikely to be chosen "
"today, backwards compatibility considerations lead to it being kept as the "
"canonical format. From the user point of view, this is mostly invisible, "
"since the metadata is specified by the user in a way understood by the build "
"backend, typically ``[project]`` in ``pyproject.toml``, and translated by "
"the build backend into ``PKG-INFO``."
msgstr ""
"Ĉi tiu formo estas retmesaĝo-baza. Kvankam ĝi estus neverŝajne elektita "
"hodiaŭ, ĝi restas kiel la kanona formo pro retrokongrueco. Por la uzanto, "
"tio estas plejparte nevidebla, ĉar la metadatenoj estas specifitaj de la "
"uzanto en maniero komprenita de la konstrua malfasado, ofte ``[project]`` en "
"``pyproject.toml`,` kaj tradukitaj de la konstrua malfasado al ``PKG-INFO``."

#: ../source/discussions/package-formats.rst:184
msgid ""
"Circumstantially, in some cases, wheels can be used as an importable runtime "
"format, although :ref:`this is not officially supported at this time <binary-"
"distribution-format-import-wheel>`."
msgstr ""
"Kelkfoje, wheel povas esti uzata kiel importabla rultempa formo, kvankam :"
"ref:`aktuale tio ne estas oficiale subtenata <binary-distribution-format-"
"import-wheel>`."

#: ../source/discussions/pip-vs-easy-install.rst:6
msgid "pip vs easy_install"
msgstr "pip kontraste kun easy_install"

#: ../source/discussions/pip-vs-easy-install.rst:9
msgid ""
":ref:`easy_install <easy_install>`, now `deprecated`_, was released in 2004 "
"as part of :ref:`setuptools`. It was notable at the time for installing :"
"term:`packages <Distribution Package>` from :term:`PyPI <Python Package "
"Index (PyPI)>` using requirement specifiers, and automatically installing "
"dependencies."
msgstr ""
":ref:`easy_install <easy_install>`, nun `evitinda <deprecated>`_, estis "
"eldonita en 2004 kiel parto de :ref:`setuptools`. Tiam, ĝi estis utila por "
"instali :term:`pakojn <Distribution Package>` el :term:`PyPI <Python Package "
"Index (PyPI)>` uzante postulo-specifilojn kaj aŭtomate instali dependaĵojn."

#: ../source/discussions/pip-vs-easy-install.rst:14
#, fuzzy
#| msgid ""
#| ":ref:`pip` came later in 2008, as alternative to :ref:`easy_install "
#| "<easy_install>`, although still largely built on top of :ref:`setuptools` "
#| "components.  It was notable at the time for *not* installing packages as :"
#| "term:`Eggs <Egg>` or from :term:`Eggs <Egg>` (but rather simply as 'flat' "
#| "packages from :term:`sdists <Source Distribution (or \"sdist\")>`), and "
#| "introducing the idea of :ref:`Requirements Files <pip:Requirements "
#| "Files>`, which gave users the power to easily replicate environments."
msgid ""
":ref:`pip` came later in 2008, as an alternative to :ref:`easy_install "
"<easy_install>`, although still largely built on top of :ref:`setuptools` "
"components.  It was notable at the time for *not* installing packages as :"
"term:`Eggs <Egg>` or from :term:`Eggs <Egg>` (but rather simply as 'flat' "
"packages from :term:`sdists <Source Distribution (or \"sdist\")>`), and "
"introducing the idea of :ref:`Requirements Files <pip:Requirements Files>`, "
"which gave users the power to easily replicate environments."
msgstr ""
":ref:`pip` venis poste en 2008, kiel alternativo al :ref:`easy_install "
"<easy_install>`, kvankam ĝi plejparte baziĝis sur la komponantoj del :ref:"
"`setuptools`.  Tiutempe, ĝi notinde *ne* instalis pakon kiel :term:`Egg "
"<Egg>` aŭ de :term:`Egg <Egg>` (sed simple kiel «platan» pakon de :term:"
"`fonta distribuo <Source Distribution (or \"sdist\")>`), kaj enkondukis :ref:"
"`Postulo-Dosierojn <pip:Requirements Files>`, ebligante uzanton facile "
"reprodukti mediojn."

#: ../source/discussions/pip-vs-easy-install.rst:22
msgid ""
"Here's a breakdown of the important differences between pip and the "
"deprecated easy_install:"
msgstr "Jen la gravaj diferencoj inter pip kaj la evitinda easy_install:"

#: ../source/discussions/pip-vs-easy-install.rst:25
msgid "**pip**"
msgstr "**pip**"

#: ../source/discussions/pip-vs-easy-install.rst:25
msgid "**easy_install**"
msgstr "**easy_install**"

#: ../source/discussions/pip-vs-easy-install.rst:27
msgid "Installs from :term:`Wheels <Wheel>`"
msgstr "Instali el :term:`Wheel <Wheel>`"

#: ../source/discussions/pip-vs-easy-install.rst:27
#: ../source/discussions/pip-vs-easy-install.rst:38
#: ../source/discussions/pip-vs-easy-install.rst:44
#: ../source/discussions/pip-vs-easy-install.rst:48
#: ../source/discussions/pip-vs-easy-install.rst:54
#: ../source/discussions/pip-vs-easy-install.rst:57
msgid "Yes"
msgstr "Jes"

#: ../source/discussions/pip-vs-easy-install.rst:27
#: ../source/discussions/pip-vs-easy-install.rst:30
#: ../source/discussions/pip-vs-easy-install.rst:32
#: ../source/discussions/pip-vs-easy-install.rst:35
#: ../source/discussions/pip-vs-easy-install.rst:38
#: ../source/discussions/pip-vs-easy-install.rst:44
#: ../source/discussions/pip-vs-easy-install.rst:48
#: ../source/discussions/pip-vs-easy-install.rst:51
#: ../source/discussions/pip-vs-easy-install.rst:54
#: ../source/discussions/pip-vs-easy-install.rst:57
msgid "No"
msgstr "Ne"

#: ../source/discussions/pip-vs-easy-install.rst:30
msgid "Uninstall Packages"
msgstr "Malinstali Pakojn"

#: ../source/discussions/pip-vs-easy-install.rst:30
msgid "Yes (``python -m pip uninstall``)"
msgstr "Jes (``python -m pip uninstall``)"

#: ../source/discussions/pip-vs-easy-install.rst:32
msgid "Dependency Overrides"
msgstr "Anstataŭigo de Dependeco"

#: ../source/discussions/pip-vs-easy-install.rst:32
msgid "Yes (:ref:`Requirements Files <pip:Requirements Files>`)"
msgstr "Jes (:ref:`Postulo-Dosieroj <pip:Requirements Files>`)"

#: ../source/discussions/pip-vs-easy-install.rst:35
msgid "List Installed Packages"
msgstr "Listigi instalitajn pakojn"

#: ../source/discussions/pip-vs-easy-install.rst:35
msgid "Yes (``python -m pip list`` and ``python -m pip freeze``)"
msgstr "Jes (``python -m pip list`` kaj ``python -m pip freeze``)"

#: ../source/discussions/pip-vs-easy-install.rst:38
msgid ":pep:`438` Support"
msgstr "Subteno de :pep:`438`"

#: ../source/discussions/pip-vs-easy-install.rst:41
msgid "Installation format"
msgstr "Instala dosierformo"

#: ../source/discussions/pip-vs-easy-install.rst:41
msgid "'Flat' packages with :file:`egg-info` metadata."
msgstr "Plata pako kun metadatenoj en :file:`egg-info`."

#: ../source/discussions/pip-vs-easy-install.rst:41
msgid "Encapsulated Egg format"
msgstr "Enkapsuligita Egg-formo"

#: ../source/discussions/pip-vs-easy-install.rst:44
msgid "sys.path modification"
msgstr "modifado de sys.path"

#: ../source/discussions/pip-vs-easy-install.rst:48
msgid "Installs from :term:`Eggs <Egg>`"
msgstr "Instalas de :term:`Egg <Egg>`"

#: ../source/discussions/pip-vs-easy-install.rst:51
msgid "`pylauncher support`_"
msgstr "`subteno de pylauncher <pylauncher support>`_"

#: ../source/discussions/pip-vs-easy-install.rst:51
msgid "Yes [1]_"
msgstr "Jes [1]_"

#: ../source/discussions/pip-vs-easy-install.rst:54
msgid ":ref:`Multi-version Installs`"
msgstr ":ref:`Plurversiaj Instaloj <Multi-version Installs>`"

#: ../source/discussions/pip-vs-easy-install.rst:57
msgid "Exclude scripts during install"
msgstr "Ekskluzivi programetojn dum instalado"

#: ../source/discussions/pip-vs-easy-install.rst:60
msgid "per project index"
msgstr "unu-projekta indekso"

#: ../source/discussions/pip-vs-easy-install.rst:60
msgid "Only in virtualenv"
msgstr "Nur en virtualenv"

#: ../source/discussions/pip-vs-easy-install.rst:60
msgid "Yes, via setup.cfg"
msgstr "Jes, per setup.cfg"

#: ../source/discussions/pip-vs-easy-install.rst:68
#, fuzzy
msgid ""
"https://setuptools.readthedocs.io/en/latest/deprecated/easy_install."
"html#natural-script-launcher"
msgstr ""
"https://setuptools.readthedocs.io/en/latest/easy_install.html#natural-script-"
"launcher"

#: ../source/discussions/setup-py-deprecated.rst:6
msgid "Is ``setup.py`` deprecated?"
msgstr "Ĉu ``setup.py`` estas evitinda?"

#: ../source/discussions/setup-py-deprecated.rst:8
msgid "No, :term:`setup.py` and :ref:`setuptools` are not deprecated."
msgstr "Ne, :term:`setup.py` kaj :ref:`setuptools` ne estas evitindaj."

#: ../source/discussions/setup-py-deprecated.rst:10
msgid ""
"Setuptools is perfectly usable as a :term:`build backend` for packaging "
"Python projects. And :file:`setup.py` is a valid configuration file for :ref:"
"`setuptools` that happens to be written in Python, instead of in *TOML* for "
"example (a similar practice is used by other tools like *nox* and its :file:"
"`noxfile.py` configuration file, or *pytest* and :file:`conftest.py`)."
msgstr ""
"Setuptools estas bone uzebla kiel :term:`konstrua malfasado <build backend>` "
"por paki Python-projektojn. Kaj :file:`setup.py` estas valida agorda dosiero "
"por :ref:`setuptools`, kiu estas verkita en Python anstataŭ *TOML* ekzemple "
"(ion similan faras aliaj iloj kiel *nox* per sia agorda dosiero :file:"
"`noxfile.py` kaj *pytest* per sia :file:`conftest.py`)."

#: ../source/discussions/setup-py-deprecated.rst:18
msgid ""
"However, ``python setup.py`` and the use of :file:`setup.py` as a command "
"line tool are deprecated."
msgstr ""
"Tamen, ``python setup.py`` kaj la uzado de :file:`setup.py` kiel komandlinia "
"ilo estas evitindaj."

#: ../source/discussions/setup-py-deprecated.rst:21
msgid ""
"This means that commands such as the following **MUST NOT** be run anymore:"
msgstr "Tio signifas, ke oni **NE UZU** la ĉi-subajn komandojn:"

#: ../source/discussions/setup-py-deprecated.rst:23
#: ../source/discussions/setup-py-deprecated.rst:35
#: ../source/guides/modernize-setup-py-project.rst:32
msgid "``python setup.py install``"
msgstr "``python setup.py install``"

#: ../source/discussions/setup-py-deprecated.rst:24
#: ../source/discussions/setup-py-deprecated.rst:37
#: ../source/guides/modernize-setup-py-project.rst:34
msgid "``python setup.py develop``"
msgstr "``python setup.py develop``"

#: ../source/discussions/setup-py-deprecated.rst:25
#: ../source/discussions/setup-py-deprecated.rst:39
#: ../source/guides/modernize-setup-py-project.rst:36
msgid "``python setup.py sdist``"
msgstr "``python setup.py sdist``"

#: ../source/discussions/setup-py-deprecated.rst:26
#: ../source/discussions/setup-py-deprecated.rst:41
#: ../source/guides/modernize-setup-py-project.rst:38
msgid "``python setup.py bdist_wheel``"
msgstr "``python setup.py bdist_wheel``"

#: ../source/discussions/setup-py-deprecated.rst:30
msgid "What commands should be used instead?"
msgstr "Kiuj komandoj mi uzu anstataŭe?"

#: ../source/discussions/setup-py-deprecated.rst:33
#: ../source/guides/modernize-setup-py-project.rst:30
msgid "Deprecated"
msgstr "Evitindaj"

#: ../source/discussions/setup-py-deprecated.rst:33
#: ../source/guides/modernize-setup-py-project.rst:30
msgid "Recommendation"
msgstr "Rekomendo"

#: ../source/discussions/setup-py-deprecated.rst:35
#: ../source/guides/modernize-setup-py-project.rst:32
msgid "``python -m pip install .``"
msgstr "``python -m pip install .``"

#: ../source/discussions/setup-py-deprecated.rst:37
#: ../source/guides/modernize-setup-py-project.rst:34
msgid "``python -m pip install --editable .``"
msgstr "``python -m pip install --editable .``"

#: ../source/discussions/setup-py-deprecated.rst:39
msgid "``python -m build`` [#needs-build]_"
msgstr "``python -m build`` [#needs-build]_"

#: ../source/discussions/setup-py-deprecated.rst:45
msgid ""
"This requires the :ref:`build` dependency. It is recommended to always build "
"and publish both the source distribution and wheel of a project, which is "
"what ``python -m build`` does. If necessary the ``--sdist`` and ``--wheel`` "
"options can be used to generate only one or the other."
msgstr ""
"Tio postulas la dependaĵon :ref:`build`. Estas rekomendate ĉiam konstrui kaj "
"eldoni kaj la fontan distribuon kaj la wheel de projekto; tion faras la "
"komando ``python -m build``. Laŭbezone oni povas uzi la flagojn ``--sdist`` "
"kaj ``--wheel`` por generi nur unu aŭ la alia."

#: ../source/discussions/setup-py-deprecated.rst:52
msgid ""
"In order to install a setuptools based project, it was common to run :file:"
"`setup.py`'s ``install`` command such as: ``python setup.py install``. "
"Nowadays, the recommended method is to use :ref:`pip` directly with a "
"command like this one: ``python -m pip install .``. Where the dot ``.`` is "
"actually a file system path, it is the path notation for the current "
"directory. Indeed, *pip* accepts a path to a project's source tree directory "
"on the local filesystem as argument to its ``install`` sub-command. So this "
"would also be a valid command: ``python -m pip install path/to/project``."
msgstr ""
"Por instali setuptools-bazan projekton, oni ofte rulis la komandon "
"``install`` de :file:`setup.py``, kiel ekzemple ``python setup.py install``. "
"Nuntempe, la rekomendata metodo estas uzi :ref:`pip` rekte per la jena "
"komando: ``python - m pip install .`` en kiu la punkto ``.`` estas "
"dosiersistema loko, la aktuala dosierujo. Fakte, *pip* akceptas la lokan "
"dosiersisteman lokon de la projekta fontarba dosierujo kiel argumenton al "
"sia subkomando ``install``. Tiel, jen alia valida komando: ``python - m pip "
"install loko/de/projekto``."

#: ../source/discussions/setup-py-deprecated.rst:65
msgid ""
"As for the installation in *develop* mode aka *editable* mode, instead of "
"``python setup.py develop`` one can use the ``--editable`` option of pip's "
"*install* sub-command: ``python -m pip install --editable .``."
msgstr ""
"Por instalo en *evoluada* (aŭ *modifebla*) reĝimo, anstataŭ ``python setup."
"py develop`` oni uzu la flagon ``--editable`` de la subkomando *install* de "
"pip: ``python -m pip install --editable .``."

#: ../source/discussions/setup-py-deprecated.rst:70
msgid ""
"One recommended, simple, and straightforward method of building :term:"
"`source distributions <Source Distribution (or \"sdist\")>` and :term:"
"`wheels <Wheel>` is to use the :ref:`build` tool with a command like "
"``python -m build`` which triggers the generation of both distribution "
"formats. If necessary the ``--sdist`` and ``--wheel`` options can be used to "
"generate only one or the other. Note that the build tool needs to be "
"installed separately."
msgstr ""
"Unu rekomendata kaj simpla metodo por konstrui :term:`fontan distribuon "
"<Source Distribution (or \"sdist\")>` kaj :term:`wheel <Wheel>` estas uzi la "
"ilon :ref:`build` kun komando kiel ``python -m build``, kiu generas ambaŭ "
"distribuajn formojn. Laŭbezone oni povas uzi la flagojn ``--sdist`` kaj ``--"
"wheel`` por nur generi unu aŭ la alian. Notu, ke la ilo ``build`` devas esti "
"aparte instalita."

#: ../source/discussions/setup-py-deprecated.rst:80
msgid ""
"The command ``python setup.py install`` was deprecated in setuptools version "
"*58.3.0*."
msgstr ""
"La komando ``python setup.py install`` evitindiĝis en setuptools versio "
"*58.3.0*."

#: ../source/discussions/setup-py-deprecated.rst:85
msgid "What about other commands?"
msgstr "Kio pri aliaj komandoj?"

#: ../source/discussions/setup-py-deprecated.rst:87
msgid "What are some replacements for the other ``python setup.py`` commands?"
msgstr "Kiuj estas anstataŭaĵoj por la aliaj komandoj ``python setup.py``?"

#: ../source/discussions/setup-py-deprecated.rst:91
msgid "``python setup.py test``"
msgstr "``python setup.py test``"

#: ../source/discussions/setup-py-deprecated.rst:93
msgid "The recommendation is to use a test runner such as pytest_."
msgstr "Ni rekomendas uzi testilon kiel pytest_."

#: ../source/discussions/setup-py-deprecated.rst:99
msgid ""
"``python setup.py check``, ``python setup.py register``, and ``python setup."
"py upload``"
msgstr ""
"``python setup.py check``, ``python setup.py register``, kaj ``python setup."
"py upload``"

#: ../source/discussions/setup-py-deprecated.rst:101
msgid "A trusted replacement is :ref:`twine`:"
msgstr "Fidinda anstataŭaĵo estas :ref:`twine`:"

#: ../source/discussions/setup-py-deprecated.rst:103
msgid "``python -m twine check --strict dist/*``"
msgstr "``python -m twine check --strict dist/*``"

#: ../source/discussions/setup-py-deprecated.rst:104
msgid "``python -m twine register dist/*.whl`` [#not-pypi]_"
msgstr "``python -m twine register dist/*.whl`` [#not-pypi]_"

#: ../source/discussions/setup-py-deprecated.rst:105
msgid "``python -m twine upload dist/*``"
msgstr "``python -m twine upload dist/*``"

#: ../source/discussions/setup-py-deprecated.rst:107
msgid ""
"Not necessary, nor supported on :term:`PyPI <Python Package Index (PyPI)>`. "
"But might be necessary on other :term:`package indexes <package index>` (for "
"example :ref:`devpi`)."
msgstr ""
"Ne necesa nek subtenata ĉe :term:`PyPI <Python Package Index (PyPI)>`. Tamen "
"ĝi eble necesas ĉe aliaj :term:`pakindeksoj <package index>` (ekzemple :ref:"
"`devpi`)."

#: ../source/discussions/setup-py-deprecated.rst:112
msgid "``python setup.py --version``"
msgstr "``python setup.py --version``"

#: ../source/discussions/setup-py-deprecated.rst:114
msgid ""
"A possible replacement solution (among others) is to rely on setuptools-scm_:"
msgstr "Ebla solvo (interalie) estas anstataŭe uzi setuptools-scm_:"

#: ../source/discussions/setup-py-deprecated.rst:116
msgid "``python -m setuptools_scm``"
msgstr "``python -m setuptools_scm``"

#: ../source/discussions/setup-py-deprecated.rst:122
msgid "Remaining commands"
msgstr "Aliaj komandoj"

#: ../source/discussions/setup-py-deprecated.rst:124
msgid ""
"This guide does not make suggestions of replacement solutions for those "
"commands:"
msgstr "Ĉi tiu gvidilo ne sugestas anstataŭaĵojn por la ĉi-subaj komandoj:"

#: ../source/discussions/setup-py-deprecated.rst:129
msgid "``alias``"
msgstr "``alias``"

#: ../source/discussions/setup-py-deprecated.rst:130
msgid "``bdist``"
msgstr "``bdist``"

#: ../source/discussions/setup-py-deprecated.rst:131
msgid "``bdist_dumb``"
msgstr "``bdist_dumb``"

#: ../source/discussions/setup-py-deprecated.rst:132
msgid "``bdist_egg``"
msgstr "``bdist_egg``"

#: ../source/discussions/setup-py-deprecated.rst:133
msgid "``bdist_rpm``"
msgstr "``bdist_rpm``"

#: ../source/discussions/setup-py-deprecated.rst:134
msgid "``build``"
msgstr "``build``"

#: ../source/discussions/setup-py-deprecated.rst:135
msgid "``build_clib``"
msgstr "``build_clib``"

#: ../source/discussions/setup-py-deprecated.rst:136
msgid "``build_ext``"
msgstr "``build_ext``"

#: ../source/discussions/setup-py-deprecated.rst:137
msgid "``build_py``"
msgstr "``build_py``"

#: ../source/discussions/setup-py-deprecated.rst:138
msgid "``build_scripts``"
msgstr "``build_scripts``"

#: ../source/discussions/setup-py-deprecated.rst:139
msgid "``clean``"
msgstr "``clean``"

#: ../source/discussions/setup-py-deprecated.rst:140
msgid "``dist_info``"
msgstr "``dist_info``"

#: ../source/discussions/setup-py-deprecated.rst:141
msgid "``easy_install``"
msgstr "``easy_install``"

#: ../source/discussions/setup-py-deprecated.rst:142
msgid "``editable_wheel``"
msgstr "``editable_wheel``"

#: ../source/discussions/setup-py-deprecated.rst:143
msgid "``egg_info``"
msgstr "``egg_info``"

#: ../source/discussions/setup-py-deprecated.rst:144
msgid "``install_data``"
msgstr "``install_data``"

#: ../source/discussions/setup-py-deprecated.rst:145
msgid "``install_egg_info``"
msgstr "``install_egg_info``"

#: ../source/discussions/setup-py-deprecated.rst:146
msgid "``install_headers``"
msgstr "``install_headers``"

#: ../source/discussions/setup-py-deprecated.rst:147
msgid "``install_lib``"
msgstr "``install_lib``"

#: ../source/discussions/setup-py-deprecated.rst:148
msgid "``install_scripts``"
msgstr "``install_scripts``"

#: ../source/discussions/setup-py-deprecated.rst:149
msgid "``rotate``"
msgstr "``rotate``"

#: ../source/discussions/setup-py-deprecated.rst:150
msgid "``saveopts``"
msgstr "``saveopts``"

#: ../source/discussions/setup-py-deprecated.rst:151
msgid "``setopt``"
msgstr "``setopt``"

#: ../source/discussions/setup-py-deprecated.rst:152
msgid "``upload_docs``"
msgstr "``upload_docs``"

#: ../source/discussions/setup-py-deprecated.rst:156
msgid "What about custom commands?"
msgstr "Kio pri propraj komandoj?"

#: ../source/discussions/setup-py-deprecated.rst:158
msgid ""
"Likewise, custom :file:`setup.py` commands are deprecated. The "
"recommendation is to migrate those custom commands to a task runner tool or "
"any other similar tool. Some examples of such tools are: chuy, make, nox or "
"tox, pydoit, pyinvoke, taskipy, and thx."
msgstr ""
"Same, propra :file:`setup.py`-komando estas evitinda. Ni rekomendas migri "
"tiajn proprajn komandojn al tasko-rulilo aŭ io simila. Jen kelkaj tiaj iloj: "
"chuy, make, nox aŭ tox, pydoit, pyinvoke, taskipy, kaj thx."

#: ../source/discussions/setup-py-deprecated.rst:166
msgid "What about custom build steps?"
msgstr "Kio pri propraj konstruaj paŝoj?"

#: ../source/discussions/setup-py-deprecated.rst:168
msgid ""
"Custom build steps that for example either overwrite existing steps such as "
"``build_py``, ``build_ext``, and ``bdist_wheel`` or add new build steps are "
"not deprecated. Those will be automatically called as expected."
msgstr ""
"Ne evitindaj estas propraj konstrupaŝoj, kiuj ekzemple aŭ anstataŭigas "
"ekzistantaj paŝojn kiel ``build_py``, ``build_ext`` kaj ``bdist_wheel``, aŭ "
"aldonas novajn konstrupaŝojn. Tiuj estos aŭtomate alvokitaj."

#: ../source/discussions/setup-py-deprecated.rst:175
#: ../source/guides/modernize-setup-py-project.rst:21
msgid "Should ``setup.py`` be deleted?"
msgstr "Ĉu forviŝi ``setup.py``?"

#: ../source/discussions/setup-py-deprecated.rst:177
msgid ""
"Although the usage of :file:`setup.py` as an executable script is "
"deprecated, its usage as a configuration file for setuptools is absolutely "
"fine. There is likely no modification needed in :file:`setup.py`."
msgstr ""
"Kvankam la uzado de :file:`setup.py` kiel ruleblaĵo estas evitinda, ĝia "
"uzado kiel agorda dosiero por setuptools estas absolute bona. Probable neniu "
"modifo necesas pri :file:`setup.py`."

#: ../source/discussions/setup-py-deprecated.rst:183
msgid "Is ``pyproject.toml`` mandatory?"
msgstr "Ĉu ``pyproject.toml`` estas deviga?"

#: ../source/discussions/setup-py-deprecated.rst:185
msgid ""
"While it is not technically necessary yet, it is **STRONGLY RECOMMENDED** "
"for a project to have a :file:`pyproject.toml` file at the root of its "
"source tree with a content like this:"
msgstr ""
"Kvankam ĝi ankoraŭ ne absolute necesas, estas **REKOMENDEGATA** havi "
"dosieron :file:`pyproject.toml` ĉe la radiko de fontarbo de projekto, kies "
"enhavo estas jena:"

#: ../source/discussions/setup-py-deprecated.rst:196
msgid ""
"The guide :ref:`modernize-setup-py-project` has more details about this."
msgstr ""
"La gvidilo :ref:`modernize-setup-py-project` havas pliajn detalojn pri tio."

#: ../source/discussions/setup-py-deprecated.rst:198
msgid ""
"The standard fallback behavior for a :term:`build frontend <Build Frontend>` "
"in the absence of a :file:`pyproject.toml` file and its ``[build-system]`` "
"table is to assume that the :term:`build backend <Build Backend>` is "
"setuptools."
msgstr ""
"La norma implicita konduto de :term:`konstrua fasado <Build Frontend>`, se "
"dosiero :file:`pyproject.toml` kaj ĝia tabelo ``[build-system]`` mankas, "
"estas supozi, ke :term:`la konstrua malfasado <Build Backend>` estas "
"setuptools."

#: ../source/discussions/setup-py-deprecated.rst:204
msgid "Why? What does it all mean?"
msgstr "Kial? Kio tio signifas?"

#: ../source/discussions/setup-py-deprecated.rst:206
msgid ""
"One way to look at it is that the scope of setuptools has now been reduced "
"to the role of a build backend."
msgstr ""
"Se mallonge diri, la rolo de setuptools reduktiĝis al nura konstrua "
"malfasado."

#: ../source/discussions/setup-py-deprecated.rst:211
#: ../source/guides/modernize-setup-py-project.rst:244
msgid "Where to read more about this?"
msgstr "Kie mi povas legi plu pri tio?"

#: ../source/discussions/setup-py-deprecated.rst:213
msgid ""
"`Why you shouldn't invoke setup.py directly <https://blog.ganssle.io/"
"articles/2021/10/setup-py-deprecated.html>`__ by Paul Ganssle"
msgstr ""
"`Kial vi ne rulu setup.py rekte (anglalingva) <https://blog.ganssle.io/"
"articles/2021/10/setup-py-deprecated.html>`__ far Paul Ganssle"

#: ../source/discussions/setup-py-deprecated.rst:215
msgid ":doc:`setuptools:deprecated/commands`"
msgstr ":doc:`setuptools:deprecated/commands`"

#: ../source/discussions/single-source-version.rst:5
msgid "Single-sourcing the Project Version"
msgstr "Unufontigi la Projektan Version"

#: ../source/discussions/single-source-version.rst:7
msgid "Complete"
msgstr "Kompleta"

#: ../source/discussions/single-source-version.rst:8
msgid "2024-10-07"
msgstr "7 Oktobro 2024"

#: ../source/discussions/single-source-version.rst:10
msgid ""
"Many Python :term:`distribution packages <Distribution Package>` publish a "
"single Python :term:`import package <Import Package>` where it is desired "
"that the runtime ``__version__`` attribute on the import package report the "
"same version specifier as :func:`importlib.metadata.version` reports for the "
"distribution package (as described in :ref:`runtime-version-access`)."
msgstr ""
"Ofte :term:`distribua Python-pako <Distribution Package>` provizas unu :term:"
"`importan pakon <Import Package>`, kaj oni deziras, ke la rultempa atributo "
"``__version__`` de la importa pako estu sama kiel :func:`importlib.metadata."
"version` por la distribua pako (laŭ :ref:`runtime-version-access`)."

#: ../source/discussions/single-source-version.rst:16
msgid ""
"It is also frequently desired that this version information be derived from "
"a version control system *tag* (such as ``v1.2.3``) rather than being "
"manually updated in the source code."
msgstr ""
"Ofte oni deziras derivi la versian informon el versikontrolsistema *etikedo* "
"(kiel ``v1.2.3``) anstataŭ malaŭtomata ĝisdatigo en la fontkodo."

#: ../source/discussions/single-source-version.rst:20
msgid ""
"Some projects may choose to simply live with the data entry duplication, and "
"rely on automated testing to ensure the different values do not diverge."
msgstr ""
"Kelkaj projektoj povas elekti simple ignori la obligon de datenoj, kaj "
"dependi de aŭtomata testado por certigi, ke la valoroj ne diverĝas."

#: ../source/discussions/single-source-version.rst:23
msgid ""
"Alternatively, a project's chosen build system may offer a way to define a "
"single source of truth for the version number."
msgstr ""
"Alternative, la konstrua sistemo de projekto povas ebligi difinadon de unu "
"fonto de vero pri la versia numero."

#: ../source/discussions/single-source-version.rst:26
msgid "In general, the options are:"
msgstr "Ĝenerale, jen la opcioj:"

#: ../source/discussions/single-source-version.rst:28
msgid ""
"If the code is in a version control system (VCS), such as Git, then the "
"version can be extracted from the VCS."
msgstr ""
"Se la kodo estas en versikontrola sistemo (VKS), kiel ekzemple Git, do la "
"versio povas esti eltirita el la VKS."

#: ../source/discussions/single-source-version.rst:30
msgid ""
"The version can be hard-coded into the :file:`pyproject.toml` file -- and "
"the build system can copy it into other locations it may be required."
msgstr ""
"La versio povas esti malaŭtomate enmetita en la dosieron :file:`pyproject."
"toml` – kaj la konstrua sistemo povas kopii ĝin al aliaj postulataj lokoj."

#: ../source/discussions/single-source-version.rst:33
msgid ""
"The version string can be hard-coded into the source code -- either in a "
"special purpose file, such as :file:`_version.txt` (which must then be "
"shipped as part of the project's source distribution package), or as an "
"attribute in a particular module, such as :file:`__init__.py`. The build "
"system can then extract it from the runtime location at build time."
msgstr ""
"La versio povas esti rekte metita en la fontkodon – aŭ en specialcelan "
"dosieron kiel :file:`_version.txt` (kiu devas esti parto de la fonta "
"distribua pako de la projekto) aŭ kiel atributo en modulo kiel :file:"
"`__init__.py`. Do la konstrua sistemo povas eltiri ĝin el la rultempa loko "
"ĉe konstrua tempo."

#: ../source/discussions/single-source-version.rst:38
msgid "Consult your build system's documentation for their recommended method."
msgstr ""
"Vidu la dokumentaron por via konstrua sistemo por la rekomendata metodo."

#: ../source/discussions/single-source-version.rst:40
msgid ""
"When the intention is that a distribution package and its associated import "
"package share the same version, it is recommended that the project include "
"an automated test case that ensures ``import_name.__version__`` and "
"``importlib.metadata.version(\"dist-name\")`` report the same value (note: "
"for many projects, ``import_name`` and ``dist-name`` will be the same name)."
msgstr ""
"Kiam oni intencas, ke distribua pako kaj ĝia asociita importa pako havu la "
"saman version, ni rekomendas, ke la projekto havu aŭtomatan testkazon "
"certigantan, ke ``nomo_de_importa_pako.__version__`` kaj ``importlib."
"metadata.version(\"nomo-de-distribua-pako\")`` estu samaj (notu: por multaj "
"projektoj, ``nomo_de_importa_pako`` kaj ``nomo-de-distribua-pako`` estos "
"samaj)."

#: ../source/discussions/single-source-version.rst:50
msgid "Build System Version Handling"
msgstr "Pritraktado de Versioj far Konstruaj Sistemoj"

#: ../source/discussions/single-source-version.rst:52
msgid ""
"The following are links to some build system's documentation for handling "
"version strings."
msgstr ""
"Jen hiperligoj al dokumentaroj de konstrusistemoj por pritraktado de versiaj "
"signoĉenoj."

#: ../source/discussions/single-source-version.rst:54
msgid "`Flit <https://flit.pypa.io/en/stable/>`_"
msgstr "`Flit <https://flit.pypa.io/en/stable/>`_"

#: ../source/discussions/single-source-version.rst:56
msgid "`Hatchling <https://hatch.pypa.io/1.9/version/>`_"
msgstr "`Hatchling <https://hatch.pypa.io/1.9/version/>`_"

#: ../source/discussions/single-source-version.rst:58
msgid ""
"`PDM <https://pdm-project.org/en/latest/reference/pep621/#__tabbed_1_2>`_"
msgstr ""
"`PDM <https://pdm-project.org/en/latest/reference/pep621/#__tabbed_1_2>`_"

#: ../source/discussions/single-source-version.rst:60
msgid ""
"`Setuptools <https://setuptools.pypa.io/en/latest/userguide/pyproject_config."
"html#dynamic-metadata>`_"
msgstr ""
"`Setuptools <https://setuptools.pypa.io/en/latest/userguide/pyproject_config."
"html#dynamic-metadata>`_"

#: ../source/discussions/single-source-version.rst:62
msgid "`setuptools_scm <https://setuptools-scm.readthedocs.io/en/latest/>`_"
msgstr "`setuptools_scm <https://setuptools-scm.readthedocs.io/en/latest/>`_"

#: ../source/discussions/src-layout-vs-flat-layout.rst:5
msgid "src layout vs flat layout"
msgstr "src-aranĝo kontraste al plata aranĝo"

#: ../source/discussions/src-layout-vs-flat-layout.rst:7
msgid ""
"The \"flat layout\" refers to organising a project's files in a folder or "
"repository, such that the various configuration files and :term:`import "
"packages <Import Package>` are all in the top-level directory."
msgstr ""
"La «plata aranĝo» signifas organizi la projektajn dosierojn en dosierujo aŭ "
"deponejo tiel, ke la diversaj agordaoj dosieroj kaj :term:`importaj pakoj "
"<Import Package>` estas ĉiuj en la supranivela dosierujo."

#: ../source/discussions/src-layout-vs-flat-layout.rst:25
msgid ""
"The \"src layout\" deviates from the flat layout by moving the code that is "
"intended to be importable (i.e. ``import awesome_package``, also known as :"
"term:`import packages <Import Package>`) into a subdirectory. This "
"subdirectory is typically named ``src/``, hence \"src layout\"."
msgstr ""
"La «src-aranĝo» diferencas de la plata aranĝo movanta la kodon importeblan "
"(t.e. ``import mia_pako``, ankaŭ konatan kiel :term:`importajn pakojn "
"<Import Package>`) en subdosierujon. Tiu subdosierujo estas ofte nomita "
"``src/``; tial la nomo «src-aranĝo»."

#: ../source/discussions/src-layout-vs-flat-layout.rst:45
msgid ""
"Here's a breakdown of the important behaviour differences between the src "
"layout and the flat layout:"
msgstr ""
"Jen resumo de la gravaj kondutaj diferencoj inter src-aranĝo kaj plata "
"aranĝo:"

#: ../source/discussions/src-layout-vs-flat-layout.rst:48
msgid ""
"The src layout requires installation of the project to be able to run its "
"code, and the flat layout does not."
msgstr ""
"La src-aranĝo postulas instaladon de la projekto por ruli ĝian kodon, dum la "
"plata aranĝo ne postulas tion."

#: ../source/discussions/src-layout-vs-flat-layout.rst:51
msgid ""
"This means that the src layout involves an additional step in the "
"development workflow of a project (typically, an :doc:`editable installation "
"<setuptools:userguide/development_mode>` is used for development and a "
"regular installation is used for testing)."
msgstr ""
"Tio signifas, ke la src-aranĝo necesigas ekstran paŝon en la evoluada "
"laborfluo de projekto (ofte :doc:`modifebla instalo <setuptools:userguide/"
"development_mode>` uziĝas por evoluigado, kaj ordinara instalo uziĝas por "
"testado)."

#: ../source/discussions/src-layout-vs-flat-layout.rst:56
msgid ""
"The src layout helps prevent accidental usage of the in-development copy of "
"the code."
msgstr ""
"La src-aranĝo malhelpas neintencitan uzadon de la evoluigata kopio de la "
"kodo."

#: ../source/discussions/src-layout-vs-flat-layout.rst:59
msgid ""
"This is relevant since the Python interpreter includes the current working "
"directory as the first item on the import path. This means that if an import "
"package exists in the current working directory with the same name as an "
"installed import package, the variant from the current working directory "
"will be used. This can lead to subtle  misconfiguration of the project's "
"packaging tooling, which could result in files not being included in a "
"distribution."
msgstr ""
"Tio gravas, ĉar la Python-interpretilo inkluzivas la aktualan dosierujon "
"kiel la unuan eron de la importa dosierlokaro. Tial, se en la aktuala "
"dosierujo ekzistas importa pako, kies nomo estas sama kiel instalita importa "
"pako, do la varianto en la aktuala dosierujo estos uzata. Tio povas kaŭzi "
"subtilajn misaĵojn de la pakado, rezultigante dosierojn mankantajn en la "
"distribuo."

#: ../source/discussions/src-layout-vs-flat-layout.rst:66
msgid ""
"The src layout helps avoid this by keeping import packages in a directory "
"separate from the root directory of the project, ensuring that the installed "
"copy is used."
msgstr ""
"La src-aranĝo avertas tion, tenante la importajn pakojn en dosierujo aparta "
"de la radika dosierujo de la projekto, certigante, ke la instalita kopio "
"uziĝos."

#: ../source/discussions/src-layout-vs-flat-layout.rst:70
msgid ""
"The src layout helps enforce that an :doc:`editable installation <setuptools:"
"userguide/development_mode>` is only able to import files that were meant to "
"be importable."
msgstr ""
"La src-aranĝo devigas, ke :doc:`redaktebla instalo < setuptools:userguide/"
"development_mode>` nur kapablas importi tiujn dosierojn, kiuj estas intence "
"importeblaj."

#: ../source/discussions/src-layout-vs-flat-layout.rst:74
msgid ""
"This is especially relevant when the editable installation is implemented "
"using a `path configuration file <https://docs.python.org/3/library/site."
"html#index-2>`_ that adds the directory to the import path."
msgstr ""
"Tio estas speciale utila, kiam la modifebla instalo estas realigita per "
"`dosierloko-agorda dosiero <https://docs.python.org/3/library/site."
"html#index-2>`_ aldonanta la dosierujon al la importa dosierlokaro."

#: ../source/discussions/src-layout-vs-flat-layout.rst:78
msgid ""
"The flat layout would add the other project files (eg: ``README.md``, ``tox."
"ini``) and packaging/tooling configuration files (eg: ``setup.py``, "
"``noxfile.py``) on the import path. This would make certain imports work in "
"editable installations but not regular installations."
msgstr ""
"La plata aranĝo aldonus aliajn projektaojn dosierojn (ekzemple ``README."
"md``, ``tox.ini``) kaj pakadajn/ilajn agordajn dosierojn (ekzemple ``setup."
"py``, ``noxfile.py``) al la importa dosierlokaro. Tio kaŭzus, ke kelkaj "
"importoj funkcius en modifebla instalo sed ne en ordinara instalo."

#: ../source/discussions/src-layout-vs-flat-layout.rst:86
msgid "Running a command-line interface from source with src-layout"
msgstr "Ruli komandlinian fasadon el fonto per src-aranĝo"

#: ../source/discussions/src-layout-vs-flat-layout.rst:88
msgid ""
"Due to the firstly mentioned specialty of the src layout, a command-line "
"interface can not be run directly from the :term:`source tree <Project "
"Source Tree>`, but requires installation of the package in :doc:`Development "
"Mode <setuptools:userguide/development_mode>` for testing purposes. Since "
"this can be unpractical in some situations, a workaround could be to prepend "
"the package folder to  Python's :py:data:`sys.path` when called via its :"
"file:`__main__.py` file:"
msgstr ""
"Pro la unue menciita kvalito de la src-aranĝo, oni ne povas ruli "
"komandlinian fasadon rekte de la :term:`fontarbo <Project Source Tree>`, sed "
"devas instali la pakon en :doc:`Evoluada Reĝimo <setuptools:userguide/"
"development_mode>` por testado. Se tio malutilias, oni povas antaŭmeti la "
"pakan dosierujon al :py:data:`sys.path` de Python, kiam oni rulas la "
"dosieron :file:`__main__.py`:"

#: ../source/discussions/versioning.rst:6
#: ../source/specifications/simple-repository-api.rst:349
msgid "Versioning"
msgstr "Versiado"

#: ../source/discussions/versioning.rst:8
msgid "This discussion covers all aspects of versioning Python packages."
msgstr "Jen diskuto pri ĉiuj flankoj de la versiado de Python-pakoj."

#: ../source/discussions/versioning.rst:12
msgid "Valid version numbers"
msgstr "Validaj versiaj numeroj"

#: ../source/discussions/versioning.rst:14
msgid ""
"Different Python projects may use different versioning schemes based on the "
"needs of that particular project, but in order to be compatible with tools "
"like :ref:`pip`, all of them are required to comply with a flexible format "
"for version identifiers, for which the authoritative reference is the :ref:"
"`specification of version specifiers <version-specifiers>`. Here are some "
"examples of version numbers [#version-examples]_:"
msgstr ""
"Diversaj Python-projektoj uzas malsamajn versiajn skemojn pro siaj malsamaj "
"bezonoj. Tamen, por kongrui kun :ref:`pip` kaj aliaj iloj, ĉia projekto "
"devas observi flekseblan formon por versiaj identigiloj, pri kio la "
"aŭtoritata referenco estas la :ref:`specifo pri versio-specifiloj <version-"
"specifiers>`. Jen kelkaj ekzemploj de versiaj numeroj [#version-examples]_:"

#: ../source/discussions/versioning.rst:21
msgid "A simple version (final release): ``1.2.0``"
msgstr "Simpla versio (fina eldono): ``1.2.0``"

#: ../source/discussions/versioning.rst:22
msgid "A development release: ``1.2.0.dev1``"
msgstr "Evoluanta eldono: ``1.2.0.dev1``"

#: ../source/discussions/versioning.rst:23
msgid "An alpha release: ``1.2.0a1``"
msgstr "Alfa-eldono: ``1.2.0a1``"

#: ../source/discussions/versioning.rst:24
msgid "A beta release: ``1.2.0b1``"
msgstr "Beta-eldono: ``1.2.0b1``"

#: ../source/discussions/versioning.rst:25
msgid "A release candidate: ``1.2.0rc1``"
msgstr "Eldonkandidato: ``1.2.0rc1``"

#: ../source/discussions/versioning.rst:26
msgid "A post-release: ``1.2.0.post1``"
msgstr "Posteldono: ``1.2.0.post1``"

#: ../source/discussions/versioning.rst:27
msgid ""
"A post-release of an alpha release (possible, but discouraged): ``1.2.0a1."
"post1``"
msgstr ""
"Posteldono de alfa-eldono (ebla, sed malrekomendata): ``1.2.0a1.post1``"

#: ../source/discussions/versioning.rst:28
msgid "A simple version with only two components: ``23.12``"
msgstr "Simpla versio kun nur du komponantoj: ``23.12``"

#: ../source/discussions/versioning.rst:29
msgid "A simple version with just one component: ``42``"
msgstr "Simpla versio kun nur unu komponanto: ``42``"

#: ../source/discussions/versioning.rst:30
msgid "A version with an epoch: ``1!1.0``"
msgstr "Versio kun epoko: ``1!1.0``"

#: ../source/discussions/versioning.rst:32
msgid ""
"Projects can use a cycle of pre-releases to support testing by their users "
"before a final release. In order, the steps are: alpha releases, beta "
"releases, release candidates, final release. Pip and other modern Python "
"package installers ignore pre-releases by default when deciding which "
"versions of dependencies to install, unless explicitly requested (e.g., with "
"``pip install pkg==1.1a3`` or ``pip install --pre pkg``)."
msgstr ""
"Projektoj povas uzi ciklon de antaŭeldonoj por testado far uzantoj antaŭ "
"fina eldono. Laŭorde, jen la ŝtupoj: alfa-eldonoj, beta-eldonoj, "
"eldonkandidatoj, fina eldono. Pip kaj aliaj modernaj Python-pakistaliloj "
"apriore ignoras antaŭeldonojn decidadante la instalotan version de "
"dependaĵo, escepte de eksplicita postulo (ekzemple per ``pip install "
"pako==1.1a3`` or ``pip install --pre pako``)."

#: ../source/discussions/versioning.rst:39
msgid ""
"The purpose of development releases is to support releases made early during "
"a development cycle, for example, a nightly build, or a build from the "
"latest source in a Linux distribution."
msgstr ""
"Evoluada eldono celas subteni eldonadon dum frua parto de evoluada ciklo — "
"ekzemple, ĉiutaga konstruo aŭ konstruo el la plej nova fonto en Linux-"
"distribuo."

#: ../source/discussions/versioning.rst:43
msgid ""
"Post-releases are used to address minor errors in a final release that do "
"not affect the distributed software, such as correcting an error in the "
"release notes. They should not be used for bug fixes; these should be done "
"with a new final release (e.g., incrementing the third component when using "
"semantic versioning)."
msgstr ""
"Posteldono estas por korekti negravajn erarojn en fina eldono, kiuj ne "
"efikas sur la distribuita programo, kiel ekzemple korektado de eraro en la "
"eldonaj notoj. Oni ne uzu posteldonon por ripari cimon; por tio oni uzu "
"novan finan eldonon (ekz., alkremante la trian komponanton por semantika "
"versio)."

#: ../source/discussions/versioning.rst:49
msgid ""
"Finally, epochs, a rarely used feature, serve to fix the sorting order when "
"changing the versioning scheme. For example, if a project is using calendar "
"versioning, with versions like 23.12, and switches to semantic versioning, "
"with versions like 1.0, the comparison between 1.0 and 23.12 will go the "
"wrong way. To correct this, the new version numbers should have an explicit "
"epoch, as in \"1!1.0\", in order to be treated as more recent than the old "
"version numbers."
msgstr ""
"Fine, epoko, kiuj estas malofte uzata, helpas ripari la ordon dum ŝanĝado de "
"la versia skemo. Ekzemple, se projekto uzas kalendaran versiadon, kun "
"versioj kiel 23.12, kaj ŝanĝas al semantika versiado, kun versioj kiel 1.0, "
"la komparo inter 1.0 kaj 23.12 estus malĝusta. Por korekti tion, la novaj "
"versiaj numeroj havu eksplicitan epokon, kiel «1!1.0», por esti pli novaj ol "
"la malnovaj versiaj numeroj."

#: ../source/discussions/versioning.rst:59
msgid "Semantic versioning vs. calendar versioning"
msgstr "Semantika versiado kaj kalendara versiado"

#: ../source/discussions/versioning.rst:61
msgid ""
"A versioning scheme is a formalized way to interpret the segments of a "
"version number, and to decide which should be the next version number for a "
"new release of a package. Two versioning schemes are commonly used for "
"Python packages, semantic versioning and calendar versioning."
msgstr ""
"Versia skemo estas formala maniero interpreti la segmentojn de versia numero "
"kaj decidi la sekvan versian numeron por nova eldono de pako. Ekzistas du "
"versiaj skemoj ofte uzataj por Python-pakoj: semantika versiado kaj "
"kalendara versiado."

#: ../source/discussions/versioning.rst:68
msgid ""
"The decision which version number to choose is up to a project's maintainer. "
"This effectively means that version bumps reflect the maintainer's view. "
"That view may differ from the end-users' perception of what said formalized "
"versioning scheme promises them."
msgstr ""
"La projekta mastrumanto decidas la uzotan versian numeron. Tio signifas, ke "
"versia alkremento reflektas la opinion de la mastrumanto. Tiu opinio povas "
"devii de la percepto de la uzantoj pri la promesoj de la formaligita versia "
"skemo."

#: ../source/discussions/versioning.rst:74
#, fuzzy
#| msgid ""
#| "There are known exceptions for selecting the next version number. The "
#| "maintainers may consciously choose to break the assumption that the last "
#| "version segment only contains backwards-compatible changes. One such case "
#| "is when security vulnerability needs to be addressed. Security releases "
#| "often come in patch versions but contain breaking changes inevitably."
msgid ""
"There are known exceptions for selecting the next version number. The "
"maintainers may consciously choose to break the assumption that the last "
"version segment only contains backwards-compatible changes. One such case is "
"when a security vulnerability needs to be addressed. Security releases often "
"come in patch versions but contain breaking changes inevitably."
msgstr ""
"Ekzistas konataj esceptoj por elektado de la sekva versia numero. La "
"mastrumanto povas konscie rompi la supozon, ke la lasta versio-segmento nur "
"enhavas retrokongruajn ŝanĝojn. Unu kazo estas por ripari sekurecan "
"vundeblaĵon. Eldono pro sekureco ofte nur modifas la lastan versio-"
"segmenton, sed havas neretrokongruajn ŝanĝojn."

#: ../source/discussions/versioning.rst:84
#: ../source/specifications/version-specifiers.rst:726
msgid "Semantic versioning"
msgstr "Semantika versiado"

#: ../source/discussions/versioning.rst:86
msgid ""
"The idea of *semantic versioning* (or SemVer) is to use 3-part version "
"numbers, *major.minor.patch*, where the project author increments:"
msgstr ""
"La ideo de *semantika versiado* (aŭ SemVer) estas uzi tripartajn versiajn "
"numerojn, *maĵora.minora.flika*, je kiu la projekta aŭtoro alkrementas:"

#: ../source/discussions/versioning.rst:89
msgid "*major* when they make incompatible API changes,"
msgstr "*maĵora* kiam nekongruaj API-ŝanĝoj okazas,"

#: ../source/discussions/versioning.rst:90
msgid ""
"*minor* when they add functionality in a backwards-compatible manner, and"
msgstr "*minora* kiam funkcioj aldoniĝas retrokongrue, kaj"

#: ../source/discussions/versioning.rst:91
msgid "*patch*, when they make backwards-compatible bug fixes."
msgstr "*flika*, kiam okazas retrokongruaj cimriparoj."

#: ../source/discussions/versioning.rst:93
msgid ""
"A majority of Python projects use a scheme that resembles semantic "
"versioning. However, most projects, especially larger ones, do not strictly "
"adhere to semantic versioning, since many changes are technically breaking "
"changes but affect only a small fraction of users. Such projects tend to "
"increment the major number when the incompatibility is high, or to signal a "
"shift in the project, rather than for any tiny incompatibility [#semver-"
"strictness]_. Conversely, a bump of the major version number is sometimes "
"used to signal significant but backwards-compatible new features."
msgstr ""
"Plimulto de Python-projektoj uzas skemon similan al semantika versiado. "
"Tamen, multaj projektoj, speciale la grandegaj, ne strikte observas "
"semantikan versiadon, ĉar multaj ŝanĝoj havas teĥnike rompantajn ŝanĝojn sed "
"efikas sur nur malgrandan frakcion da uzantoj. Tiaj projektoj ofte "
"alkrementas la maĵoran numeron tiam, kiam la nekongrueco estas multa aŭ por "
"signali ŝanĝon pri la projekto, ne por ĉia malgranda nekongrueco [#semver-"
"strictness]_. Inverse, alkremento de la maĵora versia numero kelkfoje "
"signalas signifajn sed retrokongruajn novajn funkciojn."

#: ../source/discussions/versioning.rst:103
msgid ""
"For those projects that do use strict semantic versioning, this approach "
"allows users to make use of :ref:`compatible release version specifiers "
"<version-specifiers-compatible-release>`, with the ``~=`` operator.  For "
"example, ``name ~= X.Y`` is roughly equivalent to ``name >= X.Y, == X.*``, i."
"e., it requires at least release X.Y, and allows any later release with "
"greater Y as long as X is the same. Likewise, ``name ~= X.Y.Z`` is roughly "
"equivalent to ``name >= X.Y.Z, == X.Y.*``, i.e., it requires at least X.Y.Z "
"and allows a later release with same X and Y but higher Z."
msgstr ""
"Por tiuj projektoj, kiuj uzas striktan semantikan versiadon, tiu maniero "
"ebligas uzi :ref:`versio-specifilon de kongrua eldono <version-specifiers-"
"compatible-release>`, per la operatoro ``~=``.  Ekzemple, ``nomo ~= X.Y`` "
"proksimume ekvivalentas ``nomo >= X.Y, == X.*``, t.e., ĝi postulas minimume "
"la eldonon X.Y, kaj permesas ajnan pli novan eldonon kun pli granda Y kaj "
"sama X. Simile, ``nomo ~= X.Y.Z`` proksimume ekvivalentas ``nomo >= X.Y.Z, "
"== X.Y.*``, t.e., ĝi postulas minimume X.Y.Z kaj permesas pli novan eldonon "
"de samaj X kaj Y sed pli granda Z."

#: ../source/discussions/versioning.rst:112
msgid ""
"Python projects adopting semantic versioning should abide by clauses 1-8 of "
"the `Semantic Versioning 2.0.0 specification <semver_>`_."
msgstr ""
"Python-projektoj uzantaj semantikan versiadon observu la regulojn 1–8 de la "
"`specifo Semantika Versiado 2.0.0 <semver_>`_."

#: ../source/discussions/versioning.rst:115
msgid ""
"The popular :doc:`Sphinx <sphinx:index>` documentation generator is an "
"example project that uses strict semantic versioning (:doc:`Sphinx "
"versioning policy <sphinx:internals/release-process>`). The famous :doc:"
"`NumPy <numpy:index>` scientific computing package explicitly uses \"loose\" "
"semantic versioning, where releases incrementing the minor version can "
"contain backwards-incompatible API changes (:doc:`NumPy versioning policy "
"<numpy:dev/depending_on_numpy>`)."
msgstr ""
"The populara dokumentargenerilo :doc:`Sphinx <sphinx:index>` estas ekzemplo "
"de projekto uzanta striktan semantikan versiadon (vidu la :doc:`regulojn pri "
"versiado de Sphinx <sphinx:internals/release-process>`). La fama "
"scienckomputa pako :doc:`NumPy <numpy:index>` eksplicite uzas «malstriktan» "
"semantikan versiadon, je kiu eldono alkrementa la minoran version povas "
"enhavi neretrokongruajn API-ŝanĝojn (vidu la :doc:`regulojn pri versiado de "
"NumPy <numpy:dev/depending_on_numpy>`)."

#: ../source/discussions/versioning.rst:124
msgid "Calendar versioning"
msgstr "Kalendara versiado"

#: ../source/discussions/versioning.rst:126
#, fuzzy
#| msgid ""
#| "Semantic versioning is not a suitable choice for all projects, such as "
#| "those with a regular time based release cadence and a deprecation process "
#| "that provides warnings for a number of releases prior to removal of a "
#| "feature."
msgid ""
"Semantic versioning is not a suitable choice for all projects, such as those "
"with a regular time-based release cadence and a deprecation process that "
"provides warnings for a number of releases prior to removal of a feature."
msgstr ""
"Semantika versiado ne taŭgas por ĉiaj projektoj, ekzemple por tiaj "
"projektoj, kiaj eldona plano estas regule tempobaza kun avertoj pri forigota "
"funkcio dum kelkaj eldonoj antaŭ la forigado."

#: ../source/discussions/versioning.rst:130
msgid ""
"A key advantage of date-based versioning, or `calendar versioning "
"<calver_>`_ (CalVer), is that it is straightforward to tell how old the base "
"feature set of a particular release is given just the version number."
msgstr ""
"La ĉefavantaĝo de datobaza versiado aŭ `kalendara versiado <calver_>`_ "
"(CalVer) estas, ke estas facile kompreni kiel malnova la baza funkciaro de "
"iu eldono estas nur per la versia numero."

#: ../source/discussions/versioning.rst:134
msgid ""
"Calendar version numbers typically take the form *year.month* (for example, "
"23.12 for December 2023)."
msgstr ""
"Kalendara versia numero ordinare estas de la formo *jaro.monato* (ekzemple, "
"23.12 por Decembro 2023)."

#: ../source/discussions/versioning.rst:137
msgid ""
":doc:`Pip <pip:index>`, the standard Python package installer, uses calendar "
"versioning."
msgstr ""
":doc:`Pip <pip:index>`, la norma Python-pakinstalilo, uzas kalendaran "
"versiadon."

#: ../source/discussions/versioning.rst:142
msgid "Other schemes"
msgstr "Aliaj skemoj"

#: ../source/discussions/versioning.rst:144
msgid ""
"Serial versioning refers to the simplest possible versioning scheme, which "
"consists of a single number incremented every release. While serial "
"versioning is very easy to manage as a developer, it is the hardest to track "
"as an end user, as serial version numbers convey little or no information "
"regarding API backwards compatibility."
msgstr ""
"Seria versiado estas la plej simpla versia skemo konsistanta el unu enjreo "
"alkrementata po unu fojo por ĉiu eldono. Kvankam seria versiado estas tre "
"facile administrebla por la aŭtoro, ĝi estas malfacila por la uzanto, ĉar "
"seria versia numero enhavas neniom aŭ apenaŭon da informo pri retrokongrueco "
"de la API."

#: ../source/discussions/versioning.rst:150
#, fuzzy
#| msgid ""
#| "Combinations of the above schemes are possible. For example, a project "
#| "may combine date based versioning with serial versioning to create a "
#| "*year.serial* numbering scheme that readily conveys the approximate age "
#| "of a release, but doesn't otherwise commit to a particular release "
#| "cadence within the year."
msgid ""
"Combinations of the above schemes are possible. For example, a project may "
"combine date-based versioning with serial versioning to create a *year."
"serial* numbering scheme that readily conveys the approximate age of a "
"release, but doesn't otherwise commit to a particular release cadence within "
"the year."
msgstr ""
"Eblas kombinaĵoj de ĉi-supraj skemoj. Ekzemple, projekto povas kombini dato-"
"bazitajn versiojn kun seriajn versiojn, kreante skemon *jaro.serio*, kiu "
"klarigas la proksimuman aĝon de la eldono, sed ne postulas eldonan planon en "
"la jaro."

#: ../source/discussions/versioning.rst:157
#: ../source/specifications/version-specifiers.rst:114
msgid "Local version identifiers"
msgstr "Loka versi-identigilo"

#: ../source/discussions/versioning.rst:159
msgid ""
"Public version identifiers are designed to support distribution via :term:"
"`PyPI <Python Package Index (PyPI)>`. Python packaging tools also support "
"the notion of a :ref:`local version identifier <local-version-identifiers>`, "
"which can be used to identify local development builds not intended for "
"publication, or modified variants of a release maintained by a redistributor."
msgstr ""
"Publika versio-identigilo celas subteni distribuadon per :term:`PyPI <Python "
"Package Index (PyPI)>`. Python-pakiloj ankaŭ subtenas :ref:`lokan versio-"
"identigilon <local-version-identifiers>`, kiu identigas lokan evoluadan "
"konstruon ne por publika eldonado, aŭ modifitan varianton de eldono far "
"redistribuanto."

#: ../source/discussions/versioning.rst:165
msgid ""
"A local version identifier takes the form of a public version identifier, "
"followed by \"+\" and a local version label. For example, a package with "
"Fedora-specific patches applied could have the version \"1.2.1+fedora.4\". "
"Another example is versions computed by setuptools-scm_, a setuptools plugin "
"that reads the version from Git data. In a Git repository with some commits "
"since the latest release, setuptools-scm generates a version like \"0.5."
"dev1+gd00980f\", or if the repository has untracked changes, like \"0.5."
"dev1+gd00980f.d20231217\"."
msgstr ""
"Loka versio-identigilo konsistas el publika versio-identigilo sekvita de «+» "
"kaj loka versia etikedo. Ekzemple, pako kun Fedora-specifaj flikoj havus la "
"version «1.2.1+fedora.4». Alia ekzemplo estas versio komputita de setuptools-"
"scm_, kiu estas kromprogramo por setuptools leganta la version el Git-"
"datenoj. En Git-deponejo kun kelko da ŝanĝoj post la plej nova eldono, "
"setuptools-scm generas version kiel «0.5.dev1+gd00980f» aŭ, se la deponejo "
"havas nespuratajn ŝanĝojn, kiel «0.5.dev1+gd00980f.d20231217»."

#: ../source/discussions/versioning.rst:177
msgid "Accessing version information at runtime"
msgstr "Akiri versiajn informojn dum rultempo"

#: ../source/discussions/versioning.rst:179
msgid ""
"Version information for all :term:`distribution packages <Distribution "
"Package>` that are locally available in the current environment can be "
"obtained at runtime using the standard library's :func:`importlib.metadata."
"version` function::"
msgstr ""
"Versiaj informoj por ĉiuj :term:`distribuaj pakoj <Distribution Package>` "
"loke haveblaj en la aktuala medio estas akireblaj per la funkcio :func:"
"`importlib.metadata.version` en la norma biblioteko::"

#: ../source/discussions/versioning.rst:186
msgid ""
"Many projects also choose to version their top level :term:`import packages "
"<Import Package>` by providing a package level ``__version__`` attribute::"
msgstr ""
"Multaj projektoj ankaŭ provizas version al la supranivela :term:`importa "
"pako <Import Package>` per paknivela atributo ``__version__``::"

#: ../source/discussions/versioning.rst:194
msgid ""
"This technique can be particularly valuable for CLI applications which want "
"to ensure that version query invocations (such as ``pip -V``) run as quickly "
"as possible."
msgstr ""
"Tiu teĥniko estas speciale utila por komandlinia programo, kies versio-peto "
"(kiel ekzemple ``pip -V``) devas ruliĝi rapide."

#: ../source/discussions/versioning.rst:198
msgid ""
"Package publishers wishing to ensure their reported distribution package and "
"import package versions are consistent with each other can review the :ref:"
"`single-source-version` discussion for potential approaches to doing so."
msgstr ""
"Eldonanto de pako, kiu volas certigi, ke la versioj de la distribua pako kaj "
"importa pako estu samaj, legu la diskuton :ref:`single-source-version` por "
"eblaj metodoj por fari tion."

#: ../source/discussions/versioning.rst:202
msgid ""
"As import packages and modules are not *required* to publish runtime version "
"information in this way (see the withdrawn proposal in :pep:`PEP 396 "
"<396>`), the ``__version__`` attribute should either only be queried with "
"interfaces that are known to provide it (such as a project querying its own "
"version or the version of one of its direct dependencies), or else the "
"querying code should be designed to handle the case where the attribute is "
"missing [#fallback-to-dist-version]_."
msgstr ""
"Ĉar importaj pako kaj moduloj ne *devas* sciigi pri rultempa versia informo "
"tiel (vidu la neaprobitan proponon :pep:`PEP 396 <396>`), oni serĉu la "
"atributon ``__version__`` nur por tiuj interfacoj, por kiuj oni scias ke la "
"atributo ekzistas (kiel ekzemple projekto serĉanta sian propran version aŭ "
"la version de unu el siaj rektaj dependaĵoj). Alie, la serĉanta kodo "
"pritraktu la kazon, kiam la atributo mankas [#fallback-to-dist-version]_."

#: ../source/discussions/versioning.rst:210
msgid ""
"Some projects may need to publish version information for external APIs that "
"aren't the version of the module itself. Such projects should define their "
"own project-specific ways of obtaining the relevant information at runtime. "
"For example, the standard library's :mod:`ssl` module offers multiple ways "
"to access the underlying OpenSSL library version::"
msgstr ""
"Kelkaj projektoj devas publikigi versiajn informojn de eksteraj API-oj, kiuj "
"ne estas la versio de la modulo mem. Tia projekto difinu sian projekto-"
"specifan manieron akiri la informon runtempe. Ekzemple, la modulo :mod:`ssl` "
"de la norma biblioteko provizas plurajn manierojn por atingi la version de "
"la biblioteko OpenSSL::"

#: ../source/discussions/versioning.rst:225
msgid ""
"Some more examples of unusual version numbers are given in a `blog post "
"<versions-seth-larson_>`_ by Seth Larson."
msgstr ""
"Pliaj ekzemploj de strangaj versiaj numeroj troviĝas en `artikolo <versions-"
"seth-larson_>`_ de Seth Larson."

#: ../source/discussions/versioning.rst:228
msgid ""
"For some personal viewpoints on this issue, see these blog posts: `by Hynek "
"Schlawak <semver-hynek-schlawack_>`_, `by Donald Stufft <semver-donald-"
"stufft_>`_, `by Bernát Gábor <semver-bernat-gabor_>`_, `by Brett Cannon "
"<semver-brett-cannon_>`_. For a humoristic take, read about ZeroVer_."
msgstr ""
"Por pli personaj vidpunktoj pri ĉi tiu temo, vidu la jenajn artikolojn: `far "
"Hynek Schlawak <semver-hynek-schlawack_>`_, `far Donald Stufft <semver-"
"donald-stufft_>`_, `far Bernát Gábor <semver-bernat-gabor_>`_, `far Brett "
"Cannon <semver-brett-cannon_>`_. Por humuro, legu pri ZeroVer_."

#: ../source/discussions/versioning.rst:234
msgid ""
"A full list mapping the top level names available for import to the "
"distribution packages that provide those import packages and modules may be "
"obtained through the standard library's :func:`importlib.metadata."
"packages_distributions` function. This means that even code that is "
"attempting to infer a version to report for all importable top-level names "
"has a means to fall back to reporting the distribution version information "
"if no ``__version__`` attribute is defined. Only standard library modules, "
"and modules added via means other than Python package installation would "
"fail to have version information reported in that case."
msgstr ""
"Plena listo rilatanta la supranivelajn importeblajn nomojn al la distribuo-"
"pakoj provizantaj tiujn importeblajn pakojn kaj modulojn estas akirebla per "
"la funkcio :func:`importlib.metadata.packages_distributions` de la norma "
"biblioteko. Tio signifas, ke kodo provanta raporti version por ĉiu "
"importebla nomo havas rimedon raporti ion, eĉ se atributo ``__version__`` "
"mankas. Nur moduloj de la norma biblioteko kaj moduloj disponigitaj per "
"maniero alia ol instalado de Python-pako ne havos versiajn informojn tiukaze."

#: ../source/flow.rst:3
msgid "The Packaging Flow"
msgstr "La Pakada Laborfluo"

#: ../source/flow.rst:5
msgid ""
"The document aims to outline the flow involved in publishing/distributing a :"
"term:`distribution package <Distribution Package>`, usually to the `Python "
"Package Index (PyPI)`_. It is written for package publishers, who are "
"assumed to be the package author."
msgstr ""
"Jen dokumento resumanta la fluon pri eldonado/distribuado de :term:"
"`distribua pako <Distribution Package>`, ofte al la `Python-Pakindekso "
"<Python Package Index (PyPI)>`_. Ĝi estis verkita por eldonantoj de pakoj, "
"kiuj estas supozite la aŭtoroj de la pakoj."

#: ../source/flow.rst:12
msgid ""
"While the :doc:`tutorial <tutorials/packaging-projects>` walks through the "
"process of preparing a simple package for release, it does not fully "
"enumerate what steps and files are required, and for what purpose."
msgstr ""
"Kvankam la :doc:`lernilo <tutorials/packaging-projects>` priskribas la "
"procedon por prepari simplan pakon por eldonado, ĝi ne plene klarigas la "
"postulatajn paŝojn kaj dosierojn kaj la kialojn."

#: ../source/flow.rst:16
msgid ""
"Publishing a package requires a flow from the author's source code to an end "
"user's Python environment. The steps to achieve this are:"
msgstr ""
"Eldonado de pako postulas fluon el la fontkodo de la aŭtoro ĝis la Python-"
"medio de la uzanto. Jen la paŝoj de tiu fluo:"

#: ../source/flow.rst:19
msgid ""
"Have a source tree containing the package. This is typically a checkout from "
"a version control system (VCS)."
msgstr ""
"Havu fontarbon enhavantan la pakon. Tiu devenas tipe de versikontrola "
"sistemo (VCS)."

#: ../source/flow.rst:22
msgid ""
"Prepare a configuration file describing the package metadata (name, version "
"and so forth) and how to create the build artifacts. For most packages, this "
"will be a :file:`pyproject.toml` file, maintained manually in the source "
"tree."
msgstr ""
"Preparu agordan dosieron priskribantan la pakajn metadatenojn (nomon, "
"version ktp) kaj la manieron konstrui la artefaktojn. Plej ofte tiu estas la "
"dosiero :dosiero:`pyproject.toml` malaŭtomate mastrumata en la fontarbo."

#: ../source/flow.rst:27
msgid ""
"Create build artifacts to be sent to the package distribution service "
"(usually PyPI); these will normally be a :term:`source distribution "
"(\"sdist\") <Source Distribution (or \"sdist\")>` and one or more :term:"
"`built distributions (\"wheels\") <Built Distribution>`. These are made by a "
"build tool using the configuration file from the previous step. Often there "
"is just one generic wheel for a pure Python package."
msgstr ""
"Kreu konstruitajn artefaktojn seldontan al la pako-disdonada servo (kutime "
"PyPI); tiuj ordinare estas :term:`fonta distribuo (sdist) <Source "
"Distribution (or \"sdist\")>` kaj unu aŭ pli da :term:`konstrutaj distribuoj "
"(wheel) <Built Distribution>`. Tiujn konstruas konstruilo uzante la agordan "
"dosieron de la antaŭa paŝo. Ofte estas nur unu ĝenerala wheel por pure "
"Python-a pako."

#: ../source/flow.rst:35
msgid "Upload the build artifacts to the package distribution service."
msgstr "Alŝutu la konstruitajn artefaktojn al la pak-distribua servo."

#: ../source/flow.rst:37
msgid ""
"At that point, the package is present on the package distribution service. "
"To use the package, end users must:"
msgstr ""
"Nun, la pako ĉeestas ĉe la pako-distribua servo. Por uzi la pakon, uzantoj "
"faru la jenon:"

#: ../source/flow.rst:40
msgid ""
"Download one of the package's build artifacts from the package distribution "
"service."
msgstr ""
"Elŝutu unu el la konstruitaj artefaktoj de la pako el la pak-distribua servo."

#: ../source/flow.rst:43
msgid ""
"Install it in their Python environment, usually in its ``site-packages`` "
"directory. This step may involve a build/compile step which, if needed, must "
"be described by the package metadata."
msgstr ""
"Instalu ĝin en ĝis Python-medio, ordinare en la dosierujo ``site-packages``. "
"Tio povas postuli konstruadon aŭ tradukadon, kiu devas esti priskribita de "
"la pakaj metadatenoj."

#: ../source/flow.rst:47
msgid ""
"These last 2 steps are typically performed by :ref:`pip` when an end user "
"runs ``pip install``."
msgstr ""
"La lastajn du paĵojn faras la ilo :ref:`pip`, kiam uzanto rulas ``pip "
"install``."

#: ../source/flow.rst:50
msgid "The steps above are described in more detail below."
msgstr "La ĉi-supraj paŝoj estas priskribitaj plidetale ĉi-sube."

#: ../source/flow.rst:53
msgid "The source tree"
msgstr "La fontarbo"

#: ../source/flow.rst:55
msgid ""
"The source tree contains the package source code, usually a checkout from a "
"VCS. The particular version of the code used to create the build artifacts "
"will typically be a checkout based on a tag associated with the version."
msgstr ""
"La fontarbo enhavas la fontkodon de la pako, ofte el versikontrola sistemo. "
"La specifa versio de la kodo uzita por konstrui la artefaktojn ordinare "
"estas asociita al etikedo de la versio en la versikontrola sistemo."

#: ../source/flow.rst:60
msgid "The configuration file"
msgstr "La agorda dosiero"

#: ../source/flow.rst:62
msgid ""
"The configuration file depends on the tool used to create the build "
"artifacts. The standard practice is to use a :file:`pyproject.toml` file in "
"the `TOML format`_."
msgstr ""
"La agorda dosiero dependas de la ilo uzita por krei la konstruitajn "
"artefaktojn. La norma praktiko estas uzi dosieron :file:`pyproject.toml` en "
"la `dosierformo TOML <TOML format>`_."

#: ../source/flow.rst:68
msgid ""
"At a minimum, the :file:`pyproject.toml` file needs a ``[build-system]`` "
"table specifying your build tool. There are many build tools available, "
"including but not limited to :ref:`flit`, :ref:`hatch`, :ref:`pdm`, :ref:"
"`poetry`, :ref:`setuptools`, `trampolim`_, and `whey`_. Each tool's "
"documentation will show what to put in the ``[build-system]`` table."
msgstr ""
"Minimume, la dosiero :file:`pyproject.toml` bezonas tabelon ``[build-"
"system]`` specifante la konstruilon. Ekzistas multaj konstruiloj, interalie "
"inkluzive de :ref:`flit`, :ref:`hatch`, :ref:`pdm`, :ref:`poetry`, :ref:"
"`setuptools`, `trampolim`_ kaj `whey`_. La dokumentaro de iu ilo klarigos la "
"enhavon de la tabelo ``[build-system]``."

#: ../source/flow.rst:77
msgid "For example, here is a table for using :ref:`hatch`:"
msgstr "Ekzemple, jen tabelo pri uzado de :ref:`hatch`:"

#: ../source/flow.rst:85
msgid ""
"With such a table in the :file:`pyproject.toml` file, a \":term:`frontend "
"<Build Frontend>`\" tool like :ref:`build` can run your chosen build tool's "
"\":term:`backend <Build Backend>`\" to create the build artifacts. Your "
"build tool may also provide its own frontend. An install tool like :ref:"
"`pip` also acts as a frontend when it runs your build tool's backend to "
"install from a source distribution."
msgstr ""
"Kun tia tabelo en la dosiero :file:`pyproject.toml`, :term:`konstrua fasado "
"<Build Frontend>` kiel :ref:`build` povas ruli la elektitan :term:`konstruan "
"malfasadon <Build Backend>` por krei la konstruitajn artefaktojn. La "
"konstrua malfasado povas ankaŭ provizi sian propran fasadon. Instalilo kiel :"
"ref:`pip` ankaŭ funkcias kiel fasado, kiam ĝi rulas la konstruan malfasadon "
"por instali el fonta distribuo."

#: ../source/flow.rst:94
msgid ""
"The particular build tool you choose dictates what additional information is "
"required in the :file:`pyproject.toml` file. For example, you might specify:"
msgstr ""
"Tiu konstruilo, kiun vi elektas, determinas la postulatajn pliajn informojn "
"en la dosiero :file:`pyproject.toml`. Ekzemple, oni povas uzi la jenon:"

#: ../source/flow.rst:97
msgid ""
"a ``[project]`` table containing project :doc:`Core Metadata </"
"specifications/core-metadata/>` (name, version, author and so forth),"
msgstr ""
"tabelo ``[project]`` enhavanta la projektajn :doc:`Kernajn Metadatenojn </"
"specifications/core-metadata/>` (nomon, version, aŭtoron ktp),"

#: ../source/flow.rst:101
msgid "a ``[tool]`` table containing tool-specific configuration options."
msgstr "tabelo ``[tool]`` enhavantaj agordajn opciojn por specifaj iloj."

#: ../source/flow.rst:103
msgid ""
"Refer to the :ref:`pyproject.toml guide <writing-pyproject-toml>` for a "
"complete guide to ``pyproject.toml`` configuration."
msgstr ""
"Vidu la :ref:`gvidilon pri pyproject.toml <writing-pyproject-toml>` por "
"plenaj detaloj pri agordado de ``pyproject.toml``."

#: ../source/flow.rst:108
msgid "Build artifacts"
msgstr "Konstruaj artefaktoj"

#: ../source/flow.rst:111
msgid "The source distribution (sdist)"
msgstr "La fonta distribuo (sdist)"

#: ../source/flow.rst:113
msgid ""
"A source distribution contains enough to install the package from source in "
"an end user's Python environment. As such, it needs the package source, and "
"may also include tests and documentation. These are useful for end users "
"wanting to develop your sources, and for end user systems where some local "
"compilation step is required (such as a C extension)."
msgstr ""
"Fonta distribuo enhavas sufiĉon por instali de fonto la pakon en la Python-"
"medio de la uzanto. Tial, ĝi bezonas la pakan fonton, kaj ankaŭ povas "
"inkluzivi testojn kaj dokumentaron. Tio utilas por tiaj uzantoj, kiaj volas "
"programi kun viaj fontoj, aŭ kies sistemoj postulas lokan tradukadon "
"(ekzemple por C-etendaĵo)."

#: ../source/flow.rst:119 ../source/flow.rst:143
msgid ""
"The :ref:`build` package knows how to invoke your build tool to create one "
"of these:"
msgstr ""
"La pako :ref:`build` scias kiel alvoki vian konstruilon por krei unu el la "
"jeno:"

#: ../source/flow.rst:126
msgid ""
"Or, your build tool may provide its own interface for creating an sdist."
msgstr ""
"Aŭ via konstruilo povas provizi sian propran interfacon por krei fontan "
"distribuon."

#: ../source/flow.rst:130
msgid "The built distributions (wheels)"
msgstr "La konstruita distribuo (wheel)"

#: ../source/flow.rst:132
msgid ""
"A built distribution contains only the files needed for an end user's Python "
"environment. No compilation steps are required during the install, and the "
"wheel file can simply be unpacked into the ``site-packages`` directory. This "
"makes the install faster and more convenient for end users."
msgstr ""
"Konstruita distribuo enhavas nur tiujn dosierojn, kiuj necesas en la Python-"
"medio de uzanto. Instalado ne postulas tradukadon, kaj la wheel povas simple "
"esti malpakita al la dosierujo ``site-packages``. Tio plirapidigas kaj "
"plifaciligas instaladon."

#: ../source/flow.rst:137
msgid ""
"A pure Python package typically needs only one \"generic\" wheel. A package "
"with compiled binary extensions needs a wheel for each supported combination "
"of Python interpreter, operating system, and CPU architecture that it "
"supports. If a suitable wheel file is not available, tools like :ref:`pip` "
"will fall back to installing the source distribution."
msgstr ""
"Pure Python-a pako tipe nur bezonas unu «generalan» wheel. Pako kun "
"tradukita duuma etendaĵo bezonas po unu wheel por ĉiu subtenata kombinaĵo de "
"Python-interpretilo, mastruma sistemo kaj ĉefprocesora arĥitekturo. Se taŭga "
"wheel ne haveblas, :ref:`pip` kaj aliaj iloj instalos la fontan distribuon."

#: ../source/flow.rst:150
msgid "Or, your build tool may provide its own interface for creating a wheel."
msgstr ""
"Aŭ via konstruilo povas provizi sian propran interfacon por krei wheel."

#: ../source/flow.rst:154
msgid ""
"The default behaviour of :ref:`build` is to make both an sdist and a wheel "
"from the source in the current directory; the above examples are "
"deliberately specific."
msgstr ""
"La implicita konduto de :ref:`build` estas fari kaj fontan distribuon kaj "
"wheel el la fonto en la aktuala dosierujo; la ĉi-supraj ekzemploj estas "
"intence specifaj."

#: ../source/flow.rst:159
msgid "Upload to the package distribution service"
msgstr "Alŝuti al la paka distribua servo"

#: ../source/flow.rst:161
msgid ""
"The :ref:`twine` tool can upload build artifacts to PyPI for distribution, "
"using a command like:"
msgstr ""
"La ilo :ref:`twine` povas alŝuti konstruitajn artefaktojn al PyPI por "
"distribuo, uzante komandon kiel la jenon:"

#: ../source/flow.rst:168
msgid "Or, your build tool may provide its own interface for uploading."
msgstr "Aŭ, via konstruilo eble provizas sian propran interfacon por alŝutado."

#: ../source/flow.rst:171
msgid "Download and install"
msgstr "Elŝuti kaj instali"

#: ../source/flow.rst:173
msgid ""
"Now that the package is published, end users can download and install the "
"package into their Python environment. Typically this is done with :ref:"
"`pip`, using a command like:"
msgstr ""
"Nun, post eldonado de la pako, uzantoj povas elŝuti kaj instali la pakon en "
"siajn Python-mediojn. Oni faras tion per :ref:`pip`, uzante la jenan "
"komandon:"

#: ../source/flow.rst:181
msgid ""
"End users may also use other tools like :ref:`pipenv`, :ref:`poetry`, or :"
"ref:`pdm`."
msgstr ""
"Uzantoj povas ankaŭ uzi aliajn ilojn kiel :ref:`pipenv`, :ref:`poetry`, aŭ :"
"ref:`pdm`."

#: ../source/glossary.rst:3
msgid "Glossary"
msgstr "Terminaro"

#: ../source/glossary.rst:8
msgid "Binary Distribution"
msgstr "Duuma Distribuo"

#: ../source/glossary.rst:11
msgid ""
"A specific kind of :term:`Built Distribution` that contains compiled "
"extensions."
msgstr ""
"Specifa speco de :term:`Konstruita Distribuo <Built Distribution>` enhavanta "
"tradukitajn etendaĵojn."

#: ../source/glossary.rst:14
msgid "Build Backend"
msgstr "Konstrua Malfasado"

#: ../source/glossary.rst:17
msgid ""
"A library that takes a source tree and builds a :term:`source distribution "
"<Source Distribution (or \"sdist\")>` or :term:`built distribution <Built "
"Distribution>` from it. The build is delegated to the backend by a :term:"
"`frontend <Build Frontend>`. All backends offer a standardized interface."
msgstr ""
"Biblioteko prenanta fontarbon kaj konstruanta :term:`fontan distribuon "
"<Source Distribution (or \"sdist\")>` or :term:`konstritan distribuon <Built "
"Distribution>`. La :term:`fasado <Build Frontend>` delegas la konstruadon al "
"la malfasado. Ĉia malfasado provizas normigitan interfacon."

#: ../source/glossary.rst:24
msgid ""
"Examples of build backends are :ref:`flit's flit-core <flit>`, :ref:`hatch's "
"hatchling <hatch>`, :ref:`maturin`, :ref:`meson-python`, :ref:`scikit-build-"
"core`, and :ref:`setuptools`."
msgstr ""
"Ekzemploj de konstruaj malfasadoj estas :ref:`flit-core de flit <flit>`, :"
"ref:`hatchling de hatch <hatch>`, :ref:`maturin`, :ref:`meson-python`, :ref:"
"`scikit-build-core`, kaj :ref:`setuptools`."

#: ../source/glossary.rst:32
msgid "Build Frontend"
msgstr "Konstrua Fasado"

#: ../source/glossary.rst:35
msgid ""
"A tool that users might run that takes arbitrary source trees or :term:"
"`source distributions <Source Distribution (or \"sdist\")>` and builds "
"source distributions or :term:`wheels <Wheel>` from them. The actual "
"building is delegated to each source tree's :term:`build backend <Build "
"Backend>`."
msgstr ""
"Ilo, rulebla de uzanto, kiu el arbitra fontarbo aŭ :term:`fonta distribuo "
"<Source Distribution (or \"sdist\")>` konstruas fontan distribuon aŭ :term:"
"`wheel <Wheel>`. La faktan konstruadon faras la :term:`konstrua malfasado "
"<Build Backend>` de la fontarbo."

#: ../source/glossary.rst:42
msgid "Examples of build frontends are :ref:`pip` and :ref:`build`."
msgstr "Ekzemploj de konstruaj fasadoj estas :ref:`pip` kaj :ref:`build`."

#: ../source/glossary.rst:44
msgid "Built Distribution"
msgstr "Konstruita Distribuo"

#: ../source/glossary.rst:47
msgid ""
"A :term:`Distribution <Distribution Package>` format containing files and "
"metadata that only need to be moved to the correct location on the target "
"system, to be installed. :term:`Wheel` is such a format, whereas :term:"
"`Source Distribution <Source Distribution (or \"sdist\")>` is not, in that "
"it requires a build step before it can be installed.  This format does not "
"imply that Python files have to be precompiled (:term:`Wheel` intentionally "
"does not include compiled Python files). See :ref:`package-formats` for more "
"information."
msgstr ""
":term:`Distribua <Distribution Package>` formo enhavanta dosierojn kaj "
"metadatenojn, kiujn oni povas simple movi al la ĝustaj lokoj en la cela "
"sistemo por instalado. :term:`Wheel` estas unu ekzemplo, dum :term:`Fonta "
"Distribuo <Source Distribution (or \"sdist\")>` ne estas ekzemplo, ĉar ĝi "
"postulas tradukadon antaŭ instalado. Tio ne signifas, ke Python-dosiero "
"devas esti antaŭtradukita (:term:`Wheel` intence ne inkluzivas tradukitajn "
"Python-dosierojn). Vidu :ref:`package-formats` por pliaj informoj."

#: ../source/glossary.rst:56
msgid "Built Metadata"
msgstr "Konstruitaj Metadatenoj"

#: ../source/glossary.rst:59
msgid ""
"The concrete form :term:`Core Metadata` takes when included inside an "
"installed :term:`Project` (``METADATA`` file) or a :term:`Distribution "
"Archive` (``PKG-INFO`` in a :term:`Sdist <Source Distribution (or "
"\"sdist\")>` and ``METADATA`` in a :term:`Wheel`)."
msgstr ""
"La konkreta formo de :term:`Kerna Metadateno <Core Metadata>` en instalita :"
"term:`Projekto <Project>` (la dosiero ``METADATA``) aŭ :term:`Distribua "
"Arĥivo <Distribution Archive>` (``PKG-INFO`` en :term:`fonta distribuo "
"<Source Distribution (or \"sdist\")>`, ``METADATA`` en :term:`Wheel`)."

#: ../source/glossary.rst:66
msgid "Core Metadata"
msgstr "Kernaj Metadatenoj"

#: ../source/glossary.rst:69
msgid ""
"The :ref:`specification <core-metadata>` and the set of :term:`Core Metadata "
"Field`\\s it defines that describe key static attributes of a :term:"
"`Distribution Package` or :term:`Installed Project`."
msgstr ""
"La :ref:`specifo <core-metadata>` kaj la aro de :term:`Kernaj Metadatenaj "
"Kampoj <Core Metadata Field>` difinitaj de ĝi, pri la ĉefaj statikaj "
"atributoj de :term:`Distribua Pako <Distribution Package>` aŭ :term:"
"`Instalita Projekto <Installed Project>`."

#: ../source/glossary.rst:74
msgid "Core Metadata Field"
msgstr "Kerna Metadatena Kampo"

#: ../source/glossary.rst:77
msgid ""
"A single key-value pair (or sequence of such with the same name, for "
"multiple-use fields) defined in the :term:`Core Metadata` spec and stored in "
"the :term:`Built Metadata`. Notably, distinct from a :term:`Pyproject "
"Metadata Key`."
msgstr ""
"Unu ŝlosilo-valoro-paro (aŭ sinsekvo de tiaĵoj de la sama nomo, por plurfoje "
"uzebla kampo) difinita en la specifo :term:`Kernaj Metadatenoj <Core "
"Metadata>`kaj konservita en la :term:`Konstruitaj Metadatenoj <Built "
"Metadata>`. Notinde, diferencas de :term:`Pyproject-Metadatena Ŝlosilo "
"<Pyproject Metadata Key>`."

#: ../source/glossary.rst:83
msgid "Distribution Archive"
msgstr "Distribua Arĥivo"

#: ../source/glossary.rst:86
msgid ""
"The physical distribution artifact (i.e. a file on disk) for a :term:"
"`Distribution Package`."
msgstr ""
"La fizika distribua artefakto (ekz. dosiero sur disko) por :term:`Distribua "
"Pako <Distribution Package>`."

#: ../source/glossary.rst:89
msgid "Distribution Package"
msgstr "Distribua Pako"

#: ../source/glossary.rst:92
msgid ""
"A versioned archive file that contains Python :term:`packages <Import "
"Package>`, :term:`modules <Module>`, and other resource files that are used "
"to distribute a :term:`Release`. The archive file is what an end-user will "
"download from the internet and install."
msgstr ""
"Versiohava arĥiva dosiero enhavanta Python-ajn :term:`pakojn <Import "
"Package>`, :term:`modulojn <Module>`, kaj aliajn resursajn dosierojn por "
"distribui :term:`Eldonon <Release>`. La uzanto elŝutas kaj instalas la "
"arĥivan dosieron el Interreto."

#: ../source/glossary.rst:97
msgid ""
"A distribution package is more commonly referred to with the single words "
"\"package\" or \"distribution\", but this guide may use the expanded term "
"when more clarity is needed to prevent confusion with an :term:`Import "
"Package` (which is also commonly called a \"package\") or another kind of "
"distribution (e.g. a Linux distribution or the Python language "
"distribution), which are often referred to with the single term "
"\"distribution\". See :ref:`distribution-package-vs-import-package` for a "
"breakdown of the differences."
msgstr ""
"Distribua pako estas ofte simple nomata «pako» aŭ «distribuo», sed ĉi tiu "
"gvidilo uzas la plenan terminon tiam, kiam klareco necesas por eviti "
"konfuzon kun :term:`Importa Pako <Import Package>` (kiu estas ankaŭ ofte "
"nomata «pako») aŭ alia speco de distribuo (ekz. Linux-distribuo aŭ distribuo "
"de la programlingvo Python), kiuj ofte estas simple nomataj «distribuo». "
"Vidu :ref:`distribution-package-vs-import-package` por detaloj pri la "
"diferencoj."

#: ../source/glossary.rst:105
msgid "Egg"
msgstr "Egg"

#: ../source/glossary.rst:108
msgid ""
"A :term:`Built Distribution` format introduced by :ref:`setuptools`, which "
"has been replaced by :term:`Wheel`.  For details, see :ref:`egg-format`."
msgstr ""
"Formo de :term:`Konstruita Distribuo <Built Distribution>` enkondukita de :"
"ref:`setuptools`, nun anstataŭita de :term:`Wheel`.  Por detaloj, vidu :ref:"
"`egg-format`."

#: ../source/glossary.rst:111
msgid "Extension Module"
msgstr "Etenda Modulo"

#: ../source/glossary.rst:114
msgid ""
"A :term:`Module` written in the low-level language of the Python "
"implementation: C/C++ for Python, Java for Jython. Typically contained in a "
"single dynamically loadable pre-compiled file, e.g.  a shared object (.so) "
"file for Python extensions on Unix, a DLL (given the .pyd extension) for "
"Python extensions on Windows, or a Java class file for Jython extensions."
msgstr ""
":term:`Modulo <Module>` verkita en la malaltnivela lingvo de la Python-"
"realigo: C/C++ por Python, Java por Jython. Ofte en unu dinamike ŝargebla "
"antaŭtradukita dosiero, ekz. komunobjekta (``.so``) dosiero por Python-"
"etendaĵo sur Unikso, dinamike ŝargebla biblioteko (DLL, kun la dosiersufikso "
"``.pyd``) por Python-etendaĵo sur Windows, aŭ Java-klasdosiero por Jython-"
"etendaĵo."

#: ../source/glossary.rst:121
msgid "Import Package"
msgstr "Importa Pako"

#: ../source/glossary.rst:124
msgid ""
"A Python module which can contain other modules or recursively, other "
"packages."
msgstr ""
"Python-modulo, kiu povas enhavi aliajn modulojn aŭ, rikure, aliajn pakojn."

#: ../source/glossary.rst:127
msgid ""
"An import package is more commonly referred to with the single word "
"\"package\", but this guide will use the expanded term when more clarity is "
"needed to prevent confusion with a :term:`Distribution Package` which is "
"also commonly called a \"package\". See :ref:`distribution-package-vs-import-"
"package` for a breakdown of the differences."
msgstr ""
"Oni ofte simple nomas importan pakon «pako», sed ĉi tiu gvidisto uzos la pli "
"longan terminon, kiam oni devas distingi ĝin de :term:`Distribua Pako "
"<Distribution Package>`, kiu ankaŭ ofte nomiĝas «pako». Vidu :ref:"
"`distribution-package-vs-import-package` por resumo de la diferencoj."

#: ../source/glossary.rst:133
msgid "Installed Project"
msgstr "Instalita Projekto"

#: ../source/glossary.rst:136
msgid ""
"A :term:`Project` that is installed for use with a Python interpreter or :"
"term:`Virtual Environment`, as described in the specification :ref:"
"`recording-installed-packages`."
msgstr ""
":term:`Projekto <Project>` instalita por uzo kun Python-interpretilo aŭ :"
"term:`Virtuala Medio <Virtual Environment>`, laŭ la normo :ref:`recording-"
"installed-packages`."

#: ../source/glossary.rst:140
msgid "Known Good Set (KGS)"
msgstr "Konata Bona Aro (KGS)"

#: ../source/glossary.rst:143
msgid ""
"A set of distributions at specified versions which are compatible with each "
"other. Typically a test suite will be run which passes all tests before a "
"specific set of packages is declared a known good set. This term is commonly "
"used by frameworks and toolkits which are comprised of multiple individual "
"distributions."
msgstr ""
"Aro de distribuoj ĉe specifitaj versioj kongruaj inter si. Tipe oni rulas "
"testaron, antaŭ ol deklari iun aron konata bona aro. La terminon ofte uzas "
"kadroj kaj ilaroj konsistantaj el multaj distribuoj."

#: ../source/glossary.rst:149
msgid "License Classifier"
msgstr "Licenco-Klasigilo"

#: ../source/glossary.rst:152
msgid ""
"A PyPI Trove classifier (as :ref:`described <core-metadata-classifier>` in "
"the :term:`Core Metadata` specification) which begins with ``License ::``."
msgstr ""
"Klasigilo PyPI Trove (:ref:`laŭ <core-metadata-classifier>` la specifo :term:"
"`Kernaj Metadatenoj <Core Metadata>`) komenciĝanta per ``License ::``."

#: ../source/glossary.rst:157 ../source/specifications/license-expression.rst:3
msgid "License Expression"
msgstr "Licenco-Esprimo"

#: ../source/glossary.rst:158
msgid "SPDX Expression"
msgstr "SPDX-Esprimo"

#: ../source/glossary.rst:161
msgid ""
"A string with valid SPDX license expression syntax, including one or more "
"SPDX :term:`License Identifier`\\(s), which describes a :term:`Project`'s "
"license(s) and how they inter-relate. Examples: ``GPL-3.0-or-later``, ``MIT "
"AND (Apache-2.0 OR BSD-2-Clause)``"
msgstr ""
"Signoĉeno de valida SPDX-licenco-esprima sintakso, inkluzivante unu aŭ pli "
"da :term:`Licenco-Identigilo(j) <License Identifier>`, priskribanta(j) "
"licenco(j)n de la :term:`Projekto <Project>` kaj iliajn interrilatojn. "
"Ekzemple: ``GPL-3.0-or-later``, ``MIT AND (Apache-2.0 OR BSD-2-Clause)``"

#: ../source/glossary.rst:169
msgid "License Identifier"
msgstr "Licenco-Identigilo"

#: ../source/glossary.rst:170
msgid "SPDX Identifier"
msgstr "SPDX-Identigilo"

#: ../source/glossary.rst:173
msgid ""
"A valid SPDX short-form license identifier, originally specified in :pep:"
"`639`. This includes all valid SPDX identifiers and the custom ``LicenseRef-"
"[idstring]`` strings conforming to the SPDX specification. Examples: "
"``MIT``, ``GPL-3.0-only``, ``LicenseRef-My-Custom-License``"
msgstr ""
"Valida mallongforma licenco-identigilo de SPDX, originale specifita en :pep:"
"`639`. Tio inkluzivas ĉiujn validajn SPDX-identigilojn kaj la proprajn "
"signoĉenojn ``LicenseRef-[identigilo]`` konformajn al la normo SPDX. "
"Ekzemple: ``MIT``, ``GPL-3.0-only``, ``LicenseRef-Mia-Propra-Licenco``"

#: ../source/glossary.rst:183
msgid "Module"
msgstr "Modulo"

#: ../source/glossary.rst:186
msgid ""
"The basic unit of code reusability in Python, existing in one of two types: :"
"term:`Pure Module`, or :term:`Extension Module`."
msgstr ""
"La baza unuo de reuzebla kodo en Python, en unu el la du jenaj tipoj: :term:"
"`Pura Modulo <Pure Module>` aŭ :term:`Etendaĵa Modulo <Extension Module>`."

#: ../source/glossary.rst:189
msgid "Package Index"
msgstr "Pakindekso"

#: ../source/glossary.rst:192
msgid ""
"A repository of distributions with a web interface to automate :term:"
"`package <Distribution Package>` discovery and consumption."
msgstr ""
"Deponejo de distribuoj kun TTT-fasado por aŭtomatigi serĉadon kaj uzadon de :"
"term:`pakoj <Distribution Package>`."

#: ../source/glossary.rst:195
msgid "Per Project Index"
msgstr "Unu-Projekta Indekso"

#: ../source/glossary.rst:198
msgid ""
"A private or other non-canonical :term:`Package Index` indicated by a "
"specific :term:`Project` as the index preferred or required to resolve "
"dependencies of that project."
msgstr ""
"Privata aŭ alia nekanona :term:`Pakindekso <Package Index>` indikita de "
"specifa :term:`Projekto <Project>` kiel la indekso preferata aŭ postulata "
"por solvi dependecojn de tiu projekto."

#: ../source/glossary.rst:202 ../source/guides/hosting-your-own-index.rst:62
#: ../source/guides/index-mirrors-and-caches.rst:52
msgid "Project"
msgstr "Projekto"

#: ../source/glossary.rst:205
msgid ""
"A library, framework, script, plugin, application, or collection of data or "
"other resources, or some combination thereof that is intended to be packaged "
"into a :term:`Distribution <Distribution Package>`."
msgstr ""
"Biblioteko, kadro, programeto, kromprogramo, aplikprogramo, datenaro aŭ alia "
"resurso, aŭ iu kombinaĵo de tiuj, pakotaj en :term:`Distribuon <Distribution "
"Package>`."

#: ../source/glossary.rst:209
msgid ""
"Since most projects create :term:`Distributions <Distribution Package>` "
"using either :pep:`518` ``build-system``, :ref:`distutils` or :ref:"
"`setuptools`, another practical way to define projects currently is "
"something that contains a :term:`pyproject.toml`, :term:`setup.py`, or :term:"
"`setup.cfg` file at the root of the project source directory."
msgstr ""
"Ĉar la plejparto de projektoj kreas :term:`Distribuojn <Distribution "
"Package>` per aŭ ``build-system`` de :pep:`518`, aŭ :ref:`distutils`, aŭ :"
"ref:`setuptools`, alia aktuala praktika difino de projekto estas iu "
"enhavanta dosieron :term:`pyproject.toml`, :term:`setup.py`, aŭ :term:`setup."
"cfg` ĉe la radiko de la projekta fonta dosierujo."

#: ../source/glossary.rst:215
msgid ""
"Python projects must have unique names, which are registered on :term:`PyPI "
"<Python Package Index (PyPI)>`. Each project will then contain one or more :"
"term:`Releases <Release>`, and each release may comprise one or more :term:"
"`distributions <Distribution Package>`."
msgstr ""
"Python-projekto devas havi unikan nomon, registritan ĉe :term:`PyPI <Python "
"Package Index (PyPI)>`. Ĉiu projekto enhavas unu aŭ plurajn :term:`Eldonojn "
"<Release>`, kaj ĉiu eldono konsistas el unu aŭ pluraj :term:`distribuoj "
"<Distribution Package>`."

#: ../source/glossary.rst:220
msgid ""
"Note that there is a strong convention to name a project after the name of "
"the package that is imported to run that project. However, this doesn't have "
"to hold true. It's possible to install a distribution from the project 'foo' "
"and have it provide a package importable only as 'bar'."
msgstr ""
"Notu, ke ekzistas forta konvencio nomi projekton laŭ la nomo de la pako "
"importebla por ruli tiun projekton. Tamen, tio ne necesas. Eblas instali "
"distribuon de projekto «foo», kiu provizas pakon importeblan nur kiel «bar»."

#: ../source/glossary.rst:226
msgid "Project Root Directory"
msgstr "Projekta Radika Dosierujo"

#: ../source/glossary.rst:229
msgid ""
"The filesystem directory in which a :term:`Project`'s :term:`source tree "
"<Project Source Tree>` is located."
msgstr ""
"La dosiersistema dosierujo, en kiu troviĝas la term:`fontarbo <Project "
"Source Tree>` de :term:`projekto <Project>`."

#: ../source/glossary.rst:232
msgid "Project Source Tree"
msgstr "Projekta Fontarbo"

#: ../source/glossary.rst:235
msgid ""
"The on-disk format of a :term:`Project` used for development, containing its "
"raw source code before being packaged into a :term:`Source Distribution "
"<Source Distribution (or \"sdist\")>` or :term:`Built Distribution`."
msgstr ""
"La surdiska formo de :term:`Projekto <Project>` uzata por evoluigado, "
"enhavanta la krudan fontkodon antaŭ pakado en :term:`Fontan Distribuon "
"<Source Distribution (or \"sdist\")>` aŭ :term:`Konstruitan Distribuon "
"<Built Distribution>`."

#: ../source/glossary.rst:241
msgid "Project Source Metadata"
msgstr "Projektaj Fontaj Metadatenoj"

#: ../source/glossary.rst:244
msgid ""
"Metadata defined by the package author in a :term:`Project`'s :term:`source "
"tree <Project Source Tree>`, to be transformed into :term:`Core Metadata "
"field`\\s in the :term:`Built Metadata` by the project's :term:`build "
"backend <Build Backend>`. Can be written as :term:`Pyproject Metadata`, or "
"in a tool-specific format (under the ``[tool]`` table in ``pyproject.toml``, "
"or in a tool's own configuration file)."
msgstr ""

#: ../source/glossary.rst:254
msgid "Pure Module"
msgstr "Pura Modulo"

#: ../source/glossary.rst:257
msgid ""
"A :term:`Module` written in Python and contained in a single ``.py`` file "
"(and possibly associated ``.pyc`` and/or ``.pyo`` files)."
msgstr ""
":term:`Modulo <Module>` verkita en Python kaj en unu dosiero ``.py`` (kaj "
"eble asociitaj dosieroj ``.pyc`` kaj/aŭ ``.pyo``)."

#: ../source/glossary.rst:260
msgid "Pyproject Metadata"
msgstr "Pyproject-Metadatenoj"

#: ../source/glossary.rst:263
msgid ""
"The :term:`Project Source Metadata` format defined by the :ref:`declaring-"
"project-metadata` specification and originally introduced in :pep:`621`, "
"stored as :term:`Pyproject Metadata Key`\\s under the ``[project]`` table of "
"a :term:`pyproject.toml` file. Notably, *not* a tool-specific source "
"metadata format under the ``[tool]`` table in ``pyproject.toml``."
msgstr ""

#: ../source/glossary.rst:271
msgid "Pyproject Metadata Key"
msgstr "Pyproject-Metadatena Ŝlosilo"

#: ../source/glossary.rst:274
msgid ""
"A top-level TOML key in the ``[project]`` table in ``pyproject.toml``; part "
"of the :term:`Pyproject Metadata`. Notably, distinct from a :term:`Core "
"Metadata Field`."
msgstr ""
"Supranivela TOML-ŝlosilo en la tabelo ``[project]`` en ``pyproject.toml``; "
"parto de la :term:`Pyproject-Metadatenoj <Pyproject Metadata>`. Notindas, ke "
"ĝi ne estas :term:`Kerna Metadatena Kampo <Core Metadata Field>`."

#: ../source/glossary.rst:278
msgid "Pyproject Metadata Subkey"
msgstr "Pyproject-Metadatena Subŝlosilo"

#: ../source/glossary.rst:281
msgid ""
"A second-level TOML key under a table-valued :term:`Pyproject Metadata Key`."
msgstr ""
"Duanivela TOML-ŝlosilo sub tabelo-valora :term:`Pyproject-Metadatena Ŝlosilo "
"<Pyproject Metadata Key>`."

#: ../source/glossary.rst:284
msgid "Python Packaging Authority (PyPA)"
msgstr "Python-Pakada Aŭtoritato (PyPA)"

#: ../source/glossary.rst:287
msgid ""
"PyPA is a working group that maintains many of the relevant projects in "
"Python packaging. They maintain a site at :doc:`pypa.io <pypa:index>`, host "
"projects on `GitHub <https://github.com/pypa>`_ and `Bitbucket <https://"
"bitbucket.org/pypa>`_, and discuss issues on the `distutils-sig mailing list "
"<https://mail.python.org/mailman3/lists/distutils-sig.python.org/>`_ and "
"`the Python Discourse forum <https://discuss.python.org/c/packaging>`__."
msgstr ""
"PyPA estas laborgrupo mastrumanta multajn projektojn pri pakado de Python. "
"Ĝia retejo estas :doc:`pypa.io <pypa:index>`. Ĝi gastigas projektojn ĉe "
"`GitHub <https://github.com/pypa>`_ kaj `Bitbucket <https://bitbucket.org/"
"pypa>`_ kaj diskutas problemojn ĉe `la dissendolisto distutils-sig <https://"
"mail.python.org/mailman3/lists/distutils-sig.python.org/>`_ kaj `la forumo "
"Discourse por Python <https://discuss.python.org/c/packaging>`__."

#: ../source/glossary.rst:296
msgid "Python Package Index (PyPI)"
msgstr "Python-Pakindekso (PyPI)"

#: ../source/glossary.rst:299
msgid ""
"`PyPI <https://pypi.org>`_ is the default :term:`Package Index` for the "
"Python community. It is open to all Python developers to consume and "
"distribute their distributions."
msgstr ""
"`PyPI <https://pypi.org>`_ estas la ĉefa :term:`pakindekso <Package Index>` "
"por la Python-komunumo. Ĉiu Python-programisto povas uzi ĝin por uzi kaj "
"distribui siajn distribuojn."

#: ../source/glossary.rst:302
msgid "pypi.org"
msgstr "pypi.org"

#: ../source/glossary.rst:305
msgid ""
"`pypi.org <https://pypi.org>`_ is the domain name for the :term:`Python "
"Package Index (PyPI)`. It replaced the legacy index domain name, ``pypi."
"python.org``, in 2017. It is powered by :ref:`warehouse`."
msgstr ""
"`pypi.org <https://pypi.org>`_ estas la retadreso de la :term:`Python-"
"Pakindekso (PyPI) <Python Package Index (PyPI)>`. Ĝi anstataŭis la malnovan "
"retadreson, ``pypi.python.org``, en 2017. Ĝi funkciiĝas per :ref:`warehouse`."

#: ../source/glossary.rst:309
msgid "pyproject.toml"
msgstr "pyproject.toml"

#: ../source/glossary.rst:312
msgid ""
"The tool-agnostic :term:`Project` specification file. Defined in :pep:`518`."
msgstr ""
"La ilo-sendependa :term:`projekta <Project>` specifa dosiero. Difinita en :"
"pep:`518`."

#: ../source/glossary.rst:314
msgid "Release"
msgstr "Eldono"

#: ../source/glossary.rst:317
msgid ""
"A snapshot of a :term:`Project` at a particular point in time, denoted by a "
"version identifier."
msgstr ""
"Kopio de :term:`Projekto <Project>` ĉe iu punkto en tempo, indikita de "
"versia identigilo."

#: ../source/glossary.rst:320
msgid ""
"Making a release may entail the publishing of multiple :term:`Distributions "
"<Distribution Package>`.  For example, if version 1.0 of a project was "
"released, it could be available in both a source distribution format and a "
"Windows installer distribution format."
msgstr ""
"Eldonado de versio povas necesigi publikigon de pluraj :term:`Distribuoj "
"<Distribution Package>`. Ekzemple, se oni eldonus version 1.0 de iu "
"projekto, oni povus disponigi ĝin kiel kaj fontan distribuon kaj Windows-"
"instalilan dosierformon."

#: ../source/glossary.rst:325
msgid "Requirement"
msgstr "Postulo"

#: ../source/glossary.rst:328
msgid ""
"A specification for a :term:`package <Distribution Package>` to be "
"installed.  :ref:`pip`, the :term:`PYPA <Python Packaging Authority (PyPA)>` "
"recommended installer, allows various forms of specification that can all be "
"considered a \"requirement\". For more information, see the :ref:`pip:pip "
"install` reference."
msgstr ""
"Specifo de instalota :term:`pako <Distribution Package>`.  :ref:`pip`, la "
"instalilo rekomendata de :term:`PyPA <Python Packaging Authority (PyPA)>`, "
"permesas diversajn formojn de «postuloj». Por pliaj detaloj, vidu :ref:`pip:"
"pip install`."

#: ../source/glossary.rst:334
msgid "Requirement Specifier"
msgstr "Postulo-Specifilo"

#: ../source/glossary.rst:337
msgid ""
"A format used by :ref:`pip` to install packages from a :term:`Package "
"Index`. For an EBNF diagram of the format, see :ref:`dependency-specifiers`. "
"For example, \"foo>=1.3\" is a requirement specifier, where \"foo\" is the "
"project name, and the \">=1.3\" portion is the :term:`Version Specifier`"
msgstr ""
"Tekstoformo uzata de :ref:`pip` por instali pakojn el :term:`pakindekso "
"<Package Index>`. Por EBNF-diagramo de la tekstoformo, vidu :ref:`dependency-"
"specifiers`. Ekzemple, ``foo>=1.3`` estas postulo-specifilo, en kiu ``foo`` "
"estas la nomo de la projekto kaj ``>=1.3`` estas la :term:`versio-specifilo "
"<Version Specifier>`"

#: ../source/glossary.rst:342
msgid "Requirements File"
msgstr "Postulo-Dosiero"

#: ../source/glossary.rst:345
msgid ""
"A file containing a list of :term:`Requirements <Requirement>` that can be "
"installed using :ref:`pip`. For more information, see the :ref:`pip` docs "
"on :ref:`pip:Requirements Files`."
msgstr ""
"Dosiero enhavanta liston de :term:`Postuloj <Requirement>` instaleblaj per :"
"ref:`pip`. Por plian informoj, vidu la dokumentaron de :ref:`pip` pri :ref:"
"`Postulo-Dosieroj <pip:Requirements Files>`."

#: ../source/glossary.rst:349
msgid "Root License Directory"
msgstr "Radika Licenco-Dosierujo"

#: ../source/glossary.rst:350
msgid "License Directory"
msgstr "Licenco-Dosierujo"

#: ../source/glossary.rst:353
msgid ""
"The directory under which license files are stored in a :term:`Project "
"Source Tree`, :term:`Distribution Archive` or :term:`Installed Project`. For "
"a :term:`Project Source Tree` or :term:`Source Distribution (or \"sdist\")`, "
"this is the :term:`Project Root Directory`. For a :term:`Built Distribution` "
"or :term:`Installed Project`, this is the :file:`.dist-info/licenses/` "
"directory of the wheel archive or project folder respectively. Also, the "
"root directory that paths recorded in the ``License-File`` :term:`Core "
"Metadata Field` are relative to."
msgstr ""
"La dosierujo, en kiu licenco-dosieroj troviĝas, en :term:`Projekta Fontarbo "
"<Project Source Tree>`, :term:`Distribua Arĥivo <Distribution Archive>` aŭ :"
"term:`Instalita Projekto <Installed Project>`. Por :term:`Projekta Fontarbo "
"<Project Source Tree>` aŭ :term:`Fonta Distribuo <Source Distribution (or "
"\"sdist\")>`, ĝi estas la :term:`Projekta Radika Dosierujo <Project Root "
"Directory>`. Por :term:`Konstruita Distribuo <Built Distribution>` aŭ :term:"
"`Instalita Projekto <Installed Project>`, ĝi estas la dosierujo :file:`.dist-"
"info/licenses/` de la wheel-arĥivo aŭ projekta dosierujo respektive. Ankaŭ, "
"la radika dosierujo, al kiu estas relativaj la dosierlokoj en la :term:"
"`Kerna Metadatena Kampo <Core Metadata Field>` ``License-File``."

#: ../source/glossary.rst:366
#: ../source/guides/distributing-packages-using-setuptools.rst:59
msgid "setup.py"
msgstr "setup.py"

#: ../source/glossary.rst:367
#: ../source/guides/distributing-packages-using-setuptools.rst:80
msgid "setup.cfg"
msgstr "setup.cfg"

#: ../source/glossary.rst:370
msgid ""
"The project specification files for :ref:`distutils` and :ref:`setuptools`. "
"See also :term:`pyproject.toml`."
msgstr ""
"La projektaj specifaj dosieroj por :ref:`distutils` kaj :ref:`setuptools`. "
"Vidu ankaŭ :term:`pyproject.toml`."

#: ../source/glossary.rst:373
msgid "Source Archive"
msgstr "Fonta Arĥivo"

#: ../source/glossary.rst:376
msgid ""
"An archive containing the raw source code for a :term:`Release`, prior to "
"creation of a :term:`Source Distribution <Source Distribution (or "
"\"sdist\")>` or :term:`Built Distribution`."
msgstr ""
"Arĥivo enhavanta la krudan fontkodon de :term:`Eldono <Release>`, antaŭ la "
"kreado de :term:`Fonta Distribuo <Source Distribution (or \"sdist\")>` aŭ :"
"term:`Konstruita Distribuo <Built Distribution>`."

#: ../source/glossary.rst:380
msgid "Source Distribution (or \"sdist\")"
msgstr "Fonta Distribuo (aŭ «sdist»)"

#: ../source/glossary.rst:383
msgid ""
"A :term:`distribution <Distribution Archive>` format (usually generated "
"using ``python -m build --sdist``) that provides metadata and the essential "
"source files needed for installing by a tool like :ref:`pip`, or for "
"generating a :term:`Built Distribution`. See :ref:`package-formats` for more "
"information."
msgstr ""

#: ../source/glossary.rst:389
msgid "System Package"
msgstr "Sistema Pako"

#: ../source/glossary.rst:392
msgid ""
"A package provided in a format native to the operating system, e.g. an rpm "
"or dpkg file."
msgstr "Pako en formo indiĝena al la mastruma sistemo, ekz. rpm aŭ dpkg."

#: ../source/glossary.rst:395
msgid "Version Specifier"
msgstr "Versio-Specifilo"

#: ../source/glossary.rst:398
msgid ""
"The version component of a :term:`Requirement Specifier`. For example, the "
"\">=1.3\" portion of \"foo>=1.3\".  Read the :ref:`Version specifier "
"specification <version-specifiers>` for a full description of the specifiers "
"that Python packaging currently supports.  Support for this specification "
"was implemented in :ref:`setuptools` v8.0 and :ref:`pip` v6.0."
msgstr ""

#: ../source/glossary.rst:403
msgid "Virtual Environment"
msgstr "Virtuala Medio"

#: ../source/glossary.rst:406
msgid ""
"An isolated Python environment that allows packages to be installed for use "
"by a particular application, rather than being installed system wide. For "
"more information, see the section on :ref:`Creating and using Virtual "
"Environments`."
msgstr ""
"Izolita Python-medio, en kiu oni povas instali pakojn por iu programo, "
"anstataŭ tutsistema instalado. Por pliaj informoj, vidu :ref:`Krei kaj uzi "
"Virtualan Medion <Creating and using Virtual Environments>`."

#: ../source/glossary.rst:411
msgid "Wheel Format"
msgstr "Wheel-Formo"

#: ../source/glossary.rst:412
msgid "Wheel"
msgstr "Wheel"

#: ../source/glossary.rst:415
msgid ""
"The standard :term:`Built Distribution` format originally introduced in :pep:"
"`427` and defined by the :ref:`binary-distribution-format` specification. "
"See :ref:`package-formats` for more information. Not to be confused with its "
"reference implementation, the :term:`Wheel Project`."
msgstr ""
"La norma dosierformo por :term:`Konstruita Distribuo <Built Distribution>`, "
"origine enkondukita de :pep:`427` kaj difinita de la normo :ref:`binary-"
"distribution-format`. Vidu :ref:`package-formats` por pliaj informoj. Ne "
"konfuzu ĝin kun ĝia referenca realigo, :term:`la Projekto Wheel <Wheel "
"Project>`."

#: ../source/glossary.rst:422
msgid "Wheel Project"
msgstr "Wheel-Projekto"

#: ../source/glossary.rst:425
msgid ""
"The PyPA reference implementation of the :term:`Wheel Format`; see :ref:"
"`wheel`."
msgstr ""
"La referenca realigo far PyPA de la :term:`Wheel-Formo <Wheel Format>`; "
"vidu :ref:`wheel`."

#: ../source/glossary.rst:427
msgid "Working Set"
msgstr "Aro de Laboro"

#: ../source/glossary.rst:430
msgid ""
"A collection of :term:`distributions <Distribution Package>` available for "
"importing. These are the distributions that are on the `sys.path` variable. "
"At most, one :term:`Distribution <Distribution Package>` for a project is "
"possible in a working set."
msgstr ""
"Kolekto de importeblaj :term:`distribuoj <Distribution Package>`. Tiuj estas "
"la distribuoj en la variablo `sys.path`. Maksimume unu :term:`Distribuo "
"<Distribution Package>` por iu projekto povas ĉeesti en aro de laboro."

#: ../source/guides/analyzing-pypi-package-downloads.rst:5
msgid "Analyzing PyPI package downloads"
msgstr "Analizi la pakajn elŝutojn el PyPI"

#: ../source/guides/analyzing-pypi-package-downloads.rst:7
msgid ""
"This section covers how to use the public PyPI download statistics dataset "
"to learn more about downloads of a package (or packages) hosted on PyPI. For "
"example, you can use it to discover the distribution of Python versions used "
"to download a package."
msgstr ""
"Ĉi tiu paragrafo priskribas kiel uzi la publikan statistikan datenaron pri "
"elŝutoj el PyPI por lerni pli pri elŝutoj de pako (aŭ pakoj) ĉe PyPI. "
"Ekzemple, oni povas uzi ĝin por malkovri la distribuojn de Python-versioj "
"uzitaj por elŝuti pakon."

#: ../source/guides/analyzing-pypi-package-downloads.rst:14
#: ../source/guides/supporting-windows-using-appveyor.rst:17
msgid "Background"
msgstr "Fonaj informoj"

#: ../source/guides/analyzing-pypi-package-downloads.rst:16
msgid "PyPI does not display download statistics for a number of reasons: [#]_"
msgstr "PyPI ne montras statistikojn pri elŝutoj pro kelkaj kialoj: [#]_"

#: ../source/guides/analyzing-pypi-package-downloads.rst:18
msgid ""
"**Inefficient to make work with a Content Distribution Network (CDN):** "
"Download statistics change constantly. Including them in project pages, "
"which are heavily cached, would require invalidating the cache more often, "
"and reduce the overall effectiveness of the cache."
msgstr ""
"**Ne kongrua kun Enhavo-Distribua Reto (CDN):** Statistikoj pri elŝutoj "
"ŝanĝadas. Inkluzivado de tiuj en projekto-paĝoj tre enkaŝmemorigitaj "
"postulus oftan eksvalidigon de la kaŝmemoro kaj igus la kaŝmemoron malpli "
"efika."

#: ../source/guides/analyzing-pypi-package-downloads.rst:23
msgid ""
"**Highly inaccurate:** A number of things prevent the download counts from "
"being accurate, some of which include:"
msgstr ""
"**Tre malpreciza:** Kelkaj problemoj malhelpas la precizecon de la kalkulado "
"de elŝutoj, interalie:"

#: ../source/guides/analyzing-pypi-package-downloads.rst:26
msgid "``pip``'s download cache (lowers download counts)"
msgstr "Elŝuta kaŝmemoro de ``pip`` (kiu malpliigas la kalkulon de eŝutoj)"

#: ../source/guides/analyzing-pypi-package-downloads.rst:27
msgid ""
"Internal or unofficial mirrors (can both raise or lower download counts)"
msgstr ""
"Internaj aŭ neoficialaj speguloj (povas kaj pliigi kaj malpliigi elŝutajn "
"kalkulojn)"

#: ../source/guides/analyzing-pypi-package-downloads.rst:28
msgid "Packages not hosted on PyPI (for comparisons sake)"
msgstr "Pakoj ne gastigitaj de PyPI (por komparo)"

#: ../source/guides/analyzing-pypi-package-downloads.rst:29
msgid ""
"Unofficial scripts or attempts at download count inflation (raises download "
"counts)"
msgstr ""
"Neoficialaj instaliloj aŭ provoj falsi la fojojn de elŝutado (kiuj pliigas "
"la nombron de elŝutoj)"

#: ../source/guides/analyzing-pypi-package-downloads.rst:31
msgid "Known historical data quality issues (lowers download counts)"
msgstr ""
"Konataj historiaj problemoj pri datena kvalito (kiuj malpliigas la nombron "
"de elŝutoj)"

#: ../source/guides/analyzing-pypi-package-downloads.rst:33
msgid ""
"**Not particularly useful:** Just because a project has been downloaded a "
"lot doesn't mean it's good; Similarly just because a project hasn't been "
"downloaded a lot doesn't mean it's bad!"
msgstr ""
"**Ne tre utila:** Ne veras, ke ju pli elŝutata projekto estas, des pli bona "
"ĝi estas!"

#: ../source/guides/analyzing-pypi-package-downloads.rst:37
msgid ""
"In short, because its value is low for various reasons, and the tradeoffs "
"required to make it work are high, it has been not an effective use of "
"limited resources."
msgstr ""
"Resume, ĉar la valoro estas malalta pro diversaj kialoj, kaj la kostoj estas "
"altaj, tio ne estas efika uzo de limigitaj resursoj."

#: ../source/guides/analyzing-pypi-package-downloads.rst:42
msgid "Public dataset"
msgstr "Publika datenaro"

#: ../source/guides/analyzing-pypi-package-downloads.rst:44
msgid ""
"As an alternative, the `Linehaul project <https://github.com/pypa/linehaul-"
"cloud-function/>`__ streams download logs from PyPI to `Google BigQuery`_ "
"[#]_, where they are stored as a public dataset."
msgstr ""
"Alternative, `la projekto Linehaul <https://github.com/pypa/linehaul-cloud-"
"function/>`__ transigas elŝutajn protokolojn de PyPI al `Google BigQuery`_ "
"[#]_, konservitajn kiel publikan datenaron."

#: ../source/guides/analyzing-pypi-package-downloads.rst:49
msgid "Getting set up"
msgstr "Ekstarigi"

#: ../source/guides/analyzing-pypi-package-downloads.rst:51
msgid ""
"In order to use `Google BigQuery`_ to query the `public PyPI download "
"statistics dataset`_, you'll need a Google account and to enable the "
"BigQuery API on a Google Cloud Platform project. You can run up to 1TB of "
"queries per month `using the BigQuery free tier without a credit card "
"<https://cloud.google.com/blog/products/data-analytics/query-without-a-"
"credit-card-introducing-bigquery-sandbox>`__"
msgstr ""
"Por uzi `Google BigQuery`_ por serĉi `la publikan statistikan datenaron pri "
"elŝutoj el PyPI <public PyPI download statistics dataset>`_, oni bezonas "
"havi konton ĉe Google kaj ŝalti la BigQuery API por projekto ĉe Google Cloud "
"Platform. Oni rajtas uzi maksimume po 1 terabajton da informpetoj en ĉiu "
"monato `uzante la senkostan tavolon de BigQuery sen kreditkarto <https://"
"cloud.google.com/blog/products/data-analytics/query-without-a-credit-card-"
"introducing-bigquery-sandbox>`__"

#: ../source/guides/analyzing-pypi-package-downloads.rst:57
msgid "Navigate to the `BigQuery web UI`_."
msgstr "Navigu al la `reta fasado de BigQuery <BigQuery web UI>`_."

#: ../source/guides/analyzing-pypi-package-downloads.rst:58
msgid "Create a new project."
msgstr "Krei novan projekton."

#: ../source/guides/analyzing-pypi-package-downloads.rst:59
msgid ""
"Enable the `BigQuery API <https://console.developers.google.com/apis/library/"
"bigquery-json.googleapis.com>`__."
msgstr ""
"Ŝalti la `BigQuery API <https://console.developers.google.com/apis/library/"
"bigquery-json.googleapis.com>`__."

#: ../source/guides/analyzing-pypi-package-downloads.rst:62
msgid ""
"For more detailed instructions on how to get started with BigQuery, check "
"out the `BigQuery quickstart guide <https://cloud.google.com/bigquery/docs/"
"quickstarts/quickstart-web-ui>`__."
msgstr ""
"Por pli detalaj instrukcioj pri kiel ekuzi BigQuery, legu `BigQuery "
"quickstart guide <https://cloud.google.com/bigquery/docs/quickstarts/"
"quickstart-web-ui>`__."

#: ../source/guides/analyzing-pypi-package-downloads.rst:68
msgid "Data schema"
msgstr "Datena skemo"

#: ../source/guides/analyzing-pypi-package-downloads.rst:70
msgid ""
"Linehaul writes an entry in a ``bigquery-public-data.pypi.file_downloads`` "
"table for each download. The table contains information about what file was "
"downloaded and how it was downloaded. Some useful columns from the `table "
"schema <https://console.cloud.google.com/bigquery?pli=1&p=bigquery-public-"
"data&d=pypi&t=file_downloads&page=table>`__ include:"
msgstr ""
"Linehaul skribas eron en tabelon ``bigquery-public-data.pypi."
"file_downloads`` por ĉiu elŝuto. La tabelo enhavas informojn pri la elŝutita "
"dosiero kaj la maniero de elŝuto. Jen kelkaj utilaj kolumnoj en la `tabela "
"skemo <https://console.cloud.google.com/bigquery?pli=1&p=bigquery-public-"
"data&d=pypi&t=file_downloads&page=table>`__:"

#: ../source/guides/analyzing-pypi-package-downloads.rst:77
msgid "Column"
msgstr "Kolumno"

#: ../source/guides/analyzing-pypi-package-downloads.rst:77
#: ../source/specifications/core-metadata.rst:206
#: ../source/specifications/well-known-project-urls.rst:106
msgid "Description"
msgstr "Priskribo"

#: ../source/guides/analyzing-pypi-package-downloads.rst:77
#: ../source/specifications/dependency-groups.rst:23
#: ../source/specifications/dependency-specifiers.rst:29
#: ../source/specifications/direct-url-data-structure.rst:242
#: ../source/specifications/version-specifiers.rst:1072
msgid "Examples"
msgstr "Ekzemploj"

#: ../source/guides/analyzing-pypi-package-downloads.rst:79
msgid "timestamp"
msgstr "timestamp"

#: ../source/guides/analyzing-pypi-package-downloads.rst:79
msgid "Date and time"
msgstr "Dato kaj tempo"

#: ../source/guides/analyzing-pypi-package-downloads.rst:79
msgid "``2020-03-09 00:33:03 UTC``"
msgstr "``2020-03-09 00:33:03 UTC``"

#: ../source/guides/analyzing-pypi-package-downloads.rst:81
msgid "file.project"
msgstr "file.project"

#: ../source/guides/analyzing-pypi-package-downloads.rst:81
msgid "Project name"
msgstr "Nomo de projekto"

#: ../source/guides/analyzing-pypi-package-downloads.rst:81
msgid "``pipenv``, ``nose``"
msgstr "``pipenv``, ``nose``"

#: ../source/guides/analyzing-pypi-package-downloads.rst:83
msgid "file.version"
msgstr "file.version"

#: ../source/guides/analyzing-pypi-package-downloads.rst:83
msgid "Package version"
msgstr "Versio de pako"

#: ../source/guides/analyzing-pypi-package-downloads.rst:83
msgid "``0.1.6``, ``1.4.2``"
msgstr "``0.1.6``, ``1.4.2``"

#: ../source/guides/analyzing-pypi-package-downloads.rst:85
msgid "details.installer.name"
msgstr "details.installer.name"

#: ../source/guides/analyzing-pypi-package-downloads.rst:85
msgid "Installer"
msgstr "Instalilo"

#: ../source/guides/analyzing-pypi-package-downloads.rst:85
msgid "pip, :ref:`bandersnatch`"
msgstr "pip, :ref:`bandersnatch`"

#: ../source/guides/analyzing-pypi-package-downloads.rst:87
msgid "details.python"
msgstr "details.python"

#: ../source/guides/analyzing-pypi-package-downloads.rst:87
msgid "Python version"
msgstr "Versio de Python"

#: ../source/guides/analyzing-pypi-package-downloads.rst:87
msgid "``2.7.12``, ``3.6.4``"
msgstr "``2.7.12``, ``3.6.4``"

#: ../source/guides/analyzing-pypi-package-downloads.rst:92
msgid "Useful queries"
msgstr "Utilaj informpetoj"

#: ../source/guides/analyzing-pypi-package-downloads.rst:94
msgid ""
"Run queries in the `BigQuery web UI`_ by clicking the \"Compose query\" "
"button."
msgstr ""
"Rulu informpetojn en la `reta fasado de BigQuery <BigQuery web UI>`_ "
"alklakante la butonon «Compose query»."

#: ../source/guides/analyzing-pypi-package-downloads.rst:96
msgid ""
"Note that the rows are stored in a partitioned table, which helps limit the "
"cost of queries. These example queries analyze downloads from recent history "
"by filtering on the ``timestamp`` column."
msgstr ""
"Notu, ke la vicoj estas en dispartigita tabelo, kio limigas la koston de "
"informpetoj. Jen ekzemplaj informpetoj analizantaj lastatempajn elŝutojn "
"filtrante la kolumnon ``timestamp``."

#: ../source/guides/analyzing-pypi-package-downloads.rst:101
msgid "Counting package downloads"
msgstr "Kalkuli elŝutojn de pako"

#: ../source/guides/analyzing-pypi-package-downloads.rst:103
msgid ""
"The following query counts the total number of downloads for the project "
"\"pytest\"."
msgstr ""
"Jen informpeto kalkulanta la totalan nombron de elŝutoj de la projekto "
"«pytest»."

#: ../source/guides/analyzing-pypi-package-downloads.rst:118
#: ../source/guides/analyzing-pypi-package-downloads.rst:139
#: ../source/guides/analyzing-pypi-package-downloads.rst:167
#: ../source/guides/analyzing-pypi-package-downloads.rst:204
msgid "num_downloads"
msgstr "num_downloads"

#: ../source/guides/analyzing-pypi-package-downloads.rst:120
msgid "26190085"
msgstr "26190085"

#: ../source/guides/analyzing-pypi-package-downloads.rst:123
msgid ""
"To count downloads from pip only, filter on the ``details.installer.name`` "
"column."
msgstr ""
"Por kalkuli nur elŝutojn per pip, filtru la kolumnon ``details.installer."
"name``."

#: ../source/guides/analyzing-pypi-package-downloads.rst:141
msgid "24334215"
msgstr "24334215"

#: ../source/guides/analyzing-pypi-package-downloads.rst:145
msgid "Package downloads over time"
msgstr "Nombro de pakaj elŝutoj tra tempo"

#: ../source/guides/analyzing-pypi-package-downloads.rst:147
msgid ""
"To group by monthly downloads, use the ``TIMESTAMP_TRUNC`` function. Also "
"filtering by this column reduces corresponding costs."
msgstr ""
"Por grupigi laŭ monatoj, uzu la funkcion ``TIMESTAMP_TRUNC``. Ankaŭ filtrado "
"per tiu kolumno reduktas la koston."

#: ../source/guides/analyzing-pypi-package-downloads.rst:167
msgid "month"
msgstr ""

#: ../source/guides/analyzing-pypi-package-downloads.rst:169
msgid "1956741"
msgstr "1956741"

#: ../source/guides/analyzing-pypi-package-downloads.rst:169
msgid "2018-01-01"
msgstr "2018-01-01"

#: ../source/guides/analyzing-pypi-package-downloads.rst:171
msgid "2344692"
msgstr "2344692"

#: ../source/guides/analyzing-pypi-package-downloads.rst:171
msgid "2017-12-01"
msgstr "2017-12-01"

#: ../source/guides/analyzing-pypi-package-downloads.rst:173
msgid "1730398"
msgstr "1730398"

#: ../source/guides/analyzing-pypi-package-downloads.rst:173
msgid "2017-11-01"
msgstr "2017-11-01"

#: ../source/guides/analyzing-pypi-package-downloads.rst:175
msgid "2047310"
msgstr "2047310"

#: ../source/guides/analyzing-pypi-package-downloads.rst:175
msgid "2017-10-01"
msgstr "2017-10-01"

#: ../source/guides/analyzing-pypi-package-downloads.rst:177
msgid "1744443"
msgstr "1744443"

#: ../source/guides/analyzing-pypi-package-downloads.rst:177
msgid "2017-09-01"
msgstr "2017-09-01"

#: ../source/guides/analyzing-pypi-package-downloads.rst:179
msgid "1916952"
msgstr "1916952"

#: ../source/guides/analyzing-pypi-package-downloads.rst:179
msgid "2017-08-01"
msgstr "2017-08-01"

#: ../source/guides/analyzing-pypi-package-downloads.rst:183
msgid "Python versions over time"
msgstr "Versioj de Python tra tempo"

#: ../source/guides/analyzing-pypi-package-downloads.rst:185
msgid ""
"Extract the Python version from the ``details.python`` column. Warning: This "
"query processes over 500 GB of data."
msgstr ""
"Eltiri la version de Python el la kolumno ``details.python``. Averto: tiu "
"informpeto pritraktas pli ol 500 gigabajtojn da datenoj."

#: ../source/guides/analyzing-pypi-package-downloads.rst:204
msgid "python"
msgstr "python"

#: ../source/guides/analyzing-pypi-package-downloads.rst:206
msgid "3.7"
msgstr "3.7"

#: ../source/guides/analyzing-pypi-package-downloads.rst:206
msgid "18051328726"
msgstr "18051328726"

#: ../source/guides/analyzing-pypi-package-downloads.rst:208
msgid "3.6"
msgstr "3.6"

#: ../source/guides/analyzing-pypi-package-downloads.rst:208
msgid "9635067203"
msgstr "9635067203"

#: ../source/guides/analyzing-pypi-package-downloads.rst:210
msgid "3.8"
msgstr "3.8"

#: ../source/guides/analyzing-pypi-package-downloads.rst:210
msgid "7781904681"
msgstr "7781904681"

#: ../source/guides/analyzing-pypi-package-downloads.rst:212
msgid "2.7"
msgstr "2.7"

#: ../source/guides/analyzing-pypi-package-downloads.rst:212
msgid "6381252241"
msgstr "6381252241"

#: ../source/guides/analyzing-pypi-package-downloads.rst:214
msgid "null"
msgstr ""

#: ../source/guides/analyzing-pypi-package-downloads.rst:214
msgid "2026630299"
msgstr "2026630299"

#: ../source/guides/analyzing-pypi-package-downloads.rst:216
msgid "3.5"
msgstr "3.5"

#: ../source/guides/analyzing-pypi-package-downloads.rst:216
msgid "1894153540"
msgstr "1894153540"

#: ../source/guides/analyzing-pypi-package-downloads.rst:221
msgid "Getting absolute links to artifacts"
msgstr "Akiri absolutajn hiperligojn al artefaktoj"

#: ../source/guides/analyzing-pypi-package-downloads.rst:223
msgid ""
"It's sometimes helpful to be able to get the absolute links to download "
"artifacts from PyPI based on their hashes, e.g. if a particular project or "
"release has been deleted from PyPI. The metadata table includes the ``path`` "
"column, which includes the hash and artifact filename."
msgstr ""
"Fojfoje utilas akiri absolutan hiperligon al elŝutebla artefakto ĉe PyPI per "
"la haketaĵo, ekz. se speciala projekto aŭ eldono estis forviŝita de PyPI. La "
"metadatena tabelo enhavas la kolumnon ``path``, kiu inkluzivas la haketaĵon "
"kaj la artefaktan dosiernomon."

#: ../source/guides/analyzing-pypi-package-downloads.rst:229
msgid ""
"The URL generated here is not guaranteed to be stable, but currently aligns "
"with the URL where PyPI artifacts are hosted."
msgstr ""
"La generita retadreso ne estas stabila, sed aktuale ĝi kongruas kun la "
"retadreso ĉe kiu la PyPI-artefaktoj troviĝas."

#: ../source/guides/analyzing-pypi-package-downloads.rst:242
msgid "url"
msgstr "url"

#: ../source/guides/analyzing-pypi-package-downloads.rst:244
msgid ""
"https://files.pythonhosted.org/packages/"
"eb/45/79be82bdeafcecb9dca474cad4003e32ef8e4a0dec6abbd4145ccb02abe1/"
"sampleproject-1.2.0.tar.gz"
msgstr ""
"https://files.pythonhosted.org/packages/"
"eb/45/79be82bdeafcecb9dca474cad4003e32ef8e4a0dec6abbd4145ccb02abe1/"
"sampleproject-1.2.0.tar.gz"

#: ../source/guides/analyzing-pypi-package-downloads.rst:246
msgid ""
"https://files.pythonhosted.org/"
"packages/56/0a/178e8bbb585ec5b13af42dae48b1d7425d6575b3ff9b02e5ec475e38e1d6/"
"sampleproject_nomura-1.2.0-py2.py3-none-any.whl"
msgstr ""
"https://files.pythonhosted.org/"
"packages/56/0a/178e8bbb585ec5b13af42dae48b1d7425d6575b3ff9b02e5ec475e38e1d6/"
"sampleproject_nomura-1.2.0-py2.py3-none-any.whl"

#: ../source/guides/analyzing-pypi-package-downloads.rst:248
msgid ""
"https://files.pythonhosted.org/"
"packages/63/88/3200eeaf22571f18d2c41e288862502e33365ccbdc12b892db23f51f8e70/"
"sampleproject_nomura-1.2.0.tar.gz"
msgstr ""
"https://files.pythonhosted.org/"
"packages/63/88/3200eeaf22571f18d2c41e288862502e33365ccbdc12b892db23f51f8e70/"
"sampleproject_nomura-1.2.0.tar.gz"

#: ../source/guides/analyzing-pypi-package-downloads.rst:250
msgid ""
"https://files.pythonhosted.org/packages/21/"
"e9/2743311822e71c0756394b6c5ab15cb64ca66c78c6c6a5cd872c9ed33154/"
"sampleproject_doubleyoung18-1.3.0-py2.py3-none-any.whl"
msgstr ""
"https://files.pythonhosted.org/packages/21/"
"e9/2743311822e71c0756394b6c5ab15cb64ca66c78c6c6a5cd872c9ed33154/"
"sampleproject_doubleyoung18-1.3.0-py2.py3-none-any.whl"

#: ../source/guides/analyzing-pypi-package-downloads.rst:252
msgid ""
"https://files.pythonhosted.org/"
"packages/6f/5b/2f3fe94e1c02816fe23c7ceee5292fb186912929e1972eee7fb729fa27af/"
"sampleproject-1.3.1.tar.gz"
msgstr ""
"https://files.pythonhosted.org/"
"packages/6f/5b/2f3fe94e1c02816fe23c7ceee5292fb186912929e1972eee7fb729fa27af/"
"sampleproject-1.3.1.tar.gz"

#: ../source/guides/analyzing-pypi-package-downloads.rst:257
msgid "Caveats"
msgstr "Avertoj"

#: ../source/guides/analyzing-pypi-package-downloads.rst:259
msgid ""
"In addition to the caveats listed in the background above, Linehaul suffered "
"from a bug which caused it to significantly under-report download statistics "
"prior to July 26, 2018. Downloads before this date are proportionally "
"accurate (e.g. the percentage of Python 2 vs. Python 3 downloads) but total "
"numbers are lower than actual by an order of magnitude."
msgstr ""
"Aldone al la avertoj ĉi-supraj, Linehaul suferis de cimo, kiu kaŭzis tre "
"maltroan kalkuladon pri elŝutaj statistikoj antaŭ la 26a de Julio 2018. "
"Elŝutoj antaŭ tiu dato estas proporcie precizaj (ekz. la elcento de Python 2 "
"kontraste al Python 3), sed la reportataj totaloj estas pli-ol-dekoble "
"malgrandaj ol la realaj nombroj."

#: ../source/guides/analyzing-pypi-package-downloads.rst:267
msgid "Additional tools"
msgstr "Pliaj iloj"

#: ../source/guides/analyzing-pypi-package-downloads.rst:269
msgid ""
"Besides using the BigQuery console, there are some additional tools which "
"may be useful when analyzing download statistics."
msgstr ""
"Krom la BigQuery-konzolo, ekzistas kelkaj ceteraj iloj utilaj por analizado "
"de elŝuta statistiko."

#: ../source/guides/analyzing-pypi-package-downloads.rst:273
msgid "``google-cloud-bigquery``"
msgstr "``google-cloud-bigquery``"

#: ../source/guides/analyzing-pypi-package-downloads.rst:275
msgid ""
"You can also access the public PyPI download statistics dataset "
"programmatically via the BigQuery API and the `google-cloud-bigquery`_ "
"project, the official Python client library for BigQuery."
msgstr ""
"Oni ankaŭ povas programe akiri la publikan statistikan datenaron pri elŝutoj "
"el PyPI per la API de BigQuery kaj la projekto `google-cloud-bigquery`_, la "
"oficiala klienta Python-biblioteko por BigQuery."

#: ../source/guides/analyzing-pypi-package-downloads.rst:303
msgid "``pypinfo``"
msgstr "``pypinfo``"

#: ../source/guides/analyzing-pypi-package-downloads.rst:305
msgid ""
"`pypinfo`_ is a command-line tool which provides access to the dataset and "
"can generate several useful queries. For example, you can query the total "
"number of download for a package with the command ``pypinfo package_name``."
msgstr ""
"`pypinfo`_ estas komandlinia ilo por aliri al la datenaro, kapabla generi "
"plurajn utilajn informpetojn. Ekzemple, oni povas pridemandi la totalan "
"nombron de elŝutoj de pako per la komando ``pypinfo paknomo``."

#: ../source/guides/analyzing-pypi-package-downloads.rst:309
msgid "Install `pypinfo`_ using pip."
msgstr "Instalu `pypinfo`_ per pip."

#: ../source/guides/analyzing-pypi-package-downloads.rst:315
msgid "Usage:"
msgstr "Uzado:"

#: ../source/guides/analyzing-pypi-package-downloads.rst:331
msgid "``pandas-gbq``"
msgstr "``pandas-gbq``"

#: ../source/guides/analyzing-pypi-package-downloads.rst:333
msgid ""
"The `pandas-gbq`_ project allows for accessing query results via `Pandas`_."
msgstr ""
"La projekto `pandas-gbq`_ permesas atingi informpetajn rezultojn per "
"`Pandas`_."

#: ../source/guides/analyzing-pypi-package-downloads.rst:337
#: ../source/specifications/dependency-specifiers.rst:535
msgid "References"
msgstr "Referencoj"

#: ../source/guides/analyzing-pypi-package-downloads.rst:339
msgid ""
"`PyPI Download Counts deprecation email <https://mail.python.org/pipermail/"
"distutils-sig/2013-May/020855.html>`__"
msgstr ""
"`Retmesaĝo pri evitindigo de la Kalkuloj de Elŝutoj ĉe PyPI <https://mail."
"python.org/pipermail/distutils-sig/2013-May/020855.html>`__"

#: ../source/guides/analyzing-pypi-package-downloads.rst:340
msgid ""
"`PyPI BigQuery dataset announcement email <https://mail.python.org/pipermail/"
"distutils-sig/2016-May/028986.html>`__"
msgstr ""
"`Retmesaĝo anoncanta datenaron pri PyPI ĉe BigQuery <https://mail.python.org/"
"pipermail/distutils-sig/2016-May/028986.html>`__"

#: ../source/guides/creating-and-discovering-plugins.rst:3
msgid "Creating and discovering plugins"
msgstr "Krei kaj malkovri kromprogramojn"

#: ../source/guides/creating-and-discovering-plugins.rst:5
msgid ""
"Often when creating a Python application or library you'll want the ability "
"to provide customizations or extra features via **plugins**. Because Python "
"packages can be separately distributed, your application or library may want "
"to automatically **discover** all of the plugins available."
msgstr ""
"Ofte dum verkado de programo aŭ biblioteko en Python, oni volas havi la "
"kapablon adapti aŭ aldoni pliajn funkciojn per **kromprogramo**. Ĉar Python-"
"pako estas aparte distribuata, la programo aŭ biblioteko eble volas aŭtomate "
"**malkovri** ĉiujn haveblajn kromprogramojn."

#: ../source/guides/creating-and-discovering-plugins.rst:10
msgid "There are three major approaches to doing automatic plugin discovery:"
msgstr "Ekzistas tri ĉefmanieroj igi kromaĵojn aŭtomate malkovreblaj:"

#: ../source/guides/creating-and-discovering-plugins.rst:12
msgid "`Using naming convention`_."
msgstr "`Uzi nomajn konvenciojn <Using naming convention>`_."

#: ../source/guides/creating-and-discovering-plugins.rst:13
msgid "`Using namespace packages`_."
msgstr "`Uzi nomspacajn pakojn <Using namespace packages>`_."

#: ../source/guides/creating-and-discovering-plugins.rst:14
msgid "`Using package metadata`_."
msgstr "`Uzi pakajn metadatenojn <Using package metadata>`_."

#: ../source/guides/creating-and-discovering-plugins.rst:18
msgid "Using naming convention"
msgstr "Uzi noman konvencion"

#: ../source/guides/creating-and-discovering-plugins.rst:20
msgid ""
"If all of the plugins for your application follow the same naming "
"convention, you can use :func:`pkgutil.iter_modules` to discover all of the "
"top-level modules that match the naming convention. For example, `Flask`_ "
"uses the naming convention ``flask_{plugin_name}``. If you wanted to "
"automatically discover all of the Flask plugins installed:"
msgstr ""

#: ../source/guides/creating-and-discovering-plugins.rst:38
msgid ""
"If you had both the `Flask-SQLAlchemy`_ and `Flask-Talisman`_ plugins "
"installed then ``discovered_plugins`` would be:"
msgstr ""
"Se vi instalis la kromaĵojn `Flask-SQLAlchemy`_ kaj `Flask-Talisman`_, do "
"``discovered_plugins`` estos:"

#: ../source/guides/creating-and-discovering-plugins.rst:48
msgid ""
"Using naming convention for plugins also allows you to query the Python "
"Package Index's :ref:`simple repository API <simple-repository-api>` for all "
"packages that conform to your naming convention."
msgstr ""
"Uzado de nomada konvencio por kromprogramoj permesas serĉi la :ref:`simplan "
"deponejan API-on <simple-repository-api>` de la Python-Pakindekso por ĉiuj "
"pakoj observantaj la nomandan konvencion."

#: ../source/guides/creating-and-discovering-plugins.rst:58
msgid "Using namespace packages"
msgstr "Uzi nomspacajn pakojn"

#: ../source/guides/creating-and-discovering-plugins.rst:60
msgid ""
":doc:`Namespace packages <packaging-namespace-packages>` can be used to "
"provide a convention for where to place plugins and also provides a way to "
"perform discovery. For example, if you make the sub-package ``myapp."
"plugins`` a namespace package then other :term:`distributions <Distribution "
"Package>` can provide modules and packages to that namespace. Once "
"installed, you can use :func:`pkgutil.iter_modules` to discover all modules "
"and packages installed under that namespace:"
msgstr ""
"Oni povas uzi :doc:`nomspacan pakon <packaging-namespace-packages>` por "
"starigi konvencion pri la lokoj de kromprogramoj kaj por trovi "
"kromprogramojn. Ekzemple, se oni igas la subpakon ``myapp.plugins`` nomspaca "
"pako, do alia :term:`distribuo <Distribution Package>` povas disponigi "
"modulojn kaj pakojn al tiu nomspaco. Post instalo, oni povas uzi :func:"
"`pkgutil.iter_modules` por trovi ĉiujn modulojn kaj pakojn instalitajn sub "
"tiu nomspaco:"

#: ../source/guides/creating-and-discovering-plugins.rst:88
msgid ""
"Specifying ``myapp.plugins.__path__`` to :func:`~pkgutil.iter_modules` "
"causes it to only look for the modules directly under that namespace. For "
"example, if you have installed distributions that provide the modules "
"``myapp.plugins.a`` and ``myapp.plugins.b`` then ``discovered_plugins`` in "
"this case would be:"
msgstr ""
"Specifado de ``myapp.plugins.__path__`` al :func:`~pkgutil.iter_modules` "
"kaŭzas serĉadon de moduloj rekte sub tiu nomspaco. Ekzemple, se oni instalus "
"distribuojn provizante la modulojn ``myapp.plugins.a`` kaj ``myapp.plugins."
"b``, do ``discovered_plugins`` estus la jeno:"

#: ../source/guides/creating-and-discovering-plugins.rst:100
msgid ""
"This sample uses a sub-package as the namespace package (``myapp.plugins``), "
"but it's also possible to use a top-level package for this purpose (such as "
"``myapp_plugins``). How to pick the namespace to use is a matter of "
"preference, but it's not recommended to make your project's main top-level "
"package (``myapp`` in this case) a namespace package for the purpose of "
"plugins, as one bad plugin could cause the entire namespace to break which "
"would in turn make your project unimportable. For the \"namespace sub-"
"package\" approach to work, the plugin packages must omit the :file:"
"`__init__.py` for your top-level package directory (``myapp`` in this case) "
"and include the namespace-package style :file:`__init__.py` in the namespace "
"sub-package directory (``myapp/plugins``).  This also means that plugins "
"will need to explicitly pass a list of packages to :func:`setup`'s "
"``packages`` argument instead of using :func:`setuptools.find_packages`."
msgstr ""
"Ĉi tiu ekzemplo uzas subpakon kiel la nomspacan pakon (``myapp.plugins``), "
"sed ankaŭ eblas uzi supranivelan pakon por tiu celo (ekzemple "
"``myapp_plugins``). Elektado de la uzota nomspaco laŭ onia gusto, sed ne "
"estas rekomendata igi la ĉefan supranivelan pakon (``myapp`` en la ekzemplo) "
"nomspaca pako pro kromprogramoj, ĉar unu aĉa kromprogramo rompus la plenan "
"nomspacon, malimportebligante vian projekton. Por la maniero «nomspaca "
"subpako», kromprograma pako devas ne inkluzivi la :file:`__init__.py` por la "
"supranivela paka dosierujo (``myapp`` en la ekzemplo) kaj inkluzivi la "
"nomspacpako-stilan :file:`__init__.py` en la nomspaca subpaka dosierujo "
"(``myapp/plugins``).  Tio ankaŭ implicas, ke kromprogramo devas eksplicite "
"doni liston de pakoj kiel la argumenton ``packages`` de :func:`setup`, "
"anstataŭ uzi :func:`setuptools.find_packages`."

#: ../source/guides/creating-and-discovering-plugins.rst:114
msgid ""
"Namespace packages are a complex feature and there are several different "
"ways to create them. It's highly recommended to read the :doc:`packaging-"
"namespace-packages` documentation and clearly document which approach is "
"preferred for plugins to your project."
msgstr ""
"Nomspaca pako estas komplika funkcio, kaj estas pluraj malsamaj manieroj "
"krei iĝin. Estas rekomendegate legi la dokumentaron :doc:`packaging-"
"namespace-packages` kaj klare dokumenti la preferatan manieron por "
"kromprogramoj de via projekto."

#: ../source/guides/creating-and-discovering-plugins.rst:122
msgid "Using package metadata"
msgstr "Uzi pakajn metadatenojn"

#: ../source/guides/creating-and-discovering-plugins.rst:124
msgid ""
"Packages can have metadata for plugins described in the :ref:`entry-points`. "
"By specifying them, a package announces that it contains a specific kind of "
"plugin. Another package supporting this kind of plugin can use the metadata "
"to discover that plugin."
msgstr ""
"Pako povas enhavi metadatenojn pri kromprogramoj per :ref:`entry-points`. "
"Per tio, pako anoncas, ke ĝi enhavas ian kromprogramon. Alia pako subtenanta "
"tian kromprogramon povas uzi la metadatenojn por trovi tiun kromprogramon."

#: ../source/guides/creating-and-discovering-plugins.rst:128
msgid ""
"For example if you have a package named ``myapp-plugin-a`` and it includes "
"the following in its ``pyproject.toml``:"
msgstr ""
"Ekzemple, se vi havas pakon nomitan ``myapp-plugin-a``, kies ``pyproject."
"toml`` enhavas la jenon:"

#: ../source/guides/creating-and-discovering-plugins.rst:136
msgid ""
"Then you can discover and load all of the registered entry points by using :"
"func:`importlib.metadata.entry_points` (or the backport_ "
"``importlib_metadata >= 3.6`` for Python 3.6-3.9):"
msgstr ""
"Do oni povas serĉi kaj ŝargi ĉiujn registritajn enirpunktojn per :func:"
"`importlib.metadata.entry_points` (aŭ la `retroporto <backport>`_ "
"``importlib_metadata >= 3.6`` por Python 3.6 – 3.9):"

#: ../source/guides/creating-and-discovering-plugins.rst:151
msgid ""
"In this example, ``discovered_plugins`` would be a collection of type :class:"
"`importlib.metadata.EntryPoint`:"
msgstr ""
"En ĉi tiu ekzemplo, ``discovered_plugins`` estas kolekto de la tipo :class:"
"`importlib.metadata.EntryPoint`:"

#: ../source/guides/creating-and-discovering-plugins.rst:160
msgid ""
"Now the module of your choice can be imported by executing "
"``discovered_plugins['a'].load()``."
msgstr ""
"Nun via elektita modulo estas importebla per ``discovered_plugins['a']."
"load()``."

#: ../source/guides/creating-and-discovering-plugins.rst:163
msgid ""
"The ``entry_point`` specification in :file:`setup.py` is fairly flexible and "
"has a lot of options. It's recommended to read over the entire section on :"
"doc:`entry points <setuptools:userguide/entry_point>` ."
msgstr ""
"La specifo de ``entry_point`` en :file:`setup.py` estas fleksebla kaj opcio-"
"plena. Estas rekomendate tralegi la paragrafon pri :doc:`enirpunktoj "
"<setuptools:userguide/entry_point>` ."

#: ../source/guides/creating-and-discovering-plugins.rst:167
msgid ""
"Since this specification is part of the :doc:`standard library <python:"
"library/importlib.metadata>`, most packaging tools other than setuptools "
"provide support for defining entry points."
msgstr ""
"Ĉar ĉi tiu specifo estas parto de la :doc:`norma biblioteko <python:library/"
"importlib.metadata>`, multaj iloj krom setuptools subtenas difinadon de "
"enirpunktoj."

#: ../source/guides/creating-command-line-tools.rst:5
msgid "Creating and packaging command-line tools"
msgstr "Krei kaj paki komandliniajn programojn"

#: ../source/guides/creating-command-line-tools.rst:7
msgid ""
"This guide will walk you through creating and packaging a standalone command-"
"line application that can be installed with :ref:`pipx`, a tool for creating "
"and managing :term:`Python Virtual Environments <Virtual Environment>` and "
"exposing the executable scripts of packages (and available manual pages) for "
"use on the command-line."
msgstr ""

#: ../source/guides/creating-command-line-tools.rst:12
msgid "Creating the package"
msgstr "Krei la pakon"

#: ../source/guides/creating-command-line-tools.rst:14
msgid ""
"First of all, create a source tree for the :term:`project <Project>`. For "
"the sake of an example, we'll build a simple tool outputting a greeting (a "
"string) for a person based on arguments given on the command-line."
msgstr ""
"Unue, kreu fontarbon por la :term:`projekto <Project>`. Kiel ekzemplo, ni "
"verkos simplan ilon eligantan tekstan saluton dependantan de komandliniaj "
"argumentoj."

#: ../source/guides/creating-command-line-tools.rst:17
#: ../source/guides/tool-recommendations.rst:45
msgid "Todo"
msgstr "FIXME"

#: ../source/guides/creating-command-line-tools.rst:17
msgid ""
"Advise on the optimal structure of a Python package in another guide or "
"discussion and link to it here."
msgstr ""
"Konsili pri la optimuma strukturo de Python-pako en alia gvidilo aŭ diskuto "
"kaj ligi al ĝi ĉi tie."

#: ../source/guides/creating-command-line-tools.rst:19
msgid ""
"This project will adhere to :ref:`src-layout <src-layout-vs-flat-layout>` "
"and in the end be alike this file tree, with the top-level folder and "
"package name ``greetings``:"
msgstr ""
"Ĉi tiu projekto sekvos la :ref:`src-aranĝon <src-layout-vs-flat-layout>` kaj "
"similas la jenan dosierarbon, kun supranivela dosierujo (kaj paknomo) nomita "
"``greetings``:"

#: ../source/guides/creating-command-line-tools.rst:33
msgid ""
"The actual code responsible for the tool's functionality will be stored in "
"the file :file:`greet.py`, named after the main module:"
msgstr ""
"La reala kodo respondeca por la funkciado de la ilo troviĝos en la dosiero :"
"file:`greet.py`, nomita laŭ la ĉefmodulo:"

#: ../source/guides/creating-command-line-tools.rst:62
msgid ""
"The above function receives several keyword arguments that determine how the "
"greeting to output is constructed. Now, construct the command-line interface "
"to provision it with the same, which is done in :file:`cli.py`:"
msgstr ""
"La ĉi-supra funkcio ricevas plurajn ŝlosilvortajn argumentojn pri konstruado "
"de la saluto. Nun, konstruu la komandlinian fasadon kun la samaj argumentoj "
"en :file:`cli.py`:"

#: ../source/guides/creating-command-line-tools.rst:80
msgid ""
"The command-line interface is built with typer_, an easy-to-use CLI parser "
"based on Python type hints. It provides auto-completion and nicely styled "
"command-line help out of the box. Another option would be :py:mod:"
"`argparse`, a command-line parser which is included in Python's standard "
"library. It is sufficient for most needs, but requires a lot of code, "
"usually in ``cli.py``, to function properly. Alternatively, docopt_ makes it "
"possible to create CLI interfaces based solely on docstrings; advanced users "
"are encouraged to make use of click_ (on which ``typer`` is based)."
msgstr ""
"La komandlinia fasado estas konstruita per typer_, kiu estas facile uzebla "
"komandlinia argumentanalizilo uzante tipo-konsiletoj de Python. Ĝi provizas "
"aŭtomatan kompletigon kaj bone aranĝitan komandlinian helpon senmodife. Alia "
"opcio estus :py:mod:`argparse`, kiu estas komandlinia argumentanalizilo "
"inkluzivita en la norma biblioteko de Python. Ĝi sufiĉas por la plejparto de "
"bezonoj, sed postulas multe da kodo, ofte en ``cli.py``, por bona funkciado. "
"Alterntaive, docopt_ kreas komandlinian fasadon nur per docstring; altnivela "
"uzanto uzu click_ (sur kiu ``typer`` estas bazita)."

#: ../source/guides/creating-command-line-tools.rst:86
msgid ""
"Now, add an empty :file:`__init__.py` file, to define the project as a "
"regular :term:`import package <Import Package>`."
msgstr ""
"Nun, aldonu malplenan dosieron :file:`__init__.py`, por marki la projekton "
"kiel ordinaran :term:`importan pakon <Import Package>`."

#: ../source/guides/creating-command-line-tools.rst:88
#, fuzzy
#| msgid ""
#| "The file :file:`__main__.py` marks the main entry point for the "
#| "application when running it via :mod:`runpy` (i.e. ``python -m "
#| "greetings``, which works immediately with flat layout, but requires "
#| "installation of the package with src layout), so initizalize the command-"
#| "line interface here:"
msgid ""
"The file :file:`__main__.py` marks the main entry point for the application "
"when running it via :mod:`runpy` (i.e. ``python -m greetings``, which works "
"immediately with flat layout, but requires installation of the package with "
"src layout), so initialize the command-line interface here:"
msgstr ""
"La dosiero :file:`__main__.py` estas la ĉefenirpunkto de la programo, kial "
"ĝi ruliĝas per :mod:`runpy` (t.e. ``python -m greetings``, kiu funkcias tuj "
"kun plata aranĝo sed postulas instaladon kun src-aranĝo). Tial, starigu la "
"komandlinian fasadon ĉi tie:"

#: ../source/guides/creating-command-line-tools.rst:100
msgid ""
"In order to enable calling the command-line interface directly from the :"
"term:`source tree <Project Source Tree>`, i.e. as ``python src/greetings``, "
"a certain hack could be placed in this file; read more at :ref:`running-cli-"
"from-source-src-layout`."
msgstr ""
"Por ebligi uzadon de la komandlinia fasado rekte de la :term:`fontarbo "
"<Project Source Tree>`, ekzemple kiel ``python src/greetings``, oni povas "
"meti trukon en tiun dosieron; legu pri tio en :ref:`running-cli-from-source-"
"src-layout`."

#: ../source/guides/creating-command-line-tools.rst:106
msgid "``pyproject.toml``"
msgstr "``pyproject.toml``"

#: ../source/guides/creating-command-line-tools.rst:108
msgid ""
"The project's :term:`metadata <Pyproject Metadata>` is placed in :term:"
"`pyproject.toml`. The :term:`pyproject metadata keys <Pyproject Metadata "
"Key>` and the ``[build-system]`` table may be filled in as described in :ref:"
"`writing-pyproject-toml`, adding a dependency on ``typer`` (this tutorial "
"uses version *0.12.3*)."
msgstr ""
"La projektaj :term:`metadatenoj <Pyproject Metadata>` troviĝas en :term:"
"`pyproject.toml`. La :term:`metadatenaj ŝlosiloj pyproject <Pyproject "
"Metadata Key>` kaj la tabelo ``[build-system]`` estu laŭ :ref:`writing-"
"pyproject-toml`, kun dependeco sur ``typer`` (ĉi tiu lernilo uzas la version "
"*0.12.3*)."

#: ../source/guides/creating-command-line-tools.rst:111
msgid ""
"For the project to be recognised as a command-line tool, additionally a "
"``console_scripts`` :ref:`entry point <entry-points>` (see :ref:"
"`console_scripts`) needs to be added as a :term:`subkey <Pyproject Metadata "
"Subkey>`:"
msgstr ""
"Por ke la projekto estu rekonebla kiel komandlinia ilo, krome la :ref:"
"`enirpunkto <entry-points>` ``console_scripts`` (vidu :ref:"
"`console_scripts`) devas esti aldonita kiel :term:`subŝlosilo <Pyproject "
"Metadata Subkey>`:"

#: ../source/guides/creating-command-line-tools.rst:118
msgid ""
"Now, the project's source tree is ready to be transformed into a :term:"
"`distribution package <Distribution Package>`, which makes it installable."
msgstr ""
"Nun, la fontarbo de la projekto pretas transformiĝi en instaleblan :term:"
"`distribuan pakon <Distribution Package>`."

#: ../source/guides/creating-command-line-tools.rst:123
msgid "Installing the package with ``pipx``"
msgstr "Instali la pakon per ``pipx``"

#: ../source/guides/creating-command-line-tools.rst:125
msgid ""
"After installing ``pipx`` as described in :ref:`installing-stand-alone-"
"command-line-tools`, install your project:"
msgstr ""
"Post instalo de ``pipx`` laŭ :ref:`installing-stand-alone-command-line-"
"tools`, instalu vian projekton:"

#: ../source/guides/creating-command-line-tools.rst:132
msgid ""
"This will expose the executable script we defined as an entry point and make "
"the command ``greet`` available. Let's test it:"
msgstr ""
"Tio difinos la ruleblan programon kiel enirpunkton kaj disponigos la "
"komandon ``greet``. Ni elprovu:"

#: ../source/guides/creating-command-line-tools.rst:146
msgid ""
"Since this example uses ``typer``, you could now also get an overview of the "
"program's usage by calling it with the ``--help`` option, or configure "
"completions via the ``--install-completion`` option."
msgstr ""
"Ĉar ĉi tiu ekzemplo uzas ``typer``, oni povas nun superrigardi la opciojn de "
"la programo per la flago ``--help`` aŭ agordi kompletigadon per la flago ``--"
"install-completion``."

#: ../source/guides/creating-command-line-tools.rst:149
msgid ""
"To just run the program without installing it permanently, use ``pipx run``, "
"which will create a temporary (but cached) virtual environment for it:"
msgstr ""
"Por simple ruli la programon sen malprovizora instalado, uzu ``pipx run``, "
"kiu kreos provizoran (sed enkaŝmemorigitan) virtualan medion por ĝi:"

#: ../source/guides/creating-command-line-tools.rst:156
#, fuzzy
#| msgid ""
#| "This syntax is a bit unpractical, however; as the name of the entry point "
#| "we defined above does not match the package name, we need to state "
#| "explicitly which executable script to run (even though there is only on "
#| "in existence)."
msgid ""
"This syntax is a bit impractical, however; as the name of the entry point we "
"defined above does not match the package name, we need to state explicitly "
"which executable script to run (even though there is only on in existence)."
msgstr ""
"Tamen, tiu sintakso estas praktike netaŭga: ĉar la nomo de la enirpunkto "
"difinita ĉi-supre ne egalas la nomon de la pako, ni devas eksplici la "
"rulotan programon (malgraŭ la ekzisto de nur unu)."

#: ../source/guides/creating-command-line-tools.rst:159
msgid ""
"There is, however, a more practical solution to this problem, in the form of "
"an entry point specific to ``pipx run``. The same can be defined as follows "
"in :file:`pyproject.toml`:"
msgstr ""
"Tamen ekzistas pli praktika solvo de tiu problemo: enirpunkto specifa al "
"``pipx run``. La sama estas difinebla jene en :file:`pyproject.toml`:"

#: ../source/guides/creating-command-line-tools.rst:168
msgid ""
"Thanks to this entry point (which *must* match the package name), ``pipx`` "
"will pick up the executable script as the default one and run it, which "
"makes this command possible:"
msgstr ""
"Dank’ al tiu enirpunkto (kiu *devas* kongrui kun la nomo de la pako), "
"``pipx`` trovos la ruleblan programon kiel la implicitaĵon kaj rulos ĝin. "
"Tio ebligas la jenan komandon:"

#: ../source/guides/creating-command-line-tools.rst:176
msgid "Conclusion"
msgstr "Konkludo"

#: ../source/guides/creating-command-line-tools.rst:178
msgid ""
"You know by now how to package a command-line application written in Python. "
"A further step could be to distribute your package, meaning uploading it to "
"a :term:`package index <Package Index>`, most commonly :term:`PyPI <Python "
"Package Index (PyPI)>`. To do that, follow the instructions at :ref:"
"`Packaging your project`. And once you're done, don't forget to :ref:`do "
"some research <analyzing-pypi-package-downloads>` on how your package is "
"received!"
msgstr ""

#: ../source/guides/distributing-packages-using-setuptools.rst:5
msgid "Packaging and distributing projects"
msgstr "Paki kaj distribui projektojn"

#: ../source/guides/distributing-packages-using-setuptools.rst:7
msgid "Outdated"
msgstr "Eksvalidiĝinta"

#: ../source/guides/distributing-packages-using-setuptools.rst:8
msgid "2023-12-14"
msgstr "14 Decembro 2023"

#: ../source/guides/distributing-packages-using-setuptools.rst:10
msgid ""
"This section covers some additional details on configuring, packaging and "
"distributing Python projects with ``setuptools`` that aren't covered by the "
"introductory tutorial in :doc:`/tutorials/packaging-projects`.  It still "
"assumes that you are already familiar with the contents of the :doc:`/"
"tutorials/installing-packages` page."
msgstr ""
"Ĉi tiu paragrafo diskutas pliajn detalojn pri agordado, pakado kaj "
"distribuado de Python-projektoj per ``setuptools`` ne menciitajn en la "
"enkonduka lernilo en :doc:`/tutorials/packaging-projects`. Ĝi supozas, ke vi "
"jam konas la enhavon de la paĝo :doc:`/tutorials/installing-packages`."

#: ../source/guides/distributing-packages-using-setuptools.rst:16
msgid ""
"The section does *not* aim to cover best practices for Python project "
"development as a whole.  For example, it does not provide guidance or tool "
"recommendations for version control, documentation, or testing."
msgstr ""
"Ĉi tiu paragrafo *ne* celas rekomendi pri ĉiaj aspektoj de Python-"
"projektoj.  Ekzemple, ĝi ne rekomendas ion ajn aŭ iun ajn ilon pri versio-"
"kontrolado, dokumentaro aŭ testado."

#: ../source/guides/distributing-packages-using-setuptools.rst:20
msgid ""
"For more reference material, see :std:doc:`Building and Distributing "
"Packages <setuptools:userguide/index>` in the :ref:`setuptools` docs, but "
"note that some advisory content there may be outdated. In the event of "
"conflicts, prefer the advice in the Python Packaging User Guide."
msgstr ""
"Por pli da referencaj informoj, vidu :std:doc:`Building and Distributing "
"Packages <setuptools:userguide/index>` en la dokumentaro de :ref:"
"`setuptools`, sed notu, ke tieaj konsiloj povas esti eksvalidiĝinta. Se "
"ekzistas neakordo, preferu la konsilojn en la Manlibro por Python-Uzantoj "
"pri Pakado."

#: ../source/guides/distributing-packages-using-setuptools.rst:28
msgid "Requirements for packaging and distributing"
msgstr "Postuloj por pakado kaj distribuado"

#: ../source/guides/distributing-packages-using-setuptools.rst:29
msgid ""
"First, make sure you have already fulfilled the :ref:`requirements for "
"installing packages <installing_requirements>`."
msgstr ""
"Unue certigu, ke vi jam plenumis la :ref:`postulojn por instali pakojn "
"<installing_requirements>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:32
msgid "Install \"twine\" [1]_:"
msgstr "Instali «twine» [1]_:"

#: ../source/guides/distributing-packages-using-setuptools.rst:46
msgid ""
"You'll need this to upload your project :term:`distributions <Distribution "
"Package>` to :term:`PyPI <Python Package Index (PyPI)>` (see :ref:`below "
"<Uploading your Project to PyPI>`)."
msgstr ""
"Vi postulas tiun por alŝuti viajn projektajn :term:`distribuojn "
"<Distribution Package>` al :term:`PyPI <Python Package Index (PyPI)>` (vidu :"
"ref:`ĉi-sube <Uploading your Project to PyPI>`)."

#: ../source/guides/distributing-packages-using-setuptools.rst:52
msgid "Configuring your project"
msgstr "Agordi vian projekton"

#: ../source/guides/distributing-packages-using-setuptools.rst:56
msgid "Initial files"
msgstr "Komencaj dosieroj"

#: ../source/guides/distributing-packages-using-setuptools.rst:61
msgid ""
"The most important file is :file:`setup.py` which exists at the root of your "
"project directory. For an example, see the `setup.py <https://github.com/"
"pypa/sampleproject/blob/db5806e0a3204034c51b1c00dde7d5eb3fa2532e/setup.py>`_ "
"in the `PyPA sample project <https://github.com/pypa/sampleproject>`_."
msgstr ""
"La plej grava dosiero estas :file:`setup.py` ĉe la radiko de via projekta "
"dosierujo. Por ekzemplo, vidu `setup.py <https://github.com/pypa/"
"sampleproject/blob/db5806e0a3204034c51b1c00dde7d5eb3fa2532e/setup.py>`_ en "
"la `ekzempla projekto de PyPA <https://github.com/pypa/sampleproject>`_."

#: ../source/guides/distributing-packages-using-setuptools.rst:66
msgid ":file:`setup.py` serves two primary functions:"
msgstr ":file:`setup.py` havas du ĉeffunkciojn:"

#: ../source/guides/distributing-packages-using-setuptools.rst:68
msgid ""
"It's the file where various aspects of your project are configured. The "
"primary feature of :file:`setup.py` is that it contains a global ``setup()`` "
"function.  The keyword arguments to this function are how specific details "
"of your project are defined.  The most relevant arguments are explained in :"
"ref:`the section below <setup() args>`."
msgstr ""

#: ../source/guides/distributing-packages-using-setuptools.rst:74
msgid ""
"It's the command line interface for running various commands that relate to "
"packaging tasks. To get a listing of available commands, run ``python3 setup."
"py --help-commands``."
msgstr ""
"Ĝi estas la komandlinian fasadon por rulado de diversaj komandoj pri pakado. "
"Por listo de haveblaj komandoj, rulu ``python3 setup.py --help-commands``."

#: ../source/guides/distributing-packages-using-setuptools.rst:82
msgid ""
":file:`setup.cfg` is an ini file that contains option defaults for :file:"
"`setup.py` commands.  For an example, see the `setup.cfg <https://github.com/"
"pypa/sampleproject/blob/db5806e0a3204034c51b1c00dde7d5eb3fa2532e/setup."
"cfg>`_ in the `PyPA sample project <https://github.com/pypa/sampleproject>`_."
msgstr ""
":file:`setup.cfg` estas ini-dosiero enhavanta implicitajn valorojn de opcioj "
"por la komandoj de :file:`setup.py`.  Por ekzemplo, vidu `setup.cfg <https://"
"github.com/pypa/sampleproject/blob/db5806e0a3204034c51b1c00dde7d5eb3fa2532e/"
"setup.cfg>`_ en la `ekzempla projekto de PyPA <https://github.com/pypa/"
"sampleproject>`_."

#: ../source/guides/distributing-packages-using-setuptools.rst:89
msgid "README.rst / README.md"
msgstr "README.rst / README.md"

#: ../source/guides/distributing-packages-using-setuptools.rst:91
msgid ""
"All projects should contain a readme file that covers the goal of the "
"project. The most common format is `reStructuredText <https://docutils."
"sourceforge.io/rst.html>`_ with an \"rst\" extension, although this is not a "
"requirement; multiple variants of `Markdown <https://daringfireball.net/"
"projects/markdown/>`_ are supported as well (look at ``setup()``'s :ref:"
"`long_description_content_type <description>` argument)."
msgstr ""
"Ĉiu projekto enhavo readme-dosieron pri la celoj de la projekto. La plej "
"ofta dosierformo estas `reStructuredText <https://docutils.sourceforge.io/"
"rst.html>`_ kun dosiersufikso ``.rst``, sed tio ne estas deviga. Pluraj "
"variantoj de `Markdown <https://daringfireball.net/projects/markdown/>`_ "
"estas ankaŭ subtenataj (vidu la argumenton :ref:"
"`long_description_content_type <description>` de ``setup()``)."

#: ../source/guides/distributing-packages-using-setuptools.rst:98
msgid ""
"For an example, see `README.md <https://github.com/pypa/sampleproject/blob/"
"main/README.md>`_ from the `PyPA sample project <https://github.com/pypa/"
"sampleproject>`_."
msgstr ""
"Por ekzemplo, vidu `README.md <https://github.com/pypa/sampleproject/blob/"
"main/README.md>`_ en la `ekzempla projekto de PyPA <https://github.com/pypa/"
"sampleproject>`_."

#: ../source/guides/distributing-packages-using-setuptools.rst:102
msgid ""
"Projects using :ref:`setuptools` 0.6.27+ have standard readme files (:file:"
"`README.rst`, :file:`README.txt`, or :file:`README`) included in source "
"distributions by default. The built-in :ref:`distutils` library adopts this "
"behavior beginning in Python 3.7. Additionally, :ref:`setuptools` 36.4.0+ "
"will include a :file:`README.md` if found. If you are using setuptools, you "
"don't need to list your readme file in :file:`MANIFEST.in`. Otherwise, "
"include it to be explicit."
msgstr ""
"Projekto uzanta :ref:`setuptools` 0.6.27+ havas normajn README-dosierojn (:"
"file:`README.rst`, :file:`README.txt`, aŭ :file:`README`) inkluzivitajn en "
"fonta distribuo implicite. La norma biblioteok :ref:`distutils` adoptas tiun "
"konduton ekde Python 3.7. Plie, :ref:`setuptools` 36.4.0+ inkluzivas :file:"
"`README.md`, se ĝi troviĝas. Se oni uzas setuptools, oni ne bezonas "
"inkluzivi la README-dosieron en :file:`MANIFEST.in`. Se ne, inkluzivu ĝin "
"eksplicite."

#: ../source/guides/distributing-packages-using-setuptools.rst:111
msgid "MANIFEST.in"
msgstr "MANIFEST.in"

#: ../source/guides/distributing-packages-using-setuptools.rst:113
msgid ""
"A :file:`MANIFEST.in` is needed when you need to package additional files "
"that are not automatically included in a source distribution.  For details "
"on writing a :file:`MANIFEST.in` file, including a list of what's included "
"by default, see \":ref:`Using MANIFEST.in`\"."
msgstr ""
":file:`MANIFEST.in` necesas, kiam oni bezonas paki pliajn dosierojn ne "
"aŭtomate inkluzivotajn en fontan distribuon. Por detaloj pri verkado de :"
"file:`MANIFEST.in`, inkluzive de listo de aŭtomate inkluzivotaj dosieroj, "
"vidu :ref:`Uzi MANIFEST.in <Using MANIFEST.in>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:118
msgid ""
"However, you may not have to use a :file:`MANIFEST.in`. For an example, the "
"`PyPA sample project <https://github.com/pypa/sampleproject>`_ has removed "
"its manifest file, since all the necessary files have been included by :ref:"
"`setuptools` 43.0.0 and newer."
msgstr ""
"Tamen, oni ne devas uzi :file:`MANIFEST.in`. Ekzemple, la `ekzempla projekto "
"de PyPA <https://github.com/pypa/sampleproject>`_ ne plu havas :file:"
"`MANIFEST.in`, ĉar ĉiaj necesaj dosieroj inkluziviĝas en :ref:`setuptools` "
"ekde versio 43.0.0."

#: ../source/guides/distributing-packages-using-setuptools.rst:123
msgid ""
":file:`MANIFEST.in` does not affect binary distributions such as wheels."
msgstr ":file:`MANIFEST.in` ne rilatas al duuma distribuo kiel wheel."

#: ../source/guides/distributing-packages-using-setuptools.rst:126
msgid "LICENSE.txt"
msgstr "LICENSE.txt"

#: ../source/guides/distributing-packages-using-setuptools.rst:128
msgid ""
"Every package should include a license file detailing the terms of "
"distribution. In many jurisdictions, packages without an explicit license "
"can not be legally used or distributed by anyone other than the copyright "
"holder. If you're unsure which license to choose, you can use resources such "
"as `GitHub's Choose a License <https://choosealicense.com/>`_ or consult a "
"lawyer."
msgstr ""
"Ĉiu pako havu licenco-dosieron pri la kondiĉoj de distribuado. En multaj "
"jurisdikcioj, pako sen eksplicita licenco ne estas uzebla nek distribuebla "
"far iu alia ol la kopirajto-posedanto. Se vi ne certas pri la licenco, vidu "
"`Choose a License <https://choosealicense.com/>`_ de GitHub, aŭ konsultu "
"advokaton."

#: ../source/guides/distributing-packages-using-setuptools.rst:134
msgid ""
"For an example, see the `LICENSE.txt <https://github.com/pypa/sampleproject/"
"blob/main/LICENSE.txt>`_ from the `PyPA sample project <https://github.com/"
"pypa/sampleproject>`_."
msgstr ""
"Por ekzemplo, vidu `LICENSE.txt <https://github.com/pypa/sampleproject/blob/"
"main/LICENSE.txt>`_ en la `ekzempla projekto de PyPA <https://github.com/"
"pypa/sampleproject>`_."

#: ../source/guides/distributing-packages-using-setuptools.rst:139
msgid "<your package>"
msgstr "<via pako>"

#: ../source/guides/distributing-packages-using-setuptools.rst:141
msgid ""
"Although it's not required, the most common practice is to include your "
"Python modules and packages under a single top-level package that has the "
"same :ref:`name <setup() name>` as your project, or something very close."
msgstr ""
"Tamen tio ne necesas, la ofta praktiko estas inkluzivi Python-modulojn kaj "
"pakojn sub unu supranivela pako, kies nomo estas sama kiel (aŭ tre proksima "
"al) la :ref:`nomo <setup() name>` de via projekto."

#: ../source/guides/distributing-packages-using-setuptools.rst:145
msgid ""
"For an example, see the `sample <https://github.com/pypa/sampleproject/tree/"
"main/src/sample>`_ package that's included in the `PyPA sample project "
"<https://github.com/pypa/sampleproject>`_."
msgstr ""
"Por ekzemplo, vidu la pakon `sample <https://github.com/pypa/sampleproject/"
"tree/main/src/sample>`_ en la `ekzempla projekto de PyPA <https://github.com/"
"pypa/sampleproject>`_."

#: ../source/guides/distributing-packages-using-setuptools.rst:153
msgid "setup() args"
msgstr "argumentoj por setup()"

#: ../source/guides/distributing-packages-using-setuptools.rst:155
msgid ""
"As mentioned above, the primary feature of :file:`setup.py` is that it "
"contains a global ``setup()`` function.  The keyword arguments to this "
"function are how specific details of your project are defined."
msgstr ""
"Kiel menciite ĉi-supre, la ĉeftrajto de :file:`setup.py` estas, ke ĝi "
"enhavas mallokan funkcion ``setup()``.  La ŝlosilvortaj argumentoj de tiu "
"funkcio difinas la detalojn de la projekto."

#: ../source/guides/distributing-packages-using-setuptools.rst:159
msgid ""
"Some are temporarily explained below until their information is moved "
"elsewhere. The full list can be found :doc:`in the setuptools documentation "
"<setuptools:references/keywords>`."
msgstr ""
"Kelkaj estas provizore klarigitaj ĉi-sube, ĝis kiam la informoj moviĝas "
"aliloken. La plena listo ĉeestas :doc:`ĉe la dokumentaro de setuptools "
"<setuptools:references/keywords>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:163
msgid ""
"Most of the snippets given are taken from the `setup.py <https://github.com/"
"pypa/sampleproject/blob/db5806e0a3204034c51b1c00dde7d5eb3fa2532e/setup.py>`_ "
"contained in the `PyPA sample project <https://github.com/pypa/"
"sampleproject>`_."
msgstr ""
"Plejparto de la ekzemploj devenas de `setup.py <https://github.com/pypa/"
"sampleproject/blob/db5806e0a3204034c51b1c00dde7d5eb3fa2532e/setup.py>`_ en "
"la `ekzempla projekto de PyPA <https://github.com/pypa/sampleproject>`_."

#: ../source/guides/distributing-packages-using-setuptools.rst:170
msgid ""
"See :ref:`Choosing a versioning scheme` for more information on ways to use "
"versions to convey compatibility information to your users."
msgstr ""
"Vidu :ref:`Elekti versian skemon <Choosing a versioning scheme>` por pli pri "
"kiel uzi version por komuniki informojn pri kongrueco al uzantoj."

#: ../source/guides/distributing-packages-using-setuptools.rst:177
msgid "``packages``"
msgstr "``packages``"

#: ../source/guides/distributing-packages-using-setuptools.rst:183
msgid ""
"Set ``packages`` to a list of all :term:`packages <Import Package>` in your "
"project, including their subpackages, sub-subpackages, etc.  Although the "
"packages can be listed manually, ``setuptools.find_packages()`` finds them "
"automatically.  Use the ``include`` keyword argument to find only the given "
"packages.  Use the ``exclude`` keyword argument to omit packages that are "
"not intended to be released and installed."
msgstr ""

#: ../source/guides/distributing-packages-using-setuptools.rst:192
msgid "``py_modules``"
msgstr "``py_modules``"

#: ../source/guides/distributing-packages-using-setuptools.rst:198
msgid ""
"If your project contains any single-file Python modules that aren't part of "
"a package, set ``py_modules`` to a list of the names of the modules (minus "
"the ``.py`` extension) in order to make :ref:`setuptools` aware of them."
msgstr ""
"Se via projekto enhavas ajnan unu-dosieran Python-modulon ne en pako, agordu "
"``py_modules`` al listo de la nomoj de tiaj moduloj (sen la dosiersufikso ``."
"py``) por sciigi :ref:`setuptools`."

#: ../source/guides/distributing-packages-using-setuptools.rst:204
#, fuzzy
msgid "``install_requires``"
msgstr "install_requires"

#: ../source/guides/distributing-packages-using-setuptools.rst:210
msgid ""
"\"install_requires\" should be used to specify what dependencies a project "
"minimally needs to run. When the project is installed by :ref:`pip`, this is "
"the specification that is used to install its dependencies."
msgstr ""
"Oni uzu ``install_requires`` por specifi la minimumajn dependecojn de "
"projekto por rulado. Kiam :ref:`pip` instalas projekton, ĝi uzas tion por "
"instali dependaĵojn."

#: ../source/guides/distributing-packages-using-setuptools.rst:214
msgid ""
"For more on using \"install_requires\" see :ref:`install_requires vs "
"Requirements files`."
msgstr ""
"Por pli pri «install_requires», vidu :ref:`install_requires kontraste al "
"Postulo-dosiero <install_requires vs Requirements files>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:221
msgid "``package_data``"
msgstr "``package_data``"

#: ../source/guides/distributing-packages-using-setuptools.rst:230
msgid ""
"Often, additional files need to be installed into a :term:`package <Import "
"Package>`. These files are often data that’s closely related to the "
"package’s implementation, or text files containing documentation that might "
"be of interest to programmers using the package. These files are called "
"\"package data\"."
msgstr ""
"Ofte oni devas instali pliajn dosierojn en :term:`pakon <Import Package>`. "
"Tiaj dosieroj estas ofte datenoj rilataj al la kodo de la pako, aŭ tekstoj "
"enhavantaj dokumentaron por programistoj uzantaj la pakon. Tiaj dosieroj "
"nomiĝas «pakaj datenoj»."

#: ../source/guides/distributing-packages-using-setuptools.rst:235
msgid ""
"The value must be a mapping from package name to a list of relative path "
"names that should be copied into the package. The paths are interpreted as "
"relative to the directory containing the package."
msgstr ""
"La valoro devas esti mapigo de paknomoj al listoj de relativaj dosierlokoj "
"kopiotaj en la pakojn. Dosierloko estas relativa al la dosierujo enhavanta "
"la pakon."

#: ../source/guides/distributing-packages-using-setuptools.rst:239
msgid ""
"For more information, see :std:doc:`Including Data Files <setuptools:"
"userguide/datafiles>` from the :std:doc:`setuptools docs <setuptools:index>`."
msgstr ""
"Por pliaj informoj, vidu la paragrafon :std:doc:`Inkluzivi Datenajn "
"Dosierojn <setuptools:userguide/datafiles>` en la :std:doc:`dokumentaro de "
"setuptools <setuptools:index>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:247
msgid "``data_files``"
msgstr "``data_files``"

#: ../source/guides/distributing-packages-using-setuptools.rst:253
msgid ""
"Although configuring :ref:`Package Data` is sufficient for most needs, in "
"some cases you may need to place data files *outside* of your :term:"
"`packages <Import Package>`.  The ``data_files`` directive allows you to do "
"that. It is mostly useful if you need to install files which are used by "
"other programs, which may be unaware of Python packages."
msgstr ""

#: ../source/guides/distributing-packages-using-setuptools.rst:259
msgid ""
"Each ``(directory, files)`` pair in the sequence specifies the installation "
"directory and the files to install there. The ``directory`` must be a "
"relative path (although this may change in the future, see `wheel Issue #92 "
"<https://github.com/pypa/wheel/issues/92>`_), and it is interpreted relative "
"to the installation prefix (Python’s ``sys.prefix`` for a default "
"installation; ``site.USER_BASE`` for a user installation). Each file name in "
"``files`` is interpreted relative to the :file:`setup.py` script at the top "
"of the project source distribution."
msgstr ""

#: ../source/guides/distributing-packages-using-setuptools.rst:269
msgid ""
"For more information see the distutils section on :ref:`Installing "
"Additional Files <setuptools:distutils-additional-files>`."
msgstr ""
"Por pliaj informoj, vidu la paragrafon pri distutils en :ref:`Installing "
"Additional Files <setuptools:distutils-additional-files>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:274
msgid ""
"When installing packages as egg, ``data_files`` is not supported. So, if "
"your project uses :ref:`setuptools`, you must use ``pip`` to install it. "
"Alternatively, if you must use ``python setup.py``, then you need to pass "
"the ``--old-and-unmanageable`` option."
msgstr ""
"Dum instalado de pako kiel egg, ``data_files`` ne estas subtenata. Do, se "
"projekto uzas :ref:`setuptools`, oni devas uzi ``pip`` por instali ĝin. "
"Alternative, se oni devas uzi ``python setup.py``, oni devas uzi la flagon "
"``--old-and-unmanageable``."

#: ../source/guides/distributing-packages-using-setuptools.rst:281
#: ../source/specifications/pyproject-toml.rst:147
#, fuzzy
msgid "``scripts``"
msgstr "``description``"

#: ../source/guides/distributing-packages-using-setuptools.rst:283
msgid ""
"Although ``setup()`` supports a :ref:`scripts <setuptools:distutils-"
"installing-scripts>` keyword for pointing to pre-made scripts to install, "
"the recommended approach to achieve cross-platform compatibility is to use :"
"ref:`console_scripts` entry points (see below)."
msgstr ""
"Kvankam ``setup()`` subtenas ŝlosilvorton :ref:`scripts <setuptools:"
"distutils-installing-scripts>` por antaŭfarita instalota programeto, la "
"rekomendata metodo por interplatforma kongrueco estas uzi enirpunktojn :ref:"
"`console_scripts` (vidu ĉi-sube)."

#: ../source/guides/distributing-packages-using-setuptools.rst:291
msgid "Choosing a versioning scheme"
msgstr "Elekti versian skemon"

#: ../source/guides/distributing-packages-using-setuptools.rst:293
msgid ""
"See :ref:`versioning` for information on common version schemes and how to "
"choose between them."
msgstr ""
"Vidu :ref:`versiadon <versioning>` por informoj pri oftaj versiaj skemoj kaj "
"kiel elekti inter ili."

#: ../source/guides/distributing-packages-using-setuptools.rst:298
msgid "Working in \"development mode\""
msgstr "Labori en «programada reĝimo»"

#: ../source/guides/distributing-packages-using-setuptools.rst:300
msgid ""
"You can install a project in \"editable\" or \"develop\" mode while you're "
"working on it. When installed as editable, a project can be edited in-place "
"without reinstallation: changes to Python source files in projects installed "
"as editable will be reflected the next time an interpreter process is "
"started."
msgstr ""
"Vi povas instali projekton en «modifebla» aŭ «programada» reĝimo, kiam vi "
"verkas ĝin. Se projekto estas modifeble instalita, ĝi estas modifebla enloke "
"sen reinstalado: ŝanĝoj al Python-fontdosieroj en modifeble instalita "
"projekto efektiviĝos, kiam la interpretila procezo relanĉiĝos."

#: ../source/guides/distributing-packages-using-setuptools.rst:306
msgid ""
"To install a Python package in \"editable\"/\"development\" mode Change "
"directory to the root of the project directory and run:"
msgstr ""
"Por instali Python-pakan en «modifebla»/«evoluata» reĝimo, iru al la radiko "
"de la projekta dosierujo, kaj rulu la jenon:"

#: ../source/guides/distributing-packages-using-setuptools.rst:314
msgid ""
"The pip command-line flag ``-e`` is short for ``--editable``, and ``.`` "
"refers to the current working directory, so together, it means to install "
"the current directory (i.e. your project) in editable mode.  This will also "
"install any dependencies declared with ``install_requires`` and any scripts "
"declared with ``console_scripts``.  Dependencies will be installed in the "
"usual, non-editable mode."
msgstr ""
"La komandlinia flago ``-e`` de pip estas mallongigo de ``--editable``, kaj "
"``.`` signifas la aktualan labordosierujon. Tial kune tio signifas instali "
"la aktualan dosierujon (t.e. via projekto) en modifebla reĝimo.  Tio ankaŭ "
"instalos ajnajn dependaĵojn deklaritajn per ``install_requires`` kaj ajnajn "
"programetojn deklaritajn per ``console_scripts``. Dependaĵoj instaliĝos en "
"la ordinara nemodifebla reĝimo."

#: ../source/guides/distributing-packages-using-setuptools.rst:321
msgid ""
"You may want to install some of your dependencies in editable mode as well. "
"For example, supposing your project requires \"foo\" and \"bar\", but you "
"want \"bar\" installed from VCS in editable mode, then you could construct a "
"requirements file like so::"
msgstr ""
"Oni eble volas ankaŭ instali kelkajn dependaĵon en modifebla reĝimo. "
"Ekzemple, se onia projekto postulus «foo» kaj «bar», kaj oni volus instali "
"«bar» el versikontrola sistemo en modifebla reĝimo, oni uzus la jenan "
"postulo-dosieron::"

#: ../source/guides/distributing-packages-using-setuptools.rst:329
msgid ""
"The first line says to install your project and any dependencies. The second "
"line overrides the \"bar\" dependency, such that it's fulfilled from VCS, "
"not PyPI."
msgstr ""
"La unua linio instalas vian projekton kaj ĝiajn dependaĵojn. La dua linio "
"anstataŭigas la dependecon sur «bar», uzante versikontrolan sistemon, ne "
"PyPI."

#: ../source/guides/distributing-packages-using-setuptools.rst:333
msgid ""
"If, however, you want \"bar\" installed from a local directory in editable "
"mode, the requirements file should look like this, with the local paths at "
"the top of the file::"
msgstr ""
"Tamen, se vi volas instali «bar» el loka dosierujo en modifebla reĝimo, la "
"postulo-dosiero estu jene, kun la lokaj dosierlokoj ĉe la supro de la "
"dosiero::"

#: ../source/guides/distributing-packages-using-setuptools.rst:338
msgid ""
"Otherwise, the dependency will be fulfilled from PyPI, due to the "
"installation order of the requirements file.  For more on requirements "
"files, see the :ref:`Requirements File <pip:Requirements Files>` section in "
"the pip docs.  For more on VCS installs, see the :ref:`VCS Support <pip:VCS "
"Support>` section of the pip docs."
msgstr ""

#: ../source/guides/distributing-packages-using-setuptools.rst:342
msgid ""
"Lastly, if you don't want to install any dependencies at all, you can run:"
msgstr "Laste, se vi ne volas instali ajnan dependaĵon, rulu la jenon:"

#: ../source/guides/distributing-packages-using-setuptools.rst:349
msgid ""
"For more information, see the :doc:`Development Mode <setuptools:userguide/"
"development_mode>` section of the :ref:`setuptools` docs."
msgstr ""
"Por pli da informo, vidu la paragrafon :doc:`Evoluada Reĝimo <setuptools:"
"userguide/development_mode>` de la dokumentaro de :ref:`setuptools`."

#: ../source/guides/distributing-packages-using-setuptools.rst:356
msgid "Packaging your project"
msgstr "Paki vian projekton"

#: ../source/guides/distributing-packages-using-setuptools.rst:358
msgid ""
"To have your project installable from a :term:`Package Index` like :term:"
"`PyPI <Python Package Index (PyPI)>`, you'll need to create a :term:"
"`Distribution <Distribution Package>` (aka \":term:`Package <Distribution "
"Package>`\") for your project."
msgstr ""
"Por igi vian projekton instalebla ĉe :term:`Pakindekso <Package Index>` "
"kiel :term:`PyPI <Python Package Index (PyPI)>`, vi kreu :term:`Distribuon "
"<Distribution Package>` (ankaŭ konatan kiel «:term:`pakon <Distribution "
"Package>`») por via projekto."

#: ../source/guides/distributing-packages-using-setuptools.rst:363
msgid ""
"Before you can build wheels and sdists for your project, you'll need to "
"install the ``build`` package:"
msgstr ""
"Antaŭ ol konstrui wheel kaj fontan distribuon por via projekto, vi devas "
"instali la pakon ``build``:"

#: ../source/guides/distributing-packages-using-setuptools.rst:380
msgid "Source distributions"
msgstr "Fontaj distribuoj"

#: ../source/guides/distributing-packages-using-setuptools.rst:382
msgid ""
"Minimally, you should create a :term:`Source Distribution <Source "
"Distribution (or \"sdist\")>`:"
msgstr ""
"Minimume, vi kreu :term:`Fontan Distribuon <Source Distribution (or "
"\"sdist\")>`:"

#: ../source/guides/distributing-packages-using-setuptools.rst:398
msgid ""
"A \"source distribution\" is unbuilt (i.e. it's not a :term:`Built "
"Distribution`), and requires a build step when installed by pip.  Even if "
"the distribution is pure Python (i.e. contains no extensions), it still "
"involves a build step to build out the installation metadata from :file:"
"`setup.py` and/or :file:`setup.cfg`."
msgstr ""
"«Fonta distribuo» ne estas kontruita (alivorte, ĝi ne estas :term:"
"`Konstruita Distribuo <Built Distribution>`) kaj postulas paŝon de "
"konstruado dum instalado per pip.  Eĉ se la distribuo konsistas nur el "
"Python (alivorte, etendaĵo mankas), konstruada paŝo necesas por konstrui la "
"instalajn metadatenojn el :file:`setup.py` kaj/aŭ :file:`setup.cfg`."

#: ../source/guides/distributing-packages-using-setuptools.rst:406
msgid "Wheels"
msgstr "Wheel"

#: ../source/guides/distributing-packages-using-setuptools.rst:408
msgid ""
"You should also create a wheel for your project. A wheel is a :term:`built "
"package <Built Distribution>` that can be installed without needing to go "
"through the \"build\" process. Installing wheels is substantially faster for "
"the end user than installing from a source distribution."
msgstr ""
"Vi ankaŭ kreu wheel por via projekto. Wheel estas :term:`konstruita pako "
"<Built Distribution>` instalebla sen konstruado. Instalado de wheel estas "
"multe pli rapida ol instalado de fonta distribuo."

#: ../source/guides/distributing-packages-using-setuptools.rst:413
msgid ""
"If your project is pure Python then you'll be creating a :ref:`\"Pure Python "
"Wheel\" (see section below) <Pure Python Wheels>`."
msgstr ""
"Se via projekto estas pure Python-a, do vi kreos :ref:`«Pure Python-an "
"Wheel» (vidu la ĉi-suban paragrafon) <Pure Python Wheels>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:416
msgid ""
"If your project contains compiled extensions, then you'll be creating what's "
"called a :ref:`*Platform Wheel* (see section below) <Platform Wheels>`."
msgstr ""
"Se via projekto enhavas tradukitan etendaĵon, vi kreos la tiel nomatan :ref:"
"`*Platforman Wheel* (vidu ĉi-suban paragrafon) <Platform Wheels>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:419
msgid ""
"If your project also supports Python 2 *and* contains no C extensions, then "
"you should create what's called a *Universal Wheel* by adding the following "
"to your :file:`setup.cfg` file:"
msgstr ""
"Se via projekto ankaŭ subtenas Python 2 *kaj* ne enhavas C-etendaĵon, vi "
"kreu *Universalan Wheel* aldonante la jenon al la dosiero :file:`setup.cfg`:"

#: ../source/guides/distributing-packages-using-setuptools.rst:428
msgid ""
"Only use this setting if your project does not have any C extensions *and* "
"supports Python 2 and 3."
msgstr ""
"Nur uzu tiun agordon, se via projekto ne havas iun ajn C-etendaĵon *kaj* "
"subtenas Python 2 kaj 3."

#: ../source/guides/distributing-packages-using-setuptools.rst:435
msgid "Pure Python Wheels"
msgstr "Pure Python-a Wheel"

#: ../source/guides/distributing-packages-using-setuptools.rst:437
msgid ""
"*Pure Python Wheels* contain no compiled extensions, and therefore only "
"require a single Python wheel."
msgstr ""
"*Pure Python-a Wheel* enhavas neniu tradukitan etendaĵon kaj tial nur "
"postulas unu Python-wheel."

#: ../source/guides/distributing-packages-using-setuptools.rst:440
#: ../source/guides/distributing-packages-using-setuptools.rst:469
msgid "To build the wheel:"
msgstr "Por konstrui la wheel:"

#: ../source/guides/distributing-packages-using-setuptools.rst:454
msgid ""
"The ``wheel`` package will detect that the code is pure Python, and build a "
"wheel that's named such that it's usable on any Python 3 installation.  For "
"details on the naming of wheel files, see :pep:`425`."
msgstr ""
"La pako ``wheel`` detektos, ke la pako estas pure Python-a, kaj konstruos "
"wheel nomitan tiel, ke ĝi estos uzebla sur ajna instalo de Python 3.  Por "
"pliaj detaloj pri la nomado de wheel-dosiero, vidu :pep:`425`."

#: ../source/guides/distributing-packages-using-setuptools.rst:458
msgid ""
"If you run ``build`` without ``--wheel`` or ``--sdist``, it will build both "
"files for you; this is useful when you don't need multiple wheels."
msgstr ""
"Se oni rulos ``build`` sen ``--wheel`` aŭ ``--sdist``, ĝi konstruos ambaŭ "
"dosierojn; tio utilas, se vi ne bezonas plurajn wheel-ojn."

#: ../source/guides/distributing-packages-using-setuptools.rst:464
msgid "Platform Wheels"
msgstr "Platformaj Wheel-oj"

#: ../source/guides/distributing-packages-using-setuptools.rst:466
msgid ""
"*Platform Wheels* are wheels that are specific to a certain platform like "
"Linux, macOS, or Windows, usually due to containing compiled extensions."
msgstr ""
"*Platforma Wheel* estas wheel specifa al iu platformo kiel Linux, macOS aŭ "
"Windows, ordinare pro enhavo de tradukitaj etendaĵoj."

#: ../source/guides/distributing-packages-using-setuptools.rst:484
msgid ""
"The ``wheel`` package will detect that the code is not pure Python, and "
"build a wheel that's named such that it's only usable on the platform that "
"it was built on. For details on the naming of wheel files, see :pep:`425`."
msgstr ""
"La pako ``wheel`` detektos, ke la kodo ne konsistas sole el Python, kaj "
"konstruos wheel nomitan tiel, ke ĝi estos nur uzebla sur la platformo, sur "
"kiu ĝi estis konstruita. Por detaloj pri la nomado de wheel-dosiero, vidu :"
"pep:`425`."

#: ../source/guides/distributing-packages-using-setuptools.rst:490
msgid ""
":term:`PyPI <Python Package Index (PyPI)>` currently supports uploads of "
"platform wheels for Windows, macOS, and the multi-distro ``manylinux*`` ABI. "
"Details of the latter are defined in :pep:`513`."
msgstr ""
":term:`PyPI <Python Package Index (PyPI)>` aktuale subtenas alŝutadon de "
"platforma wheel por Windows, macOS, kaj la ABI ``manylinux*`` por pluraj "
"distribuoj. :pep:`513` difinas la detalojn pri ``manylinux*``."

#: ../source/guides/distributing-packages-using-setuptools.rst:498
msgid "Uploading your Project to PyPI"
msgstr "Alŝuti Vian Projekton al PyPI"

#: ../source/guides/distributing-packages-using-setuptools.rst:500
msgid ""
"When you ran the command to create your distribution, a new directory ``dist/"
"`` was created under your project's root directory. That's where you'll find "
"your distribution file(s) to upload."
msgstr ""
"Kiam vi rulis la komandon por krei vian distribuon, kreiĝis nova dosierujo "
"``dist/`` sub la radika dosierujo de via projekto. Tie vi troviĝas la "
"alŝutota(j)n distribua(j)n dosiero(j)n."

#: ../source/guides/distributing-packages-using-setuptools.rst:504
msgid ""
"These files are only created when you run the command to create your "
"distribution. This means that any time you change the source of your project "
"or the configuration in your :file:`setup.py` file, you will need to rebuild "
"these files again before you can distribute the changes to PyPI."
msgstr ""

#: ../source/guides/distributing-packages-using-setuptools.rst:509
msgid ""
"Before releasing on main PyPI repo, you might prefer training with the `PyPI "
"test site <https://test.pypi.org/>`_ which is cleaned on a semi regular "
"basis. See :ref:`using-test-pypi` on how to setup your configuration in "
"order to use it."
msgstr ""
"Antaŭ ol eldoni al la ĉefdeponejo PyPI, vi eble volas ekzerci vin per la "
"`Prova PyPI <https://test.pypi.org>`_, kiu fojfoje forviŝiĝas. Vidu :ref:"
"`using-test-pypi` pri la agordoj por uzi ĝin."

#: ../source/guides/distributing-packages-using-setuptools.rst:514
msgid ""
"In other resources you may encounter references to using ``python setup.py "
"register`` and ``python setup.py upload``. These methods of registering and "
"uploading a package are **strongly discouraged** as it may use a plaintext "
"HTTP or unverified HTTPS connection on some Python versions, allowing your "
"username and password to be intercepted during transmission."
msgstr ""
"Aliaj dokumentoj kelkfoje mencias uzi ``python setup.py register`` kaj "
"``python setup.py upload``. Tiuj manieroj de registrado kaj alŝutado de pako "
"estas **malrekomendegata**, ĉar ili uzas neĉifritan HTTP-konekton aŭ "
"nekonfirmitan HTTPS-konekton sur kelkaj versioj de Python, permesante "
"ŝtelado de viaj salutnomo kaj pasvorto dum transsendado."

#: ../source/guides/distributing-packages-using-setuptools.rst:520
msgid ""
"The reStructuredText parser used on PyPI is **not** Sphinx! Furthermore, to "
"ensure safety of all users, certain kinds of URLs and directives are "
"forbidden or stripped out (e.g., the ``.. raw::`` directive). **Before** "
"trying to upload your distribution, you should check to see if your brief / "
"long descriptions provided in :file:`setup.py` are valid.  You can do this "
"by running :std:doc:`twine check <index>` on your package files:"
msgstr ""
"La sintaksanalizilo por restructuredText uzata ĉe PyPI **ne** estas Sphinx! "
"Krome, por sekureco de ĉiuj uzantoj, kelkaj retadresoj kaj direktivoj estas "
"malpermesataj aŭ forigitaj (ekzemple, la direktivo ``.. raw::``). **Antaŭ** "
"ol alŝuti la distribuon, oni kontrolu, ĉu la mallonga kaj longa priskriboj "
"en :file:`setup.py` validas. Oni faras tion rulante :std:doc:`twine check "
"<index>` pri la pakaj dosieroj:"

#: ../source/guides/distributing-packages-using-setuptools.rst:533
msgid "Create an account"
msgstr "Krei konton"

#: ../source/guides/distributing-packages-using-setuptools.rst:535
msgid ""
"First, you need a :term:`PyPI <Python Package Index (PyPI)>` user account. "
"You can create an account `using the form on the PyPI website <https://pypi."
"org/account/register/>`_."
msgstr ""
"Unue, necesas konto ĉe :term:`PyPI <Python Package Index (PyPI)>`. Vi povas "
"krei konton `per formularo ĉe la retejo de PyPI <https://pypi.org/account/"
"register/>`_."

#: ../source/guides/distributing-packages-using-setuptools.rst:539
msgid ""
"Now you'll create a PyPI `API token`_ so you will be able to securely upload "
"your project."
msgstr ""
"Nun vi kreos `API-ĵetonon <API token>`_ por PyPI, tiel ke vi povos sekure "
"alŝuti vian projekton."

#: ../source/guides/distributing-packages-using-setuptools.rst:542
msgid ""
"Go to https://pypi.org/manage/account/#api-tokens and create a new `API "
"token`_; don't limit its scope to a particular project, since you are "
"creating a new project."
msgstr ""
"Iru al https://pypi.org/manage/account/#api-tokens kaj kreu novan `API-"
"ĵetonon <API token>`_; ne limigu ĝian rajton al iu projekto, ĉar vi estas "
"kreanta novan projekton."

#: ../source/guides/distributing-packages-using-setuptools.rst:546
msgid ""
"**Don't close the page until you have copied and saved the token — you won't "
"see that token again.**"
msgstr ""
"**Ne fermu la paĝon, ĝis vi kopiis kaj konservis la ĵetonon – vi ne vidos "
"tiun ĵetonon denove.**"

#: ../source/guides/distributing-packages-using-setuptools.rst:549
msgid ""
"To avoid having to copy and paste the token every time you upload, you can "
"create a :file:`$HOME/.pypirc` file:"
msgstr ""
"Se vi ne volas kopii kaj alglui la ĵetonon ĉiun fojon dum alŝutado, vi povas "
"krei dosieron :file:`$HOME/.pypirc`:"

#: ../source/guides/distributing-packages-using-setuptools.rst:558
msgid "**Be aware that this stores your token in plaintext.**"
msgstr "**Averto: tio senĉifre tenas vian ĵetonon.**"

#: ../source/guides/distributing-packages-using-setuptools.rst:560
#: ../source/guides/migrating-to-pypi-org.rst:74
#: ../source/guides/migrating-to-pypi-org.rst:113
#: ../source/guides/using-testpypi.rst:84
msgid ""
"For more details, see the :ref:`specification <pypirc>` for :file:`.pypirc`."
msgstr ""
"Por pliaj detaloj, vidu la :ref:`specifon <pypirc>` pri :file:`.pypirc`."

#: ../source/guides/distributing-packages-using-setuptools.rst:566
msgid "Upload your distributions"
msgstr "Alŝuti viajn distribuojn"

#: ../source/guides/distributing-packages-using-setuptools.rst:568
msgid ""
"Once you have an account you can upload your distributions to :term:`PyPI "
"<Python Package Index (PyPI)>` using :ref:`twine`."
msgstr ""
"Post kiam vi kreis vian konton, vi rajtas alŝuti viajn distribuojn al :term:"
"`PyPI <Python Package Index (PyPI)>` per :ref:`twine`."

#: ../source/guides/distributing-packages-using-setuptools.rst:571
msgid ""
"The process for uploading a release is the same regardless of whether or not "
"the project already exists on PyPI - if it doesn't exist yet, it will be "
"automatically created when the first release is uploaded."
msgstr ""
"La procedo por alŝutado de eldono estas sama, ĉu aŭ ne la projekto jam "
"ekzistas ĉe PyPI. Se ĝi ankoraŭ ne ekzistas, ĝi estas aŭtomate kreota dum "
"alŝutado de la unua eldono."

#: ../source/guides/distributing-packages-using-setuptools.rst:575
msgid ""
"For the second and subsequent releases, PyPI only requires that the version "
"number of the new release differ from any previous releases."
msgstr ""
"Por la dua kaj sekvaj eldonoj, PyPI nur postulas, ke la versia numero de la "
"nova eldono diferencu de ajnaj antaŭaj versioj."

#: ../source/guides/distributing-packages-using-setuptools.rst:582
msgid ""
"You can see if your package has successfully uploaded by navigating to the "
"URL ``https://pypi.org/project/<sampleproject>`` where ``sampleproject`` is "
"the name of your project that you uploaded. It may take a minute or two for "
"your project to appear on the site."
msgstr ""
"Oni povas kontroli, ĉu pako estis sukcese alŝutita, vizitante la retadreson "
"``https://pypi.org/project/<ekzemplo>``, en kiu ``<ekzemplo>`` estas la nomo "
"de la alŝutita projekto. Eble oni devas atendi unu minuton aŭ du."

#: ../source/guides/distributing-packages-using-setuptools.rst:589
#: ../source/tutorials/installing-packages.rst:670
msgid ""
"Depending on your platform, this may require root or Administrator access. :"
"ref:`pip` is currently considering changing this by `making user installs "
"the default behavior <https://github.com/pypa/pip/issues/1668>`_."
msgstr ""
"Depende de la platformo, tio eble postulas rajtojn de ĉefuzanto aŭ "
"Administranto. :ref:`pip` estas konsideranta ŝanĝi tion, `igante instalon "
"por uzanto la implicita konduto <https://github.com/pypa/pip/issues/1668>`_."

#: ../source/guides/dropping-older-python-versions.rst:5
msgid "Dropping support for older Python versions"
msgstr "Malsubteni malnovajn versiojn de Python"

#: ../source/guides/dropping-older-python-versions.rst:7
msgid ""
"The ability to drop support for older Python versions is enabled by the "
"standard :ref:`core-metadata` 1.2 specification via the :ref:`\"Requires-"
"Python\" <core-metadata-requires-python>` attribute."
msgstr ""
"La kapablo ekmalsubteni malnovajn versioj de Python estiĝis per la atributo :"
"ref:`«Requires-Python» <core-metadata-requires-python>` en la norma specifo :"
"ref:`core-metadata` 1.2."

#: ../source/guides/dropping-older-python-versions.rst:9
msgid ""
"Metadata 1.2+ installers, such as Pip, will adhere to this specification by "
"matching the current Python runtime and comparing it with the required "
"version in the package metadata. If they do not match, it will attempt to "
"install the last package distribution that supported that Python runtime."
msgstr ""
"Instalilo subtenanta la normon Metadatenoj 1.2+ obeas tiun specifon "
"kontrolante, ĉu la aktuala Python-versio kongruas kun la postulata versio en "
"la pakaj metadatenoj. Se ĝi ne kongruos, ĝi provos instali la lastan pakan "
"distribuon subtenantan tiun Python-version."

#: ../source/guides/dropping-older-python-versions.rst:12
msgid ""
"This mechanism can be used to drop support for older Python versions, by "
"amending the ``Requires-Python`` attribute in the package metadata."
msgstr ""
"Tiu meĥanismo povas esti uzata por ĉesigi subtenon por malnovaj versioj de "
"Python, modifante la atributon ``Requires-Python`` en la pakaj metadatenoj."

#: ../source/guides/dropping-older-python-versions.rst:15
msgid "Requirements"
msgstr "Postuloj"

#: ../source/guides/dropping-older-python-versions.rst:17
msgid ""
"This workflow requires that the user installing the package uses Pip [#]_, "
"or another installer that supports the Metadata 1.2 specification."
msgstr ""
"Tiu laborfluo postulas, ke la uzanto instalanta la pakon uzu Pip [#]_ aŭ "
"alian instalilon subtenantan la specifon Metadatenoj 1.2."

#: ../source/guides/dropping-older-python-versions.rst:20
msgid "Dealing with the universal wheels"
msgstr "Pritrakti universalan wheel"

#: ../source/guides/dropping-older-python-versions.rst:22
msgid ""
"Traditionally, :ref:`setuptools` projects providing Python code that is "
"semantically compatible with both Python 2 and Python 3, produce :term:"
"`wheels <Wheel>` that have a ``py2.py3`` tag in their names. When dropping "
"support for Python 2, it is important not to forget to change this tag to "
"just ``py3``. It is often configured within :file:`setup.cfg` under the "
"``[bdist_wheel]`` section by setting ``universal = 1``."
msgstr ""
"Tradicie, projekto uzanta :ref:`setuptools`, kies Python-kodo semantike "
"kongruas kun kaj Python 2 kaj Python 3, havas :term:`wheel <Wheel>`, kies "
"nomo inkluzivas la sufikson ``py2.py3``. Kiam oni ĉesigas subtenon de Python "
"2, gravas ŝanĝi tiun etikedon al simple ``py3``. Tio estas ofte agordita en :"
"file:`setup.cfg` sub la sekcio ``[bdist_wheel]`` kiel ``universal=1``."

#: ../source/guides/dropping-older-python-versions.rst:29
msgid ""
"If you use this method, either remove this option or section, or explicitly "
"set ``universal`` to ``0``:"
msgstr ""
"Se vi uzas tiun metodon, aŭ forigu tiun opcion aŭ sekcion, aŭ eksplicite "
"agordu ``universal`` kiel ``0``:"

#: ../source/guides/dropping-older-python-versions.rst:41
msgid ""
"Regarding :ref:`deprecated <setup-py-deprecated>` direct ``setup.py`` "
"invocations, passing the ``--universal`` flag on the command line could "
"override this setting."
msgstr ""
"Pri :ref:`evitinda <setup-py-deprecated>` rekta alvoko de ``setup.py``, "
"uzado de la komandlinia flago ``--universal`` povas igi tiun agordon "
"ignorata."

#: ../source/guides/dropping-older-python-versions.rst:45
msgid "Defining the Python version required"
msgstr "Difini la postulatan version de Python"

#: ../source/guides/dropping-older-python-versions.rst:48
msgid "1. Install twine"
msgstr "1. Instalu twine"

#: ../source/guides/dropping-older-python-versions.rst:50
msgid "Ensure that you have twine available at its latest version. Steps:"
msgstr "Certigu, ke vi havas la plej novan version de twine, jene:"

#: ../source/guides/dropping-older-python-versions.rst:66
msgid "2. Specify the version ranges for supported Python distributions"
msgstr "2. Specifu la versian intervalon de subtenataj versioj de Python"

#: ../source/guides/dropping-older-python-versions.rst:68
msgid ""
"Set the version ranges declaring which Python distributions are supported "
"within your project's :file:`pyproject.toml`. The :ref:`requires-python` "
"configuration field corresponds to the :ref:`Requires-Python <core-metadata-"
"requires-python>` core metadata field:"
msgstr ""
"Deklaru la gamon de versioj de Python subtenataj en la dosiero :file:"
"`pyproject.toml` de via projekto. La agorda kampo :ref:`requires-python` "
"respondas al la kerna metadatena kampo :ref:`Requires-Python <core-metadata-"
"requires-python>`:"

#: ../source/guides/dropping-older-python-versions.rst:80
msgid ""
"You can specify version ranges and exclusion rules (complying with the :ref:"
"`version-specifiers` specification), such as at least Python 3.9. Or, at "
"least Python 3.7 and beyond, skipping the 3.7.0 and 3.7.1 point releases:"
msgstr ""
"Oni povas specifi intervalojn de versioj kaj ekskluzivotajn versiojn (laŭ la "
"normo :ref:`version-specifiers`), ekzemple «minimume Python 3.9» aŭ "
"«minimume Python 3.7, sed ne 3.7.0 nek 3.7.1»:"

#: ../source/guides/dropping-older-python-versions.rst:89
msgid ""
"If using the :ref:`setuptools` build backend, consult the `dependency-"
"management`_ documentation for more options."
msgstr ""
"Se oni uzas la konstruan malfasadon :ref:`setuptools`, oni konsultu la "
"dokumentaron `dependency-management`_ por pliaj opcioj."

#: ../source/guides/dropping-older-python-versions.rst:92
msgid ""
"Avoid adding upper bounds to the version ranges, e. g. ``\">= 3.8, < "
"3.10\"``. Doing so can cause different errors and version conflicts. See the "
"`discourse-discussion`_ for more information."
msgstr ""
"Evitu supran limon de versia gamo, ekz. ``\">= 3.8, < 3.10\"``. Tio povas "
"kaŭzi diversajn erarojn kaj versio-konfliktojn. Vidu `diskuton ĉe Discourse "
"<discourse-discussion>`_ por pliaj informoj."

#: ../source/guides/dropping-older-python-versions.rst:96
msgid "3. Validating the Metadata before publishing"
msgstr "3. Kontrolu la validecon de la Metadatenoj antaŭ eldonado"

#: ../source/guides/dropping-older-python-versions.rst:98
msgid ""
"Within a Python source package (the zip or the tar-gz file you download) is "
"a text file called PKG-INFO."
msgstr ""
"En fonta pako de Python (la zip-arĥivo aŭ tar.gz-arĥivo elŝutita de vi) "
"troviĝas teksta dosiero nomita PKG-INFO."

#: ../source/guides/dropping-older-python-versions.rst:100
msgid ""
"This file is generated by the :term:`build backend <Build Backend>` when it "
"generates the source package. The file contains a set of keys and values, "
"the list of keys is part of the PyPA standard metadata format."
msgstr ""
"Tiu dosiero estas generita de la :term:`konstrua malfasado <Build Backend>` "
"dum generado de la fonta pako. La dosiero enhavas parojn de ŝlosiloj kaj "
"valoroj; la listo de ŝlosiloj estas parto de la norma metadatena formo de "
"PyPA."

#: ../source/guides/dropping-older-python-versions.rst:103
msgid "You can see the contents of the generated file like this:"
msgstr "Oni povas vidi la enhavon de la generita dosiero jene:"

#: ../source/guides/dropping-older-python-versions.rst:109
msgid "Validate that the following is in place, before publishing the package:"
msgstr ""
"Konfirmu, ke la jenaj kondiĉoj estas plenumitaj, antaŭ ol eldoni la pakon:"

#: ../source/guides/dropping-older-python-versions.rst:111
msgid ""
"If you have upgraded correctly, the ``Metadata-Version`` value should be 1.2 "
"or higher."
msgstr ""
"Se vi ĝisdatigis ĝuste, la valoro de ``Metadata-Version`` estu 1.2 aŭ pli "
"alta."

#: ../source/guides/dropping-older-python-versions.rst:112
msgid ""
"The ``Requires-Python`` field is set and matches your specification in the "
"configuration file."
msgstr ""
"La kampo ``Requires-Python`` ekzistu kaj kongruu kun via specifo en la "
"agorda dosiero."

#: ../source/guides/dropping-older-python-versions.rst:115
msgid "4. Publishing the package"
msgstr "4. Eldonu la pakon"

#: ../source/guides/dropping-older-python-versions.rst:117
msgid "Proceed as suggested in :ref:`Uploading your Project to PyPI`."
msgstr ""
"Daŭrigu laŭ la paragrafo :ref:`Alŝuti Vian Projekton al PyPI <Uploading your "
"Project to PyPI>`."

#: ../source/guides/dropping-older-python-versions.rst:120
msgid "Dropping a Python version"
msgstr "Malsubteni version de Python"

#: ../source/guides/dropping-older-python-versions.rst:122
msgid ""
"In principle, at least metadata support for Python versions should be kept "
"as long as possible, because once that has been dropped, people still "
"depending on a version will be forced to downgrade. If however supporting a "
"specific version becomes a blocker for a new feature or other issues occur, "
"the metadata ``Requires-Python`` should be amended. Of course this also "
"depends on whether the project needs to be stable and well-covered for a "
"wider range of users."
msgstr ""

#: ../source/guides/dropping-older-python-versions.rst:128
msgid "Each version compatibility change should have its own release."
msgstr "Ĉiu versio-kongrueca ŝanĝo havu sian propran eldonon."

#: ../source/guides/dropping-older-python-versions.rst:132
msgid ""
"When dropping a Python version, it might also be rewarding to upgrade the "
"project's code syntax generally, apart from updating the versions used in "
"visible places (like the testing environment). Tools like pyupgrade_ or "
"`ruff <https://docs.astral.sh/ruff/linter/>`_ can automate some of this work."
msgstr ""

#: ../source/guides/dropping-older-python-versions.rst:138
msgid "Support for the Metadata 1.2 specification has been added in Pip 9.0."
msgstr "Subteno por la specifo Metadatenoj 1.2 estis aldonita al Pip 9.0."

#: ../source/guides/hosting-your-own-index.rst:5
msgid "Hosting your own simple repository"
msgstr "Gastigi vian propran simplan deponejon"

#: ../source/guides/hosting-your-own-index.rst:8
msgid ""
"If you wish to host your own simple repository [1]_, you can either use a "
"software package like :doc:`devpi <devpi:index>` or you can simply create "
"the proper directory structure and use any web server that can serve static "
"files and generate an autoindex."
msgstr ""
"Se oni volas gastigi sian propran simplan deponejon [1]_, oni aŭ uzu "
"programon kiel :doc:`devpi <devpi:index>`, aŭ oni povas simple kreu la "
"ĝustan dosierujan strukturon kaj uzu ajnan retservilon kapablan servi "
"statikajn dosierojn kaj generi aŭtomatan indekson."

#: ../source/guides/hosting-your-own-index.rst:13
msgid ""
"In either case, since you'll be hosting a repository that is likely not in "
"your user's default repositories, you should instruct them in your project's "
"description to configure their installer appropriately. For example with pip:"
msgstr ""
"En ambaŭ kazoj, ĉar vi gastigas deponejon, kiu verŝajne ne estas inter la "
"aprioraj deponejoj de la uzanto, vi instruu la uzanton agordi sian "
"instalilon taŭge. Ekzemple, per pip:"

#: ../source/guides/hosting-your-own-index.rst:29
msgid ""
"In addition, it is **highly** recommended that you serve your repository "
"with valid HTTPS. At this time, the security of your user's installations "
"depends on all repositories using a valid HTTPS setup."
msgstr ""
"Krome, ni **rekomendegas**, ke la deponejo uzu validan HTTPS. Nuntempe la "
"sekureco de la instaloj de la uzanto dependas de la valida HTTPS de ĉiuj "
"deponejoj."

#: ../source/guides/hosting-your-own-index.rst:35
msgid "\"Manual\" repository"
msgstr "«Malaŭtomata» deponejo"

#: ../source/guides/hosting-your-own-index.rst:37
msgid ""
"The directory layout is fairly simple, within a root directory you need to "
"create a directory for each project. This directory should be the :ref:"
"`normalized name <name-normalization>` of the project. Within each of these "
"directories simply place each of the downloadable files. If you have the "
"projects \"Foo\" (with the versions 1.0 and 2.0) and \"bar\" (with the "
"version 0.1) You should end up with a structure that looks like::"
msgstr ""
"La dosieruja aranĝo estas simpla. En radika dosierujo, oni kreu po unu "
"dosierujo por ĉiu projekto. La dosierujo devas esti la :ref:`normigita nomo "
"<name-normalization>` de la projekto. En ĉiu projekto, oni metu ĉiujn "
"elŝuteblajn dosierojn. Se oni havus la projektojn «Foo» (kun versioj 1.0 kaj "
"2.0) kaj «bar» (kun la versio 0.1), oni havus la jenan dosierujan "
"strukturon::"

#: ../source/guides/hosting-your-own-index.rst:50
msgid ""
"Once you have this layout, simply configure your webserver to serve the root "
"directory with autoindex enabled. For an example using the built in Web "
"server in `Twisted`_, you would simply run ``twistd -n web --path .`` and "
"then instruct users to add the URL to their installer's configuration."
msgstr ""
"Kun tia aranĝo, simple igu vian TTT-servilon servi la radikan dosierujon kun "
"aŭtomata indekso. Ekzemple, uzante la aprioran TTT-servilon en `Twisted`_, "
"simple rulu ``twistd -n web --path .`` kaj igu la uzantojn aldoni la "
"retadreson al la agordoj de la instalilo."

#: ../source/guides/hosting-your-own-index.rst:57
#: ../source/guides/index-mirrors-and-caches.rst:47
msgid "Existing projects"
msgstr "Ekzistantaj projektoj"

#: ../source/guides/hosting-your-own-index.rst:63
msgid "Package upload"
msgstr "Alŝuto de pako"

#: ../source/guides/hosting-your-own-index.rst:64
msgid "PyPI fall-through [2]_"
msgstr "Retroiro al PyPI [2]_"

#: ../source/guides/hosting-your-own-index.rst:65
#: ../source/guides/index-mirrors-and-caches.rst:56
#: ../source/guides/supporting-windows-using-appveyor.rst:146
msgid "Additional notes"
msgstr "Pliaj notoj"

#: ../source/guides/hosting-your-own-index.rst:67
#: ../source/guides/index-mirrors-and-caches.rst:58
msgid ":ref:`devpi`"
msgstr ":ref:`devpi`"

#: ../source/guides/hosting-your-own-index.rst:68
#: ../source/guides/hosting-your-own-index.rst:69
#: ../source/guides/hosting-your-own-index.rst:75
#: ../source/guides/hosting-your-own-index.rst:79
#: ../source/guides/hosting-your-own-index.rst:99
#: ../source/guides/hosting-your-own-index.rst:120
#: ../source/guides/index-mirrors-and-caches.rst:59
#: ../source/guides/index-mirrors-and-caches.rst:60
#: ../source/guides/index-mirrors-and-caches.rst:66
#: ../source/guides/index-mirrors-and-caches.rst:67
#: ../source/guides/index-mirrors-and-caches.rst:74
#: ../source/guides/index-mirrors-and-caches.rst:78
#: ../source/guides/index-mirrors-and-caches.rst:80
#: ../source/guides/index-mirrors-and-caches.rst:85
#: ../source/guides/index-mirrors-and-caches.rst:86
#: ../source/guides/index-mirrors-and-caches.rst:90
#: ../source/guides/index-mirrors-and-caches.rst:92
#: ../source/guides/index-mirrors-and-caches.rst:96
#: ../source/guides/index-mirrors-and-caches.rst:98
#: ../source/guides/index-mirrors-and-caches.rst:102
#: ../source/guides/index-mirrors-and-caches.rst:104
#: ../source/guides/index-mirrors-and-caches.rst:108
#: ../source/guides/index-mirrors-and-caches.rst:110
msgid "✔"
msgstr "✔"

#: ../source/guides/hosting-your-own-index.rst:70
msgid ""
"multiple indexes with inheritance, with syncing, replication, fail-over; "
"mirroring"
msgstr ""
"pluraj indeksoj kun heredado, kun sinkronigo, replikado, rezervosistemo; "
"spegulado"

#: ../source/guides/hosting-your-own-index.rst:73
#: ../source/guides/index-mirrors-and-caches.rst:71
msgid ":ref:`simpleindex`"
msgstr ":ref:`simpleindex`"

#: ../source/guides/hosting-your-own-index.rst:78
msgid ":ref:`pypiserver`"
msgstr ":ref:`pypiserver`"

#: ../source/guides/hosting-your-own-index.rst:83
msgid ":ref:`pypiprivate`"
msgstr ":ref:`pypiprivate`"

#: ../source/guides/hosting-your-own-index.rst:88
#: ../source/guides/index-mirrors-and-caches.rst:77
msgid ":ref:`pypicloud`"
msgstr ":ref:`pypicloud`"

#: ../source/guides/hosting-your-own-index.rst:91
msgid "unmaintained; also cached proxying; authentication, authorisation"
msgstr "nemastrumata; ankaŭ kaŝmemora perado; aŭtentikigo, rajtigo"

#: ../source/guides/hosting-your-own-index.rst:93
msgid ":ref:`pywharf`"
msgstr ":ref:`pywharf`"

#: ../source/guides/hosting-your-own-index.rst:96
msgid "unmaintained; serve files in GitHub"
msgstr "nemastrumata; servi dosierojn ĉe GitHub"

#: ../source/guides/hosting-your-own-index.rst:98
#: ../source/guides/index-mirrors-and-caches.rst:83
msgid ":ref:`pulppython`"
msgstr ":ref:`pulppython`"

#: ../source/guides/hosting-your-own-index.rst:101
msgid "also mirroring, proxying; plugin for Pulp"
msgstr "ankaŭ spegulado, perado; kromaĵo por Pulp"

#: ../source/guides/hosting-your-own-index.rst:103
msgid ":ref:`pip2pi`"
msgstr ":ref:`pip2pi`"

#: ../source/guides/hosting-your-own-index.rst:106
msgid "also mirroring; manual synchronisation"
msgstr "ankaŭ spegulado; malaŭtomata sinkronigo"

#: ../source/guides/hosting-your-own-index.rst:108
msgid ":ref:`dumb-pypi`"
msgstr ":ref:`dumb-pypi`"

#: ../source/guides/hosting-your-own-index.rst:111
msgid "not a server, but a static file site generator"
msgstr "ne servilo, sed statikdosiera retejogenerilo"

#: ../source/guides/hosting-your-own-index.rst:113
msgid ":ref:`httpserver`"
msgstr ":ref:`httpserver`"

#: ../source/guides/hosting-your-own-index.rst:116
msgid "standard-library"
msgstr "standard-library"

#: ../source/guides/hosting-your-own-index.rst:118
#: ../source/guides/index-mirrors-and-caches.rst:107
msgid "`Apache <https://httpd.apache.org/>`_"
msgstr "`Apache <https://httpd.apache.org/>`_"

#: ../source/guides/hosting-your-own-index.rst:121
#: ../source/guides/index-mirrors-and-caches.rst:111
msgid ""
"using `mod_rewrite <https://httpd.apache.org/docs/current/mod/mod_rewrite."
"html>`_ and `mod_cache_disk <https://httpd.apache.org/docs/current/mod/"
"mod_cache_disk.html>`_, you can cache requests to package indexes through an "
"Apache server"
msgstr ""
"uzante `mod_rewrite <https://httpd.apache.org/docs/current/mod/mod_rewrite."
"html>`_ kaj `mod_cache_disk <https://httpd.apache.org/docs/current/mod/"
"mod_cache_disk.html>`_, vi povas enkaŝmemirigi petojn al pakindeksoj per "
"Apache-servilo"

#: ../source/guides/hosting-your-own-index.rst:131
msgid ""
"For complete documentation of the simple repository protocol, see :ref:"
"`simple repository API <simple-repository-api>`."
msgstr ""
"Por plena dokumentaro pri la simpla deponeja protokolo, vidu :ref:`la "
"simplan deponejan API <simple-repository-api>`."

#: ../source/guides/hosting-your-own-index.rst:134
msgid ""
"Can be configured to fall back to PyPI (or another package index) if a "
"requested package is missing."
msgstr ""
"Estas agordebla por uzi PyPI (aŭ alian pakindekson), se petita pako mankas."

#: ../source/guides/index.rst:4
msgid ""
"**Guides** are focused on accomplishing a specific task and assume that you "
"are already familiar with the basics of Python packaging. If you're looking "
"for an introduction to packaging, see :doc:`/tutorials/index`."
msgstr ""
"**Gvidilo** temas pri plenumado de iu tasko kaj supozas, ke vi jam scias la "
"fundamentojn pri la pakado de Python. Se vi serĉas enkondukon al pakado, "
"vidu :doc:`/tutorials/index`."

#: ../source/guides/index-mirrors-and-caches.rst:5
msgid "Package index mirrors and caches"
msgstr "Pakindeksaj speguloj kaj kaŝmemoroj"

#: ../source/guides/index-mirrors-and-caches.rst:8
msgid "2023-11-08"
msgstr "8 Novembro 2023"

#: ../source/guides/index-mirrors-and-caches.rst:10
msgid ""
"Mirroring or caching of PyPI (and other :term:`package indexes <Package "
"Index>`) can be used to speed up local package installation, allow offline "
"work, handle corporate firewalls or just plain Internet flakiness."
msgstr ""
"Spegulado aŭ enkaŝmemorigo de PyPI (aŭ alia :term:`pakindekso <Package "
"Index>`) povas rapidigi instaladon de loka pako, ebligi senkonektan "
"funkciadon, kongrui kun entreprena fajromuro aŭ maski malbonan Interretan "
"konekton."

#: ../source/guides/index-mirrors-and-caches.rst:15
msgid "There are multiple classes of options in this area:"
msgstr "Ekzistas pluraj klasoj de opcioj en tiu areo:"

#: ../source/guides/index-mirrors-and-caches.rst:17
msgid "local/hosted caching of package indexes."
msgstr "loka/gastigita kaŝmemoro de pakindeksoj."

#: ../source/guides/index-mirrors-and-caches.rst:19
msgid ""
"local/hosted mirroring of a package index. A mirror is a (whole or partial) "
"copy of a package index, which can be used in place of the original index."
msgstr ""
"loka/gastigita spegulado de pakindekso. Spegulo estas (plena aŭ parta) kopio "
"de pakindekso uzebla anstataŭ la originalo."

#: ../source/guides/index-mirrors-and-caches.rst:23
msgid ""
"private package index with fall-through to public package indexes (for "
"example, to mitigate dependency confusion attacks), also known as a proxy."
msgstr ""
"privata pakindekso kun retroiro al publikaj pakindeksoj (ekzemple por "
"malhelpi atakon per konfuzo de dependeco), ankaŭ konata kiel perilo."

#: ../source/guides/index-mirrors-and-caches.rst:29
msgid "Caching with pip"
msgstr "Kaŝmemoroj kaj pip"

#: ../source/guides/index-mirrors-and-caches.rst:31
msgid ""
"pip provides a number of facilities for speeding up installation by using "
"local cached copies of :term:`packages <Distribution Package>`:"
msgstr ""
"pip provizas servojn por rapidigi instaladon uzante loke memoritajn kopiojn "
"de :term:`pakoj <Distribution Package>`:"

#: ../source/guides/index-mirrors-and-caches.rst:34
msgid ""
":ref:`Fast & local installs <pip:installing from local packages>` by "
"downloading all the requirements for a project and then pointing pip at "
"those downloaded files instead of going to PyPI."
msgstr ""
":ref:`Rapida kaj loka instalado <pip:installing from local packages>` "
"elŝutante ĉiujn postulojn de projekto kaj montrante tiujn al pip anstataŭ "
"vizitadi PyPI."

#: ../source/guides/index-mirrors-and-caches.rst:37
msgid ""
"A variation on the above which pre-builds the installation files for the "
"requirements using :ref:`python3 -m pip wheel <pip:pip wheel>`:"
msgstr ""
"Variaĵo de la ĉi-supro, kiu antaŭkonstruas la instalajn dosierojn por la "
"postuloj per :ref:`python3 -m pip wheel <pip:pip wheel>`:"

#: ../source/guides/index-mirrors-and-caches.rst:53
msgid "Cache"
msgstr "Kaŝmemoro"

#: ../source/guides/index-mirrors-and-caches.rst:54
msgid "Mirror"
msgstr "Spegulo"

#: ../source/guides/index-mirrors-and-caches.rst:55
msgid "Proxy"
msgstr "Perilo"

#: ../source/guides/index-mirrors-and-caches.rst:62
msgid ""
"multiple indexes with inheritance; syncing, replication, fail-over; package "
"upload"
msgstr ""
"pluraj indeksoj kun heredado, kun sinkronigo, replikado, rezervosistemo; "
"alŝutado de pakoj"

#: ../source/guides/index-mirrors-and-caches.rst:65
msgid ":ref:`bandersnatch`"
msgstr ":ref:`bandersnatch`"

#: ../source/guides/index-mirrors-and-caches.rst:75
msgid "custom plugin enables caching; re-routing to other package indexes"
msgstr ""
"propra kromprogramo ebligas kaŝmemoron; alidirektado al aliaj pakindeksoj"

#: ../source/guides/index-mirrors-and-caches.rst:81
msgid "unmaintained; authentication, authorisation"
msgstr "nemastrumata; aŭtentikigo, rajtigo"

#: ../source/guides/index-mirrors-and-caches.rst:87
msgid "plugin for Pulp; multiple proxied indexes; package upload"
msgstr "kromaĵo por Pulp; pluraj peritaj indeksoj; alŝuto de pako"

#: ../source/guides/index-mirrors-and-caches.rst:89
msgid ":ref:`proxpi`"
msgstr ":ref:`proxpi`"

#: ../source/guides/index-mirrors-and-caches.rst:93
#: ../source/guides/index-mirrors-and-caches.rst:99
msgid "multiple proxied indexes"
msgstr "pluraj peritaj indeksoj"

#: ../source/guides/index-mirrors-and-caches.rst:95
msgid ":ref:`nginx_pypi_cache`"
msgstr ":ref:`nginx_pypi_cache`"

#: ../source/guides/index-mirrors-and-caches.rst:101
msgid ":ref:`flaskpypiproxy`"
msgstr ":ref:`flaskpypiproxy`"

#: ../source/guides/index-mirrors-and-caches.rst:105
msgid "unmaintained"
msgstr "nemastrumata"

#: ../source/guides/installing-scientific-packages.rst:5
msgid "Installing scientific packages"
msgstr "Instali sciencajn pakojn"

#: ../source/guides/installing-scientific-packages.rst:8
msgid ""
"Scientific software tends to have more complex dependencies than most, and "
"it will often have multiple build options to take advantage of different "
"kinds of hardware, or to interoperate with different pieces of external "
"software."
msgstr ""
"Scienca programo ofte havas pli komplikajn dependecojn ol aliaj programoj, "
"kaj ofte havas plurajn konstruajn opciojn por diversaj aparatoj aŭ por "
"kunfunkcii kun diversaj eksteraj programoj."

#: ../source/guides/installing-scientific-packages.rst:13
msgid ""
"In particular, `NumPy <https://numpy.org/>`__, which provides the basis for "
"most of the software in the `scientific Python stack <https://scientific-"
"python.org>`_ can be configured to interoperate with different FORTRAN "
"libraries, and can take advantage of different levels of vectorized "
"instructions available in modern CPUs."
msgstr ""
"Aparte, `NumPy <https://numpy.org/> `__, kiu estas la bazo de la plejparto "
"de la programaro en la `scienca Python-stako <https://scientific-python."
"org>`_, povas kunfunkcii kun diversaj Fortranaj bibliotekoj kaj povas "
"ekspluati diversajn nivelojn de vektoraj instrukcioj en modernaj "
"ĉefprocesoroj."

#: ../source/guides/installing-scientific-packages.rst:19
msgid ""
"Starting with version 1.10.4 of NumPy and version 1.0.0 of SciPy, pre-built "
"32-bit and 64-bit binaries in the ``wheel`` format are available for all "
"major operating systems (Windows, macOS, and Linux) on PyPI. Note, however, "
"that on Windows, NumPy binaries are linked against the `ATLAS <https://math-"
"atlas.sourceforge.net/>`__ BLAS/LAPACK library, restricted to SSE2 "
"instructions, so they may not provide optimal linear algebra performance."
msgstr ""
"Ekde versio 1.10.4 de NumPy kaj versio 1.0.0 de SciPy, antaŭkonstruitaj 32-"
"bitaj kaj 64-bitaj duumaĵoj de la formo ``wheel`` estas disponeblaj por ĉiuj "
"ĉefaj mastrumaj sistemoj (Windows, macOS kaj Linux) ĉe PyPI. Notu, tamen, ke "
"je Windows, duumaĵoj de NumPy estas binditaj al la biblioteko`ATLAS <https://"
"math-atlas.sourceforge.net/>`__ por BLAS/LAPACK, kiu nur uzas la "
"instrukciojn SSE2 kaj tial povas esti neoptimuma pri lineara algebro."

#: ../source/guides/installing-scientific-packages.rst:26
msgid ""
"There are a number of alternative options for obtaining scientific Python "
"libraries (or any other Python libraries that require a compilation "
"environment to install from source and don't provide pre-built wheel files "
"on PyPI)."
msgstr ""
"Ekzistas kelkaj alternativoj por akiri sciencajn Python-bibliotekojn (aŭ "
"aliajn Python-bibliotekojn postulantajn tradukan medion por instali el fonto "
"kaj sen antaŭkonstruitajn wheel-dosierojn ĉe PyPI)."

#: ../source/guides/installing-scientific-packages.rst:32
msgid "Building from source"
msgstr "Konstrui el fonto"

#: ../source/guides/installing-scientific-packages.rst:34
msgid ""
"The same complexity which makes it difficult to distribute NumPy (and many "
"of the projects that depend on it) as wheel files also make them difficult "
"to build from source yourself. However, for intrepid folks that are willing "
"to spend the time wrangling compilers and linkers for both C and FORTRAN, "
"building from source is always an option."
msgstr ""

#: ../source/guides/installing-scientific-packages.rst:42
msgid "Linux distribution packages"
msgstr "Linux-distribuaj pakoj"

#: ../source/guides/installing-scientific-packages.rst:44
msgid ""
"For Linux users, the system package manager will often have pre-compiled "
"versions of various pieces of scientific software, including NumPy and other "
"parts of the scientific Python stack."
msgstr ""
"Por uzanto de Linux, la sistema pakadministrilo ofte havas antaŭtradukitajn "
"versiojn de diversaj sciencaj programoj inkluzive de NumPy kaj aliaj partoj "
"de la scienca Python-stako."

#: ../source/guides/installing-scientific-packages.rst:48
msgid ""
"If using versions which may be several months old is acceptable, then this "
"is likely to be a good option (just make sure to allow access to "
"distributions installed into the system Python when using virtual "
"environments)."
msgstr ""
"Se uzi version plurmonate malaktualan estas akcepteble, do tio estas "
"verŝajne bona opcio (nur certigu, ke vi permesas atingon al distribuoj "
"instalitaj en la sistema Python dum uzado de virtuala medio)."

#: ../source/guides/installing-scientific-packages.rst:54
msgid "Windows installers"
msgstr "Windows-instaliloj"

#: ../source/guides/installing-scientific-packages.rst:56
msgid ""
"Many Python projects that don't (or can't) currently publish wheel files at "
"least publish Windows installers, either on PyPI or on their project "
"download page. Using these installers allows users to avoid the need to set "
"up a suitable environment to build extensions locally."
msgstr ""
"Multaj Python-projektoj, kiuj ne eldonas (aŭ ne povas eldoni) wheel-"
"dosierojn, minimume eldonas Windows-instalilojn, aŭ ĉe PyPI aŭ sur siaj "
"projektaj elŝutaj paĝoj. Uzante tian instalilon, uzanto ne bezonas starigi "
"taŭgan medion por konstrui etendaĵojn loke."

#: ../source/guides/installing-scientific-packages.rst:61
msgid ""
"The extensions provided in these installers are typically compatible with "
"the CPython Windows installers published on python.org."
msgstr ""
"La etendaĵoj disponigitaj en tiuj instaliloj ofte kongruas kun la Windows-"
"instaliloj de CPython ĉe python.org."

#: ../source/guides/installing-scientific-packages.rst:64
msgid ""
"As with Linux system packages, the Windows installers will only install into "
"a system Python installation - they do not support installation in virtual "
"environments. Allowing access to distributions installed into the system "
"Python when using virtual environments is a common approach to working "
"around this limitation."
msgstr ""
"Same kiel Linux-sistempakoj, la Windows instaliloj nur instalas en sisteman "
"Python-instalaĵon – ili ne povas instali en virtualan medion. Oni ofte "
"moderigas tiun limigon permesante al virtualaj medioj atingi distribuojn "
"instalitajn en la sisteman Python-instalaĵon."

#: ../source/guides/installing-scientific-packages.rst:70
msgid ""
"The :term:`Wheel` project also provides a :command:`wheel convert` "
"subcommand that can convert a Windows :command:`bdist_wininst` installer to "
"a wheel."
msgstr ""
"La projekto :term:`Wheel` ankaŭ provizas subkomandon :command:`wheel "
"convert`, kiu konvertas :command:`bdist_wininst`-instalilon por Windows al "
"wheel."

#: ../source/guides/installing-scientific-packages.rst:77
msgid "macOS installers and package managers"
msgstr "Instaliloj kaj pakadministriloj por macOS"

#: ../source/guides/installing-scientific-packages.rst:79
msgid ""
"Similar to the situation on Windows, many projects (including NumPy) publish "
"macOS installers that are compatible with the macOS CPython binaries "
"published on python.org."
msgstr ""
"Simila al la situacio ĉe Windows, multaj projektoj (inkluzive de NumPy) "
"eldonas macOS-instalilojn kongruajn kun la CPython-duumaĵojn por macOS ĉe "
"python.org."

#: ../source/guides/installing-scientific-packages.rst:83
msgid ""
"macOS users also have access to Linux distribution style package managers "
"such as ``Homebrew``. The SciPy site has more details on using Homebrew to "
"`install SciPy on macOS <https://scipy.org/install/#macos>`_."
msgstr ""
"uzantoj de macOS ankaŭ povas uzi Linux-stilan pakadministrilon kiel "
"``Homebrew``. La retejo de SciPy havas pliajn detalojn pri `instalado de "
"SciPy sur macOS per Homebrew <https://scipy.org/install/#macos>`_."

#: ../source/guides/installing-scientific-packages.rst:89
msgid "SciPy distributions"
msgstr "Distribuoj de SciPy"

#: ../source/guides/installing-scientific-packages.rst:91
msgid ""
"The SciPy site lists `several distributions <https://scipy.org/install/>`_ "
"that provide the full SciPy stack to end users in an easy to use and update "
"format."
msgstr ""
"La retejo de SciPy listigas `plurajn distribuojn <https://scipy.org/install/"
">`_ provizantajn la plenan SciPy-stakon al uzanto en facile uzebla kaj "
"ĝisdatigebla formo."

#: ../source/guides/installing-scientific-packages.rst:96
msgid ""
"Some of these distributions may not be compatible with the standard ``pip`` "
"and ``virtualenv`` based toolchain."
msgstr ""
"Kelkaj el tiuj distribuoj eble ne kongruas kun la norma ilĉeno uzanta "
"``pip`` kaj ``virtualenv``."

#: ../source/guides/installing-scientific-packages.rst:100
#: ../source/key_projects.rst:812
msgid "Spack"
msgstr "Spack"

#: ../source/guides/installing-scientific-packages.rst:101
msgid ""
"`Spack <https://github.com/spack/spack>`_ is a flexible package manager "
"designed to support multiple versions, configurations, platforms, and "
"compilers. It was built to support the needs of large supercomputing centers "
"and scientific application teams, who must often build software many "
"different ways. Spack is not limited to Python; it can install packages for "
"``C``, ``C++``, ``Fortran``, ``R``, and other languages.  It is non-"
"destructive; installing a new version of one package does not break existing "
"installations, so many configurations can coexist on the same system."
msgstr ""
"`Spack <https://github.com/spack/spack>`_ estas fleksebla pakadministrilo "
"subtenanta plurajn versiojn, agordojn, platformojn kaj tradukilojn. Ĝi estis "
"verkita por grandaj superkomputejoj kaj sciencaj teamoj, kiuj ofte devas "
"konstrui programojn plurmaniere. Spack ne estas limigita al Python; ĝi povas "
"instali pakojn por ``C``, ``C++``, Fortrano, ``R``, kaj aliajn lingvojn.  Ĝi "
"estas nedetruema; instalado de nova versio de unu pako ne rompas "
"ekzistantajn instalojn; tial pluraj agordoj povas kunekzisti sur unu sistemo."

#: ../source/guides/installing-scientific-packages.rst:110
msgid ""
"Spack offers a simple but powerful syntax that allows users to specify "
"versions and configuration options concisely. Package files are written in "
"pure Python, and they are templated so that it is easy to swap compilers, "
"dependency implementations (like MPI), versions, and build options with a "
"single package file.  Spack also generates *module* files so that packages "
"can be loaded and unloaded from the user's environment."
msgstr ""
"Spack provizas simplan sed potencan sintakson, kiu permesas al uzanto facile "
"specifi versiojn kaj agordajn opciojn. Pak-dosiero estas verkita en pura "
"Python kaj estas ŝablona tiel, ke per unu pakdosiero facilas ŝanĝi "
"tradukilon, realigon de dependaĵo (kiel MPI), versiojn kaj konstruaj "
"opciojn. Spack ankaŭ produktas *modul-dosierojn*, por ŝargi kaj malŝargi "
"pakojn al/el la medio de la uzanto."

#: ../source/guides/installing-scientific-packages.rst:119
msgid "The conda cross-platform package manager"
msgstr "La plurplatforma pakadministrilo conda"

#: ../source/guides/installing-scientific-packages.rst:121
msgid ""
"``conda`` is an open source (BSD licensed) package management system and "
"environment management system that allows users to install multiple versions "
"of binary software packages and their dependencies, and easily switch "
"between them. It is a cross-platform tool working on Windows, MacOS, and "
"Linux. Conda can be used to package up and distribute all kinds of packages, "
"it is not limited to just Python packages. It has full support for native "
"virtual environments. Conda makes environments first-class citizens, making "
"it easy to create independent environments even for C libraries. It is "
"written in Python, but is Python-agnostic. Conda manages Python itself as a "
"package, so that :command:`conda update python` is possible, in contrast to "
"pip, which only manages Python packages."
msgstr ""
"``conda`` estas malfermitfonta (BSD-licenca) pakadministra kaj "
"mediadministra sistemo, kiu permesas instali plurajn versiojn de duumaj "
"programaj pakoj kaj iliaj dependaĵoj kaj facile ŝanĝi inter ili. Ĝi estas "
"plurplatforma, sur Windows, macOS kaj Linux. Conda povas esti uzita por paki "
"kaj distribui ĉiajn pakojn; ĝi ne estas limigita al nur Python-pakoj. Ĝi "
"plene subtenas indiĝenajn virtualajn mediojn. Conda igas mediojn unuaklasaj "
"civitanoj, faciligante krei sendependajn mediojn eĉ por C-bibliotekoj. Ĝi "
"estas verkita en Python, sed ne estas nur por Python. Conda administras "
"Python mem kiel pakon, tiel ke :command:`conda update python` eblas, "
"kontraste al pip, kiu nur administras Python-pakojn."

#: ../source/guides/installing-scientific-packages.rst:133
msgid ""
"Anaconda `Anaconda <https://docs.anaconda.com/anaconda/>`_ is a Python "
"distribution published by Anaconda, Inc. It is a stable collection of Open "
"Source packages for big data and scientific use, and a collection of "
"Graphical Interface utilities for managing conda environments."
msgstr ""
"`Anaconda <https://docs.anaconda.com/anaconda/>`_ estas Python-distribuo "
"eldonita de la firmao Anaconda, Inc. Ĝi estas stabila kolekto de "
"Malfermitfontaj pakoj por grandaj datenoj kaj scienca uzado kune kun "
"grafikfasadaj ilaĵoj por administri ``conda``-medion."

#: ../source/guides/installing-scientific-packages.rst:135
msgid ""
"In addition to the full distribution provided by Anaconda, the conda package "
"manager itself is available in  `miniconda <https://docs.anaconda.com/"
"miniconda/>`_, `miniforge <https://github.com/conda-forge/miniforge>`_, and "
"`pixi <https://pixi.sh/>`_."
msgstr ""
"Krom la plena distribuo provizita de Anaconda, la pakadministrilo ``conda`` "
"mem estas disponebla en  `miniconda <https://docs.anaconda.com/miniconda/"
">`_, `miniforge <https://github.com/conda-forge/miniforge>`_ kaj `pixi "
"<https://pixi.sh/>`_."

#: ../source/guides/installing-scientific-packages.rst:138
msgid ""
"Conda packages are available on multiple channels on Anaconda.org, including "
"the default channel supported by Anaconda, Inc, the community supported "
"conda-forge channel, which provides a wide variety of pre-built packages, "
"and some domain-specific package collections."
msgstr ""
"Conda-pakoj disponeblas ĉe pluraj kanaloj en Anaconda.org, inkluzive de la "
"apriora kanalo de Anaconda, Inc.; la komunume subtenata kanalo ``conda-"
"forge``, kiu provizas multe da antaŭkonstruitaj pakoj; kaj fakaj "
"pakokolektoj."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:4
msgid "Installing stand alone command line tools"
msgstr "Instali memstarajn komandliniajn ilojn"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:6
msgid ""
"Many packages provide command line applications. Examples of such packages "
"are `mypy <https://github.com/python/mypy>`_, `flake8 <https://github.com/"
"PyCQA/flake8>`_, `black <https://github.com/psf/black>`_, and :ref:`pipenv`."
msgstr ""
"Multaj pakoj provizas komandliniajn aplikprogramojn. Jen kelkaj ekzemploj: "
"`mypy <https://github.com/python/mypy>`_, `flake8 <https://github.com/PyCQA/"
"flake8>`_, `black <https://github.com/psf/black>`_ kaj :ref:`pipenv`."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:12
msgid ""
"Usually you want to be able to access these applications from anywhere on "
"your system, but installing packages and their dependencies to the same "
"global environment can cause version conflicts and break dependencies the "
"operating system has on Python packages."
msgstr ""
"Kutime oni volas atingi tiujn programojn de ie ajn sur la sistemo, sed "
"instalado de pakoj kaj dependaĵoj al la sama malloka medio povas kaŭzi "
"versio-konfliktojn kaj rompi Python-dependecojn de la mastruma sistemo."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:17
msgid ""
":ref:`pipx` solves this by creating a virtual environment for each package, "
"while also ensuring that its applications are accessible through a directory "
"that is on your ``$PATH``. This allows each package to be upgraded or "
"uninstalled without causing conflicts with other packages, and allows you to "
"safely run the applications from anywhere."
msgstr ""
":ref:`pipx` solvas tiun problemon kreante virtualan medion por ĉiu pako, "
"certigante ke programoj estas atingeblaj per dosierujo en via ``$PATH``. Tio "
"permesas ĝisdatigadon aŭ malinstaladon de ĉiu pako sen konflikto kun aliaj "
"pakoj kaj sekuran ruladon ie ajn."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:23
msgid "pipx only works with Python 3.6+."
msgstr "pipx nur funkcias kun Python 3.6+."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:25
msgid "pipx is installed with pip:"
msgstr "Oni instalas pipx per pip:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:43
msgid ""
"``ensurepath`` ensures that the application directory is on your ``$PATH``. "
"You may need to restart your terminal for this update to take effect."
msgstr ""
"``ensurepath`` certigas, ke la programa dosierujo estas en via ``$PATH``. Vi "
"eble bezonas relanĉi vian terminalon por efektivigi la ĝisdatigon."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:46
msgid ""
"Now you can install packages with ``pipx install`` and run the package's "
"applications(s) from anywhere."
msgstr ""
"Nun vi povas instali pakon per ``pipx install`` kaj ruli la programojn de la "
"pako ie ajn."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:54
#: ../source/specifications/entry-points.rst:114
msgid "For example:"
msgstr "Ekzemple:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:76
msgid ""
"To see a list of packages installed with pipx and which applications are "
"available, use ``pipx list``:"
msgstr ""
"Por vidi liston de pakoj instalitaj per pipx kaj liston de haveblaj "
"programoj, uzu ``pipx list``:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:100
msgid "To upgrade or uninstall a package:"
msgstr "Por ĝisdatigi aŭ malinstali pakon:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:107
msgid "pipx can be upgraded or uninstalled with pip:"
msgstr "pipx estas ĝisdatigebla kaj malinstalebla per pip:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:123
msgid ""
"pipx also allows you to install and run the latest version of an application "
"in a temporary, ephemeral environment. For example:"
msgstr ""
"pipx ankaŭ permesas al vi instali kaj ruli la plej novan version de programo "
"en provizora, efemera medio. Ekzemple:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:130
msgid "To see the full list of commands pipx offers, run:"
msgstr "Por vidi la plenan liston de komandoj de pipx, rulu la jenon:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:136
msgid "You can learn more about pipx at https://pipx.pypa.io/."
msgstr "Lernu pli pri pipx ĉe https://pipx.pypa.io/."

#: ../source/guides/installing-using-linux-tools.rst:5
msgid "Installing pip/setuptools/wheel with Linux Package Managers"
msgstr "Instali pip/setuptools/wheel per Linux-pakadministrilojn"

#: ../source/guides/installing-using-linux-tools.rst:8
msgid "2021-07-26"
msgstr "26 Julio 2021"

#: ../source/guides/installing-using-linux-tools.rst:10
msgid ""
"This section covers how to install :ref:`pip`, :ref:`setuptools`, and :ref:"
"`wheel` using Linux package managers."
msgstr ""
"Jen paragrafo pri kiel instali :ref:`pip`, :ref:`setuptools`, kaj :ref:"
"`wheel` per Linux-pakadministriloj."

#: ../source/guides/installing-using-linux-tools.rst:13
msgid ""
"If you're using a Python that was downloaded from `python.org <https://www."
"python.org>`_, then this section does not apply.  See the :ref:"
"`installing_requirements` section instead."
msgstr ""
"Se vi uzas Python elŝutitan el `python.org <https://www.python.org>`_, ĉi "
"tiu paragrafo ne rilatas. Anstataŭe vidu la paragrafon :ref:"
"`installing_requirements`."

#: ../source/guides/installing-using-linux-tools.rst:17
msgid ""
"Note that it's common for the versions of :ref:`pip`, :ref:`setuptools`, "
"and :ref:`wheel` supported by a specific Linux Distribution to be outdated "
"by the time it's released to the public, and updates generally only occur "
"for security reasons, not for feature updates.  For certain Distributions, "
"there are additional repositories that can be enabled to provide newer "
"versions.  The repositories we know about are explained below."
msgstr ""

#: ../source/guides/installing-using-linux-tools.rst:24
msgid ""
"Also note that it's somewhat common for Distributions to apply patches for "
"the sake of security and normalization to their own standards.  In some "
"cases, this can lead to bugs or unexpected behaviors that vary from the "
"original unpatched versions.  When this is known, we will make note of it "
"below."
msgstr ""
"Ankaŭ notu, ke Distribuoj ofte flikas por sekureco kaj konformeco al siaj "
"normoj. Kelkfoje, tio povas kaŭzi cimojn aŭ neatenditajn kondutojn "
"diferencajn de originalaj neflikitaj versioj. Kiam tio estas konata, ni "
"rimarkos tion ĉi-sube."

#: ../source/guides/installing-using-linux-tools.rst:31
msgid "Fedora"
msgstr "Fedora"

#: ../source/guides/installing-using-linux-tools.rst:37
msgid ""
"To learn more about Python in Fedora, please visit the `official Fedora "
"docs`_, `Python Classroom`_ or `Fedora Loves Python`_."
msgstr ""
"Por lerni pli pri Python en Fedora, bonvolu legi `la oficialan dokumentaron "
"de Fedora <official Fedora docs>`_, `Python Classroom`_ aŭ `Fedora Loves "
"Python`_."

#: ../source/guides/installing-using-linux-tools.rst:45
msgid "CentOS/RHEL"
msgstr "CentOS/RHEL"

#: ../source/guides/installing-using-linux-tools.rst:47
msgid ""
"CentOS and RHEL don't offer :ref:`pip` or :ref:`wheel` in their core "
"repositories, although :ref:`setuptools` is installed by default."
msgstr ""
"CentOS kaj RHEL ne ofertas :ref:`pip` nek :ref:`wheel` en siaj ĉefdeponejoj, "
"kvankam :ref:`setuptools` estas apriore instalita."

#: ../source/guides/installing-using-linux-tools.rst:50
msgid "To install pip and wheel for the system Python, there are two options:"
msgstr "Por instali pip kaj wheel por la sistema Python, ekzistas du opcioj:"

#: ../source/guides/installing-using-linux-tools.rst:52
msgid ""
"Enable the `EPEL repository <https://fedoraproject.org/wiki/EPEL>`_ using "
"`these instructions <https://docs.fedoraproject.org/en-US/epel/getting-"
"started/>`__. On EPEL 7, you can install pip and wheel like so:"
msgstr ""
"Ŝaltu la `deponejon EPEL <https://fedoraproject.org/wiki/EPEL>`_ laŭ `la "
"jenaj instrukcioj <https://docs.fedoraproject.org/en-US/epel/getting-started/"
">`__. Sur EPEL 7, vi povas instali pip kaj wheel jene:"

#: ../source/guides/installing-using-linux-tools.rst:61
msgid ""
"Since EPEL only offers extra, non-conflicting packages, EPEL does not offer "
"setuptools, since it's in the core repository."
msgstr ""
"EPEL nur ofertas ekstrajn, senkonfliktajn pakojn. Tial EPEL ne ofertas "
"setuptools, ĉar ĝi estas en la ĉefdeponejo."

#: ../source/guides/installing-using-linux-tools.rst:65
msgid ""
"Enable the `PyPA Copr Repo <https://copr.fedorainfracloud.org/coprs/pypa/"
"pypa/>`_ using `these instructions <https://fedoraproject.org/wiki/"
"Infrastructure/Fedorahosted-retirement>`__ [1]_. You can install pip and "
"wheel like so:"
msgstr ""
"Ŝaltu la `Copr-deponejon de PyPA <https://copr.fedorainfracloud.org/coprs/"
"pypa/pypa/>`_ laŭ `tiuj instrukcioj <https://fedoraproject.org/wiki/"
"Infrastructure/Fedorahosted-retirement>`__ [1]_. Vi povas instali pip kaj "
"wheel jene:"

#: ../source/guides/installing-using-linux-tools.rst:74
msgid "To additionally upgrade setuptools, run:"
msgstr "Por ankaŭ ĝisdatigi setuptools, rulu la jenon:"

#: ../source/guides/installing-using-linux-tools.rst:81
msgid ""
"To install pip, wheel, and setuptools, in a parallel, non-system environment "
"(using yum) then there are two options:"
msgstr ""
"Por instali pip, wheel kaj setuptools en paralela, nesistema medio (uzante "
"yum), ekzistas du opcioj:"

#: ../source/guides/installing-using-linux-tools.rst:85
msgid ""
"Use the \"Software Collections\" feature to enable a parallel collection "
"that includes pip, setuptools, and wheel."
msgstr ""
"Uzu la funkcion «Software Collections» por ŝalti paralelan kolekton "
"inkluzivantan pip, setuptools kaj wheel."

#: ../source/guides/installing-using-linux-tools.rst:88
msgid ""
"For Redhat, see here: https://developers.redhat.com/products/"
"softwarecollections/overview"
msgstr ""
"Por Red Hat, vidu la jenon: https://developers.redhat.com/products/"
"softwarecollections/overview"

#: ../source/guides/installing-using-linux-tools.rst:90
msgid "For CentOS, see here: https://github.com/sclorg"
msgstr "Por CentOS, vidu la jenon: https://github.com/sclorg"

#: ../source/guides/installing-using-linux-tools.rst:92
msgid "Be aware that collections may not contain the most recent versions."
msgstr "Konsciu, ke kolektoj eble ne havas la plej novajn versiojn."

#: ../source/guides/installing-using-linux-tools.rst:94
msgid ""
"Enable the `IUS repository <https://ius.io/setup>`_ and install one of the "
"`parallel-installable <https://ius.io/usage#parallel-installable-packages>`_ "
"Pythons, along with pip, setuptools, and wheel, which are kept fairly up to "
"date."
msgstr ""
"Ŝaltu la `deponejon IUS <https://ius.io/setup>`_, kaj instalu unu el la "
"`paralele instaleblaj <https://ius.io/usage#parallel-installable-packages>`_ "
"Python-oj kune kun pip, setuptools, kaj wheel, kiuj estas plejparte ĝisdataj."

#: ../source/guides/installing-using-linux-tools.rst:100
msgid "For example, for Python 3.4 on CentOS7/RHEL7:"
msgstr "Ekzemple, por Python 3.4 sur CentOS 7 / RHEL 7:"

#: ../source/guides/installing-using-linux-tools.rst:108
msgid "openSUSE"
msgstr "openSUSE"

#: ../source/guides/installing-using-linux-tools.rst:118
msgid "Debian/Ubuntu and derivatives"
msgstr "Debian/Ubuntu kaj idoj"

#: ../source/guides/installing-using-linux-tools.rst:120
msgid "Firstly, update and refresh repository lists by running this command:"
msgstr "Unue, ĝisdatigu la liston de deponejoj per la jena komando:"

#: ../source/guides/installing-using-linux-tools.rst:129
msgid ""
"Recent Debian/Ubuntu versions have modified pip to use the `\"User Scheme\" "
"<https://pip.pypa.io/en/stable/user_guide/#user-installs>`_ by default, "
"which is a significant behavior change that can be surprising to some users."
msgstr ""
"Novaj versioj de Debian/Ubuntu modifis pip apriore uzante la `«Uzanto-"
"Skemon» <https://pip.pypa.io/en/stable/user_guide/#user-installs>`_, kio "
"estas signifa konduta ŝanĝo eble surprizanta kelkajn uzantojn."

#: ../source/guides/installing-using-linux-tools.rst:135
msgid "Arch Linux"
msgstr "Arch Linux"

#: ../source/guides/installing-using-linux-tools.rst:143
msgid ""
"Currently, there is no \"copr\" yum plugin available for CentOS/RHEL, so the "
"only option is to manually place the repo files as described."
msgstr ""
"Aktuale ne ekzistas ``yum``-kromprogramo por ``copr`` havebla ĉe CentOS/"
"RHEL. Tial, oni devas malaŭtomate enmetu deponejajn dosierojn laŭ la ĉi-"
"supra maniero."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:2
msgid "Install packages in a virtual environment using pip and venv"
msgstr "Instali pakojn en virtuala medio per pip kaj venv"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:4
msgid ""
"This guide discusses how to create and activate a virtual environment using "
"the standard library's virtual environment tool :ref:`venv` and install "
"packages. The guide covers how to:"
msgstr ""
"Ĉi tiu estas gvidilo pri kiel krei kaj aktivigi virtualan medion per la ilo :"
"ref:`venv` en la norma biblioteko kaj instali pakojn tien. La gvidilo "
"diskutas la jenon:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:8
msgid "Create and activate a virtual environment"
msgstr "Krei kaj aktivigi virtualan medion"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:9
#: ../source/guides/installing-using-pip-and-virtual-environments.rst:153
msgid "Prepare pip"
msgstr "Prepari pip"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:10
msgid "Install packages into a virtual environment using the ``pip`` command"
msgstr "Instali pakojn en virtualan medion per la komando ``pip``"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:11
msgid "Use and create a requirements file"
msgstr "Uzi kaj krei postulo-dosieron"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:14
msgid ""
"This guide applies to supported versions of Python, currently 3.8 and higher."
msgstr ""
"Ĉi tiu gvidilo validas pri subtenataj versioj de Python, aktuale 3.8 kaj pli "
"novaj."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:18
msgid ""
"This guide uses the term **package** to refer to a :term:`Distribution "
"Package`, which commonly is installed from an external host. This differs "
"from the term :term:`Import Package` which refers to import modules in your "
"Python source code."
msgstr ""
"Ĉi tiu gvidilo uzas la terminon **pako** por signifi :term:`Distribuan Pakon "
"<Distribution Package>`, instalitan el ekstera gastiganto. Tio diferencas de "
"la termino :term:`Importa Pako <Import Package>`, kiu estas importebla "
"modulo en Python-fontokodo."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:25
msgid ""
"This guide has the prerequisite that you are using an official Python "
"version obtained from <https://www.python.org/downloads/>. If you are using "
"your operating system's package manager to install Python, please ensure "
"that Python is installed before proceeding with these steps."
msgstr ""
"Ĉi tiu gvidilo supozas, ke vi uzas oficialan version de Python el <https://"
"www.python.org/downloads/>. Se vi uzas la pakadministrilon de via mastruma "
"sistemo por instali Python, bonvolu certigi, ke Python estas instalita, "
"antaŭ ol sekvi la ĉi-subajn paŝojn."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:32
msgid "Create and Use Virtual Environments"
msgstr "Krei kaj Uzi Virtualajn Mediojn"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:35
msgid "Create a new virtual environment"
msgstr "Krei novan virtualan medion"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:37
msgid ""
":ref:`venv` (for Python 3) allows you to manage separate package "
"installations for different projects. It creates a \"virtual\" isolated "
"Python installation. When you switch projects, you can create a new virtual "
"environment which is isolated from other virtual environments. You benefit "
"from the virtual environment since packages can be installed confidently and "
"will not interfere with another project's environment."
msgstr ""

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:45
msgid ""
"It is recommended to use a virtual environment when working with third party "
"packages."
msgstr ""
"Estas rekomendate uzi virtualan medion dum laborado kun triapartiaj pakoj."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:48
msgid ""
"To create a virtual environment, go to your project's directory and run the "
"following command. This will create a new virtual environment in a local "
"folder named ``.venv``:"
msgstr ""
"Por krei virtualan medion, iru al la dosierujo de via projekto, kaj rulu la "
"jenan komandon. Tio kreos novan virtualan medion en loka dosierujo nomita ``."
"venv``:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:64
msgid ""
"The second argument is the location to create the virtual environment. "
"Generally, you can just create this in your project and call it ``.venv``."
msgstr ""
"La dua argumento estas la loko de la virtuala medio. Ĝenerale, oni povas "
"simpli krei ĝin en sia projekto kaj nomi ĝin ``.venv``."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:67
msgid ""
"``venv`` will create a virtual Python installation in the ``.venv`` folder."
msgstr "``venv`` kreos virtualan Python-instalon en la dosierujo ``.venv``."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:69
msgid ""
"You should exclude your virtual environment directory from your version "
"control system using ``.gitignore`` or similar."
msgstr ""
"Vi ekskluzivu vian virtualmedian dosierujon el via versikontrola sistemo per "
"``.gitignore`` aŭ io simila."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:74
msgid "Activate a virtual environment"
msgstr "Aktivigi virtualan medion"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:76
msgid ""
"Before you can start installing or using packages in your virtual "
"environment you'll need to ``activate`` it. Activating a virtual environment "
"will put the virtual environment-specific ``python`` and ``pip`` executables "
"into your shell's ``PATH``."
msgstr ""
"Antaŭ ol oni povas ekinstali aŭ ekuzi pakojn en sia virtuala medio, oni "
"devas «aktivigi» ĝin. Aktivigado de virtuala medio metos ruleblaĵojn "
"``python`` kaj ``pip`` por la virtuala medio en la medivariablon ``PATH`` de "
"la ŝelo."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:93
msgid ""
"To confirm the virtual environment is activated, check the location of your "
"Python interpreter:"
msgstr ""
"Por konfirmi, ke la virtuala medio estas aktiva, kontrolu la lokon de via "
"Python-interpretilo:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:108
msgid ""
"While the virtual environment is active, the above command will output a "
"filepath that includes the ``.venv`` directory, by ending with the following:"
msgstr ""
"Dum la virtuala medio aktivas, la ĉi-supra komando eligos dosierindikon "
"inkluzivan la dosierujon ``.venv``, finiĝante jene:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:124
msgid ""
"While a virtual environment is activated, pip will install packages into "
"that specific environment. This enables you to import and use packages in "
"your Python application."
msgstr ""
"Kiam virtuala medio estas aktiva, pip instalas pakojn en tiun medion. Tio "
"permesas importi kaj uzi pakojn en sia Python-programo."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:130
msgid "Deactivate a virtual environment"
msgstr "Malaktivigi virtualan medion"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:132
msgid ""
"If you want to switch projects or leave your virtual environment, "
"``deactivate`` the environment:"
msgstr ""
"Se vi volas ŝanĝi projektojn aŭ lasi vian virtualan medion, ``malaktivigu`` "
"la medion:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:140
msgid ""
"Closing your shell will deactivate the virtual environment. If you open a "
"new shell window and want to use the virtual environment, reactivate it."
msgstr ""
"Fermado de la ŝelo malaktivigos la virtualan medion. Se vi malfermas novan "
"ŝelan fenestron kaj volas uzi la virtualan medion, reaktivigu ĝin."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:145
msgid "Reactivate a virtual environment"
msgstr "Reaktivigi virtualan medion"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:147
msgid ""
"If you want to reactivate an existing virtual environment, follow the same "
"instructions about activating a virtual environment. There's no need to "
"create a new virtual environment."
msgstr ""
"Se vi volas reaktivigi ekzistantan virtualan medion, sekvu la samajn "
"instrukciojn pri aktivigado de virtuala medio. Ne necesas krei novan "
"virtualan medion."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:155
msgid ""
":ref:`pip` is the reference Python package manager. It's used to install and "
"update packages into a virtual environment."
msgstr ""
":ref:`pip` estas la referenca Python-pakadministrilo. Oni uzas ĝin por "
"instali kaj ĝisdatigi pakojn en virtualan medion."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:161
msgid ""
"The Python installers for macOS include pip. On Linux, you may have to "
"install an additional package such as ``python3-pip``. You can make sure "
"that pip is up-to-date by running:"
msgstr ""
"La Python-instalilo por macOS inkluzivas pip. Sur Linux, oni eble devas "
"instali plian pakon kiel ``python3-pip``. Oni certigas la ĝisdatigitecon de "
"pip rulante la jenon:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:170
msgid ""
"Afterwards, you should have the latest version of pip installed in your user "
"site:"
msgstr ""
"Poste, vi estos instalinta la plej novan version de pip en vian lokon de "
"uzanto:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:179
msgid ""
"The Python installers for Windows include pip. You can make sure that pip is "
"up-to-date by running:"
msgstr ""
"La Python-instaliloj por Windows inkluzivas pip. Vi povas certigi ke pip "
"estas ĝisdata rulante la jenon:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:187
msgid "Afterwards, you should have the latest version of pip:"
msgstr "Poste, vi havos la plej novan version de pip:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:195
msgid "Install packages using pip"
msgstr "Instali pakojn per pip"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:197
msgid ""
"When your virtual environment is activated, you can install packages. Use "
"the ``pip install`` command to install packages."
msgstr ""
"Kiam via virtuala medio estas aktivigita, vi povas instali pakojn. Uzu la "
"komandon ``pip install`` por instali pakojn."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:201
msgid "Install a package"
msgstr "Instali pakon"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:203
#, fuzzy
#| msgid ""
#| "For example,let's install the `Requests`_ library from the :term:`Python "
#| "Package Index (PyPI)`:"
msgid ""
"For example, let's install the `Requests`_ library from the :term:`Python "
"Package Index (PyPI)`:"
msgstr ""
"Ekzemple, ni instalos la biblioteko `Requests`_ el la :term:`Python-"
"Pakindico (PyPI) <Python Package Index (PyPI)>`:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:218
msgid ""
"pip should download requests and all of its dependencies and install them:"
msgstr "pip elŝutos requests kaj ĝiajn dependaĵojn kaj instalos ilin:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:239
msgid "Install a specific package version"
msgstr "Instali specifan version de pako"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:241
msgid ""
"pip allows you to specify which version of a package to install using :term:"
"`version specifiers <Version Specifier>`. For example, to install a specific "
"version of ``requests``:"
msgstr ""
"pip permesas al vi precizigi la instalotan version de pako per :term:`versio-"
"specifilo <Version Specifier>`. Ekzemple, por instali specifan version de "
"``requests``:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:257
msgid "To install the latest ``2.x`` release of requests:"
msgstr "Por instali la plej novan version ``2.x`` de requests:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:271
msgid "To install pre-release versions of packages, use the ``--pre`` flag:"
msgstr "Por instali antaŭeldonan version de pako, uzu la flagon ``--pre``:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:287
msgid "Install extras"
msgstr "Instali ekstraĵojn"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:289
msgid ""
"Some packages have optional `extras`_. You can tell pip to install these by "
"specifying the extra in brackets:"
msgstr ""
"Kelkaj pakoj havas nedevigajn `ekstraĵojn <extras>`_. Vi povas igi pip "
"instali tiun specifante la ekstraĵon en rektaj krampoj:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:309
msgid "Install a package from source"
msgstr "Instali pakon el fonto"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:311
msgid ""
"pip can install a package directly from its source code. For example, to "
"install the source code in the ``google-auth`` directory:"
msgstr ""
"pip povas instali pakon rekte de la fontkodo. Ekzemple, por instali la "
"fontkodon en la dosierujo ``google-auth``:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:328
msgid ""
"Additionally, pip can install packages from source in :doc:`development mode "
"<setuptools:userguide/development_mode>`, meaning that changes to the source "
"directory will immediately affect the installed package without needing to "
"re-install:"
msgstr ""
"Krome, pip povas instali pakojn el fonto en :doc:`evoluada reĝimo "
"<setuptools:userguide/development_mode>`, tiel ke ŝanĝoj pri la fonta "
"dosierujo tuje efektiviĝas por la instalita pako sen la bezono reinstali:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:347
msgid "Install from version control systems"
msgstr "Instali el versikontrola sistemo"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:349
msgid ""
"pip can install packages directly from their version control system. For "
"example, you can install directly from a git repository:"
msgstr ""
"pip povas instali pakon rekte el versikontrola sistemo. Ekzemple, vi povas "
"instali rekte el git-deponejo:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:356
msgid ""
"For more information on supported version control systems and syntax, see "
"pip's documentation on :ref:`VCS Support <pip:VCS Support>`."
msgstr ""
"Por pli da informoj pri subtenataj versikontrolaj sistemoj kaj sintakso, "
"vidu la dokumentaron de pip pri :ref:`Subtenado de Versikontrola Sistemo "
"<pip:VCS Support>`."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:361
msgid "Install from local archives"
msgstr "Instali el loka arĥivo"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:363
msgid ""
"If you have a local copy of a :term:`Distribution Package`'s archive (a zip, "
"wheel, or tar file) you can install it directly with pip:"
msgstr ""
"Se oni havas lokan kopion de la arĥivo de :term:`Distribua Pako "
"<Distribution Package>` (zip-arĥivo, wheel, aŭ tar-arĥivo), oni povas "
"instali ĝin rekte per pip:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:378
msgid ""
"If you have a directory containing archives of multiple packages, you can "
"tell pip to look for packages there and not to use the :term:`Python Package "
"Index (PyPI)` at all:"
msgstr ""
"Se vi havas dosierujon enhavantan arĥivojn de pluraj pakoj, oni povas igi "
"pip serĉi pakojn tie kaj ne uzi la :term:`Python-Pakindekson <Python Package "
"Index (PyPI)>`:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:394
msgid ""
"This is useful if you are installing packages on a system with limited "
"connectivity or if you want to strictly control the origin of distribution "
"packages."
msgstr ""
"Tio utilas, se oni instalas pakon sur sistemo de limigita konektiteco aŭ se "
"oni volas strikte kontroli la originon de distribuaj pakoj."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:400
msgid "Install from other package indexes"
msgstr "Instali el aliaj pakindeksoj"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:402
msgid ""
"If you want to download packages from a different index than the :term:"
"`Python Package Index (PyPI)`, you can use the ``--index-url`` flag:"
msgstr ""
"Por elŝuti el indekso alia ol :term:`PyPI <Python Package Index (PyPI)>`, "
"uzu la flagon ``--index-url``:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:417
msgid ""
"If you want to allow packages from both the :term:`Python Package Index "
"(PyPI)` and a separate index, you can use the ``--extra-index-url`` flag "
"instead:"
msgstr ""
"Se vi volas permesi pakojn el kaj :term:`PyPI <Python Package Index (PyPI)>` "
"kaj aparta indekso, vi povas anstataŭe uzi la flagon ``--extra-index-url``:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:434
#: ../source/tutorials/installing-packages.rst:393
msgid "Upgrading packages"
msgstr "Ĝisdatigi pakojn"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:436
msgid ""
"pip can upgrade packages in-place using the ``--upgrade`` flag. For example, "
"to install the latest version of ``requests`` and all of its dependencies:"
msgstr ""
"pip povas ĝisdatigi pakon en loko uzante la flagon ``--upgrade``. Ekzemple, "
"por instali la plej novan version de ``requests`` kaj ĉiuj ĝiaj dependaĵoj:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:452
msgid "Using a requirements file"
msgstr "Usi postulo-dosieron"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:454
msgid ""
"Instead of installing packages individually, pip allows you to declare all "
"dependencies in a :ref:`Requirements File <pip:Requirements Files>`. For "
"example you could create a :file:`requirements.txt` file containing:"
msgstr ""
"Anstataŭ instalado de pakoj unuope, pip ebligas deklaradon de ĉiuj "
"dependecoj en :ref:`Postulo-Dosiero <pip:Requirements Files>`. Ekzemple oni "
"povas krei :file:`requirements.txt` enhavantan la jenon:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:463
msgid ""
"And tell pip to install all of the packages in this file using the ``-r`` "
"flag:"
msgstr ""
"Kaj igi pip instali ĉiujn pakojn en ĉi tiu dosiero per la flago ``-r``:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:478
msgid "Freezing dependencies"
msgstr "Frostigi dependecojn"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:480
msgid ""
"Pip can export a list of all installed packages and their versions using the "
"``freeze`` command:"
msgstr ""
"Pip povas eksporti liston de ĉiuj instalitaj pakoj kaj iliaj versioj per la "
"komando ``freeze``:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:495
msgid "Which will output a list of package specifiers such as:"
msgstr "Tio eligos liston de pako-specifiloj jene:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:511
msgid ""
"The ``pip freeze`` command is useful for creating :ref:`pip:Requirements "
"Files` that can re-create the exact versions of all packages installed in an "
"environment."
msgstr ""
"La komando ``pip freeze`` utilas por krei :ref:`Postulo-Dosieron <pip:"
"Requirements Files>` kiu povas rekrei la ekzaktajn versiojn de ĉiuj pakoj "
"instalitaj en iu medio."

#: ../source/guides/installing-using-virtualenv.rst:2
msgid "Installing packages using virtualenv"
msgstr "Instali pakojn per virtualenv"

#: ../source/guides/installing-using-virtualenv.rst:4
msgid ""
"This guide discusses how to install packages using :ref:`pip` and :ref:"
"`virtualenv`, a tool to create isolated Python environments."
msgstr ""
"Jen gvidilo pri kiel instali pakojn per :ref:`pip` kaj :ref:`virtualenv`, "
"kiu estas ilo por krei izolitajn Python-mediojn."

#: ../source/guides/installing-using-virtualenv.rst:8
msgid ""
"This \"how to\" guide on installing packages and using :ref:`virtualenv` is "
"under development. Please refer to the :ref:`virtualenv` documentation for "
"details on installation and usage."
msgstr ""
"Ĉi tiu gvidilo pri instalado de pakoj kaj uzado de :ref:`virtualenv` estas "
"ankoraŭ verkata. Bonvolu vidi la dokumentaro de :ref:`virtualenv` por "
"detaloj pri instalado kaj uzado."

#: ../source/guides/installing-using-virtualenv.rst:13
msgid ""
"This doc uses the term **package** to refer to a :term:`Distribution "
"Package`  which is different from an :term:`Import Package` that which is "
"used to import modules in your Python source code."
msgstr ""
"Ĉi tiu dokumento uzas la terminon **pako** por signifi :term:`Distribuan "
"Pakon <Distribution Package>`, kiu diferencas de :term:`Importa Pako <Import "
"Package>` uzata por importi modulon al via Python-fontkodo."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:6
msgid "Licensing examples and user scenarios"
msgstr "Ekzemploj de licencoj kaj uzkazoj"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:9
msgid ""
":pep:`639` has specified the way to declare a project's license and paths to "
"license files and other legally required information. This document aims to "
"provide clear guidance how to migrate from the legacy to the standardized "
"way of declaring licenses. Make sure your preferred build backend supports :"
"pep:`639` before trying to apply the newer guidelines."
msgstr ""
":pep:`639` precizigis la manieron deklari la licencon de projekto kaj "
"dosierlokojn de licencodosieroj kaj aliajn leĝe postulataj informoj. Ĉi tiu "
"dokumento celas klarigi, kiel migri de la malnova maniero al la normigita "
"maniero deklari licencojn. Certigu, ke via preferata konstrua malfasado "
"subtenas :pep:`639`, antaŭ ol provi la novajn gvidnormojn."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:18
msgid "Licensing Examples"
msgstr "Ekzemploj de Licencoj"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:23
msgid "Basic example"
msgstr "Baza ekzemplo"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:25
msgid ""
"The Setuptools project itself, as of `version 75.6.0 <setuptools7560_>`__, "
"does not use the ``License`` field in its own project source metadata. "
"Further, it no longer explicitly specifies ``license_file``/"
"``license_files`` as it did previously, since Setuptools relies on its own "
"automatic inclusion of license-related files matching common patterns, such "
"as the :file:`LICENSE` file it uses."
msgstr ""
"La projekto Setuptools mem, je `versio 75.6.0 <setuptools7560_>`__, ne uzas "
"la kampon ``License`` en siaj propraj projektaj fontaj metadatenoj. Ĝi ankaŭ "
"ne plu eksplicas ``license_file``/``license_files`` malkiel antaŭe, ĉar ĝi "
"uzas sian propran aŭtomatan inkluzivon de licenco-rilataj dosieroj, kies "
"dosiernomoj estas kutimaj, ekzemple :file:`LICENSE`."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:32
msgid ""
"It includes the following license-related metadata in its :file:`pyproject."
"toml`:"
msgstr ""
"Ĝi inkluzivas la jenajn licencajn metadatenojn en :file:`pyproject.toml`:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:42
msgid "The simplest migration to PEP 639 would consist of using this instead:"
msgstr "La plej simpla migrado al PEP 639 uzos jenon anstataŭe:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:49
msgid "Or, if the project used :file:`setup.cfg`, in its ``[metadata]`` table:"
msgstr ""
"Aŭ, se la projekto uzis :file:`setup.cfg` en sia tabelo ``[metadata]``:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:56
msgid "The output Core Metadata for the distribution packages would then be:"
msgstr "La eligitaj Kernaj Metdatenoj por la distribuaj pakoj estos jenaj:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:63
msgid ""
"The :file:`LICENSE` file would be stored at :file:`/setuptools-{VERSION}/"
"LICENSE` in the sdist and :file:`/setuptools-{VERSION}.dist-info/licenses/"
"LICENSE` in the wheel, and unpacked from there into the site directory (e."
"g. :file:`site-packages/`) on installation; :file:`/` is the root of the "
"respective archive and ``{VERSION}`` the version of the Setuptools release "
"in the Core Metadata."
msgstr ""
"La dosiero :file:`LICENSE` troviĝus en :file:`/setuptools-{VERSIO}/LICENSE` "
"en la fonta distribuo kaj :file:`/setuptools-{VERSIO}.dist-info/licenses/"
"LICENSE` en la wheel, kaj malpakiĝus de tie al la dosierujo de la instalaĵo "
"(ekz. :file:`site-packages/`) dum instalado; :file:`/` estas la radiko de la "
"arĥivo, kaj ``{VERSIO}`` la versio de la eldono de Setuptools laŭ Kernaj "
"Metadatenoj."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:73
msgid "Advanced example"
msgstr "Altnivela ekzemplo"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:75
msgid ""
"Suppose Setuptools were to include the licenses of the third-party projects "
"that are vendored in the :file:`setuptools/_vendor/` and :file:"
"`pkg_resources/_vendor/` directories; specifically:"
msgstr ""
"Supozu, ke Setuptools inkluzivus la licencojn de la triapartiaj projektoj en "
"la dosierujoj :file:`setuptools/_vendor/` kaj :file:`pkg_resources/_vendor/"
"`; specife:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:86
msgid "The license expressions for these projects are:"
msgstr "Jen la licenco-esprimoj por tiuj projektoj:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:95
msgid ""
"A comprehensive license expression covering both Setuptools proper and its "
"vendored dependencies would contain these metadata, combining all the "
"license expressions into one. Such an expression might be:"
msgstr ""
"Ampleksa licenco-esprimo pri kaj Setuptools mem kaj la inkluzivitaj "
"dependaĵoj enhavus tiujn metadatenojn, kombinante ĉiujn licenco-esprimojn. "
"Tia esprimo povas esti jena:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:103
msgid ""
"In addition, per the requirements of the licenses, the relevant license "
"files must be included in the package. Suppose the :file:`LICENSE` file "
"contains the text of the MIT license and the copyrights used by Setuptools, "
"``pyparsing``, ``more_itertools`` and ``ordered-set``; and the :file:"
"`LICENSE*` files in the :file:`setuptools/_vendor/packaging/` directory "
"contain the Apache 2.0 and 2-clause BSD license text, and the Packaging "
"copyright statement and `license choice notice <packaginglicense_>`__."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:111
msgid ""
"Specifically, we assume the license files are located at the following paths "
"in the project source tree (relative to the project root and :file:"
"`pyproject.toml`):"
msgstr ""
"Specife, ni supozas, ke la licenco-dosieroj troviĝas en la jenaj lokoj en la "
"projekta fontarbo (relative al la projekta radiko kaj :file:`pyproject."
"toml`):"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:122
msgid "Putting it all together, our :file:`pyproject.toml` would be:"
msgstr "Resume, la dosiero :file:`pyproject.toml` estos jena:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:133
msgid ""
"Or alternatively, the license files can be specified explicitly (paths will "
"be interpreted as glob patterns):"
msgstr ""
"Alternative, la licenco-dosiero povas esti specifita eksplicite (dosierloko "
"interpretiĝas kiel patroneo):"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:147
msgid "If our project used :file:`setup.cfg`, we could define this in :"
msgstr "Se nia projekto uzus :file:`setup.cfg`, ni povus difini tion en:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:159
msgid ""
"With either approach, the output Core Metadata in the distribution would be:"
msgstr ""
"Per ambaŭ metodoj, la eligitaj Kernaj Metadatenoj en la distribuo estos "
"jenaj:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:170
msgid ""
"In the resulting sdist, with :file:`/` as the root of the archive and "
"``{VERSION}`` the version of the Setuptools release specified in the Core "
"Metadata, the license files would be located at the paths:"
msgstr ""
"En la rezulta fonta distribuo, kun :file:`/` kiel la radiko de la arĥivo kaj "
"``{VERSION}`` la versio de la eldono de Setuptools specifita en la Kernaj "
"Metadatenoj, la licenco-dosieroj troviĝus ĉe:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:181
msgid ""
"In the built wheel, with :file:`/` being the root of the archive and "
"``{VERSION}`` as the previous, the license files would be stored at:"
msgstr ""
"En la konstruita wheel, kun :file:`/` kiel la radiko de la arĥivo kaj "
"``{VERSION}`` sama kiel la ĉi-supra ekzemplo, la licenco-dosieroj troviĝus "
"ĉe:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:191
msgid ""
"Finally, in the installed project, with :file:`site-packages/` being the "
"site dir and ``{VERSION}`` as the previous, the license files would be "
"installed to:"
msgstr ""
"Fine, en la instalita projekto en :file:`site-packages/`, kun ``{VERSION}`` "
"sama kiel la ĉi-supra ekzemplo, la licenco-dosieroj instaliĝus al:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:203
msgid "Expression examples"
msgstr "Ekzemploj de esprimoj"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:205
msgid "Some additional examples of valid ``License-Expression`` values:"
msgstr "Kelkaj pliaj ekzemploj de validaj valoroj de ``License-Expression``:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:220
msgid "User Scenarios"
msgstr "Uzkazoj"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:222
msgid ""
"The following covers the range of common use cases from a user perspective, "
"providing guidance for each. Do note that the following should **not** be "
"considered legal advice, and readers should consult a licensed legal "
"practitioner in their jurisdiction if they are unsure about the specifics "
"for their situation."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:230
msgid "I have a private package that won't be distributed"
msgstr "Mi havas ne distribuotan privatan pakon"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:232
msgid ""
"If your package isn't shared publicly, i.e. outside your company, "
"organization or household, it *usually* isn't strictly necessary to include "
"a formal license, so you wouldn't necessarily have to do anything extra here."
msgstr ""
"Se via pako ne estas havebla publike (ekster via firmao, organizaĵo aŭ "
"familio), *ordinare* ne necesas inkluzivi formalan licencon, tiel ke vi ne "
"devas fari ion ekstre."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:236
msgid ""
"However, it is still a good idea to include ``LicenseRef-Proprietary`` as a "
"license expression in your package configuration, and/or a copyright "
"statement and any legal notices in a :file:`LICENSE.txt` file in the root of "
"your project directory, which will be automatically included by packaging "
"tools."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:244
msgid "I just want to share my own work without legal restrictions"
msgstr "Mi simple volas disdoni mian verkon sen jura restrikto"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:246
msgid ""
"While you aren't required to include a license, if you don't, no one has "
"`any permission to download, use or improve your work "
"<dontchoosealicense_>`__, so that's probably the *opposite* of what you "
"actually want. The `MIT license <chooseamitlicense_>`__ is a great choice "
"instead, as it's simple, widely used and allows anyone to do whatever they "
"want with your work (other than sue you, which you probably also don't want)."
msgstr ""
"Kvankam oni ne devas inkluzivi licencon, se licenco mankus, neniu rajtas "
"`elŝuti, uzi aŭ plibonigi vian verkon <dontchoosealicense_>`__, kio estas "
"verŝajne la malo de tio, kio vi deziras. La `licenco MIT "
"<chooseamitlicense_>`__ estas bona elekto, ĉar ĝi estas simpla, vaste uzata "
"kaj permesas al ĉiuj fari ion ajn deziratan pri via laboro (krom procesi "
"kontraŭ vi, kion vi verŝajne ankaŭ ne deziras)."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:253
msgid ""
"To apply it, just paste `the text <chooseamitlicense_>`__ into a file named :"
"file:`LICENSE.txt` at the root of your repo, and add the year and your name "
"to the copyright line. Then, just add ``license = \"MIT\"`` under "
"``[project]`` in your :file:`pyproject.toml` if your packaging tool supports "
"it, or in its config file/section. You're done!"
msgstr ""
"Por efektivigi ĝin, simple algluu `la tekston <chooseamitlicense_>`__ en "
"dosieron nomitan :file:`LICENSE.txt` ĉe la radiko de via deponejo, kaj "
"aldonu la jaron kaj vian nomon al la kopirajta linio. Poste, simple aldonu "
"``license = \"MIT\"`` sub ``[project]`` en :file:`pyproject.toml` se via "
"pakilo subtenas ĝin, aŭ en ĝia agorda dosiero. Jen finite!"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:261
msgid "I want to distribute my project under a specific license"
msgstr "Mi volas distribui mian projekton sub specifa licenco"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:263
msgid ""
"To use a particular license, simply paste its text into a :file:`LICENSE."
"txt` file at the root of your repo, if you don't have it in a file starting "
"with :file:`LICENSE` or :file:`COPYING` already, and add ``license = "
"\"LICENSE-ID\"`` under ``[project]`` in your :file:`pyproject.toml` if your "
"packaging tool supports it, or else in its config file. You can find the "
"``LICENSE-ID`` and copyable license text on sites like `ChooseALicense "
"<choosealicenselist_>`__ or `SPDX <spdxlist_>`__."
msgstr ""
"Por uzi iu licencon, simple metu la licencan tekston endosieron :file:"
"`LICENSE.txt` ĉe la radiko de la deponejo (se ankoraŭ mankas dosiero, kies "
"nomo komenciĝas per :file:`LICENSE` aŭ :file:`COPYING`), kaj aldonu "
"``license = \"LICENCA-IDENTIGILO\"`` sub ``[project]`` en :file:`pyproject."
"toml` (se la pakilo subtenas ĝin) aŭ en alia agorda dosiero. La ``LICENCA-"
"IDENTIGILO`` kaj kopiebla licenca teksto troviĝas en retejoj kiel "
"`ChooseALicense <choosealicenselist_>`__ aŭ `SPDX <spdxlist_>`__."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:272
msgid ""
"Many popular code hosts, project templates and packaging tools can add the "
"license file for you, and may support the expression as well in the future."
msgstr ""
"Multaj popularaj kodgastigejoj, projekto-ŝablonoj kaj pakiloj povas aldoni "
"la licenco-dosieron por vi kaj povos subteni la esprimon."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:277
msgid "I maintain an existing package that's already licensed"
msgstr "Mi mastrumas ekzistantan pakon sub licenco"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:279
msgid ""
"If you already have license files and metadata in your project, you should "
"only need to make a couple of tweaks to take advantage of the new "
"functionality."
msgstr ""
"Se vi jam havas licencajn dosierojn kaj metadatenojn en via projekto, vi nur "
"devas fari kelkajn ŝanĝetojn por uzi la novajn funkciojn."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:283
msgid ""
"In your project config file, enter your license expression under ``license`` "
"(``[project]`` table in :file:`pyproject.toml`), or the equivalent for your "
"packaging tool, and make sure to remove any legacy ``license`` table subkeys "
"or ``License ::`` classifiers. Your existing ``license`` value may already "
"be valid as one (e.g. ``MIT``, ``Apache-2.0 OR BSD-2-Clause``, etc); "
"otherwise, check the `SPDX license list <spdxlist_>`__ for the identifier "
"that matches the license used in your project."
msgstr ""
"En via projekta agorda dosiero, tajpu vian licenco-esprimon sub ``license`` "
"(tabelo ``[project]`` en :file:`pyproject.toml`), aŭ la ekvivalentaĵon de "
"via pakilo. Certigu, ke vi forigis ajnan malnovan subŝlosilojn de tabelo "
"``license`` aŭ klasigilojn ``License ::``. Via ekzistanta valoro por "
"``license`` povas jam validi (ekz. ``MIT``, ``Apache-2.0 OR BSD-2-Clause`` "
"ktp); alie, vidu la `liston de SPDX-licencoj <spdxlist_>`__ por la "
"identigilo por la licenco de via projekto."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:292
msgid ""
"Make sure to list your license files under ``license-files`` under "
"``[project]`` in :file:`pyproject.toml` or else in your tool's configuration "
"file."
msgstr ""
"Certe listigu viajn licenco-dosierojn sub ``license-files`` sub "
"``[project]`` en :file:`pyproject.toml` aŭ en la agorda dosiero de via ilo."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:296
msgid ""
"See the :ref:`licensing-example-basic` for a simple but complete real-world "
"demo of how this works in practice. See also the best-effort guidance on how "
"to translate license classifiers into license expression provided by the :"
"pep:`639` authors: `Mapping License Classifiers to SPDX Identifiers "
"<mappingclassifierstospdx_>`__. Packaging tools may support automatically "
"converting legacy licensing metadata; check your tool's documentation for "
"more information."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:306
msgid "My package includes other code under different licenses"
msgstr "Mia pako inkluzivas alian kodon sub malsamaj licencoj"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:308
msgid ""
"If your project includes code from others covered by different licenses, "
"such as vendored dependencies or files copied from other open source "
"software, you can construct a license expression to describe the licenses "
"involved and the relationship between them."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:314
msgid ""
"In short, ``License-1 AND License-2`` mean that *both* licenses apply to "
"your project, or parts of it (for example, you included a file under another "
"license), and ``License-1 OR License-2`` means that *either* of the licenses "
"can be used, at the user's option (for example, you want to allow users a "
"choice of multiple licenses). You can use parenthesis (``()``) for grouping "
"to form expressions that cover even the most complex situations."
msgstr ""
"Resume, ``Licenco-1 AND Licenco-2`` signifas, ke *ambaŭ* licencoj efektivas "
"pri la projekto aŭ partoj de la projekto (ekzemple, la aŭtoro inkluzivis "
"dosieron sub alia licenco), kaj ``Licenco-1 OR Licenco-2`` signifas, ke *aŭ "
"unu aŭ la alia* el la licencoj estas uzeblaj laŭ la volo de la uzanto "
"(ekzemple, la aŭtoro volas permesi al la aŭtoro elekti inter pluraj "
"licencoj). Oni uzas rondajn krampojn (``()``) por grupigi esprimojn, "
"sufiĉante por eĉ la plej komplikaj situacioj."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:322
msgid ""
"In your project config file, enter your license expression under ``license`` "
"(``[project]`` table of :file:`pyproject.toml`), or the equivalent for your "
"packaging tool, and make sure to remove any legacy ``license`` table subkeys "
"or ``License ::`` classifiers."
msgstr ""
"En via projekta agorda dosiero, tajpu vian licenco-esprimon sub ``license`` "
"(tabelo ``[project]`` en :file:`pyproject.toml`), aŭ la ekvivalentaĵon de "
"via pakilo. Certigu, ke vi forigis ajnan malnovan subŝlosilojn de tabelo "
"``license`` aŭ klasigilojn ``License ::``."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:328
msgid ""
"Also, make sure you add the full license text of all the licenses as files "
"somewhere in your project repository. List the relative path or glob "
"patterns to each of them under ``license-files`` under ``[project]`` in :"
"file:`pyproject.toml` (if your tool supports it), or else in your tool's "
"configuration file."
msgstr ""

#: ../source/guides/licensing-examples-and-user-scenarios.rst:334
msgid ""
"As an example, if your project was licensed MIT but incorporated a vendored "
"dependency (say, ``packaging``) that was licensed under either Apache 2.0 or "
"the 2-clause BSD, your license expression would be ``MIT AND (Apache-2.0 OR "
"BSD-2-Clause)``. You might have a :file:`LICENSE.txt` in your repo root, and "
"a :file:`LICENSE-APACHE.txt` and :file:`LICENSE-BSD.txt` in the :file:"
"`_vendor/` subdirectory, so to include all of them, you'd specify "
"``[\"LICENSE.txt\", \"_vendor/packaging/LICENSE*\"]`` as glob patterns, or "
"``[\"LICENSE.txt\", \"_vendor/LICENSE-APACHE.txt\", \"_vendor/LICENSE-BSD."
"txt\"]`` as literal file paths."
msgstr ""
"Ekzemple, se via projekto estus sub la licenco MIT sed inkluzivus dependaĵon "
"(ekzemple ``packaging``) sub aŭ Apache 2.0 aŭ la dukondiĉa BSD, la licenco-"
"esprimo estus ``MIT AND (Apache-2.0 OR BSD-2-Clause)``. Oni havus :file:"
"`LICENSE.txt` en la deponeja radiko, kaj :file:`LICENSE-APACHE.txt` kaj :"
"file:`LICENSE-BSD.txt` en la subdosierujo :file:`_vendor/`. Por inkluzivi "
"ĉiujn, oni specifus aŭ la patroneon ``[\"LICENSE.txt\", \"_vendor/packaging/"
"LICENSE*\"]`` aŭ la dosierlokojn ``[\"LICENSE.txt\", \"_vendor/LICENSE-"
"APACHE.txt\", \"_vendor/LICENSE-BSD.txt\"]``."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:345
msgid ""
"See a fully worked out :ref:`licensing-example-advanced` for an end-to-end "
"application of this to a real-world complex project, with many technical "
"details, and consult a `tutorial <spdxtutorial_>`__ for more help and "
"examples using SPDX identifiers and expressions."
msgstr ""
"Vidu :ref:`licensing-example-advanced` por plena ekzemplo de tio pri realeca "
"komplika projekto,, kun multaj teĥnikaj detaloj. Vidu `lernilon "
"<spdxtutorial_>`__ por pli da helpo kaj ekzemploj pri SPDX-identigiloj kaj "
"esprimoj."

#: ../source/guides/making-a-pypi-friendly-readme.rst:2
msgid "Making a PyPI-friendly README"
msgstr "Verki README-dosieron uzeblan por PyPI"

#: ../source/guides/making-a-pypi-friendly-readme.rst:4
msgid ""
"README files can help your users understand your project and can be used to "
"set your project's description on PyPI. This guide helps you create a README "
"in a PyPI-friendly format and include your README in your package so it "
"appears on PyPI."
msgstr ""
"README-dosiero helpas uzantojn kompreni vian projekton kaj provizas "
"priskribon pri via projekto ĉe PyPI. Ĉi tiu gvidilo helpas vin verki README "
"en PyPI-kongrua formo kaj inkluzivi la README en la pakon por montri ĝin ĉe "
"PyPI."

#: ../source/guides/making-a-pypi-friendly-readme.rst:9
msgid "Creating a README file"
msgstr "Krei README-dosieron"

#: ../source/guides/making-a-pypi-friendly-readme.rst:11
msgid ""
"README files for Python projects are often named ``README``, ``README.txt``, "
"``README.rst``, or ``README.md``."
msgstr ""
"La README-dosieroj por Python-projektoj ofte nomiĝas ``README``, ``README."
"txt``, ``README.rst``, aŭ ``README.md``."

#: ../source/guides/making-a-pypi-friendly-readme.rst:13
msgid ""
"For your README to display properly on PyPI, choose a markup language "
"supported by PyPI. Formats supported by `PyPI's README renderer <https://"
"github.com/pypa/readme_renderer>`_ are:"
msgstr ""
"Por bona montrado de via README, elektu marklingvon subtenatan de PyPI. Jen "
"la dosierformoj subtenataj de `la README-montrilo de PyPI <https://github."
"com/pypa/readme_renderer>`:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:16
msgid "plain text"
msgstr "ordinara teksto"

#: ../source/guides/making-a-pypi-friendly-readme.rst:17
msgid ""
"`reStructuredText <https://docutils.sourceforge.io/rst.html>`_ (without "
"Sphinx extensions)"
msgstr ""
"`reStructuredText <https://docutils.sourceforge.io/rst.html>`_ (sen "
"etendaĵoj Sphinx)"

#: ../source/guides/making-a-pypi-friendly-readme.rst:18
msgid ""
"Markdown (`GitHub Flavored Markdown <https://github.github.com/gfm/>`_ by "
"default, or `CommonMark <https://commonmark.org/>`_)"
msgstr ""
"Markdown (`GitHub-Stila Markdown <https://github.github.com/gfm/>`_ "
"implicite, aŭ `CommonMark <https://commonmark.org/>`_)"

#: ../source/guides/making-a-pypi-friendly-readme.rst:21
msgid ""
"It's customary to save your README file in the root of your project, in the "
"same directory as your :file:`setup.py` file."
msgstr ""
"Estas kutime meti la README-dosieron en la radiko de la projekto, en la sama "
"dosierujo kiel la dosiero :file:`setup.py`."

#: ../source/guides/making-a-pypi-friendly-readme.rst:25
msgid "Including your README in your package's metadata"
msgstr "Inkluzivi vian README-dosieron en la metadatenojn de via pako"

#: ../source/guides/making-a-pypi-friendly-readme.rst:27
msgid ""
"To include your README's contents as your package description, set your "
"project's ``Description`` and ``Description-Content-Type`` metadata, "
"typically in your project's :file:`setup.py` file."
msgstr ""
"Por inkluzivi la enhavon de README kiel la priskribon de la pako, agordu la "
"metadatenojn ``Description`` kaj ``Description-Content-Type``, ofte en la "
"dosiero :file:`setup.py` de via projekto."

#: ../source/guides/making-a-pypi-friendly-readme.rst:33
msgid ":ref:`description-optional`"
msgstr ":ref:`description-optional`"

#: ../source/guides/making-a-pypi-friendly-readme.rst:34
msgid ":ref:`description-content-type-optional`"
msgstr ":ref:`description-content-type-optional`"

#: ../source/guides/making-a-pypi-friendly-readme.rst:36
msgid ""
"For example, to set these values in a package's :file:`setup.py` file, use "
"``setup()``'s ``long_description`` and ``long_description_content_type``."
msgstr ""
"Ekzemple, por agordi tiujn valorojn en la dosiero :file:`setup.py` de pako, "
"uzu la argumentojn ``long_description`` kaj "
"``long_description_content_type`` de ``setup()``."

#: ../source/guides/making-a-pypi-friendly-readme.rst:39
msgid ""
"Set the value of ``long_description`` to the contents (not the path) of the "
"README file itself. Set the ``long_description_content_type`` to an accepted "
"``Content-Type``-style value for your README file's markup, such as ``text/"
"plain``, ``text/x-rst`` (for reStructuredText), or ``text/markdown``."
msgstr ""
"Agordu la valoron de ``long_description`` al la enhavo (ne la dosierloko) de "
"la dosiero README. Agordu ``long_description_content_type`` al akceptata "
"``Content-Type``-stila valoro por la marklingvo de via dosiero README, "
"ekzemple ``text/plain``, ``text/x-rst`` (por reStructuredText), aŭ ``text/"
"markdown``."

#: ../source/guides/making-a-pypi-friendly-readme.rst:45
msgid ""
"If you're using GitHub-flavored Markdown to write a project's description, "
"ensure you upgrade the following tools:"
msgstr ""
"Se vi uzas GitHub-stilan Markdown por priskribi projekton, certigu, ke vi "
"ĝisdatigis la jenajn ilojn:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:60
msgid "The minimum required versions of the respective tools are:"
msgstr "Jen la minimumaj postulataj versioj de tiuj iloj:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:62
msgid "``setuptools >= 38.6.0``"
msgstr ""

#: ../source/guides/making-a-pypi-friendly-readme.rst:63
msgid "``wheel >= 0.31.0``"
msgstr ""

#: ../source/guides/making-a-pypi-friendly-readme.rst:64
msgid "``twine >= 1.11.0``"
msgstr ""

#: ../source/guides/making-a-pypi-friendly-readme.rst:66
msgid ""
"It's recommended that you use ``twine`` to upload the project's distribution "
"packages:"
msgstr ""
"Ni rekomendas, ke vi uzu ``twine`` por alŝuti la distribuajn pakojn de via "
"projekto:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:72
msgid ""
"For example, see this :file:`setup.py` file, which reads the contents of :"
"file:`README.md` as ``long_description`` and identifies the markup as GitHub-"
"flavored Markdown:"
msgstr ""
"Jen ekzempla dosiero :file:`setup.py` leganta :file:`README.md` kiel "
"``long_description`` kaj identiganta la marklingvon kiel GitHub-stilan "
"Markdown:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:94
msgid "Validating reStructuredText markup"
msgstr "Kontroli la validecon de reStructuredText"

#: ../source/guides/making-a-pypi-friendly-readme.rst:96
msgid ""
"If your README is written in reStructuredText, any invalid markup will "
"prevent it from rendering, causing PyPI to instead just show the README's "
"raw source."
msgstr ""
"Se via README estas en reStructuredText, ajna nevalida marklingvaĵo "
"malhelpos montradon, kaŭzante la montradon de la kruda fonto ĉe PyPI."

#: ../source/guides/making-a-pypi-friendly-readme.rst:99
msgid ""
"Note that Sphinx extensions used in docstrings, such as :doc:`directives "
"<sphinx:usage/restructuredtext/directives>` and :doc:`roles <sphinx:usage/"
"restructuredtext/roles>` (e.g., \"``:py:func:`getattr```\" or \"``:ref:`my-"
"reference-label```\"), are not allowed here and will result in error "
"messages like \"``Error: Unknown interpreted text role \"py:func\".``\"."
msgstr ""
"Notu, la Sphinx-etendaĵoj uzataj en docstring, kiel :doc:`direktivoj <sphinx:"
"usage/restructuredtext/directives>` kaj :doc:`roloj <sphinx:usage/"
"restructuredtext/roles>` (ekzemple «``:py:func:`getattr```» aŭ «``:ref:`mia-"
"referenca-etikedo```») ne estas permesata ĉi tie kaj kaŭzos erarmesaĝojn "
"kiel «``Error: Unknown interpreted text role \"py:func\".``»."

#: ../source/guides/making-a-pypi-friendly-readme.rst:104
msgid ""
"You can check your README for markup errors before uploading as follows:"
msgstr ""
"Vi povas kontroli vian README pri marklingvaj erarojn antaŭ alŝutado jene:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:106
msgid ""
"Install the latest version of `twine <https://github.com/pypa/twine>`_; "
"version 1.12.0 or higher is required:"
msgstr ""
"Instalu la plej novan version de `twine <https://github.com/pypa/twine>`_; "
"versio 1.12.0 aŭ pli nova estas bezonata:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:121
msgid ""
"Build the sdist and wheel for your project as described under :ref:"
"`Packaging Your Project`."
msgstr ""
"Konstruu la fontan distribuon kaj la wheel por via projekto laŭ :ref:`Paki "
"Vian Projekton <Packaging Your Project>`."

#: ../source/guides/making-a-pypi-friendly-readme.rst:124
msgid "Run ``twine check`` on the sdist and wheel:"
msgstr "Rulu ``twine check`` pri la fonta distribuo kaj la wheel:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:130
msgid ""
"This command will report any problems rendering your README.  If your markup "
"renders fine, the command will output ``Checking distribution FILENAME: "
"Passed``."
msgstr ""
"Ĉi tiu komando raportis ajnan problemon pri montrado de via README.  Se ĉio "
"estas senproblema, la komando eligos ``Checking distribution DOSIERNOMO: "
"Passed``."

#: ../source/guides/migrating-to-pypi-org.rst:6
msgid "Migrating to PyPI.org"
msgstr "Migri al PyPI.org"

#: ../source/guides/migrating-to-pypi-org.rst:8
#: ../source/guides/multi-version-installs.rst:8
#: ../source/guides/supporting-multiple-python-versions.rst:9
#: ../source/guides/supporting-windows-using-appveyor.rst:7
msgid "Obsolete"
msgstr "Evitinda"

#: ../source/guides/migrating-to-pypi-org.rst:10
msgid ""
":term:`pypi.org` is the new, rewritten version of PyPI that has replaced the "
"legacy PyPI code base. It is the default version of PyPI that people are "
"expected to use. These are the tools and processes that people will need to "
"interact with ``PyPI.org``."
msgstr ""
":term:`pypi.org` estas la nova, reverkita versio de PyPI anstataŭinta la "
"malnovan kodon de PyPI. Ĝi estas la apriora versio de PyPI, kiun ĉiuj uzu. "
"Jen la iloj kaj procedoj por interagi kun ``PyPI.org``."

#: ../source/guides/migrating-to-pypi-org.rst:16
msgid "Publishing releases"
msgstr "Publikigi eldonojn"

#: ../source/guides/migrating-to-pypi-org.rst:18
msgid "``pypi.org`` is the default upload platform as of September 2016."
msgstr "``pypi.org`` estas la implicita alŝuta platformo en Septembro 2016."

#: ../source/guides/migrating-to-pypi-org.rst:20
msgid ""
"Uploads through ``pypi.python.org`` were *switched off* on **July 3, 2017**. "
"As of April 13th, 2018, ``pypi.org`` is the URL for PyPI."
msgstr ""
"Alŝutoj per ``pypi.python.org` *ne plu eblas* ekde **3 Julio 2017**. Je 13 "
"Aprilo 2018, ``pypi.org`` estas la retadreso por PyPI."

#: ../source/guides/migrating-to-pypi-org.rst:23
msgid ""
"The recommended way to migrate to PyPI.org for uploading is to ensure that "
"you are using a new enough version of your upload tool."
msgstr ""
"La rekomendata maniero migri al PyPI.org por alŝutado estas certigi, ke vi "
"uzas sufiĉe novan version de via alŝutilo."

#: ../source/guides/migrating-to-pypi-org.rst:26
msgid ""
"The default upload settings switched to ``pypi.org`` in the following "
"versions:"
msgstr "La implicita alŝuta celo ŝanĝiĝis al ``pypi.org`` en la jenaj versioj:"

#: ../source/guides/migrating-to-pypi-org.rst:28
msgid "``twine`` 1.8.0"
msgstr ""

#: ../source/guides/migrating-to-pypi-org.rst:29
msgid "``setuptools`` 27.0.0"
msgstr ""

#: ../source/guides/migrating-to-pypi-org.rst:30
msgid "Python 2.7.13 (``distutils`` update)"
msgstr "Python 2.7.13 (ĝisdatigo de ``distutils``)"

#: ../source/guides/migrating-to-pypi-org.rst:31
msgid "Python 3.4.6 (``distutils`` update)"
msgstr "Python 3.4.6 (ĝisdatigo de ``distutils``)"

#: ../source/guides/migrating-to-pypi-org.rst:32
msgid "Python 3.5.3 (``distutils`` update)"
msgstr "Python 3.5.3 (ĝisdatigo de ``distutils``)"

#: ../source/guides/migrating-to-pypi-org.rst:33
msgid "Python 3.6.0 (``distutils`` update)"
msgstr "Python 3.6.0 (ĝisdatigo de ``distutils``)"

#: ../source/guides/migrating-to-pypi-org.rst:35
msgid ""
"In addition to ensuring you're on a new enough version of the tool for the "
"tool's default to have switched, you must also make sure that you have not "
"configured the tool to override its default upload URL. Typically this is "
"configured in a file located at :file:`$HOME/.pypirc`. If you see a file "
"like:"
msgstr ""

#: ../source/guides/migrating-to-pypi-org.rst:52
msgid ""
"Then simply delete the line starting with ``repository`` and you will use "
"your upload tool's default URL."
msgstr ""
"Poste simple forigu la linion komenciĝanta per ``repository``, kaj vi uzos "
"la aprioran retadreson de via alŝutilo."

#: ../source/guides/migrating-to-pypi-org.rst:55
msgid ""
"If for some reason you're unable to upgrade the version of your tool to a "
"version that defaults to using PyPI.org, then you may edit :file:`$HOME/."
"pypirc` and include the ``repository:`` line, but use the value ``https://"
"upload.pypi.org/legacy/`` instead:"
msgstr ""
"Se ial vi ne povas ĝisdatigi ilon al versio, kiu apriore uzas PyPI.org, do "
"vi modifu :file:`$HOME/.pypirc` kaj inkluzivu la linion ``repository:``, sed "
"anstataŭe uzu la valoron ``https://upload.pypi.org/legacy/``:"

#: ../source/guides/migrating-to-pypi-org.rst:71
msgid ""
"(``legacy`` in this URL refers to the fact that this is the new server "
"implementation's emulation of the legacy server implementation's upload API.)"
msgstr ""
"(``legacy`` en ĉi tiu retadreso signifas, ke tio estas la imitado, far la "
"nova servila realigo, de la alŝuta API de la malnova servila realigo.)"

#: ../source/guides/migrating-to-pypi-org.rst:77
msgid "Registering package names & metadata"
msgstr "Registri pakajn nomojn kaj metadatenojn"

#: ../source/guides/migrating-to-pypi-org.rst:79
msgid ""
"Explicit pre-registration of package names with the ``setup.py register`` "
"command prior to the first upload is no longer required, and is not "
"currently supported by the legacy upload API emulation on PyPI.org."
msgstr ""
"Eksplicita antaŭregistrado de paknomo per la komando ``setup.py register`` "
"antaŭ la unua alŝuto ne plu necesas kaj aktuale ne estas subtenata de la "
"imitado de la malnova alŝuta API ĉe PyPI.org."

#: ../source/guides/migrating-to-pypi-org.rst:83
msgid ""
"As a result, attempting explicit registration after switching to using PyPI."
"org for uploads will give the following error message::"
msgstr ""
"Tial, provado registri eksplicite post ŝanĝado al PyPI. org por alŝutado "
"kaŭzos la jenan eraron::"

#: ../source/guides/migrating-to-pypi-org.rst:88
msgid ""
"The solution is to skip the registration step, and proceed directly to "
"uploading artifacts."
msgstr "La solvo estas transsalti la registradon kaj rekte alŝuti artefaktojn."

#: ../source/guides/migrating-to-pypi-org.rst:93
#: ../source/guides/using-testpypi.rst:5
msgid "Using TestPyPI"
msgstr "Uzi TestPyPI"

#: ../source/guides/migrating-to-pypi-org.rst:95
msgid ""
"Legacy TestPyPI (testpypi.python.org) is no longer available; use `test.pypi."
"org <https://test.pypi.org>`_ instead. If you use TestPyPI, you must update "
"your :file:`$HOME/.pypirc` to handle TestPyPI's new location, by replacing "
"``https://testpypi.python.org/pypi`` with ``https://test.pypi.org/legacy/``, "
"for example:"
msgstr ""
"La malonva Prova PyPI (testpypi.python.org) ne plu haveblas; uzu `test.pypi."
"org <https://test.pypi.org>`_ anstataŭe. Se vi uzas la Provan PyPI, vi devas "
"ĝisdatigi la :file:`$HOME/.pypirc` por la nova loko de Prova PyPI, "
"anstataŭigante ``https://testpypi.python.org/pypi`` per ``https://test.pypi."
"org/legacy/``, jene:"

#: ../source/guides/migrating-to-pypi-org.rst:117
msgid "Registering new user accounts"
msgstr "Registri novajn uzantokontojn"

#: ../source/guides/migrating-to-pypi-org.rst:119
msgid ""
"In order to help mitigate spam attacks against PyPI, new user registration "
"through ``pypi.python.org`` was *switched off* on **February 20, 2018**. New "
"user registrations at ``pypi.org`` are open."
msgstr ""
"Por malpliigi atakojn kontraŭ PyPI, registrado de nova uzanto per ``pypi."
"python.org`` *malebliĝis* je *20a de Februaro 2018*. Eblas registrado de "
"nova uzanto ĉe ``pypi.org``."

#: ../source/guides/migrating-to-pypi-org.rst:125
msgid "Browsing packages"
msgstr "Foliumi pakojn"

#: ../source/guides/migrating-to-pypi-org.rst:127
msgid ""
"While ``pypi.python.org`` is may still be used in links from other PyPA "
"documentation, etc, the default interface for browsing packages is ``pypi."
"org``. The domain pypi.python.org now redirects to pypi.org, and may be "
"disabled sometime in the future."
msgstr ""
"Kvankam hiperligoj en alia dokumentoj de PyPA povas ankoraŭ uzi ``pypi."
"python.org'', la apriora fasado por foliumi pakojn estas ``pypi.org``. La "
"retejo ``pypi.python.org`` nun estas redirektata al ``pypi.org``, kaj povas "
"ekmalesti estontece."

#: ../source/guides/migrating-to-pypi-org.rst:134
msgid "Downloading packages"
msgstr "Elŝuti pakojn"

#: ../source/guides/migrating-to-pypi-org.rst:136
msgid "``pypi.org`` is the default host for downloading packages."
msgstr "``pypi.org`` estas la implicita servilo por elŝuti pakojn."

#: ../source/guides/migrating-to-pypi-org.rst:139
msgid "Managing published packages and releases"
msgstr "Administri eldonitajn pakojn kaj eldonojn"

#: ../source/guides/migrating-to-pypi-org.rst:141
msgid ""
"``pypi.org`` provides a fully functional interface for logged in users to "
"manage their published packages and releases."
msgstr ""
"``pypi.org`` provizas plenfunkcian fasadon por salutintaj uzantoj administri "
"siajn eldonitajn pakojn kaj versiojn."

#: ../source/guides/modernize-setup-py-project.rst:6
msgid "How to modernize a ``setup.py`` based project?"
msgstr "Kiel modernigi projekton uzantan ``setup.py``?"

#: ../source/guides/modernize-setup-py-project.rst:10
msgid "Should ``pyproject.toml`` be added?"
msgstr "Ĉu aldoni ``pyproject.toml``?"

#: ../source/guides/modernize-setup-py-project.rst:12
msgid ""
"A :term:`pyproject.toml` file is strongly recommended. The presence of a :"
"file:`pyproject.toml` file itself does not bring much. [#]_ What is actually "
"strongly recommended is the ``[build-system]`` table in :file:`pyproject."
"toml`."
msgstr ""
"Dosiero :term:`pyproject.toml` estas rekomendegata. La ekzisto de dosiero :"
"file:`pyproject.toml` mem ne tre gravas. [#]_ Tio, kio estas rekomendegata, "
"estas la tabelo ``[build-system]`` en :file:`pyproject.toml`."

#: ../source/guides/modernize-setup-py-project.rst:16
msgid ""
"Note that it has influence on the build isolation feature of pip, see below."
msgstr ""
"Notu, ke tio influas la konstruado-izolan funkcion de pip; vidu ĉi-sube."

#: ../source/guides/modernize-setup-py-project.rst:23
msgid ""
"No, :file:`setup.py` can exist in a modern :ref:`setuptools` based project. "
"The :term:`setup.py` file is a valid configuration file for setuptools that "
"happens to be written in Python. However, the following commands are "
"deprecated and **MUST NOT** be run anymore, and their recommended "
"replacement commands should be used instead:"
msgstr ""
"Ne, :file:`setup.py` povas ekzisti en moderna :ref:`setuptools`-baza "
"projekto. La dosiero :term:`setup.py` estas valida agorda dosiero por "
"setuptools, verkita en Python. Tamen, la jenaj komandoj estas evitindaj; oni "
"**DEVAS NE** ruli tiujn, kaj oni anstataŭe uzu la rekomendatajn "
"anstataŭantajn komandojn:"

#: ../source/guides/modernize-setup-py-project.rst:36
msgid "``python -m build``"
msgstr "``python -m build``"

#: ../source/guides/modernize-setup-py-project.rst:42
#: ../source/guides/modernize-setup-py-project.rst:66
#: ../source/guides/modernize-setup-py-project.rst:111
#: ../source/guides/modernize-setup-py-project.rst:129
#: ../source/guides/modernize-setup-py-project.rst:221
msgid "For more details:"
msgstr "Por pliaj detaloj:"

#: ../source/guides/modernize-setup-py-project.rst:44
msgid ":ref:`setup-py-deprecated`"
msgstr ":ref:`setup-py-deprecated`"

#: ../source/guides/modernize-setup-py-project.rst:48
msgid "Where to start?"
msgstr "De kie komenci?"

#: ../source/guides/modernize-setup-py-project.rst:50
msgid ""
"The :term:`project` must contain a :file:`pyproject.toml` file at the root "
"of its source tree that contains a ``[build-system]`` table like so:"
msgstr ""
"La :term:`projekto <project>` devas ĉe la radiko de sia fontarbo enhavi "
"dosieron :file:`pyproject.toml` enhavantan tabelon ``[build-system]`` jene:"

#: ../source/guides/modernize-setup-py-project.rst:60
msgid ""
"This is the standardized method of letting :term:`build frontends <Build "
"Frontend>` know that :ref:`setuptools` is the :term:`build backend <Build "
"Backend>` for this project."
msgstr ""
"Tio estas la norma metodo por sciigi :term:`konstruan fasadon <Build "
"Frontend>`, ke :ref:`setuptools` estas la :term:`konstrua malfasado <Build "
"Backend>` por la projekto."

#: ../source/guides/modernize-setup-py-project.rst:63
msgid ""
"Note that the presence of a :file:`pyproject.toml` file (even if empty) "
"triggers :ref:`pip` to change its default behavior to use *build isolation*."
msgstr ""
"Notu ke la ĉeesto de dosiero :file:`pyproject.toml` (eĉ malplena) igas :ref:"
"`pip` ŝanĝi la aprioran konduton al uzo de *konstrua izolado*."

#: ../source/guides/modernize-setup-py-project.rst:68
msgid ":ref:`distributing-packages`"
msgstr ":ref:`distributing-packages`"

#: ../source/guides/modernize-setup-py-project.rst:69
#: ../source/guides/modernize-setup-py-project.rst:113
msgid ":ref:`pyproject-build-system-table`"
msgstr ":ref:`pyproject-build-system-table`"

#: ../source/guides/modernize-setup-py-project.rst:70
#: ../source/guides/modernize-setup-py-project.rst:131
#: ../source/guides/modernize-setup-py-project.rst:247
msgid ":doc:`pip:reference/build-system/pyproject-toml`"
msgstr ":doc:`pip:reference/build-system/pyproject-toml`"

#: ../source/guides/modernize-setup-py-project.rst:74
msgid "How to handle additional build-time dependencies?"
msgstr "Kiel pritrakti pliajn konstrutempajn dependecojn?"

#: ../source/guides/modernize-setup-py-project.rst:76
msgid ""
"On top of setuptools itself, if :file:`setup.py` depends on other third-"
"party libraries (outside of Python's standard library), those must be listed "
"in the ``requires`` list of the ``[build-system]`` table, so that the build "
"frontend knows to install them when building the :term:`distributions "
"<Distribution Package>`."
msgstr ""
"Krom setuptools mem, se :file:`setup.py` dependas de alia triapartia "
"bibilioteko (ekster la norma biblioteko de Python), la listo ``requires`` de "
"la tabelo ``[build-system]`` devas inkluzivi ĝin, por ke la konstrua fasado "
"instalos ĝin dum konstruado de la :term:`distribuo <Distribution Package>`."

#: ../source/guides/modernize-setup-py-project.rst:82
#: ../source/guides/modernize-setup-py-project.rst:139
#: ../source/guides/modernize-setup-py-project.rst:174
msgid "For example, a :file:`setup.py` file such as this:"
msgstr "Ekzemple, jena dosiero :file:`setup.py`:"

#: ../source/guides/modernize-setup-py-project.rst:99
msgid ""
"requires a :file:`pyproject.toml` file like this (:file:`setup.py` stays "
"unchanged):"
msgstr ""
"postulas dosieron :file:`pyproject.toml` jene (:file:`setup.py` restas "
"senŝanĝe):"

#: ../source/guides/modernize-setup-py-project.rst:117
msgid "What is the build isolation feature?"
msgstr "Kio estas la konstruo-izolada funkcio?"

#: ../source/guides/modernize-setup-py-project.rst:119
msgid ""
"Build frontends typically create an ephemeral virtual environment where they "
"install only the build dependencies (and their dependencies) that are listed "
"under ``build-system.requires`` and trigger the build in that environment."
msgstr ""
"Konstrua fasado tipe kreas provizoran virtualan medion, en kiu instaliĝas "
"nur la konstruaj dependaĵoj (kaj la dependaĵoj de dependaĵoj) en la listo de "
"``build-system.requires``, kaj konstruas en tiu medio."

#: ../source/guides/modernize-setup-py-project.rst:124
msgid ""
"For some projects this isolation is unwanted and it can be deactivated as "
"follows:"
msgstr ""
"Por kelkaj projektoj, tia izolado estas nedezirata kaj malaktivigebla jene:"

#: ../source/guides/modernize-setup-py-project.rst:126
msgid "``python -m build --no-isolation``"
msgstr "``python -m build --no-isolation``"

#: ../source/guides/modernize-setup-py-project.rst:127
msgid "``python -m pip install --no-build-isolation``"
msgstr "``python -m pip install --no-build-isolation``"

#: ../source/guides/modernize-setup-py-project.rst:135
msgid "How to handle packaging metadata?"
msgstr "Kiel enmeti pakajn metadatenojn?"

#: ../source/guides/modernize-setup-py-project.rst:137
msgid ""
"All static metadata can optionally be moved to a ``[project]`` table in :"
"file:`pyproject.toml`."
msgstr ""
"Ĉiaj statikaj metadatenoj estas nedevige moveblaj al tabelo ``[project]`` "
"en :file:`pyproject.toml`."

#: ../source/guides/modernize-setup-py-project.rst:151
msgid "can be entirely replaced by a :file:`pyproject.toml` file like this:"
msgstr "estas plene anstataŭigebla per :file:`pyproject.toml` jene:"

#: ../source/guides/modernize-setup-py-project.rst:164
msgid ""
"Read :ref:`pyproject-project-table` for the full specification of the "
"content allowed in the ``[project]`` table."
msgstr ""
"Vidu :ref:`pyproject-project-table` por la plena specifo pri la enhavo "
"permesata en la tabelo ``[project]``."

#: ../source/guides/modernize-setup-py-project.rst:169
msgid "How to handle dynamic metadata?"
msgstr "Kiel enmeti dinamikajn metadatenojn?"

#: ../source/guides/modernize-setup-py-project.rst:171
msgid ""
"If some packaging metadata fields are not static they need to be listed as "
"``dynamic`` in this ``[project]`` table."
msgstr ""
"Se iu paka metadatena kampo ne estas statika, ĝi devas esti markita kiel "
"``dynamic`` en tiu tabelo ``[project]``."

#: ../source/guides/modernize-setup-py-project.rst:191
msgid "can be modernized as follows:"
msgstr "estas modernigebla jene:"

#: ../source/guides/modernize-setup-py-project.rst:223
msgid ":ref:`declaring-project-metadata-dynamic`"
msgstr ":ref:`declaring-project-metadata-dynamic`"

#: ../source/guides/modernize-setup-py-project.rst:227
msgid "What if something that can not be changed expects a ``setup.py`` file?"
msgstr "Kiel fari, se io neŝanĝebla atendas dosieron ``setup.py``?"

#: ../source/guides/modernize-setup-py-project.rst:229
msgid ""
"For example, a process exists that can not be changed easily and it needs to "
"execute a command such as ``python setup.py --name``."
msgstr ""
"Ekzemple, ekzistas procezo ne facile ŝanĝebla, kiu devas ruli komandon kiel "
"``python setup.py --name``."

#: ../source/guides/modernize-setup-py-project.rst:232
msgid ""
"It is perfectly fine to leave a :file:`setup.py` file in the project source "
"tree even after all its content has been moved to :file:`pyproject.toml`. "
"This file can be as minimalistic as this:"
msgstr ""
"Estas bone lasi dosieron :file:`setup.py` en la projekta fontarbo, eĉ post "
"oni movis ĉiom da enhavo al :file:`pyproject.toml`. La dosiero povas esti "
"tiel minimuma kiel la jeno:"

#: ../source/guides/modernize-setup-py-project.rst:246
msgid ":ref:`pyproject-toml-spec`"
msgstr ":ref:`pyproject-toml-spec`"

#: ../source/guides/modernize-setup-py-project.rst:248
msgid ":doc:`setuptools:build_meta`"
msgstr ":doc:`setuptools:build_meta`"

#: ../source/guides/multi-version-installs.rst:6
msgid "Multi-version installs"
msgstr "Plurversiaj instaloj"

#: ../source/guides/multi-version-installs.rst:11
msgid ""
"easy_install allows simultaneous installation of different versions of the "
"same project into a single environment shared by multiple programs which "
"must ``require`` the appropriate version of the project at run time (using "
"``pkg_resources``)."
msgstr ""
"easy_install permesas samtempan instaladon de malsamaj versioj de la sama "
"projekto en unu medio komuna por pluraj programoj, kiuj devas postuli taŭgan "
"version de la projekto rultempe (per ``pkg_resources``)."

#: ../source/guides/multi-version-installs.rst:16
msgid ""
"For many use cases, virtual environments address this need without the "
"complication of the ``require`` directive. However, the advantage of "
"parallel installations within the same environment is that it works for an "
"environment shared by multiple applications, such as the system Python in a "
"Linux distribution."
msgstr ""
"Por multaj uzkazoj, virtuala medio solvas tion sen la komplikaĵo de la "
"direktivo ``require``. Tamen, la avantaĝo de paralelaj instalaĵoj en la sama "
"medio estas, ke tio funkcias por medio uzata de pluraj programoj, ekzemple "
"por la sistema Python en Linux-distribuo."

#: ../source/guides/multi-version-installs.rst:22
msgid ""
"The major limitation of ``pkg_resources`` based parallel installation is "
"that as soon as you import ``pkg_resources`` it locks in the *default* "
"version of everything which is already available on sys.path. This can cause "
"problems, since ``setuptools`` created command line scripts use "
"``pkg_resources`` to find the entry point to execute. This means that, for "
"example, you can't use ``require`` tests invoked through ``nose`` or a WSGI "
"application invoked through ``gunicorn`` if your application needs a non-"
"default version of anything that is available on the standard ``sys.path`` - "
"the script wrapper for the main application will lock in the version that is "
"available by default, so the subsequent ``require`` call in your own code "
"fails with a spurious version conflict."
msgstr ""
"La grava problemo pri ``pkg_resources``-baza paralela instalado estas, ke "
"importado de ``pkg_resources`` tuj ŝlosas la *aprioran* version de ĉio "
"havebla ĉe ``sys.path``. Tio estas problema, ĉar ``setuptools``-kreita "
"komandlinia programeto uzas ``pkg_resources`` por serĉi rulotan enirpunkton. "
"Tio implicas, ke ekzemple vi ne povas uzi ``require``-teston alvokitan per "
"``nose`` or WSGI-programon alvokitan per ``gunicorn``, se via programo "
"bezonas alian version de io havebla ĉe la norma ``sys.path`` – la "
"programvolvilo por la ĉefprogramo ŝlosos la aprioran version, kaj la posta "
"alvoko al ``require`` en via propra kodo malsukcesos pro iluzia versia "
"konflikto."

#: ../source/guides/multi-version-installs.rst:34
msgid ""
"This can be worked around by setting all dependencies in ``__main__."
"__requires__`` before importing ``pkg_resources`` for the first time, but "
"that approach does mean that standard command line invocations of the "
"affected tools can't be used - it's necessary to write a custom wrapper "
"script or use ``python3 -c '<command>'`` to invoke the application's main "
"entry point directly."
msgstr ""

#: ../source/guides/multi-version-installs.rst:41
msgid ""
"Refer to the `pkg_resources documentation <https://setuptools.readthedocs.io/"
"en/latest/pkg_resources.html#workingset-objects>`__ for more details."
msgstr ""
"Por pliaj detaloj, vidu `la dokumentaron de pkg_resources <https://"
"setuptools.readthedocs.io/en/latest/pkg_resources.html#workingset-"
"objects>`__."

#: ../source/guides/packaging-binary-extensions.rst:5
msgid "Packaging binary extensions"
msgstr "Paki duumajn etendaĵojn"

#: ../source/guides/packaging-binary-extensions.rst:8
msgid "2013-12-08"
msgstr "8 Decembro 2013"

#: ../source/guides/packaging-binary-extensions.rst:10
msgid ""
"One of the features of the CPython reference interpreter is that, in "
"addition to allowing the execution of Python code, it also exposes a rich C "
"API for use by other software. One of the most common uses of this C API is "
"to create importable C extensions that allow things which aren't always easy "
"to achieve in pure Python code."
msgstr ""
"La referenca interpretilo CPython, krome permesanta ruli Python-kodon, ankaŭ "
"disponigas riĉan API en C por aliaj programoj. Unu el la plej oftaj uzoj de "
"tiu API en C estas krei importeblan C-etendaĵon por tio, kio malfacilas per "
"pura Python-kodo."

#: ../source/guides/packaging-binary-extensions.rst:18
msgid "An overview of binary extensions"
msgstr "Superrigardo pri duumaj etendaĵoj"

#: ../source/guides/packaging-binary-extensions.rst:21
msgid "Use cases"
msgstr "Uzkazoj"

#: ../source/guides/packaging-binary-extensions.rst:23
msgid ""
"The typical use cases for binary extensions break down into just three "
"conventional categories:"
msgstr "Jen la tri oftaj uzkazoj de duumaĵ etendaĵoj:"

#: ../source/guides/packaging-binary-extensions.rst:26
msgid ""
"**accelerator modules**: these modules are completely self-contained, and "
"are created solely to run faster than the equivalent pure Python code runs "
"in CPython. Ideally, accelerator modules will always have a pure Python "
"equivalent to use as a fallback if the accelerated version isn't available "
"on a given system. The CPython standard library makes extensive use of "
"accelerator modules. *Example*: When importing ``datetime``, Python falls "
"back to the `datetime.py <https://github.com/python/cpython/blob/main/Lib/"
"datetime.py>`_ module if the C implementation ( `_datetimemodule.c <https://"
"github.com/python/cpython/blob/main/Modules/_datetimemodule.c>`_) is not "
"available."
msgstr ""
"**akcelila modulo**: tia modulo estas plene memstara kaj celas pli rapidi ol "
"la ekvivalenta pur-Python-a kodo en CPython. Ideale, akcelila modulo ĉiam "
"havas pur-Python-an ekvivalenton uzotan, se la akcelita versio ne estas "
"disponebla ĉe iu sistemo. La norma biblioteko de CPython ofte uzas "
"akcelilaijn modulojn. *Ekzemple*: Importante ``datetime``, Python uzas la "
"modulon `datetime.py <https://github.com/python/cpython/blob/main/Lib/"
"datetime.py>`_, se la C-realigo ( `_datetimemodule.C <https://github.com/"
"python/cpython/blob/main/Modules/_datetimemodule.c>`_) ne estas disponebla."

#: ../source/guides/packaging-binary-extensions.rst:37
msgid ""
"**wrapper modules**: these modules are created to expose existing C "
"interfaces to Python code. They may either expose the underlying C interface "
"directly, or else expose a more \"Pythonic\" API that makes use of Python "
"language features to make the API easier to use. The CPython standard "
"library makes extensive use of wrapper modules. *Example*: `functools.py "
"<https://github.com/python/cpython/blob/main/Lib/functools.py>`_ is a Python "
"module wrapper for `_functoolsmodule.c <https://github.com/python/cpython/"
"blob/main/Modules/_functoolsmodule.c>`_."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:45
msgid ""
"**low-level system access**: these modules are created to access lower level "
"features of the CPython runtime, the operating system, or the underlying "
"hardware. Through platform specific code, extension modules may achieve "
"things that aren't possible in pure Python code. A number of CPython "
"standard library modules are written in C in order to access interpreter "
"internals that aren't exposed at the language level. *Example*: ``sys``, "
"which comes from `sysmodule.c <https://github.com/python/cpython/blob/main/"
"Python/sysmodule.c>`_."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:54
msgid ""
"One particularly notable feature of C extensions is that, when they don't "
"need to call back into the interpreter runtime, they can release CPython's "
"global interpreter lock around long-running operations (regardless of "
"whether those operations are CPU or IO bound)."
msgstr ""
"Unu rimarkinda trajto de C-etendaĵo estas, ke ĝi povas liberigi la mallokan "
"interpretilan seruron de CPython dum longdaŭra operacio, se ĝi ne bezonas "
"alvoki interpretilan rultempon reen (por kaj ĉefprocesoraj kaj eneligaj "
"operacioj)."

#: ../source/guides/packaging-binary-extensions.rst:59
msgid ""
"Not all extension modules will fit neatly into the above categories. The "
"extension modules included with NumPy, for example, span all three use cases "
"- they move inner loops to C for speed reasons, wrap external libraries "
"written in C, FORTRAN and other languages, and use low level system "
"interfaces for both CPython and the underlying operation system to support "
"concurrent execution of vectorised operations and to tightly control the "
"exact memory layout of created objects."
msgstr ""
"Ne ĉia etendaĵo-modulo estas sole en unu el la ĉi-supraj kategorioj. La "
"etendaĵo-modulo en NumPy, ekzemple, estas por ĉiuj tri uzkazoj – ĝi movas "
"internajn iteraciojn al C por rapidigo, volvas eksterajn bibliotekojn en C, "
"Fortrano kaj aliaj lingvoj, kaj uzas malaltnivelajn sistemajn interfacojn "
"por kaj CPython kaj la mastruma sistemo por samtempa rulado de vektorigitaj "
"operacioj kaj por regi la precizan memoraranĝon de kreitaj objektoj."

#: ../source/guides/packaging-binary-extensions.rst:69
msgid "Disadvantages"
msgstr "Malavantaĝoj"

#: ../source/guides/packaging-binary-extensions.rst:71
msgid ""
"The main disadvantage of using binary extensions is the fact that it makes "
"subsequent distribution of the software more difficult. One of the "
"advantages of using Python is that it is largely cross platform, and the "
"languages used to write extension modules (typically C or C++, but really "
"any language that can bind to the CPython C API) typically require that "
"custom binaries be created for different platforms."
msgstr ""
"La ĉefmalavantaĝo de duuma etendaĵo estas, ke posta distribuado de la "
"programo estas malfacila. Unu el la avantaĝoj de Python estas la "
"plurplatformeco. La lingvoj por etendaĵa modulo (ofte C aŭ C++, sed povas "
"esti ajna lingvo bindebla al la C API de CPython) ordinare postulas kreadon "
"de duumaĵoj po unu por ĉiu platformo."

#: ../source/guides/packaging-binary-extensions.rst:78
msgid "This means that binary extensions:"
msgstr "Tio signifas, ke duumaj etendaĵoj:"

#: ../source/guides/packaging-binary-extensions.rst:80
msgid ""
"require that end users be able to either build them from source, or else "
"that someone publish pre-built binaries for common platforms"
msgstr ""
"postulas, ke aŭ uzantoj povu konstrui ilin de fonto, aŭ aliulo eldonu "
"konstruitajn duumaĵojn por oftaj platformoj"

#: ../source/guides/packaging-binary-extensions.rst:83
msgid ""
"may not be compatible with different builds of the CPython reference "
"interpreter"
msgstr ""
"eble ne kongruas kun diversaj konstruoj de la referenca interpretilo CPython"

#: ../source/guides/packaging-binary-extensions.rst:86
msgid ""
"often will not work correctly with alternative interpreters such as PyPy, "
"IronPython or Jython"
msgstr ""
"ofte ne funkcias ĝuste kun alternativaj interpretiloj kiel ekzemple PyPy, "
"IronPython aŭ Jython"

#: ../source/guides/packaging-binary-extensions.rst:89
msgid ""
"if handcoded, make maintenance more difficult by requiring that maintainers "
"be familiar not only with Python, but also with the language used to create "
"the binary extension, as well as with the details of the CPython C API."
msgstr ""
"se ĝi mankodita, malfaciligas evoluadon postulante, ke evoluiganto konu ne "
"nur Python, sed ankaŭ la programlingvon por la duuma etendaĵo kaj la "
"detalojn de la C API de CPython."

#: ../source/guides/packaging-binary-extensions.rst:94
msgid ""
"if a pure Python fallback implementation is provided, make maintenance more "
"difficult by requiring that changes be implemented in two places, and "
"introducing additional complexity in the test suite to ensure both versions "
"are always executed."
msgstr ""
"malfaciligas mastrumadon (se pure Python-a alternativo estas provizita), "
"postulante duoblan realigon de ĉiuj ŝanĝoj kaj komplikante la testaron pri "
"rulado de ambaŭ versioj."

#: ../source/guides/packaging-binary-extensions.rst:99
msgid ""
"Another disadvantage of relying on binary extensions is that alternative "
"import mechanisms (such as the ability to import modules directly from "
"zipfiles) often won't work for extension modules (as the dynamic loading "
"mechanisms on most platforms can only load libraries from disk)."
msgstr ""
"Alia malavantaĝo de dependado je duuma etendaĵo estas, ke alternativa "
"importa meĥanismo (kiel importado de modulo rekte el zip-arĥivo) ofte ne "
"funkcias por etendaĵmodulo (ĉar la dinamika ŝargada meĥanismo en la "
"plejmulto de platformoj nur povas ŝargi bibliotekon el disko)."

#: ../source/guides/packaging-binary-extensions.rst:106
msgid "Alternatives to handcoded accelerator modules"
msgstr "Alternativoj al malaŭtomate koditaj akcelilaj moduloj"

#: ../source/guides/packaging-binary-extensions.rst:108
msgid ""
"When extension modules are just being used to make code run faster (after "
"profiling has identified the code where the speed increase is worth "
"additional maintenance effort), a number of other alternatives should also "
"be considered:"
msgstr ""
"Se oni uzus etendaĵan modulon nur por plirapidigi kodon (post kiam profilo "
"markis tiujn partojn de la kodo, por kiuj la plirapidigo sufiĉe necesas "
"malgraŭ la plia bezonata mastrumado), oni konsideru kelkajn alternativojn:"

#: ../source/guides/packaging-binary-extensions.rst:113
msgid ""
"look for existing optimised alternatives. The CPython standard library "
"includes a number of optimised data structures and algorithms (especially in "
"the builtins and the ``collections`` and ``itertools`` modules). The Python "
"Package Index also offers additional alternatives. Sometimes, the "
"appropriate choice of standard library or third party module can avoid the "
"need to create your own accelerator module."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:120
msgid ""
"for long running applications, the JIT compiled `PyPy interpreter <https://"
"www.pypy.org/>`__ may offer a suitable alternative to the standard CPython "
"runtime. The main barrier to adopting PyPy is typically reliance on other "
"binary extension modules - while PyPy does emulate the CPython C API, "
"modules that rely on that cause problems for the PyPy JIT, and the emulation "
"layer can often expose latent defects in extension modules that CPython "
"currently tolerates (frequently around reference counting errors - an object "
"having one live reference instead of two often won't break anything, but no "
"references instead of one is a major problem)."
msgstr ""
"por longe ruliĝanta programo, la ĝustatempe tradukita `interpretilo PyPy "
"<https://www.pypy.org/>`__ povas esti taŭga alternativo al la norma "
"interpretilo CPython. La ĉefobstaklo kontraŭ ekuzado de PyPy estas ofte "
"dependo de alia duumaĵa etendaĵo-modulo – dum PyPy ja imitas la C API de "
"CPython, modulo dependanta de tiu API kaŭzas problemojn por la ĝustatempa "
"tradukilo de PyPy, kaj la imitada tavolo ofte reliefigas kaŝitajn makulojn "
"en etendaĵo-modulo aktuale toleratan de CPython (ofte pri eraroj pri "
"referenco-kalkulado – objekto havanta unu vivan referencon anstatŭ du ne "
"estas problema, sed neniu referenco anstataŭ unu estas grave problema)."

#: ../source/guides/packaging-binary-extensions.rst:130
msgid ""
"`Cython <https://cython.org/>`__ is a mature static compiler that can "
"compile most Python code to C extension modules. The initial compilation "
"provides some speed increases (by bypassing the CPython interpreter layer), "
"and Cython's optional static typing features can offer additional "
"opportunities for speed increases. Using Cython still carries the "
"`disadvantages`_ associated with using binary extensions, but has the "
"benefit of having a reduced barrier to entry for Python programmers "
"(relative to other languages like C or C++)."
msgstr ""
"`Cython <https://cython.org/>`__ estas matura statika tradukilo, kiu povas "
"traduki la plejparton de Python-kodo al C-etendaĵomoduloj. La komenca "
"tradukado povas iom rapidigi la kodon (preterpasante la interpretilon "
"CPython), kaj la nedeviga statika tipado de Cython povas plu rapidi la "
"kodon. Uzado de Cython ankoraŭ havas la `malavantaĝojn <disadvantages>`_ pri "
"duumaj etendaĵoj, sed havas la avantaĝon de kutimeco por Python-programantoj "
"(relative al aliaj lingvoj kiel C aŭ C++)."

#: ../source/guides/packaging-binary-extensions.rst:139
msgid ""
"`Numba <http://numba.pydata.org/>`__ is a newer tool, created by members of "
"the scientific Python community, that aims to leverage LLVM to allow "
"selective compilation of pieces of a Python application to native machine "
"code at runtime. It requires that LLVM be available on the system where the "
"code is running, but can provide significant speed increases, especially for "
"operations that are amenable to vectorisation."
msgstr ""
"`Numba <http://numba.pydata.org/>`__ estas pli nova ilo, kreita de anoj de "
"la scienca Python-komunumo, celanta uzi LLVM por rultempa tradukado de "
"partoj de Python-programo al maŝinkodo. Ĝi postulas la haveblon de LLVM je "
"tiu sistemo, sur kiu ruliĝas la kodo. Tamen ĝi povas multe plirapidigi la "
"kodon, speciale por operacioj vektorigeblaj."

#: ../source/guides/packaging-binary-extensions.rst:148
msgid "Alternatives to handcoded wrapper modules"
msgstr "Alternativoj al malaŭtomate koditaj volvilaj moduloj"

#: ../source/guides/packaging-binary-extensions.rst:150
msgid ""
"The C ABI (Application Binary Interface) is a common standard for sharing "
"functionality between multiple applications. One of the strengths of the "
"CPython C API (Application Programming Interface) is allowing Python users "
"to tap into that functionality. However, wrapping modules by hand is quite "
"tedious, so a number of other alternative approaches should be considered."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:156
msgid ""
"The approaches described below don't simplify the distribution case at all, "
"but they *can* significantly reduce the maintenance burden of keeping "
"wrapper modules up to date."
msgstr ""
"La ĉi-subaj manieroj ne simpligas la kazon de distribuo sed *ja* povas "
"simpligi la taskon de ĝisdatigado de volvantaj moduloj."

#: ../source/guides/packaging-binary-extensions.rst:160
msgid ""
"In addition to being useful for the creation of accelerator modules, `Cython "
"<https://cython.org/>`__ is also widely used for creating wrapper modules "
"for C or C++ APIs. It involves wrapping the interfaces by hand, which gives "
"a wide range of freedom in designing and optimising the wrapper code, but "
"may not be a good choice for wrapping very large APIs quickly. See the `list "
"of third-party tools <https://github.com/cython/cython/wiki/AutoPxd>`_ for "
"automatic wrapping with Cython. It also supports performance-oriented Python "
"implementations that provide a CPython-like C-API, such as PyPy and Pyston."
msgstr ""
"Krom sia utileco por krei akcelilan modulon, `Cython <https://cython.org/"
">`__ estas ankaŭ vaste uzata por krei volvantan modulon de API en C aŭ C++. "
"Por tio oni volvas la interfacojn malaŭtomate. Ekzistas multo da libereco "
"pri fasonado kaj optimumado de la volvanta kodo. Tamen, tio eble ne estas "
"bona elekto por rapide volvi grandegan API. Vidu la `liston de triapartiaj "
"iloj <https://github.com/cython/cython/wiki/AutoPxd>`_ por aŭtomata volvado "
"per Cython. Ĝi ankaŭ subtenas rapidajn Python-realigojn kun CPython-eca C-"
"API kiel PyPy kaj Pyston."

#: ../source/guides/packaging-binary-extensions.rst:171
msgid ""
":doc:`pybind11 <pybind11:index>` is a pure C++11 library that provides a "
"clean C++ interface to the CPython (and PyPy) C API. It does not require a "
"pre-processing step; it is written entirely in templated C++. Helpers are "
"included for Setuptools or CMake builds. It was based on `Boost.Python "
"<https://www.boost.org/doc/libs/1_76_0/libs/python/doc/html/index.html>`__, "
"but doesn't require the Boost libraries or BJam."
msgstr ""
":doc:`pybind11 <pybind11:index>` estas pure C++11-a biblioteko provizanta "
"puran C++-interfacon al la API de CPython (kaj PyPy). Ĝi ne postulas "
"antaŭtraktadon; ĝi estas plene en ŝablona C++. Helpiloj inkluziviĝas por "
"konstruado kun Setuptools aŭ CMake. Ĝi estis bazita sur `Boost.Python "
"<https://www.boost.org/doc/libs/1_76_0/libs/python/doc/html/index.html>`__, "
"sed ne postulas la Boost-bibliotekojn aŭ BJam."

#: ../source/guides/packaging-binary-extensions.rst:178
msgid ""
":doc:`cffi <cffi:index>` is a project created by some of the PyPy developers "
"to make it straightforward for developers that already know both Python and "
"C to expose their C modules to Python applications. It also makes it "
"relatively straightforward to wrap a C module based on its header files, "
"even if you don't know C yourself."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:184
msgid ""
"One of the key advantages of ``cffi`` is that it is compatible with the PyPy "
"JIT, allowing CFFI wrapper modules to participate fully in PyPy's tracing "
"JIT optimisations."
msgstr ""
"Unu el la ĉefavantaĝoj de ``cffi`` estas kongrueco kun la ĝustatempa "
"tradukado de PyPy, tiel ke volvanta modulo uzanta CFFI povas plene "
"partopreni en la spuradaj optimumigoj de la ĝustatempa tradukilo de PyPy."

#: ../source/guides/packaging-binary-extensions.rst:188
msgid ""
"`SWIG <http://www.swig.org/>`__ is a wrapper interface generator that allows "
"a variety of programming languages, including Python, to interface with C "
"and C++ code."
msgstr ""
"`SWIG <http://www.swig.org/>`__ estas generilo de volva interfaco, por "
"alvoki C/C++-kodon el multaj programlingvoj inkluzive de Python."

#: ../source/guides/packaging-binary-extensions.rst:192
msgid ""
"The standard library's ``ctypes`` module, while useful for getting access to "
"C level interfaces when header information isn't available, suffers from the "
"fact that it operates solely at the C ABI level, and thus has no automatic "
"consistency checking between the interface actually being exported by the "
"library and the one declared in the Python code. By contrast, the above "
"alternatives are all able to operate at the C *API* level, using C header "
"files to ensure consistency between the interface exported by the library "
"being wrapped and the one expected by the Python wrapper module. While "
"``cffi`` *can* operate directly at the C ABI level, it suffers from the same "
"interface inconsistency problems as ``ctypes`` when it is used that way."
msgstr ""
"La modulo ``ctypes`` de la norma biblioteko, kiu utilas por atingi C-"
"interfacojn kiam ĉapaj informoj ne estas haveblaj, tamen suferas de la "
"fakto, ke ĝi funkciigas sole ĉe la nivelo de la ABI de C kaj tial ne povas "
"kontroli kongruecon inter la interfaco fakte eksportita de la biblioteko kaj "
"tiu deklarita en la Python-kodo. Kompare, la ĉi-supraj alternativoj ĉiuj "
"funkcias ĉe la nivelo de la *ABI* de C, uzante C-ĉapdosierojn por certigi "
"kongruecon inter la interfaco eksportita de la uzata biblioteko kaj tiu "
"atendata de la uzanta Python-modulo. Dum `cffi` *povas* funkcii rekte ĉe la "
"nivelo de C ABI, ĝi suferas de la samaj interfaco-kongruecaj problemoj kiel "
"``ctypes``, se ĝi estas tiel uzata."

#: ../source/guides/packaging-binary-extensions.rst:206
msgid "Alternatives for low level system access"
msgstr "Alternativoj por malaltnivela sistema atingado"

#: ../source/guides/packaging-binary-extensions.rst:208
msgid ""
"For applications that need low level system access (regardless of the "
"reason), a binary extension module often *is* the best way to go about it. "
"This is particularly true for low level access to the CPython runtime "
"itself, since some operations (like releasing the Global Interpreter Lock) "
"are simply invalid when the interpreter is running code, even if a module "
"like ``ctypes`` or ``cffi`` is used to obtain access to the relevant C API "
"interfaces."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:216
msgid ""
"For cases where the extension module is manipulating the underlying "
"operating system or hardware (rather than the CPython runtime), it may "
"sometimes be better to just write an ordinary C library (or a library in "
"another systems programming language like C++ or Rust that can export a C "
"compatible ABI), and then use one of the wrapping techniques described above "
"to make the interface available as an importable Python module."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:225
msgid "Implementing binary extensions"
msgstr "Realigi duumajn etendaĵojn"

#: ../source/guides/packaging-binary-extensions.rst:227
msgid ""
"The CPython :doc:`Extending and Embedding <python:extending/index>` guide "
"includes an introduction to writing a :doc:`custom extension module in C "
"<python:extending/extending>`."
msgstr ""
"The CPython-gvidilo :doc:`Extending and Embedding <python:extending/index>` "
"inkluzivas enkondukon al verkado de :doc:`propra etendaĵa modulo en C "
"<python:extending/extending>`."

#: ../source/guides/packaging-binary-extensions.rst:231
msgid ""
"FIXME: Elaborate that all this is one of the reasons why you probably "
"*don't* want to handcode your extension modules :)"
msgstr ""
"FIXME: Klarigu, ke tio estas unu el la kialoj por *ne* malaŭtomate kodi "
"etendaĵajn modulojn ☺"

#: ../source/guides/packaging-binary-extensions.rst:236
msgid "Extension module lifecycle"
msgstr "Vivciklo de etendaĵa modulo"

#: ../source/guides/packaging-binary-extensions.rst:238
#: ../source/guides/packaging-binary-extensions.rst:244
#: ../source/guides/packaging-binary-extensions.rst:250
#: ../source/guides/packaging-binary-extensions.rst:256
#: ../source/guides/packaging-binary-extensions.rst:376
msgid "FIXME: This section needs to be fleshed out."
msgstr "FIXME: Plenigu ĉi tiun paragrafon."

#: ../source/guides/packaging-binary-extensions.rst:242
msgid "Implications of shared static state and subinterpreters"
msgstr "Implicoj pri komuna statika stato kaj subinterpretiloj"

#: ../source/guides/packaging-binary-extensions.rst:248
msgid "Implications of the GIL"
msgstr "Implicoj de la Malloka Interpretila Seruro"

#: ../source/guides/packaging-binary-extensions.rst:254
msgid "Memory allocation APIs"
msgstr "Memoro-asignaj API-oj"

#: ../source/guides/packaging-binary-extensions.rst:262
msgid "ABI Compatibility"
msgstr "ABI-Kongrueco"

#: ../source/guides/packaging-binary-extensions.rst:264
msgid ""
"The CPython C API does not guarantee ABI stability between minor releases "
"(3.2, 3.3, 3.4, etc.). This means that, typically, if you build an extension "
"module against one version of Python, it is only guaranteed to work with the "
"same minor version of Python and not with any other minor versions."
msgstr ""
"La C API de CPython ne garantias stabilecon de ABI inter minoraj eldonoj "
"(3.2, 3.3, 3.4 ktp). Tio tipe signifas, ke se oni konstruas etendaĵo-modulon "
"por unu versio de Python, do ĝi nur garantiite funkcias por la sama minora "
"versio de Python kaj ne por aliaj minoraj versioj."

#: ../source/guides/packaging-binary-extensions.rst:270
msgid ""
"Python 3.2 introduced the Limited API, with is a well-defined subset of "
"Python's C API. The symbols needed for the Limited API form the \"Stable "
"ABI\" which is guaranteed to be compatible across all Python 3.x versions. "
"Wheels containing extensions built against the stable ABI use the ``abi3`` "
"ABI tag, to reflect that they're compatible with all Python 3.x versions."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:277
msgid ""
"CPython's :doc:`C API stability<python:c-api/stable>` page provides detailed "
"information about the API / ABI stability guarantees, how to use the Limited "
"API and the exact contents of the \"Limited API\"."
msgstr ""
"La paĝo de CPython pri :doc:`stabileco de C API <python:c-api/stable>` "
"detalas informojn pri la garantioj de la stabileco de API kaj ABI, kiel uzi "
"la Limigitan API, kaj la ekzakta enhavo de la «Limigita API»."

#: ../source/guides/packaging-binary-extensions.rst:283
msgid "Building binary extensions"
msgstr "Konstrui duumajn etendaĵojn"

#: ../source/guides/packaging-binary-extensions.rst:285
msgid "FIXME: Cover the build-backends available for building extensions."
msgstr "FIXME: Diskuti konstruajn malfasadojn por konstrui etendaĵojn."

#: ../source/guides/packaging-binary-extensions.rst:288
msgid "Building extensions for multiple platforms"
msgstr "Konstrui etendaĵojn por pluraj platformoj"

#: ../source/guides/packaging-binary-extensions.rst:290
msgid ""
"If you plan to distribute your extension, you should provide :term:`wheels "
"<Wheel>` for all the platforms you intend to support. These are usually "
"built on continuous integration (CI) systems. There are tools to help you "
"build highly redistributable binaries from CI; these include :ref:"
"`cibuildwheel` and :ref:`multibuild`."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:296
msgid ""
"For most extensions, you will need to build wheels for all the platforms you "
"intend to support. This means that the number of wheels you need to build is "
"the product of::"
msgstr ""
"Por tipaj etendaĵoj, oni devas konstrui wheel-ojn por ĉiuj subtenataj "
"platformoj. Tio signifas, ke la nombro de konstruendaj wheel-oj estas la "
"jena produto::"

#: ../source/guides/packaging-binary-extensions.rst:302
msgid ""
"Using CPython's :ref:`Stable ABI <cpython-stable-abi>` can help "
"significantly reduce the number of wheels you need to provide, since a "
"single wheel on a platform can be used with all Python minor versions; "
"eliminating one dimension of the matrix. It also removes the need to "
"generate new wheels for each new minor version of Python."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:309
msgid "Binary extensions for Windows"
msgstr "Duumaj etendaĵoj por Windows"

#: ../source/guides/packaging-binary-extensions.rst:311
msgid ""
"Before it is possible to build a binary extension, it is necessary to ensure "
"that you have a suitable compiler available. On Windows, Visual C is used to "
"build the official CPython interpreter, and should be used to build "
"compatible binary extensions.  To set up a build environment for binary "
"extensions, install `Visual Studio Community Edition <https://visualstudio."
"microsoft.com/downloads/>`__ - any recent version is fine."
msgstr ""
"Antaŭ ol konstrui duuman etendaĵon, oni devas havi taŭgan tradukilon. Sur "
"Windows, la oficiala CPython-interpretilo estis konstruita per Visual C, kaj "
"oni uzu ĝin por konstrui kongruan duuman etendaĵon. Por starigi konstruan "
"medion por duuma etendaĵo, instalu `Visual Studio Community Edition <https://"
"visualstudio.microsoft.com/downloads/>`__ – ajna lastatempa versio taŭgas."

#: ../source/guides/packaging-binary-extensions.rst:318
msgid ""
"One caveat: if you use Visual Studio 2019 or later, your extension will "
"depend on an \"extra\" file, ``VCRUNTIME140_1.dll``, in addition to the "
"``VCRUNTIME140.dll`` that all previous versions back to 2015 depend on. This "
"will add an extra requirement to using your extension on versions of CPython "
"that do not include this extra file. To avoid this, you can add the compile-"
"time argument ``/d2FH4-``. Recent versions of Python may include this file."
msgstr ""
"Unu averto: se vi uzas Visual Studio 2019 aŭ pli novan, via etendaĵo "
"dependos de «ekstra» dosiero, ``VCRUNTIME140_1.dll``, kune kun "
"``VCRUNTIME140.dll``, de kiu ĉiuj antaŭaj versioj ĝis 2015 dependas. Tio "
"estas ekstra postulo por uzi vian etendaĵon kun versioj de CPython ne "
"inkluzivanta la ekstran dosieron. Por eviti tion, vi povas aldoni la "
"tradukilan argumenton ``/d2FH4-``. Novaj versioj de Python eble inkluzivas "
"ĉi tiun dosieron."

#: ../source/guides/packaging-binary-extensions.rst:326
msgid ""
"Building for Python prior to 3.5 is discouraged, because older versions of "
"Visual Studio are no longer available from Microsoft. If you do need to "
"build for older versions, you can set ``DISTUTILS_USE_SDK=1`` and "
"``MSSdk=1`` to force a the currently activated version of MSVC to be found, "
"and you should exercise care when designing your extension not to malloc/"
"free memory across different libraries, avoid relying on changed data "
"structures, and so on. Tools for generating extension modules usually avoid "
"these things for you."
msgstr ""
"Ni ne rekomendas konstruadon por versio de Python antaŭ 3.5, ĉar malnova "
"versio de Visual Studio ne plu haveblas de Microsoft. Se oni devas konstrui "
"por malnova versio, oni agordu ``DISTUTILS_USE_SDK=1`` kaj `MSSdk=1`` por "
"uzi la aktuale aktivan version de MSVC, kaj oni zorge fasonu la etendaĵon ne "
"uzante ``malloc``/``free`` el malsamaj bibliotekoj, evitante dependon de "
"ŝanĝitaj datenstrukturoj ktp. Ilo por generado de etendaĵa modulo ofte "
"aŭtomate evitas tion."

#: ../source/guides/packaging-binary-extensions.rst:337
msgid "Binary extensions for Linux"
msgstr "Duumaj etendaĵoj por Linux"

#: ../source/guides/packaging-binary-extensions.rst:339
msgid ""
"Linux binaries must use a sufficiently old glibc to be compatible with older "
"distributions. The `manylinux <https://github.com/pypa/manylinux>`_ Docker "
"images provide a build environment with a glibc old enough to support most "
"current Linux distributions on common architectures."
msgstr ""
"Linux-duumaĵo devas uzi sufiĉe malnovan ``glibc`` por kongrueco kun malnovaj "
"distribuoj. La Docker-diskokopio por `manylinux <https://github.com/pypa/"
"manylinux>`_ estas konstrua medio kun ``glibc`` sufiĉe malnova por la "
"plejmulto de aktualaj Linux-distribuoj sur oftaj arĥitekturoj."

#: ../source/guides/packaging-binary-extensions.rst:345
msgid "Binary extensions for macOS"
msgstr "Duumaj etendaĵoj por macOS"

#: ../source/guides/packaging-binary-extensions.rst:347
msgid ""
"Binary compatibility on macOS is determined by the target minimum deployment "
"system, e.g. *10.9*, which is often specified with the "
"``MACOSX_DEPLOYMENT_TARGET`` environmental variable when building binaries "
"on macOS. When building with setuptools / distutils, the deployment target "
"is specified with the flag ``--plat-name``, e.g. ``macosx-10.9-x86_64``. For "
"common deployment targets for macOS Python distributions, see the `MacPython "
"Spinning Wheels wiki <https://github.com/MacPython/wiki/wiki/Spinning-"
"wheels>`_."
msgstr ""
"Binara kongrueco sur macOS dependas de la celata minimuma disponiga sistemo, "
"ekz. *10.9*, kio estas ordinare specifita per la media variablo "
"``MACOSX_DEPLOYMENT_TARGET`` dum konstruaĵo de duumaĵoj sur macOS. Dum "
"konstruado kun setuptools / distutils, oni specifas la disponiga celo per la "
"flago ``--plat-name``, ekz. kun la valoro ``macosx-10.9-x86_64``. Por oftaj "
"disponigaj celoj por Python-distribuoj por macOS, vidu `MacPython Spinning "
"Wheels Wiki <https://github.com/MacPython/wiki/wiki/Spinning-wheels>`_."

#: ../source/guides/packaging-binary-extensions.rst:357
msgid "Publishing binary extensions"
msgstr "Eldoni duumajn etendaĵojn"

#: ../source/guides/packaging-binary-extensions.rst:359
msgid ""
"Publishing binary extensions through PyPI uses the same upload mechanisms as "
"publishing pure Python packages. You build a wheel file for your extension "
"using the build-backend and upload it to PyPI using :doc:`twine <twine:"
"index>`."
msgstr ""
"Eldonado de duuma etendaĵo al PyPI uzas la saman alŝutan meĥanismon kiel "
"eldonado de pure Python-a pako. Oni konstruas wheel-dosieron por la etendaĵo "
"per la konstrua malfasado kaj alŝutas ĝin al PyPI per :doc:`twine <twine:"
"index>`."

#: ../source/guides/packaging-binary-extensions.rst:365
msgid "Avoid binary-only releases"
msgstr "Evitu nur-duumajn eldonojn"

#: ../source/guides/packaging-binary-extensions.rst:367
msgid ""
"It is strongly recommended that you publish your binary extensions as well "
"as the source code that was used to build them. This allows users to build "
"the extension from source if they need to. Notably, this is required for "
"certain Linux distributions that build from source within their own build "
"systems for the distro package repositories."
msgstr ""
"Estas forte rekomendate, ke vi eldonu kaj la duumajn etendaĵojn kaj la "
"fontkodon por konstrui ilin. Tio permesas al uzantoj laŭbezone konstrui la "
"etendaĵon de fonto. Speciale, tio necesas por tiuj Linux-distribuoj, kiuj "
"konstruas de fonto per siaj propraj konstrusistemoj por siaj pakdeponejoj."

#: ../source/guides/packaging-binary-extensions.rst:374
msgid "Weak linking"
msgstr "Malforta bindado"

#: ../source/guides/packaging-binary-extensions.rst:379
msgid "Additional resources"
msgstr "Pliaj rimedoj"

#: ../source/guides/packaging-binary-extensions.rst:381
msgid ""
"Cross-platform development and distribution of extension modules is a "
"complex topic, so this guide focuses primarily on providing pointers to "
"various tools that automate dealing with the underlying technical "
"challenges. The additional resources in this section are instead intended "
"for developers looking to understand more about the underlying binary "
"interfaces that those systems rely on at runtime."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:388
msgid "Cross-platform wheel generation with scikit-build"
msgstr "Interplatforma generado de wheel per scikit-build"

#: ../source/guides/packaging-binary-extensions.rst:390
msgid ""
"The `scikit-build <https://scikit-build.readthedocs.io/en/latest/>`_ package "
"helps abstract cross-platform build operations and provides additional "
"capabilities when creating binary extension packages. Additional "
"documentation is also available on the `C runtime, compiler, and build "
"system generator <https://scikit-build.readthedocs.io/en/latest/generators."
"html>`_ for Python binary extension modules."
msgstr ""
"La pako `scikit-build <https://scikit-build.readthedocs.io/en/latest/>`_ "
"helpas abstraktigi interplatforman konstruadon kaj provizas pliajn kapablojn "
"pri kreado de duumaj etendaĵaj pakoj. Pliaj informoj disponeblas ĉe la "
"paragrafo pri `la C-rultempo, tradukilo, kaj konstrusistema generilo "
"<https://scikit-build.readthedocs.io/en/latest/generators.html>`_ por duumaj "
"etendaĵmoduloj de Python."

#: ../source/guides/packaging-binary-extensions.rst:398
msgid "Introduction to C/C++ extension modules"
msgstr "Enkonduko al C/C++-aj etendaĵaj moduloj"

#: ../source/guides/packaging-binary-extensions.rst:400
msgid ""
"For a more in depth explanation of how extension modules are used by CPython "
"on a Debian system, see the following articles:"
msgstr ""
"Por plia klarigo pri kiel CPython uzas etendaĵan modulon sur Debian-sistemo, "
"vidu la jenajn artikolojn:"

#: ../source/guides/packaging-binary-extensions.rst:403
msgid ""
"`What are (c)python extension modules? <https://thomasnyberg.com/"
"what_are_extension_modules.html>`_"
msgstr ""
"`Kio estas etendaĵ-moduloj de (C)Python? <https://thomasnyberg.com/"
"what_are_extension_modules.html>`_"

#: ../source/guides/packaging-binary-extensions.rst:404
msgid "`Releasing the gil <https://thomasnyberg.com/releasing_the_gil.html>`_"
msgstr ""
"`Malakiri la mallokan interpretilan seruron <https://thomasnyberg.com/"
"releasing_the_gil.html>`_"

#: ../source/guides/packaging-binary-extensions.rst:405
msgid ""
"`Writing cpython extension modules using C++ <https://thomasnyberg.com/"
"cpp_extension_modules.html>`_"
msgstr ""
"`Verki cpython-etendaĵaj moduloj per C++ <https://thomasnyberg.com/"
"cpp_extension_modules.html>`_"

#: ../source/guides/packaging-binary-extensions.rst:408
msgid "Additional considerations for binary wheels"
msgstr "Pliaj konsideroj por duuma wheel"

#: ../source/guides/packaging-binary-extensions.rst:410
msgid ""
"The `pypackaging-native <https://pypackaging-native.github.io/>`_ website "
"has additional coverage of packaging Python packages with native code. It "
"aims to provide an overview of the most important packaging issues for such "
"projects, with in-depth explanations and references."
msgstr ""
"La retejo `pypackaging-native <https://pypackaging-native.github.io/>`_ "
"havas pliajn detalojn pri pakado de Python-pako kun indiĝena kodo. Ĝi estas "
"resumo de la plej gravaj problemoj pri pakado de tia projekto kune kun "
"detalaj klarigoj kaj referencoj."

#: ../source/guides/packaging-binary-extensions.rst:415
msgid ""
"Examples of topics covered are non-Python compiled dependencies (\"native "
"dependencies\"), the importance of the ABI (Application Binary Interface) of "
"native code, dependency on SIMD code and cross compilation."
msgstr ""
"Jen ekzemploj de diskutotaj temoj: ne-Python-a tradukita dependeco "
"(«indiĝena dependeco»), la graveco de la ABI (aplika binara interfaco) de "
"indiĝena kodo, dependeco sur SIMD-kodo, intertradukado."

#: ../source/guides/packaging-namespace-packages.rst:5
msgid "Packaging namespace packages"
msgstr "Paki nomspacajn pakojn"

#: ../source/guides/packaging-namespace-packages.rst:7
msgid ""
"Namespace packages allow you to split the sub-packages and modules within a "
"single :term:`package <Import Package>` across multiple, separate :term:"
"`distribution packages <Distribution Package>` (referred to as "
"**distributions** in this document to avoid ambiguity). For example, if you "
"have the following package structure:"
msgstr ""
"Nomspaca pako permesas al vi disfendi la subpakojn kaj modulojn en unu :term:"
"`pako <Import Package>` al pluraj, apartaj :term:`distribuaj pakoj "
"<Distribution Package>` (nomitaj **distribuoj** en ĉi tiu dokumento por "
"eviti ambiguecon). Ekzemple, se oni havas la jenan pako-strukturon:"

#: ../source/guides/packaging-namespace-packages.rst:26
msgid "And you use this package in your code like so::"
msgstr "Kaj vi uzas ĉi tiun pakon en via kodo jene::"

#: ../source/guides/packaging-namespace-packages.rst:31
msgid "Then you can break these sub-packages into two separate distributions:"
msgstr "Do vi povas disrompi tiujn subpakojn en du apartajn distribuojn:"

#: ../source/guides/packaging-namespace-packages.rst:50
msgid "Each sub-package can now be separately installed, used, and versioned."
msgstr "Ĉiu subpako estas nun aparte instalebla, uzebla kaj versihava."

#: ../source/guides/packaging-namespace-packages.rst:52
msgid ""
"Namespace packages can be useful for a large collection of loosely-related "
"packages (such as a large corpus of client libraries for multiple products "
"from a single company). However, namespace packages come with several "
"caveats and are not appropriate in all cases. A simple alternative is to use "
"a prefix on all of your distributions such as ``import "
"mynamespace_subpackage_a`` (you could even use ``import "
"mynamespace_subpackage_a as subpackage_a`` to keep the import object short)."
msgstr ""
"Nomspaca pako povas utili por granda kolekto de loze rilataj pakoj (kiel "
"ekzemple granda aro da klientobibliotekoj por pluraj servoj de unu firmao). "
"Tamen, nomspaca pako havas kelkajn problemojn kaj ne taŭgas por ĉiaj celoj. "
"Simpla alternativo estas uzi prefikson en la nomojn de distribuoj kiel "
"ekzemple ``import mianomspaco_subpako_a`` (oni povas eĉ uzi ``import "
"mianomspaco_subpako_a as subpako_a`` por mallongigi)."

#: ../source/guides/packaging-namespace-packages.rst:62
msgid "Creating a namespace package"
msgstr "Krei nomspacan pakon"

#: ../source/guides/packaging-namespace-packages.rst:64
msgid ""
"There are currently two different approaches to creating namespace packages, "
"from which the latter is discouraged:"
msgstr ""
"Ekzistas nuntempe du malsamaj manieroj krei nomspacan pakon, el kiu la dua "
"estas evitinda:"

#: ../source/guides/packaging-namespace-packages.rst:67
msgid ""
"Use `native namespace packages`_. This type of namespace package is defined "
"in :pep:`420` and is available in Python 3.3 and later. This is recommended "
"if packages in your namespace only ever need to support Python 3 and "
"installation via ``pip``."
msgstr ""
"Uzi `indiĝenan nomspacan pakon <native namespace packages>`_. Tiu speco de "
"nomspaca pako estas difinita en :pep:`420` kaj havebla ekde Python 3.3. Tio "
"estas rekomendata, se pakoj en via nomspaco subtenas Python 3 aŭ instaladon "
"per ``pip``."

#: ../source/guides/packaging-namespace-packages.rst:71
msgid ""
"Use `legacy namespace packages`_. This comprises `pkgutil-style namespace "
"packages`_ and `pkg_resources-style namespace packages`_."
msgstr ""
"Uzi `malnovan nomspacan pakon <legacy namespace packages>`_, kiu estas aŭ "
"`pkgutil-stila nomspaca pako <pkgutil-style namespace packages>`_ aŭ "
"`pkg_resources-stila nomspaca pako <pkg_resources-style namespace "
"packages>`_."

#: ../source/guides/packaging-namespace-packages.rst:75
msgid "Native namespace packages"
msgstr "Indiĝenaj nomspacaj pakoj"

#: ../source/guides/packaging-namespace-packages.rst:77
msgid ""
"Python 3.3 added **implicit** namespace packages from :pep:`420`. All that "
"is required to create a native namespace package is that you just omit :file:"
"`__init__.py` from the namespace package directory. An example file "
"structure (following :ref:`src-layout <setuptools:src-layout>`):"
msgstr ""
"Python 3.3 aldonis **implicitan** nomspacan pakon per :pep:`420`. Por krei "
"indiĝenan nomspacan pakon, necesas nur preterlasi :file:`__init__.py` en la "
"nomspaca paka dosierujo. Jen ekzempla dosierstrukturo (laŭ :ref:`src-layout "
"<setuptools:src-layout>`):"

#: ../source/guides/packaging-namespace-packages.rst:94
msgid ""
"It is extremely important that every distribution that uses the namespace "
"package omits the :file:`__init__.py` or uses a pkgutil-style :file:"
"`__init__.py`. If any distribution does not, it will cause the namespace "
"logic to fail and the other sub-packages will not be importable."
msgstr ""
"Gravegas, ke ĉiu distribuo uzanta la nomspacan pakon aŭ ne havas :file:"
"`__init__.py` aŭ havas pkgutil-stilan :file:`__init__.py`. Se iu distribuo "
"ne faras tion, tio malsukcesigos la nomspacan logikon, kaj tial la aliaj "
"subpakoj ne estos importeblaj."

#: ../source/guides/packaging-namespace-packages.rst:99
msgid ""
"The ``src-layout`` directory structure allows automatic discovery of "
"packages by most :term:`build backends <Build Backend>`. See :ref:`src-"
"layout-vs-flat-layout` for more information. If however you want to manage "
"exclusions or inclusions of packages yourself, this is possible to be "
"configured in the top-level :file:`pyproject.toml`:"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:117
msgid "The same can be accomplished with a :file:`setup.cfg`:"
msgstr "Oni povas fari la samon per :file:`setup.cfg`:"

#: ../source/guides/packaging-namespace-packages.rst:129
msgid "Or :file:`setup.py`:"
msgstr "Aŭ :file:`setup.py`:"

#: ../source/guides/packaging-namespace-packages.rst:142
msgid ""
":ref:`setuptools` will search the directory structure for implicit namespace "
"packages by default."
msgstr ""
":ref:`setuptools` aŭtomate serĉos implicitajn nomspacajn pakojn en la "
"dosieruja strukturo."

#: ../source/guides/packaging-namespace-packages.rst:145
msgid ""
"A complete working example of two native namespace packages can be found in "
"the `native namespace package example project`_."
msgstr ""
"Plena funkcianta ekzemplo de du indiĝenaj nomspacaj pakoj troviĝas en la "
"`indiĝen-nomspaca ekzempla projekto <native namespace package example "
"project>`_."

#: ../source/guides/packaging-namespace-packages.rst:151
msgid ""
"Because native and pkgutil-style namespace packages are largely compatible, "
"you can use native namespace packages in the distributions that only support "
"Python 3 and pkgutil-style namespace packages in the distributions that need "
"to support Python 2 and 3."
msgstr ""
"Ĉar indiĝenaj kaj pkgutil-stilaj nomspacaj pakoj estas plejparte kongruaj, "
"oni povas uzi indiĝenan nomspacan pakon en distribuo nur por Python 3 kaj "
"pkgutil-stilan nomspacan pakon en distribuo por kaj Python 2 kaj Python 3."

#: ../source/guides/packaging-namespace-packages.rst:158
msgid "Legacy namespace packages"
msgstr "Malnovaj nomspacaj pakoj"

#: ../source/guides/packaging-namespace-packages.rst:160
msgid ""
"These two methods, that were used to create namespace packages prior to :pep:"
"`420`, are now considered to be obsolete and should not be used unless you "
"need compatibility with packages already using this method. Also, :doc:"
"`pkg_resources <setuptools:pkg_resources>` has been deprecated."
msgstr ""
"Tiuj du metodoj por krei nomspacopakojn antaŭ :pep:`420`, nun estas "
"malnoviĝintaj kaj evitindaj krom se oni bezonas kongruecon kun pako jam "
"uzanta tiun metodon. Ankaŭ, :doc:`pkg_resources <setuptools:pkg_resources>` "
"estas evitinda."

#: ../source/guides/packaging-namespace-packages.rst:165
msgid ""
"To migrate an existing package, all packages sharing the namespace must be "
"migrated simultaneously."
msgstr ""
"Por migri ekzistantan pakon, ĉiuj pakoj en la nomspaco devas esti migritaj "
"samtempe."

#: ../source/guides/packaging-namespace-packages.rst:167
msgid ""
"While native namespace packages and pkgutil-style namespace packages are "
"largely compatible, pkg_resources-style namespace packages are not "
"compatible with the other methods. It's inadvisable to use different methods "
"in different distributions that provide packages to the same namespace."
msgstr ""
"Dum indiĝena nomspaca pako kaj pkgutil-stila nomspaca pako kongruas inter "
"si, pkg_resources-stila nomspaca pako ne kongruas kun la aliaj metodoj. "
"Estas malrekomendate miksi plurajn metodojn en malsamaj distribuoj "
"provizantaj pakojn en la saman nomspacon."

#: ../source/guides/packaging-namespace-packages.rst:174
msgid "pkgutil-style namespace packages"
msgstr "pkgutil-stilaj nomspacaj pakoj"

#: ../source/guides/packaging-namespace-packages.rst:176
msgid ""
"Python 2.3 introduced the :doc:`pkgutil <python:library/pkgutil>` module and "
"the :py:func:`python:pkgutil.extend_path` function. This can be used to "
"declare namespace packages that need to be compatible with both Python 2.3+ "
"and Python 3. This is the recommended approach for the highest level of "
"compatibility."
msgstr ""
"Python 2.3 enkondukis la modulon :doc:`pkgutil <python:library/pkgutil>` kaj "
"la funkcion :py:func:`python:pkgutil.extend_path`. Oni povas uzi tiujn por "
"deklari nomspacopakon kongruan kun kaj Python 2.3+ kaj Python 3. Tio estas "
"la rekomendata metodo por la plej alta nivelo de kongrueco."

#: ../source/guides/packaging-namespace-packages.rst:181
msgid ""
"To create a pkgutil-style namespace package, you need to provide an :file:"
"`__init__.py` file for the namespace package:"
msgstr ""
"Por krei pkgutil-stilan nomspacan pakon, oni devas provizi dosieron :file:"
"`__init__.py` por la nomspaca pako:"

#: ../source/guides/packaging-namespace-packages.rst:195
#: ../source/guides/packaging-namespace-packages.rst:242
msgid ""
"The :file:`__init__.py` file for the namespace package needs to contain the "
"following:"
msgstr ""
"La dosiero :file:`__init__.py` por la nomspaca pako devas enhavi la jenon:"

#: ../source/guides/packaging-namespace-packages.rst:202
#: ../source/guides/packaging-namespace-packages.rst:249
msgid ""
"**Every** distribution that uses the namespace package must include such an :"
"file:`__init__.py`. If any distribution does not, it will cause the "
"namespace logic to fail and the other sub-packages will not be importable.  "
"Any additional code in :file:`__init__.py` will be inaccessible."
msgstr ""
"**Ĉiu** distribuo uzanta la nomspacan pakon devas inkluzivi tian :file:"
"`__init__.py`. Se distribuo ne inkluzivus tian, la namspaca logiko "
"malsukcesus, kaj aliaj subpakoj ne estus importeblaj. Ajna kroma kodo en :"
"file:`__init__.py` ne estus uzebla."

#: ../source/guides/packaging-namespace-packages.rst:207
msgid ""
"A complete working example of two pkgutil-style namespace packages can be "
"found in the `pkgutil namespace example project`_."
msgstr ""
"Plena funkcianta ekzemplo de du pkgutil-stilaj nomspacaj pakoj troviĝas en "
"la `pkgutil-nomspaca ekzempla projekto <pkgutil namespace example project>`_."

#: ../source/guides/packaging-namespace-packages.rst:217
msgid "pkg_resources-style namespace packages"
msgstr "pkg_resources-stilaj nomspacaj pakoj"

#: ../source/guides/packaging-namespace-packages.rst:219
msgid ""
":doc:`Setuptools <setuptools:index>` provides the `pkg_resources."
"declare_namespace`_ function and the ``namespace_packages`` argument to :"
"func:`~setuptools.setup`. Together these can be used to declare namespace "
"packages. While this approach is no longer recommended, it is widely present "
"in most existing namespace packages. If you are creating a new distribution "
"within an existing namespace package that uses this method then it's "
"recommended to continue using this as the different methods are not cross-"
"compatible and it's not advisable to try to migrate an existing package."
msgstr ""
":doc:`Setuptools <setuptools:index>` provizas la funkcion `pkg_resources."
"declare_namespace`_ kaj la argumenton ``namespace_packages`` de :func:"
"`~setuptools.setup`. Oni uzas tiujn kune por deklari nomspacan pakon. "
"Kvankam tiu maniero ne plu estas rekomendata, ĝi estas vaste uzata en "
"ekzistantaj nomspacaj pakoj. Se oi verkas novan distribuon en ekzistanta "
"nomspaca pako uzanta tiun metodon, estas rekomendate daŭre uzi tion, ĉar la "
"diversaj metodoj ne kongruas inter si, kaj ne konsilindas provi migri "
"ekzistantan pakon."

#: ../source/guides/packaging-namespace-packages.rst:228
msgid ""
"To create a pkg_resources-style namespace package, you need to provide an :"
"file:`__init__.py` file for the namespace package:"
msgstr ""
"Por krei pkg_resources-stilan nomspacan pakon, oni devas provizi dosieron :"
"file:`__init__.py` por la nomspaca pako:"

#: ../source/guides/packaging-namespace-packages.rst:254
msgid ""
"Some older recommendations advise the following in the namespace package :"
"file:`__init__.py`:"
msgstr ""
"Kelkaj malnovaj rekomendoj konsilas la jenon en la nomspaca pako :file:"
"`__init__.py`:"

#: ../source/guides/packaging-namespace-packages.rst:264
msgid ""
"The idea behind this was that in the rare case that setuptools isn't "
"available packages would fall-back to the pkgutil-style packages. This isn't "
"advisable because pkgutil and pkg_resources-style namespace packages are not "
"cross-compatible. If the presence of setuptools is a concern then the "
"package should just explicitly depend on setuptools via ``install_requires``."
msgstr ""
"La kialo estis, ke en la malofta kazo kiam setuptools ne estas havebla, pako "
"povas funkcii kiel pkgutil-stila pako. Tio ne estas konsilinda, ĉar pkgutil "
"kaj pkg_resources-stilaj nomspacopakoj ne kongruas inter si. Se la ĉeesto de "
"setuptools estas problema, do la pako simple eksplicite dependu de "
"setuptools per ``install_requires``."

#: ../source/guides/packaging-namespace-packages.rst:271
msgid ""
"Finally, every distribution must provide the ``namespace_packages`` argument "
"to :func:`~setuptools.setup` in :file:`setup.py`. For example:"
msgstr ""
"Fine, ĉiu distribuo devas provizi la argumenton ``namespace_packages`` al "
"to :func:`~setuptools.setup` en :file:`setup.py`. Ekzemple:"

#: ../source/guides/packaging-namespace-packages.rst:285
msgid ""
"A complete working example of two pkg_resources-style namespace packages can "
"be found in the `pkg_resources namespace example project`_."
msgstr ""
"Plena funkcianta ekzemplo de du pkg_resources-stilaj nomspacaj pakoj "
"troviĝas en la `pkg_resources-nomspaca ekzempla projekto <pkg_resources "
"namespace example project>`_."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:5
msgid ""
"Publishing package distribution releases using GitHub Actions CI/CD workflows"
msgstr ""
"Eldoni pakajn distribuajn eldonoj per la laborfluoj por kontinuaj integrado "
"kaj disponigo ĉe GitHub Actions"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:7
msgid ""
"`GitHub Actions CI/CD`_ allows you to run a series of commands whenever an "
"event occurs on the GitHub platform. One popular choice is having a workflow "
"that's triggered by a ``push`` event. This guide shows you how to publish a "
"Python distribution whenever a tagged commit is pushed. It will use the "
"`pypa/gh-action-pypi-publish GitHub Action`_ for publishing. It also uses "
"GitHub's `upload-artifact`_ and `download-artifact`_ actions for temporarily "
"storing and downloading the source packages."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:19
msgid ""
"This guide *assumes* that you already have a project that you know how to "
"build distributions for and *it lives on GitHub*.  This guide also avoids "
"details of building platform specific projects. If you have binary "
"components, check out :ref:`cibuildwheel`'s GitHub Action examples."
msgstr ""
"Ĉi tiu gvidilo *supozas*, ke vi jam havas projekton, ke vi scias kiel "
"konstrui distribuojn, kaj ke *ĝi ekzistas sur GitHub*. Ĉi tiu gvidilo ankaŭ "
"ignoras detalojn pri konstruado de platformo-specifa projekto. Se vi havas "
"duuman komponanton, vidu la ekzemplojn de GitHub-Agoj por :ref:"
"`cibuildwheel`."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:25
#, fuzzy
#| msgid "Configuring trusted publishing"
msgid "Configuring Trusted Publishing"
msgstr "Starigi fidatan eldonadon"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:27
msgid ""
"This guide relies on PyPI's `Trusted Publishing`_ implementation to connect "
"to `GitHub Actions CI/CD`_. This is recommended for security reasons, since "
"the generated tokens are created for each of your projects individually and "
"expire automatically. Otherwise, you'll need to generate an `API token`_ for "
"both PyPI and TestPyPI. In case of publishing to third-party indexes like :"
"doc:`devpi <devpi:index>`, you may need to provide a username/password "
"combination."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:35
msgid ""
"Since this guide will demonstrate uploading to both PyPI and TestPyPI, we'll "
"need two trusted publishers configured. The following steps will lead you "
"through creating the \"pending\" publishers for your new :term:`PyPI project "
"<Project>`. However it is also possible to add `Trusted Publishing`_ to any "
"pre-existing project, if you are its owner."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:44
msgid ""
"If you followed earlier versions of this guide, you have created the secrets "
"``PYPI_API_TOKEN`` and ``TEST_PYPI_API_TOKEN`` for direct PyPI and TestPyPI "
"access. These are obsolete now and you should remove them from your GitHub "
"repository and revoke them in your PyPI and TestPyPI account settings in "
"case you are replacing your old setup with the new one."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:51
msgid "Let's begin! 🚀"
msgstr "Ek! 🚀"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:53
msgid "Go to https://pypi.org/manage/account/publishing/."
msgstr "Iru al https://pypi.org/manage/account/publishing/."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:54
msgid ""
"Fill in the name you wish to publish your new :term:`PyPI project <Project>` "
"under (the ``name`` value in your ``setup.cfg`` or ``pyproject.toml``), the "
"GitHub repository owner's name (org or user), and repository name, and the "
"name of the release workflow file under the ``.github/`` folder, see :ref:"
"`workflow-definition`. Finally, add the name of the GitHub Environment "
"(``pypi``) we're going set up under your repository. Register the trusted "
"publisher."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:63
msgid ""
"Now, go to https://test.pypi.org/manage/account/publishing/ and repeat the "
"second step, but this time, enter ``testpypi`` as the name of the GitHub "
"Environment."
msgstr ""
"Nun iru al https://test.pypi.org/manage/account/publishing/ kaj ripetu la "
"duan paŝon, sed tajpante ``testpypi`` kiel la nomon de la GitHub-medio."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:66
msgid ""
"Your \"pending\" publishers are now ready for their first use and will "
"create your projects automatically once you use them for the first time."
msgstr ""
"Viaj «estontaj» eldonantoj nun pretas por unua uzo kaj kreos viajn "
"projektojn aŭtomate post unua uzo."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:72
msgid ""
"If you don't have a TestPyPI account, you'll need to create it. It's not the "
"same as a regular PyPI account."
msgstr ""
"Se vi ne havas konton ĉe Prova PyPI, vi devas krei ĝin. Ĝi ne estas sama "
"kiel konto ĉe ordinara PyPI."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:78
#, fuzzy
#| msgid ""
#| "For security reasons, you must require `manual approval <https://docs."
#| "github.com/en/actions/deployment/targeting-different-environments/using-"
#| "environments-for-deployment#deployment-protection-rules>`_ on each run "
#| "for the ``pypi`` environment."
msgid ""
"For security reasons, you must require `manual approval <https://docs.github."
"com/en/actions/how-tos/managing-workflow-runs-and-deployments/managing-"
"deployments/managing-environments-for-deployment#creating-an-environment>`_ "
"on each run for the ``pypi`` environment."
msgstr ""
"Pro sekureco, vi devas postuli `malaŭtomatan aprobon <https://docs.github."
"com/en/actions/deployment/targeting-different-environments/using-"
"environments-for-deployment#deployment-protection-rules>`_ je ĉiu rulo por "
"la medio ``pypi``."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:85
msgid "Creating a workflow definition"
msgstr "Krei laborfluan difinon"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:87
msgid ""
"GitHub CI/CD workflows are declared in YAML files stored in the ``.github/"
"workflows/`` directory of your repository."
msgstr ""
"Laborfluoj por kontinuaj integrado kaj disponigo ĉe GitHub estas deklaritaj "
"en YAML-dosieroj en la dosiero ``.gitub/workflows/`` de via deponejo."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:90
msgid "Let's create a ``.github/workflows/publish-to-test-pypi.yml`` file."
msgstr "Ni kreu dosieron ``.github/workflows/publish-to-test-pypi.yml``."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:93
msgid ""
"Start it with a meaningful name and define the event that should make GitHub "
"run this workflow:"
msgstr ""
"Uzu signifan nomon, kaj difinu tiun eventon, kiu igos GitHub ruli la "
"laborfluon:"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:101
msgid "Checking out the project and building distributions"
msgstr "Elpreni la projekton kaj konstrui distribuojn"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:103
msgid ""
"We will have to define two jobs to publish to PyPI and TestPyPI "
"respectively, and an additional job to build the distribution packages."
msgstr ""
"Ni difinus du taskojn por eldoni al PyPI kaj Prova PyPI respektive kaj "
"ekstran taskon por konstrui la distribuajn pakojn."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:107
msgid ""
"First, we'll define the job for building the dist packages of your project "
"and storing them for later use:"
msgstr ""
"Unue, ni difinas la taskon por konstrui la distribuajn pakojn de via "
"projekto kaj konservi ilin por posta uzo:"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:115
msgid ""
"This will download your repository into the CI runner and then install and "
"activate the newest available Python 3 release."
msgstr ""
"Tio elŝutos vian deponejon al la kontinuintegrilo kaj instalos kaj aktivigos "
"la plej novan eldonon de Python 3."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:118
msgid ""
"And now we can build the dists from source and store them. In this example, "
"we'll use the ``build`` package. So add this to the steps list:"
msgstr ""
"Nun ni povas konstrui la distribuojn el fonto kaj konservi ilin. En ĉi tiu "
"ekzemplo, ni uzos la pakon ``build``. Do aldonu la jenon al la listo de "
"paŝoj:"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:128
msgid "Defining a workflow job environment"
msgstr "Difini laborfluan taskan medion"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:130
#, fuzzy
#| msgid ""
#| "Now, let's add initial setup for our job that will publish to PyPI. It's "
#| "a process that will execute commands that we'll define later. In this "
#| "guide, we'll use the latest stable Ubuntu LTS version provided by GitHub "
#| "Actions. This also defines a GitHub Environment for the job to run in its "
#| "context and a URL to be displayed in GitHub's UI nicely. Additionally, it "
#| "allows acquiring an OpenID Connect token that the ``pypi-publish`` "
#| "actions needs to implement secretless trusted publishing to PyPI."
msgid ""
"Now, let's add initial setup for our job that will publish to PyPI. It's a "
"process that will execute commands that we'll define later. In this guide, "
"we'll use the latest stable Ubuntu LTS version provided by GitHub Actions. "
"This also defines a GitHub Environment for the job to run in its context and "
"a URL to be displayed in GitHub's UI nicely. Additionally, it allows "
"acquiring an OpenID Connect token that the ``pypi-publish`` actions needs to "
"implement secretless Trusted Publishing to PyPI."
msgstr ""
"Nun, ni aldonu komencan agordon por la tasko eldoni al PyPI. Ĝi estas "
"procezo, kiu rulos komandojn difinotajn. En ĉi tiu gvidilo, ni uzas la plej "
"novan stabilan longdaŭre subtenatan version de Ubuntu provizitan de GitHub-"
"Agoj. Tio ankaŭ difinas GitHub-Medio por ruli la taskon, kaj retadreson por "
"montrado en la grafika fasado de GitHub. Plie ĝi subtenas akiri ĵetonon de "
"OpenID Connect, kiun la ago ``pypi-publish`` bezonas por sensekreta fidata "
"eldonado al PyPI."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:144
msgid ""
"This will also ensure that the PyPI publishing workflow is only triggered if "
"the current commit is tagged."
msgstr ""
"Tio ankaŭ certigas, ke la PyPI-eldona laborfluo nur ekos, se la aktuala "
"enmeto havas etikedon."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:148
msgid "Publishing the distribution to PyPI"
msgstr "Eldoni la distribuon al PyPI"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:150
msgid "Finally, add the following steps at the end:"
msgstr "Fine, postmetu la jenajn paŝojn:"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:157
msgid ""
"This step uses the `pypa/gh-action-pypi-publish`_ GitHub Action: after the "
"stored distribution package has been downloaded by the `download-artifact`_ "
"action, it uploads the contents of the ``dist/`` folder into PyPI "
"unconditionally."
msgstr ""
"Tiu paŝo uzas la GitHub-ago `pypa/gh-action-pypi-publish`_: post elŝuto de "
"la distribua pako per la ago `download-artifact`_, ĝi alŝutas la enhavon de "
"la dosierujo ``dist/`` al PyPI senkondiĉe."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:164
msgid ""
"Starting with version `v1.11.0 <https://github.com/pypa/gh-action-pypi-"
"publish/releases/tag/v1.11.0>`_, `pypa/gh-action-pypi-publish`_ generates "
"and uploads :pep:`740`-compatible attestations for each distribution by "
"default. No additional manual signing steps are required."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:172
msgid "Separate workflow for publishing to TestPyPI"
msgstr "Aparta laborfluo por eldoni al TestPyPI"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:174
msgid ""
"Now, repeat these steps and create another job for publishing to the "
"TestPyPI package index under the ``jobs`` section:"
msgstr ""
"Nun ripetu tiujn paŝojn, kreante alian taskon por eldonado al la pakindekso "
"Prova PyPI sub la sekcio ``jobs``:"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:184
msgid ""
"Requiring manual approvals in the ``testpypi`` GitHub Environment is "
"typically unnecessary as it's designed to run on each commit to the main "
"branch and is often used to indicate a healthy release publishing pipeline."
msgstr ""
"Postuli malaŭtomatan aprobadon en la GitHub-medio ``testpypi`` ordinare ne "
"necesas, ĉar ĝi laŭfasone ruliĝas post ĉiu enmeto en la ĉefbranĉon kaj ofte "
"indikas sanan eldonadan ĉenstablon."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:188
msgid "The whole CI/CD workflow"
msgstr "La plena laborfluo por kontinuaj integrado kaj disponigo"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:190
msgid ""
"This paragraph showcases the whole workflow after following the above guide."
msgstr "Jen alineo pri la plena laborfluo laŭ la ĉi-supra gvidilo."

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:198
msgid "That's all, folks!"
msgstr "Jen fino!"

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:200
msgid ""
"Now, whenever you push a tagged commit to your Git repository remote on "
"GitHub, this workflow will publish it to PyPI. And it'll publish any push to "
"TestPyPI which is useful for providing test builds to your alpha users as "
"well as making sure that your release pipeline remains healthy!"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:208
msgid ""
"If your repository has frequent commit activity and every push is uploaded "
"to TestPyPI as described, the project might exceed the `PyPI project size "
"limit <https://pypi.org/help/#project-size-limit>`_. The limit could be "
"increased, but a better solution may constitute to use a PyPI-compatible "
"server like :ref:`pypiserver` in the CI for testing purposes."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:216
msgid ""
"It is recommended to keep the integrated GitHub Actions at their latest "
"versions, updating them frequently."
msgstr ""
"Estas rekomendata teni la integritajn GitHub Actions ĉe la plej novaj "
"versioj, ĝisdatigante ofte."

#: ../source/guides/section-build-and-publish.rst:3
msgid "Building and Publishing"
msgstr "Konstruado kaj Eldonado"

#: ../source/guides/section-hosting.rst:3
msgid "Hosting"
msgstr "Gastigado"

#: ../source/guides/section-install.rst:3
#: ../source/specifications/pylock-toml.rst:729
msgid "Installation"
msgstr "Instalado"

#: ../source/guides/single-sourcing-package-version.rst:-1
msgid "0; url=../../discussions/single-source-version/"
msgstr "0; url=../../discussions/single-source-version/"

#: ../source/guides/single-sourcing-package-version.rst:6
msgid "Redirecting stale single-source package version link..."
msgstr "Alidirektante malnovan hiperligon pri unufontigo de paka versio…"

#: ../source/guides/single-sourcing-package-version.rst:8
msgid ""
"If the page doesn't automatically refresh, see :ref:`single-source-version`."
msgstr "Se la paĝo ne reŝargiĝas aŭtomate, vidu :ref:`single-source-version`."

#: ../source/guides/supporting-multiple-python-versions.rst:7
msgid "Supporting multiple Python versions"
msgstr "Subteni plurajn versiojn de Python"

#: ../source/guides/supporting-multiple-python-versions.rst:10
msgid "2014-12-24"
msgstr "24 Decembro 2014"

#: ../source/guides/supporting-multiple-python-versions.rst:36
msgid ""
"In addition to the work required to create a Python package, it is often "
"necessary that the package must be made available on different versions of "
"Python.  Different Python versions may contain different (or renamed) "
"standard library packages, and the changes between Python versions 2.x and 3."
"x include changes in the language syntax."
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:42
msgid ""
"Performed manually, all the testing required to ensure that the package "
"works correctly on all the target Python versions (and OSs!) could be very "
"time-consuming. Fortunately, several tools are available for dealing with "
"this, and these will briefly be discussed here."
msgstr ""
"Malaŭtomata testado por certigi, ke la pako funkcias ĝuste sur ĉiuj celataj "
"versioj de Python (kaj mastrumaj sistemoj!), postulas multegon da tempo. "
"Feliĉe, ekzistas pluraj iloj por helpi pri tio, kiujn ni diskutos ĉi tie."

#: ../source/guides/supporting-multiple-python-versions.rst:48
msgid "Automated testing and continuous integration"
msgstr "Aŭtomata testado kaj kontinua integrado"

#: ../source/guides/supporting-multiple-python-versions.rst:50
msgid ""
"Several hosted services for automated testing are available. These services "
"will typically monitor your source code repository (e.g. at `GitHub <https://"
"github.com>`_ or `Bitbucket <https://bitbucket.org>`_) and run your "
"project's test suite every time a new commit is made."
msgstr ""
"Ekzistas pluraj gastigaj servoj por aŭtomata testado. Tiaj servoj ordinare "
"observadas la fontkodan deponejon (ekz. ^©e `GitHub <https://github.com>`_ "
"aŭ `Bitbucket <https://bitbucket.org>`_) kaj rulas la testaron post ĉiu "
"modifo."

#: ../source/guides/supporting-multiple-python-versions.rst:55
msgid ""
"These services also offer facilities to run your project's test suite on "
"*multiple versions of Python*, giving rapid feedback about whether the code "
"will work, without the developer having to perform such tests themselves."
msgstr ""
"Tiaj servoj ankaŭ ofertas funkcion por ruli la testaron sur *multaj versioj "
"de Python*, rapide sciigante pri ĉu la kodo funkcias, sen malaŭtomata "
"testado far la aŭtoro."

#: ../source/guides/supporting-multiple-python-versions.rst:59
msgid ""
"Wikipedia has an extensive `comparison <https://en.wikipedia.org/wiki/"
"Comparison_of_continuous_integration_software>`_ of many continuous-"
"integration systems. There are two hosted services which when used in "
"conjunction provide automated testing across Linux, Mac and Windows:"
msgstr ""
"Vikipedio havas detalan `komparon <https://en.wikipedia.org/wiki/"
"Comparison_of_continuous_integration_software>`_ inter pluraj sistemoj por "
"kontinua integrado. Ekzistas du gastigitajn servojn, kiuj kune provizas "
"aŭtomatan testadon por Linux, Mac kaj Windows:"

#: ../source/guides/supporting-multiple-python-versions.rst:65
msgid ""
"`Travis CI <https://travis-ci.org>`_ provides both a Linux and a macOS "
"environment. The Linux environment is Ubuntu 12.04 LTS Server Edition 64 bit "
"while the macOS is 10.9.2 at the time of writing."
msgstr ""
"`Travis CI <https://travis-ci.org>`_ provizas kaj Linux-an kaj macOS-an "
"mediojn. La medio Linux estis Ubuntu 12.04 LTS Servila Eldono 64-bita, dum "
"la medio macOS estis 10.9.2, kiam ĉi tiu dokumento estis verkita."

#: ../source/guides/supporting-multiple-python-versions.rst:68
msgid ""
"`Appveyor <https://www.appveyor.com/>`_ provides a Windows environment "
"(Windows Server 2012)."
msgstr ""
"`Appveyor <https://www.appveyor.com/>`_ provizas Windows-medion (Windows "
"Server 2012)."

#: ../source/guides/supporting-multiple-python-versions.rst:79
msgid ""
"Both `Travis CI`_ and Appveyor_ require a `YAML <https://yaml.org>`_-"
"formatted file as specification for the instructions for testing. If any "
"tests fail, the output log for that specific configuration can be inspected."
msgstr ""
"Kaj `Travis CI`_ kaj Appveyor_ postulas `YAML <https://yaml.org>`_-dosieron "
"specifantan la instrukciojn pri testado. Se iu testo malsukcesos, la eliga "
"protokolo pri tiu estas inspektebla."

#: ../source/guides/supporting-multiple-python-versions.rst:84
msgid ""
"For Python projects that are intended to be deployed on both Python 2 and 3 "
"with a single-source strategy, there are a number of options."
msgstr ""
"Por Python-projekto disponigota sur kaj Python 2 kaj Python 3 per unufonta "
"strategio, ekzistas kelkaj opcioj."

#: ../source/guides/supporting-multiple-python-versions.rst:88
msgid "Tools for single-source Python packages"
msgstr "Iloj por unufontaj Python-pakoj"

#: ../source/guides/supporting-multiple-python-versions.rst:90
msgid ""
"`six <https://pypi.org/project/six/>`_ is a tool developed by Benjamin "
"Peterson for wrapping over the differences between Python 2 and Python 3. "
"The six_ package has enjoyed widespread use and may be regarded as a "
"reliable way to write a single-source Python module that can be use in both "
"Python 2 and 3. The six_ module can be used from as early as Python 2.5. A "
"tool called `modernize <https://pypi.org/project/modernize>`_, developed by "
"Armin Ronacher, can be used to automatically apply the code modifications "
"provided by six_."
msgstr ""
"'six <https://pypi.org/project/six/>'_ estas ilo verkita de Benjamin "
"Peterson por glatigi la diferencojn inter Python 2 kaj Python 3. La pako "
"six_ ĝuas vastan uzadon kaj estas rigardata kiel fidinda maniero verki unu-"
"fontan Python-modulon por kaj Python 2 kaj Python 3. La modulo six_ estas "
"uzebla ekde Python 2.5. Ilo nomita `modernize <https://pypi.org/project/"
"modernize>`_, verkita de Armin Ronacher, povas aŭtomate efektivigi la kodo-"
"modifojn per six_."

#: ../source/guides/supporting-multiple-python-versions.rst:99
msgid ""
"Similar to six_, `python-future <http://python-future.org/overview.html>`_ "
"is a package that provides a compatibility layer between Python 2 and Python "
"3 source code; however, unlike six_, this package aims to provide "
"interoperability between Python 2 and Python 3 with a language syntax that "
"matches one of the two Python versions: one may use"
msgstr ""
"Simile al six_, `python-future <http://python-future.org/overview.html>`_ "
"estas pako por kongrueco inter Python 2 kaj Python 3. Malkiel six_, tiu pako "
"celas kunfunkciigi Python 2 kaj Python 3 per lingva sintakso de unu el la du "
"Python-versioj: oni povas uzi"

#: ../source/guides/supporting-multiple-python-versions.rst:106
msgid "a Python 2 (by syntax) module in a Python 3 project."
msgstr "modulon de sintakso Python 2 en projekto de Python 3."

#: ../source/guides/supporting-multiple-python-versions.rst:107
msgid "a Python 3 (by syntax) module in a *Python 2* project."
msgstr "modulon de sintakso Python 3 en projekto de *Python 2*."

#: ../source/guides/supporting-multiple-python-versions.rst:109
msgid ""
"Because of the bi-directionality, python-future_ offers a pathway to "
"converting a Python 2 package to Python 3 syntax module-by-module. However, "
"in contrast to six_, python-future_ is supported only from Python 2.6. "
"Similar to modernize_ for six_, python-future_ comes with two scripts called "
"``futurize`` and ``pasteurize`` that can be applied to either a Python 2 "
"module or a Python 3 module respectively."
msgstr ""
"Per la dudirekteco, python-future_ ofertas manieron konverti pakon de Python "
"2 al la sintakso de Python 3 modulon post modulo. Tamen, malkiel six_, "
"python_future_ nur subtenas Python 2.6+. Kiel six_, python_future_ provizas "
"du programetojn, ``futurize`` kaj ``pasteurize``, por modulo de Python 2 kaj "
"de Python 3 respektive."

#: ../source/guides/supporting-multiple-python-versions.rst:116
msgid ""
"Use of six_ or python-future_ adds an additional runtime dependency to your "
"package: with python-future_, the ``futurize`` script can be called with the "
"``--stage1`` option to apply only the changes that Python 2.6+ already "
"provides for forward-compatibility to Python 3. Any remaining compatibility "
"problems would require manual changes."
msgstr ""
"Uzo de six_ aŭ python_future_ aldonas ekstran rultempan dependecon al la "
"pako: kun python-future_, oni rulu la programon ``futurize`` kun la flago "
"``--stage1`` por efektivigi nur tiajn ŝanĝojn, kiajn Python 2.6+ jam "
"provizas por kongrueco kun Python 3. Ajna restanta problemo pri kongrueco "
"postulas malaŭtomatan modifon."

#: ../source/guides/supporting-multiple-python-versions.rst:123
msgid "What's in which Python?"
msgstr "Kio estas en kiu Python?"

#: ../source/guides/supporting-multiple-python-versions.rst:125
msgid ""
"Ned Batchelder provides a list of changes in each Python release for `Python "
"2 <https://nedbatchelder.com/blog/201109/whats_in_which_python.html>`__, "
"`Python 3.0-3.3 <https://nedbatchelder.com/blog/201310/"
"whats_in_which_python_3.html>`__ and `Python 3.4-3.6 <https://nedbatchelder."
"com/blog/201803/whats_in_which_python_3436.html>`__. These lists may be used "
"to check whether any changes between Python versions may affect your package."
msgstr ""
"Ned Batchelder listigas la ŝanĝojn en ĉiu eldono de Python por `Python 2 "
"<https://nedbatchelder.com/blog/201109/whats_in_which_python.html>`__, "
"`Python 3.0–3.3 <https://nedbatchelder.com/blog/201310/"
"whats_in_which_python_3.html>`__ kaj `Python 3.4-3.6 <https://nedbatchelder."
"com/blog/201803/whats_in_which_python_3436.html>`__. Per tiuj listoj oni "
"povas kontroli, ĉu ŝanĝoj inter versioj de Python gravas pri onia pako."

#: ../source/guides/supporting-windows-using-appveyor.rst:5
msgid "Supporting Windows using Appveyor"
msgstr "Subteni Windows per Appveyor"

#: ../source/guides/supporting-windows-using-appveyor.rst:8
msgid "2015-12-03"
msgstr "3 Decembro 2015"

#: ../source/guides/supporting-windows-using-appveyor.rst:10
msgid ""
"This section covers how to use the free `Appveyor`_ continuous integration "
"service to provide Windows support for your project. This includes testing "
"the code on Windows, and building Windows-targeted binaries for projects "
"that use C extensions."
msgstr ""
"Tiu paragrafo temas pri kiel uzi la senkostan servon `Appveyor`_ de kontinua "
"integrado, por subteni Windows por via projekto. Tio inkluzivas testi la "
"kodon sur Windows, kaj konstrui Windows -duumaĵojn por projektoj uzantaj C-"
"etendaĵojn."

#: ../source/guides/supporting-windows-using-appveyor.rst:19
msgid ""
"Many projects are developed on Unix by default, and providing Windows "
"support can be a challenge, because setting up a suitable Windows test "
"environment is non-trivial, and may require buying software licenses."
msgstr ""
"Multaj projektoj estas verkitaj sur Unikso, kaj subteni Windows povas esti "
"malfacile, ĉar starigado de taŭga Windows-testmedio estas malsimpla kaj "
"povas postuli aĉetadon de programaj licencoj."

#: ../source/guides/supporting-windows-using-appveyor.rst:23
msgid ""
"The Appveyor service is a continuous integration service, much like the "
"better-known `Travis`_ service that is commonly used for testing by projects "
"hosted on `GitHub`_. However, unlike Travis, the build workers on Appveyor "
"are Windows hosts and have the necessary compilers installed to build Python "
"extensions."
msgstr ""
"La servo Appveyor estas servo por kontinua integrado simile al la pli bone "
"konata servo `Travis`_ ofte uzata por testado de projektoj sur `GitHub`_. "
"Tamen, malkiel Travis, la konstruaj procezoj sur Appveyor gastigas Windows "
"kaj havas taŭgajn tradukilojn por konstrui Python-etendaĵojn."

#: ../source/guides/supporting-windows-using-appveyor.rst:29
msgid ""
"Windows users typically do not have access to a C compiler, and therefore "
"are reliant on projects that use C extensions distributing binary wheels on "
"PyPI in order for the distribution to be installable via ``python -m pip "
"install <dist>``. By using Appveyor as a build service (even if not using it "
"for testing) it is possible for projects without a dedicated Windows "
"environment to provide Windows-targeted binaries."
msgstr ""
"Uzantoj de Windows ofte ne havas C-tradukilon kaj tial dependas de la "
"distribuado de duumaj wheel-oj ĉe PyPI de projektoj uzantaj C-etendaĵojn por "
"instali la distribuon per ``python -m pip install <dist>``. Uzante Appveyor "
"kiel konstruservon (eĉ se oni ne uzas ĝin por testado), oni povas disponigi "
"Windows-duumaĵojn sen dediĉita Windows-medio."

#: ../source/guides/supporting-windows-using-appveyor.rst:37
msgid "Setting up"
msgstr "Eki"

#: ../source/guides/supporting-windows-using-appveyor.rst:39
msgid ""
"In order to use Appveyor to build Windows wheels for your project, you must "
"have an account on the service. Instructions on setting up an account are "
"given in `the Appveyor documentation <https://www.appveyor.com/docs/>`__. "
"The free tier of account is perfectly adequate for open source projects."
msgstr ""
"Por uzi Appveyor por konstrui wheel por Windows por via projekto, oni devas "
"havi konton ĉe Appveyor. La `dokumentaro de Appveyor <https://www.appveyor."
"com/docs/>`__ priskribas instrukciojn por krei konton. La senkosta konto "
"sufiĉas por malfermitkoda projekto."

#: ../source/guides/supporting-windows-using-appveyor.rst:44
msgid ""
"Appveyor provides integration with `GitHub`_ and `Bitbucket`_, so as long as "
"your project is hosted on one of those two services, setting up Appveyor "
"integration is straightforward."
msgstr ""
"Appveyor integriĝas kun `GitHub`_ kaj `Bitbucket`_. Se via projekto estas "
"gastigata en unu el tiuj du servoj, ekstarigo de Appveyor facilas."

#: ../source/guides/supporting-windows-using-appveyor.rst:48
msgid ""
"Once you have set up your Appveyor account and added your project, Appveyor "
"will automatically build your project each time a commit occurs. This "
"behaviour will be familiar to users of Travis."
msgstr ""
"Post starigo de konto ĉe Appveyor kaj agordado de la projekto, Appveyor "
"aŭtomate konstruos la projekton post ĉiu modifo. Tiu konduto similas al "
"Travis."

#: ../source/guides/supporting-windows-using-appveyor.rst:53
msgid "Adding Appveyor support to your project"
msgstr "Aldoni subtenon por Appveyor al via projekto"

#: ../source/guides/supporting-windows-using-appveyor.rst:55
msgid ""
"In order to define how Appveyor should build your project, you need to add "
"an :file:`appveyor.yml` file to your project. The full details of what can "
"be included in the file are covered in the Appveyor documentation. This "
"guide will provide the details necessary to set up wheel builds."
msgstr ""
"Por difini la tielan manieron, kiel Appveyor konstruos vian projekton, oni "
"aldonu dosieron :file:`appveyor.yml` al via projekto. La plenaj detaloj pri "
"la dosiero troviĝas en la dokumentaro de Appveyor. Ĉi tiu gvidilo provizas "
"tiajn detalojn, kiaj necesas por konstrui wheel-on."

#: ../source/guides/supporting-windows-using-appveyor.rst:60
msgid ""
"Appveyor includes by default all of the compiler toolchains needed to build "
"extensions for Python. For Python 2.7, 3.5+ and 32-bit versions of 3.3 and "
"3.4, the tools work out of the box. But for 64-bit versions of Python 3.3 "
"and 3.4, there is a small amount of additional configuration needed to let "
"distutils know where to find the 64-bit compilers. (From 3.5 onwards, the "
"version of Visual Studio used includes 64-bit compilers with no additional "
"setup)."
msgstr ""
"Appveyor apriore inkluzivas ĉiujn tradulkilĉenojn necesajn por konstrui "
"etendaĵojn por Python. Por Python 2.7, 3.5+ kaj 32-bitaj versioj de 3.3 kaj "
"3.4, la iloj funkcias senmodife. Sed por 64-bitaj versioj de Python 3.3 kaj "
"3.4, oni devas iomete agordi por sciigi distutils pri la loko de la 64-bita "
"tradukilo. (Ekde versio 3.5, la uzata versio de Visual Studio inkluzivas 64-"
"bitan tradukilon sen plia agordo.)"

#: ../source/guides/supporting-windows-using-appveyor.rst:68
msgid "appveyor.yml"
msgstr "appveyor.yml"

#: ../source/guides/supporting-windows-using-appveyor.rst:74
msgid ""
"This file can be downloaded from `here <https://raw.githubusercontent.com/"
"pypa/python-packaging-user-guide/master/source/guides/appveyor-sample/"
"appveyor.yml>`__."
msgstr ""
"Tiu dosiero estas elŝutebla `ĉi tie <https://raw.githubusercontent.com/pypa/"
"python-packaging-user-guide/master/source/guides/appveyor-sample/appveyor."
"yml>`__."

#: ../source/guides/supporting-windows-using-appveyor.rst:76
msgid ""
"The :file:`appveyor.yml` file must be located in the root directory of your "
"project. It is in ``YAML`` format, and consists of a number of sections."
msgstr ""
"La dosiero :file:`appveyor.yml` devas situi en la radika dosiero de via "
"projekto. Ĝi estas en la dosierformo ``YAML`` kaj konsistas el kelkaj "
"sekcioj."

#: ../source/guides/supporting-windows-using-appveyor.rst:79
msgid ""
"The ``environment`` section is the key to defining the Python versions for "
"which your wheels will be created. Appveyor comes with Python 2.6, 2.7, 3.3, "
"3.4 and 3.5 installed, in both 32-bit and 64-bit builds. The example file "
"builds for all of these environments except Python 2.6. Installing for "
"Python 2.6 is more complex, as it does not come with pip included. We don't "
"support 2.6 in this document (as Windows users still using Python 2 are "
"generally able to move to Python 2.7 without too much difficulty)."
msgstr ""
"La sekcio ``environment`` gravas por difini tiujn versiojn de Python, por "
"kiuj wheel-oj kreiĝos. La Python-versioj 2.6, 2.7, 3.3, 3.4 kaj 3.5, en kaj "
"32-bitaj kaj 64-bitaj konstruoj, estas apriore instalitaj en Appveyor. La "
"ekzempla dosiero konstruas por ĉiuj el tiuj medioj krom Python 2.6. "
"Instalado por Python 2.6 estas pli komplika, ĉar pip ne estas apriore "
"inkluzivita. Ni ne subtenas 2.6 en ĉi tiu dokumento (uzanto de Windows "
"ankoraŭ uzanta Python 2 ordinare povas facile migri al Python 2.7)."

#: ../source/guides/supporting-windows-using-appveyor.rst:87
msgid ""
"The ``install`` section uses pip to install any additional software that the "
"project may require. The only requirement for building wheels is the "
"``wheel`` project, but projects may wish to customise this code in certain "
"circumstances (for example, to install additional build packages such as "
"``Cython``, or test tools such as ``tox``)."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:93
msgid ""
"The ``build`` section simply switches off builds - there is no build step "
"needed for Python, unlike languages like ``C#``."
msgstr ""
"La sekcio ``build`` simple malŝaltas konstruadon – neniu konstrua paŝo "
"necesas por Python malkiel ekzemple ``C#``."

#: ../source/guides/supporting-windows-using-appveyor.rst:96
msgid ""
"The main sections that will need to be tailored to your project are "
"``test_script`` and ``after_test``."
msgstr ""
"La ĉefaj sekcioj adaptendaj al via projekto estas ``test_script`` kaj "
"``after_test``."

#: ../source/guides/supporting-windows-using-appveyor.rst:99
msgid ""
"The ``test_script`` section is where you will run your project's tests. The "
"supplied file runs your test suite using ``setup.py test``. If you are only "
"interested in building wheels, and not in running your tests on Windows, you "
"can replace this section with a dummy command such as ``echo Skipped "
"Tests``. You may wish to use another test tool, such as ``nose`` or :file:"
"`py.test`.  Or you may wish to use a test driver like ``tox`` - however if "
"you are using ``tox`` there are some additional configuration changes you "
"will need to consider, which are described below."
msgstr ""
"La sekcio ``test_script`` estas la loko, kie oni rulas la testojn de la "
"projekto. La donita dosiero rulas la testaron per ``setup.py test``. Se oni "
"nur interesiĝas pri konstruado de wheel-oj kaj ne pri rulado de testoj sur "
"Windows, oni povas anstataŭigi tiun sekcion per neniaĵo kiel ``echo "
"Preterpasis Testojn``. Oni eble deziras uzi alian testilon kiel ``nose`` aŭ :"
"file:`py.test`.  Aŭ oni deziras uzi testozorgilon kiel ``tox`` – tamen, se "
"oni uzas ``tox``, oni konsideru la ĉi-subajn pliajn ŝanĝojn pri agordoj."

#: ../source/guides/supporting-windows-using-appveyor.rst:108
msgid ""
"The ``after_test`` runs once your tests have completed, and so is where the "
"wheels should be built. Assuming your project uses the recommended tools "
"(specifically, ``setuptools``) then the ``setup.py bdist_wheel`` command "
"will build your wheels."
msgstr ""
"La ``after_test`` ruliĝas post fino de la testoj; tial oni konstruas la "
"wheel tie. Supozante, ke via projekto uzas la rekomendatajn ilojn (specife "
"``setuptools``), do la komando ``setup.py bdist_wheel`` konstruos la wheel."

#: ../source/guides/supporting-windows-using-appveyor.rst:113
msgid ""
"Note that wheels will only be built if your tests succeed. If you expect "
"your tests to fail on Windows, you can skip them as described above."
msgstr ""
"Notu, ke wheel konstruiĝos nur, se la testoj sukcesos. Se oni atendas "
"malsukceson de testoj sur Windows, oni povas preterpasi ilin laŭ la maniero "
"ĉi-supra."

#: ../source/guides/supporting-windows-using-appveyor.rst:118
msgid "Support script"
msgstr "Helpa programeto"

#: ../source/guides/supporting-windows-using-appveyor.rst:120
msgid ""
"The :file:`appveyor.yml` file relies on a single support script, which sets "
"up the environment to use the SDK compiler for 64-bit builds on Python 3.3 "
"and 3.4.  For projects which do not need a compiler, or which don't support "
"3.3 or 3.4 on 64-bit Windows, only the :file:`appveyor.yml` file is needed."
msgstr ""
"La dosiero :file:`appveyor.yml` dependas de unu helpa programeto, kiu "
"agordas la medion por uzi la SDK-tradukilon por 64-bitaj konstruoj je Python "
"3.3 kaj 3.4. Tiuj projektoj, kiuj ne bezonas tradukilon aŭ ne subtenas 3.3 "
"aŭ 3.4 sur 64-bita Windows, nur bezonas la dosieron :file:`appveyor.yml`."

#: ../source/guides/supporting-windows-using-appveyor.rst:125
msgid ""
"`build.cmd <https://raw.githubusercontent.com/pypa/python-packaging-user-"
"guide/master/source/guides/appveyor-sample/build.cmd>`__ is a Windows batch "
"script that runs a single command in an environment with the appropriate "
"compiler for the selected Python version. All you need to do is to set the "
"single environment variable ``DISTUTILS_USE_SDK`` to a value of ``1`` and "
"the script does the rest. It sets up the SDK needed for 64-bit builds of "
"Python 3.3 or 3.4, so don't set the environment variable for any other "
"builds."
msgstr ""
"`build.cmd <https://raw.githubusercontent.com/pypa/python-packaging-user-"
"guide/master/source/guides/appveyor-sample/build.cmd>`__ estas programeto "
"por Windows rulanta unu komandon en medio kun la taŭga tradukilo por la "
"elektita versio de Python. Oni nur bezonas difini la median variablon "
"``DISTUTILS_USE_SDK`` kiel ``1``, kaj la programeto aŭtomatigas ĉion. Tio "
"starigas la SDK por 64-bita Python 3.3 or 3.4; tial ne difinu la median "
"variablon por alia konstruo."

#: ../source/guides/supporting-windows-using-appveyor.rst:132
msgid ""
"You can simply download the batch file and include it in your project "
"unchanged."
msgstr ""
"Vi povas simple elŝuti la ``cmd``-dosieron kaj senŝanĝe inkluzivi ĝin en "
"vian projekton."

#: ../source/guides/supporting-windows-using-appveyor.rst:136
msgid "Access to the built wheels"
msgstr "Aliro al la konstruitaj wheel-oj"

#: ../source/guides/supporting-windows-using-appveyor.rst:138
msgid ""
"When your build completes, the built wheels will be available from the "
"Appveyor control panel for your project. They can be found by going to the "
"build status page for each build in turn. At the top of the build output "
"there is a series of links, one of which is \"Artifacts\". That page will "
"include a list of links to the wheels for that Python version / "
"architecture. You can download those wheels and upload them to PyPI as part "
"of your release process."
msgstr ""
"Post fino de konstruado, la konstruitaj wheel-dosieroj estos haveblaj ĉe la "
"stirpanelo de Appveyor por via projekto. Ili troviĝas ĉe la konstruo-"
"statopaĝo por ĉiu konstruo. Ĉe la supro de la eligaĵo de la konstruo estas "
"hiperligoj, unu el kiuj estas «Artefaktoj». Tiu paĝo inkluzivas hiperligojn "
"al la wheel-oj por la Python-versio kaj arĥikteturo. Vi povas elŝuti tiujn "
"wheel-ojn kaj alŝuti ilin al PyPI dum via eldona procedo."

#: ../source/guides/supporting-windows-using-appveyor.rst:149
msgid "Testing with tox"
msgstr "Testado per tox"

#: ../source/guides/supporting-windows-using-appveyor.rst:151
msgid ""
"Many projects use the :doc:`Tox <tox:index>` tool to run their tests. It "
"ensures that tests are run in an isolated environment using the exact files "
"that will be distributed by the project."
msgstr ""
"Multaj projektoj uzas la ilon :doc:`Tox <tox:index>` por testado. Tio "
"certigas, ke testoj ruliĝu en izolita medio uzante la ekzaktajn dosierojn "
"distribuotajn de la projekto."

#: ../source/guides/supporting-windows-using-appveyor.rst:155
msgid ""
"In order to use ``tox`` on Appveyor there are a couple of additional "
"considerations (in actual fact, these issues are not specific to Appveyor, "
"and may well affect other CI systems)."
msgstr ""
"Por uzi ``tox`` sur Appveyor, ekzistas kelkaj pliaj konsideroj (fakte tiaj "
"problemoj ne estas specifaj al Appveyor kaj povas ekzisti en aliaj sistemoj "
"de kontinua integrado)."

#: ../source/guides/supporting-windows-using-appveyor.rst:159
msgid ""
"By default, ``tox`` only passes a chosen subset of environment variables to "
"the test processes. Because ``distutils`` uses environment variables to "
"control the compiler, this \"test isolation\" feature will cause the tests "
"to use the wrong compiler by default."
msgstr ""
"Apriore ``tox`` nur liveras subaron da mediaj variablojn al la testo-"
"procezoj. Ĉar ``distutils`` uzas mediajn variablojn por regi la tradukilon, "
"tia «testo-izolanta» funkcio kaŭzos miselektadon de tradukilo en testo."

#: ../source/guides/supporting-windows-using-appveyor.rst:164
msgid ""
"To force ``tox`` to pass the necessary environment variables to the "
"subprocess, you need to set the ``tox`` configuration option ``passenv`` to "
"list the additional environment variables to be passed to the subprocess. "
"For the SDK compilers, you need"
msgstr ""
"Por devigi ``tox`` pasi la necesajn mediajn variablojn al subprocezo, oni "
"devas agordi la opcion ``passenv`` de ``tox`` inkluzivante la necesajn "
"mediajn variablojn liverotajn al subprocezo. Por la SDK-tradukilo, oni uzas "
"la jenon:"

#: ../source/guides/supporting-windows-using-appveyor.rst:169
msgid "``DISTUTILS_USE_SDK``"
msgstr "``DISTUTILS_USE_SDK``"

#: ../source/guides/supporting-windows-using-appveyor.rst:170
msgid "``MSSdk``"
msgstr "``MSSdk``"

#: ../source/guides/supporting-windows-using-appveyor.rst:171
msgid "``INCLUDE``"
msgstr "``INCLUDE``"

#: ../source/guides/supporting-windows-using-appveyor.rst:172
msgid "``LIB``"
msgstr "``LIB``"

#: ../source/guides/supporting-windows-using-appveyor.rst:174
msgid ""
"The ``passenv`` option can be set in your :file:`tox.ini`, or if you prefer "
"to avoid adding Windows-specific settings to your general project files, it "
"can be set by setting the ``TOX_TESTENV_PASSENV`` environment variable. The "
"supplied :file:`build.cmd` script does this by default whenever "
"``DISTUTILS_USE_SDK`` is set."
msgstr ""
"La opcio ``passenv`` estas agordebla en :file:`tox.ini`, aŭ (se oni preferas "
"ne inkluzivi Windows-specifajn agordojn en ĝeneralaj projektaj dosieroj) per "
"la media variablo ``TOX_TESTENV_PASSENV``. La provizita programeto :file:"
"`build.cmd` faras tion implicite, se ``DISTUTILS_USE_SDK`` ekzistas."

#: ../source/guides/supporting-windows-using-appveyor.rst:180
msgid ""
"When used interactively, ``tox`` allows you to run your tests against "
"multiple environments (often, this means multiple Python versions). This "
"feature is not as useful in a CI environment like Travis or Appveyor, where "
"all tests are run in isolated environments for each configuration. As a "
"result, projects often supply an argument ``-e ENVNAME`` to ``tox`` to "
"specify which environment to use (there are default environments for most "
"versions of Python)."
msgstr ""
"Dum interaga uzado, `` tokso`` ebligas ruli testojn en pluraj medioj (ofte, "
"inkluzive de pluraj versioj de Python). Tiu funkcio ne tre utilas en medio "
"de kontinua integrado kiel Travis aŭ Appveyor, je kio ĉiuj testoj ruliĝas en "
"izolita medio por ĉiu agordo. Tial, projekto ofte donas argumenton ``-e "
"MEDIO`` al ``tox`` por specifi la uzotan medion (ekzistas aprioraj medioj "
"por la plejparto de versioj de Python)."

#: ../source/guides/supporting-windows-using-appveyor.rst:187
msgid ""
"However, this does *not* work well with a Windows CI system like Appveyor, "
"where there are (for example) two installations of Python 3.4 (32-bit and 64-"
"bit) available, but only one ``py34`` environment in ``tox``."
msgstr ""
"Tamen, tio *ne* funkcias bone kun sistemo de kontinua integrado por Windows, "
"kiel ekzemple Appveyor, en kiu ekzistas du instaloj de Python 3.4 (32-bita "
"kaj 64-bita), sed nur unu medio ``py34`` en ``tox``."

#: ../source/guides/supporting-windows-using-appveyor.rst:191
msgid ""
"In order to run tests using ``tox``, therefore, projects should probably use "
"the default ``py`` environment in ``tox``, which uses the Python interpreter "
"that was used to run ``tox``. This will ensure that when Appveyor runs the "
"tests, they will be run with the configured interpreter."
msgstr ""
"Por ruli testojn per ``tox``, tial, projekto uzu la aprioran medion ``py`` "
"en ``tox``, kiu uzas la Python-interpretilon interpretantan ``tox``. Tio "
"certigas, ke kiam Appveyor rulos testojn, ilin interpretos la agordita "
"interpretilo."

#: ../source/guides/supporting-windows-using-appveyor.rst:196
msgid ""
"In order to support running under the ``py`` environment, it is possible "
"that projects with complex ``tox`` configurations might need to modify "
"their :file:`tox.ini` file. Doing so is, however, outside the scope of this "
"document."
msgstr ""
"Por subteni ruladon en la medio ``py``, projekto de komplika agordo por "
"``tox`` eble devas modifi la dosieron :file:`tox.ini`. Tio, tamen, estas "
"ekster la temo de ĉi tiu dokumento."

#: ../source/guides/supporting-windows-using-appveyor.rst:202
msgid "Automatically uploading wheels"
msgstr "Aŭtomate elŝuti wheel"

#: ../source/guides/supporting-windows-using-appveyor.rst:204
msgid ""
"It is possible to request Appveyor to automatically upload wheels. There is "
"a ``deployment`` step available in :file:`appveyor.yml` that can be used to "
"(for example) copy the built artifacts to a FTP site, or an Amazon S3 "
"instance. Documentation on how to do this is included in the Appveyor guides."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:209
msgid ""
"Alternatively, it would be possible to add a ``twine upload`` step to the "
"build.  The supplied :file:`appveyor.yml` does not do this, as it is not "
"clear that uploading new wheels after every commit is desirable (although "
"some projects may wish to do this)."
msgstr ""
"Alternative, oni povas aldoni paŝon ``twine upload`` al la konstruo.  La "
"donita dosiero :file:`appveyor.yml` ne faras tion, ĉar ne certas, ĉu oni "
"deziras alŝuti novan wheel post ĉiu enmeto (kvankam kelkaj projektoj fakte "
"deziras tion)."

#: ../source/guides/supporting-windows-using-appveyor.rst:215
msgid "External dependencies"
msgstr "Eksteraj dependecoj"

#: ../source/guides/supporting-windows-using-appveyor.rst:217
msgid ""
"The supplied scripts will successfully build any distribution that does not "
"rely on 3rd party external libraries for the build."
msgstr ""
"La donitaj programetoj sukcese konstruos ĉian ajn distribuon ne dependantan "
"de triapartia ekstera biblioteko por la konstruado."

#: ../source/guides/supporting-windows-using-appveyor.rst:220
msgid ""
"It is possible to add steps to the :file:`appveyor.yml` configuration "
"(typically in the \"install\" section) to download and/or build external "
"libraries needed by the distribution. And if needed, it is possible to add "
"extra configuration for the build to supply the location of these libraries "
"to the compiler. However, this level of configuration is beyond the scope of "
"this document."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:229
msgid "Support scripts"
msgstr "Helpaj programetoj"

#: ../source/guides/supporting-windows-using-appveyor.rst:231
msgid "For reference, the SDK setup support script is listed here:"
msgstr "Por referenco, jen la SDK-stariga helpa programeto:"

#: ../source/guides/supporting-windows-using-appveyor.rst:233
msgid "``appveyor-sample/build.cmd``"
msgstr "``appveyor-sample/build.cmd``"

#: ../source/guides/tool-recommendations.rst:5
msgid "Tool recommendations"
msgstr "Rekomendoj pri iloj"

#: ../source/guides/tool-recommendations.rst:7
msgid ""
"The Python packaging landscape consists of many different tools. For many "
"tasks, the :term:`Python Packaging Authority <Python Packaging Authority "
"(PyPA)>` (PyPA, the working group which encompasses many packaging tools and "
"maintains this guide) purposefully does not make a blanket recommendation; "
"for example, the reason there are many build backends is that the landscape "
"was opened up in order to enable the development of new backends serving "
"certain users' needs better than the previously unique backend, setuptools. "
"This guide does point to some tools that are widely recognized, and also "
"makes some recommendations of tools that you should *not* use because they "
"are deprecated or insecure."
msgstr ""
"La Python-pakada pejzaĝo konsistas el multaj diversaj iloj. Por multaj "
"taskoj, la :term:`Python-Pakada Aŭtoritato <Python Packaging Authority "
"(PyPA)>` (PyPA, la laborgrupo administranta multajn pakadajn ilojn kaj "
"mastrumas ĉi tiun gvidilon) intence ne faras ununuran rekomendon; ekzemple, "
"la kialo por pluraj konstruaj malfasadoj estas por malfermi la pejzaĝon, "
"ebligante la evoluadon de novaj malfasadoj por servi la bezonoj de kelkaj "
"uzantoj pli bone ol la unikinta malfasado setuptools. Ĉi tiu gvidilo ja "
"montras kelkajn ilojn vaste uzatajn kaj ankaŭ *mal*rekomendas kelkajn ilojn "
"evitindajn aŭ malsekurajn."

#: ../source/guides/tool-recommendations.rst:20
msgid "Virtual environments"
msgstr "Virtualaj medioj"

#: ../source/guides/tool-recommendations.rst:22
msgid ""
"The standard tools to create and use virtual environments manually are :ref:"
"`virtualenv` (PyPA project) and :doc:`venv <python:library/venv>` (part of "
"the Python standard library, though missing some features of virtualenv)."
msgstr ""
"La normaj iloj por krei kaj uzi virtualan medion malaŭtomate estas :ref:"
"`virtualenv` (projekto de PyPA) kaj :doc:`venv <python:library/venv>` (parto "
"de la norma biblioteko de Python, sed sen kelkaj funkcioj de virtualenv)."

#: ../source/guides/tool-recommendations.rst:28
msgid "Installing packages"
msgstr "Instali pakojn"

#: ../source/guides/tool-recommendations.rst:30
msgid ""
":ref:`Pip` is the standard tool to install packages from :term:`PyPI <Python "
"Package Index (PyPI)>`. You may want to read pip's recommendations for :doc:"
"`secure installs <pip:topics/secure-installs>`. Pip is available by default "
"in most Python installations through the standard library package :doc:"
"`ensurepip <python:library/ensurepip>`."
msgstr ""
":ref:`Pip` estas la norma ilo por instali pakojn el :term:`PyPI <Python "
"Package Index (PyPI)>`. Vi eble volas legi la rekomendojn de pip pri :doc:"
"`sekura instalado <pip:topics/secure-installs>`. Pip estas havebla apriore "
"en multaj instaloj de Python per la norma biblioteka pako :doc:`ensurepip "
"<python:library/ensurepip>`."

#: ../source/guides/tool-recommendations.rst:36
msgid ""
"Alternatively, consider :ref:`pipx` for the specific use case of installing "
"Python applications that are distributed through PyPI and run from the "
"command line. Pipx is a wrapper around pip and venv that installs each "
"application into a dedicated virtual environment. This avoids conflicts "
"between the dependencies of different applications, and also with system-"
"wide applications making use of the same Python interpreter (especially on "
"Linux)."
msgstr ""
"Alternative, konsideru :ref:`pipx` por la specifa uzkado de instalado de "
"Python-programo distribuata per PyPI kaj rulebla ĉe la komandlinio. Pipx "
"estas volvaĵo ĉirkaŭ pip kaj venv, kiu instalas programon en ĝian propran "
"virtualan medion. Tio avertas konfliktojn inter la dependecoj de diversaj "
"programoj kaj kun sistemaj programoj uzantaj la saman Python-interpretilon "
"(speciale sur Linux)."

#: ../source/guides/tool-recommendations.rst:43
msgid ""
"For scientific software specifically, consider :ref:`Conda` or :ref:`Spack`."
msgstr ""
"Por sciencaj programoj specife, konsideru :ref:`Conda` aŭ :ref:`Spack`."

#: ../source/guides/tool-recommendations.rst:45
msgid "Write a \"pip vs. Conda\" comparison, here or in a new discussion."
msgstr "Verki komparon inter pip kaj Conda, ĉi tie aŭ en nova diskuto."

#: ../source/guides/tool-recommendations.rst:47
msgid ""
"Do **not** use ``easy_install`` (part of :ref:`setuptools`), which is "
"deprecated in favor of pip (see :ref:`pip vs easy_install` for details). "
"Likewise, do **not** use ``python setup.py install`` or ``python setup.py "
"develop``, which are also deprecated (see :ref:`setup-py-deprecated` for "
"background and :ref:`modernize-setup-py-project` for migration advice)."
msgstr ""
"**Ne** uzu ``easy_install`` (parton de :ref:`setuptools`), kiun oni evitu, "
"preferante pip (vidu :ref:`pip kontraste al easy_install <pip vs "
"easy_install>` por detaloj). Simile, **ne** uzu ``python setup.py install`` "
"aŭ ``python setup.py develop``, kiuj estas ankaŭ evidintaj (vidu :ref:`setup-"
"py-deprecated` por fonaj informoj kaj :ref:`modernize-setup-py-project` por "
"konsiloj pri migrado)."

#: ../source/guides/tool-recommendations.rst:55
msgid "Lock files"
msgstr "Serurdosieroj"

#: ../source/guides/tool-recommendations.rst:57
msgid ""
":ref:`pip-tools` and :ref:`Pipenv` are two recognized tools to create lock "
"files, which contain the exact versions of all packages installed into an "
"environment, for reproducibility purposes."
msgstr ""
":ref:`pip-tools` kaj :ref:`Pipenv` estas du konataj iloj por krei "
"serurdosierojn, enhavantajn la ekzaktajn versiojn de ĉiuj pakoj instalitaj "
"en medion por reproduktebleco."

#: ../source/guides/tool-recommendations.rst:63
msgid "Build backends"
msgstr "Konstruaj malfasadoj"

#: ../source/guides/tool-recommendations.rst:67
msgid ""
"Please, remember: this document does not seek to steer the reader towards a "
"particular tool, only to enumerate common tools. Different use cases often "
"need specialized workflows."
msgstr ""
"Bonvolu konscii, ke ĉi tiu dokumento ne celas direkti la leganton al iu ilo; "
"ĝi nur celas listigi oftajn ilojn. Diversaj uzkazoj ofte bezonas specialajn "
"laborfluojn."

#: ../source/guides/tool-recommendations.rst:71
msgid ""
"Popular :term:`build backends <build backend>` for pure-Python packages "
"include, in alphabetical order:"
msgstr ""
"Jen popularaj :term:`konstruaj malfasadoj <build backend>` por pure Python-"
"aj pakoj, en alfabeta ordo:"

#: ../source/guides/tool-recommendations.rst:74
msgid ""
":doc:`Flit-core <flit:pyproject_toml>` -- developed with but separate from :"
"ref:`Flit`. A minimal and opinionated build backend. It does not support "
"plugins."
msgstr ""
":doc:`Flit-core <flit:pyproject_toml>` – evoluigata kun sed aparte de :ref:"
"`Flit`. Minimuma kaj opinihava konstrua malfasado. Ĝi ne subtenas "
"kromprogramon."

#: ../source/guides/tool-recommendations.rst:77
msgid ""
"Hatchling_ -- developed with but separate from :ref:`Hatch`. Supports "
"plugins."
msgstr ""
"Hatchling_ – evoluigata kun sed aparte de :ref:`Hatch`. Subtenas "
"kromprogramojn."

#: ../source/guides/tool-recommendations.rst:79
msgid ""
"PDM-backend_ -- developed with but separate from :ref:`PDM`. Supports "
"plugins."
msgstr ""
"PDM-backend_ – evoluigata kun sed aparte de :ref:`PDM`. Subtenas "
"kromprogramojn."

#: ../source/guides/tool-recommendations.rst:81
msgid ""
"Poetry-core_ -- developed with but separate from :ref:`Poetry`. Supports "
"plugins."
msgstr ""
"Poetry-core – evoluigata kun sed aparte de :ref:`Poetry`. Subtenas "
"kromprogramojn."

#: ../source/guides/tool-recommendations.rst:84
msgid ""
"Unlike other backends on this list, Poetry-core does not support the "
"standard :ref:`[project] table <writing-pyproject-toml>` (it uses a "
"different format, in the ``[tool.poetry]`` table)."
msgstr ""
"Malkiel aliaj malfasadoj en ĉi tiu listo, Poetry-core ne subtenas la norman :"
"ref:`tabelon [project] <writing-pyproject-toml>` (ĝi uzas alian formon, en "
"la tabelo ``[tool.poetry]``)."

#: ../source/guides/tool-recommendations.rst:88
msgid ""
":ref:`setuptools`, which used to be the only build backend. Supports plugins."
msgstr ""
":ref:`setuptools`, kiu iam estis la ununura konstrua malfasado. Subtenas "
"kromprogramojn."

#: ../source/guides/tool-recommendations.rst:92
msgid ""
"If you use setuptools, please be aware that some features that predate "
"standardisation efforts are now deprecated and only *temporarily kept* for "
"compatibility."
msgstr ""
"Se vi uzas setuptools, atentu, ke kelkaj funkcioj estiĝintaj antaŭ normigado "
"estas nun evitindaj kaj nur *provizore ekzistantaj* pro kongrueco."

#: ../source/guides/tool-recommendations.rst:96
msgid ""
"In particular, do **not** use direct ``python setup.py`` invocations. On the "
"other hand, configuring setuptools with a :file:`setup.py` file is still "
"fully supported, although it is recommended to use the modern :ref:"
"`[project] table in pyproject.toml <writing-pyproject-toml>` (or :file:"
"`setup.cfg`) whenever possible and keep :file:`setup.py` only if "
"programmatic configuration is needed. See :ref:`setup-py-deprecated`."
msgstr ""
"Specife, **ne** rekte uzu ``python setup.py``. Tamen, agordi setuptools per "
"dosiero :file:`setup.py` estas ankoraŭ plene subtenate, kvankam estas "
"rekomendate uzi la modernan :ref:`tabelon [project] en pyproject.toml "
"<writing-pyproject-toml>` (aŭ :file:`setup.cfg`) tiam ajn, kiam tio eblas, "
"kaj uzi :file:`setup.py` nur se oni bezonas programan agordadon. Vidu :ref:"
"`setup-py-deprecated`."

#: ../source/guides/tool-recommendations.rst:103
msgid ""
"Other examples of deprecated features you should **not** use include the "
"``setup_requires`` argument to ``setup()`` (use the :ref:`[build-system] "
"table <pyproject-guide-build-system-table>` in :file:`pyproject.toml` "
"instead), and the ``easy_install`` command (cf. :ref:`pip vs easy_install`)."
msgstr ""
"Jen aliaj evitindaj trajtoj, kiujn oni **ne** uzu: la argumento "
"``setup_requires`` de ``setup()`` (anstataŭe uzu :ref:`la tabelon [build-"
"system] <pyproject-guide-build-system-table>` en :file:`pyproject.toml`), "
"kaj la komando ``easy_install`` (vidu :ref:`pip vs easy_install`)."

#: ../source/guides/tool-recommendations.rst:108
msgid ""
"Do **not** use :ref:`distutils`, which is deprecated, and has been removed "
"from the standard library in Python 3.12, although it still remains "
"available from setuptools."
msgstr ""
"**Ne** uzu :ref:`distutils`, kiu estas evitinda kaj forigita el la norma "
"biblioteko en Python 3.12, kvankam ĝi estas ankoraŭ disponebla per "
"setuptools."

#: ../source/guides/tool-recommendations.rst:112
msgid ""
"For packages with :term:`extension modules <extension module>`, it is best "
"to use a build system with dedicated support for the language the extension "
"is written in, for example:"
msgstr ""
"Por pako kun :term:`etendaĵa modulo <extension module>`, oni uzu "
"konstrusistemon subtenantan la lingvon de la etendaĵo. Ekzemple:"

#: ../source/guides/tool-recommendations.rst:116
msgid ""
":ref:`setuptools` -- natively supports C and C++ (with third-party plugins "
"for Go and Rust),"
msgstr ""
":ref:`setuptools` -- indiĝene subtenas C kaj C++ (kun triapartiaj kromaĵoj "
"por Go kaj Rust),"

#: ../source/guides/tool-recommendations.rst:117
msgid ""
":ref:`meson-python` -- C, C++, Fortran, Rust, and other languages supported "
"by Meson,"
msgstr ""
":ref:`meson-python` -- C, C++, Fortrano, Rust, kaj aliaj lingvoj subtenataj "
"de Meson,"

#: ../source/guides/tool-recommendations.rst:118
msgid ""
":ref:`scikit-build-core` -- C, C++, Fortran, and other languages supported "
"by CMake,"
msgstr ""
":ref:`scikit-build-core` -- C, C++, Fortrano, kaj aliaj lingvoj subtenataj "
"de CMake,"

#: ../source/guides/tool-recommendations.rst:119
msgid ":ref:`maturin` -- Rust, via Cargo."
msgstr ":ref:`maturin` -- Rust, per Cargo."

#: ../source/guides/tool-recommendations.rst:123
msgid "Building distributions"
msgstr "Konstrui distribuojn"

#: ../source/guides/tool-recommendations.rst:125
msgid ""
"The standard tool to build :term:`source distributions <source distribution "
"(or \"sdist\")>` and :term:`wheels <wheel>` for uploading to PyPI is :ref:"
"`build`.  It will invoke whichever build backend you :ref:`declared "
"<pyproject-guide-build-system-table>` in :file:`pyproject.toml`."
msgstr ""
"La norma ilo por konstrui :term:`fontan distribuon <source distribution (or "
"\"sdist\")>` kaj :term:`wheel <wheel>` alŝuteblajn al PyPI estas :ref:"
"`build`.  Ĝi rulas la malfasadon :ref:`deklaritan <pyproject-guide-build-"
"system-table>` en :file:`pyproject.toml`."

#: ../source/guides/tool-recommendations.rst:130
msgid ""
"Do **not** use ``python setup.py sdist`` and ``python setup.py bdist_wheel`` "
"for this task. All direct invocations of :file:`setup.py` are :ref:"
"`deprecated <setup-py-deprecated>`."
msgstr ""
"**Ne** uzu ``python setup.py sdist`` nek ``python setup.py bdist_wheel`` por "
"tiu tasko. Ĉia rekta alvoko de :file:`setup.py` estas :ref:`evitinda <setup-"
"py-deprecated>`."

#: ../source/guides/tool-recommendations.rst:134
msgid ""
"If you have :term:`extension modules <extension module>` and want to "
"distribute wheels for multiple platforms, use :ref:`cibuildwheel` as part of "
"your CI setup to build distributable wheels."
msgstr ""
"Se vi havas :term:`etendaĵan modulo <extension module>` kaj volas distribui "
"wheel-ojn por pluraj platformoj, uzu :ref:`cibuildwheel` kiel parton de via "
"kontinua integrado por konstrui distribueblajn wheel-ojn."

#: ../source/guides/tool-recommendations.rst:140
msgid "Uploading to PyPI"
msgstr "Alŝuti al PyPI"

#: ../source/guides/tool-recommendations.rst:142
msgid ""
"For projects hosted on or published via supported CI/CD platforms, it is "
"recommended to use the :ref:`Trusted Publishing <trusted-publishing>`, which "
"allows the package to be securely uploaded to PyPI from a CI/CD workflow "
"without a manually configured API token."
msgstr ""

#: ../source/guides/tool-recommendations.rst:147
msgid ""
"As of November 2024, PyPI supports the following platforms as Trusted "
"Publishing providers:"
msgstr ""
"Je la Novembro de 2024, PyPI subtenas la jenajn platformojn kiel "
"provizantojn de Fidata Eldonado:"

#: ../source/guides/tool-recommendations.rst:150
msgid "GitHub Actions (on ``https://github.com``)"
msgstr "GitHub Actions (ĉe ``https://github.com``)"

#: ../source/guides/tool-recommendations.rst:151
msgid "GitLab CI/CD (on ``https://gitlab.com``)"
msgstr "GitLab CI/CD (ĉe ``https://gitlab.com``)"

#: ../source/guides/tool-recommendations.rst:152
msgid "ActiveState"
msgstr "ActiveState"

#: ../source/guides/tool-recommendations.rst:153
msgid "Google Cloud"
msgstr "Google Cloud"

#: ../source/guides/tool-recommendations.rst:155
msgid ""
"The other available method is to upload the package manually using :ref:"
"`twine`."
msgstr ""
"La alia havebla metodo estas alŝuti la pakon malaŭtomate per :ref:`twine`."

#: ../source/guides/tool-recommendations.rst:159
msgid ""
"**Never** use ``python setup.py upload`` for this task. In addition to "
"being :ref:`deprecated <setup-py-deprecated>`, it is insecure."
msgstr ""
"**Neniam** uzu ``python setup.py upload`` por tiu tasko. Ĝi estas :ref:"
"`evitinda <setup-py-deprecated>` kaj malseksura."

#: ../source/guides/tool-recommendations.rst:164
msgid "Workflow tools"
msgstr "Laborfluiloj"

#: ../source/guides/tool-recommendations.rst:166
msgid ""
"These tools are environment managers that automatically manage virtual "
"environments for a project. They also act as \"task runners\", allowing you "
"to define and invoke tasks such as running tests, compiling documentation, "
"regenerating some files, etc. Some of them provide shortcuts for building "
"distributions and uploading to PyPI, and some support lock files for "
"applications. They often call the tools mentioned above under the hood. In "
"alphabetical order:"
msgstr ""

#: ../source/guides/tool-recommendations.rst:174
msgid ":ref:`Flit`,"
msgstr ":ref:`Flit`,"

#: ../source/guides/tool-recommendations.rst:175
msgid ":ref:`Hatch`,"
msgstr ":ref:`Hatch`,"

#: ../source/guides/tool-recommendations.rst:176
msgid ":doc:`nox <nox:index>`,"
msgstr ":doc:`nox <nox:index>`,"

#: ../source/guides/tool-recommendations.rst:177
msgid ":ref:`PDM`,"
msgstr ":ref:`PDM`,"

#: ../source/guides/tool-recommendations.rst:178
msgid ":ref:`Pipenv`,"
msgstr ":ref:`Pipenv`,"

#: ../source/guides/tool-recommendations.rst:179
msgid ":ref:`Poetry`,"
msgstr ":ref:`Poetry`,"

#: ../source/guides/tool-recommendations.rst:180
msgid ":doc:`tox <tox:index>`."
msgstr ":doc:`tox <tox:index>`."

#: ../source/guides/using-manifest-in.rst:5
msgid "Including files in source distributions with ``MANIFEST.in``"
msgstr "Inkluzivi dosierojn en fontajn distribuojn per ``MANIFEST.in``"

#: ../source/guides/using-manifest-in.rst:7
msgid ""
"The information on this page has moved to :doc:`setuptools:userguide/"
"miscellaneous` in the setuptools documentation."
msgstr ""
"La informoj sur ĉi tiu paĝo moviĝis al :doc:`setuptools:userguide/"
"miscellaneous` en la dokumentaro de setuptools."

#: ../source/guides/using-testpypi.rst:7
msgid ""
"``TestPyPI`` is a separate instance of the :term:`Python Package Index "
"(PyPI)` that allows you to try out the distribution tools and process "
"without worrying about affecting the real index. TestPyPI is hosted at `test."
"pypi.org <https://test.pypi.org>`_"
msgstr ""
"Prova PyPI estasa aparta servilo de la :term:`Python-Pakindekso <Python "
"Package Index (PyPI)>` permesanta al vi elprovi la distribuadajn ilojn kaj "
"procezojn sen perturbado de la reala indekso. Prova PyPI troviĝas ĉe `test."
"pypi.org <https://test.pypi.org>`_"

#: ../source/guides/using-testpypi.rst:13
msgid "Registering your account"
msgstr "Registri vian konton"

#: ../source/guides/using-testpypi.rst:15
msgid ""
"Because TestPyPI has a separate database from the live PyPI, you'll need a "
"separate user account specifically for TestPyPI. Go to https://test.pypi.org/"
"account/register/ to register your account."
msgstr ""
"Ĉar Prova PyPI havas datenbankon apartan de la vera PyPI, oni bezonas "
"apartan konton specifan por Prova PyPI. Iru al https://test.pypi.org/account/"
"register/ por registri vin mem."

#: ../source/guides/using-testpypi.rst:19
msgid ""
"The database for TestPyPI may be periodically pruned, so it is not unusual "
"for user accounts to be deleted."
msgstr ""
"La datenbanko de la Prova PyPI estas periode reduktata; tial, konto de "
"uzanto ofte estas forigita."

#: ../source/guides/using-testpypi.rst:24
msgid "Using TestPyPI with Twine"
msgstr "Uzi TestPyPI kun Twine"

#: ../source/guides/using-testpypi.rst:26
msgid ""
"You can upload your distributions to TestPyPI using :ref:`twine` by "
"specifying the ``--repository`` flag:"
msgstr ""
"Vi povas alŝuti viajn distribuojn al Prova PyPI per :ref:`twine` uzante la "
"flagon ``--repository``:"

#: ../source/guides/using-testpypi.rst:33
msgid ""
"You can see if your package has successfully uploaded by navigating to the "
"URL ``https://test.pypi.org/project/<sampleproject>`` where "
"``sampleproject`` is the name of your project that you uploaded. It may take "
"a minute or two for your project to appear on the site."
msgstr ""
"Vi povas kontroli, ĉu via pako estis sukcese alŝutita, vizitante la "
"retadreson ``https://test.pypi.org/project/<viaprojekto>``, en kiu "
"``<viaprojekto>`` estas la nomo de via alŝutita projekto. Eblas, ke vi devas "
"atendi unu aŭ du minutojn."

#: ../source/guides/using-testpypi.rst:39
msgid "Using TestPyPI with pip"
msgstr "Uzi TestPyPI kun pip"

#: ../source/guides/using-testpypi.rst:41
msgid ""
"You can tell :ref:`pip` to download packages from TestPyPI instead of PyPI "
"by specifying the ``--index-url`` flag:"
msgstr ""
"Vi povas igi :ref:`pip` elŝuti pakojn el Prova PyPI anstataŭ PyPI per la "
"flago ``--index-url``:"

#: ../source/guides/using-testpypi.rst:56
msgid ""
"If you want to allow pip to also download packages from PyPI, you can "
"specify ``--extra-index-url`` to point to PyPI. This is useful when the "
"package you're testing has dependencies:"
msgstr ""
"Se oni volas permesi al pip elŝuti pakojn el PyPI, oni specifas ``--extra-"
"index-url`` por montri PyPI. Tio utilas, se la testata pako havas "
"dependecojn:"

#: ../source/guides/using-testpypi.rst:73
msgid "Setting up TestPyPI in :file:`.pypirc`"
msgstr "Agordi TestPyPI en :file:`.pypirc`"

#: ../source/guides/using-testpypi.rst:75
msgid ""
"If you want to avoid being prompted for your username and password every "
"time, you can configure TestPyPI in your :file:`$HOME/.pypirc`:"
msgstr ""
"Se vi volas eviti ĉiufoje tajpi viajn salutnomon kaj pasvorton, vi povas "
"agordi Provan PyPI en via :file:`$HOME/.pypirc`:"

#: ../source/guides/writing-pyproject-toml.rst:5
msgid "Writing your ``pyproject.toml``"
msgstr "Verki vian ``pyproject.toml``"

#: ../source/guides/writing-pyproject-toml.rst:7
msgid ""
"``pyproject.toml`` is a configuration file used by packaging tools, as well "
"as other tools such as linters, type checkers, etc. There are three possible "
"TOML tables in this file."
msgstr ""
"``pyproject.toml`` estas agorda dosiero uzata de iloj pri pakado kaj aliaj "
"iloj kiel sintakskontroliloj, tipkontroliloj ktp. Ekzistas tri eblaj TOML-"
"tabeloj en tiu dosiero."

#: ../source/guides/writing-pyproject-toml.rst:11
msgid ""
"The ``[build-system]`` table is **strongly recommended**. It allows you to "
"declare which :term:`build backend` you use and which other dependencies are "
"needed to build your project."
msgstr ""
"La tabelo ``[build-system]`` estas **rekomendegata**. Ĝi permesas deklari "
"la :term:`konstruan malfasadon <build backend>` uzotan kaj la dependecojn "
"necesajn por konstrui la projekton."

#: ../source/guides/writing-pyproject-toml.rst:15
msgid ""
"The ``[project]`` table is the format that most build backends use to "
"specify your project's basic metadata, such as the dependencies, your name, "
"etc."
msgstr ""
"La tabelo ``[project]`` estas la formo uzata de multaj konstruaj malfasadoj "
"por specifi la bazajn metadatenojn de la projekto, kiel la dependecojn, vian "
"nomon ktp."

#: ../source/guides/writing-pyproject-toml.rst:18
msgid ""
"The ``[tool]`` table has tool-specific subtables, e.g., ``[tool.hatch]``, "
"``[tool.black]``, ``[tool.mypy]``. We only touch upon this table here "
"because its contents are defined by each tool. Consult the particular tool's "
"documentation to know what it can contain."
msgstr ""
"La ilo ``[tool]`` havas ilo-specifajn subtabelojn kiel ``[tool.hatch]``, "
"``[tool.black]``, ``[tool.mypy]``. Ni nur mencias tiun tabelon, ĉar ĝiajn "
"enhavojn difinas iloj. Legu la dokumentaron de iu ilo por la enhavo de la "
"subtabelo."

#: ../source/guides/writing-pyproject-toml.rst:25
msgid ""
"The ``[build-system]`` table should always be present, regardless of which "
"build backend you use (``[build-system]`` *defines* the build tool you use)."
msgstr ""
"La tabelo ``[build-system]`` ĉiam ĉeestu, por ĉia konstrua malfasado "
"(``[build-system]`` *difinas* la konstruilon uzatan)."

#: ../source/guides/writing-pyproject-toml.rst:29
msgid ""
"On the other hand, the ``[project]`` table is understood by *most* build "
"backends, but some build backends use a different format."
msgstr ""
"Aliflanke, la tabelo ``[project]`` estas konata de la *plejparto* de "
"konstruaj malfasadoj, sed kelkaj konstruaj malfasadoj uzas aliajn formojn."

#: ../source/guides/writing-pyproject-toml.rst:32
msgid ""
"A notable exception is Poetry_, which before version 2.0 (released January "
"5, 2025) did not use the ``[project]`` table, it used the ``[tool.poetry]`` "
"table instead. With version 2.0, it supports both. Also, the setuptools_ "
"build backend supports both the ``[project]`` table, and the older format in "
"``setup.cfg`` or ``setup.py``."
msgstr ""
"Notinda escepto estas Poetry_, kiu antaŭ versio 2.0 (eldonita je la 5a de "
"Januaro 2025) ne uzis la tabelon ``[project]``. Anstataŭe ĝi uzis la tabelon "
"``[tool.poetry]``. Ekde versio 2.0, ĝi subtenas ambaŭ. Ankaŭ la konstrua "
"malfasado setuptools_ subtenas kaj la tabelon ``[project]`` kaj la malnovan "
"formon en ``setup.cfg`` aŭ ``setup.py``."

#: ../source/guides/writing-pyproject-toml.rst:38
msgid ""
"For new projects, use the ``[project]`` table, and keep ``setup.py`` only if "
"some programmatic configuration is needed (such as building C extensions), "
"but the ``setup.cfg`` and ``setup.py`` formats are still valid. See :ref:"
"`setup-py-deprecated`."
msgstr ""
"Por niva projekto, uzu la tabelo ``[project]``. Uzu ``setup.py`` nur se ia "
"programa agornado necesas (ekz. por konstrui C-etendaĵon). Tamen, la formoj "
"``setup.cfg`` kaj ``setup.py`` ankoraŭ validas. Vidu :ref:`setup-py-"
"deprecated`."

#: ../source/guides/writing-pyproject-toml.rst:47
msgid "Declaring the build backend"
msgstr "Deklari la konstruan malfasadon"

#: ../source/guides/writing-pyproject-toml.rst:49
msgid ""
"The ``[build-system]`` table contains a ``build-backend`` key, which "
"specifies the build backend to be used. It also contains a ``requires`` key, "
"which is a list of dependencies needed to build the project -- this is "
"typically just the build backend package, but it may also contain additional "
"dependencies. You can also constrain the versions, e.g., ``requires = "
"[\"setuptools >= 61.0\"]``."
msgstr ""
"La tabelo ``[build-system]`` enhavas ŝlosilon ``build-backend`` specifantan "
"la uzotan konstruan malfasadon. Ĝi ankaŭ enhavas ŝlosilon ``requires`` "
"listigantan dependecojn por konstrui la projekton – tio estas tipe nur la "
"pako de la konstrua malfasado,sed ĝi povas enhavi aliajn dependecojn. Vi "
"povas ankaŭ limigi la versiojn, ekzemple ``requires = [\"setuptools >= "
"61.0\"]``."

#: ../source/guides/writing-pyproject-toml.rst:55
msgid ""
"Usually, you'll just copy what your build backend's documentation suggests "
"(after :ref:`choosing your build backend <choosing-build-backend>`). Here "
"are the values for some common build backends:"
msgstr ""
"Ordinare oni simple kopias la sugestojn de la dokumentaro de la konstrua "
"malfasado (post after :ref:`elekto de la konstrua malfasado <choosing-build-"
"backend>`). Jen la valoroj por oftaj konstruaj malfasadoj:"

#: ../source/guides/writing-pyproject-toml.rst:63
msgid "Static vs. dynamic metadata"
msgstr "Statikaj kaj dinamikaj metadatenoj"

#: ../source/guides/writing-pyproject-toml.rst:65
msgid "The rest of this guide is devoted to the ``[project]`` table."
msgstr "La resto de ĉi tiu gvidilo temas pri la tabelo ``[project]``."

#: ../source/guides/writing-pyproject-toml.rst:67
msgid ""
"Most of the time, you will directly write the value of a ``[project]`` "
"field. For example: ``requires-python = \">= 3.8\"``, or ``version = "
"\"1.0\"``."
msgstr ""
"Plejparte, vi rekte skribas la valoron de kampo ``[project]``. Ekzemple: "
"``requires-python = \">= 3.8\"``, aŭ ``version = \"1.0\"``."

#: ../source/guides/writing-pyproject-toml.rst:71
msgid ""
"However, in some cases, it is useful to let your build backend compute the "
"metadata for you. For example: many build backends can read the version from "
"a ``__version__`` attribute in your code, a Git tag, or similar. In such "
"cases, you should mark the field as dynamic using, e.g.,"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:82
msgid ""
"When a field is dynamic, it is the build backend's responsibility to fill "
"it.  Consult your build backend's documentation to learn how it does it."
msgstr ""
"La konstrua malfasado respondecas por plenigi dinamikajn kampojn.  Vidu la "
"dokumentaron de via konstrua malfasado por la preciza maniero de plenigado."

#: ../source/guides/writing-pyproject-toml.rst:88
msgid "Basic information"
msgstr "Bazaj informoj"

#: ../source/guides/writing-pyproject-toml.rst:93
#: ../source/specifications/pyproject-toml.rst:120
#: ../source/specifications/pyproject-toml.rst:143
#: ../source/specifications/pyproject-toml.rst:155
msgid "``name``"
msgstr "``name``"

#: ../source/guides/writing-pyproject-toml.rst:95
msgid ""
"Put the name of your project on PyPI. This field is required and is the only "
"field that cannot be marked as dynamic."
msgstr ""
"Uzu la nomon de via projekto ĉe PyPI. Ĉi tiu kampo estas necesa kaj estas la "
"ununura kampo ne markebla kiel dinamika."

#: ../source/guides/writing-pyproject-toml.rst:103
msgid ""
"The project name must consist of ASCII letters, digits, underscores "
"\"``_``\", hyphens \"``-``\" and periods \"``.``\". It must not start or end "
"with an underscore, hyphen or period."
msgstr ""
"La projekta nomo devas konsisti el Askiaj literoj, ciferoj, substrekoj "
"«``_``», streketoj «``-``» kaj punktoj «``.``». Ĝi devas ne komenciĝi nek "
"finiĝi per substreko, streketo aŭ punkto."

#: ../source/guides/writing-pyproject-toml.rst:107
msgid ""
"Comparison of project names is case insensitive and treats arbitrarily long "
"runs of underscores, hyphens, and/or periods as equal.  For example, if you "
"register a project named ``cool-stuff``, users will be able to download it "
"or declare a dependency on it using any of the following spellings: ``Cool-"
"Stuff``, ``cool.stuff``, ``COOL_STUFF``, ``CoOl__-.-__sTuFF``."
msgstr ""
"Komparo de projektaj nomoj estas usklecblinda kaj ne distingas inter ajna "
"nombro da substrekoj, streketoj kaj/aŭ punktoj.  Ekzemple, se vi registrus "
"projekton nomitan ``bonaj-ajhoj``, oni povus elŝuti ĝin aŭ deklari "
"dependecon sur ĝi per la jenaj nomoj: ``Bonaj-Ajhoj``, ``bonaj.ajhoj``, "
"``BONAJ_AJHOJ``, ``BoNaJ__-.-__aJhOJ``."

#: ../source/guides/writing-pyproject-toml.rst:115
#: ../source/specifications/pyproject-toml.rst:125
#: ../source/specifications/pyproject-toml.rst:149
#: ../source/specifications/pyproject-toml.rst:170
msgid "``version``"
msgstr "``version``"

#: ../source/guides/writing-pyproject-toml.rst:117
msgid "Put the version of your project."
msgstr "Enmetu la version de via projekto."

#: ../source/guides/writing-pyproject-toml.rst:124
msgid ""
"Some more complicated version specifiers like ``2020.0.0a1`` (for an alpha "
"release) are possible; see the :ref:`specification <version-specifiers>` for "
"full details."
msgstr ""
"Eblas pli komplika versio-specifilo kiel ``2020.0.0a1`` (por alfa-eldono); "
"vidu la :ref:`specifon <version-specifiers>` por plenaj detaloj."

#: ../source/guides/writing-pyproject-toml.rst:128
msgid "This field is required, although it is often marked as dynamic using"
msgstr "Ĉi tiu kampo estas deviga, sed ĝi estas ofte markita dinamika per"

#: ../source/guides/writing-pyproject-toml.rst:135
msgid ""
"This allows use cases such as filling the version from a ``__version__`` "
"attribute or a Git tag. Consult the :ref:`single-source-version` discussion "
"for more details."
msgstr ""
"Tio permesas uzkazon kiel generadon de version el atributo ``__version__`` "
"aŭ etikedo ĉe Git. Vidu la diskuton :ref:`single-source-version` por pliaj "
"detaloj."

#: ../source/guides/writing-pyproject-toml.rst:141
msgid "Dependencies and requirements"
msgstr "Dependecoj kaj postuloj"

#: ../source/guides/writing-pyproject-toml.rst:144
#: ../source/specifications/pyproject-toml.rst:443
msgid "``dependencies``/``optional-dependencies``"
msgstr "``dependencies``/``optional-dependencies``"

#: ../source/guides/writing-pyproject-toml.rst:146
msgid "If your project has dependencies, list them like this:"
msgstr "Se via projekto havas dependecojn, listigu ilin jene:"

#: ../source/guides/writing-pyproject-toml.rst:158
msgid ""
"See :ref:`Dependency specifiers <dependency-specifiers>` for the full syntax "
"you can use to constrain versions."
msgstr ""
"Vidu :ref:`Dependeco-specifilojn <dependency-specifiers>` por la plena "
"sintakso por limigi versiojn."

#: ../source/guides/writing-pyproject-toml.rst:161
msgid ""
"You may want to make some of your dependencies optional, if they are only "
"needed for a specific feature of your package. In that case, put them in "
"``optional-dependencies``."
msgstr ""
"Oni eble volas laŭvoligi kelkajn dependecojn, se ili nur necesas por specifa "
"funkcio de la pako. Tiukaze, metu ilin en ``optional-dependencies``."

#: ../source/guides/writing-pyproject-toml.rst:174
msgid ""
"Each of the keys defines a \"packaging extra\". In the example above, one "
"could use, e.g., ``pip install your-project-name[gui]`` to install your "
"project with GUI support, adding the PyQt5 dependency."
msgstr ""
"Ĉiu ŝlosilo difinas «pakan ekstraĵon». En la ĉi-supra ekzemplo, oni povus "
"uzi ekzemploe ``pip install nomo-de-via-projekto[gui]`` por instali vian "
"projekton kun subteno por grafika fasado, aldonante dependecon sur PyQt5."

#: ../source/guides/writing-pyproject-toml.rst:183
#: ../source/specifications/pylock-toml.rst:95
#: ../source/specifications/pyproject-toml.rst:146
#: ../source/specifications/pyproject-toml.rst:239
msgid "``requires-python``"
msgstr "``requires-python``"

#: ../source/guides/writing-pyproject-toml.rst:185
msgid ""
"This lets you declare the minimum version of Python that you support "
"[#requires-python-upper-bounds]_."
msgstr ""
"Tio ebligas deklari la minimuman version de Python subtenatan [#requires-"
"python-upper-bounds]_."

#: ../source/guides/writing-pyproject-toml.rst:197
msgid "Creating executable scripts"
msgstr "Krei ruleblajn komandojn"

#: ../source/guides/writing-pyproject-toml.rst:199
msgid ""
"To install a command as part of your package, declare it in the ``[project."
"scripts]`` table."
msgstr ""
"Por instali komandon kiel parton de via pako, deklaru ĝin en la tabelo "
"``[project.scripts]]``."

#: ../source/guides/writing-pyproject-toml.rst:207
msgid ""
"In this example, after installing your project, a ``spam-cli`` command will "
"be available. Executing this command will do the equivalent of ``import sys; "
"from spam import main_cli; sys.exit(main_cli())``."
msgstr ""
"En ĉi tiu ekzemplo, instalado de la projekto disponigos la komandon ``spam-"
"cli``. Rulado de tiu komando ekvivalentas ``import sys; from spam import "
"main_cli; sys.exit(main_cli())``."

#: ../source/guides/writing-pyproject-toml.rst:211
msgid ""
"On Windows, scripts packaged this way need a terminal, so if you launch them "
"from within a graphical application, they will make a terminal pop up. To "
"prevent this from happening, use the ``[project.gui-scripts]`` table instead "
"of ``[project.scripts]``."
msgstr ""
"Sur Windows, programeto tiel pakita bezonus terminalon; tial, se oni lanĉus "
"ĝin el grafika programo, terminalo ŝprucus. Por malhelpi tion, uzu la "
"tabelon ``[project.gui-scripts]`` anstataŭ ``[project.scripts]``."

#: ../source/guides/writing-pyproject-toml.rst:221
msgid ""
"In that case, launching your script from the command line will give back "
"control immediately, leaving the script to run in the background."
msgstr ""
"Tiukaze, lanĉado de via programo el la komandlinio tuj redonos regpovon al "
"vi, lastante la programon ruliĝi malfone."

#: ../source/guides/writing-pyproject-toml.rst:224
msgid ""
"The difference between ``[project.scripts]`` and ``[project.gui-scripts]`` "
"is only relevant on Windows."
msgstr ""
"La diferenco inter ``[project.scripts]`` kaj ``[project.gui-scripts]`` nur "
"gravas sur Windows."

#: ../source/guides/writing-pyproject-toml.rst:230
msgid "About your project"
msgstr "Pri via projekto"

#: ../source/guides/writing-pyproject-toml.rst:233
#: ../source/specifications/pyproject-toml.rst:320
msgid "``authors``/``maintainers``"
msgstr "``authors``/``maintainers``"

#: ../source/guides/writing-pyproject-toml.rst:235
msgid ""
"Both of these fields contain lists of people identified by a name and/or an "
"email address."
msgstr ""
"Ambaŭ tiuj kampoj enhavas listojn de homoj identigitaj per nomoj kaj/aŭ "
"retpoŝtaj adresoj."

#: ../source/guides/writing-pyproject-toml.rst:255
#: ../source/specifications/pyproject-toml.rst:135
#: ../source/specifications/pyproject-toml.rst:185
msgid "``description``"
msgstr "``description``"

#: ../source/guides/writing-pyproject-toml.rst:257
msgid ""
"This should be a one-line description of your project, to show as the "
"\"headline\" of your project page on PyPI (`example <pypi-pip_>`_), and "
"other places such as lists of search results (`example <pypi-search-pip_>`_)."
msgstr ""
"Tio estu unulinia priskribo de via projekto montrota kiel ka titolo de via "
"projekta paĝo ĉe PyPI (`jene <pypi-pip_>`_), kaj interalie en listoj de "
"serĉrezultoj (`jene <pypi-search-pip_>`_)."

#: ../source/guides/writing-pyproject-toml.rst:268
#: ../source/specifications/pyproject-toml.rst:145
#: ../source/specifications/pyproject-toml.rst:198
msgid "``readme``"
msgstr "``readme``"

#: ../source/guides/writing-pyproject-toml.rst:270
msgid ""
"This is a longer description of your project, to display on your project "
"page on PyPI. Typically, your project will have a ``README.md`` or ``README."
"rst`` file and you just put its file name here."
msgstr ""
"Tiu estas longa priskribo de via projekto montrota sur la projekta paĝo ĉe "
"PyPI. Ofte, oni simple metas la dosiernomon de dosiero ``README.md`` aŭ "
"``README.rst``."

#: ../source/guides/writing-pyproject-toml.rst:279
msgid "The README's format is auto-detected from the extension:"
msgstr "La dosierformo de README estas aŭtomate divenita el la dosiersufikso:"

#: ../source/guides/writing-pyproject-toml.rst:281
msgid "``README.md`` → `GitHub-flavored Markdown <gfm_>`_,"
msgstr "``README.md`` → `GitHub-stila Markdown <gfm_>`_,"

#: ../source/guides/writing-pyproject-toml.rst:282
msgid ""
"``README.rst`` → `reStructuredText <rest_>`_ (without Sphinx extensions)."
msgstr "``README.rst`` → `reStructuredText <rest_>`_ (sen etendaĵoj Sphinx)."

#: ../source/guides/writing-pyproject-toml.rst:284
msgid "You can also specify the format explicitly, like this:"
msgstr "Vi povas ankaŭ eksplici la dosierformon jene:"

#: ../source/guides/writing-pyproject-toml.rst:297
msgid "``license`` and ``license-files``"
msgstr "``license`` kaj ``license-files``"

#: ../source/guides/writing-pyproject-toml.rst:299
msgid "As per :pep:`639` licenses should be declared with two fields:"
msgstr "Laŭ :pep:`639`, oni deklaru licencon per du kampoj:"

#: ../source/guides/writing-pyproject-toml.rst:301
msgid ""
"``license`` is an :term:`SPDX license expression <License Expression>` "
"consisting of one or more :term:`license identifiers <License Identifier>`."
msgstr ""
"``license`` estas :term:`SPDX-licencesprimo <License Expression>` "
"konsistanta el unu aŭ pluraj :term:`licencidentigiloj <License Identifier>`."

#: ../source/guides/writing-pyproject-toml.rst:303
msgid "``license-files`` is a list of license file glob patterns."
msgstr "``license-files`` estas listo de licencodosieraj ``glob``-patroneoj."

#: ../source/guides/writing-pyproject-toml.rst:305
msgid ""
"A previous PEP had specified ``license`` to be a table with a ``file`` or a "
"``text`` key, this format is now deprecated. Most :term:`build "
"backends<build backend>` now support the new format as shown in the "
"following table."
msgstr ""
"Antaŭa PEP specifis, ke ``license`` estu tabelo kun ŝlosilo ``file`` aŭ "
"``text``. Tiu formo estas nun evitinda. La plejparto de :term:`konstruaj "
"malfasadoj<build backend>` nun subtenas la novan formon laŭ la jena tabelo."

#: ../source/guides/writing-pyproject-toml.rst:309
msgid "build backend versions that introduced :pep:`639` support"
msgstr "versioj de konstruaj malfasadoj eksubtenantaj :pep:`639`"

#: ../source/guides/writing-pyproject-toml.rst:312
msgid "hatchling"
msgstr "hatchling"

#: ../source/guides/writing-pyproject-toml.rst:313
msgid "setuptools"
msgstr "setuptools"

#: ../source/guides/writing-pyproject-toml.rst:314
msgid "flit-core [#flit-core-pep639]_"
msgstr "flit-core [#flit-core-pep639]_"

#: ../source/guides/writing-pyproject-toml.rst:315
msgid "pdm-backend"
msgstr "pdm-backend"

#: ../source/guides/writing-pyproject-toml.rst:316
msgid "poetry-core"
msgstr "poetry-core"

#: ../source/guides/writing-pyproject-toml.rst:317
#, fuzzy
#| msgid "build"
msgid "uv-build"
msgstr "build"

#: ../source/guides/writing-pyproject-toml.rst:318
msgid "1.27.0"
msgstr "1.27.0"

#: ../source/guides/writing-pyproject-toml.rst:319
msgid "77.0.3"
msgstr "77.0.3"

#: ../source/guides/writing-pyproject-toml.rst:320
msgid "3.12"
msgstr "3.12"

#: ../source/guides/writing-pyproject-toml.rst:321
msgid "2.4.0"
msgstr "2.4.0"

#: ../source/guides/writing-pyproject-toml.rst:322
msgid "2.2.0"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:323
msgid "0.7.19"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:329
#: ../source/specifications/pyproject-toml.rst:140
#: ../source/specifications/pyproject-toml.rst:251
msgid "``license``"
msgstr "``license``"

#: ../source/guides/writing-pyproject-toml.rst:331
msgid ""
"The new format for ``license`` is a valid :term:`SPDX license expression "
"<License Expression>` consisting of one or more :term:`license identifiers "
"<License Identifier>`. The full license list is available at the `SPDX "
"license list page <spdxlicenselist_>`_. The supported list version is 3.17 "
"or any later compatible one."
msgstr ""
"La nova formo de ``licence`` estas valida :term:`SPDX-licenco-esprimo "
"<License Expression>` konstistanta el unu aŭ pluraj :term:`licenco-"
"identigiloj <License Identifier>`. La plena listo de licencoj troviĝas ĉe "
"`la retejo de SPDX <spdxlicenselist_>`_. La subtenataj versioj de la listo "
"estas 3.17 aŭ pli novaj."

#: ../source/guides/writing-pyproject-toml.rst:344
msgid ""
"If you get a build error that ``license`` should be a dict/table, your build "
"backend doesn't yet support the new format. See the `above section <license-"
"and-license-files_>`_ for more context. The now deprecated format is "
"`described in PEP 621 <https://peps.python.org/pep-0621/#license>`__."
msgstr ""
"Se oni ricevas konstrueraron, ke`license`` estu vortaro/tabelo, via konstrua "
"malfasado ankoraŭ ne subtenas la novan formon. Vidu la `ĉi-supran paragrafon "
"<license-and-license-files_>`_ por pli da kunteksto. La nun evitinda formo "
"estas `priskribita en PEP 621 <https://peps.python.org/pep-0621/#license>`__."

#: ../source/guides/writing-pyproject-toml.rst:349
msgid ""
"As a general rule, it is a good idea to use a standard, well-known license, "
"both to avoid confusion and because some organizations avoid software whose "
"license is unapproved."
msgstr ""
"Ĝenerale, estas bone uzi norman, bone konatan licencon, kaj por eviti "
"konfuziĝon, kaj ĉar kelkaj organizaĵoj evitas programon sen aprobita licenco."

#: ../source/guides/writing-pyproject-toml.rst:353
msgid ""
"If your project is licensed with a license that doesn't have an existing "
"SPDX identifier, you can create a custom one in format ``LicenseRef-"
"[idstring]``. The custom identifiers must follow the SPDX specification, "
"`clause 10.1 <spdxcustomids_>`_ of the version 2.2 or any later compatible "
"one."
msgstr ""
"Se via projekto havas licencon sen ekzistanta SPDX-identigilo, vi povas krei "
"propran identigilo de la formo ``LicenseRef-[identigilo]``. La propra "
"identigilo devas obei `paragrafon 10.1 <spdxcustomids_>`_ de la normo SPDX, "
"versio 2.2 aŭ ajna pli nova kongrua versio."

#: ../source/guides/writing-pyproject-toml.rst:367
#: ../source/specifications/pyproject-toml.rst:141
#: ../source/specifications/pyproject-toml.rst:281
msgid "``license-files``"
msgstr "``license-files``"

#: ../source/guides/writing-pyproject-toml.rst:369
msgid ""
"This is a list of license files and files containing other legal information "
"you want to distribute with your package."
msgstr ""
"Tio estas listo de licenco-dosieroj kaj dosieroj enhavantaj aliajn jurajn "
"informojn, kiujn vi volas distribui kun via pako."

#: ../source/guides/writing-pyproject-toml.rst:377
msgid "The glob patterns must follow the specification:"
msgstr "La patroneo devas observi la specifon:"

#: ../source/guides/writing-pyproject-toml.rst:379
msgid ""
"Alphanumeric characters, underscores (``_``), hyphens (``-``) and dots (``."
"``) will be matched verbatim."
msgstr ""
"Literoj, ciferoj, substrekoj (``_``), streketoj (``-``) kaj punktoj (``.``) "
"prezentas sin laŭlitere."

#: ../source/guides/writing-pyproject-toml.rst:381
msgid ""
"Special characters: ``*``, ``?``, ``**`` and character ranges: [] are "
"supported."
msgstr "La metasignoj ``*``, ``?``, ``**`` kaj signintervaloj [] eblas."

#: ../source/guides/writing-pyproject-toml.rst:382
msgid "Path delimiters must be the forward slash character (``/``)."
msgstr "Dosierloko-apartigilo devas esti la suprenstreko (``/``)."

#: ../source/guides/writing-pyproject-toml.rst:383
msgid ""
"Patterns are relative to the directory containing :file:`pyproject.toml`, "
"and thus may not start with a slash character."
msgstr ""
"Patroneo estas relativa al la dosierujo enhavanta :file:`pyproject.toml`, "
"kaj tial ne povas komenciĝi per suprenstreko."

#: ../source/guides/writing-pyproject-toml.rst:385
msgid "Parent directory indicators (``..``) must not be used."
msgstr "Indikilo de patra dosierujo (``..``) devas esti ne uzita."

#: ../source/guides/writing-pyproject-toml.rst:386
msgid "Each glob must match at least one file."
msgstr "Ĉiu patroneo devas kongrui kun almenaŭ unu dosiero."

#: ../source/guides/writing-pyproject-toml.rst:388
msgid ""
"Literal paths are valid globs. Any characters or character sequences not "
"covered by this specification are invalid."
msgstr ""
"Eksplicita dosierloko estas valida patroneo. Ajna skribsigno aŭ signoĉeno ne "
"diskutita de ĉi tiu specifo estas nevalida."

#: ../source/guides/writing-pyproject-toml.rst:394
#: ../source/specifications/pyproject-toml.rst:139
#: ../source/specifications/pyproject-toml.rst:364
msgid "``keywords``"
msgstr "``keywords``"

#: ../source/guides/writing-pyproject-toml.rst:396
msgid ""
"This will help PyPI's search box to suggest your project when people search "
"for these keywords."
msgstr ""
"Tio helpos la serĉilon de PyPI sugesti vian projekton, kiam oni serĉas tiujn "
"ŝlosilvortojn."

#: ../source/guides/writing-pyproject-toml.rst:408
#: ../source/specifications/pyproject-toml.rst:133
#: ../source/specifications/pyproject-toml.rst:376
msgid "``classifiers``"
msgstr "``classifiers``"

#: ../source/guides/writing-pyproject-toml.rst:410
msgid ""
"A list of PyPI classifiers that apply to your project. Check the `full list "
"of possibilities <classifier-list_>`_."
msgstr ""
"Listo de PyPI-klasigiloj rilataj al via projekto. Jen la `plena listo de "
"klasigiloj <classifier-list_>`_."

#: ../source/guides/writing-pyproject-toml.rst:434
msgid ""
"Although the list of classifiers is often used to declare what Python "
"versions a project supports, this information is only used for searching and "
"browsing projects on PyPI, not for installing projects. To actually restrict "
"what Python versions a project can be installed on, use the :ref:`requires-"
"python` argument."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:439
msgid ""
"To prevent a package from being uploaded to PyPI, use the special "
"``Private :: Do Not Upload`` classifier. PyPI will always reject packages "
"with classifiers beginning with ``Private ::``."
msgstr ""
"Por malhelpi alŝuti pakon al PyPI, uzu la specialan klasigilon ``Private :: "
"Do Not Upload``. PyPI ĉiam malakceptas pakon de klasigilo komenciĝanta per "
"``Private ::``."

#: ../source/guides/writing-pyproject-toml.rst:446
#: ../source/specifications/pyproject-toml.rst:148
#: ../source/specifications/pyproject-toml.rst:394
msgid "``urls``"
msgstr "``urls``"

#: ../source/guides/writing-pyproject-toml.rst:448
msgid ""
"A list of URLs associated with your project, displayed on the left sidebar "
"of your PyPI project page."
msgstr ""
"Listo de retadresoj asociitaj al via projekto, montrotaj sur la maldekstra "
"flankpanelo de via projekta paĝo ĉe PyPI."

#: ../source/guides/writing-pyproject-toml.rst:453
msgid ""
"See :ref:`well-known-labels` for a listing of labels that PyPI and other "
"packaging tools are specifically aware of, and `PyPI's project metadata docs "
"<https://docs.pypi.org/project_metadata/#project-urls>`_ for PyPI-specific "
"URL processing."
msgstr ""
"Vidu :ref:`well-known-labels` por listo de etikedoj bone konataj de PyPI kaj "
"aliaj pakiloj, kaj `la dokumentaron de PyPI pri projektaj metadatenoj "
"<https://docs.pypi.org/project_metadata/#project-urls>`_ por PyPI-specifa "
"pritraktado de retadresoj."

#: ../source/guides/writing-pyproject-toml.rst:467
msgid ""
"Note that if the label contains spaces, it needs to be quoted, e.g., "
"``Website = \"https://example.com\"`` but ``\"Official Website\" = \"https://"
"example.com\"``."
msgstr ""
"Notu, ke se la etikedo enhavas spacetojn, ĝi devas esti encitiligita, ekz. "
"``Website = \"https://example.com\"`` sed ``\"Official Website\" = \"https://"
"example.com\"``."

#: ../source/guides/writing-pyproject-toml.rst:471
msgid ""
"Users are advised to use :ref:`well-known-labels` for their project URLs "
"where appropriate, since consumers of metadata (like package indices) can "
"specialize their presentation."
msgstr ""
"Uzanto uzu :ref:`bone konatajn etikedojn <well-known-labels>` por projektaj "
"retadresoj taŭge, ĉar iloj pri metadatenoj (kiel pakindeksoj) povas pli bone "
"montri tiujn."

#: ../source/guides/writing-pyproject-toml.rst:475
msgid ""
"For example in the following metadata, neither ``MyHomepage`` nor "
"``\"Download Link\"`` is a well-known label, so they will be rendered "
"verbatim:"
msgstr ""
"Ekzemple, en la jenaj metadatenoj, ne ``MyHomepage`` nek ``\"Download "
"Link\"`` estas bone konata etikedo kaj tial montriĝos laŭvorte:"

#: ../source/guides/writing-pyproject-toml.rst:485
msgid ""
"Whereas in this metadata ``HomePage`` and ``DOWNLOAD`` both have well-known "
"equivalents (``homepage`` and ``download``), and can be presented with those "
"semantics in mind (the project's home page and its external download "
"location, respectively)."
msgstr ""
"Tamen en ĉi tiu metadateno, ambaŭ ``HomePage`` kaj ``DOWNLOAD`` ekvivalentas "
"bone konatajn etikedojn (``homepage`` kaj ``download``) kaj estas "
"prezenteblaj tiel (kiel la ĉefpaĝo kaj la elŝutejo de la projekto "
"respektive)."

#: ../source/guides/writing-pyproject-toml.rst:497
msgid "Advanced plugins"
msgstr "Altnivelaj kromprogramoj"

#: ../source/guides/writing-pyproject-toml.rst:499
msgid ""
"Some packages can be extended through plugins. Examples include Pytest_ and "
"Pygments_. To create such a plugin, you need to declare it in a subtable of "
"``[project.entry-points]`` like this:"
msgstr ""
"Kelkaj pakoj estas etendeblaj per kromprogramoj, ekzemple Pytest_ kaj "
"Pygments_. Por krei tian kromprogramon, oni devas deklari ĝin en subtabelo "
"de ``[project.entry-points]`` jene:"

#: ../source/guides/writing-pyproject-toml.rst:508
msgid "See the :ref:`Plugin guide <plugin-entry-points>` for more information."
msgstr ""
"Vidu la :ref:`Gvidilon pri kromprogramoj <plugin-entry-points>` por pliaj "
"informoj."

#: ../source/guides/writing-pyproject-toml.rst:513
msgid "A full example"
msgstr "Plena ekzemplo"

#: ../source/guides/writing-pyproject-toml.rst:576
msgid ""
"Think twice before applying an upper bound like ``requires-python = \"<= "
"3.10\"`` here. `This blog post <requires-python-blog-post_>`_ contains some "
"information regarding possible problems."
msgstr ""
"Estu singarda pri supraj limoj kiel ``requires-python = \"<= 3.10\"`` ĉi "
"tie. `Jen artikolo <requires-python-blog-post_>`_ pri eblaj problemoj."

#: ../source/guides/writing-pyproject-toml.rst:580
msgid ""
"flit-core `does not yet <flit-issue-735_>`_ support WITH in SPDX license "
"expressions."
msgstr ""
"flit-core `ankoraŭ ne <flit-issue-735_>`_ subtenas WITH en SPDX-"
"licencesprimoj."

#: ../source/index.rst:-1
msgid ""
"The Python Packaging User Guide (PyPUG) is a collection of tutorials and "
"guides for packaging Python software."
msgstr ""
"La Manlibro por Python-Uzantoj pri Pakado (PyPUG) estas kolekto da lerniloj "
"kaj gvidiloj pri pakado de Python-programoj."

#: ../source/index.rst:-1
msgid "python, packaging, guide, tutorial"
msgstr "python, pakado, gvidilo, lernilo"

#: ../source/index.rst:3 ../source/key_projects.rst:247
msgid "Python Packaging User Guide"
msgstr "Manlibro por Python-Uzantoj pri Pakado"

#: ../source/index.rst:25
msgid ""
"Welcome to the *Python Packaging User Guide*, a collection of tutorials and "
"references to help you distribute and install Python packages with modern "
"tools."
msgstr ""
"Bonvenon al *Manlibro por Python-Uzantoj pri Pakado*, kolekto de lerniloj "
"kaj gvidiloj por helpi vin distribui kaj instali Python-pakojn per modernaj "
"iloj."

#: ../source/index.rst:29
msgid ""
"This guide is maintained on `GitHub`_ by the :doc:`Python Packaging "
"Authority <pypa:index>`. We happily accept :doc:`contributions and feedback "
"<contribute>`. 😊"
msgstr ""
"Jen gvidilo mastrumata ĉe `GitHub`_ far :doc:`Python Packaging Authority "
"<pypa:index>`. Ni dankeme akceptas :doc:`kontribuojn kaj komentojn "
"<contribute>`. 😊"

#: ../source/index.rst:36
msgid "Overview and Flow"
msgstr "Superrigardo kaj Fluo"

#: ../source/index.rst:40
msgid ""
"Building your understanding of Python packaging is a journey. Patience and "
"continuous improvement are key to success. The overview and flow sections "
"provide a starting point for understanding the Python packaging ecosystem."
msgstr ""
"Komprenado de pakado de Python estas vojaĝo. Pacienco kaj daŭra plibonigado "
"necesas por sukceso. La paragrafoj pri superrigardo kaj laborfluo estas "
"deirpunkto por kompreni la Python-pakadan ekosistemon."

#: ../source/index.rst:44
msgid ""
"The :doc:`overview` explains Python packaging and its use when preparing and "
"distributing projects. This section helps you build understanding about "
"selecting the tools and processes that are most suitable for your use case. "
"It includes what packaging is, the problems that it solves, and key "
"considerations."
msgstr ""

#: ../source/index.rst:51
msgid ""
"To get an overview of the workflow used to publish your code, see :doc:"
"`packaging flow <flow>`."
msgstr ""
"Por superrigardo pri la laborfluo por eldoni kodon, vidu :doc:`pakadan fluon "
"<flow>`."

#: ../source/index.rst:57
msgid ""
"Tutorials walk through the steps needed to complete a project for the first "
"time. Tutorials aim to help you succeed and provide a starting point for "
"future exploration. The :doc:`tutorials/index` section includes:"
msgstr ""
"Lernilo helpas vin paŝon post paŝo krei projekton kiel komencanto. Lerniloj "
"celas helpi vin sukcesi kaj provizi komencpunkton por plua esplorado. La "
"sekcio :doc:`tutorials/index` enhavas la jenon:"

#: ../source/index.rst:62
msgid ""
"A :doc:`tutorial on installing packages <tutorials/installing-packages>`"
msgstr ":doc:`Lernilo pri instalado de pakoj <tutorials/installing-packages>`"

#: ../source/index.rst:63
msgid ""
"A :doc:`tutorial on managing application dependencies <tutorials/managing-"
"dependencies>` in a version controlled project"
msgstr ""
":doc:`Lernilo pri administrado de programaj dependecoj <tutorials/managing-"
"dependencies>` en versikontrolata projekto"

#: ../source/index.rst:65
msgid ""
"A :doc:`tutorial on packaging and distributing <tutorials/packaging-"
"projects>` your project"
msgstr ""
":doc:`Lernilo pri pakado kaj distribuado <tutorials/packaging-projects>` de "
"via projekto"

#: ../source/index.rst:71
msgid ""
"Guides provide steps to perform a specific task. Guides are more focused on "
"users who are already familiar with Python packaging and are looking for "
"specific information."
msgstr ""
"Gvidilo detalas paŝojn por iu tasko. Gvidilo estas por uzanto jam konanta "
"pakadon de Python kaj serĉas specifajn informojn."

#: ../source/index.rst:75
msgid ""
"The :doc:`guides/index` section provides \"how to\" instructions in three "
"major areas: package installation; building and distributing packages; "
"miscellaneous topics."
msgstr ""
"La sekcio :doc:`guides/index` priskribas lernilajn instrukciojn pri tri "
"ĉeftemoj: instalado de pako; konstruado kaj distribuado de pako; aliaj temoj."

#: ../source/index.rst:80
msgid "Explanations and Discussions"
msgstr "Klarigoj kaj Diskutoj"

#: ../source/index.rst:82
#, fuzzy
#| msgid ""
#| "The :doc:`discussions/index` section for in-depth explanations and "
#| "discussion about topics, such as:"
msgid ""
"The :doc:`discussions/index` section provides in-depth explanations and "
"discussion about topics, such as:"
msgstr ""
"La sekcio :doc:`discussions/index` por detalaj klarigoj kaj diskutoj pri "
"temoj kiel:"

#: ../source/index.rst:85
msgid ":doc:`discussions/deploying-python-applications`"
msgstr ":doc:`discussions/deploying-python-applications`"

#: ../source/index.rst:86
msgid ":doc:`discussions/pip-vs-easy-install`"
msgstr ":doc:`discussions/pip-vs-easy-install`"

#: ../source/index.rst:89
msgid "Reference"
msgstr "Referenco"

#: ../source/index.rst:91
msgid ""
"The :doc:`specifications/index` section for packaging interoperability "
"specifications."
msgstr ""
"La paragrafo :doc:`specifications/index` por specifoj pri pakada "
"kunfunkcipovo."

#: ../source/index.rst:92
msgid ""
"The list of :doc:`other projects <key_projects>` maintained by members of "
"the Python Packaging Authority."
msgstr ""
"La listo de :doc:`aliaj projektoj <key_projects>` mastrumataj de anoj de la "
"Python-Pakada Aŭtoritato."

#: ../source/index.rst:93
msgid "The :doc:`glossary` for definitions of terms used in Python packaging."
msgstr ""
"La :doc:`terminaro <glossary>` pri difinoj de terminoj pri pakado de Python."

#: ../source/key_projects.rst:6
msgid "Project Summaries"
msgstr "Projektaj Resumoj"

#: ../source/key_projects.rst:8
msgid ""
"Summaries and links for the most relevant projects in the space of Python "
"installation and packaging."
msgstr ""
"Resumoj kaj hiperligoj pri la plej gravaj projektoj rilataj al instalado kaj "
"pakado de Python."

#: ../source/key_projects.rst:14
msgid "PyPA Projects"
msgstr "Projektoj de PyPA"

#: ../source/key_projects.rst:19
msgid "bandersnatch"
msgstr "bandersnatch"

#: ../source/key_projects.rst:21
msgid ""
"`Docs <https://bandersnatch.readthedocs.io>`__ | `Issues <https://github.com/"
"pypa/bandersnatch/issues>`__ | `GitHub <https://github.com/pypa/"
"bandersnatch>`__ | `PyPI <https://pypi.org/project/bandersnatch>`__"
msgstr ""
"`Dokumentaro <https://bandersnatch.readthedocs.io>`__ | `Cimoj <https://"
"github.com/pypa/bandersnatch/issues>`__ | `GitHub <https://github.com/pypa/"
"bandersnatch>`__ | `PyPI <https://pypi.org/project/bandersnatch>`__"

#: ../source/key_projects.rst:26
msgid ""
"``bandersnatch`` is a PyPI mirroring client designed to efficiently create a "
"complete mirror of the contents of PyPI. Organizations thus save bandwidth "
"and latency on package downloads (especially in the context of automated "
"tests) and to prevent heavily loading PyPI's Content Delivery Network (CDN). "
"Files can be served from a local directory or `AWS S3`_."
msgstr ""

#: ../source/key_projects.rst:37
msgid "build"
msgstr "build"

#: ../source/key_projects.rst:39
msgid ""
":any:`Docs <build:index>` | `Issues <https://github.com/pypa/build/"
"issues>`__ | `GitHub <https://github.com/pypa/build>`__ | `PyPI <https://"
"pypi.org/project/build>`__"
msgstr ""
":any:`Dokumentaro <build:index>` | `Cimoj <https://github.com/pypa/build/"
"issues>`__ | `GitHub <https://github.com/pypa/build>`__ | `PyPI <https://"
"pypi.org/project/build>`__"

#: ../source/key_projects.rst:44
msgid ""
"``build`` is a :pep:`517` compatible Python package builder. It provides a "
"CLI to build packages, as well as a Python API."
msgstr ""
"``build`` estas :pep:`517`-kongrua Python-pakokonstruilo. Ĝi provizas kaj "
"komandlinian fasadon kaj Python-API por konstrui pakojn."

#: ../source/key_projects.rst:51
msgid "cibuildwheel"
msgstr "cibuildwheel"

#: ../source/key_projects.rst:53
msgid ""
"`Docs <https://cibuildwheel.readthedocs.io/>`__ | `Issues <https://github."
"com/pypa/cibuildwheel/issues>`__ | `GitHub <https://github.com/pypa/"
"cibuildwheel>`__ | `PyPI <https://pypi.org/project/cibuildwheel>`__ | "
"`Discussions <https://github.com/pypa/cibuildwheel/discussions>`__ | "
"`Discord #cibuildwheel <https://discord.com/invite/pypa>`__"
msgstr ""
"`Dokumentaro <https://cibuildwheel.readthedocs.io/>`__ | `Cimoj <https://"
"github.com/pypa/cibuildwheel/issues>`__ | `GitHub <https://github.com/pypa/"
"cibuildwheel>`__ | `PyPI <https://pypi.org/project/cibuildwheel>`__ | "
"`Diskutoj <https://github.com/pypa/cibuildwheel/discussions>`__ | `Discord "
"#cibuildwheel <https://discord.com/invite/pypa>`__"

#: ../source/key_projects.rst:60
msgid ""
"``cibuildwheel`` is a Python package that builds :term:`wheels <Wheel>` for "
"all common platforms and Python versions on most CI systems. Also see :ref:"
"`multibuild`."
msgstr ""
"``cibuildwheel`` estas Python-pako konstruanta :term:`wheel-ojn <Wheel>` por "
"ĉiuj oftaj platformoj kaj versioj de Python sur multaj sistemoj de kontinua "
"integrado. Ankaŭ vidu :ref:`multibuild`."

#: ../source/key_projects.rst:66
msgid "distlib"
msgstr "distlib"

#: ../source/key_projects.rst:68
msgid ""
":doc:`Docs <distlib:index>` | `Issues <https://github.com/pypa/distlib/"
"issues>`__ | `GitHub <https://github.com/pypa/distlib>`__ | `PyPI <https://"
"pypi.org/project/distlib>`__"
msgstr ""
":doc:`Dokumentaro <distlib:index>` | `Cimoj <https://github.com/pypa/distlib/"
"issues>`__ | `GitHub <https://github.com/pypa/distlib>`__ | `PyPI <https://"
"pypi.org/project/distlib>`__"

#: ../source/key_projects.rst:73
msgid ""
"``distlib`` is a library which implements low-level functions that relate to "
"packaging and distribution of Python software.  ``distlib`` implements "
"several relevant PEPs (Python Enhancement Proposal standards) and is useful "
"for developers of third-party packaging tools to make and upload binary and "
"source :term:`distributions <Distribution Package>`, achieve "
"interoperability, resolve dependencies, manage package resources, and do "
"other similar functions."
msgstr ""
"``distlib`` estas biblioteko de malaltnivelaj funkcioj pri pakado kaj "
"distribuado de Python-programoj.  ``distlib`` realigas plurajn rilatajn PEP-"
"ojn (normojn Python Enhancement Proposal) kaj utilas por verki triapartian "
"pakilon, kiu faras kaj alŝutas duumajn kaj fontajn :term:`distribuojn "
"<Distribution Package>` kunfunkcipove, solvas dependecojn, administras "
"pakajn resursojn, ktp."

#: ../source/key_projects.rst:82
msgid ""
"Unlike the stricter :ref:`packaging` project (below), which specifically "
"implements modern Python packaging interoperability standards, ``distlib`` "
"also attempts to provide reasonable fallback behaviours when asked to handle "
"legacy packages and metadata that predate the modern interoperability "
"standards and fall into the subset of packages that are incompatible with "
"those standards."
msgstr ""

#: ../source/key_projects.rst:93
msgid "distutils"
msgstr "distutils"

#: ../source/key_projects.rst:95
msgid ""
"The original Python packaging system, added to the standard library in "
"Python 2.0 and removed in 3.12."
msgstr ""
"La origina Python-pakada sistemo, aldonita al la norma biblioteko en Python "
"2.0 kaj forigita en 3.12."

#: ../source/key_projects.rst:98
msgid ""
"Due to the challenges of maintaining a packaging system where feature "
"updates are tightly coupled to language runtime updates, direct usage of :"
"ref:`distutils` has been actively discouraged, with :ref:`Setuptools` being "
"the preferred replacement. :ref:`Setuptools` not only provides features that "
"plain :ref:`distutils` doesn't offer (such as dependency declarations and "
"entry point declarations), it also provides a consistent build interface and "
"feature set across all supported Python versions."
msgstr ""

#: ../source/key_projects.rst:107
msgid ""
"Consequently, :ref:`distutils` was deprecated in Python 3.10 by :pep:`632` "
"and has been :doc:`removed <python:whatsnew/3.12>` from the standard library "
"in Python 3.12.  Setuptools bundles the standalone copy of distutils, and it "
"is injected even on Python < 3.12 if you import setuptools first or use pip."
msgstr ""
"Tial :ref:`distutils` iĝis evitinda ekde Python 3.10 per :pep:`632` kaj "
"estis :doc:`forigita <python:whatsnew/3.12>` el la norma biblioteko je "
"Python 3.12.  Setuptools enhavas memstaran kopion de distutils kaj injektas "
"ĝin, eĉ por Python < 3.12, kiam oni unue importas setuptools aŭ uzas pip."

#: ../source/key_projects.rst:116
msgid "flit"
msgstr "flit"

#: ../source/key_projects.rst:118
msgid ""
"`Docs <https://flit.readthedocs.io/en/latest/>`__ | `Issues <https://github."
"com/pypa/flit/issues>`__ | `PyPI <https://pypi.org/project/flit>`__"
msgstr ""
"`Dokumentaro <https://flit.readthedocs.io/en/latest/>`__ | `Cimoj <https://"
"github.com/pypa/flit/issues>`__ | `PyPI <https://pypi.org/project/flit>`__"

#: ../source/key_projects.rst:122
msgid ""
"Flit provides a simple way to create and upload pure Python packages and "
"modules to PyPI.  It focuses on `making the easy things easy <flit-"
"rationale_>`_ for packaging.  Flit can generate a configuration file to "
"quickly set up a simple project, build source distributions and wheels, and "
"upload them to PyPI."
msgstr ""
"Flit estas simpla maniero por krei kaj alŝuti pakon aŭ modulon konsistantan "
"nur el Python al PyPI. Ĝi celas `faciligi facilaĵojn <flit-rationale_>`_ pri "
"pakado. Flit povas generi agordan dosieron por rapide starigi simplan "
"projekton, konstrui fontajn distribuojn kaj wheel-ojn, kaj alŝuti ilin al "
"PyPI."

#: ../source/key_projects.rst:127
msgid ""
"Flit uses ``pyproject.toml`` to configure a project. Flit does not rely on "
"tools such as :ref:`setuptools` to build distributions, or :ref:`twine` to "
"upload them to PyPI. Flit requires Python 3, but you can use it to "
"distribute modules for Python 2, so long as they can be imported on Python 3."
msgstr ""
"Flit uzas ``pyproject.toml`` por agordi projekton. Flit ne uzas :ref:"
"`setuptools` por konstrui distribuon, nek uzas :ref:`twine` por alŝuti "
"distribuojn al PyPI. Flit postulas Python 3, sed oni povas uzi ĝin por "
"distribui tiujn modulojn por Python 2, kiuj estas importeblaj en Python 3."

#: ../source/key_projects.rst:132
msgid ""
"The flit package is lifted by `Matthias Bussonnier <https://github.com/"
"Carreau>`__ since October 2023 on the `tidelift platform <https://tidelift."
"com/lifter/search/pypi/flit>`__, and funds sent to the PSF and earmarked for "
"PyPA usage."
msgstr ""
"La pako flit estas subtenata de `Matthias Bussonnier <https://github.com/"
"Carreau>`__ ekde Oktobro 2023 sur la `platformo Tidelift <https://tidelift."
"com/lifter/search/pypi/flit>`__, kun fonduso sendita al PSF kaj markita por "
"PyPA."

#: ../source/key_projects.rst:142
msgid "hatch"
msgstr "hatch"

#: ../source/key_projects.rst:144
msgid ""
"`Docs <https://hatch.pypa.io/latest/>`__ | `GitHub <https://github.com/pypa/"
"hatch>`__ | `PyPI <https://pypi.org/project/hatch>`__"
msgstr ""
"`Dokumentaro <https://hatch.pypa.io/latest/>`__ | `GitHub <https://github."
"com/pypa/hatch>`__ | `PyPI <https://pypi.org/project/hatch>`__"

#: ../source/key_projects.rst:148
msgid ""
"Hatch is a unified command-line tool meant to conveniently manage "
"dependencies and environment isolation for Python developers. Python package "
"developers use Hatch and its :term:`build backend <Build Backend>` Hatchling "
"to configure, version, specify dependencies for, and publish packages to "
"PyPI. Its plugin system allows for easily extending functionality."
msgstr ""
"Hatch estas unuigita komandlinia ilo por facile administri dependecojn kaj "
"izoli mediojn por Python-programistoj. Aŭtoroj de Python-pako uzas Hatch kaj "
"ĝian :term:`konstruan malfasadon <Build Backend>` por agordi pakojn, spuri "
"versiojn, specifi dependecojn, kaj eldoni pakojn al PyPI. La kromprograma "
"sistemo de Hatch faciligas etendado de ĝiaj funkcioj."

#: ../source/key_projects.rst:157
msgid "packaging"
msgstr "pakado"

#: ../source/key_projects.rst:159
msgid ""
":doc:`Docs <packaging:index>` | `Issues <https://github.com/pypa/packaging/"
"issues>`__ | `GitHub <https://github.com/pypa/packaging>`__ | `PyPI <https://"
"pypi.org/project/packaging>`__"
msgstr ""
":doc:`Dokumentaro <packaging:index>` | `Cimoj <https://github.com/pypa/"
"packaging/issues>`__ | `GitHub <https://github.com/pypa/packaging>`__ | "
"`PyPI <https://pypi.org/project/packaging>`__"

#: ../source/key_projects.rst:164
msgid ""
"Core utilities for Python packaging used by :ref:`pip` and :ref:`setuptools`."
msgstr ""
"Kernaj iloj por pakado de Python uzataj de :ref:`pip` kaj :ref:`setuptools`."

#: ../source/key_projects.rst:166
msgid ""
"The core utilities in the packaging library handle version handling, "
"specifiers, markers, requirements, tags, and similar attributes and tasks "
"for Python packages. Most Python users rely on this library without needing "
"to explicitly call it; developers of the other Python packaging, "
"distribution, and installation tools listed here often use its functionality "
"to parse, discover, and otherwise handle dependency attributes."
msgstr ""

#: ../source/key_projects.rst:174
msgid ""
"This project specifically focuses on implementing the modern Python "
"packaging interoperability standards defined at :ref:`packaging-"
"specifications`, and will report errors for sufficiently old legacy packages "
"that are incompatible with those standards. In contrast, the :ref:`distlib` "
"project is a more permissive library that attempts to provide a plausible "
"reading of ambiguous metadata in cases where :ref:`packaging` will instead "
"report on error."
msgstr ""

#: ../source/key_projects.rst:186
#: ../source/specifications/platform-compatibility-tags.rst:142
msgid "pip"
msgstr "pip"

#: ../source/key_projects.rst:188
msgid ""
"`Docs <https://pip.pypa.io/>`__ | `Issues <https://github.com/pypa/pip/"
"issues>`__ | `GitHub <https://github.com/pypa/pip>`__ | `PyPI <https://pypi."
"org/project/pip/>`__"
msgstr ""
"`Dokumentaro <https://pip.pypa.io/>`__ | `Cimoj <https://github.com/pypa/pip/"
"issues>`__ | `GitHub <https://github.com/pypa/pip>`__ | `PyPI <https://pypi."
"org/project/pip/>`__"

#: ../source/key_projects.rst:193
msgid ""
"The most popular tool for installing Python packages, and the one included "
"with modern versions of Python."
msgstr ""
"La plej populara ilo por instali Python-pakojn, inkluzivita en modernaj "
"versioj de Python."

#: ../source/key_projects.rst:196
msgid ""
"It provides the essential core features for finding, downloading, and "
"installing packages from PyPI and other Python package indexes, and can be "
"incorporated into a wide range of development workflows via its command-line "
"interface (CLI)."
msgstr ""
"Ĝi provizas la necesajn ĉeffunkciojn por serĉi, elŝuti, kaj instali pakojn "
"el PyPI kaj aliaj Python-pakindeksoj kaj estas integrebla en multajn "
"evoluajn laborfluojn per la komandlinia fasado (CLI)."

#: ../source/key_projects.rst:204
msgid "Pipenv"
msgstr "Pipenv"

#: ../source/key_projects.rst:206
msgid ""
":doc:`Docs <pipenv:index>` | `Source <https://github.com/pypa/pipenv>`__ | "
"`Issues <https://github.com/pypa/pipenv/issues>`__ | `PyPI <https://pypi.org/"
"project/pipenv>`__"
msgstr ""
":doc:`Dokumentaro <pipenv:index>` | `Fonto <https://github.com/pypa/"
"pipenv>`__ | `Cimoj <https://github.com/pypa/pipenv/issues>`__ | `PyPI "
"<https://pypi.org/project/pipenv>`__"

#: ../source/key_projects.rst:211
msgid ""
"Pipenv is a project that aims to bring the best of all packaging worlds to "
"the Python world. It harnesses :ref:`Pipfile`, :ref:`pip`, and :ref:"
"`virtualenv` into one single toolchain. It can autoimport ``requirements."
"txt`` and also check for CVEs in `Pipfile`_ using `safety <https://pyup.io/"
"safety>`_."
msgstr ""
"Pipenv estas projekto celanta provizi ĉiajn bonaĵojn al la mondo de Python. "
"Ĝi jungas :ref:`Pipfile`, :ref:`pip`, kaj :ref:`virtualenv` al unu ilĉenon. "
"Ĝi povas aŭtomate importi ``requirements.txt`` kaj kontroli vundeblecojn en "
"`Pipfile`_ per `safety <https://pyup.io/safety>`_."

#: ../source/key_projects.rst:216
msgid ""
"Pipenv aims to help users manage environments, dependencies, and imported "
"packages on the command line. It also works well on Windows (which other "
"tools often underserve), makes and checks file hashes, to ensure compliance "
"with hash-locked dependency specifiers, and eases uninstallation of packages "
"and dependencies."
msgstr ""
"Pipenv helpas uzantoj komandlinie administri mediojn, dependecojn kaj "
"importitajn pakojn. Ĝi ankaŭ funkcias bone sur Windows (malkiel kelkaj aliaj "
"iloj), faras kaj kontrolas haketaĵojn de dosieroj (por obei haketaĵe "
"ŝlositajn dependeco-specifilojn), kaj faciligas malinstaladon de pakoj kaj "
"dependaĵoj."

#: ../source/key_projects.rst:225
msgid "Pipfile"
msgstr "Pipfile"

#: ../source/key_projects.rst:227
msgid "`Source <https://github.com/pypa/pipfile>`__"
msgstr "`Fonto <https://github.com/pypa/pipfile>`__"

#: ../source/key_projects.rst:229
msgid ""
":file:`Pipfile` and its sister :file:`Pipfile.lock` are a higher-level "
"application-centric alternative to :ref:`pip`'s lower-level :file:"
"`requirements.txt` file."
msgstr ""
":file:`Pipfile` kaj ĝia frato :file:`Pipfile.lock` estas altnivela programo-"
"centra alternativo al la malaltnivela dosiero :file:`requirements.txt` de :"
"ref:`pip`."

#: ../source/key_projects.rst:236
msgid "pipx"
msgstr "pipx"

#: ../source/key_projects.rst:238
msgid ""
"`Docs <https://pipx.pypa.io/>`__ | `GitHub <https://github.com/pypa/pipx>`__ "
"| `PyPI <https://pypi.org/project/pipx/>`__"
msgstr ""
"`Dokumentaro <https://pipx.pypa.io/>`__ | `GitHub <https://github.com/pypa/"
"pipx>`__ | `PyPI <https://pypi.org/project/pipx/>`__"

#: ../source/key_projects.rst:242
msgid ""
"pipx is a tool to install and run Python command-line applications without "
"causing dependency conflicts with other packages installed on the system."
msgstr ""
"pipx estas ilo por instali kaj ruli Python-an komandlinian programon sen "
"dependeca konflikto kun aliaj pakoj instalitaj sur la sistemo."

#: ../source/key_projects.rst:249
msgid ""
":doc:`Docs <index>` | `Issues <https://github.com/pypa/packaging.python.org/"
"issues>`__ | `GitHub <https://github.com/pypa/packaging.python.org>`__"
msgstr ""
":doc:`Dokumentaro <index>` | `Cimoj <https://github.com/pypa/packaging."
"python.org/issues>`__ | `GitHub <https://github.com/pypa/packaging.python."
"org>`__"

#: ../source/key_projects.rst:253
msgid "This guide!"
msgstr "Jen ĉi tiu gividilo!"

#: ../source/key_projects.rst:258
msgid "readme_renderer"
msgstr "readme_renderer"

#: ../source/key_projects.rst:260
msgid ""
"`GitHub and docs <https://github.com/pypa/readme_renderer/>`__ | `PyPI "
"<https://pypi.org/project/readme-renderer/>`__"
msgstr ""
"`GitHub kaj dokumentaro <https://github.com/pypa/readme_renderer/>`__ | "
"`PyPI <https://pypi.org/project/readme-renderer/>`__"

#: ../source/key_projects.rst:263
msgid ""
"``readme_renderer`` is a library that package developers use to render their "
"user documentation (README) files into HTML from markup languages such as "
"Markdown or reStructuredText. Developers call it on its own or via :ref:"
"`twine`, as part of their release management process, to check that their "
"package descriptions will properly display on PyPI."
msgstr ""

#: ../source/key_projects.rst:274
msgid "Setuptools"
msgstr "Setuptools"

#: ../source/key_projects.rst:276
msgid ""
"`Docs <https://setuptools.readthedocs.io/en/latest/>`__ | `Issues <https://"
"github.com/pypa/setuptools/issues>`__ | `GitHub <https://github.com/pypa/"
"setuptools>`__ | `PyPI <https://pypi.org/project/setuptools>`__"
msgstr ""
"`Dokumentaro <https://setuptools.readthedocs.io/en/latest/>`__ | `Cimoj "
"<https://github.com/pypa/setuptools/issues>`__ | `GitHub <https://github.com/"
"pypa/setuptools>`__ | `PyPI <https://pypi.org/project/setuptools>`__"

#: ../source/key_projects.rst:281
msgid ""
"Setuptools (which includes ``easy_install``) is a collection of enhancements "
"to the Python distutils that allow you to more easily build and distribute "
"Python :term:`distributions <Distribution Package>`, especially ones that "
"have dependencies on other packages."
msgstr ""
"Setuptools (kiu inkluzivas ``easy_install``) estas kolekto de plibonigaĵoj "
"por la modulo ``distutils`` de Python permesanta pli facile konstrui kaj "
"distribui :term:`distribuojn <Distribution Package>` por Python, speciale "
"tiujn dependantajn de aliaj pakoj."

#: ../source/key_projects.rst:289
msgid "trove-classifiers"
msgstr "trove-classifiers"

#: ../source/key_projects.rst:291
msgid ""
"`Issues <https://github.com/pypa/trove-classifiers/issues>`__ | `GitHub "
"<https://github.com/pypa/trove-classifiers>`__ | `PyPI <https://pypi.org/"
"project/trove-classifiers/>`__"
msgstr ""
"`Cimoj <https://github.com/pypa/trove-classifiers/issues>`__ | `GitHub "
"<https://github.com/pypa/trove-classifiers>`__ | `PyPI <https://pypi.org/"
"project/trove-classifiers/>`__"

#: ../source/key_projects.rst:295
msgid ""
"trove-classifiers is the canonical source for `classifiers on PyPI <https://"
"pypi.org/classifiers/>`_, which project maintainers use to :ref:"
"`systematically describe their projects <core-metadata-classifier>` so that "
"users can better find projects that match their needs on the PyPI."
msgstr ""
"trove-classifiers estas la norma fonto por `klasigiloj ĉe PyPI <https://pypi."
"org/classifiers/>`_, kiujn mastrumantoj uzas por :ref:`sisteme priskribi "
"siajn projektojn <core-metadata-classifier>`, helpante uzantojn facile serĉi "
"projektojn taŭgajn por siaj bezonoj ĉe PyPI."

#: ../source/key_projects.rst:300
msgid ""
"The trove-classifiers package contains a list of valid classifiers and "
"deprecated classifiers (which are paired with the classifiers that replace "
"them).  Use this package to validate classifiers used in packages intended "
"for uploading to PyPI. As this list of classifiers is published as code, you "
"can install and import it, giving you a more convenient workflow compared to "
"referring to the `list published on PyPI <https://pypi.org/classifiers/>`_. "
"The `issue tracker <https://github.com/pypa/trove-classifiers/issues>`_ for "
"the project hosts discussions on proposed classifiers and requests for new "
"classifiers."
msgstr ""
"La pako ``trove-classifiers`` enhavas liston de validaj klasigiloj kaj "
"evitindaj klasigiloj (parigitaj kun la anstataŭantaj klasigiloj).  Uzu tiun "
"pakon por konfirmi klasigilon en pako alŝutota al PyPI. Ĉar tiu listo de "
"klasigiloj estas kodo, oni povas instali kaj importi ĝin, por pli facila "
"laborfluo ol la `listo ĉe PyPI <https://pypi.org/classifiers/>`_. La "
"`cimdatenbanko <https://github.com/pypa/trove-classifiers/issues>`_ de la "
"projekto gastigas diskutojn pri proponitaj klasigiloj kaj petoj por novaj "
"klasigiloj."

#: ../source/key_projects.rst:314
msgid "twine"
msgstr "twine"

#: ../source/key_projects.rst:316
msgid ""
"`Docs <https://twine.readthedocs.io/en/latest/>`__ | `Issues <https://github."
"com/pypa/twine/issues>`__ | `GitHub <https://github.com/pypa/twine>`__ | "
"`PyPI <https://pypi.org/project/twine>`__"
msgstr ""
"`Dokumentaro <https://twine.readthedocs.io/en/latest/>`__ | `Cimoj <https://"
"github.com/pypa/twine/issues>`__ | `GitHub <https://github.com/pypa/"
"twine>`__ | `PyPI <https://pypi.org/project/twine>`__"

#: ../source/key_projects.rst:321
msgid ""
"Twine is the primary tool developers use to upload packages to the Python "
"Package Index or other Python package indexes. It is a command-line program "
"that passes program files and metadata to a web API. Developers use it "
"because it's the official PyPI upload tool, it's fast and secure, it's "
"maintained, and it reliably works."
msgstr ""
"Twine estas la ĉefa ilo por alŝuti pakon al la Python-Pakindekso aŭ alia "
"pakindekso por Python. Ĝi estas komandlinia programo, kiu liveras "
"programdosierojn kaj metadatenojn al TTT-a API. Programistoj uzas ĝin, ĉar "
"ĝi estas la oficiala PyPI-alŝutilo, ĝi estas rapida kaj sekura, ĝi estas "
"mastrumata, kaj ĝi funkcias fidinde."

#: ../source/key_projects.rst:331 ../source/overview.rst:405
msgid "virtualenv"
msgstr "virtualenv"

#: ../source/key_projects.rst:333
msgid ""
"`Docs <https://virtualenv.pypa.io/en/stable/index.html>`__ | `Issues "
"<https://github.com/pypa/virtualenv/issues>`__ | `GitHub <https://github.com/"
"pypa/virtualenv>`__ | `PyPI <https://pypi.org/project/virtualenv/>`__"
msgstr ""
"`Dokumentaro <https://virtualenv.pypa.io/en/stable/index.html>`__ | `Cimoj "
"<https://github.com/pypa/virtualenv/issues>`__ | `GitHub <https://github.com/"
"pypa/virtualenv>`__ | `PyPI <https://pypi.org/project/virtualenv/>`__"

#: ../source/key_projects.rst:338
msgid ""
"virtualenv is a tool for creating isolated Python :term:`Virtual "
"Environments <Virtual Environment>`, like :ref:`venv`. Unlike :ref:`venv`, "
"virtualenv can create virtual environments for other versions of Python, "
"which it locates using the PATH environment variable. It also provides "
"convenient features for configuring, maintaining, duplicating, and "
"troubleshooting virtual environments. For more information, see the section "
"on :ref:`Creating and using Virtual Environments`."
msgstr ""

#: ../source/key_projects.rst:350
msgid "Warehouse"
msgstr "Warehouse"

#: ../source/key_projects.rst:352
msgid ""
"`Docs <https://warehouse.pypa.io/>`__ | `Issues <https://github.com/pypa/"
"warehouse/issues>`__ | `GitHub <https://github.com/pypa/warehouse>`__"
msgstr ""
"`Dokumentaro <https://warehouse.pypa.io/>`__ | `Cimoj <https://github.com/"
"pypa/warehouse/issues>`__ | `GitHub <https://github.com/pypa/warehouse>`__"

#: ../source/key_projects.rst:356
msgid ""
"The current codebase powering the :term:`Python Package Index (PyPI)`. It is "
"hosted at `pypi.org <https://pypi.org/>`_. The default source for :ref:`pip` "
"downloads."
msgstr ""
"La aktuala programaro funkciiganta la :term:`Python-Pakindekson <Python "
"Package Index (PyPI)>)`. Ĝi troviĝas ĉe `pypi.org <https://pypi.org/>`_. La "
"implicita fonto de elŝutado per :ref:`pip`."

#: ../source/key_projects.rst:364
msgid "wheel"
msgstr "wheel"

#: ../source/key_projects.rst:366
msgid ""
"`Docs <https://wheel.readthedocs.io/en/latest/>`__ | `Issues <https://github."
"com/pypa/wheel/issues>`__ | `GitHub <https://github.com/pypa/wheel>`__ | "
"`PyPI <https://pypi.org/project/wheel>`__"
msgstr ""
"`Dokumentaro <https://wheel.readthedocs.io/en/latest/>`__ | `Cimoj <https://"
"github.com/pypa/wheel/issues>`__ | `GitHub <https://github.com/pypa/"
"wheel>`__ | `PyPI <https://pypi.org/project/wheel>`__"

#: ../source/key_projects.rst:371
msgid ""
"Primarily, the wheel project offers the ``bdist_wheel`` :ref:`setuptools` "
"extension for creating :term:`wheel distributions <Wheel>`.  Additionally, "
"it offers its own command line utility for creating and installing wheels."
msgstr ""
"Precipe, la projekto wheel provizas la :ref:`setuptools`-etendaĵon "
"``bdist_wheel`` por krei :term:`wheel-distribuon <Wheel>`.  Krome, ĝi "
"provizas komandlinian ilaĵon por krei kaj instali wheel-on."

#: ../source/key_projects.rst:375
msgid ""
"See also `auditwheel <https://github.com/pypa/auditwheel>`__, a tool that "
"package developers use to check and fix Python packages they are making in "
"the binary wheel format. It provides functionality to discover dependencies, "
"check metadata for compliance, and repair the wheel and metadata to properly "
"link and include external shared libraries in a package."
msgstr ""
"Vidu ankaŭ `auditwheel <https://github.com/pypa/auditwheel>`__, kiu estas "
"ilo por kontroli kaj ripari Python-pakon en la duuma formo wheel. Ĝi povas "
"malkovri dependecojn, kontroli la observecon de metadatenoj, kaj ripari la "
"wheel kaj metadatenojn, ligante kaj inkluzivante eksterajn komunajn "
"bibliotekojn en pakon."

#: ../source/key_projects.rst:384
msgid "Non-PyPA Projects"
msgstr "Projektoj ekster PyPA"

#: ../source/key_projects.rst:389
msgid "buildout"
msgstr "buildout"

#: ../source/key_projects.rst:391
msgid ""
"`Docs <http://www.buildout.org/en/latest/>`__ | `Issues <https://bugs."
"launchpad.net/zc.buildout>`__ | `PyPI <https://pypi.org/project/zc."
"buildout>`__ | `GitHub <https://github.com/buildout/buildout/>`__"
msgstr ""
"`Dokumentaro <http://www.buildout.org/en/latest/>`__ | `Cimoj <https://bugs."
"launchpad.net/zc.buildout>`__ | `PyPI <https://pypi.org/project/zc."
"buildout>`__ | `GitHub <https://github.com/buildout/buildout/>`__"

#: ../source/key_projects.rst:396
msgid ""
"Buildout is a Python-based build system for creating, assembling and "
"deploying applications from multiple parts, some of which may be non-Python-"
"based.  It lets you create a buildout configuration and reproduce the same "
"software later."
msgstr ""
"Buildout estas Python-baza konstrusistemo por krei, kombini kaj disponigi "
"programon el pluraj partoj, eble ne-Python-bazaj. Verkinte agordon por "
"buildout, oni povas reprodukti la saman programon poste."

#: ../source/key_projects.rst:403
msgid "conda"
msgstr "conda"

#: ../source/key_projects.rst:405
msgid ":doc:`Docs <conda:index>`"
msgstr ":doc:`Dokumentaro <conda:index>`"

#: ../source/key_projects.rst:407
msgid ""
"Conda is a package, dependency, and environment management system for any "
"language — Python, R, Ruby, C/C++, Fortran, and more. It is written in "
"Python and widely used in the Python scientific computing community, due to "
"its support for non-Python compiled libraries and extensions. It is used as "
"the basis of the `Anaconda <https://docs.anaconda.com/anaconda/>`__ Python "
"distribution from Anaconda, Inc. It was originally aimed at the scientific "
"community, but can also be used on its own, or with the :doc:`miniconda "
"<conda:miniconda>`, `miniforge <https://github.com/conda-forge/miniforge>`_ "
"or `pixi <https://pixi.sh/>`_ systems. It is available for Windows, Mac and "
"Linux systems."
msgstr ""
"Conda estas pako-, dependaĵo- kaj medio-administra sistemo por ajna lingvo – "
"Python, R, Ruby, C/C++, Fortrano ktp. Ĝi estas verkita en Python kaj vaste "
"uzata de la scienckomputa komunumo de Python, pro ĝia subteno de ne-Python-"
"aj tradukitaj bibliotekoj kaj etendaĵoj. Ĝi estas uzata kiel la bazo de la "
"Python-distribuo `Anaconda <https://docs.anaconda.com/anaconda/>`__ de "
"Anaconda, Inc. Ĝi origine celis la sciencan komunumon, sed ankaŭ estas "
"uzebla memstare aŭ kun la sistemoj :doc:`miniconda <conda:miniconda>`, "
"`miniforge <https://github.com/conda-forge/miniforge>`_ aŭ `pixi <https://"
"pixi.sh/>`_. Ĝi estas havebla por Windows, Mac kaj Linux."

#: ../source/key_projects.rst:416
msgid ""
"Conda is a completely separate tool from :ref:`pip`, virtualenv and wheel, "
"but provides many of their combined features, such as package management, "
"virtual environment management and deployment of binary extensions and other "
"binary code."
msgstr ""
"Conda estas komplete aparta de :ref:`pip`, virtualenv kaj wheel, sed "
"provizas multajn el la funkcioj de tiuj, kiel administradon de pakoj, "
"administradon de virtualaj medioj kaj disponigadon de duumaj etendaĵoj kaj "
"alia duuma kodo."

#: ../source/key_projects.rst:420
msgid ""
"Conda does not install packages from PyPI -- it can only manage packages "
"built specifically for conda, which can be made available on a \"conda "
"channel\", such as those hosted on `anaconda.org <https://anaconda.org>`__, "
"or a local (e.g. intranet) package server. In addition to the \"default\" "
"channels managed by `Anaconda, Inc. <https://www.anaconda.com/>`__, there "
"are a wide variety of packages from the community supported `conda-forge "
"project <https://conda-forge.org/>`__"
msgstr ""
"Conda ne instalas pakojn el PyPI – ĝi povas nur administri pakojn specife "
"por conda, disponeblajn ĉe «conda-kanalo», kiel tiujn sur `anaconda.org "
"<https://anaconda.org>`__, aŭ ĉe loka (ekz. intrareta) pakservilo. Krom la "
"«aprioraj» kanaloj administrataj de `Anaconda, Inc. <https://www.anaconda."
"com/>`__, ekzistas multaj pakoj en la komunume subtenata `projekto conda-"
"forge <https://conda-forge.org/>`__"

#: ../source/key_projects.rst:426
msgid ""
"Note that :ref:`pip` can be installed into, and work side-by-side with conda "
"for managing :term:`distributions <Distribution Package>` from PyPI. It is "
"also possible to build conda packages from Python source packages using "
"tools such as `conda skeleton <https://docs.conda.io/projects/conda-build/en/"
"latest/user-guide/tutorials/build-pkgs-skeleton.html>`__: a tool to "
"automatically make conda packages from Python packages available on PyPI."
msgstr ""
"Notu, ke oni povas instali :ref:`pip` en conda, funkciigante ĝin apud conda "
"por administri :term:`distribuojn <Distribution Package>` el PyPI. Oni ankaŭ "
"povas konstrui conda-pakon el Python-fontpako per ilo kiel `conda skeleton "
"<https://docs.conda.io/projects/conda-build/en/latest/user-guide/tutorials/"
"build-pkgs-skeleton.html>`__, kiu aŭtomate faras conda-pakon el Python-pako "
"ĉe PyPI."

#: ../source/key_projects.rst:435
msgid "devpi"
msgstr "devpi"

#: ../source/key_projects.rst:437
msgid ""
"`Docs <http://doc.devpi.net/latest/>`__ | :gh:`Issues <devpi/devpi/issues>` "
"| `PyPI <https://pypi.org/project/devpi>`__"
msgstr ""
"`Dokumentaro <http://doc.devpi.net/latest/>`__ | :gh:`Issues <devpi/devpi/"
"issues>` | `PyPI <https://pypi.org/project/devpi>`__"

#: ../source/key_projects.rst:441
msgid ""
"devpi features a powerful PyPI-compatible server and PyPI proxy cache with a "
"complementary command line tool to drive packaging, testing and release "
"activities with Python. devpi also provides a browsable and searchable web "
"interface. devpi supports mirroring PyPI, multiple :term:`package indexes "
"<Package Index>` with inheritance, syncing between these indexes, index "
"replication and fail-over, and package upload."
msgstr ""

#: ../source/key_projects.rst:452
msgid "dumb-pypi"
msgstr "dumb-pypi"

#: ../source/key_projects.rst:454
msgid ""
"`GitHub <https://github.com/chriskuehl/dumb-pypi>`__ | `PyPI <https://pypi."
"org/project/dumb-pypi>`__"
msgstr ""
"`GitHub <https://github.com/chriskuehl/dumb-pypi>`__ | `PyPI <https://pypi."
"org/project/dumb-pypi>`__"

#: ../source/key_projects.rst:457
msgid ""
"dumb-pypi is a simple :term:`package index <Package Index>` static file site "
"generator, which then must be hosted by a static file webserver to become "
"the package index. It supports serving the hash, core-metadata, and yank-"
"status."
msgstr ""
"dumb-pypi estas simpla :term:`pakindeksa <Package Index>` statikdosiera "
"retejogenerilo, kies generitaj dosieroj devas esti gastigitaj de servilo de "
"statikaj dosieroj por funkcii kiel pakindekso. Ĝi subtenas haketaĵojn, "
"kernajn metadatenojn, kaj fortiritecon."

#: ../source/key_projects.rst:464
msgid "enscons"
msgstr "enscons"

#: ../source/key_projects.rst:466
msgid ""
":gh:`Source <dholth/enscons>` | :gh:`Issues <dholth/enscons/issues>` | `PyPI "
"<https://pypi.org/project/enscons>`__"
msgstr ""
":gh:`Fonto <dholth/enscons>` | :gh:`Cimoj <dholth/enscons/issues>` | `PyPI "
"<https://pypi.org/project/enscons>`__"

#: ../source/key_projects.rst:470
msgid ""
"Enscons is a Python packaging tool based on `SCons`_. It builds :ref:`pip`-"
"compatible source distributions and wheels without using distutils or "
"setuptools, including distributions with C extensions. Enscons has a "
"different architecture and philosophy than :ref:`distutils`. Rather than "
"adding build features to a Python packaging system, enscons adds Python "
"packaging to a general purpose build system. Enscons helps you to build "
"sdists that can be automatically built by :ref:`pip`, and wheels that are "
"independent of enscons."
msgstr ""
"Enscons estas pakilo por Python surbaze de `SCons`_. Ĝi konstruas fontajn "
"distribuojn kaj wheel-ojn kongruajn kun :ref:`pip` sen uzado de distutils aŭ "
"setuptools, eĉ por distribuoj kun C-etendaĵoj. La arĥitekturo kaj filozofio "
"de Enscons diferencas de :ref:`distutils`. Anstataŭ aldoni funkcion por "
"konstruado al Python-pakada sistemo, enscons aldonas Python-specifajn "
"funkciojn al ĝeneralcela konstrusistemo. Enscons helpas konstrui fontan "
"distribuon aŭtomate konstrueblan per :ref:`pip` kaj wheel-on sendependan de "
"enscons."

#: ../source/key_projects.rst:485
msgid "Flask-Pypi-Proxy"
msgstr "Flask-Pypi-Proxy"

#: ../source/key_projects.rst:487
msgid ""
"`Docs <https://flask-pypi-proxy.readthedocs.io>`__ | :gh:`GitHub <tzulberti/"
"Flask-PyPi-Proxy>` | `PyPI <https://pypi.org/project/Flask-Pypi-Proxy/>`__"
msgstr ""
"`Dokumentaro <https://flask-pypi-proxy.readthedocs.io>`__ | :gh:`GitHub "
"<tzulberti/Flask-PyPi-Proxy>` | `PyPI <https://pypi.org/project/Flask-Pypi-"
"Proxy/>`__"

#: ../source/key_projects.rst:491 ../source/key_projects.rst:685
#: ../source/key_projects.rst:744
msgid "Not maintained, project archived"
msgstr "Ne mastrumata, projekto enarĥivigita"

#: ../source/key_projects.rst:493
msgid ""
"Flask-Pypi-Proxy is a :term:`package index <Package Index>` as a cached "
"proxy for PyPI."
msgstr ""
"Flask-Pypi-Proxy estas :term:`pakindekso <Package Index>`, kiu estas "
"kaŝmemora perilo por PyPI."

#: ../source/key_projects.rst:499
msgid "Hashdist"
msgstr "Hashdist"

#: ../source/key_projects.rst:501
msgid ""
"`Docs <https://hashdist.readthedocs.io/en/latest/>`__ | `GitHub <https://"
"github.com/hashdist/hashdist/>`__"
msgstr ""
"`Dokumentaro <https://hashdist.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/hashdist/hashdist/>`__"

#: ../source/key_projects.rst:504
msgid ""
"Hashdist is a library for building non-root software distributions. Hashdist "
"is trying to be “the Debian of choice for cases where Debian technology "
"doesn’t work”. The best way for Pythonistas to think about Hashdist may be a "
"more powerful hybrid of :ref:`virtualenv` and :ref:`buildout`. It is aimed "
"at solving the problem of installing scientific software, and making package "
"distribution stateless, cached, and branchable. It is used by some "
"researchers but has been lacking in maintenance since 2016."
msgstr ""
"Hashdist estas biblioteko por konstrui neradikan programan distribuon. "
"Hashdist celas esti «la Debiano por tiuj kazoj, en kiuj Debiano ne taŭgas». "
"Python-uzanto pensu pri Hashdist kiel potenca hibrido de :ref:`virtualenv` "
"kaj :ref:`buildout`. Ĝi celas solvi la problemon de instalado de scienca "
"programo kaj igi distribuadon de pakoj senstata, enkaŝmemorigita kaj "
"branĉebla. Ĝi estas uzata de kelkaj esploristoj, sed ne estas prizorgata "
"ekde 2016."

#: ../source/key_projects.rst:516
msgid "Maturin"
msgstr "Maturin"

#: ../source/key_projects.rst:518
msgid ""
"`Docs <https://www.maturin.rs>`__ | `GitHub <https://github.com/PyO3/"
"maturin>`__"
msgstr ""
"`Dokumentaro <https://www.maturin.rs>`__ | `GitHub <https://github.com/PyO3/"
"maturin>`__"

#: ../source/key_projects.rst:521
msgid ""
"Maturin is a build backend for Rust extension modules, also written in Rust. "
"It supports building wheels for python 3.7+ on Windows, Linux, macOS and "
"FreeBSD, can upload them to PyPI and has basic PyPy and GraalPy support."
msgstr ""
"Maturin estas konstrua malfasado por etendaĵo-modulo verkita en Rust, kaj "
"estas mem verkita en Rust. Ĝi subtenas konstrui wheel por Python 3.7+ sur "
"Windows, Linux, macOS kaj FreeBSD. Ĝi povas alŝuti wheel al PyPI kaj ankaŭ "
"baze subtenas PyPY kaj GraalPy."

#: ../source/key_projects.rst:529
msgid "meson-python"
msgstr "meson-python"

#: ../source/key_projects.rst:531
msgid ""
"`Docs <https://meson-python.readthedocs.io/en/latest/>`__ | `GitHub <https://"
"github.com/mesonbuild/meson-python>`__"
msgstr ""
"`Dokumentaro <https://meson-python.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/mesonbuild/meson-python>`__"

#: ../source/key_projects.rst:534
msgid ""
"``meson-python`` is a build backend that uses the Meson_ build system. It "
"enables Python package authors to use Meson_ as the build system for their "
"package. It supports a wide variety of languages, including C, and is able "
"to fill the needs of most complex build configurations."
msgstr ""
"``meson-python`` estas konstrua malfasado uzanta la konstrusistemon Meson_. "
"Ĝi permesas al aŭtoroj de Python-pakoj uzi Meson_ kiel la konstrusistemon de "
"sia pako. Ĝi subtenas diversajn lingvojn inkluzive de C kaj povas plenumi la "
"bezonojn de plej komplikaj konstruagordoj."

#: ../source/key_projects.rst:544
msgid "multibuild"
msgstr "multibuild"

#: ../source/key_projects.rst:546
msgid "`GitHub <https://github.com/multi-build/multibuild>`__"
msgstr "`GitHub <https://github.com/multi-build/multibuild>`__"

#: ../source/key_projects.rst:548
msgid ""
"Multibuild is a set of CI scripts for building and testing Python :term:"
"`wheels <Wheel>` for Linux, macOS, and (less flexibly) Windows. Also see :"
"ref:`cibuildwheel`."
msgstr ""
"Multibuild estas kontinuintegrada programaro por konstrui kaj testi Python-:"
"term:`wheel <Wheel>` por Linux, macOS, kaj (malpli flekseble) Windows. Ankaŭ "
"vidu :ref:`cibuildwheel`."

#: ../source/key_projects.rst:554
msgid "nginx_pypi_cache"
msgstr "nginx_pypi_cache"

#: ../source/key_projects.rst:556
msgid ":gh:`GitHub <hauntsaninja/nginx_pypi_cache>`"
msgstr ":gh:`GitHub <hauntsaninja/nginx_pypi_cache>`"

#: ../source/key_projects.rst:558
msgid ""
"nginx_pypi_cache is a :term:`package index <Package Index>` caching proxy "
"using `nginx <https://nginx.org/en/>`_."
msgstr ""
"nginx_pypi_cache estas :term:`pakindeksa <Package Index>` kaŝmemora perilo "
"per `nginx <https://nginx.org/en/>`_."

#: ../source/key_projects.rst:564
msgid "pdm"
msgstr "pdm"

#: ../source/key_projects.rst:566
msgid ""
"`Docs <https://pdm.fming.dev/>`__ | `GitHub <https://github.com/pdm-project/"
"pdm/>`__ | `PyPI <https://pypi.org/project/pdm>`__"
msgstr ""
"`Dokumentaro <https://pdm.fming.dev/>`__ | `GitHub <https://github.com/pdm-"
"project/pdm/>`__ | `PyPI <https://pypi.org/project/pdm>`__"

#: ../source/key_projects.rst:570
msgid ""
"PDM is a modern Python package manager. It uses :term:`pyproject.toml` to "
"store project metadata as defined in :pep:`621`."
msgstr ""
"PDM estas moderna Python-pakadministrilo. Ĝi uzas :term:`pyproject.toml` por "
"konservi projektajn metadatenojn laŭ :pep:`621`."

#: ../source/key_projects.rst:578
msgid ""
"`Docs <https://pex.readthedocs.io/en/latest/>`__ | `GitHub <https://github."
"com/pantsbuild/pex/>`__ | `PyPI <https://pypi.org/project/pex>`__"
msgstr ""
"`Dokumentaro <https://pex.readthedocs.io/en/latest/>`__ | `GitHub <https://"
"github.com/pantsbuild/pex/>`__ | `PyPI <https://pypi.org/project/pex>`__"

#: ../source/key_projects.rst:582
msgid ""
"Pex is a tool for generating :file:`.pex` (Python EXecutable) files, "
"standalone Python environments in the spirit of :ref:`virtualenv`. PEX files "
"are :doc:`zipapps <python:library/zipapp>` that make deployment of Python "
"applications as simple as ``cp``. A single PEX file can support multiple "
"target platforms and can be created from standard :ref:`pip`-resolvable "
"requirements, a lockfile generated with ``pex3 lock ...`` or even another "
"PEX. PEX files can optionally have tools embedded that support turning the "
"PEX file into a standard venv, graphing dependencies and more."
msgstr ""
"Pex estas ilo por generi :file:`.pex` (Python EXecutable)-dosierojn, kiuj "
"estas memstaraj Python-medioj similaj al :ref:`virtualenv`. PEX-dosiero "
"estas :doc:`zipapp <python:library/zipapp>`, igante disponigon de Python-"
"programo tiel simpla kiel ``cp``. Unu PEX-dosiero povas subteni plurajn "
"celajn platformojn kaj estas kreebla el normaj :ref:`pip`-solveblaj "
"postuloj, lockfile generita per ``pex3 lock …`` aŭ eĉ alia PEX. PEX-dosiero "
"ankaŭ povas havi inkluzivitajn ilojn estigante la PEX-dosieron ordinara "
"virtuala medio, grafigi dependecojn, ktp."

#: ../source/key_projects.rst:594
msgid "pip-tools"
msgstr "pip-tools"

#: ../source/key_projects.rst:596
msgid ""
"`Docs <https://pip-tools.readthedocs.io/en/latest/>`__ | `GitHub <https://"
"github.com/jazzband/pip-tools/>`__ | `PyPI <https://pypi.org/project/pip-"
"tools/>`__"
msgstr ""
"`Dokumentaro <https://pip-tools.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/jazzband/pip-tools/>`__ | `PyPI <https://pypi.org/"
"project/pip-tools/>`__"

#: ../source/key_projects.rst:600
msgid ""
"pip-tools is a suite of tools meant for Python system administrators and "
"release managers who particularly want to keep their builds deterministic "
"yet stay up to date with new versions of their dependencies. Users can "
"specify particular release of their dependencies via hash, conveniently make "
"a properly formatted list of requirements from information in other parts of "
"their program, update all dependencies (a feature :ref:`pip` currently does "
"not provide), and create layers of constraints for the program to obey."
msgstr ""
"pip-tools estas ilaro por tiuj sistemadministrantoj kaj eldonmastrumistoj de "
"Python, kiuj volas determinisman konstruadon kaj ĝisdatajn versiojn de "
"dependecoj. Uzanto povas specifi iun eldono de dependeco per haketaĵo, "
"facile fari liston de postuloj el informoj en aliaj partoj de la programo, "
"ĝisdatigi ĉiujn dependecojn (jen funkcio mankanta en :ref:`pip` aktuale), "
"kaj krei tavolojn da limigoj obeotaj de la programo."

#: ../source/key_projects.rst:612
msgid "pip2pi"
msgstr "pip2pi"

#: ../source/key_projects.rst:614
msgid ""
":gh:`GitHub <wolever/pip2pi>` | `PyPI <https://pypi.org/project/pip2pi/>`__"
msgstr ""
":gh:`GitHub <wolever/pip2pi>` | `PyPI <https://pypi.org/project/pip2pi/>`__"

#: ../source/key_projects.rst:617
msgid ""
"pip2pi is a :term:`package index <Package Index>` server where specific "
"packages are manually synchronised."
msgstr ""
"pip2pi estas :term:`pakindeksa <Package Index>` servilo, je kiu specifaj "
"pakoj estas malaŭtomate sinkronigitaj."

#: ../source/key_projects.rst:623
msgid "piwheels"
msgstr "piwheels"

#: ../source/key_projects.rst:625
msgid ""
"`Website <https://www.piwheels.org/>`__ | :doc:`Docs <piwheels:index>` | "
"`GitHub <https://github.com/piwheels/piwheels/>`__"
msgstr ""
"`Retejo <https://www.piwheels.org/>`__ | :doc:`Dokumentaro <piwheels:index>` "
"| `GitHub <https://github.com/piwheels/piwheels/>`__"

#: ../source/key_projects.rst:629
msgid ""
"piwheels is a website, and software underpinning it, that fetches source "
"code distribution packages from PyPI and compiles them into binary wheels "
"that are optimized for installation onto Raspberry Pi computers. Raspberry "
"Pi OS pre-configures pip to use piwheels.org as an additional index to PyPI."
msgstr ""
"piwheels estas retejo, kaj programo funkciiganta la retejon, kiu elŝutas "
"fontajn distribuajn pakojn el PyPI kaj tradukas ilin al duumaj wheel-oj "
"optimumigitaj por komputiloj Raspberry Pi. La mastruma sistemo Raspberry Pi "
"OS apriore agordas pip por uzi piwheels.org kiel ekstran indekson kune kun "
"PyPI."

#: ../source/key_projects.rst:638
msgid "poetry"
msgstr "poetry"

#: ../source/key_projects.rst:640
msgid ""
"`Docs <https://python-poetry.org/>`__ | `GitHub <https://github.com/python-"
"poetry/poetry>`__ | `PyPI <https://pypi.org/project/poetry/>`__"
msgstr ""
"`Dokumentaro <https://python-poetry.org/>`__ | `GitHub <https://github.com/"
"python-poetry/poetry>`__ | `PyPI <https://pypi.org/project/poetry/>`__"

#: ../source/key_projects.rst:644
msgid ""
"poetry is a command-line tool to handle dependency installation and "
"isolation as well as building and packaging of Python packages. It uses "
"``pyproject.toml`` and, instead of depending on the resolver functionality "
"within :ref:`pip`, provides its own dependency resolver. It attempts to "
"speed users' experience of installation and dependency resolution by locally "
"caching metadata about dependencies."
msgstr ""
"poezio estas komandlinia ilo por instali dependecojn kaj por izoli, kaj "
"ankaŭ por konstrui kaj paki Python-pakojn. Ĝi uzas ``pyproject.toml`` kaj "
"(ne uzante la solvilon de :ref:`pip`) provizas sian propran dependeco-"
"solvilon. Ĝi provas rapidigi la sperton de uzantoj pri instalado kaj solvado "
"de dependecoj, loke enkaŝmemorigante metadatenojn pri dependecoj."

#: ../source/key_projects.rst:654
msgid "proxpi"
msgstr "proxpi"

#: ../source/key_projects.rst:656
msgid ""
":gh:`GitHub <EpicWink/proxpi>` | `PyPI <https://pypi.org/project/proxpi/>`__"
msgstr ""
":gh:`GitHub <EpicWink/proxpi>` | `PyPI <https://pypi.org/project/proxpi/>`__"

#: ../source/key_projects.rst:659
msgid ""
"proxpi is a simple :term:`package index <Package Index>` which proxies PyPI "
"and other indexes with caching."
msgstr ""
"proxpi estas simpla :term:`pakindekso <Package Index>`, kiu peras PyPI kaj "
"aliajn indeksojn kun kaŝmemoro."

#: ../source/key_projects.rst:665
msgid "Pulp-python"
msgstr "Pulp-python"

#: ../source/key_projects.rst:667
msgid ""
"`Docs <https://docs.pulpproject.org/pulp_python/>`__ | :gh:`GitHub <pulp/"
"pulp_python>` | `PyPI <https://pypi.org/project/pulp-python/>`__"
msgstr ""
"`Dokumentaro <https://docs.pulpproject.org/pulp_python/>`__ | :gh:`GitHub "
"<pulp/pulp_python>` | `PyPI <https://pypi.org/project/pulp-python/>`__"

#: ../source/key_projects.rst:671
msgid ""
"Pulp-python is the Python :term:`package index <Package Index>` plugin for "
"`Pulp <https://pulpproject.org/>`_. Pulp-python supports mirrors backed by "
"local or `AWS S3`_, package upload, and proxying to multiple package indexes."
msgstr ""
"Pulp-python estas la Python-a :term:`pakindeksa <Package Index>` "
"kromprogramo por `Pulp <https://pulpproject.org/>`_. Pulp-python subtenas "
"spegulon bazitan sur lokaj dosieroj aŭ `AWS S3`_, alŝutadon de pakoj, kaj "
"peradon al pluraj pakindeksoj."

#: ../source/key_projects.rst:679
msgid "PyPI Cloud"
msgstr "PyPI Cloud"

#: ../source/key_projects.rst:681
msgid ""
"`Docs <https://pypicloud.readthedocs.io/>`__ | :gh:`GitHub <stevearc/"
"pypicloud>` | `PyPI <https://pypi.org/project/pypicloud/>`__"
msgstr ""
"`Dokumentaro <https://pypicloud.readthedocs.io/>`__ | :gh:`GitHub <stevearc/"
"pypicloud>` | `PyPI <https://pypi.org/project/pypicloud/>`__"

#: ../source/key_projects.rst:687
msgid ""
"PyPI Cloud is a :term:`package index <Package Index>` server, backed by `AWS "
"S3`_ or another cloud storage service, or local files. PyPI Cloud supports "
"redirect/cached proxying for PyPI, as well as authentication and "
"authorisation."
msgstr ""
"PyPI Cloud estas :term:`pakindeksa <Package Index>` servilo uzanta `AWS S3`_ "
"aŭ alian nubkonservejan servon aŭ lokajn dosierojn. PyPI Cloud subtenas "
"redirektadon kaj kaŝmemoran peradon al PyPI, aŭtentikigon kaj rajtigon."

#: ../source/key_projects.rst:695
msgid "pypiprivate"
msgstr "pypiprivate"

#: ../source/key_projects.rst:697
msgid ""
":gh:`GitHub <helpshift/pypiprivate>` | `PyPI <https://pypi.org/project/"
"pypiprivate/>`__"
msgstr ""
":gh:`GitHub <helpshift/pypiprivate>` | `PyPI <https://pypi.org/project/"
"pypiprivate/>`__"

#: ../source/key_projects.rst:700
msgid ""
"pypiprivate serves a local (or `AWS S3`_-hosted) directory of packages as a :"
"term:`package index <Package Index>`."
msgstr ""
"pypiprivate serves lokan (aŭ ĉe `AWS S3`_ gastigitan) dosierujon da pakoj "
"kiel :term:`pakindekso <Package Index>`."

#: ../source/key_projects.rst:706
msgid "pypiserver"
msgstr "pypiserver"

#: ../source/key_projects.rst:708
msgid ""
"`GitHub <https://github.com/pypiserver/pypiserver>`__ | `PyPI <https://pypi."
"org/project/pypiserver/>`__"
msgstr ""
"`GitHub <https://github.com/pypiserver/pypiserver>`__ | `PyPI <https://pypi."
"org/project/pypiserver/>`__"

#: ../source/key_projects.rst:711
msgid ""
"pypiserver is a minimalist application that serves as a private Python :term:"
"`package index <Package Index>` (from a local directory) within "
"organizations, implementing a simple API and browser interface. You can "
"upload private packages using standard upload tools, and users can download "
"and install them with :ref:`pip`, without publishing them publicly. "
"Organizations who use pypiserver usually download packages both from "
"pypiserver and from PyPI."
msgstr ""
"pypiserver estas minimumisma programo servanta privantan :term:`Python-"
"pakindekson <Package Index>` (el loka dosierujo) por organizaĵo, realiganta "
"simplan API kaj TTT-legilan fasadon. Oni povas alŝuti privatan pakon per "
"norma alŝutilo, uzanto povas elŝuti kaj instali pakon per :ref:`pip`, sen "
"publika eldonado. Organizaĵo uzanta pypiserver kutime elŝutas pakojn el kaj "
"pypiserver kaj PyPI."

#: ../source/key_projects.rst:722
msgid "PyScaffold"
msgstr "PyScaffold"

#: ../source/key_projects.rst:724
msgid ""
"`Docs <https://pyscaffold.org>`__ | `GitHub <https://github.com/pyscaffold/"
"pyscaffold>`__ | `PyPI <https://pypi.org/project/pyscaffold/>`__"
msgstr ""
"`Dokumentaro <https://pyscaffold.org>`__ | `GitHub <https://github.com/"
"pyscaffold/pyscaffold>`__ | `PyPI <https://pypi.org/project/pyscaffold/>`__"

#: ../source/key_projects.rst:728
msgid ""
"PyScaffold is a project generator for bootstrapping Python packages, ready "
"to be shared on PyPI and installable via :ref:`pip`. It relies on a set of "
"sane default configurations for established tools (such as :ref:"
"`setuptools`, pytest_ and Sphinx_) to provide a productive environment so "
"developers can start coding right away. PyScaffold can also be used with "
"existing projects to make packaging easier."
msgstr ""

#: ../source/key_projects.rst:739
msgid "pywharf"
msgstr "pywharf"

#: ../source/key_projects.rst:741
msgid ""
":gh:`GitHub <pywharf/pywharf>` | `PyPI <https://pypi.org/project/pywharf>`__"
msgstr ""
":gh:`GitHub <pywharf/pywharf>` | `PyPI <https://pypi.org/project/pywharf>`__"

#: ../source/key_projects.rst:746
msgid ""
"pywharf is a :term:`package index <Package Index>` server, serving files "
"locally or from `GitHub <https://github.com/>`_."
msgstr ""
"pywharf estas :term:`pakindeksa <Package Index>` servilo, servanta dosierojn "
"loke aŭ el `GitHub <https://github.com/>`_."

#: ../source/key_projects.rst:752
msgid "scikit-build"
msgstr "scikit-build"

#: ../source/key_projects.rst:754
msgid ""
"`Docs <https://scikit-build.readthedocs.io/en/latest/>`__ | `GitHub <https://"
"github.com/scikit-build/scikit-build/>`__ | `PyPI <https://pypi.org/project/"
"scikit-build>`__"
msgstr ""
"`Dokumentaro <https://scikit-build.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/scikit-build/scikit-build/>`__ | `PyPI <https://pypi.org/"
"project/scikit-build>`__"

#: ../source/key_projects.rst:758
msgid ""
"Scikit-build is a :ref:`setuptools` wrapper for CPython that builds C/C++/"
"Fortran/Cython extensions It uses `cmake <https://pypi.org/project/cmake>`__ "
"(available on PyPI) to provide better support for additional compilers, "
"build systems, cross compilation, and locating dependencies and their "
"associated build requirements. To speed up and parallelize the build of "
"large projects, the user can install `ninja <https://pypi.org/project/"
"ninja>`__ (also available on PyPI)."
msgstr ""
"Scikit-build estas volvilo de :ref:`setuptools` por CPython konstruanta C/C+"
"+/Fortran/Cython-etendaĵojn. Ĝi uzas `cmake <https://pypi.org/project/"
"cmake>`__ (haveblan ĉe PyPI) por pli bone subteni pliajn tradukilojn, "
"konstrusistemojn, intertradukadon, kaj lokigado de dependecoj kaj rilataj "
"konstruo-postuloj. Por rapidigi kaj paraleligi konstruadon de granda "
"projekto, oni povas instali `ninja <https://pypi.org/project/ninja>`__ "
"(ankaŭ haveblan ĉe PyPI)."

#: ../source/key_projects.rst:769
msgid "scikit-build-core"
msgstr "scikit-build-core"

#: ../source/key_projects.rst:771
msgid ""
"`Docs <https://scikit-build-core.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/scikit-build/scikit-build-core/>`__ | `PyPI <https://"
"pypi.org/project/scikit-build-core>`__"
msgstr ""
"`Dokumentaro <https://scikit-build-core.readthedocs.io/en/latest/>`__ | "
"`GitHub <https://github.com/scikit-build/scikit-build-core/>`__ | `PyPI "
"<https://pypi.org/project/scikit-build-core>`__"

#: ../source/key_projects.rst:775
msgid ""
"Scikit-build-core is a build backend for CPython C/C++/Fortran/Cython "
"extensions.  It enables users to write extensions with `cmake <https://pypi."
"org/project/cmake>`__ (available on PyPI) to provide better support for "
"additional compilers, build systems, cross compilation, and locating "
"dependencies and their associated build requirements. CMake/Ninja are "
"automatically downloaded from PyPI if not available on the system."
msgstr ""
"Scikit-build-core estas konstrua malfasado por etendaĵoj por CPython en C/C+"
"+/Fortran/Cython.  Ĝi permesas verki etendaĵojn per `cmake <https://pypi.org/"
"project/cmake>`__ (havebla ĉe PyPI) por pli bone subteni pliajn tradukilojn, "
"konstrusistemojn, intertradukadon, kaj serĉadon de dependecoj kaj asociitaj "
"konstruaj postuloj. Ĝi aŭtomate elŝutos CMake/Ninja el PyPI, se ili ne jam "
"ekzistas sur la sistemo."

#: ../source/key_projects.rst:785
msgid "shiv"
msgstr "shiv"

#: ../source/key_projects.rst:787
msgid ""
"`Docs <https://shiv.readthedocs.io/en/latest/>`__ | `GitHub <https://github."
"com/linkedin/shiv>`__ | `PyPI <https://pypi.org/project/shiv/>`__"
msgstr ""
"`Dokumentaro <https://shiv.readthedocs.io/en/latest/>`__ | `GitHub <https://"
"github.com/linkedin/shiv>`__ | `PyPI <https://pypi.org/project/shiv/>`__"

#: ../source/key_projects.rst:791
msgid ""
"shiv is a command line utility for building fully self contained Python "
"zipapps as outlined in :pep:`441`, but with all their dependencies included. "
"Its primary goal is making distributing Python applications and command line "
"tools fast & easy."
msgstr ""
"shiv estas komandlinia ilo por konstrui plene memsufiĉa Python-zip-aplikaĵo "
"laŭ :pep:`441`, sed inkluzivante ĉiajn dependaĵojn. Ĝi ĉefe celas rapidigi "
"kaj faciligi distribuadon de Python-programoj kaj komandliniaj iloj."

#: ../source/key_projects.rst:799
msgid "simpleindex"
msgstr "simpleindex"

#: ../source/key_projects.rst:801
msgid ""
":gh:`GitHub <uranusjr/simpleindex>` | `PyPI <https://pypi.org/project/"
"simpleindex/>`__"
msgstr ""
":gh:`GitHub <uranusjr/simpleindex>` | `PyPI <https://pypi.org/project/"
"simpleindex/>`__"

#: ../source/key_projects.rst:804
msgid ""
"simpleindex is a :term:`package index <Package Index>` which routes URLs to "
"multiple package indexes (including PyPI), serves local (or cloud-hosted, "
"for example `AWS S3`_, with a custom plugin) directories of packages, and "
"supports custom plugins."
msgstr ""
"simpleindex estas :term:`pakindekso <Package Index>`, kiu enkursigas "
"retadresojn al pluaj pakindeksoj (inkluzive de PyPI), disponigas lokajn (aŭ "
"nube gastigitajn, ekzemple ĉe `AWS S3`_, per kromprogramo) dosierujojn de "
"pakoj, kaj subtenas kromprogramojn."

#: ../source/key_projects.rst:814
msgid ""
":doc:`Docs <spack:index>` | `GitHub <https://github.com/spack/spack>`__ | "
"`Paper <https://www.computer.org/csdl/proceedings-article/"
"sc/2015/2807623/12OmNBf94Xq>`__ | `Slides <https://tgamblin.github.io/files/"
"Gamblin-Spack-SC15-Talk.pdf>`__"
msgstr ""
":doc:`Dokumentaro <spack:index>` | `GitHub <https://github.com/spack/"
"spack>`__ | `Artikolo <https://www.computer.org/csdl/proceedings-article/"
"sc/2015/2807623/12OmNBf94Xq>`__ | `Lumbildoj <https://tgamblin.github.io/"
"files/Gamblin-Spack-SC15-Talk.pdf>`__"

#: ../source/key_projects.rst:819
msgid ""
"A flexible package manager designed to support multiple versions, "
"configurations, platforms, and compilers.  Spack is like Homebrew, but "
"packages are written in Python and parameterized to allow easy swapping of "
"compilers, library versions, build options, etc. Arbitrarily many versions "
"of packages can coexist on the same system. Spack was designed for rapidly "
"building high performance scientific applications on clusters and "
"supercomputers."
msgstr ""

#: ../source/key_projects.rst:827
msgid ""
"Spack is not in PyPI (yet), but it requires no installation and can be used "
"immediately after cloning from GitHub."
msgstr ""
"Spack ne estas en PyPI (ankoraŭ), sed ĝi postulas neniun instaladon kaj "
"estas uzebla tuj post klonado el GitHub."

#: ../source/key_projects.rst:833
msgid "zest.releaser"
msgstr "zest.releaser"

#: ../source/key_projects.rst:835
msgid ""
"`Docs <https://zestreleaser.readthedocs.io/en/latest/>`__ | `GitHub <https://"
"github.com/zestsoftware/zest.releaser/>`__ | `PyPI <https://pypi.org/project/"
"zest.releaser/>`__"
msgstr ""
"`Dokumentaro <https://zestreleaser.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/zestsoftware/zest.releaser/>`__ | `PyPI <https://pypi."
"org/project/zest.releaser/>`__"

#: ../source/key_projects.rst:839
msgid ""
"``zest.releaser`` is a Python package release tool providing an abstraction "
"layer on top of :ref:`twine`. Python developers use ``zest.releaser`` to "
"automate incrementing package version numbers, updating changelogs, tagging "
"releases in source control, and uploading new packages to PyPI."
msgstr ""
"``zest.releaser`` estas Python-paka eldonilo, kiu estas abstrakta tavolo "
"sur :ref:`twine`. Python-programisto uzas ``zest.releaser`` por aŭtomatigi "
"alkrementadon de versiaj numeroj, ĝisdatigadon de ŝanĝoprotokolo, etikedigon "
"de eldonoj en versikontrola sistemo, kaj alŝutadon de nova pako al PyPI."

#: ../source/key_projects.rst:846
msgid "Standard Library Projects"
msgstr "Projektoj pri la Norma Biblioteko"

#: ../source/key_projects.rst:851
msgid "ensurepip"
msgstr "ensurepip"

#: ../source/key_projects.rst:853
msgid ""
"`Docs <https://docs.python.org/3/library/ensurepip.html>`__ | `Issues "
"<https://bugs.python.org/>`__"
msgstr ""
"`Dokumentaro <https://docs.python.org/3/library/ensurepip.html>`__ | `Cimoj "
"<https://bugs.python.org/>`__"

#: ../source/key_projects.rst:856
msgid ""
"A package in the Python Standard Library that provides support for "
"bootstrapping :ref:`pip` into an existing Python installation or virtual "
"environment.  In most cases, end users won't use this module, but rather it "
"will be used during the build of the Python distribution."
msgstr ""
"Pako en la Norma Biblioteko de Python, kiu ebligas instaladon de :ref:`pip` "
"al ekzistanta Python-instalo aŭ virtuala medio. Ordinare uzanto ne rekte "
"uzas tiun modulon; ĝi estas uzata dum la konstruado de la Python-distribuo."

#: ../source/key_projects.rst:864
msgid "http.server"
msgstr "http.server"

#: ../source/key_projects.rst:866
msgid ""
":doc:`Docs <python:library/http.server>` | :gh:`Issues <python/cpython/"
"issues>`"
msgstr ""
":doc:`Dokumentaro <python:library/http.server>` | :gh:`Cimoj <python/cpython/"
"issues>`"

#: ../source/key_projects.rst:869
msgid ""
"A package and command-line interface which can host a directory as a "
"website, for example as a :term:`package index <Package Index>` (see :ref:"
"`Hosting your Own Simple Repository`)."
msgstr ""
"Pako kaj komandlinia interfaco, kiu gastigas dosierujon al retejo, ekzemple "
"kiel :term:`pakindekson <Package Index>` (vidu :ref:`Gastigi vian Propran "
"Simplan Deponejon <Hosting your Own Simple Repository>`)."

#: ../source/key_projects.rst:876
msgid "venv"
msgstr "venv"

#: ../source/key_projects.rst:878
msgid ""
"`Docs <https://docs.python.org/3/library/venv.html>`__ | `Issues <https://"
"github.com/python/cpython/issues>`__"
msgstr ""
"`Dokumentaro <https://docs.python.org/3/library/venv.html>`__ | `Cimoj "
"<https://github.com/python/cpython/issues>`__"

#: ../source/key_projects.rst:881
msgid ""
"A package in the Python Standard Library (starting with Python 3.3) for "
"creating :term:`Virtual Environments <Virtual Environment>`.  For more "
"information, see the section on :ref:`Creating and using Virtual "
"Environments`."
msgstr ""
"Pako en la Norma Biblioteko de Python (ekde Python 3.3) por krei :term:"
"`Virtualan Medion <Virtual Environment>`.  Por pli da informoj, vidu la "
"paragrafon :ref:`Krei kaj uzi virtualajn mediojn <Creating and using Virtual "
"Environments>`."

#: ../source/news.rst:2
msgid "News"
msgstr "Novaĵoj"

#: ../source/news.rst:4
msgid ""
"This document is not currently updated. Previously, the document highlighted "
"changes in Python packaging."
msgstr ""
"Ĉi tiu dokumento estas ne plu ĝisdatigata. Antaŭe, ĝi reliefigis ŝanĝojn pri "
"Python-pakado."

#: ../source/news.rst:9
msgid "September 2019"
msgstr "Septembro 2019"

#: ../source/news.rst:10
msgid "Added a guide about publishing dists via GitHub Actions. (:pr:`647`)"
msgstr ""
"Aldonis gvidilon pri eldonado de distribuoj per GitHub Actions. (:pr:`647`)"

#: ../source/news.rst:13
msgid "August 2019"
msgstr "Aŭgusto 2019"

#: ../source/news.rst:14
msgid "Updated to use :file:`python3 -m` when installing pipx. (:pr:`631`)"
msgstr "Ekuzis :file:`python3 -m` dum instalado de pipx. (:pr:`631`)"

#: ../source/news.rst:17
msgid "July 2019"
msgstr "Julio 2019"

#: ../source/news.rst:18
msgid "Marked all PEP numbers with the :pep: role. (:pr:`629`)"
msgstr "Markis ĉiujn PEP-numerojn per la rolo :pep:. (:pr:`629`)"

#: ../source/news.rst:19
msgid "Upgraded Sphinx version and removed pypa.io intersphinx. (:pr:`625`)"
msgstr ""
"Ĝisdatigis version de Sphinx kaj forigis pypa.io intersphinx. (:pr:`625`)"

#: ../source/news.rst:20
msgid "Mentioned :file:`find_namespace_packages`. (:pr:`622`)"
msgstr "Menciis :file:`find_namespace_packages`. (:pr:`622`)"

#: ../source/news.rst:21
msgid "Updated directory layout examples for consistency. (:pr:`611`)"
msgstr "Ĝisdatigis ekzemplojn de dosieruja aranĝo por unuformeco. (:pr:`611`)"

#: ../source/news.rst:22
msgid "Updated Bandersnatch link to GitHub. (:pr:`623`)"
msgstr "Ĝisdatigis la hiperligon por Bandersnatch al GitHub. (:pr:`623`)"

#: ../source/news.rst:25
msgid "June 2019"
msgstr "Junio 2019"

#: ../source/news.rst:26
msgid "Fixed some typos. (:pr:`620`)"
msgstr "Riparis tajperarojn. (:pr:`620`)"

#: ../source/news.rst:29
msgid "May 2019"
msgstr "Majo 2019"

#: ../source/news.rst:30
msgid "Added :file:`python_requires` usage to packaging tutorial. (:pr:`613`)"
msgstr ""
"Klarigis uzadon de :file:`python_requires` en lernilo pri pakado. (:pr:`613`)"

#: ../source/news.rst:31
msgid "Added a MANIFEST.in guide page. (:pr:`609`)"
msgstr "Aldonis gvidan paĝon pri MANIFEST.in. (:pr:`609`)"

#: ../source/news.rst:34
msgid "April 2019"
msgstr "Aprilo 2019"

#: ../source/news.rst:35
msgid ""
"Added a mention for :file:`shiv` in the key projects section. (:pr:`608`)"
msgstr "Menciis :file:`shiv` en la listo de ĉefprojektoj. (:pr:`608`)"

#: ../source/news.rst:36
msgid "Reduced emphasis on virtualenv. (:pr:`606`)"
msgstr "Malemfazis virtualenv. (:pr:`606`)"

#: ../source/news.rst:39
msgid "March 2019"
msgstr "Marto 2019"

#: ../source/news.rst:40
msgid "Moved single-sourcing guide version option to Python 3. (:pr:`605`)"
msgstr ""
"Ĝisdatigis opcion en gvidilo pri unufontigo de versio al Python 3. (:pr:"
"`605`)"

#: ../source/news.rst:41
msgid "Covered RTD details for contributing. (:pr:`600`)"
msgstr "Diskutis RTD-detalojn por kontribuado. (:pr:`600`)"

#: ../source/news.rst:44
msgid "February 2019"
msgstr "Februaro 2019"

#: ../source/news.rst:45
msgid ""
"Elaborate upon the differences between the tutorial and the real packaging "
"process. (:pr:`602`)"
msgstr ""
"Klarigis la diferencojn inter la lernilo kaj la reala pakada procezo. (:pr:"
"`602`)"

#: ../source/news.rst:46
msgid "Added instructions to install Python CLI applications. (:pr:`594`)"
msgstr ""
"Aldonis instrukciojn por instali komandlinian Python-programojn. (:pr:`594`)"

#: ../source/news.rst:49
msgid "January 2019"
msgstr "Januaro 2019"

#: ../source/news.rst:50
msgid "Added :file:`--no-deps` to the packaging tutorial. (:pr:`593`)"
msgstr "Aldonis :file:`--no-deps` al la pakada lernilo. (:pr:`593`)"

#: ../source/news.rst:51
msgid "Updated Sphinx and Nox. (:pr:`591`)"
msgstr "Ĝisdatigis Sphinx kaj Nox. (:pr:`591`)"

#: ../source/news.rst:52
msgid "Referenced Twine from Python3. (:pr:`581`)"
msgstr "Menciis Twine el Python3. (:pr:`581`)"

#: ../source/news.rst:55
msgid "December 2018"
msgstr "Decembro 2018"

#: ../source/news.rst:56
msgid "No programmers in the office!"
msgstr "Neniu programisto en la oficejo!"

#: ../source/news.rst:59
msgid "November 2018"
msgstr "Novembro 2018"

#: ../source/news.rst:60
msgid "Removed landing page link to PyPI migration guide. (:pr:`575`)"
msgstr "Forigis ĉefpaĝan hiperligon al migrada gvidilo por PyPI. (:pr:`575`)"

#: ../source/news.rst:61
msgid "Changed bumpversion to bump2version. (:pr:`572`)"
msgstr "Ŝanĝis bumpversion al bump2version. (:pr:`572`)"

#: ../source/news.rst:62
msgid "Added single-sourcing package version example. (:pr:`573`)"
msgstr "Aldonis ekzemplon pri unufontigo de la paka versio. (:pr:`573`)"

#: ../source/news.rst:63
msgid "Added a guide for creating documentation. (:pr:`568`)"
msgstr "Aldonis gvidilon por verki dokumentaron. (:pr:`568`)"

#: ../source/news.rst:66
msgid "October 2018"
msgstr "Oktobro 2018"

#: ../source/news.rst:67
msgid "Updated Nox package name. (:pr:`566`)"
msgstr "Ĝisdatigis paknomon de Nox. (:pr:`566`)"

#: ../source/news.rst:68
msgid "Mentioned Sphinx extensions in guides. (:pr:`562`)"
msgstr "Menciis Sphinx-etendaĵojn en gvidiloj. (:pr:`562`)"

#: ../source/news.rst:71
msgid "September 2018"
msgstr "Septembro 2018"

#: ../source/news.rst:72
msgid "Added a section on checking RST markup. (:pr:`554`)"
msgstr ""
"Aldonis paragrafon pri kontrolado de reStructuredText-sintakso (:pr:`554`)"

#: ../source/news.rst:73
msgid "Updated user installs page. (:pr:`558`)"
msgstr "Ĝisdatigis paĝon pri instalado al la loko de la uzanto. (:pr:`558`)"

#: ../source/news.rst:74
msgid "Updated Google BigQuery urls. (:pr:`556`)"
msgstr "Ĝisdatigis retadresojn de Google BigQuery. (:pr:`556`)"

#: ../source/news.rst:75
msgid "Replaced tar command with working command. (:pr:`552`)"
msgstr "Anstataŭigis komandon tar per funkcianta komando. (:pr:`552`)"

#: ../source/news.rst:76
msgid ""
"Changed to double quotes in the pip install SomeProject==1.4. (:pr:`550`)"
msgstr "Ŝanĝis al duoblaj citiloj en pip install SomeProject==1.4. (:pr:`550`)"

#: ../source/news.rst:79
msgid "August 2018"
msgstr "Aŭgusto 2018"

#: ../source/news.rst:80
msgid "Removed the recommendation to store passwords in cleartext. (:pr:`546`)"
msgstr "Forigis la rekomendon konservi pasvortojn senĉifre. (:pr:`546`)"

#: ../source/news.rst:81
msgid ""
"Moved the Overview to a task based lead in along with the others. (:pr:`540`)"
msgstr ""
"Provizis la Superrigardon kun taskobaza enkonduko simile al aliaj "
"dokumentoj. (:pr:`540`)"

#: ../source/news.rst:82
msgid "Updated Python version supported by virtualenv. (:pr:`538`)"
msgstr "Ĝisdatigis Python-version subtenatan de virtualenv. (:pr:`538`)"

#: ../source/news.rst:83
msgid "Added outline/rough draft of new Overview page. (:pr:`519`)"
msgstr "Aldonis malneton de nova Superrigarda paĝo. (:pr:`519`)"

#: ../source/news.rst:86
msgid "July 2018"
msgstr "Julio 2018"

#: ../source/news.rst:88
msgid "Improved binary extension docs. (:pr:`531`)"
msgstr "Plibonigis dokumentaron pri duumaj etendaĵoj. (:pr:`531`)"

#: ../source/news.rst:89
msgid "Added scikit-build to key projects. (:pr:`530`)"
msgstr "Aldonis scikit-build al ĉefprojektoj. (:pr:`530`)"

#: ../source/news.rst:92
msgid "June 2018"
msgstr "Junio 2018"

#: ../source/news.rst:94
msgid "Fixed categories of interop PEP for pypa.io. (:pr:`527`)"
msgstr "Riparis kategoriojn pri kunfunkcipova PEP por pypa.io. (:pr:`527`)"

#: ../source/news.rst:95
msgid "Updated Markdown descriptions explanation. (:pr:`522`)"
msgstr "Ĝisdatigis klarigon pri priskriboj en Markdown. (:pr:`522`)"

#: ../source/news.rst:98
msgid "May 2018"
msgstr "Majo 2018"

#: ../source/news.rst:100
msgid "Noted issues with Provides-Dist and Obsoletes-Dist. (:pr:`513`)"
msgstr "Menciis problemojn pri Provides-Dist kaj Obsoletes-Dist. (:pr:`513`)"

#: ../source/news.rst:101
msgid ""
"Removed outdated warning about Python version mixing with Pipenv. (:pr:`501`)"
msgstr ""
"Forigis ne plu validan averton pri miksado de Python-versioj kun Pipenv. (:"
"pr:`501`)"

#: ../source/news.rst:102
msgid "Simplified packaging tutorial. (:pr:`498`)"
msgstr "Simpligis lernilon pri pakado. (:pr:`498`)"

#: ../source/news.rst:103
msgid "Updated Windows users instructions for clarity. (:pr:`493`)"
msgstr "Pliklarigis instrukciojn por uzantoj de Windows. (:pr:`493`)"

#: ../source/news.rst:104
msgid "Updated the license section description for completeness. (:pr:`492`)"
msgstr "Ĝisdatigis la priskribon de la licenca sekcio por pleneco. (:pr:`492`)"

#: ../source/news.rst:105
msgid "Added specification-style document to contributing section. (:pr:`489`)"
msgstr ""
"Aldonis specifo-stilan dokumenton al la paragrafo pri kontribuado. (:pr:"
"`489`)"

#: ../source/news.rst:106
msgid "Added documentation types to contributing guide. (:pr:`485`)"
msgstr ""
"Aldonis specojn de dokumentoj al gvidilo por kontribuantoj. (:pr:`485`)"

#: ../source/news.rst:109
msgid "April 2018"
msgstr "Aprilo 2018"

#: ../source/news.rst:111
msgid "Added README guide. (:pr:`461`)"
msgstr "Aldonis gvidilon pri README. (:pr:`461`)"

#: ../source/news.rst:112
msgid "Updated instructions and status for PyPI launch. (:pr:`475`)"
msgstr "Ĝisdatigis instrukciojn kaj staton por la lanĉo de PyPI. (:pr:`475`)"

#: ../source/news.rst:113
msgid "Added instructions for Warehouse. (:pr:`471`)"
msgstr "Aldonis instrukciojn pri Warehouse. (:pr:`471`)"

#: ../source/news.rst:114
msgid "Removed GPG references from publishing tutorial. (:pr:`466`)"
msgstr "Forigis referencojn al GPG el la lernilo pri eldonado. (:pr:`466`)"

#: ../source/news.rst:115
msgid "Added 'What’s in which Python 3.4–3.6?'. (:pr:`468`)"
msgstr "Aldonis «Kio estas en kiu Python 3.4–3.6?». (:pr:`468`)"

#: ../source/news.rst:116
msgid "Added a guide for phasing out Python versions. (:pr:`459`)"
msgstr "Aldonis gvidilon pri ekmalsubtenado de versioj de Python. (:pr:`459`)"

#: ../source/news.rst:117
msgid "Made default Description-Content-Type variant GFM. (:pr:`462`)"
msgstr "Implicitigi la varianton GFM por Description-Content-Type. (:pr:`462`)"

#: ../source/news.rst:120
msgid "March 2018"
msgstr "Marto 2018"

#: ../source/news.rst:122
msgid "Updated \"installing scientific packages\". (:pr:`455`)"
msgstr "Ĝisdatigis «Instali sciencajn pakojn». (:pr:`455`)"

#: ../source/news.rst:123
msgid ""
"Added :file:`long_description_content_type` to follow PEP 556. (:pr:`457`)"
msgstr ""
"Aldonis :file:`long_description_content_type` sekvante PEP 556. (:pr:`457`)"

#: ../source/news.rst:124
msgid "Clarified a long description classifier on pypi.org. (:pr:`456`)"
msgstr "Klarigis longan priskriban klasigilon ĉe pypi.org. (:pr:`456`)"

#: ../source/news.rst:125
msgid "Updated Core Metadata spec to follow PEP 556. (:pr:`412`)"
msgstr ""
"Ĝisdatigis la specifon de Kernaj Metadatenoj sekvante PEP 556. (:pr:`412`)"

#: ../source/news.rst:128
msgid "February 2018"
msgstr "Februaro 2018"

#: ../source/news.rst:130
msgid ""
"Added python3-venv and python3-pip to Debian installation instructions. (:pr:"
"`445`)"
msgstr ""
"Aldonis python3-venv kaj python3-pip al instrukcioj pri instalado sur "
"Debian. (:pr:`445`)"

#: ../source/news.rst:131
msgid "Updated PyPI migration info. (:pr:`439`)"
msgstr "Ĝisdatigis informojn pri migrado al PyPI. (:pr:`439`)"

#: ../source/news.rst:132
msgid ""
"Added a warning about managing multiple versions with pipenv. (:pr:`430`)"
msgstr ""
"Aldonis averton pri administrado de pluraj versioj per pipenv. (:pr:`430`)"

#: ../source/news.rst:133
msgid "Added example of multiple emails to Core Metadata. (:pr:`429`)"
msgstr ""
"Aldonis ekzemplon de pluraj retpoŝtaj adresoj al Kernaj Metadatenoj. (:pr:"
"`429`)"

#: ../source/news.rst:134
msgid "Added explanation of \"legacy\" in test.pypi.org/legacy. (:pr:`426`)"
msgstr "Klarigis «legacy» en test.pypi.org/legacy. (:pr:`426`)"

#: ../source/news.rst:137
msgid "January 2018"
msgstr "Januaro 2018"

#: ../source/news.rst:139
msgid "Added a link to PyPI's list of classifiers. (:pr:`425`)"
msgstr "Aldonis hiperligon al la listo de klasigiloj ĉe PyPI. (:pr:`425`)"

#: ../source/news.rst:140
msgid "Updated README.rst explanation. (:pr:`419`)"
msgstr "Plibonigis klarigon pri README.rst. (:pr:`419`)"

#: ../source/news.rst:143
msgid "December 2017"
msgstr "Decembro 2017"

#: ../source/news.rst:145
msgid ""
"Replaced :file:`~` with :file:`$HOME` in guides and tutorials.  (:pr:`418`)"
msgstr ""
"Anstataŭigis :file:`~` per :file:`$HOME` en gvidiloj kaj lerniloj.  (:pr:"
"`418`)"

#: ../source/news.rst:146
msgid "Noted which fields can be used with environment markers. (:pr:`416`)"
msgstr ""
"Notis tiujn kampojn, kiuj povas esti uzataj kun mediaj markoj. (:pr:`416`)"

#: ../source/news.rst:147
msgid "Updated Requires-Python section. (:pr:`414`)"
msgstr "Plibonigis paragrafon pri Requres-Python. (:pr:`414`)"

#: ../source/news.rst:148
msgid "Added news page. (:pr:`404`)"
msgstr "Aldonis paĝon pri novaĵoj. (:pr:`404`)"

#: ../source/news.rst:151
msgid "November 2017"
msgstr "Novembro 2017"

#: ../source/news.rst:153
msgid ""
"Introduced a new dependency management tutorial based on Pipenv. (:pr:`402`)"
msgstr ""
"Enkondukis novan lernilon pri mastrumado de dependeco per Pipenv. (:pr:`402`)"

#: ../source/news.rst:154
msgid ""
"Updated the *Single Sourcing Package Version* tutorial to reflect pip's "
"current strategy. (:pr:`400`)"
msgstr ""
"Ĝisdatigis la lernilon *Unu-Fontigi la Pakan Version* laŭ la aktuala "
"strategio de pip. (:pr:`400`)"

#: ../source/news.rst:156
msgid ""
"Added documentation about the ``py_modules`` argument to ``setup``. (:pr:"
"`398`)"
msgstr ""
"Aldonis klarigon pri la argumento ``py_modules`` al ``setup``. (:pr:`398`)"

#: ../source/news.rst:157
msgid "Simplified the wording for the :file:`manifest.in` section. (:pr:`395`)"
msgstr "Simpligis la paragrafon pri :file:`manifest.in`. (:pr:`395`)"

#: ../source/news.rst:160
msgid "October 2017"
msgstr "Oktobro 2017"

#: ../source/news.rst:162
msgid ""
"Added a specification for the :file:`entry_points.txt` file. (:pr:`398`)"
msgstr "Aldonis specifon pri la dosiero :file:`entry_points.txt`. (:pr:`398`)"

#: ../source/news.rst:163
msgid ""
"Created a new guide for managing packages using ``pip`` and ``virtualenv``. "
"(:pr:`385`)"
msgstr ""
"Verkis novan gvidilon por administri pakojn per ``pip`` kaj ``virtualenv``. "
"(:pr:`385`)"

#: ../source/news.rst:164
msgid "Split the specifications page into multiple pages. (:pr:`386`)"
msgstr "Disdividis la paĝon de specifoj en plurajn paĝojn. (:pr:`386`)"

#: ../source/news.rst:167
msgid "September 2017"
msgstr "Septembro 2017"

#: ../source/news.rst:169
msgid ""
"Encouraged using ``readme_renderer`` to validate :file:`README.rst`. (:pr:"
"`379`)"
msgstr ""
"Instigis uzi ``readme_renderer`` por kontroli la validecon de :file:`README."
"rst`. (:pr:`379`)"

#: ../source/news.rst:171
msgid "Recommended using the ``--user-base`` option. (:pr:`374`)"
msgstr "Rekomendis uzi la opcion ``--user-base``. (:pr:`374`)"

#: ../source/news.rst:174
msgid "August 2017"
msgstr "Aŭgusto 2017"

#: ../source/news.rst:176
msgid ""
"Added a new, experimental tutorial on installing packages using ``Pipenv``. "
"(:pr:`369`)"
msgstr ""
"Aldonis novan, eksperimentan lernilon pri instalado de pako per ``Pipenv``. "
"(:pr:`369`)"

#: ../source/news.rst:177
msgid "Added a new guide on how to use ``TestPyPI``. (:pr:`366`)"
msgstr "Aldonis novan gvidilo pri la uzado de ``TestPyPI``. (:pr:`366`)"

#: ../source/news.rst:178
msgid "Added :file:`pypi.org` as a term. (:pr:`365`)"
msgstr "Aldonis :file:`pypi.org` kiel terminon. (:pr:`365`)"

#: ../source/news.rst:181
msgid "July 2017"
msgstr "Julio 2017"

#: ../source/news.rst:183
msgid "Added ``flit`` to the key projects list. (:pr:`358`)"
msgstr "Inkluzivis ``flit`` en la liston de ĉefprojektojn. (:pr:`358`)"

#: ../source/news.rst:184
msgid "Added ``enscons`` to the list of key projects. (:pr:`357`)"
msgstr "Inkluzivis ``enscons`` en la liston de ĉefprojektojn. (:pr:`357`)"

#: ../source/news.rst:185
msgid ""
"Updated this guide's ``readme`` with instructions on how to build the guide "
"locally. (:pr:`356`)"
msgstr ""
"Ĝisdatigis la ``readme`` de ĉi tiu gvidilo per instrukcioj pri kiel konstrui "
"la gvidilon loke. (:pr:`356`)"

#: ../source/news.rst:186
msgid ""
"Made the new ``TestPyPI`` URL more visible, adding note to homepage about "
"pypi.org. (:pr:`354`)"
msgstr ""
"Reliefigis la novan retadreson ``TestPyPI``, aldonante noton pri pypi.org. (:"
"pr:`354`)"

#: ../source/news.rst:187
msgid ""
"Added a note about the removal of the explicit registration API. (:pr:`347`)"
msgstr ""
"Aldonis noton pri la forigo de la API de eksplicita registrado. (:pr:`347`)"

#: ../source/news.rst:190
msgid "June 2017"
msgstr "Junio 2017"

#: ../source/news.rst:192
msgid "Added a document on migrating uploads to :file:`PyPI.org`. (:pr:`339`)"
msgstr ""
"Aldonis dokumenton pri migrado de alŝutoj al :file:`PyPI.org`. (:pr:`339`)"

#: ../source/news.rst:193
msgid "Added documentation for ``python_requires``. (:pr:`338`)"
msgstr "Aldonis dokumentaron pri ``python_requires``. (:pr:`338`)"

#: ../source/news.rst:194
msgid ""
"Added a note about PyPI migration in the *Tool Recommendations* tutorial. (:"
"pr:`335`)"
msgstr ""
"Aldonis noton pri migrado de PyPI en la lernilo *Rekomendoj pri Iloj*. (:pr:"
"`335`)"

#: ../source/news.rst:195
msgid ""
"Added a note that :file:`manifest.in` does not affect wheels. (:pr:`332`)"
msgstr "Notis, ke :file:`manifest.in` ne rilatas al wheel. (:pr:`332`)"

#: ../source/news.rst:196
msgid "Added a license section to the distributing guide. (:pr:`331`)"
msgstr ""
"Aldonis paragrafon pri licencoj al la gvidilo pri distribuado. (:pr:`331`)"

#: ../source/news.rst:197
msgid "Expanded the section on the ``name`` argument. (:pr:`329`)"
msgstr "Pliigis la paragrafon pri la argumento ``name``. (:pr:`329`)"

#: ../source/news.rst:198
msgid "Adjusted the landing page. (:pr:`327`, :pr:`326`, :pr:`324`)"
msgstr "Plibonigis la ĉefpaĝon. (:pr:`327`, :pr:`326`, :pr:`324`)"

#: ../source/news.rst:199
msgid "Updated to Sphinx 1.6.2. (:pr:`323`)"
msgstr "Ĝisdatigis al Sphinx 1.6.2. (:pr:`323`)"

#: ../source/news.rst:200
msgid "Switched to the PyPA theme. (:pr:`305`)"
msgstr "Ŝanĝis al la etoso de PyPA. (:pr:`305`)"

#: ../source/news.rst:201
msgid "Re-organized the documentation into the new structure. (:pr:`318`)"
msgstr "Reorganizis la dokumentaron laŭ la nova strukturo. (:pr:`318`)"

#: ../source/news.rst:204
msgid "May 2017"
msgstr "Majo 2017"

#: ../source/news.rst:206
msgid ""
"Added documentation for the ``Description-Content-Type`` field. (:pr:`258`)"
msgstr "Klarigis la kampon ``Description-Content-Type``. (:pr:`258`)"

#: ../source/news.rst:207
msgid "Added contributor and style guide. (:pr:`307`)"
msgstr "Aldonis gvidilojn por kontribuantoj kaj pri stilo. (:pr:`307`)"

#: ../source/news.rst:208
msgid ""
"Documented ``pip`` and ``easy_install``'s differences for per-project "
"indexes. (:pr:`233`)"
msgstr ""
"Dokumentis la diferencojn inter ``pip`` kaj ``easy_install`` pri unu-"
"projektaj indeksoj. (:pr:`233`)"

#: ../source/news.rst:211
msgid "April 2017"
msgstr "Aprilo 2017"

#: ../source/news.rst:213
msgid "Added travis configuration for testing pull requests. (:pr:`300`)"
msgstr "Starigis agordojn pri travis por testi tirpetojn. (:pr:`300`)"

#: ../source/news.rst:214
msgid ""
"Mentioned the requirement of the ``wheel`` package for creating wheels (:pr:"
"`299`)"
msgstr "Menciis la postulon de la pako ``wheel`` por krei wheel (:pr:`299`)"

#: ../source/news.rst:215
msgid ""
"Removed the ``twine register`` reference in the *Distributing Packages* "
"tutorial. (:pr:`271`)"
msgstr ""
"Forigis la mencion de ``twine register`` en la lernilo *Distribui Pakojn*. (:"
"pr:`271`)"

#: ../source/news.rst:216
msgid "Added a topic on plugin discovery. (:pr:`294`, :pr:`296`)"
msgstr "Aldonis temon pri malkovrado de kromaĵoj. (:pr:`294`, :pr:`296`)"

#: ../source/news.rst:217
msgid "Added a topic on namespace packages. (:pr:`290`)"
msgstr "Aldonis temon pri nomspacaj pakoj. (:pr:`290`)"

#: ../source/news.rst:218
msgid ""
"Added documentation explaining prominently how to install ``pip`` in ``/usr/"
"local``. (:pr:`230`)"
msgstr ""
"Aldonis dokumentaron reliefigante kiel instali ``pip`` en ``/usr/local``. (:"
"pr:`230`)"

#: ../source/news.rst:219
msgid ""
"Updated development mode documentation to mention that order of local "
"packages matters. (:pr:`208`)"
msgstr ""
"Ĝisdatigis la dokumentaron pri evoluada reĝimo menciante, ke la ordo de "
"lokaj pakoj gravas. (:pr:`208`)"

#: ../source/news.rst:220
msgid ""
"Convert readthedocs link for their ``.org`` -> ``.io`` migration for hosted "
"projects (:pr:`239`)"
msgstr ""
"Konverti ligilojn al readthedocs por la migrado ``.org`` → ``.io`` pri "
"gastigitaj projektoj (:pr:`239`)"

#: ../source/news.rst:221
msgid ""
"Swapped order of :file:`setup.py` arguments for the upload command, as order "
"is significant. (:pr:`260`)"
msgstr ""
"Ŝanĝis la ordon de la argumentoj de :file:`setup.py` por la komando "
"«upload», ĉar la ordo gravas. (:pr:`260`)"

#: ../source/news.rst:223
msgid ""
"Explained how to install from unsupported sources using a helper "
"application. (:pr:`289`)"
msgstr ""
"Klarigis kiel instali el nesubtenata fonto per helpa programo. (:pr:`289`)"

#: ../source/news.rst:227
msgid "March 2017"
msgstr "Marto 2017"

#: ../source/news.rst:229
msgid "Covered ``manylinux1`` in *Platform Wheels*. (:pr:`283`)"
msgstr "Menciis ``manylinux1`` en *Platforma Wheel*. (:pr:`283`)"

#: ../source/news.rst:232
msgid "February 2017"
msgstr "Februaro 2017"

#: ../source/news.rst:234
msgid "Added :pep:`518`. (:pr:`281`)"
msgstr "Aldonis :pep:`518`. (:pr:`281`)"

#: ../source/overview.rst:3
msgid "Overview of Python Packaging"
msgstr "Superrigardo pri Pakado de Python"

#: ../source/overview.rst:7
msgid ""
"As a general-purpose programming language, Python is designed to be used in "
"many ways. You can build web sites or industrial robots or a game for your "
"friends to play, and much more, all using the same core technology."
msgstr ""
"Kiel ĝeneralcela programlingvo, Python estas uzebla por multaj celoj. Vi "
"povas verki retejon aŭ industrian roboton aŭ ludon por viaj amikoj, kaj "
"multe pli, uzante la saman kernan teĥnikon."

#: ../source/overview.rst:12
msgid ""
"Python's flexibility is why the first step in every Python project must be "
"to think about the project's audience and the corresponding environment "
"where the project will run. It might seem strange to think about packaging "
"before writing code, but this process does wonders for avoiding future "
"headaches."
msgstr ""

#: ../source/overview.rst:18
msgid ""
"This overview provides a general-purpose decision tree for reasoning about "
"Python's plethora of packaging options. Read on to choose the best "
"technology for your next project."
msgstr ""
"Jen superrigardo de ĝeneralcela decidarbo por elekti inter la abundo da "
"opcioj pri pakado de Python. Legu ĝin por elekti la plej bonan teĥnikon por "
"via projekto."

#: ../source/overview.rst:23
msgid "Thinking about deployment"
msgstr "Pripensi disponigon"

#: ../source/overview.rst:25
msgid ""
"Packages exist to be installed (or *deployed*), so before you package "
"anything, you'll want to have some answers to the deployment questions below:"
msgstr ""
"Pako ekzistas por instalado (aŭ *disponigado*). Tial, antaŭ ol paki ion ajn, "
"oni havu respondojn al la jenaj demandoj pri disponigo:"

#: ../source/overview.rst:29
msgid ""
"Who are your software's users? Will your software be installed by other "
"developers doing software development, operations people in a datacenter, or "
"a less software-savvy group?"
msgstr ""
"Kiuj estas la uzantoj de via programo? Ĉu via programo estos instalita de "
"alia programisto verkanta programon, operaciisto en datenejo, aŭ nespertulo?"

#: ../source/overview.rst:32
msgid ""
"Is your software intended to run on servers, desktops, mobile clients "
"(phones, tablets, etc.), or embedded in dedicated devices?"
msgstr ""
"Ĉu via programo estas por servilo, labortabla komputilo, portebla kliento "
"(telefono, tabulkomputilo ktp), aŭ enkonstruado en aparaton?"

#: ../source/overview.rst:34
msgid ""
"Is your software installed individually, or in large deployment batches?"
msgstr "Ĉu via programo estas instalata unuope aŭ multope?"

#: ../source/overview.rst:36
msgid ""
"Packaging is all about target environment and deployment experience. There "
"are many answers to the questions above and each combination of "
"circumstances has its own solutions. With this information, the following "
"overview will guide you to the packaging technologies best suited to your "
"project."
msgstr ""
"Pakado temas pri la cela medio kaj la sperto de disponigo. Ekzistas multaj "
"respondoj al la demandoj ĉi-supraj, kaj ĉiu kombinaĵo de cirkonstancoj havas "
"siajn proprajn solvojn. La sekva superrigardo gvidos vin al la pakada "
"teĥniko plej taŭga por via projekto."

#: ../source/overview.rst:43
msgid "Packaging Python libraries and tools"
msgstr "Paki Python-bibliotekojn kaj ilojn"

#: ../source/overview.rst:45
msgid ""
"You may have heard about PyPI, ``setup.py``, and ``wheel`` files. These are "
"just a few of the tools Python's ecosystem provides for distributing Python "
"code to developers, which you can read about in :doc:`guides/distributing-"
"packages-using-setuptools`."
msgstr ""
"Eble vi konas PyPI, ``setup.py``, kaj ``wheel``-dosieroj. Jen kelkaj iloj de "
"la ekosistemo de Python por distribui Python-kodon al programistoj; vi povas "
"legi pri ili en :doc:`guides/distributing-packages-using-setuptools`."

#: ../source/overview.rst:50
msgid ""
"The following approaches to packaging are meant for libraries and tools used "
"by technical audience in a development setting. If you're looking for ways "
"to package Python for a non-technical audience and/or a production setting, "
"skip ahead to :ref:`packaging-applications`."
msgstr ""
"La jenaj manieroj de pakado estas por bibliotekoj kaj iloj uzataj de fakuloj "
"dum programado. Por paki Python-programon por nefakuloj kaj/aŭ por "
"entreprena disponigo, vidu :ref:`packaging-applications`."

#: ../source/overview.rst:56
msgid "Python modules"
msgstr "Python-moduloj"

#: ../source/overview.rst:58
msgid ""
"A Python file, provided it only relies on the standard library, can be "
"redistributed and reused. You will also need to ensure it's written for the "
"right version of Python, and only relies on the standard library."
msgstr ""
"Python-dosiero dependanta nur de la norma biblioteko estas redistribuebla "
"kaj reuzebla. Oni ankaŭ devas certigi, ke ĝi estis verkita por la ĝusta "
"versio de Python kaj nur dependas de la norma biblioteko."

#: ../source/overview.rst:63
msgid ""
"This is great for sharing simple scripts and snippets between people who "
"both have compatible Python versions (such as via email, StackOverflow, or "
"GitHub gists). There are even some entire Python libraries that offer this "
"as an option, such as :doc:`bottle.py<bottle:tutorial>` and :doc:`boltons "
"<boltons:architecture>`."
msgstr ""

#: ../source/overview.rst:70
msgid ""
"However, this pattern won't scale for projects that consist of multiple "
"files, need additional libraries, or need a specific version of Python, "
"hence the options below."
msgstr ""
"Tamen, tiu metodo ne funkcias bone por projekto konsistanta el multaj "
"dosieroj, bezonanta pliajn bibliotekojn, au postulanta specifan version de "
"Python; tial la ĉi-subaj opcioj."

#: ../source/overview.rst:75
msgid "Python source distributions"
msgstr "Python-fontaj distribuoj"

#: ../source/overview.rst:77
msgid ""
"If your code consists of multiple Python files, it's usually organized into "
"a directory structure. Any directory containing Python files can comprise "
"an :term:`Import Package`."
msgstr ""
"Se via kodo konsistas el pluraj Python-dosieroj, ĝi estas kutime organizita "
"en dosierujan strukturon. Dosierujo enhavanta Python-dosierojn povas esti :"
"term:`Importa Pako <Import Package>`."

#: ../source/overview.rst:81
msgid ""
"Because packages consist of multiple files, they are harder to distribute. "
"Most protocols support transferring only one file at a time (when was the "
"last time you clicked a link and it downloaded multiple files?). It's easier "
"to get incomplete transfers, and harder to guarantee code integrity at the "
"destination."
msgstr ""
"Ĉar pako konsistas el pluraj dosieroj, distribui pakon estas pli malfacile. "
"Multaj protokoloj nur kapablas transdoni po unu dosieron por ĉi fojo. (Se "
"oni alklakas hiperligon, oni nur elŝutas unu dosieron.). Oftas neplena "
"transdono, kaj malfacilas garantii la integrecon de la kodo ĉe la celloko."

#: ../source/overview.rst:87
msgid ""
"So long as your code contains nothing but pure Python code, and you know "
"your deployment environment supports your version of Python, then you can "
"use Python's native packaging tools to create a *source* :term:`Distribution "
"Package`, or *sdist* for short."
msgstr ""
"Se la kodo enhavas nur Python-kodon kaj la disponiga medio subtenas vian "
"version de Ptyhon, oni povas uzi la indiĝenajn pakilojn de Python por krei "
"*fontan* :term:`Distribuan Pakon <Distribution Package>`, aŭ mallongigite "
"*sdist*."

#: ../source/overview.rst:92
msgid ""
"Python's *sdists* are compressed archives (``.tar.gz`` files) containing one "
"or more packages or modules. If your code is pure-Python, and you only "
"depend on other Python packages, you can go to the :ref:`source-distribution-"
"format` specification to learn more."
msgstr ""
"La *sdist* de Python estas densigita arĥivo (de dosiersufikso ``.tar.gz``) "
"enhavanta unu aŭ plurajn pakojn aŭ modulojn. Se via kodo konsistas nur el "
"Python kaj vi nur dependas de aliaj pakoj verkitaj en Python, vi povas lerni "
"plu ĉe la normo :ref:`source-distribution-format`."

#: ../source/overview.rst:97
msgid ""
"If you rely on any non-Python code, or non-Python packages (such as `libxml2 "
"<https://en.wikipedia.org/wiki/Libxml2>`_ in the case of `lxml <https://pypi."
"org/project/lxml/>`_, or BLAS libraries in the case of `numpy <https://pypi."
"org/project/numpy>`_), you will need to use the format detailed in the next "
"section, which also has many advantages for pure-Python libraries."
msgstr ""
"Se vi dependas de ne Python-a kodo aŭ ne-Python-a pako (kiel `libxml2 "
"<https://en.wikipedia.org/wiki/Libxml2>`_ por `lxml <https://pypi.org/"
"project/lxml/>`_ aŭ BLAS-bibliotekoj por `numpy <https://pypi.org/project/"
"numpy>`_), vi devas uzi la formon detalitan en la sekva paragrafo, kiu estas "
"ankaŭ utila eĉ por pure Python-a biblioteko."

#: ../source/overview.rst:104
msgid ""
"Python and PyPI support multiple distributions providing different "
"implementations of the same package. For instance the unmaintained-but-"
"seminal `PIL distribution <https://pypi.org/project/PIL/>`_ provides the PIL "
"package, and so does `Pillow <https://pypi.org/project/Pillow/>`_, an "
"actively-maintained fork of PIL!"
msgstr ""
"Python kaj PyPI subtenas plurajn distribuojn de malsamaj realigoj de la sama "
"pako. Ekzemple, la ne plu mastrumata sed origina `distribuo PIL <https://"
"pypi.org/project/PIL/>`_ provizas la pakon PIL, ankaŭ provizatan de `Pillow "
"<https://pypi.org/project/Pillow/>`_, kiu estas aktive mastrumata forko de "
"PIL!"

#: ../source/overview.rst:111
msgid ""
"This Python packaging superpower makes it possible for Pillow to be a drop-"
"in replacement for PIL, just by changing your project's ``install_requires`` "
"or ``requirements.txt``."
msgstr ""
"Per ĉi tiu pakada kapablo de Python, Pillow povas esti plena anstataŭigaĵo "
"por PIL simple per ŝanĝo de la ``install_requires`` aŭ ``requirements.txt`` "
"de via projekto."

#: ../source/overview.rst:116
msgid "Python binary distributions"
msgstr "Python-duumaj distribuoj"

#: ../source/overview.rst:118
msgid ""
"So much of Python's practical power comes from its ability to integrate with "
"the software ecosystem, in particular libraries written in C, C++, Fortran, "
"Rust, and other languages."
msgstr ""
"Multo da praktika potenco de Python devenas de la kapablo integriĝi al la "
"programa ekosistemo, speciale bibliotekoj verkitaj en C, C++, Fortrano, Rust "
"kaj aliaj lingvoj."

#: ../source/overview.rst:122
msgid ""
"Not all developers have the right tools or experiences to build these "
"components written in these compiled languages, so Python created the :term:"
"`Wheel`, a package format designed to ship libraries with compiled "
"artifacts. In fact, Python's package installer, ``pip``, always prefers "
"wheels because installation is always faster, so even pure-Python packages "
"work better with wheels."
msgstr ""

#: ../source/overview.rst:129
msgid ""
"Binary distributions are best when they come with source distributions to "
"match. Even if you don't upload wheels of your code for every operating "
"system, by uploading the sdist, you're enabling users of other platforms to "
"still build it for themselves. Default to publishing both sdist and wheel "
"archives together, *unless* you're creating artifacts for a very specific "
"use case where you know the recipient only needs one or the other."
msgstr ""
"Duuma distribuo plej taŭgas, kiam ĝi venas kun respondanta fonta distribuo. "
"Eĉ se vi ne alŝutas wheel de via kodo por ĉiu mastruma sistemo, se vi "
"alŝutas fontan distribuon, vi ebligas uzantojn de aliaj platformoj konstrui "
"wheel por si. Eldonu kaj fontan distribuon kaj wheel-arĥivon kune, *krom se* "
"vi kreas artefaktojn por tiu kliento, kiu specife nur bezonas unu el la duo."

#: ../source/overview.rst:137
msgid ""
"Python and PyPI make it easy to upload both wheels and sdists together. Just "
"follow the :doc:`tutorials/packaging-projects` tutorial."
msgstr ""
"Python kaj PyPI faciligas kune alŝuti kaj fontan distribuon kaj wheel. Sekvu "
"la lernilon :doc:`tutorials/packaging-projects`."

#: ../source/overview.rst:145
msgid "A summary of Python's packaging capabilities for tools and libraries."
msgstr "Resumo pri la pakaj kapabloj de Python por iloj kaj bibliotekoj."

#: ../source/overview.rst:145
msgid ""
"Python's recommended built-in library and tool packaging technologies. "
"Excerpted from `The Packaging Gradient (2017) <https://www.youtube.com/watch?"
"v=iLVNWfPWAC8>`_."
msgstr ""
"La rekomendataj aprioraj biblioteko- kaj ilo-pakadaj teĥnikoj por Python. El "
"`The Packaging Gradient (2017) <https://www.youtube.com/watch?"
"v=iLVNWfPWAC8>`_."

#: ../source/overview.rst:152
msgid "Packaging Python applications"
msgstr "Paki Python-aplikprogramojn"

#: ../source/overview.rst:154
msgid ""
"So far we've only discussed Python's native distribution tools. Based on our "
"introduction, you would be correct to infer these built-in approaches only "
"target environments which have Python, and an audience who knows how to "
"install Python packages."
msgstr ""
"Ĝis nun ni nur diskutis la indiĝenajn distribuilojn de Python. Tiuj "
"indiĝenaj manieroj nur celas mediojn jam havantajn Python kaj tiujn "
"uzantojn, kiuj scias kiel instali Python-pakon."

#: ../source/overview.rst:159
msgid ""
"With the variety of operating systems, configurations, and people out there, "
"this assumption is only safe when targeting a developer audience."
msgstr ""
"Pro la diverseco de mastrumaj sistemoj, agordoj, kaj homoj, oni nur povas "
"supozi tion celante programistojn."

#: ../source/overview.rst:163
msgid ""
"Python's native packaging is mostly built for distributing reusable code, "
"called libraries, between developers. You can piggyback **tools**, or basic "
"applications for developers, on top of Python's library packaging, using "
"technologies like :doc:`setuptools entry_points <setuptools:userguide/"
"entry_point>`."
msgstr ""
"La indiĝena pakada meĥanismo de Python estas plejparte por distribui "
"reuzeblan kodon (t.e. bibliotekon) inter programistoj. Oni povas ankaŭ "
"distribui **ilojn** (bazajn programojn por programistoj) per la pakada "
"meĥanismo por bibliotekoj uzante teĥnikojn kiel :doc:`entry_points de "
"setuptools <setuptools:userguide/entry_point>`."

#: ../source/overview.rst:169
msgid ""
"Libraries are building blocks, not complete applications. For distributing "
"applications, there's a whole new world of technologies out there."
msgstr ""
"Biblioteko estas konstrua bloko, ne kompleta aplikprogramo. Por distribui "
"aplikprogramon, ekzistas mondo da teĥnikoj."

#: ../source/overview.rst:173
msgid ""
"The next few sections organize these application packaging options according "
"to their dependencies on the target environment, so you can choose the right "
"one for your project."
msgstr ""
"La sekvaj paragrafoj organizas tiujn opciojn pri pakado de programo laŭ la "
"dependeco de la cela medio, por helpi vin elekti taŭgan opcion por via "
"projekto."

#: ../source/overview.rst:178
msgid "Depending on a framework"
msgstr "Dependi de kadro"

#: ../source/overview.rst:180
msgid ""
"Some types of Python applications, like web site backends and other network "
"services, are common enough that they have frameworks to enable their "
"development and packaging. Other types of applications, like dynamic web "
"frontends and mobile clients, are complex enough to target that a framework "
"becomes more than a convenience."
msgstr ""
"Kelkaj specoj de Python-programoj, kiel reteja malfasado aŭ alia reta servo, "
"estas tiel oftaj, ke kadroj ebligas la verkadon kaj pakadon de tiaj "
"programoj. Aliaj specoj de programoj, kiel dinamika TTT-fasado aŭ poŝaparata "
"kliento, estas tiel komplikaj, ke kadro necesas."

#: ../source/overview.rst:186
msgid ""
"In all these cases, it makes sense to work backwards, from the framework's "
"packaging and deployment story. Some frameworks include a deployment system "
"which wraps the technologies outlined in the rest of the guide. In these "
"cases, you'll want to defer to your framework's packaging guide for the "
"easiest and most reliable production experience."
msgstr ""

#: ../source/overview.rst:192
msgid ""
"If you ever wonder how these platforms and frameworks work under the hood, "
"you can always read the sections beyond."
msgstr ""
"Se vi scivolas, kiel tiuj platformoj kaj kadroj interne funkcias, legu la ĉi-"
"subajn paragrafojn."

#: ../source/overview.rst:196
msgid "Service platforms"
msgstr "Servaj platformoj"

#: ../source/overview.rst:198
msgid ""
"If you're developing for a \"`Platform-as-a-Service <https://en.wikipedia."
"org/wiki/Platform_as_a_service>`_\" or \"PaaS\", you are going to want to "
"follow their respective packaging guides. These types of platforms take care "
"of packaging and deployment, as long as you follow their patterns. Most "
"software does not fit one of these templates, hence the existence of all the "
"other options below."
msgstr ""
"Se oni programas por «`Platformo-kiel-Servo <https://en.wikipedia.org/wiki/"
"Platform_as_a_service>`_» (mallongigite PaaS), oni sekvu la pakadan gvidilon "
"de la platformo. Tia platformo prizorgas pakadon kaj disponigon, se oni "
"sekvas la gvidnormojn. La plejmulto da programoj ne estas por tia platformo; "
"tial ekzistas la aliaj opcioj ĉi-subaj."

#: ../source/overview.rst:205
msgid ""
"If you're developing software that will be deployed to machines you own, "
"users' personal computers, or any other arrangement, read on."
msgstr ""
"Se vi evoluigas programon disponigotan al maŝinoj posedataj de vi, aŭ la "
"personaj komputiloj de uzantoj, aŭ alia loko, legu plu."

#: ../source/overview.rst:209
msgid "Web browsers and mobile applications"
msgstr "TTT-legiloj kaj poŝaparatoj"

#: ../source/overview.rst:211
msgid ""
"Python's steady advances are leading it into new spaces. These days you can "
"write a mobile app or web application frontend in Python. While the language "
"may be familiar, the packaging and deployment practices are brand new."
msgstr ""
"La progresado de Python gvidas ĝin en novajn spacojn. Nuntempe oni povas "
"verki poŝaparatan programon aŭ retprograman fasadon per Python. Dum la "
"lingvo estas konata, la praktiko pri pakado kaj disponigado estas nova."

#: ../source/overview.rst:216
msgid ""
"If you're planning on releasing to these new frontiers, you'll want to check "
"out the following frameworks, and refer to their packaging guides:"
msgstr ""
"Se vi planas eldonadon al tiuj novaj limoj, vi volas esplori la jenajn "
"kadrojn kaj iliajn gvidilojn pri pakado:"

#: ../source/overview.rst:220
#, fuzzy
msgid "`Kivy <https://kivy.org/>`_"
msgstr "`Poetry <https://python-poetry.org/>`_"

#: ../source/overview.rst:221
msgid "`Beeware <https://pybee.org/>`_"
msgstr "`Beeware <https://pybee.org/>`_"

#: ../source/overview.rst:222
msgid "`Brython <https://brython.info/>`_"
msgstr "`Brython <https://brython.info/>`_"

#: ../source/overview.rst:223
msgid "`Flexx <https://flexx.readthedocs.io/en/latest/>`_"
msgstr ""

#: ../source/overview.rst:225
msgid ""
"If you are *not* interested in using a framework or platform, or just wonder "
"about some of the technologies and techniques utilized by the frameworks "
"above, continue reading below."
msgstr ""
"Se vi *ne* interesiĝas pri kadro aŭ platformo, aŭ simple scivolas pri la "
"teĥnikoj uzitaj de la ĉi-supraj kadroj, legu plu."

#: ../source/overview.rst:230
msgid "Depending on a pre-installed Python"
msgstr "Dependi de antaŭinstalita Python"

#: ../source/overview.rst:232
msgid ""
"Pick an arbitrary computer, and depending on the context, there's a very "
"good chance Python is already installed. Included by default in most Linux "
"and Mac operating systems for many years now, you can reasonably depend on "
"Python preexisting in your data centers or on the personal machines of "
"developers and data scientists."
msgstr ""
"Elektu iun ajn komputilo. Depende de la kunteksto, ekzistas bona ŝanco, ke "
"Python estas jam instalita. Ĝi estas apriore inkluzivita en la plejparto de "
"Linux kaj Mac mastrumaj sistemoj dum multaj jaroj, kaj oni povas racie "
"supozi, ke Python jam ekzistas en datencentro aŭ persona komputilo de "
"programisto aŭ datensciencisto."

#: ../source/overview.rst:238
msgid "Technologies which support this model:"
msgstr "Jen teĥnikoj subtenantaj tiun modelon:"

#: ../source/overview.rst:240
msgid ":gh:`PEX <pantsbuild/pex#user-content-pex>` (Python EXecutable)"
msgstr ":gh:`PEX <pantsbuild/pex#user-content-pex>` (Python EXecutable)"

#: ../source/overview.rst:241
msgid ""
":doc:`zipapp <python:library/zipapp>` (does not help manage dependencies, "
"requires Python 3.5+)"
msgstr ""
":doc:`zipapp <python:library/zipapp>` (ne helpas mastrumi dependecojn, "
"postulas Python 3.5+)"

#: ../source/overview.rst:242
msgid ":gh:`shiv <linkedin/shiv#user-content-shiv>` (requires Python 3)"
msgstr ":gh:`shiv <linkedin/shiv#user-content-shiv>` (postulas Python 3)"

#: ../source/overview.rst:244
msgid ""
"Of all the approaches here, depending on a pre-installed Python relies the "
"most on the target environment. Of course, this also makes for the smallest "
"package, as small as single-digit megabytes, or even kilobytes."
msgstr ""
"El tiuj metodoj, dependado de antaŭinstalita Python-interpretilo plej "
"dependas de la cela medio. Tio ankaŭ signifas, ke tiu metodo rezultigas la "
"plej malgrandan pakon, de kelkaj megabajtoj aŭ eĉ kilobajtoj."

#: ../source/overview.rst:249
msgid ""
"In general, decreasing the dependency on the target system increases the "
"size of our package, so the solutions here are roughly arranged by "
"increasing size of output."
msgstr ""
"Ĝenerale, ju malpli la pako dependas de la cela sistemo, des pli granda "
"estas la pako. Tial, la opcioj estas ordigitaj proksimume laŭ kreskanta "
"grando de la eligaĵo."

#: ../source/overview.rst:256
msgid "Depending on a separate software distribution ecosystem"
msgstr "Dependi de aparta programdistribua ekosistemo"

#: ../source/overview.rst:258
msgid ""
"For a long time many operating systems, including Mac and Windows, lacked "
"built-in package management. Only recently did these OSes gain so-called "
"\"app stores\", but even those focus on consumer applications and offer "
"little for developers."
msgstr ""
"Delonge je multaj mastrumaj sistemoj, inkluzive de macOS kaj Windows, mankis "
"enkonstruita pakadministrilo. Nur ĵus tiuj mastrumaj sistemoj ekhavas la "
"tiel nomitajn «programbutikojn», sed eĉ tiaj programbutikoj temas pri "
"programoj por ordinaraj uzantoj kaj ne por programistoj."

#: ../source/overview.rst:263
msgid ""
"Developers long sought remedies, and in this struggle, emerged with their "
"own package management solutions, such as `Homebrew <https://brew.sh/>`_. "
"The most relevant alternative for Python developers is a package ecosystem "
"called `Anaconda <https://en.wikipedia.org/wiki/"
"Anaconda_(Python_distribution)>`_. Anaconda is built around Python and is "
"increasingly common in academic, analytical, and other data-oriented "
"environments, even making its way `into server-oriented environments "
"<https://web.archive.org/web/20190403064038/https://www.paypal-engineering."
"com/2016/09/07/python-packaging-at-paypal/>`_."
msgstr ""

#: ../source/overview.rst:273
msgid "Instructions on building and publishing for the Anaconda ecosystem:"
msgstr "Instrukcioj pri konstruado kaj eldonado por la ekosistemo Anaconda:"

#: ../source/overview.rst:275
msgid ""
"`Building libraries and applications with conda <https://conda.io/projects/"
"conda-build/en/latest/user-guide/tutorials/index.html>`_"
msgstr ""
"`Kontrui bibliotekojn kaj aplikprogramojn per conda <https://conda.io/"
"projects/conda-build/en/latest/user-guide/tutorials/index.html>`_"

#: ../source/overview.rst:276
msgid ""
"`Transitioning a native Python package to Anaconda <https://conda.io/"
"projects/conda-build/en/latest/user-guide/tutorials/build-pkgs-skeleton."
"html>`_"
msgstr ""
"`Migrigi indiĝenan Python-pakon al Anaconda <https://conda.io/projects/conda-"
"build/en/latest/user-guide/tutorials/build-pkgs-skeleton.html>`_"

#: ../source/overview.rst:278
msgid ""
"A similar model involves installing an alternative Python distribution, but "
"does not support arbitrary operating system-level packages:"
msgstr ""
"Simila modelo uzas instalado de alternativa Python-distribuo, sed ne "
"subtenas arbitrajn mastrumasistemo-nivelajn pakojn:"

#: ../source/overview.rst:282
msgid ""
"`ActiveState ActivePython <https://www.activestate.com/products/python/>`_"
msgstr ""
"`ActiveState ActivePython <https://www.activestate.com/products/python/>`_"

#: ../source/overview.rst:283
msgid "`WinPython <http://winpython.github.io/>`_"
msgstr "`WinPython <http://winpython.github.io/>`_"

#: ../source/overview.rst:288
msgid "Bringing your own Python executable"
msgstr "Alporti vian propran Python-ruleblaĵon"

#: ../source/overview.rst:290
msgid ""
"Computing as we know it is defined by the ability to execute programs. Every "
"operating system natively supports one or more formats of programs they can "
"natively execute."
msgstr ""
"Komputadon difinas la kapablo ruli programojn. Ĉiu mastruma sistemo difinas "
"unu aŭ plurajn formojn de indiĝene ruleblaj programoj."

#: ../source/overview.rst:294
msgid ""
"There are many techniques and technologies which turn your Python program "
"into one of these formats, most of which involve embedding the Python "
"interpreter and any other dependencies into a single executable file."
msgstr ""
"Ekzistas multaj teĥnikoj por paki Python-programon en unu el tiuj formoj, "
"kiuj ofte enkorpigas la Python-interpretilon kaj aliajn dependaĵojn en unu "
"ruleblan dosieron."

#: ../source/overview.rst:299
msgid ""
"This approach, called *freezing*, offers wide compatibility and seamless "
"user experience, though often requires multiple technologies, and a good "
"amount of effort."
msgstr ""
"Tio, nomita «frostigo», provizas larĝan kongruecon kaj senjuntan sperton, "
"kvankam tio ofte postulas plurajn teĥnikojn kaj multon da klopodo."

#: ../source/overview.rst:303
msgid "A selection of Python freezers:"
msgstr "Jen kelkaj Python-frostigiloj:"

#: ../source/overview.rst:305
msgid ""
"`pyInstaller <https://pyinstaller.readthedocs.io/en/stable/>`_ - Cross-"
"platform"
msgstr ""
"`pyInstaller <https://pyinstaller.readthedocs.io/en/stable/>`_ - "
"Plurplatforma"

#: ../source/overview.rst:306
msgid ""
"`cx_Freeze <https://marcelotduarte.github.io/cx_Freeze/>`_ - Cross-platform"
msgstr ""
"`cx_Freeze <https://marcelotduarte.github.io/cx_Freeze/>`_ - Plurplatforma"

#: ../source/overview.rst:307
msgid ""
"`constructor <https://github.com/conda/constructor>`_ - For command-line "
"installers"
msgstr ""
"`constructor <https://github.com/conda/constructor>`_ – Por komandliniaj "
"instaliloj"

#: ../source/overview.rst:308
msgid "`py2exe <http://www.py2exe.org/>`_ - Windows only"
msgstr "`py2exe <http://www.py2exe.org/>`_ - nur Windows"

#: ../source/overview.rst:309
msgid "`py2app <https://py2app.readthedocs.io/en/latest/>`_ - Mac only"
msgstr "`py2app <https://py2app.readthedocs.io/en/latest/>`_ - nur Mac"

#: ../source/overview.rst:310
msgid "`osnap <https://github.com/jamesabel/osnap>`_ - Windows and Mac"
msgstr "`osnap <https://github.com/jamesabel/osnap>`_ - Windows kaj Mac"

#: ../source/overview.rst:311
msgid "`pynsist <https://pypi.org/project/pynsist/>`_ - Windows only"
msgstr "`pynsist <https://pypi.org/project/pynsist/>`_ - nur Windows"

#: ../source/overview.rst:313
msgid ""
"Most of the above imply single-user deployments. For multi-component server "
"applications, see :gh:`Chef Omnibus <chef/omnibus#user-content--omnibus>`."
msgstr ""
"La ĉi-supraĵoj implicas disponigon por unu uzanto. Por plurkomponantaj "
"servilaj programoj, vidu :gh:`Chef Omnibus <chef/omnibus#user-content--"
"omnibus>`."

#: ../source/overview.rst:319
msgid "Bringing your own userspace"
msgstr "Alporti vian propran uzantospacon"

#: ../source/overview.rst:321
msgid ""
"An increasing number of operating systems -- including Linux, Mac OS, and "
"Windows -- can be set up to run applications packaged as lightweight images, "
"using a relatively modern arrangement often referred to as `operating-system-"
"level virtualization <https://en.wikipedia.org/wiki/Operating-system-"
"level_virtualization>`_, or *containerization*."
msgstr ""
"Multaj mastrumaj sistemoj – inkluzive de Linux, macOS kaj Windows – povas "
"ruli programon pakitan kiel leĝeran diskokopion, uzante la relative modernan "
"manieron de `mastrumasistemo-nivela virgualigo <https://en.wikipedia.org/"
"wiki/OS-level_virtualization>`_, aŭ *ujigo*."

#: ../source/overview.rst:328
msgid ""
"These techniques are mostly Python agnostic, because they package whole OS "
"filesystems, not just Python or Python packages."
msgstr ""
"Tiaj teĥnikoj estas plejparte sendependaj de Python, ĉar ili pakas tutajn "
"mastrumsistemajn dosiersistemojn, ne sole Python aŭ Python-pakojn."

#: ../source/overview.rst:331
msgid ""
"Adoption is most extensive among Linux servers, where the technology "
"originated and where the technologies below work best:"
msgstr ""
"Tio estas plej ofta por Linux-servilo, por kiu tiaj teĥnikoj estis "
"inventitaj kaj por kiu tiaj teĥnikoj funkcias plej bone:"

#: ../source/overview.rst:334
msgid "`AppImage <https://appimage.org/>`_"
msgstr "`AppImage <https://appimage.org/>`_"

#: ../source/overview.rst:335
msgid "`Docker <https://www.fullstackpython.com/docker.html>`_"
msgstr "`Docker <https://www.fullstackpython.com/docker.html>`_"

#: ../source/overview.rst:336
msgid "`Flatpak <https://flatpak.org/>`_"
msgstr "`Flatpak <https://flatpak.org/>`_"

#: ../source/overview.rst:337
msgid "`Snapcraft <https://snapcraft.io/>`_"
msgstr "`Snapcraft <https://snapcraft.io/>`_"

#: ../source/overview.rst:340
msgid "Bringing your own kernel"
msgstr "Alporti vian propran kernon"

#: ../source/overview.rst:342
#, fuzzy
#| msgid ""
#| "Most operating systems support some form of classical virtualization, "
#| "running applications packaged as images containing a full operating "
#| "system of their own. Running these virtual machines, or VMs, is a mature "
#| "approach, widespread in data center environments."
msgid ""
"Most desktop operating systems support some form of classical "
"virtualization, running applications packaged as images containing a full "
"operating system of their own. Running these virtual machines, or VMs, is a "
"mature approach, widespread in data center environments."
msgstr ""
"La plejmulto da mastrumaj sistemoj subtenas ian klasikan virtualigon "
"rulantan programon pakitan kiel diskokopion kun propra plena mastruma "
"sistemo. Ruli tian virtualan maŝinon (VM) oftas, speciale en datencentro."

#: ../source/overview.rst:347
msgid ""
"These techniques are mostly reserved for larger scale deployments in data "
"centers, though certain complex applications can benefit from this "
"packaging. The technologies are Python agnostic, and include:"
msgstr ""
"Tiuj teĥnikoj estas plejparte por grandskalaj disponigoj en datencentroj, "
"kvankam iuj kompleksaj programoj povas profiti el tia pakado. La teĥnikoj ne "
"dependas de Python kaj inkluzivas la jenon:"

#: ../source/overview.rst:351
msgid "KVM on Linux"
msgstr ""

#: ../source/overview.rst:352
msgid "Hyper-V on Windows"
msgstr ""

#: ../source/overview.rst:353
msgid ""
"`VHD <https://en.wikipedia.org/wiki/VHD_(file_format)>`_, `AMI <https://en."
"wikipedia.org/wiki/Amazon_Machine_Image>`_, and :doc:`other formats "
"<openstack:user/formats>`"
msgstr ""
"`VHD <https://en.wikipedia.org/wiki/VHD_(file_format)>`_, `AMI <https://en."
"wikipedia.org/wiki/Amazon_Machine_Image>`_, kaj :doc:`aliaj dosierformoj "
"<openstack:user/formats>`"

#: ../source/overview.rst:356
#, fuzzy
#| msgid ""
#| "`OpenStack <https://www.redhat.com/en/topics/openstack>`_ - A cloud "
#| "management system in Python, with extensive VM support"
msgid ""
"`OpenStack <https://www.redhat.com/en/topics/openstack>`_ - A cloud "
"management system written in Python, with extensive VM support"
msgstr ""
"`OpenStack <https://www.redhat.com/en/topics/openstack>`_ – Nubadministra "
"sistemo en Python, kun multa subteno de virtuala maŝino"

#: ../source/overview.rst:360
msgid "Bringing your own hardware"
msgstr "Alporti vian propran aparaton"

#: ../source/overview.rst:362
msgid ""
"The most all-encompassing way to ship your software would be to ship it "
"already-installed on some hardware. This way, your software's user would "
"require only electricity."
msgstr ""
"La plej totala maniero disponigi vian programon estas sendi ĝin jam "
"instalita sur iu aparato. Tiel, la uzanto de via programo postulas nur "
"elektron."

#: ../source/overview.rst:366
msgid ""
"Whereas the virtual machines described above are primarily reserved for the "
"tech-savvy, you can find hardware appliances being used by everyone from the "
"most advanced data centers to the youngest children."
msgstr ""
"Dum la ĉi-supraj virtualaj maŝinoj estas ĉefe uzataj de fakuloj, aparatoj "
"estas uzataj de ĉiuj, de la plej komplikaj datencentroj ĝis la plej junaj "
"infanoj."

#: ../source/overview.rst:370
msgid ""
"Embed your code on an :gh:`Adafruit <adafruit/circuitpython>`, `MicroPython "
"<https://micropython.org/>`_, or more-powerful hardware running Python, then "
"ship it to the datacenter or your users' homes. They plug and play, and you "
"can call it a day."
msgstr ""
"Metu vian kodon sur :gh:`Adafruit <adafruit/circuitpython>`, `MicroPython "
"<https://micropython.org/>`_, aŭ pli potencan aparaton kapablan ruli Python, "
"kaj sendu ĝin al la datencentro aŭ la hejmo de viaj uzantoj. Ili povos "
"ekuzi, kaj vi povos ekmalstreĉi."

#: ../source/overview.rst:379
msgid "A summary of technologies used to package Python applications."
msgstr "Resumo pri teĥnikoj por paki Python-programojn."

#: ../source/overview.rst:379
msgid ""
"The simplified gamut of technologies used to package Python applications."
msgstr "La simpligita gamo de teĥnikoj uzataj por paki Python-programojn."

#: ../source/overview.rst:382
msgid "What about..."
msgstr "Kio pri…"

#: ../source/overview.rst:384
msgid ""
"The sections above can only summarize so much, and you might be wondering "
"about some of the more conspicuous gaps."
msgstr ""
"La ĉi-supraj paragrafoj nur priskribas tiom, kiom eblas. Vi eble demandos "
"pri mankantaj temoj."

#: ../source/overview.rst:388
msgid "Operating system packages"
msgstr "Mastrumasistemaj pakoj"

#: ../source/overview.rst:390
msgid ""
"As mentioned in :ref:`depending-on-a-separate-ecosystem` above, some "
"operating systems have package managers of their own. If you're very sure of "
"the operating system you're targeting, you can depend directly on a format "
"like `deb <https://en.wikipedia.org/wiki/Deb_(file_format)>`_ (for Debian, "
"Ubuntu, etc.) or `RPM <https://en.wikipedia.org/wiki/RPM_Package_Manager>`_ "
"(for Red Hat, Fedora, etc.), and use that built-in package manager to take "
"care of installation, and even deployment. You can even use `FPM <https://"
"fpm.readthedocs.io/en/latest/cli-reference.html#virtualenv>`_ to generate "
"both deb and RPMs from the same source."
msgstr ""
"Laŭ la ĉi-supra paragrafo :ref:`depending-on-a-separate-ecosystem`, kelkaj "
"mastrumaj sistemoj havas siajn proprajn pakadministrilojn. Se oni certegas "
"pri la celata mastruma sistemo, oni povas dependi rekte de formo kiel `deb "
"<https://en.wikipedia.org/wiki/Deb_(file_format)>`_ (por Debian, Ubuntu "
"ktp.) aŭ `RPM <https://en.wikipedia.org/wiki/RPM_Package_Manager>`_ (por Red "
"Hat, Fedora ktp.), kaj uzi tiun indiĝenan pakadministrilon por instalado kaj "
"eĉ disponigo. Oni povas eĉ uzi `FPM <https://fpm.readthedocs.io/en/latest/"
"cli-reference.html#virtualenv>`_ por generi kaj deb kaj RPM el la sama fonto."

#: ../source/overview.rst:401
msgid ""
"In most deployment pipelines, the OS package manager is just one piece of "
"the puzzle."
msgstr ""
"En multaj disponigaj ĉenstabloj, la mastrumsistema pakadministrilo estas nur "
"unu ero en la puzlo."

#: ../source/overview.rst:407
msgid ""
":doc:`Virtualenvs <python-guide:dev/virtualenvs>` have been an indispensable "
"tool for multiple generations of Python developer, but are slowly fading "
"from view, as they are being wrapped by higher-level tools. With packaging "
"in particular, virtualenvs are used as a primitive in :doc:`the dh-"
"virtualenv tool <dh-virtualenv:tutorial>` and `osnap <https://github.com/"
"jamesabel/osnap>`_, both of which wrap virtualenvs in a self-contained way."
msgstr ""

#: ../source/overview.rst:416
msgid ""
"For production deployments, do not rely on running ``python -m pip install`` "
"from the Internet into a virtualenv, as one might do in a development "
"environment. The overview above is full of much better solutions."
msgstr ""
"Por grava disponigo, ne dependu de rulado de ``python - m pip install`` de "
"la Interreto al virtuala medio, simile al evoluada medio. La ĉi-supra "
"superrigardo priskribas multe pli bonajn solvojn."

#: ../source/overview.rst:421
msgid "Security"
msgstr "Sekureco"

#: ../source/overview.rst:423
msgid ""
"The further down the gradient you come, the harder it gets to update "
"components of your package. Everything is more tightly bound together."
msgstr ""
"Ju pli suben vi iras, des pli malfacile estas ĝisdatigi komponantojn de via "
"pako, ĉar ĉiuj estas des pli kunligitaj."

#: ../source/overview.rst:426
msgid ""
"For example, if a kernel security issue emerges, and you're deploying "
"containers, the host system's kernel can be updated without requiring a new "
"build on behalf of the application. If you deploy VM images, you'll need a "
"new build. Whether or not this dynamic makes one option more secure is still "
"a bit of an old debate, going back to the still-unsettled matter of `static "
"versus dynamic linking <https://www.google.com/search?"
"channel=fs&q=static+vs+dynamic+linking>`_."
msgstr ""

#: ../source/overview.rst:435
msgid "Wrap up"
msgstr "Konkludo"

#: ../source/overview.rst:437
msgid ""
"Packaging in Python has a bit of a reputation for being a bumpy ride. This "
"impression is mostly a byproduct of Python's versatility. Once you "
"understand the natural boundaries between each packaging solution, you begin "
"to realize that the varied landscape is a small price Python programmers pay "
"for using one of the most balanced, flexible languages available."
msgstr ""
"La publika reputacio estas, ke pakado en Python povas esti malglata. Tio "
"estas plejparte rezulto de la diversaj celoj de Python. Post kiam oni scias "
"la naturajn limojn inter la pakadaj manieroj, oni komprenos, ke la diversa "
"pejzaĝo estas malgranda prezo pagata de Python-programistoj por uzi unu el "
"la plej ekvilibraj, flekseblaj lingvoj haveblaj."

#: ../source/specifications/binary-distribution-format.rst:7
msgid "Binary distribution format"
msgstr "Duuma distribua formo"

#: ../source/specifications/binary-distribution-format.rst:9
msgid ""
"This page specifies the binary distribution format for Python packages, also "
"called the wheel format."
msgstr ""
"Jen paĝo specifanta la duuman distribuan dosierformon por Python-pako, "
"nomitan wheel."

#: ../source/specifications/binary-distribution-format.rst:12
msgid ""
"A wheel is a ZIP-format archive with a specially formatted file name and the "
"``.whl`` extension.  It contains a single distribution nearly as it would be "
"installed according to PEP 376 with a particular installation scheme.  "
"Although a specialized installer is recommended, a wheel file may be "
"installed by simply unpacking into site-packages with the standard 'unzip' "
"tool while preserving enough information to spread its contents out onto "
"their final paths at any later time."
msgstr ""
"Wheel estas ZIP-forma arĥivo kun speciale aranĝita dosiernomo kaj la "
"dosiersufikso ``.whl''. Ĝi enhavas unu distribuon preskaŭ ekzakte kiel la "
"instalon laŭ PEP 376 kun specifa instala skemo.  Kvankam speciala instalilo "
"estas rekomendata, oni povas instali wheel-dosieron simple per maldensigado "
"al site-packages uzante la norman ilon ``unzip``, koonservante sufiĉon da "
"informoj por transloki la enhavojn al la finaj dosierlokoj poste."

#: ../source/specifications/binary-distribution-format.rst:22
msgid "Details"
msgstr "Detaloj"

#: ../source/specifications/binary-distribution-format.rst:25
msgid "Installing a wheel 'distribution-1.0-py32-none-any.whl'"
msgstr "Instali wheel «distribution-1.0-py32-none-any.whl»"

#: ../source/specifications/binary-distribution-format.rst:27
msgid "Wheel installation notionally consists of two phases:"
msgstr "Instalado de wheel consistas koncepte el du fazoj:"

#: ../source/specifications/binary-distribution-format.rst:29
msgid "Unpack."
msgstr "Malpaki."

#: ../source/specifications/binary-distribution-format.rst:31
msgid "Parse ``distribution-1.0.dist-info/WHEEL``."
msgstr "Sintaksanalizi ``distribution-1.0.dist-info/WHEEL``."

#: ../source/specifications/binary-distribution-format.rst:32
msgid ""
"Check that installer is compatible with Wheel-Version.  Warn if minor "
"version is greater, abort if major version is greater."
msgstr ""
"Kontroli, ĉu la instalilo kongruas kun Wheel-Version.  Averti, se la minora "
"versio estas pli granda; ĉesi, se la maĵora versio estas pli granda."

#: ../source/specifications/binary-distribution-format.rst:34
msgid ""
"If Root-Is-Purelib == 'true', unpack archive into purelib (site-packages)."
msgstr ""
"Se Root-Is-Purelib == 'true', malpaki arĥivon al purelib (site-packages)."

#: ../source/specifications/binary-distribution-format.rst:36
msgid "Else unpack archive into platlib (site-packages)."
msgstr "Alikaze, malpaki arĥivon al platlib (site-packages)."

#: ../source/specifications/binary-distribution-format.rst:38
msgid "Spread."
msgstr "Disvastigi."

#: ../source/specifications/binary-distribution-format.rst:40
msgid ""
"Unpacked archive includes ``distribution-1.0.dist-info/`` and (if there is "
"data) ``distribution-1.0.data/``."
msgstr ""
"Malpakita arĥivo inkluzivas ``distribution-1.0.dist-info/`` kaj (se datenoj "
"ekzistas) ``distribution-1.0.data/``."

#: ../source/specifications/binary-distribution-format.rst:42
msgid ""
"Move each subtree of ``distribution-1.0.data/`` onto its destination path. "
"Each subdirectory of ``distribution-1.0.data/`` is a key into a dict of "
"destination directories, such as ``distribution-1.0.data/(purelib|platlib|"
"headers|scripts|data)``. These subdirectories are :ref:`installation paths "
"defined by sysconfig <python:installation_paths>`."
msgstr ""
"Movu ĉiun subarbon de ``distribution-1.0.data/`` al la cela dosierloko. Ĉiu "
"subdosierujo de ``distribution-1.0.data/`` estas ŝlosilo en vortaro da celaj "
"dosierujoj, kiel ``distribution-1.0.data/(purelib|platlib|headers|scripts|"
"data)``. Tiuj subdosierujoj estas :ref:`instalaj dosierlokoj difinitaj de "
"sysconfig <python:installation_paths>`."

#: ../source/specifications/binary-distribution-format.rst:48
msgid ""
"If applicable, update scripts starting with ``#!python`` to point to the "
"correct interpreter."
msgstr ""
"Ĝisdatigu tiujn programojn, kiuj komenciĝas per ``#!python``, igante ilin "
"montri la ĝustan interpretilon."

#: ../source/specifications/binary-distribution-format.rst:50
msgid "Update ``distribution-1.0.dist-info/RECORD`` with the installed paths."
msgstr ""
"Ĝisdatigi ``distribution-1.0.dist-info/RECORD`` pri la instalitaj "
"dosierlokoj."

#: ../source/specifications/binary-distribution-format.rst:52
msgid "Remove empty ``distribution-1.0.data`` directory."
msgstr "Forigi malplenan dosierujon ``distribution-1.0.data``."

#: ../source/specifications/binary-distribution-format.rst:53
msgid ""
"Compile any installed .py to .pyc. (Uninstallers should be smart enough to "
"remove .pyc even if it is not mentioned in RECORD.)"
msgstr ""
"Traduki ajnan instalitan .py al .pyc. (Malinstaliloj forigu .pyc, eĉ se ĝi "
"ne estas menciita en RECORD.)"

#: ../source/specifications/binary-distribution-format.rst:57
msgid "Recommended installer features"
msgstr "Rekomendataj funkcioj de instaliloj"

#: ../source/specifications/binary-distribution-format.rst:67
msgid "Rewrite ``#!python``."
msgstr "Reskribi ``#!python``."

#: ../source/specifications/binary-distribution-format.rst:60
msgid ""
"In wheel, scripts are packaged in ``{distribution}-{version}.data/scripts/"
"``.  If the first line of a file in ``scripts/`` starts with exactly ``b'#!"
"python'``, rewrite to point to the correct interpreter.  Unix installers may "
"need to add the +x bit to these files if the archive was created on Windows."
msgstr ""
"En wheel, programeto troviĝas en ``{distribuo}-{versio}.data/scripts/``.  Se "
"la unua linio de dosiero en ``scripts/`` komenciĝas precize per ``b'#!"
"python'``, modifu ĝin montrante la ĝustan interpretilon.  Instalilo por "
"Unikso eble devas aldoni la biton +x al tiaj dosieroj, se la arĥivo estis "
"kreita sur Windows."

#: ../source/specifications/binary-distribution-format.rst:66
msgid ""
"The ``b'#!pythonw'`` convention is allowed. ``b'#!pythonw'`` indicates a GUI "
"script instead of a console script."
msgstr ""
"La konvencio ``b'#!pythonw'`` estas permesata. ``b'#!pythonw'`` indikas "
"grafikan programon anstataŭ konzolan programon."

#: ../source/specifications/binary-distribution-format.rst:72
msgid "Generate script wrappers."
msgstr "Generi programvolvaĵoj."

#: ../source/specifications/binary-distribution-format.rst:70
msgid ""
"In wheel, scripts packaged on Unix systems will certainly not have "
"accompanying .exe wrappers.  Windows installers may want to add them during "
"install."
msgstr ""
"En wheel, programeto pakita sur Uniksa sistemo ne havas ``.exe``-volvilon.  "
"Instalilo por Windows povas provizi tiun dum instalado."

#: ../source/specifications/binary-distribution-format.rst:75
msgid "Recommended archiver features"
msgstr "Rekomendataj funkcioj de arĥiviloj"

#: ../source/specifications/binary-distribution-format.rst:82
msgid "Place ``.dist-info`` at the end of the archive."
msgstr "Meti ``.dist-info`` ĉe la fino de la arĥivo."

#: ../source/specifications/binary-distribution-format.rst:78
msgid ""
"Archivers are encouraged to place the ``.dist-info`` files physically at the "
"end of the archive.  This enables some potentially interesting ZIP tricks "
"including the ability to amend the metadata without rewriting the entire "
"archive."
msgstr ""
"Arĥivilo metu la dosierojn ``.dist-info`` fizike ĉe la fino de la arĥivo.  "
"Tio ebligas utilajn teĥnikojn pri arĥivoj, inkluzive de la kapablo modifi la "
"metadatenojn sen reskribado de la tuta arĥivo."

#: ../source/specifications/binary-distribution-format.rst:85
#: ../source/specifications/pylock-toml.rst:51
msgid "File Format"
msgstr "Dosierformo"

#: ../source/specifications/binary-distribution-format.rst:90
msgid "File name convention"
msgstr "Dosiernoma konvencio"

#: ../source/specifications/binary-distribution-format.rst:92
msgid ""
"The wheel filename is ``{distribution}-{version}(-{build tag})?-{python tag}-"
"{abi tag}-{platform tag}.whl``."
msgstr ""
"La dosiernomo de wheel estas ``{distribuo}-{version}(-{konstrua etikedo})?-"
"{lingva etikedo}-{abietikedo}-{platforma etikedo}.whl``."

#: ../source/specifications/binary-distribution-format.rst:96
msgid "distribution"
msgstr "distribuo"

#: ../source/specifications/binary-distribution-format.rst:96
msgid "Distribution name, e.g. 'django', 'pyramid'."
msgstr "Nomo de distribuo, ekz. «django», «pyramid»."

#: ../source/specifications/binary-distribution-format.rst:99
msgid "version"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:99
msgid "Distribution version, e.g. 1.0."
msgstr "Versio de la distribuo, ekz. 1.0."

#: ../source/specifications/binary-distribution-format.rst:124
msgid "build tag"
msgstr "konstrua etikedo"

#: ../source/specifications/binary-distribution-format.rst:102
msgid ""
"Optional build number.  Must start with a digit.  Acts as a tie-breaker if "
"two wheel file names are the same in all other respects (i.e. name, version, "
"and other tags).  Sort as an empty tuple if unspecified, else sort as a two-"
"item tuple with the first item being the initial digits as an ``int``, and "
"the second item being the remainder of the tag as a ``str``."
msgstr ""
"Nedeviga konstruo-numero.  Devas komenciĝi per cifero.  Oni uzas tiun por "
"komparo, se du wheel-dosiernomoj estas samaj ĉiel alie (ekz. laŭ nomo, "
"versio kaj aliaj etikedoj).  Por ordigado, konsideru ĝin kiel malplenan "
"opon, se ĝi mankas; se ne, konsideru ĝin kiel duopo, kies unua ero estas la "
"komencaoj ciferoj kiel ``int``, kaj kies dua ero estas la restaĵo de la "
"etikedo kiel ``str``."

#: ../source/specifications/binary-distribution-format.rst:109
msgid ""
"A common use-case for build numbers is rebuilding a binary distribution due "
"to a change in the build environment, like when using the manylinux image to "
"build distributions using pre-release CPython versions."
msgstr ""
"Ofta uzkazo por konstrunumero estas rekonstrui duuman distribuon pro ŝanĝo "
"en la konstrua medio, ekzemple por uzi la diskokopion manylinux por konstrui "
"distribuojn kun antaŭeldonaj versioj de CPython."

#: ../source/specifications/binary-distribution-format.rst:116
msgid ""
"Build numbers are not a part of the distribution version and thus are "
"difficult to reference externally, especially so outside the Python "
"ecosystem of tools and standards. A common case where a distribution would "
"need to referenced externally is when resolving a security vulnerability."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:121
msgid ""
"Due to this limitation, new distributions which need to be referenced "
"externally **should not** use build numbers when building the new "
"distribution. Instead a **new distribution version** should be created for "
"such cases."
msgstr ""
"Pro tiu limigo, nova distribuo, kiun oni referencas ekstere, **ne uzu** "
"konstruo-numerojn dum konstruado de la nova distribuo. Por tiu bezono, oni "
"kreu **novan distribuo-version**."

#: ../source/specifications/binary-distribution-format.rst:127
msgid "language implementation and version tag"
msgstr "lingva etikedo"

#: ../source/specifications/binary-distribution-format.rst:127
msgid "E.g. 'py27', 'py2', 'py3'."
msgstr "Ekz. «py27», «py2», «py3»."

#: ../source/specifications/binary-distribution-format.rst:130
#: ../source/specifications/platform-compatibility-tags.rst:20
msgid "abi tag"
msgstr "abietikedo"

#: ../source/specifications/binary-distribution-format.rst:130
msgid "E.g. 'cp33m', 'abi3', 'none'."
msgstr "Ekz. «cp33m», «abi3», «none»."

#: ../source/specifications/binary-distribution-format.rst:133
#: ../source/specifications/platform-compatibility-tags.rst:23
msgid "platform tag"
msgstr "platforma etikedo"

#: ../source/specifications/binary-distribution-format.rst:133
msgid "E.g. 'linux_x86_64', 'any'."
msgstr "Ekz. «linux_x86_64», «any»."

#: ../source/specifications/binary-distribution-format.rst:135
msgid ""
"For example, ``distribution-1.0-1-py27-none-any.whl`` is the first build of "
"a package called 'distribution', and is compatible with Python 2.7 (any "
"Python 2.7 implementation), with no ABI (pure Python), on any CPU "
"architecture."
msgstr ""
"Ekzemple, ``distribuo-1.0-1-py27-none-any.whl`` estas la unua konstruo de "
"pako nomita «distribuo» kaj kongruas kun Python 2.7 (ajna realigo de Python "
"2.7), sen aplika binara interfaco (pura Python), sur ajna ĉefprocesora "
"arĥitekturo."

#: ../source/specifications/binary-distribution-format.rst:140
msgid ""
"The last three components of the filename before the extension are called "
"\"compatibility tags.\"  The compatibility tags express the package's basic "
"interpreter requirements and are detailed in PEP 425."
msgstr ""
"La lastaj tri komponantj de la dosiernomo antaŭ la sufikso nomiĝas "
"«kongruecaj etikedoj».  Tiaj etikedoj esprimas la bazajn postulojn de la "
"pako pri interpretilo kaj estas difinitaj en PEP 425."

#: ../source/specifications/binary-distribution-format.rst:145
msgid "Escaping and Unicode"
msgstr "Eskapado kaj Unikodo"

#: ../source/specifications/binary-distribution-format.rst:147
msgid ""
"As the components of the filename are separated by a dash (``-``, HYPHEN-"
"MINUS), this character cannot appear within any component. This is handled "
"as follows:"
msgstr ""
"Ĉar la komponantoj de la dosiernomo estas apartigitaj per streketo (``-``, "
"HYPHEN-MINUS), tiu signo ne povas aperi ene de komponanto. Oni pritraktas "
"tion jene:"

#: ../source/specifications/binary-distribution-format.rst:150
msgid ""
"In distribution names, any run of ``-_.`` characters (HYPHEN-MINUS, LOW LINE "
"and FULL STOP) should be replaced with ``_`` (LOW LINE), and uppercase "
"characters should be replaced with corresponding lowercase ones. This is "
"equivalent to regular :ref:`name normalization <name-normalization>` "
"followed by replacing ``-`` with ``_``. Tools consuming wheels must be "
"prepared to accept ``.`` (FULL STOP) and uppercase letters, however, as "
"these were allowed by an earlier version of this specification."
msgstr ""
"En nomo de distribuo, ajna sinsekvo de skribsignoj ``-_.`` (HYPHEN-MINUS, "
"LOW LINE kaj FULL STOP) estu anstataŭigita per ``_`` (LOW LINE), kaj "
"majuskloj estu anstataŭigitaj per la respondantaj minuskloj. Tio "
"ekvivalentas ordinaran :ref:`normigon de nomo <name-normalization>` sekvitan "
"de anstataŭigado de ``-`` per ``_``. Ilo konsumanta wheel devas akcepti ``."
"`` (FULL STOP) kaj majusklojn, ĉar tiuj estis permesataj de malnova versio "
"de ĉi tiu specifo."

#: ../source/specifications/binary-distribution-format.rst:157
msgid ""
"Version numbers should be normalised according to the :ref:`Version "
"specifier specification <version-specifiers>`. Normalised version numbers "
"cannot contain ``-``."
msgstr ""
"Versia numero estu normigita laŭ :ref:`la specifo pri versio-specifilo "
"<version-specifiers>`. Normigita versia numero ne enhavas ``-``."

#: ../source/specifications/binary-distribution-format.rst:159
msgid ""
"The remaining components may not contain ``-`` characters, so no escaping is "
"necessary."
msgstr ""
"La ceteraj komponantoj ne povas enhavi la signon ``-``; tial nenia kodŝanĝo "
"necesas."

#: ../source/specifications/binary-distribution-format.rst:162
msgid ""
"Tools producing wheels should verify that the filename components do not "
"contain ``-``, as the resulting file may not be processed correctly if they "
"do."
msgstr ""
"Ilo generanta wheel konfirmu, ke la dosiernomo-komponantoj ne enhavas ``-``, "
"ĉar alie la rezulta dosiero eble ne estos ĝuste pritraktita."

#: ../source/specifications/binary-distribution-format.rst:165
msgid ""
"The archive filename is Unicode.  It will be some time before the tools are "
"updated to support non-ASCII filenames, but they are supported in this "
"specification."
msgstr ""
"La arĥiva dosiernomo estas Unikoda.  Povas esti, ke iloj ankoraŭ ne estas "
"ĝisdatigitaj por ne-Askia dosiernomo, sed ĉi tiu specifo subtenas tian "
"dosiernomon."

#: ../source/specifications/binary-distribution-format.rst:169
msgid ""
"The filenames *inside* the archive are encoded as UTF-8.  Although some ZIP "
"clients in common use do not properly display UTF-8 filenames, the encoding "
"is supported by both the ZIP specification and Python's ``zipfile``."
msgstr ""
"La dosiernomoj *en* la arĥivo estas konditaj laŭ UTF-8.  Kvantam kelkaj ofte "
"uzataj ZIP-klientoj ne ĝuste montras dosiernomon en UTF-8, tiu kodado estas "
"subtenata kaj de la normo ZIP kaj la modulo ``zipfile`` de Python."

#: ../source/specifications/binary-distribution-format.rst:175
msgid "File contents"
msgstr "Dosieraj enhavoj"

#: ../source/specifications/binary-distribution-format.rst:177
msgid ""
"The contents of a wheel file, where {distribution} is replaced with the :ref:"
"`normalized name <name-normalization>` of the package, e.g. ``beaglevote`` "
"and {version} is replaced with its :ref:`normalized version <version-"
"specifiers-normalization>`, e.g. ``1.0.0``, (with dash/``-`` characters "
"replaced with underscore/``_`` characters in both fields) consist of:"
msgstr ""
"La enhavo de wheel-dosiero, en kiu {distribution} estas anstataŭigita per "
"la :ref:`normigita <name-normalization>` de la pako, ekz. ``beaglevote``, "
"kaj {version} estas anstataŭigita per la :ref:`normigita versio <version-"
"specifiers-normalization>`, ekz. ``1.0.0``, konsistas el la jeno:"

#: ../source/specifications/binary-distribution-format.rst:184
msgid ""
"``/``, the root of the archive, contains all files to be installed in "
"``purelib`` or ``platlib`` as specified in ``WHEEL``.  ``purelib`` and "
"``platlib`` are usually both ``site-packages``."
msgstr ""
"``/``, la radiko de la arĥivo, enhavas ĉiujn dosierojn instalotajn al "
"``purelib`` aŭ ``platlib`` laŭ la specifo en ``WHEEL``.  Kaj ``purelib`` kaj "
"``platlib`` estas ofte ``site-packages``."

#: ../source/specifications/binary-distribution-format.rst:187
msgid "``{distribution}-{version}.dist-info/`` contains metadata."
msgstr "``{distribuo}-{versio}.dist-info/`` enhavas metadatenojn."

#: ../source/specifications/binary-distribution-format.rst:188
msgid ""
":file:`{distribution}-{version}.dist-info/licenses/` contains license files."
msgstr ""
":file:`{distribution}-{version}.dist-info/licenses/` enhavas licenco-"
"dosierojn."

#: ../source/specifications/binary-distribution-format.rst:189
msgid ""
"``{distribution}-{version}.data/`` contains one subdirectory for each non-"
"empty install scheme key not already covered, where the subdirectory name is "
"an index into a dictionary of install paths (e.g. ``data``, ``scripts``, "
"``headers``, ``purelib``, ``platlib``)."
msgstr ""
"``{distribuo}-{versio}.data/`` enhavas po unu subdosierujo por ĉiu "
"nemalplena instalskema ŝlosilo ne jam pritraktita, je kio la nomo de "
"subdosierujo estas indico de vortaro de instalaj dosierlokoj (ekz. ``data``, "
"``scripts``, ``headers``, ``purelib``, ``platlib``)."

#: ../source/specifications/binary-distribution-format.rst:193
msgid ""
"Python scripts must appear in ``scripts`` and begin with exactly ``b'#!"
"python'`` in order to enjoy script wrapper generation and ``#!python`` "
"rewriting at install time.  They may have any or no extension.  The "
"``scripts`` directory may only contain regular files."
msgstr ""
"Python-programeto devas ekzisti en ``scripts`` kaj komenciĝi ekzakte per "
"``b'#!python'``, se oni deziras generi programeto-volvaĵon kaj reskribadon "
"de ``#!python`` dum instalado.  Ĝi povas havi iun ajn aŭ neniun "
"dosiersufikson.  La dosierujo ``scripts`` povas enhavi nur ordinarajn "
"dosierojn."

#: ../source/specifications/binary-distribution-format.rst:197
msgid ""
"``{distribution}-{version}.dist-info/METADATA`` is Metadata version 1.1 or "
"greater format metadata."
msgstr ""
"``{distribution}-{version}.dist-info/METADATA`` estas metadatenoj de la "
"formo Metadatenoj versio 1.1 aŭ pli nova."

#: ../source/specifications/binary-distribution-format.rst:199
msgid ""
"``{distribution}-{version}.dist-info/WHEEL`` is metadata about the archive "
"itself in the same basic key: value format::"
msgstr ""
"``{distribuo}-{versio}.dist-info/WHEEL`` estas metadatenoj pri la arĥivo mem "
"en la sama baza formo «ŝlosilo: valoro»::"

#: ../source/specifications/binary-distribution-format.rst:209
msgid "``Wheel-Version`` is the version number of the Wheel specification."
msgstr "``Wheel-Version`` estas la versia numero de la specifo pri Wheel."

#: ../source/specifications/binary-distribution-format.rst:210
msgid ""
"``Generator`` is the name and optionally the version of the software that "
"produced the archive."
msgstr ""
"``Generator`` estas la nomo kaj, nedevige, la versio de la programo "
"generinta la arĥivon."

#: ../source/specifications/binary-distribution-format.rst:212
msgid ""
"``Root-Is-Purelib`` is true if the top level directory of the archive should "
"be installed into purelib; otherwise the root should be installed into "
"platlib."
msgstr ""
"``Root-Is-Purelib`` estas vera, se la supranivela dosierujo de la arĥivo "
"instaliĝu al purelib, se ne, la radiko instaliĝu al platlib."

#: ../source/specifications/binary-distribution-format.rst:215
msgid ""
"``Tag`` is the wheel's expanded compatibility tags; in the example the "
"filename would contain ``py2.py3-none-any``."
msgstr ""
"``Tag`` estas la pliigitaj kongruecaj etikedoj de la wheel; en la ekzemplo, "
"la dosiernomo enhavus ``py2.py3-none-any``."

#: ../source/specifications/binary-distribution-format.rst:217
msgid ""
"``Build`` is the build number and is omitted if there is no build number."
msgstr ""
"``Build`` estas la numero de la konstro; ĝi estas preterlasita, se mankas "
"numero de la konstruo."

#: ../source/specifications/binary-distribution-format.rst:218
msgid ""
"A wheel installer should warn if Wheel-Version is greater than the version "
"it supports, and must fail if Wheel-Version has a greater major version than "
"the version it supports."
msgstr ""
"Instalilo de wheel avertu, se ``Wheel-Version`` estas pli granda ol la "
"subtenata versio, kaj devas malsukcesi, se ``Wheel-Version`` havas pli "
"grandan maĵoran version ol la subtenatan version."

#: ../source/specifications/binary-distribution-format.rst:221
msgid ""
"Wheel, being an installation format that is intended to work across multiple "
"versions of Python, does not generally include .pyc files."
msgstr ""
"Wheel, estante instaleblaĵon por pluraj versioj de Python, ne ĝenerale "
"inkluzivas ``.pyc``-dosierojn."

#: ../source/specifications/binary-distribution-format.rst:223
msgid "Wheel does not contain setup.py or setup.cfg."
msgstr "Wheel ne enhavas setup.py aŭ setup.cfg."

#: ../source/specifications/binary-distribution-format.rst:225
msgid ""
"This version of the wheel specification is based on the distutils install "
"schemes and does not define how to install files to other locations. The "
"layout offers a superset of the functionality provided by the existing "
"wininst and egg binary formats."
msgstr ""
"Ĉi tiu versio de la wheel-normo baziĝas sur la instalo-skemo de "
"``distutils`` kaj ne difinas kiel instali dosierojn al aliaj lokoj. La "
"aranĝo estas superaro de la funkcioj provizitaj de la ekzistantaj duumaj "
"formoj wininst kaj egg."

#: ../source/specifications/binary-distribution-format.rst:232
#: ../source/specifications/recording-installed-packages.rst:23
msgid "The .dist-info directory"
msgstr "La dosierujo .dist-info"

#: ../source/specifications/binary-distribution-format.rst:234
msgid ""
"Wheel .dist-info directories include at a minimum METADATA, WHEEL, and "
"RECORD."
msgstr ""
"La dosierujoj .dist-info de Wheel inkluzivas, minimume, METADATA, WHEEL, kaj "
"RECORD."

#: ../source/specifications/binary-distribution-format.rst:236
msgid ""
"METADATA is the package metadata, the same format as PKG-INFO as found at "
"the root of sdists."
msgstr ""
"METADATA estas la pakaj metadatenoj, en la sama formo kiel PKG-INFO en la "
"radiko de fontaj distribuoj."

#: ../source/specifications/binary-distribution-format.rst:238
msgid "WHEEL is the wheel metadata specific to a build of the package."
msgstr "WHEEL estas la wheel-metadatenoj specifaj al iu konstruo de la pako."

#: ../source/specifications/binary-distribution-format.rst:239
msgid ""
"RECORD is a list of (almost) all the files in the wheel and their secure "
"hashes.  Unlike PEP 376, every file except RECORD, which cannot contain a "
"hash of itself, must include its hash.  The hash algorithm must be sha256 or "
"better; specifically, md5 and sha1 are not permitted, as signed wheel files "
"rely on the strong hashes in RECORD to validate the integrity of the archive."
msgstr ""
"RECORD estas listo de (preskaŭ) ĉiuj dosieroj en la wheel kaj iliaj sekuraj "
"haketaĵoj.  Male al PEP 376, ĉiu dosiero krom RECORD, kiu ne povas enhavi "
"haketaĵon de si mem, devas inkluzivi sian haketaĵon.  La haketaĵa algoritmo "
"devas esti sha256 aŭ pli fortika; specife, md5 kaj sha1 estas malpermesataj, "
"ĉar subskribita wheel-dosiero dependas de la fortikaj haketaĵoj en RECORD "
"por la integrecon de la arĥivo."

#: ../source/specifications/binary-distribution-format.rst:245
msgid "PEP 376's INSTALLER and REQUESTED are not included in the archive."
msgstr ""
"La INSTALLER kaj REQUESTED de PEP 376 ne estas inkluzivitaj en la arĥivo."

#: ../source/specifications/binary-distribution-format.rst:246
msgid ""
"RECORD.jws is used for digital signatures.  It is not mentioned in RECORD."
msgstr ""
"RECORD.jws estas uzataj por ciferecaj subskriboj.  Ĝi ne estas menciita en "
"RECORD."

#: ../source/specifications/binary-distribution-format.rst:248
msgid ""
"RECORD.p7s is allowed as a courtesy to anyone who would prefer to use S/MIME "
"signatures to secure their wheel files.  It is not mentioned in RECORD."
msgstr ""
"RECORD.p7s estas permesata por tiuj, kiuj preferas uzi S/MIME-subskribon por "
"sekurigi wheel-dosieron.  Ĝi ne menciiĝas en RECORD."

#: ../source/specifications/binary-distribution-format.rst:251
msgid ""
"During extraction, wheel installers verify all the hashes in RECORD against "
"the file contents.  Apart from RECORD and its signatures, installation will "
"fail if any file in the archive is not both mentioned and correctly hashed "
"in RECORD."
msgstr ""
"Dum maldensigado, instalilo de wheel kontrolas ĉiujn haketaĵojn en "
"``RECORD`` kaj la dosierajn enhavojn. Krom ``RECORD`` kaj subskriboj, "
"instalado malsukcesos, se ajna dosiero en la arĥivo ne estas menciita en "
"``RECORD`` aŭ ne kongruas kun sia haketaĵo."

#: ../source/specifications/binary-distribution-format.rst:257
msgid "Subdirectories in :file:`.dist-info/`"
msgstr "Subdosierujoj en :file:`.dist-info/`"

#: ../source/specifications/binary-distribution-format.rst:259
msgid ""
"Subdirectories under :file:`.dist-info/` are reserved for future use. The "
"following subdirectory names under :file:`.dist-info/` are reserved for "
"specific usage:"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:263
msgid "Subdirectory name"
msgstr "Nomo de subdosierujo"

#: ../source/specifications/binary-distribution-format.rst:263
msgid "PEP / Standard"
msgstr "PEP / Normo"

#: ../source/specifications/binary-distribution-format.rst:265
msgid "``licenses``"
msgstr "``licenses``"

#: ../source/specifications/binary-distribution-format.rst:265
#: ../source/specifications/binary-distribution-format.rst:266
msgid ":pep:`639`"
msgstr ":pep:`639`"

#: ../source/specifications/binary-distribution-format.rst:266
msgid "``license_files``"
msgstr "``license_files``"

#: ../source/specifications/binary-distribution-format.rst:267
msgid "``LICENSES``"
msgstr "``LICENSES``"

#: ../source/specifications/binary-distribution-format.rst:267
msgid "`REUSE licensing framework <https://reuse.software>`__"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:268
msgid "``sboms``"
msgstr "``sboms``"

#: ../source/specifications/binary-distribution-format.rst:268
msgid ":pep:`770`"
msgstr ":pep:`770`"

#: ../source/specifications/binary-distribution-format.rst:272
msgid "The :file:`.dist-info/licenses/` directory"
msgstr "La dosierujo :file:`.dist-info/licenses/`"

#: ../source/specifications/binary-distribution-format.rst:274
msgid ""
"If the metadata version is 2.4 or greater and one or more ``License-File`` "
"fields is specified, the :file:`.dist-info/` directory MUST contain a :file:"
"`licenses/` subdirectory, which MUST contain the files listed in the "
"``License-File`` fields in the :file:`METADATA` file at their respective "
"paths relative to the :file:`licenses/` directory."
msgstr ""
"Se la metadatena versio estas 2.4 aŭ pli nova kaj unu aŭ pli da kampoj "
"``License-File`` ekzistas, do la dosierujo :file:`.dist-info/` DEVAS enhavi "
"la subdosierujon :file:`licenses/`, kiu DEVAS enhavi la dosierojn en la "
"kampoj ``License-File`` en la dosiero :file:`METADATA` ĉe la respektivaj "
"dosierlokoj relativaj al la dosierujo :file:`licenses/`."

#: ../source/specifications/binary-distribution-format.rst:281
msgid "The :file:`.dist-info/sboms/` directory"
msgstr "La dosierujo :file:`.dist-info/sboms/`"

#: ../source/specifications/binary-distribution-format.rst:283
msgid ""
"All files contained within the :file:`.dist-info/sboms/` directory MUST be "
"Software Bill-of-Materials (SBOM) files that describe software contained "
"within the distribution archive."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:288
msgid "The .data directory"
msgstr "La dosierujo .data"

#: ../source/specifications/binary-distribution-format.rst:290
msgid ""
"Any file that is not normally installed inside site-packages goes into the ."
"data directory, named as the .dist-info directory but with the .data/ "
"extension::"
msgstr ""
"Iu ajn dosiero ne ordinare instalita al site-packages iras en la dosierujon ."
"data, nomitan kiel la dosierujon .dist-info sed kun la sufikso .data/::"

#: ../source/specifications/binary-distribution-format.rst:298
msgid ""
"The .data directory contains subdirectories with the scripts, headers, "
"documentation and so forth from the distribution.  During installation the "
"contents of these subdirectories are moved onto their destination paths."
msgstr ""
"La dosierujo ``.data`` enhavas subdosierujojn de la programetoj, ĉapoj, "
"dokumentoj ktp de la distribuo.  Dum instalado, la enhavoj de tiuj "
"dosierujoj kopiiĝas al siaj celaj dosierlokoj."

#: ../source/specifications/binary-distribution-format.rst:304
msgid "Signed wheel files"
msgstr "Subskribitaj wheel-dosieroj"

#: ../source/specifications/binary-distribution-format.rst:306
msgid ""
"Wheel files include an extended RECORD that enables digital signatures.  PEP "
"376's RECORD is altered to include a secure hash "
"``digestname=urlsafe_b64encode_nopad(digest)`` (urlsafe base64 encoding with "
"no trailing = characters) as the second column instead of an md5sum.  All "
"possible entries are hashed, including any generated files such as .pyc "
"files, but not RECORD which cannot contain its own hash. For example::"
msgstr ""
"Wheel-dosiero inkluzivas etenditan ``RECORD`` por ciferecaj subskriboj. La "
"``RECORD`` de PEP 376 estas modifita por inkluzivi sekuran haketaĵon "
"``digestname=urlsafe_b64encode_nopad(digest)`` (URL-sekura base64-kodado sen "
"finaj signoj ``=``) kiel la duan kolumnon anstataŭ md5sum.  Ĉiaj eblaj eroj "
"havu haketaĵojn, inkluzive de generitaj dosieroj kiel ``.pyc``-dosieroj, "
"krom ``RECORD`` mem, kiu ne povas enhavi sian propran haketaĵon. Ekzemple::"

#: ../source/specifications/binary-distribution-format.rst:317
msgid ""
"The signature file(s) RECORD.jws and RECORD.p7s are not mentioned in RECORD "
"at all since they can only be added after RECORD is generated. Every other "
"file in the archive must have a correct hash in RECORD or the installation "
"will fail."
msgstr ""
"La subskribo-dosiero(j) RECORD.jws kaj RECORD.p7s ne menciiĝas en RECORD, "
"ĉar ili estas nur aldoneblaj post la generado de RECORD. Ĉiu alia dosiero en "
"la arĥivo devas havi ĝustan haketaĵon en RECORD; se ne, la instalado "
"malsukcesos."

#: ../source/specifications/binary-distribution-format.rst:322
msgid ""
"If JSON web signatures are used, one or more JSON Web Signature JSON "
"Serialization (JWS-JS) signatures is stored in a file RECORD.jws adjacent to "
"RECORD.  JWS is used to sign RECORD by including the SHA-256 hash of RECORD "
"as the signature's JSON payload:"
msgstr ""
"Se oni uzas JSON-retsubskriboj (JWS), unu aŭ pluraj subskriboj uzantaj JSON-"
"seriigon de JSON-retsubskribo (JWS-JS) konserviĝas en dosiero ``RECORD.jws`` "
"apud ``RECORD``. Oni uzas JWS por subskribi ``RECORD`` inkluzivante la "
"haketaĵon SHA-256 de ``RECORD`` kiel la JSON-ŝarĝon de la subskribo:"

#: ../source/specifications/binary-distribution-format.rst:331
msgid "(The hash value is the same format used in RECORD.)"
msgstr "(La haketaĵa valoro estas la sama formo uzata en RECORD.)"

#: ../source/specifications/binary-distribution-format.rst:333
msgid ""
"If RECORD.p7s is used, it must contain a detached S/MIME format signature of "
"RECORD."
msgstr ""
"Se RECORD.p7s estas uzata, ĝi devas enhavi malligitan S/MIME-forman "
"subskribon de RECORD."

#: ../source/specifications/binary-distribution-format.rst:336
msgid ""
"A wheel installer is not required to understand digital signatures but MUST "
"verify the hashes in RECORD against the extracted file contents. When the "
"installer checks file hashes against RECORD, a separate signature checker "
"only needs to establish that RECORD matches the signature."
msgstr ""
"Instalilo de wheel ne devas kompreni ciferecan subskribon sed DEVAS kompari "
"la haketaĵojn en ``RECORD`` al la enhavoj de la maldensigitaj dosieroj. Kiam "
"instalilo komparas la dosierajn haketaĵojn kaj ``RECORD``, aparta subskribo-"
"kontrolilo devas nur kontroli, ĉu ``RECORD`` kongruas kun la subskribo."

#: ../source/specifications/binary-distribution-format.rst:341
msgid "See"
msgstr "Vidu"

#: ../source/specifications/binary-distribution-format.rst:343
msgid "https://datatracker.ietf.org/doc/html/rfc7515"
msgstr "https://datatracker.ietf.org/doc/html/rfc7515"

#: ../source/specifications/binary-distribution-format.rst:344
msgid ""
"https://datatracker.ietf.org/doc/html/draft-jones-json-web-signature-json-"
"serialization-01"
msgstr ""
"https://datatracker.ietf.org/doc/html/draft-jones-json-web-signature-json-"
"serialization-01"

#: ../source/specifications/binary-distribution-format.rst:345
msgid "https://datatracker.ietf.org/doc/html/rfc7517"
msgstr "https://datatracker.ietf.org/doc/html/rfc7517"

#: ../source/specifications/binary-distribution-format.rst:346
msgid ""
"https://datatracker.ietf.org/doc/html/draft-jones-jose-json-private-key-01"
msgstr ""
"https://datatracker.ietf.org/doc/html/draft-jones-jose-json-private-key-01"

#: ../source/specifications/binary-distribution-format.rst:350
#: ../source/specifications/platform-compatibility-tags.rst:370
msgid "FAQ"
msgstr "Oftaj demandoj"

#: ../source/specifications/binary-distribution-format.rst:354
msgid "Wheel defines a .data directory.  Should I put all my data there?"
msgstr "Wheel difinas dosierujon .data.  Ĉu mi metu ĉiom da miaj datenoj tien?"

#: ../source/specifications/binary-distribution-format.rst:356
msgid ""
"This specification does not have an opinion on how you should organize your "
"code.  The .data directory is just a place for any files that are not "
"normally installed inside ``site-packages`` or on the PYTHONPATH. In other "
"words, you may continue to use ``pkgutil.get_data(package, resource)`` even "
"though *those* files will usually not be distributed in *wheel's* ``.data`` "
"directory."
msgstr ""
"Ĉi tiu normo ne havas opinion pri kiel oni organizu sian kodon. La dosierujo "
"``.data`` estas nur loko por tiuj dosieroj, kiuj ordinare ne instaliĝas en "
"``site-packages`` aŭ en ``PYTHONPATH``. Alivorte, oni rajtas daŭre uzi "
"``pkgutil.get_data(pako, risurso)``, eĉ se *tiuj* dosieroj ordinare ne "
"distribuiĝas en la dosierujo ``.data`` de wheel."

#: ../source/specifications/binary-distribution-format.rst:365
msgid "Why does wheel include attached signatures?"
msgstr "Kial wheel inkluzivas alkroĉitajn subskribojn?"

#: ../source/specifications/binary-distribution-format.rst:367
msgid ""
"Attached signatures are more convenient than detached signatures because "
"they travel with the archive.  Since only the individual files are signed, "
"the archive can be recompressed without invalidating the signature or "
"individual files can be verified without having to download the whole "
"archive."
msgstr ""
"Alkroĉita subskribo estas pli oportuna ol nealkroĉita subskribo, ĉar ĝi "
"moviĝas kune kun la arĥivo.  Ĉar nur la individuaj dosieroj estas "
"subskribitaj, la arĥivo estas redensigebla sen eksvalidigi la subskribon, "
"kaj individuaj dosieroj estas kontroleblaj sen reelŝutado de la tuta arĥivo."

#: ../source/specifications/binary-distribution-format.rst:375
msgid "Why does wheel allow JWS signatures?"
msgstr "Kial wheel permesas JWS-subskribojn?"

#: ../source/specifications/binary-distribution-format.rst:377
msgid ""
"The JOSE specifications of which JWS is a part are designed to be easy to "
"implement, a feature that is also one of wheel's primary design goals.  JWS "
"yields a useful, concise pure-Python implementation."
msgstr ""
"La normoj JOSE, de kiuj JWS estas parto, estas laŭfasone facile realigebla; "
"tio estas ankaŭ unu el la fasonaj ĉefceloj de wheel.  JWS ebligas utilan, "
"mallongan pure Python-an realigon."

#: ../source/specifications/binary-distribution-format.rst:383
msgid "Why does wheel also allow S/MIME signatures?"
msgstr "Kial wheel ankaŭ permesas S/MIME-subskribojn?"

#: ../source/specifications/binary-distribution-format.rst:385
msgid ""
"S/MIME signatures are allowed for users who need or want to use existing "
"public key infrastructure with wheel."
msgstr ""
"S/MIME-subskribo estas permesata por tiuj uzantoj, kiuj devas aŭ volas uzi "
"ekzistantan publikŝlosilan infrastrukturon kun wheel."

#: ../source/specifications/binary-distribution-format.rst:388
msgid ""
"Signed packages are only a basic building block in a secure package update "
"system.  Wheel only provides the building block."
msgstr ""
"Subskribita pako estas nur baza briko de sekura pako-ĝisdatiga sistemo.  "
"Wheel nur provizas la bazan brikon."

#: ../source/specifications/binary-distribution-format.rst:393
msgid "What's the deal with \"purelib\" vs. \"platlib\"?"
msgstr "Kio temas pri «purelib» kontraste kun «platlib»?"

#: ../source/specifications/binary-distribution-format.rst:395
msgid ""
"Wheel preserves the \"purelib\" vs. \"platlib\" distinction, which is "
"significant on some platforms. For example, Fedora installs pure Python "
"packages to '/usr/lib/pythonX.Y/site-packages' and platform dependent "
"packages to '/usr/lib64/pythonX.Y/site-packages'."
msgstr ""
"Wheel konservas la distingon inter «purelib» kaj «platlib», kio gravas sur "
"kelkaj platformoj. Ekzemple, Fedora instalas pure Python-ajn pakojn al «/usr/"
"lib/pythonX.Y/site-packages» kaj platformo-dependajn pakojn al «/usr/lib64/"
"pythonX.Y/site-packages»."

#: ../source/specifications/binary-distribution-format.rst:400
msgid ""
"A wheel with \"Root-Is-Purelib: false\" with all its files in ``{name}-"
"{version}.data/purelib`` is equivalent to a wheel with \"Root-Is-Purelib: "
"true\" with those same files in the root, and it is legal to have files in "
"both the \"purelib\" and \"platlib\" categories."
msgstr ""
"Wheel kun «``Root-Is-Purelib: false``», kies ĉiuj dosieroj troviĝas en "
"``{nomo}-{versio}.data/purelib``, ekvivalentas al wheel kun «``Root-Is-"
"Purelib: true``» kun la samaj dosieroj en la radiko. Estas valide havi "
"dosierojn en kaj «purelib» kaj «platlib»."

#: ../source/specifications/binary-distribution-format.rst:405
msgid ""
"In practice a wheel should have only one of \"purelib\" or \"platlib\" "
"depending on whether it is pure Python or not and those files should be at "
"the root with the appropriate setting given for \"Root-is-purelib\"."
msgstr ""
"Praktike, wheel havu nur unu el ``purelib`` aŭ ``platlib``, depende de ĉu ĝi "
"estas pure Python-a aŭ ne, kaj tiaj dosieroj estu ĉe la radiko kun taŭgaj "
"agordoj pri ``Root-is-purelib``."

#: ../source/specifications/binary-distribution-format.rst:413
msgid "Is it possible to import Python code directly from a wheel file?"
msgstr "Ĉu eblas importi Python-kodon rekte el wheel-dosiero?"

#: ../source/specifications/binary-distribution-format.rst:415
msgid ""
"Technically, due to the combination of supporting installation via simple "
"extraction and using an archive format that is compatible with "
"``zipimport``, a subset of wheel files *do* support being placed directly on "
"``sys.path``. However, while this behaviour is a natural consequence of the "
"format design, actually relying on it is generally discouraged."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:421
msgid ""
"Firstly, wheel *is* designed primarily as a distribution format, so skipping "
"the installation step also means deliberately avoiding any reliance on "
"features that assume full installation (such as being able to use standard "
"tools like ``pip`` and ``virtualenv`` to capture and manage dependencies in "
"a way that can be properly tracked for auditing and security update "
"purposes, or integrating fully with the standard build machinery for C "
"extensions by publishing header files in the appropriate place)."
msgstr ""
"Unue, wheel *estas* fasonita ĉefe kiel distribua dosierformo; tial, "
"preterpasi la instaladon ankaŭ implicas intence eviti dependi de funkcioj "
"supozantaj plenan instalon (inkluzive de la kapablo uzi normajn ilojn kiel "
"``pip`` kaj ``virtualenv`` por registri kaj administri dependecojn spureble "
"por reviziado kaj sekurigo, aŭ plena integrado kun la norma konstrumeĥanismo "
"de C-etendaĵo per ĉapdosieroj en konvena loko)."

#: ../source/specifications/binary-distribution-format.rst:430
msgid ""
"Secondly, while some Python software is written to support running directly "
"from a zip archive, it is still common for code to be written assuming it "
"has been fully installed. When that assumption is broken by trying to run "
"the software from a zip archive, the failures can often be obscure and hard "
"to diagnose (especially when they occur in third party libraries). The two "
"most common sources of problems with this are the fact that importing C "
"extensions from a zip archive is *not* supported by CPython (since doing so "
"is not supported directly by the dynamic loading machinery on any platform) "
"and that when running from a zip archive the ``__file__`` attribute no "
"longer refers to an ordinary filesystem path, but to a combination path that "
"includes both the location of the zip archive on the filesystem and the "
"relative path to the module inside the archive. Even when software correctly "
"uses the abstract resource APIs internally, interfacing with external "
"components may still require the availability of an actual on-disk file."
msgstr ""
"Due, dum iuj Python-programoj subtenas ruliĝante rekte el zip-arĥivoj, tamen "
"ofte kodo supozas, ke ĝi estis plene instalita. Kiam tiu supozo estas "
"rompita rulante programon el zip-arĥivo, la eraroj ofte estas obskuraj kaj "
"malfacilaj por diagnozi (speciale en triapartiaj bibliotekoj). La du plej "
"oftaj fontoj de problemoj pri tio estas la faktoj, ke importado de C-"
"etendaĵoj el zip-arĥivo estas *ne* subtenata de CPython (ĉar tion ne "
"subtenas la dinamika ŝargada meĥanismo sur ajna platformo), kaj ke dum "
"rulado el zip-arĥivo la atributo ``__file__`` ne estas ordinara "
"dosiersistema loko sed kombina vojo inkluzivanta kaj la lokon de la zip-"
"arĥivo kaj la relativan vojon al la modulo en la arĥivo. Eĉ kiam programo "
"ĝuste uzas la abstraktajn rimedajn API-ojn interne, interagado kun eksteraj "
"komponantoj povas postuli realan surdiskan dosieron."

#: ../source/specifications/binary-distribution-format.rst:447
msgid ""
"Like metaclasses, monkeypatching and metapath importers, if you're not "
"already sure you need to take advantage of this feature, you almost "
"certainly don't need it. If you *do* decide to use it anyway, be aware that "
"many projects will require a failure to be reproduced with a fully installed "
"package before accepting it as a genuine bug."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:455
#: ../source/specifications/core-metadata.rst:934
#: ../source/specifications/dependency-groups.rst:250
#: ../source/specifications/dependency-specifiers.rst:516
#: ../source/specifications/direct-url-data-structure.rst:292
#: ../source/specifications/direct-url.rst:67
#: ../source/specifications/entry-points.rst:164
#: ../source/specifications/externally-managed-environments.rst:472
#: ../source/specifications/inline-script-metadata.rst:213
#: ../source/specifications/name-normalization.rst:50
#: ../source/specifications/platform-compatibility-tags.rst:434
#: ../source/specifications/pylock-toml.rst:826
#: ../source/specifications/pyproject-toml.rst:531
#: ../source/specifications/recording-installed-packages.rst:278
#: ../source/specifications/simple-repository-api.rst:1012
#: ../source/specifications/source-distribution-format.rst:153
#: ../source/specifications/version-specifiers.rst:1269
#: ../source/specifications/virtual-environments.rst:54
msgid "History"
msgstr "Historio"

#: ../source/specifications/binary-distribution-format.rst:457
msgid "February 2013: This specification was approved through :pep:`427`."
msgstr "Februaro 2013: Ĉi tiu specifo estis aprobita per :pep:`427`."

#: ../source/specifications/binary-distribution-format.rst:458
msgid ""
"February 2021: The rules on escaping in wheel filenames were revised, to "
"bring them into line with what popular tools actually do."
msgstr ""
"Februaro 2021: La reguloj pri kodŝanĝado en wheel-dosiernomoj estis "
"reviziitaj konforme al la fakta konduto de popularaj iloj."

#: ../source/specifications/binary-distribution-format.rst:460
msgid ""
"December 2024: Clarified that the ``scripts`` folder should only contain "
"regular files (the expected behaviour of consuming tools when encountering "
"symlinks or subdirectories in this folder is not formally defined, and hence "
"may vary between tools)."
msgstr ""
"Decembro 2024: Klarigis, ke la dosierujo ``scripts`` nur enhavu ordinaraj "
"dosierojn (ne formale difiniĝas la atendata konduto de konsumanta ilo pri "
"simbola ligilo aŭ subdosierujo en tiu dosierujo; tial kondutoj povas "
"diferenci inter iloj)."

#: ../source/specifications/binary-distribution-format.rst:464
#: ../source/specifications/recording-installed-packages.rst:288
msgid ""
"December 2024: The :file:`.dist-info/licenses/` directory was specified "
"through :pep:`639`."
msgstr ""
"Decembro 2024: La dosierujo :file:`.dist-info/licenses/` estis specifita "
"per :pep:`639`."

#: ../source/specifications/binary-distribution-format.rst:466
msgid ""
"January 2025: Clarified that name and version needs to be normalized for ``."
"dist-info`` and ``.data`` directories."
msgstr ""
"Januaro 2025: Klarigis, ke nomo kaj versio devas esti normigitaj por la "
"dosierujoj ``.dist-info`` kaj ``.data``."

#: ../source/specifications/binary-distribution-format.rst:471
msgid "Appendix"
msgstr "Apendico"

#: ../source/specifications/binary-distribution-format.rst:473
msgid "Example urlsafe-base64-nopad implementation::"
msgstr "Ekzempla realigo de urlsafe-base64-nopad::"

#: ../source/specifications/build-details/index.rst:7
#: ../source/specifications/build-details/index.rst:41
msgid "v1.0"
msgstr "v1.0"

#: ../source/specifications/build-details/index.rst:5
msgid ":file:`build-details.json`"
msgstr ":file:`build-details.json`"

#: ../source/specifications/build-details/index.rst:13
msgid ""
"The ``build-details.json`` file is a standardized file format that provides "
"build-specfic information of a Python installation, such as its version, "
"extension ABI details, and other information that is specific to that "
"particular build of Python."
msgstr ""
"La dosiero ``build-detaloj.json`` estas norma formo pri konstruo-specifaj "
"informoj de instalo de Python – kiel ekzemple la versio, detaloj pri la ABI "
"de etendaĵo, kaj aliaj informoj specifaj al tiu konstruo de Python."

#: ../source/specifications/build-details/index.rst:18
msgid ""
"Starting from Python 3.14, a ``build-details.json`` file is installed in the "
"platform-independent standard library directory (``stdlib``, e.g. ``/usr/lib/"
"python3.14/build-details.json``)."
msgstr ""
"Ekde Python 3.14, dosiero ``build-details.json`` instaliĝas en la platformo-"
"sendependa dosierujo de la norma biblioteko (``stdlib``, ekz. ``/usr/lib/"
"python3.14/build-details.json``)."

#: ../source/specifications/build-details/index.rst:22
msgid ""
"Please refer to the :ref:`latest version <build-details-v1.0>` for its "
"specification."
msgstr ""
"Bonvolu vidi la :ref:`plej novan version <build-details-v1.0>` por la "
"specifo."

#: ../source/specifications/build-details/index.rst:28
#: ../source/specifications/build-details/v1.0.rst:16
#: ../source/specifications/inline-script-metadata.rst:100
#: ../source/specifications/pylock-toml.rst:722
msgid "Example"
msgstr "Ekzemplo"

#: ../source/specifications/build-details/index.rst:35
msgid "Changelog"
msgstr "Protokolo de ŝanĝoj"

#: ../source/specifications/build-details/index.rst:45
#: ../source/specifications/build-details/v1.0.rst:9
#: ../source/specifications/dependency-groups.rst:20
#: ../source/specifications/dependency-specifiers.rst:26
#: ../source/specifications/direct-url-data-structure.rst:19
#: ../source/specifications/direct-url.rst:15
#: ../source/specifications/file-yanking.rst:20
#: ../source/specifications/index-hosted-attestations.rst:17
#: ../source/specifications/inline-script-metadata.rst:13
#: ../source/specifications/license-expression.rst:12
#: ../source/specifications/project-status-markers.rst:20
msgid "Specification"
msgstr "Specifado"

#: ../source/specifications/build-details/index.rst:46
msgid ":ref:`build-details-v1.0`"
msgstr ":ref:`build-details-v1.0`"

#: ../source/specifications/build-details/index.rst:48
msgid "Schema"
msgstr "Skemo"

#: ../source/specifications/build-details/index.rst:49
#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"https://packaging.python.org/en/latest/specifications/schemas/build-details-"
"v1.0.schema.json"
msgstr ""
"https://packaging.python.org/en/latest/specifications/schemas/build-details-"
"v1.0.schema.json"

#: ../source/specifications/build-details/index.rst:52
msgid "Initial version, introduced by :pep:`739`."
msgstr "Unua versio, enkondukita de :pep:`739`."

#: ../source/specifications/build-details/v1.0.rst:5
msgid "``build-details.json`` v1.0"
msgstr "``build-details.json`` v1.0"

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"*build-details.json — a static description file with build details of Python "
"installations*"
msgstr ""
"*build-details.json – statika priskriba dosiero kun konstruaj detaloj de "
"Python-instaloj*"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "type"
msgstr "tipo"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "*object*"
msgstr "*object*"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "properties"
msgstr "atributoj"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**schema\\_version**"
msgstr "**schema\\_version**"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Schema version."
msgstr "Versio de skemo."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This is a string following the format ``<MAJOR>.<MINOR>``, where ``<MAJOR>`` "
"and ``<MINOR>`` are unpaded numbers and represent the **major** and "
"**minor** components of the version. Versions may be arithmetically compared "
"by intrepreting the version string as a decimal number."
msgstr ""
"Jen teksto en la formo ``<MAĴORA>.<MINORA>``, en kiu ``<MAĴORA>`` kaj "
"``<MINORA>`` estas numeroj sen komencaj nuloj, reprezentantajn la "
"komponantojn **major** kaj **minor** de la versio. Oni povas aritmetike "
"kompari versiojn, interpretante la versio-tekston kiel decimalan frakcion "
"kun decimala punkto."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"For this specification version, this value is constant and **MUST** be "
"``1.0``."
msgstr ""
"Por ĉi tiu versio de la normo, la valoro estas konstanta kaj **DEVAS** esti "
"``1.0``."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"Future versions of this schema **MUST** use a higher version number. Future "
"versions of this schema **MUST NOT** use the same **major** version "
"component as other schema version unless its specification is deemed "
"backwards-compatible with them — it can't change, or extend, any parts of "
"the current specification in such a way as the semantics of the interpreted "
"data differ, or that data valid under the new specification is invalid under "
"the older specification, with the exception of additional properties (errors "
"caused by ``additionalProperties``)."
msgstr ""
"Estontaj versioj de ĉi tiu skemo **DEVAS** uzi pli grandan versio-numeron. "
"Estontaj versioj de ĉi tiu skemo **DEVAS NE** uzi la saman versio-"
"komponanton **major** kiel alia skemo-versio, se la normo ne estas "
"retrokontrua kun la alia skemo-version — ĝi ne rajtas modifi aŭ atendi ajnan "
"parton de ĉi tiu normo tiel, ke la semantiko de la interpretitaj datenoj "
"diferencas, aŭ se dateno valida laŭ la nova normo ne validas laŭ mal malnova "
"normo, krom pliaj atributoj (eraroj kaŭzitaj de ``additionalProperties``)."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "*string*"
msgstr "*string*"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "const"
msgstr "const"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "1.0"
msgstr "1.0"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**base\\_prefix**"
msgstr "**base\\_prefix**"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Base prefix of the Python installation."
msgstr "Baza prefikso de la Python-instalo."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"Either an absolute path, or a path relative to directory where this file is "
"contained."
msgstr ""
"Aŭ absoluta dosierloko, aŭ dosierloko relativa al la dosierujo, en kiu "
"troviĝas ĉi tiu dosiero."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "examples"
msgstr "ekzemploj"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "/usr"
msgstr "/usr"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "../.."
msgstr "../.."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "base\\_interpreter"
msgstr "base\\_interpreter"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "The path to the Python interprer of the base installation."
msgstr "La dosierloko de la Python-interpretilo de la baza instalo."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Either an absolute path, or a path relative to ``base_prefix``."
msgstr "Aŭ absoluta dosierloko aŭ dosierloko relativa al ``base_prefix``."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This field **MUST** be present if the installation provides an interpreter "
"executable."
msgstr ""
"Ĉi tiu kampo **DEVAS** ekzisti, se la instalo provizas interpretilan "
"ruleblaĵon."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "/usr/bin/python"
msgstr "/usr/bin/python"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "bin/python"
msgstr "bin/python"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**platform**"
msgstr "**platform**"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "System platform string."
msgstr "Teksto pri sistema platformo."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "This field **SHOULD** be equivalent to ``sysconfig.get_platform()``."
msgstr "Ĉi tiu kampo **EKVIVALENTU** ``sysconfig.get_platform()``."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "linux-x86\\_64"
msgstr "linux-x86\\_64"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**language**"
msgstr "**language**"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Object containing details related to the Python language specification."
msgstr "Objekto enhavanta detalojn pri la normo de la programlingvo Python."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**version**"
msgstr "**version**"

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"String representation the Python language version — a version string "
"consisting only of the *major* and *minor* components."
msgstr ""
"Teksta prezento de la versio de la programlingvo Python – versio-signiĉeno "
"konsistanta nur el la komponantoj *major* kaj *minor*."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This field **SHOULD** be equivalent to ``sysconfig.get_python_version()``."
msgstr "Ĉi tiu kampo **EKVIVALENTU** ``sysconfig.get_python_version()``."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "3.14"
msgstr "3.14"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "version\\_info"
msgstr "version\\_info"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Object in the format of :py:data:`sys.version_info`."
msgstr "Objekto en la formo de :py:data:`sys.version_info`."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "This section **SHOULD** be equivalent to :py:data:`sys.version_info`."
msgstr "Ĉi tiu sekcio **EKVIVALENTU** :py:data:`sys.version_info`."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "major"
msgstr "major"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "3"
msgstr "3"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "minor"
msgstr "minor"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "14"
msgstr "14"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "micro"
msgstr "micro"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "1"
msgstr "1"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "releaselevel"
msgstr "releaselevel"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "final"
msgstr "final"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "serial"
msgstr "serial"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "0"
msgstr "0"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**major**"
msgstr "**major**"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "*number*"
msgstr "*number*"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**minor**"
msgstr "**minor**"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**micro**"
msgstr "**micro**"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**releaselevel**"
msgstr "**releaselevel**"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "enum"
msgstr "enum"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "alpha, beta, candidate, final"
msgstr "alpha, beta, candidate, final"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**serial**"
msgstr "**serial**"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "additionalProperties"
msgstr "additionalProperties"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "False"
msgstr "False"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**implementation**"
msgstr "**implementation**"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Object containing details related to Python implementation."
msgstr "Objekto enhavanta detalojn pri la realigo de Python."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This section **SHOULD** be equivalent to :py:data:`sys.implementation`. It "
"follows specification defined in PEP 421, meaning that on top of the "
"required keys, implementation-specific keys can also exist, but must be "
"prefixed with an underscore."
msgstr ""
"Ĉi tiu sekcio **EKVIVALENTU** :py:data:`sys.implementation`. Ĝi obeas la "
"normon PEP 421: alivorte, krom la postulataj ŝlosiloj, ankaŭ realigo-"
"specifaj ŝlosiloj povas ekzisti, se ili havas prefikson de substreko."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**name**"
msgstr "**name**"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Lower-case name of the Python implementation."
msgstr "Minuskla nomo de la realigo de Python."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "cpython"
msgstr "cpython"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "pypy"
msgstr "pypy"

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"Object in the format of :py:data:`sys.version_info`, containing the "
"implementation version."
msgstr ""
"Objekto en la formo de :py:data:`sys.version_info`, enhavanta la version de "
"la realigo."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "7"
msgstr "7"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "16"
msgstr "16"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "True"
msgstr "True"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "abi"
msgstr "abi"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Object containing details related to ABI."
msgstr "Objekto enhavanta detalojn pri la ABI."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**flags**"
msgstr "**flags**"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Build configuration flags, used to calculate the extension suffix."
msgstr "Konstruadaj agordaj flagoj, por determini la etendaĵan sufikson."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"The flags **MUST** be defined in the order they appear on the extension "
"suffix."
msgstr ""
"La flagoj **DEVAS** difiniĝi laŭ la ordo de apero en la etendaĵa sufikso."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "*array*"
msgstr "*array*"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "t"
msgstr "t"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "d"
msgstr "d"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "extension\\_suffix"
msgstr "extension\\_suffix"

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"Suffix used for extensions built against the current implementation version."
msgstr "Sufikso por etendaĵo uzanta la aktualan version de la realigo."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This field **MUST** be present if the Python implementation supports "
"extensions, otherwise this entry will be missing."
msgstr ""
"Ĉi tiu kampo **DEVAS** ekzisti, se la Python-realigo subtenas etendaĵon; se "
"ne, ĉi tiu ero mankas."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ".cpython-314-x86\\_64-linux-gnu.so"
msgstr ".cpython-314-x86\\_64-linux-gnu.so"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "stable\\_abi\\_suffix"
msgstr "stable\\_abi\\_suffix"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Suffix used for extensions built against the stable ABI."
msgstr "Sufikso uzata por etendaĵoj uzantaj la stabilan ABI."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This field **MUST** be present if the Python implementation has a stable ABI "
"extension suffix, otherwise this entry will be missing."
msgstr ""
"Ĉi tiu sekcio **DEVAS** ekzisti, se la Python-instalo provizas "
"etendaĵosufikson por stabila ABI; se ne, ĉi tiu sekcio mankas."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ".abi3.so"
msgstr ".abi3.so"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "suffixes"
msgstr "suffixes"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Valid module suffixes grouped by type."
msgstr "Validaj modulaj sufiksoj grupigitaj laŭ tipo."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This section **MUST** be present if the Python installation supports "
"importing external files, and it **SHOULD** be equivalent to the ``importlib."
"machinery.*_SUFFIXES`` attributes."
msgstr ""
"Ĉi tiu sekcio **DEVAS** ekzisti, se la Python-instalo subtenas importado de "
"ektera dosiero, kaj ĝi **EKVIVALENTU** la atributojn ``importlib.machinery."
"*_SUFFIXES``."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"Additionally, if a Python implementation provides extension kinds other than "
"the ones listed on ``importlib.machinery`` module, they **MAY** add a sub-"
"section for them."
msgstr ""
"Plie, se Python-realigo subtenas specojn de etendaĵoj aliajn ol tiuj, kiuj "
"troviĝas en la modulo ``importlib.machinery``, do subsekcioj por tiuj specoj "
"**POVAS** ankaŭ ekzisti."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "source"
msgstr "source"

#: ../source/specifications/build-details/v1.0.rst:12
msgid ".py"
msgstr ".py"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "bytecode"
msgstr "bytecode"

#: ../source/specifications/build-details/v1.0.rst:12
msgid ".pyc"
msgstr ".pyc"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "optimized_bytecode"
msgstr "optimized_bytecode"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "debug_bytecode"
msgstr "debug_bytecode"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "extensions"
msgstr "extensions"

#: ../source/specifications/build-details/v1.0.rst:12
msgid ".cpython-313-x86\\_64-linux-gnu.so"
msgstr ".cpython-313-x86\\_64-linux-gnu.so"

#: ../source/specifications/build-details/v1.0.rst:12
msgid ".so"
msgstr ".so"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "libpython"
msgstr "libpython"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Object containing details related to the ``libpython`` library."
msgstr "Objekto enhavanta detalojn pri la biblioteko ``libpython``."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This section **MUST** by present if Python installation provides a "
"``libpython`` library, otherwise this section will be missing."
msgstr ""
"Ĉi tiu sekcio **DEVAS** ekzisti, se la Python-instalo provizas bibliotekon "
"``libpython``; se ne, ĉi tiu sekcio mankas."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "dynamic"
msgstr "dynamic"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "The path to the dynamic ``libpython`` library."
msgstr "La dosierloko de la dinamika biblioteko ``libpython``."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This field **MUST** be present if the Python installation provides a dynamic "
"``libpython`` library, otherwise this entry will be missing."
msgstr ""
"Ĉi tiu sekcio **DEVAS** ekzisti, se la Python-instalo provizas dinamikan "
"bibliotekon ``libpython``; se ne, ĉi tiu sekcio mankas."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "/usr/lib/libpython3.14.so.1.0"
msgstr "/usr/lib/libpython3.14.so.1.0"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "lib/libpython3.14.so.1.0"
msgstr "lib/libpython3.14.so.1.0"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "dynamic\\_stableabi"
msgstr "dynamic\\_stableabi"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "The path to the dynamic ``libpython`` library for the stable ABI."
msgstr ""
"La dosierloko de la dinamika biblioteko ``libpython`` por la stabila ABI."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This field **MUST** be present if the Python installation provides a dynamic "
"``libpython`` library targeting the Stable ABI, otherwise this entry will be "
"missing."
msgstr ""
"Ĉi tiu sekcio **DEVAS** ekzisti, se la Python-instalo provizas dinamikan "
"bibliotekon ``libpython`` por la Stabila ABI; se ne, ĉi tiu sekcio mankas."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "If this key is present ``dynamic`` **MUST** also be set."
msgstr "Se ĉi tiu ŝlosilo ekzistas, ``dynamic`` **DEVAS** ankaŭ ekzisti."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "/usr/lib/libpython3.so"
msgstr "/usr/lib/libpython3.so"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "lib/libpython3.so"
msgstr "lib/libpython3.so"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "static"
msgstr "static"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "The path to the static ``libpython`` library."
msgstr "La dosierloko de la statika biblioteko ``libpython``."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This field **MUST** be present if the Python installation provides a static "
"``libpython`` library, otherwise this entry will be missing."
msgstr ""
"Ĉi tiu sekcio **DEVAS** ekzisti, se la Python-instalo provizas statikan "
"bibliotekon ``libpython``; se ne, ĉi tiu sekcio mankas."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "/usr/lib/python3.14/config-3.14-x86\\_64-linux-gnu/libpython3.14.a"
msgstr "/usr/lib/python3.14/config-3.14-x86\\_64-linux-gnu/libpython3.14.a"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "lib/python3.14/config-3.14-x86\\_64-linux-gnu/libpython3.14.a"
msgstr "lib/python3.14/config-3.14-x86\\_64-linux-gnu/libpython3.14.a"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "link\\_extensions"
msgstr "link\\_extensions"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Should extensions built against a dynamic ``libpython`` link to it?"
msgstr "Ĉu etendaĵo konstruita por dinamika ``libpython`` bindiĝi al ĝi?"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "*boolean*"
msgstr "*boolean*"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "c\\_api"
msgstr "c\\_api"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Object containing details related to the Python C API."
msgstr "Objekto enhavanta detalojn pri la C API de Python."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This section **MUST** be present if the Python implementation provides a C "
"API, otherwise this section will be missing."
msgstr ""
"Ĉi tiu sekcio **DEVAS** ekzisti, se la Python-instalo provizas C API; se ne, "
"ĉi tiu sekcio mankas."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "**headers**"
msgstr "**headers**"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "The path to the C API headers."
msgstr "La dosierloko de la ĉapoj de la C API."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "/usr/include/python3.14"
msgstr "/usr/include/python3.14"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "include/python3.14"
msgstr "include/python3.14"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "pkgconfig\\_path"
msgstr "pkgconfig\\_path"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "The path to the pkg-config definition files."
msgstr "La dosierloko de la difinodosieroj pkg-config."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This field **MUST** be present if the Python implementation provides pkg-"
"config definition files, otherwise this section will be missing."
msgstr ""
"Ĉi tiu sekcio **DEVAS** ekzisti, se la Python-instalo provizas "
"difinodosierojn pkg-config; se ne, ĉi tiu sekcio mankas."

#: ../source/specifications/build-details/v1.0.rst:12
msgid "/usr/lib/pkgconfig"
msgstr "/usr/lib/pkgconfig"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "lib/pkgconfig"
msgstr "lib/pkgconfig"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "arbitrary\\_data"
msgstr "arbitrary\\_data"

#: ../source/specifications/build-details/v1.0.rst:12
msgid "Object containing extra arbitrary data."
msgstr "Objekto enhavantan ekstrajn arbitrajn datenojn."

#: ../source/specifications/build-details/v1.0.rst:12
msgid ""
"This is meant to be used as an escape-hatch, to include any relevant data "
"that is not covered by this specification. Implementations may choose what "
"data to provide in this section."
msgstr ""
"Oni uzu tion por inkluzivi ĉian ajn gravan datenon ne menciitan en ĉi tiu "
"nromo. Realigo povas elekti tiajn informojn, kiaj inkluziviĝos en ĉi tiu "
"sekcio."

#: ../source/specifications/core-metadata.rst:7
msgid "Core metadata specifications"
msgstr "Kernaj metadatenaj specifoj"

#: ../source/specifications/core-metadata.rst:9
msgid "This page describes version 2.4, approved in August 2024."
msgstr ""

#: ../source/specifications/core-metadata.rst:11
msgid ""
"Fields defined in the following specification should be considered valid, "
"complete and not subject to change. The required fields are:"
msgstr ""
"La kampoj difinitaj en la jena specifo estu konsiderataj kiel validaj, "
"plenaj kaj ne ŝanĝotaj. Jen la postulataj kampoj:"

#: ../source/specifications/core-metadata.rst:14
msgid "``Metadata-Version``"
msgstr ""

#: ../source/specifications/core-metadata.rst:15
msgid "``Name``"
msgstr "``Name``"

#: ../source/specifications/core-metadata.rst:16
msgid "``Version``"
msgstr ""

#: ../source/specifications/core-metadata.rst:18
msgid "All the other fields are optional."
msgstr "Ĉiuj aliaj kampoj estas nedevigaj."

#: ../source/specifications/core-metadata.rst:20
msgid ""
"The standard file format for metadata (including in :doc:`wheels <binary-"
"distribution-format>` and :doc:`installed projects <recording-installed-"
"packages>`) is based on the format of email headers. However, email formats "
"have been revised several times, and exactly which email RFC applies to "
"packaging metadata is not specified. In the absence of a precise definition, "
"the practical standard is set by what the standard library :mod:`python:"
"email.parser` module can parse using the :data:`~.python:email.policy."
"compat32` policy."
msgstr ""

#: ../source/specifications/core-metadata.rst:29
msgid ""
"Whenever metadata is serialised to a byte stream (for example, to save to a "
"file), strings must be serialised using the UTF-8 encoding."
msgstr ""
"Se metadatenoj seriiĝas al bajta fluo (ekzemple, por konservado sur "
"dosieron), signoĉenoj devas esti koditaj laŭ UTF-8."

#: ../source/specifications/core-metadata.rst:32
msgid ""
"Although :pep:`566` defined a way to transform metadata into a JSON-"
"compatible dictionary, this is not yet used as a standard interchange "
"format. The need for tools to work with years worth of existing packages "
"makes it difficult to shift to a new format."
msgstr ""
"Kvankam :pep:`566` difinis manieron transformi metadatenojn en JSON-kongruan "
"vortaron, ĝi ankoraŭ ne estas uzata kiel norma interŝanĝa dosierformo. Por "
"iloj, la bezono kunfunkcii kun jaroj da ekzistantaj pakoj malfaciligas "
"adoptadon de nova dosierformo."

#: ../source/specifications/core-metadata.rst:37
msgid ""
"*Interpreting old metadata:* In :pep:`566`, the version specifier field "
"format specification was relaxed to accept the syntax used by popular "
"publishing tools (namely to remove the requirement that version specifiers "
"must be surrounded by parentheses). Metadata consumers may want to use the "
"more relaxed formatting rules even for metadata files that are nominally "
"less than version 2.1."
msgstr ""

#: ../source/specifications/core-metadata.rst:48
msgid "Metadata-Version"
msgstr "Metadata-Version"

#: ../source/specifications/core-metadata.rst:52
msgid ""
"Version of the file format; legal values are \"1.0\", \"1.1\", \"1.2\", "
"\"2.1\", \"2.2\", \"2.3\", and \"2.4\"."
msgstr ""
"Versio de la dosierformo; la validaj valoroj estas «1.0», «1.1», «1.2», "
"«2.1», «2.2», «2.3», kaj «2.4»."

#: ../source/specifications/core-metadata.rst:55
msgid ""
"Automated tools consuming metadata SHOULD warn if ``metadata_version`` is "
"greater than the highest version they support, and MUST fail if "
"``metadata_version`` has a greater major version than the highest version "
"they support (as described in the :ref:`Version specifier specification "
"<version-specifiers>`, the major version is the value before the first dot)."
msgstr ""

#: ../source/specifications/core-metadata.rst:62
msgid ""
"For broader compatibility, build tools MAY choose to produce distribution "
"metadata using the lowest metadata version that includes all of the needed "
"fields."
msgstr ""
"Por pli larĝa kongrueco, konstruilo POVAS generi distribuajn metadatenojn "
"uzante la plej malnovan metadatenan version inkluzivantan ĉiujn necesajn "
"kampojn."

#: ../source/specifications/core-metadata.rst:66
#: ../source/specifications/core-metadata.rst:84
#: ../source/specifications/core-metadata.rst:101
#: ../source/specifications/core-metadata.rst:176
#: ../source/specifications/core-metadata.rst:191
#: ../source/specifications/core-metadata.rst:229
#: ../source/specifications/core-metadata.rst:301
#: ../source/specifications/core-metadata.rst:305
#: ../source/specifications/core-metadata.rst:309
#: ../source/specifications/core-metadata.rst:313
#: ../source/specifications/core-metadata.rst:345
#: ../source/specifications/core-metadata.rst:367
#: ../source/specifications/core-metadata.rst:385
#: ../source/specifications/core-metadata.rst:410
#: ../source/specifications/core-metadata.rst:432
#: ../source/specifications/core-metadata.rst:652
#: ../source/specifications/core-metadata.rst:687
#: ../source/specifications/core-metadata.rst:697
#: ../source/specifications/core-metadata.rst:831
#: ../source/specifications/core-metadata.rst:928
msgid "Example::"
msgstr "Ekzemple::"

#: ../source/specifications/core-metadata.rst:74
msgid "Name"
msgstr "Nomo"

#: ../source/specifications/core-metadata.rst:77
msgid "Added restrictions on format from the :ref:`name format <name-format>`."
msgstr "Aldonis restriktojn pri formo el la :ref:`noma formo <name-format>`."

#: ../source/specifications/core-metadata.rst:80
msgid ""
"The name of the distribution. The name field is the primary identifier for a "
"distribution. It must conform to the :ref:`name format specification <name-"
"format>`."
msgstr ""
"La nomo de la distribuo. La kampo ``name`` estas la ĉefa identigilo de "
"distribuo. Ĝi devas observi la :ref:`specifon pri nomformoj <name-format>`."

#: ../source/specifications/core-metadata.rst:88
msgid ""
"For comparison purposes, the names should be :ref:`normalized <name-"
"normalization>` before comparing."
msgstr ""
"Por komparado, la nomoj estu :ref:`normigitaj <name-normalization>` antaŭ "
"komparado."

#: ../source/specifications/core-metadata.rst:93
msgid "Version"
msgstr "Versio"

#: ../source/specifications/core-metadata.rst:97
msgid ""
"A string containing the distribution's version number.  This field  must be "
"in the format specified in the :ref:`Version specifier specification "
"<version-specifiers>`."
msgstr ""
"Signoĉeno enhavanta la versian numero de la distribuo.  Tiu kampo  devas "
"esti en la formo specifita en la :ref:`specifo pri versio-specifiloj "
"<version-specifiers>`."

#: ../source/specifications/core-metadata.rst:109
msgid "Dynamic (multiple use)"
msgstr "Dynamic (plurfoje uzebla)"

#: ../source/specifications/core-metadata.rst:113
msgid ""
"A string containing the name of another core metadata field. The field names "
"``Name``, ``Version``, and ``Metadata-Version`` may not be specified in this "
"field."
msgstr ""
"Signoĉeno enhavanta la nomon de alia kerna metadatena kampo. La kamponomoj "
"``Name``, ``Version`` kaj ``Metadata-Version`` devas esti ne specifitaj en "
"ĉi tiu kampo."

#: ../source/specifications/core-metadata.rst:117
msgid ""
"When found in the metadata of a source distribution, the following rules "
"apply:"
msgstr ""
"Se ĝi troviĝas en la metadatenoj de fonta distribuo, efektivas la jenaj "
"reguloj:"

#: ../source/specifications/core-metadata.rst:120
msgid ""
"If a field is *not* marked as ``Dynamic``, then the value of the field in "
"any wheel built from the sdist MUST match the value in the sdist. If the "
"field is not in the sdist, and not marked as ``Dynamic``, then it MUST NOT "
"be present in the wheel."
msgstr ""
"Se kampo *ne* estas markita kiel ``Dynamic``, do la valoro de la kampo en "
"ajna wheel konstruita el la fonta distribuo DEVAS egali la valoron en la "
"fonta distribuo. Se la kampo mankas en la fonta distribuo kaj ne estas "
"markita kiel ``Dynamic``, do ĝi DEVAS NE ekzisti en la wheel."

#: ../source/specifications/core-metadata.rst:124
msgid ""
"If a field is marked as ``Dynamic``, it may contain any valid value in a "
"wheel built from the sdist (including not being present at all)."
msgstr ""
"Se kampo estas markita kiel ``Dynamic``, ĝi povas enhavi iun ajn validan "
"valoron en wheel konstruita el la fonta distribuo (inkluzive de manko de "
"valoro)."

#: ../source/specifications/core-metadata.rst:127
msgid ""
"If the sdist metadata version is older than version 2.2, then all fields "
"should be treated as if they were specified with ``Dynamic`` (i.e. there are "
"no special restrictions on the metadata of wheels built from the sdist)."
msgstr ""
"Se la metadatenoj de la fonta distribuo havas version malpli novan ol 2.2, "
"do oni pritraktu ĉiujn kampojn, kvazaŭ ili estus markitaj per ``Dynamic`` "
"(alivorte, kvazaŭ ne ekzistus speciala limigo pri la metadatenoj de wheel "
"konstruita el la fonta distribuo)."

#: ../source/specifications/core-metadata.rst:131
msgid ""
"In any context other than a source distribution, ``Dynamic`` is for "
"information only, and indicates that the field value was calculated at wheel "
"build time, and may not be the same as the value in the sdist or in other "
"wheels for the project."
msgstr ""
"En ĉiu kunteksto krom fonta distribuo, ``Dynamic`` estas nur informa kaj "
"indikas, ke la valoro de la kampo estis komputita dum konstruado de wheel "
"kaj eble ne egalas la valoron en la fonta distribuo en alia wheel por la "
"projekto."

#: ../source/specifications/core-metadata.rst:136
msgid ""
"Note in particular that if you have obtained a prebuilt wheel, you cannot "
"assume that a field which is not marked as ``Dynamic`` will have the same "
"value in other wheels, as some wheels are not built directly from the sdist, "
"but are modified from existing wheels (the ``auditwheel`` tool does this, "
"for example, and it's commonly used when building wheels for PyPI). Such "
"modifications *could* include changing metadata (even non-dynamic "
"metadata).  Similarly, if you have a sdist and a wheel which you didn't "
"build from that sdist, you cannot assume that the wheel's metadata matches "
"that of the sdist, even if the field is not marked as ``Dynamic``."
msgstr ""

#: ../source/specifications/core-metadata.rst:146
msgid ""
"Full details of the semantics of ``Dynamic`` are described in :pep:`643`."
msgstr "Plenaj detaloj pri la semantiko de ``Dynamic`` troviĝas en :pep:`643`."

#: ../source/specifications/core-metadata.rst:151
msgid "Platform (multiple use)"
msgstr "Platform (plurfoje uzebla)"

#: ../source/specifications/core-metadata.rst:155
msgid ""
"A Platform specification describing an operating system supported by the "
"distribution which is not listed in the \"Operating System\" Trove "
"classifiers. See \"Classifier\" below."
msgstr ""
"Platforma specifo priskribanta mastruman sistemon subtenatan de la distribuo "
"kaj ne en la listo de la Trove-klasigilo «Operating System». Vidu "
"«Klasigilon» ĉi-sube."

#: ../source/specifications/core-metadata.rst:159
#: ../source/specifications/core-metadata.rst:465
#: ../source/specifications/core-metadata.rst:486
#: ../source/specifications/core-metadata.rst:509
#: ../source/specifications/core-metadata.rst:538
#: ../source/specifications/core-metadata.rst:579
#: ../source/specifications/core-metadata.rst:635
#: ../source/specifications/core-metadata.rst:772
#: ../source/specifications/core-metadata.rst:802
#: ../source/specifications/core-metadata.rst:882
#: ../source/specifications/core-metadata.rst:904
msgid "Examples::"
msgstr "Ekzemploj::"

#: ../source/specifications/core-metadata.rst:167
msgid "Supported-Platform (multiple use)"
msgstr "Supported-Platform (plurfoje uzebla)"

#: ../source/specifications/core-metadata.rst:171
msgid ""
"Binary distributions containing a PKG-INFO file will use the Supported-"
"Platform field in their metadata to specify the OS and CPU for which the "
"binary distribution was compiled.  The semantics of the Supported-Platform "
"field are not specified in this PEP."
msgstr ""
"Duuma distribuo enhavanta dosieron :file:`PKG-INFO` enhavos la kampon "
"``Supported-Platform`` en metadatenoj specifantan la mastruman sistemon kaj "
"ĉefprocesoron, por kiu la duuma distribuo estis tradukita. Ĉi tiu PEP ne "
"difinas la semantikon de la kampo ``Supported-Platform``."

#: ../source/specifications/core-metadata.rst:185
msgid "Summary"
msgstr ""

#: ../source/specifications/core-metadata.rst:189
msgid "A one-line summary of what the distribution does."
msgstr "Unulinia resumo pri la funkcioj de la distribuo."

#: ../source/specifications/core-metadata.rst:209
msgid "This field may be specified in the message body instead."
msgstr "Ĉi tiu kampo estas anstataŭe specifebla en la mesaĝa korpo."

#: ../source/specifications/core-metadata.rst:212
msgid ""
"A longer description of the distribution that can run to several "
"paragraphs.  Software that deals with metadata should not assume any maximum "
"size for this field, though people shouldn't include their instruction "
"manual as the description."
msgstr ""
"Pli longa priskribo de la distribuo, kiu povas esti pluraj paragrafoj. "
"Programo uzanta metadatenojn ne supozu ajnan maksimumon por tiu kampo, "
"kvankam oni ne inkluzivu plenan manlibron kiel la priskribon."

#: ../source/specifications/core-metadata.rst:217
msgid ""
"The contents of this field can be written using reStructuredText markup "
"[1]_.  For programs that work with the metadata, supporting markup is "
"optional; programs can also display the contents of the field as-is.  This "
"means that authors should be conservative in the markup they use."
msgstr ""
"La enhavo de tiu kampo povas uzi la marklingvon reStructuredText [1]_. "
"Programo uzanta la metadatenojn ne devas kompreni la marklingvon kaj rajtas "
"anstataŭe montri la kampon krude. Tio signifas, ke aŭtoro estu konservativa "
"pri la uzata marklingvo."

#: ../source/specifications/core-metadata.rst:223
msgid ""
"To support empty lines and lines with indentation with respect to the RFC "
"822 format, any CRLF character has to be suffixed by 7 spaces followed by a "
"pipe (\"|\") char. As a result, the Description field is encoded into a "
"folded field that can be interpreted by RFC822 parser [2]_."
msgstr ""

#: ../source/specifications/core-metadata.rst:240
msgid ""
"This encoding implies that any occurrences of a CRLF followed by 7 spaces "
"and a pipe char have to be replaced by a single CRLF when the field is "
"unfolded using a RFC822 reader."
msgstr ""
"Tiu kodado implicas, ke ajna okazo de CRLF sekvita de 7 spacetoj kaj "
"vertikalo devas esti anstataŭigita per unu CRLF, kiam la kampo estas "
"maldensigita per realigaĵo de RFC822."

#: ../source/specifications/core-metadata.rst:244
msgid ""
"Alternatively, the distribution's description may instead be provided in the "
"message body (i.e., after a completely blank line following the headers, "
"with no indentation or other special formatting necessary)."
msgstr ""
"Alternative, la priskribo de la distribuo povas esti en la enhavo de la "
"mesaĝo (t.e. post plene malplena linio post la ĉapoj, sen krommarĝeno aŭ "
"alia speciala aranĝado)."

#: ../source/specifications/core-metadata.rst:253
msgid "Description-Content-Type"
msgstr "Description-Content-Type"

#: ../source/specifications/core-metadata.rst:257
msgid ""
"A string stating the markup syntax (if any) used in the distribution's "
"description, so that tools can intelligently render the description."
msgstr ""
"Signoĉeno pri la marklingva sintakso (se iu ekzistas) de la priskribo de la "
"distribuo, por inteligenta montrado de la priskribo far iloj."

#: ../source/specifications/core-metadata.rst:260
msgid ""
"Historically, PyPI supported descriptions in plain text and "
"`reStructuredText (reST) <https://docutils.sourceforge.io/docs/ref/rst/"
"restructuredtext.html>`_, and could render reST into HTML. However, it is "
"common for distribution authors to write the description in `Markdown "
"<https://daringfireball.net/projects/markdown/>`_ (:rfc:`7763`) as many code "
"hosting sites render Markdown READMEs, and authors would reuse the file for "
"the description. PyPI didn't recognize the format and so could not render "
"the description correctly. This resulted in many packages on PyPI with "
"poorly-rendered descriptions when Markdown is left as plain text, or worse, "
"was attempted to be rendered as reST. This field allows the distribution "
"author to specify the format of their description, opening up the "
"possibility for PyPI and other tools to be able to render Markdown and other "
"formats."
msgstr ""
"Historie, PyPI subtenis priskribojn en ordinara teksto kaj `reStructuredText "
"(reST) <https://docutils.sourceforge.io/docs/ref/rst/restructuredtext."
"html>`_, kaj povis montri reST en HTML. Tamen, ofte aŭtoroj de distribuoj "
"verkas la priskribojn en `Markdown <https://daringfireball.net/projects/"
"markdown/>`_ (:rfc:`7763`), ĉar multaj kodgastigejoj montras README en "
"Markdown, kaj aŭtoroj reuzas la dosieron por la priskribo. PyPI ne agnoskis "
"tiun formon kaj tial ne povis montri la priskribon ĝuste. Tio kaŭzis multajn "
"pakojn ĉe PyPI kun malĝustaj priskriboj de Markdown montrita kiel ordinara "
"teksto aŭ, pli aĉe, kiel reST. Ĉi tiu kampo ebligas la aŭtoron de la "
"distribuo specifi la dosierformon de la priskribo, ebligante PyPI kaj aliajn "
"ilojn montri Markdown kaj aliajn dosierformojn."

#: ../source/specifications/core-metadata.rst:273
msgid ""
"The format of this field is the same as the ``Content-Type`` header in HTTP "
"(i.e.: `RFC 1341 <https://www.w3.org/Protocols/rfc1341/4_Content-Type."
"html>`_). Briefly, this means that it has a ``type/subtype`` part and then "
"it can optionally have a number of parameters:"
msgstr ""
"La formo de tiu kampo estas sama kiel la ĉapo ``Content-Type`` de HTTP (laŭ "
"`RFC 1341 <https://www.w3.org/Protocols/rfc1341/4_Content-Type.html>`_). "
"Resume, ĝi havas parton ``type/subtype`` kun nedeviga(j) parametro(j):"

#: ../source/specifications/core-metadata.rst:279
msgid "Format::"
msgstr "Formo::"

#: ../source/specifications/core-metadata.rst:283
msgid "The ``type/subtype`` part has only a few legal values:"
msgstr "La parto ``type/subtype`` nur havas kelkajn validajn valorojn:"

#: ../source/specifications/core-metadata.rst:285
msgid "``text/plain``"
msgstr "``text/plain``"

#: ../source/specifications/core-metadata.rst:286
msgid "``text/x-rst``"
msgstr "``text/x-rst``"

#: ../source/specifications/core-metadata.rst:287
msgid "``text/markdown``"
msgstr "``text/markdown``"

#: ../source/specifications/core-metadata.rst:289
msgid ""
"The ``charset`` parameter can be used to specify the character encoding of "
"the description. The only legal value is ``UTF-8``. If omitted, it is "
"assumed to be ``UTF-8``."
msgstr ""
"La parametro ``charset`` povas specifi la signokodadon de la priskribo. La "
"ununura valida valoro estas ``UTF-8``. Se ĝi mankas, oni supozas la valoron "
"``UTF-8``."

#: ../source/specifications/core-metadata.rst:293
msgid ""
"Other parameters might be specific to the chosen subtype. For example, for "
"the ``markdown`` subtype, there is an optional ``variant`` parameter that "
"allows specifying the variant of Markdown in use (defaults to ``GFM`` if not "
"specified). Currently, two variants are recognized:"
msgstr ""
"Aliaj parametroj povas esti specifaj pri la subtipo. Ekzemple, por la "
"subtipo ``markdown``, ekzistas nedeviga parametro ``variant`` pri la uzita "
"varianto de Markdown (se ĝi mankas, tio implicas ``GFM``). Aktuale du "
"variantoj estas konataj:"

#: ../source/specifications/core-metadata.rst:298
msgid "``GFM`` for :rfc:`GitHub-flavored Markdown <7764#section-3.2>`"
msgstr "``GFM`` por :rfc:`GitHub-stila Markdown <7764#section-3.2>`"

#: ../source/specifications/core-metadata.rst:299
msgid "``CommonMark`` for :rfc:`CommonMark <7764#section-3.5>`"
msgstr "``CommonMark`` por :rfc:`CommonMark <7764#section-3.5>`"

#: ../source/specifications/core-metadata.rst:317
msgid ""
"If a ``Description-Content-Type`` is not specified, then applications should "
"attempt to render it as ``text/x-rst; charset=UTF-8`` and fall back to "
"``text/plain`` if it is not valid rst."
msgstr ""
"Se ``Description-Content-Type`` mankas, programo provu montri la priskribon "
"kiel ``text/x-rst; charset=UTF-8`` kaj, se ĝi ne estas valida "
"reStructuredText, montri ĝin kiel ``text/plain``."

#: ../source/specifications/core-metadata.rst:321
msgid ""
"If a ``Description-Content-Type`` is an unrecognized value, then the assumed "
"content type is ``text/plain`` (Although PyPI will probably reject anything "
"with an unrecognized value)."
msgstr ""
"Se ``Description-Content-Type`` estas nekonata valoro, do la supozata "
"enhavtipo estas ``text/plain`` (kvankam PyPI verŝajne malakceptos ion ajn de "
"nekonata valoro)."

#: ../source/specifications/core-metadata.rst:325
msgid ""
"If the ``Description-Content-Type`` is ``text/markdown`` and ``variant`` is "
"not specified or is set to an unrecognized value, then the assumed "
"``variant`` is ``GFM``."
msgstr ""
"Se ``Description-Content-Type`` estas ``text/markdown`` kaj ``variant`` "
"estas nespecifita aŭ nekonata, do la implicita ``variant`` estas ``GFM``."

#: ../source/specifications/core-metadata.rst:329
msgid ""
"So for the last example above, the ``charset`` defaults to ``UTF-8`` and the "
"``variant`` defaults to ``GFM`` and thus it is equivalent to the example "
"before it."
msgstr ""
"Por la ĉi-supra ekzemplo, ``charset`` estas implicite ``UTF-8``, kaj "
"``varianto`` estas implicite ``GFM``. Tial, ĝi ekvivalentas la ekzemplon "
"antaŭ si."

#: ../source/specifications/core-metadata.rst:338
msgid "Keywords"
msgstr "Keywords"

#: ../source/specifications/core-metadata.rst:342
msgid ""
"A list of additional keywords, separated by commas, to be used to assist "
"searching for the distribution in a larger catalog."
msgstr ""
"Listo de ekstraj ŝlosilvortoj, apartigitaj de komoj, por helpi serĉadon de "
"la distribuo en granda katalogo."

#: ../source/specifications/core-metadata.rst:351
msgid ""
"The specification previously showed keywords separated by spaces, but "
"distutils and setuptools implemented it with commas. These tools have been "
"very widely used for many years, so it was easier to update the "
"specification to match the de facto standard."
msgstr ""
"Ĉi tiu normo antaŭe apartigis ŝlosilvortojn per spacetoj, sed distutils kaj "
"setuptools realigis ĝin per komoj. Tiuj iloj estas vaste uzata dum multaj "
"jaroj; tial pli facilas modifi la normon por kongrui kun la realo."

#: ../source/specifications/core-metadata.rst:360
msgid "Author"
msgstr "Author"

#: ../source/specifications/core-metadata.rst:364
msgid ""
"A string containing the author's name at a minimum; additional contact "
"information may be provided."
msgstr ""
"Signoĉeno enhavanta la nomon de la aŭtoro minimume; kromaj kontaktaj "
"informoj povas esti disponigitaj."

#: ../source/specifications/core-metadata.rst:377
msgid "Author-email"
msgstr "Author-email"

#: ../source/specifications/core-metadata.rst:381
msgid ""
"A string containing the author's e-mail address.  It can contain a name and "
"e-mail address in the legal forms for a RFC-822 ``From:`` header."
msgstr ""
"Signoĉeno enhavanta la retpoŝtan adreson de la aŭtoro.  Ĝi povas enhavi "
"nomon kaj retpoŝtan adreson laŭ la formo de la ĉapo ``From:`` en RFC 822."

#: ../source/specifications/core-metadata.rst:389
#: ../source/specifications/core-metadata.rst:436
msgid ""
"Per RFC-822, this field may contain multiple comma-separated e-mail "
"addresses::"
msgstr ""
"Laŭ RFC 822, ĉi tiu kampo povas enhavi pluajn kome disigitajn retpoŝtajn "
"adresojn::"

#: ../source/specifications/core-metadata.rst:399
msgid "Maintainer"
msgstr "Prizorganto"

#: ../source/specifications/core-metadata.rst:403
msgid ""
"A string containing the maintainer's name at a minimum; additional contact "
"information may be provided."
msgstr ""
"Signoĉeno enhavanta la nomon de la mastrumanto minimume; kromaj kontaktaj "
"informoj povas esti disponigitaj."

#: ../source/specifications/core-metadata.rst:406
msgid ""
"Note that this field is intended for use when a project is being maintained "
"by someone other than the original author:  it should be omitted if it is "
"identical to ``Author``."
msgstr ""
"Notu, ke ĉi tiu kampo estas por tiam, kiam projekto estas mastrumata de iu "
"alia ol la origina aŭtoro.  Ĝi malestu, se ĝi estus identa al ``Author``."

#: ../source/specifications/core-metadata.rst:420
msgid "Maintainer-email"
msgstr "Maintainer-email"

#: ../source/specifications/core-metadata.rst:424
msgid ""
"A string containing the maintainer's e-mail address.  It can contain a name "
"and e-mail address in the legal forms for a RFC-822 ``From:`` header."
msgstr ""
"Signoĉeno enhavanta la retpoŝtan adreson de la mastrumanto.  Ĝi povas enhavi "
"nomon kaj retpoŝtan adreson laŭ la formo de la ĉapo ``From:`` en RFC 822."

#: ../source/specifications/core-metadata.rst:428
msgid ""
"Note that this field is intended for use when a project is being maintained "
"by someone other than the original author:  it should be omitted if it is "
"identical to ``Author-email``."
msgstr ""
"Notu, ke ĉi tiu kampo estas por tiam, kiam projekto estas mastrumata de iu "
"alia ol la origina aŭtoro.  Ĝi malestu, se ĝi estus identa al ``Author-"
"email``."

#: ../source/specifications/core-metadata.rst:446
msgid "License"
msgstr "License"

#: ../source/specifications/core-metadata.rst:449
msgid "in favour of ``License-Expression``."
msgstr "Anstataŭe uzu ``License-Expression``."

#: ../source/specifications/core-metadata.rst:453
msgid ""
"As of Metadata 2.4, ``License`` and ``License-Expression`` are mutually "
"exclusive. If both are specified, tools which parse metadata will disregard "
"``License`` and PyPI will reject uploads. See `PEP 639 <https://peps.python."
"org/pep-0639/#deprecate-license-field>`__."
msgstr ""
"Ekde Metadatenoj 2.4, ``License`` kaj ``License-Expression`` ne estas "
"samtempe specifeblaj. Se ambaŭ estas specifitaj, ilo pritraktanta "
"metadatenojn ignoros ``License``, kaj PyPI rifuzos alŝutojn. Vidu `PEP 639 "
"<https://peps.python.org/pep-0639/#deprecate-license-field>`__."

#: ../source/specifications/core-metadata.rst:458
msgid ""
"Text indicating the license covering the distribution where the license is "
"not a selection from the \"License\" Trove classifiers. See :ref:"
"`\"Classifier\" <metadata-classifier>` below. This field may also be used to "
"specify a particular version of a license which is named via the "
"``Classifier`` field, or to indicate a variation or exception to such a "
"license."
msgstr ""

#: ../source/specifications/core-metadata.rst:478
msgid "License-Expression"
msgstr "License-Expression"

#: ../source/specifications/core-metadata.rst:482
msgid ""
"Text string that is a valid SPDX :term:`license expression <License "
"Expression>`, as specified in :doc:`/specifications/license-expression`."
msgstr ""
"Signoĉeno, kiu estas valida :term:`SPDX-licencesprimo <License Expression>` "
"laŭ :doc:`/specifications/license-expression`."

#: ../source/specifications/core-metadata.rst:501
msgid "License-File (multiple use)"
msgstr "License-File (plurfoje uzebla)"

#: ../source/specifications/core-metadata.rst:505
msgid ""
"Each entry is a string representation of the path of a license-related file. "
"The path is located within the project source tree, relative to the project "
"root directory. For details see :pep:`639`."
msgstr ""
"Ĉiu ero estas signoĉena prezento de la dosierloko de licenco-rilata dosiero. "
"La dosierloko troviĝas en la projekta fontarbo relative al la projekta "
"radika dosierujo. Por detaloj, vidu :pep:`639`."

#: ../source/specifications/core-metadata.rst:522
msgid "Classifier (multiple use)"
msgstr "Classifier (plurfoje uzebla)"

#: ../source/specifications/core-metadata.rst:526
msgid ""
"Each entry is a string giving a single classification value for the "
"distribution.  Classifiers are described in :pep:`301`, and the Python "
"Package Index publishes a dynamic list of `currently defined classifiers "
"<https://pypi.org/classifiers/>`__."
msgstr ""
"Ĉiu ero estas signoĉeno de unu klasigila valoro por la distribuo. Klasigiloj "
"estas priskribitaj en :pep:`301`, kaj la Python-Pakindekso eldonas dinamikan "
"liston de `aktuale difinitaj klasigiloj <https://pypi.org/classifiers/>`__."

#: ../source/specifications/core-metadata.rst:532
msgid ""
"The use of ``License ::`` classifiers  is deprecated as of Metadata 2.4, use "
"``License-Expression`` instead. See `PEP 639 <https://peps.python.org/"
"pep-0639/#deprecate-license-classifiers>`_."
msgstr ""
"La uzo de la klasigiloj ``License ::`` estas evitinda ekde Metadatenoj 2.4. "
"Uzu ``License-Expression`` anstataŭe. Vidu `PEP 639 <https://peps.python.org/"
"pep-0639/#deprecate-license-classifiers>`_."

#: ../source/specifications/core-metadata.rst:536
#: ../source/specifications/core-metadata.rst:626
#: ../source/specifications/core-metadata.rst:770
#: ../source/specifications/core-metadata.rst:795
msgid "This field may be followed by an environment marker after a semicolon."
msgstr "Tiu kampo povas esti sekvita per media marko post punktokomo."

#: ../source/specifications/core-metadata.rst:547
msgid "Requires-Dist (multiple use)"
msgstr "Requires-Dist (plurfoje uzebla)"

#: ../source/specifications/core-metadata.rst:550
#: ../source/specifications/core-metadata.rst:613
#: ../source/specifications/core-metadata.rst:742
#: ../source/specifications/core-metadata.rst:784
msgid ""
"The field format specification was relaxed to accept the syntax used by "
"popular publishing tools."
msgstr ""
"La specifo pri la kampa formo estis malstriktigita por akcepti la sintakson "
"uzatan de popularaj eldoniloj."

#: ../source/specifications/core-metadata.rst:554
msgid ""
"Each entry contains a string naming some other distutils project required by "
"this distribution."
msgstr ""
"Ĉiu ero enhavas signoĉenon nomantan alian distutils-projekton postulatan de "
"tiu distribuo."

#: ../source/specifications/core-metadata.rst:557
msgid "The format of a requirement string contains from one to four parts:"
msgstr ""
"La formo de postulo-signoĉeno enhavas minimume unu, maksimume kvar partojn:"

#: ../source/specifications/core-metadata.rst:559
msgid ""
"A project name, in the same format as the ``Name:`` field. The only "
"mandatory part."
msgstr ""
"Projekta nomo en la sama formo kiel la kampo ``Name:``. La sola deviga parto."

#: ../source/specifications/core-metadata.rst:561
msgid ""
"A comma-separated list of 'extra' names. These are defined by the required "
"project, referring to specific features which may need extra dependencies. "
"The names MUST conform to the restrictions specified by the ``Provides-Extra:"
"`` field."
msgstr ""
"Kome disigita listo de nomoj de «ekstraĵoj». Tiuj estas difinitaj de la "
"postulata projekto, por specifaj funkcioj postulantaj ekstrajn dependecojn. "
"La nomoj DEVAS observi la limigojn de la kampo ``Provides-Extra:``."

#: ../source/specifications/core-metadata.rst:565
msgid ""
"A version specifier. Tools parsing the format should accept optional "
"parentheses around this, but tools generating it should not use parentheses."
msgstr ""
"Versio-specifilo. Ilo sintakse analizanta la formon akceptu nedevigajn "
"rondajn krampojn ĉirkaŭ tiu, sed ilo generanta ĝin ne uzu rondajn krampojn."

#: ../source/specifications/core-metadata.rst:568
msgid ""
"An environment marker after a semicolon. This means that the requirement is "
"only needed in the specified conditions."
msgstr ""
"Media marko post punktokomo. Tio signifas, ke la postulo estas nur efektiva "
"sub la specifitaj kondiĉoj."

#: ../source/specifications/core-metadata.rst:571
msgid "See :pep:`508` for full details of the allowed format."
msgstr "Vidu :pep:`508` por plenaj detaloj pri la permesataj formoj."

#: ../source/specifications/core-metadata.rst:573
msgid ""
"The project names should correspond to names as found on the `Python Package "
"Index`_."
msgstr ""
"La projektaj nomoj respondu al nomoj ĉe la `Python-Pakindekso <Python "
"Package Index>`_."

#: ../source/specifications/core-metadata.rst:576
msgid ""
"Version specifiers must follow the rules described in :doc:`version-"
"specifiers`."
msgstr "Versispecifilo devas observi la regulojn en :doc:`version-specifiers`."

#: ../source/specifications/core-metadata.rst:590
msgid "Requires-Python"
msgstr ""

#: ../source/specifications/core-metadata.rst:594
msgid ""
"This field specifies the Python version(s) that the distribution is "
"compatible with. Installation tools may look at this when picking which "
"version of a project to install."
msgstr ""
"Tiu kampo specifas tiu(j)n versio(j)n de Python, kun kiu(j) la distribuo "
"kongruas. Instalilo povas konsideri tion dum elektado de instalota versio de "
"projekto."

#: ../source/specifications/core-metadata.rst:598
msgid "The value must be in the format specified in :doc:`version-specifiers`."
msgstr ""
"La valoro devas observi la formon specifitan en :doc:`version-specifiers`."

#: ../source/specifications/core-metadata.rst:600
msgid ""
"For example, if a distribution uses :ref:`f-strings <whatsnew36-pep498>` "
"then it may prevent installation on Python < 3.6 by specifying::"
msgstr ""
"Ekzemple, se distribuo uzas :ref:`f-signoĉenon <whatsnew36-pep498>`, ĝi "
"povas malpermesi instaladon sur Python < 3.6 jene::"

#: ../source/specifications/core-metadata.rst:605
msgid "This field cannot be followed by an environment marker."
msgstr "Ĉi tiu kampo ne povas esti sekvita de media marko."

#: ../source/specifications/core-metadata.rst:610
msgid "Requires-External (multiple use)"
msgstr "Requires-External (plurfoje uzebla)"

#: ../source/specifications/core-metadata.rst:617
msgid ""
"Each entry contains a string describing some dependency in the system that "
"the distribution is to be used.  This field is intended to serve as a hint "
"to downstream project maintainers, and has no semantics which are meaningful "
"to the ``distutils`` distribution."
msgstr ""

#: ../source/specifications/core-metadata.rst:622
msgid ""
"The format of a requirement string is a name of an external dependency, "
"optionally followed by a version declaration within parentheses."
msgstr ""
"La formo de postulo-signoĉeno estas nomo de ekstera dependaĵo, nedevige "
"sekvita de versia deklaro ene de rondaj krampoj."

#: ../source/specifications/core-metadata.rst:628
msgid ""
"Because they refer to non-Python software releases, version numbers for this "
"field are **not** required to conform to the format specified in the :ref:"
"`Version specifier specification <version-specifiers>`: they should "
"correspond to the version scheme used by the external dependency."
msgstr ""
"Ĉar tiu kampo temas pri ne-Python-a programa versio, la valoro de tiu kampo "
"*ne* devas observi la formon precizigita en la :ref:`Normo pri versio-"
"specifiloj <version-specifiers>`; ĝi sekvu la versian skemon de la ekstera "
"dependaĵo."

#: ../source/specifications/core-metadata.rst:633
msgid "Notice that there is no particular rule on the strings to be used."
msgstr "Notu, ke ekzistas neniu speciala regulo pri la uzota signoĉeno."

#: ../source/specifications/core-metadata.rst:645
msgid "Project-URL (multiple-use)"
msgstr "Project-URL (plurfoje uzebla)"

#: ../source/specifications/core-metadata.rst:649
msgid ""
"A string containing a browsable URL for the project and a label for it, "
"separated by a comma."
msgstr ""
"Signoĉeno enhavanta alireblan retadreson de la projekto kaj etikedon, "
"apartigitajn de komo."

#: ../source/specifications/core-metadata.rst:656
msgid "The label is free text limited to 32 characters."
msgstr "La etikedo estas arbitra teksto limigita al 32 skribsignoj."

#: ../source/specifications/core-metadata.rst:658
msgid ""
"Starting with :pep:`753`, project metadata consumers (such as the Python "
"Package Index) can use a standard normalization process to discover \"well-"
"known\" labels, which can then be given special presentations when being "
"rendered for human consumption. See :ref:`well-known-project-urls`."
msgstr ""
"Ekde :pep:`753`, konsumanto de projektaj metadatenoj (kiel la Python-"
"Pakindekso) povas uzi normigan procedon por trovi «bone konatajn» etikedojn, "
"kiujn oni povas prezenti speciale por homoj. Vidu :ref:`well-known-project-"
"urls`."

#: ../source/specifications/core-metadata.rst:668
msgid "Provides-Extra (multiple use)"
msgstr "Provides-Extra (plurfoje uzebla)"

#: ../source/specifications/core-metadata.rst:671
msgid ""
":pep:`685` restricted valid values to be unambiguous (i.e. no normalization "
"required). For older metadata versions, value restrictions were brought into "
"line with ``Name:`` and normalization rules were introduced."
msgstr ""
":pep:`685` limigis validajn valorojn al la malambiguaj valoroj (alivorte, "
"sen postulata normigo.Por malnovaj versioj de metadatenoj, limigoj de valoro "
"kongruiĝis kun ``Name:``, kaj reguloj pri normigado estis starigitaj."

#: ../source/specifications/core-metadata.rst:676
msgid ""
"A string containing the name of an optional feature. A valid name consists "
"only of lowercase ASCII letters, ASCII numbers, and hyphen. It must start "
"and end with a letter or number. Hyphens cannot be followed by another "
"hyphen. Names are limited to those which match the following regex (which "
"guarantees unambiguity)::"
msgstr ""
"Signoĉeno enhavanta la nomon de nedeviga funkcio. Valida nomo konsistas nur "
"el minusklaj Askiaj literoj, Askiaj ciferoj, kaj streketo. Ĝi devas "
"komenciĝi kaj finiĝi per litero aŭ cifero. Streketo devas ne sekvi alian "
"streketon. Nomo devas konformi al la jena regula esprimo (garantiante "
"malambiguecon)::"

#: ../source/specifications/core-metadata.rst:684
msgid ""
"The specified name may be used to make a dependency conditional on whether "
"the optional feature has been requested."
msgstr ""
"La specifita nomo povas esti uzata por igi dependecon kondiĉa pri ĉu la "
"nedeviga funkcio estas petata."

#: ../source/specifications/core-metadata.rst:692
msgid ""
"A second distribution requires an optional dependency by placing it inside "
"square brackets, and can request multiple features by separating them with a "
"comma (,). The requirements are evaluated for each requested feature and "
"added to the set of requirements for the distribution."
msgstr ""

#: ../source/specifications/core-metadata.rst:702
msgid ""
"Two feature names ``test`` and ``doc`` are reserved to mark dependencies "
"that are needed for running automated tests and generating documentation, "
"respectively."
msgstr ""
"Du funkcio-nomoj ``test`` kaj ``doc`` estas rezervataj por marki dependecojn "
"por aŭtomataj testoj kaj generado de dokumentaro respektive."

#: ../source/specifications/core-metadata.rst:706
msgid ""
"It is legal to specify ``Provides-Extra:`` without referencing it in any "
"``Requires-Dist:``."
msgstr ""
"Validas specifi ``Provides-Extra:`` sen referencado de ĝi en ajna ``Requires-"
"Dist:``."

#: ../source/specifications/core-metadata.rst:709
msgid ""
"When writing data for older metadata versions, names MUST be normalized "
"following the same rules used for the ``Name:`` field when performing "
"comparisons. Tools writing metadata MUST raise an error if two ``Provides-"
"Extra:`` entries would clash after being normalized."
msgstr ""
"Dum skribado de datenoj por pli malnovaj versioj de metadatenoj, oni DEVAS "
"normigi nomon laŭ la samajn regulojn por la kampo ``Name:`` dum komparado. "
"Iloj skribantaj metadatenojn DEVAS sciigi pri eraro, se du kampoj ``Provides-"
"Extra:`` konfliktus post normigo."

#: ../source/specifications/core-metadata.rst:714
msgid ""
"When reading data for older metadata versions, tools SHOULD warn when values "
"for this field would be invalid under newer metadata versions. If a value "
"would be invalid following the rules for ``Name:`` in any core metadata "
"version, the user SHOULD be warned and the value ignored to avoid ambiguity. "
"Tools MAY choose to raise an error when reading an invalid name for older "
"metadata versions."
msgstr ""

#: ../source/specifications/core-metadata.rst:722
msgid "Rarely Used Fields"
msgstr "Malofte uzataj kampoj"

#: ../source/specifications/core-metadata.rst:724
msgid ""
"The fields in this section are currently rarely used, as their design was "
"inspired by comparable mechanisms in Linux package management systems, and "
"it isn't at all clear how tools should interpret them in the context of an "
"open index server such as `PyPI <https://pypi.org>`__."
msgstr ""
"La kampoj en ĉi tiu paragrafo estas nuntempe malofte uzataj, ĉar ili estis "
"fasonitaj simile al meĥanismoj en Linux-pakadministraj sistemoj, kaj ne "
"klasas, kiel ilo interpretu ilin por malfermita indeksoservilo kiel `PyPI "
"<https://pypi.org>`__."

#: ../source/specifications/core-metadata.rst:729
msgid ""
"As a result, popular installation tools ignore them completely, which in "
"turn means there is little incentive for package publishers to set them "
"appropriately. However, they're retained in the metadata specification, as "
"they're still potentially useful for informational purposes, and can also be "
"used for their originally intended purpose in combination with a curated "
"package repository."
msgstr ""

#: ../source/specifications/core-metadata.rst:739
msgid "Provides-Dist (multiple use)"
msgstr "Provides-Dist (plurfoje uzebla)"

#: ../source/specifications/core-metadata.rst:746
msgid ""
"Each entry contains a string naming a Distutils project which is contained "
"within this distribution.  This field *must* include the project identified "
"in the ``Name`` field, followed by the version : Name (Version)."
msgstr ""
"Ĉiu ero enhavas signoĉenon nomantan projekton Distutils, kiun ĉi tiu "
"distribuo enhavas.  Tiu kampo *devas* inkluzivi la projekton identigitan en "
"la kampo ``Name``, sekvita de la versio: Nomo (Versio)."

#: ../source/specifications/core-metadata.rst:751
msgid ""
"A distribution may provide additional names, e.g. to indicate that multiple "
"projects have been bundled together.  For instance, source distributions of "
"the ``ZODB`` project have historically included the ``transaction`` project, "
"which is now available as a separate distribution.  Installing such a source "
"distribution satisfies requirements for both ``ZODB`` and ``transaction``."
msgstr ""

#: ../source/specifications/core-metadata.rst:758
msgid ""
"A distribution may also provide a \"virtual\" project name, which does not "
"correspond to any separately-distributed project:  such a name might be used "
"to indicate an abstract capability which could be supplied by one of "
"multiple projects.  E.g., multiple projects might supply RDBMS bindings for "
"use by a given ORM:  each project might declare that it provides ``ORM-"
"bindings``, allowing other projects to depend only on having at most one of "
"them installed."
msgstr ""

#: ../source/specifications/core-metadata.rst:766
msgid ""
"A version declaration may be supplied and must follow the rules described "
"in :doc:`version-specifiers`. The distribution's version number will be "
"implied if none is specified."
msgstr ""
"Oni povas provizi versio-deklaron, kiu devas observi la regulojn en :doc:"
"`version-specifiers`. Se nenio estas provizita, tio implicas la versian "
"numeron de la distribuo."

#: ../source/specifications/core-metadata.rst:781
msgid "Obsoletes-Dist (multiple use)"
msgstr "Obsoletes-Dist (plurfoje uzebla)"

#: ../source/specifications/core-metadata.rst:788
msgid ""
"Each entry contains a string describing a distutils project's distribution "
"which this distribution renders obsolete, meaning that the two projects "
"should not be installed at the same time."
msgstr ""
"Ĉiu ero enhavas signiĉenon priskribantan distribuon de distutils-projekto, "
"kiun ĉi tiu distribuo evitindigas – alivorte, oni ne instalu ambaŭ "
"projektojn samtempe."

#: ../source/specifications/core-metadata.rst:792
msgid ""
"Version declarations can be supplied.  Version numbers must be in the format "
"specified in :doc:`version-specifiers`."
msgstr ""
"Versio-deklaroj povas esti provizitaj.  Versia numero devas observi la "
"formon en :doc:`version-specifiers`."

#: ../source/specifications/core-metadata.rst:797
msgid ""
"The most common use of this field will be in case a project name changes, e."
"g. Gorgon 2.3 gets subsumed into Torqued Python 1.0. When you install "
"Torqued Python, the Gorgon distribution should be removed."
msgstr ""
"La plej ofta uzo de tiu kampo estas por ŝanĝo de nomo de projekto. Ekzemple, "
"Gorgon 2.3 fariĝis Torqued Python 1.0. Kiam oni instalas Torqued Python, do "
"oni malinstalu la distribuon de Gorgon."

#: ../source/specifications/core-metadata.rst:810
msgid "Deprecated Fields"
msgstr "Evitindaj Kampoj"

#: ../source/specifications/core-metadata.rst:812
msgid ""
"Deprecated fields should be avoided, but they are valid metadata fields. "
"They may be removed in future versions of the core metadata standard (at "
"which point they will only be valid in files that specify a metadata version "
"prior to the removal). Tools SHOULD warn users when deprecated fields are "
"used."
msgstr ""
"Oni evitu evitindajn kampojn, sed ili restas validaj metadateno-kampoj. Ili "
"povas esti forigitaj en estontaj versioj de la normo de kernaj metadatenoj "
"(post kiam ili nur estos validaj en dosieroj uzantaj metadateno-version "
"antaŭ la forigo). Ilo AVERTU uzanton, se troviĝas evitinda kampo."

#: ../source/specifications/core-metadata.rst:821
msgid "Home-page"
msgstr "Home-page"

#: ../source/specifications/core-metadata.rst:827
#: ../source/specifications/core-metadata.rst:844
msgid "Per :pep:`753`, use :ref:`core-metadata-project-url` instead."
msgstr "Laŭ :pep:`753`, uzu :ref:`core-metadata-project-url` anstataŭe."

#: ../source/specifications/core-metadata.rst:829
msgid "A string containing the URL for the distribution's home page."
msgstr "Signoĉeno de la retadreso de la ĉefpaĝo de la distribuo."

#: ../source/specifications/core-metadata.rst:838
msgid "Download-URL"
msgstr "Download-URL"

#: ../source/specifications/core-metadata.rst:846
msgid ""
"A string containing the URL from which this version of the distribution can "
"be downloaded.  (This means that the URL can't be something like \"``.../"
"BeagleVote-latest.tgz``\", but instead must be \"``.../BeagleVote-0.45."
"tgz``\".)"
msgstr ""
"Signoĉeno de tiu retadreso, el kiu la versio de la distribuo estas "
"elŝutebla.  (Tio signifas, ke la retadreso ne povas esti «``.../BeagleVote-"
"latest.tgz``», sed devas esti «``.../BeagleVote-0.45.tgz``».)"

#: ../source/specifications/core-metadata.rst:852
msgid "Requires"
msgstr "Requires"

#: ../source/specifications/core-metadata.rst:855
msgid "in favour of ``Requires-Dist``"
msgstr "anstataŭe uzu ``Requires-Dist``"

#: ../source/specifications/core-metadata.rst:858
msgid ""
"Each entry contains a string describing some other module or package "
"required by this package."
msgstr ""
"Ĉiu ero enhavas signiĉenon priskribantan alian modulon aŭ pakon postulatan "
"de tiu pako."

#: ../source/specifications/core-metadata.rst:861
msgid ""
"The format of a requirement string is identical to that of a module or "
"package name usable with the ``import`` statement, optionally followed by a "
"version declaration within parentheses."
msgstr ""
"La formo de postulo-signoĉeno estas identa al tiu de modulo aŭ paknomo "
"uzebla kun la ``import``-aserto, laŭvole sekvita de versio-deklaro en rondaj "
"krampoj."

#: ../source/specifications/core-metadata.rst:865
msgid ""
"A version declaration is a series of conditional operators and version "
"numbers, separated by commas. Conditional operators must be one of \"<\", "
"\">\"', \"<=\", \">=\", \"==\", and \"!=\". Version numbers must be in the "
"format accepted by the ``distutils.version.StrictVersion`` class: two or "
"three dot-separated numeric components, with an optional \"pre-release\" tag "
"on the end consisting of the letter 'a' or 'b' followed by a number. Example "
"version numbers are \"1.0\", \"2.3a2\", \"1.3.99\","
msgstr ""

#: ../source/specifications/core-metadata.rst:873
msgid ""
"Any number of conditional operators can be specified, e.g. the string "
"\">1.0, !=1.3.4, <2.0\" is a legal version declaration."
msgstr ""
"Iom ajn da kondiĉaj operatoroj validas. Ekzemple, ``>1.0, !=1.3.4, <2.0`` "
"estas valida versio-deklaro."

#: ../source/specifications/core-metadata.rst:876
msgid ""
"All of the following are possible requirement strings: \"rfc822\", \"zlib "
"(>=1.1.4)\", \"zope\"."
msgstr ""
"Jen kelkaj eblaj postulo-signoĉenoj: «rfc822», «zlib (>=1.1.4)», «zope»."

#: ../source/specifications/core-metadata.rst:879
msgid ""
"There’s no canonical list of what strings should be used; the Python "
"community is left to choose its own standards."
msgstr ""
"Ne ekzistas listo de uzendaj signoĉenoj; la komunumo de Python elektu siajn "
"proprajn normojn."

#: ../source/specifications/core-metadata.rst:892
msgid "Provides"
msgstr "Provides"

#: ../source/specifications/core-metadata.rst:895
msgid "in favour of ``Provides-Dist``"
msgstr "anstataŭe uzu ``Provides-Dist``"

#: ../source/specifications/core-metadata.rst:898
msgid ""
"Each entry contains a string describing a package or module that will be "
"provided by this package once it is installed. These strings should match "
"the ones used in Requirements fields. A version declaration may be supplied "
"(without a comparison operator); the package’s version number will be "
"implied if none is specified."
msgstr ""

#: ../source/specifications/core-metadata.rst:914
msgid "Obsoletes"
msgstr "Obsoletes"

#: ../source/specifications/core-metadata.rst:917
msgid "in favour of ``Obsoletes-Dist``"
msgstr "anstataŭe uzu ``Obsoletes-Dist``"

#: ../source/specifications/core-metadata.rst:920
msgid ""
"Each entry contains a string describing a package or module that this "
"package renders obsolete, meaning that the two packages should not be "
"installed at the same time. Version declarations can be supplied."
msgstr ""
"Ĉiu ero enhavas tekston priskribantan pakon aŭ modulon, kiun tiu pako "
"malnoviĝintigas, tiel ke la du pakaĵoj ne estu instalitaj kune. Oni povas "
"provizi versio-deklarojn."

#: ../source/specifications/core-metadata.rst:924
msgid ""
"The most common use of this field will be in case a package name changes, e."
"g. Gorgon 2.3 gets subsumed into Torqued Python 1.0. When you install "
"Torqued Python, the Gorgon package should be removed."
msgstr ""
"La plej ofta uzo de tiu kampo estas por ŝanĝo de nomo de pako. Ekzemple, "
"Gorgon 2.3 fariĝis Torqued Python 1.0. Kiam oni instalas Torqued Python, do "
"oni malinstalu la pakon Gorgon."

#: ../source/specifications/core-metadata.rst:936
msgid ""
"August 2025: Clarified that ``Dynamic`` only affects how fields must be "
"treated when building a wheel from a sdist, not when modifying a wheel."
msgstr ""

#: ../source/specifications/core-metadata.rst:940
msgid "August 2024: Core metadata 2.4 was approved through :pep:`639`."
msgstr "Aŭgusto 2024: Kernaj metadatenoj 2.4 estis aprobitaj per :pep:`639`."

#: ../source/specifications/core-metadata.rst:942
msgid "Added the ``License-Expression`` field."
msgstr "Aldonis la kampon ``License-Expression``."

#: ../source/specifications/core-metadata.rst:943
msgid "Added the ``License-File`` field."
msgstr "Aldonis la kampon ``License-File``."

#: ../source/specifications/core-metadata.rst:945
msgid "March 2022: Core metadata 2.3 was approved through :pep:`685`."
msgstr "Marto 2022: Kernaj metadatenoj 2.3 estis aprobitaj per :pep:`685`."

#: ../source/specifications/core-metadata.rst:947
msgid "Restricted extra names to be normalized."
msgstr "Devigis normigon de nomoj de ekstraĵoj."

#: ../source/specifications/core-metadata.rst:949
msgid "October 2020: Core metadata 2.2 was approved through :pep:`643`."
msgstr "Oktobro 2020: Kernaj metadatenoj 2.2 estis aprobitaj per :pep:`643`."

#: ../source/specifications/core-metadata.rst:951
msgid "Added the ``Dynamic`` field."
msgstr "Aldonis la kampon ``Dynamic``."

#: ../source/specifications/core-metadata.rst:953
msgid "February 2018: Core metadata 2.1 was approved through :pep:`566`."
msgstr "Februaro 2018: Kernaj metadatenoj 2.1 estis aprobitaj per :pep:`566`."

#: ../source/specifications/core-metadata.rst:955
msgid "Added ``Description-Content-Type`` and ``Provides-Extra``."
msgstr "Aldonis ``Description-Content-Type`` kaj ``Provides-Extra``."

#: ../source/specifications/core-metadata.rst:956
msgid "Added canonical method for transforming metadata to JSON."
msgstr "Aldonis kanonan metodon por transformi metadatenojn al JSON."

#: ../source/specifications/core-metadata.rst:957
msgid "Restricted the grammar of the ``Name`` field."
msgstr "Restriktis la gramatikon de la kampo ``Name``."

#: ../source/specifications/core-metadata.rst:959
msgid "February 2010: Core metadata 1.2 was approved through :pep:`345`."
msgstr "Februaro 2010: Kernaj metadatenoj 1.2 estis aprobitaj per :pep:`345`."

#: ../source/specifications/core-metadata.rst:961
msgid "April 2003: Core metadata 1.1 was approved through :pep:`314`:"
msgstr "Aprilo 2003: Kernaj metadatenoj 1.1 estis aprobitaj per :pep:`314`:"

#: ../source/specifications/core-metadata.rst:963
msgid "March 2001: Core metadata 1.0 was approved through :pep:`241`."
msgstr "Marto 2001: Kernaj metadatenoj 1.0 estis aprobitaj per :pep:`241`."

#: ../source/specifications/core-metadata.rst:967
msgid "reStructuredText markup: https://docutils.sourceforge.io/"
msgstr "Marklingvo reStructuredText: https://docutils.sourceforge.io/"

#: ../source/specifications/core-metadata.rst:972
msgid "RFC 822 Long Header Fields: :rfc:`822#section-3.1.1`"
msgstr "RFC 822 Long-Ĉapaj Kampoj: :rfc:`822#section-3.1.1`"

#: ../source/specifications/dependency-groups.rst:5
msgid "Dependency Groups"
msgstr "Dependecaj Grupoj"

#: ../source/specifications/dependency-groups.rst:7
msgid ""
"This specification defines Dependency Groups, a mechanism for storing "
"package requirements in ``pyproject.toml`` files such that they are not "
"included in project metadata when it is built."
msgstr ""
"Ĉi tiu specifo difinas Dependecan Grupon, kiu estas meĥanismo por konservi "
"pako-postulojn en ``pyproject.toml`` tiel, ke ili ne inkluziviĝas en "
"projektaj metadatenoj post konstruado."

#: ../source/specifications/dependency-groups.rst:11
msgid ""
"Dependency Groups are suitable for internal development use-cases like "
"linting and testing, as well as for projects which are not built for "
"distribution, like collections of related scripts."
msgstr ""
"Dependenca Grupo taŭgas por interna evoluada uzokazo kiel sintaksanalizado "
"kaj testado kaj ankaŭ por projekto ne konstruita por distribuado, kiel "
"kolekto de rilataj programetoj."

#: ../source/specifications/dependency-groups.rst:15
msgid ""
"Fundamentally, Dependency Groups should be thought of as being a "
"standardized subset of the capabilities of ``requirements.txt`` files (which "
"are ``pip``-specific)."
msgstr ""
"Fundamente, Dependeca Grupo estas normigita subaro de la kapabloj de dosiero "
"``requirements.txt`` (specifa al ``pip``)."

#: ../source/specifications/dependency-groups.rst:25
#, fuzzy
#| msgid "This is a simple table which shows a ``test`` group::"
msgid "This is a simple table which shows ``docs`` and ``test`` groups::"
msgstr "Jen simpla tabelo montranta grupon ``test``::"

#: ../source/specifications/dependency-groups.rst:31
#, fuzzy
#| msgid "and a similar table which defines ``test`` and ``coverage`` groups::"
msgid ""
"and a similar table which defines ``docs``, ``test``, and ``coverage`` "
"groups::"
msgstr "kaj simila tabelo difinanta la grupojn ``test`` kaj ``coverage``::"

#: ../source/specifications/dependency-groups.rst:39
msgid "The ``[dependency-groups]`` Table"
msgstr "La Tabelo ``[dependency-groups]``"

#: ../source/specifications/dependency-groups.rst:41
msgid ""
"Dependency Groups are defined as a table in ``pyproject.toml`` named "
"``dependency-groups``. The ``dependency-groups`` table contains an arbitrary "
"number of user-defined keys, each of which has, as its value, a list of "
"requirements."
msgstr ""
"Dependeca Grupo estas difinita kiel tabelo en ``pyproject.toml`` nomita "
"``dependency-groups``. La tabelo ``dependency-groups`` enhavas nelimigitan "
"nombron de uzanto-dfinititaj ŝlosiloj, ĉiu el kiuj havas liston de postuloj "
"kiel valoron."

#: ../source/specifications/dependency-groups.rst:46
msgid ""
"``[dependency-groups]`` keys, sometimes also called \"group names\", must "
"be :ref:`valid non-normalized names <name-format>`. Tools which handle "
"Dependency Groups MUST :ref:`normalize <name-normalization>` these names "
"before comparisons."
msgstr ""
"Ŝlosilo de ``[dependency-groups]``, ankaŭ nomita «grupo-nomo», devas esti :"
"ref:`valida nenormigita nomo <name-format>`. Ilo pritraktanta Dependecan "
"Grupon DEVAS :ref:`normigi <name-normalization>` la nomon antaŭ komparado."

#: ../source/specifications/dependency-groups.rst:51
msgid ""
"Tools SHOULD prefer to present the original, non-normalized name to users, "
"and if duplicate names are detected after normalization, tools SHOULD emit "
"an error."
msgstr ""
"Ilo PREFERU prezenti la originalan, nenormigitan nomon al uzanto. Se "
"duplikata nomo troviĝas post normigo, ilo MONTRU eraron."

#: ../source/specifications/dependency-groups.rst:55
msgid ""
"Requirement lists, the values in ``[dependency-groups]``, may contain "
"strings, tables (``dict`` in Python), or a mix of strings and tables. "
"Strings must be valid :ref:`dependency specifiers <dependency-specifiers>`, "
"and tables must be valid Dependency Group Includes."
msgstr ""
"Postulo-listoj, t.e. la valoroj en ``[dependency-groups]``, povas enhavi "
"signoĉenojn, tabelojn (``dict`` de Python), aŭ miksaĵo de signoĉenoj kaj "
"tabeloj. La signoĉenoj devas esti validaj :ref:`dependeco-specifiloj "
"<dependency-specifiers>`, kaj tabeloj devas esti validaj Dependeco-Grupo-"
"Inkluzivoj."

#: ../source/specifications/dependency-groups.rst:61
msgid "Dependency Group Include"
msgstr "Inkluzivo de Dependeca Grupo"

#: ../source/specifications/dependency-groups.rst:63
msgid ""
"A Dependency Group Include includes another Dependency Group in the current "
"group."
msgstr ""
"Dependecgrupa Inkluzivo inkluzivas alian Dependecan Grupon en la aktuala "
"grupo."

#: ../source/specifications/dependency-groups.rst:66
msgid ""
"An include is a table with exactly one key, ``\"include-group\"``, whose "
"value is a string, the name of another Dependency Group."
msgstr ""
"Inkluzivo estas tabelo kun ekzakte unu ŝlosilo, ``\"include-group\"``, kies "
"valoro estas signoĉeno, la nomo de alia Dependeca Grupo."

#: ../source/specifications/dependency-groups.rst:69
msgid ""
"Includes are defined to be exactly equivalent to the contents of the named "
"Dependency Group, inserted into the current group at the location of the "
"include. For example, if ``foo = [\"a\", \"b\"]`` is one group, and ``bar = "
"[\"c\", {include-group = \"foo\"}, \"d\"]`` is another, then ``bar`` should "
"evaluate to ``[\"c\", \"a\", \"b\", \"d\"]`` when Dependency Group Includes "
"are expanded."
msgstr ""

#: ../source/specifications/dependency-groups.rst:75
msgid ""
"Dependency Group Includes may specify the same package multiple times. Tools "
"SHOULD NOT deduplicate or otherwise alter the list contents produced by the "
"include. For example, given the following table:"
msgstr ""
"Inklzivo de Dependeca Grupo povas specifi la saman pakon plurfoje. Ilo NE "
"SENDUPLIKATIGU NEK alie MODIFU la enhavon de la enhavojn de listo generita "
"de la inkluzivo. Ekzemple, pri la jena tabelo:"

#: ../source/specifications/dependency-groups.rst:92
msgid ""
"The resolved value of ``all`` SHOULD be ``[\"foo\", \"foo\", \"foo>1.0\", "
"\"foo<1.0\"]``. Tools should handle such a list exactly as they would handle "
"any other case in which they are asked to process the same requirement "
"multiple times with different version constraints."
msgstr ""
"La solvita valoro de ``all`` ESTU ``[\"foo\", \"foo\", \"foo>1.0\", "
"\"foo<1.0\"]``. Ilo pritraktu tian liston precize same kiel en aliaj kazoj, "
"je kio ilo pritraktu la saman postulon plurfoje kun malsamaj versio-limigoj."

#: ../source/specifications/dependency-groups.rst:97
msgid ""
"Dependency Group Includes may include groups containing Dependency Group "
"Includes, in which case those includes should be expanded as well. "
"Dependency Group Includes MUST NOT include cycles, and tools SHOULD report "
"an error if they detect a cycle."
msgstr ""
"Dependecgrupa Inkluzivo povas inkluzivi grupojn enhavantajn Dependecgrupajn "
"Inkluzivojn; tiukaze, oni ankaŭ etendu tiujn inkluzivojn. Dependecgrupa "
"Inkluzivo DEVAS NE havi ciklon. Trovinte ciklon, ilo RAPORTU eraron."

#: ../source/specifications/dependency-groups.rst:102
msgid "Package Building"
msgstr "Konstruado de Pako"

#: ../source/specifications/dependency-groups.rst:104
msgid ""
"Build backends MUST NOT include Dependency Group data in built distributions "
"as package metadata. This means that sdist ``PKG-INFO`` and wheel "
"``METADATA`` files should not include referenceable fields containing "
"Dependency Groups."
msgstr ""
"Konstrua malfasado DEVAS NE inkluzivi datenon pri Dependecaj Grupoj en "
"konstruita distribuo kiel pakan metadatenon. Tio signifas, ke la dosiero "
"``PKG-INFO`` de fonta distribuo kaj la dosiero ``METADATA`` de wheel ne "
"inkluzivu referenceblan kampon enhavantan Dependecan Grupon."

#: ../source/specifications/dependency-groups.rst:108
msgid ""
"It is, however, valid to use Dependency Groups in the evaluation of dynamic "
"metadata, and ``pyproject.toml`` files included in sdists will still contain "
"``[dependency-groups]``. However, the table's contents are not part of a "
"built package's interfaces."
msgstr ""
"Tamen validas uzi Dependecan Grupo por solvi dinamikajn metadatenojn, kaj "
"dosiero ``pyproject.toml`` en fonta distribuo ankoraŭ enhavas ``[dependency-"
"groups]``. Tamen, la enhavo de la tabelo ne estas parto de la interfaco de "
"konstruita pako."

#: ../source/specifications/dependency-groups.rst:114
msgid "Installing Dependency Groups & Extras"
msgstr "Instali Dependecajn Grupojn kaj Ekstraĵojn"

#: ../source/specifications/dependency-groups.rst:116
msgid ""
"There is no syntax or specification-defined interface for installing or "
"referring to Dependency Groups. Tools are expected to provide dedicated "
"interfaces for this purpose."
msgstr ""
"Ne ekzistas sintakso aŭ specifo-difinita interfaco por instalado aŭ menciado "
"de Dependeco-Grupo. Ilo provizu proprajn interfacojn por tiu celo."

#: ../source/specifications/dependency-groups.rst:120
msgid ""
"Tools MAY choose to provide the same or similar interfaces for interacting "
"with Dependency Groups as they do for managing extras. Tools authors are "
"advised that the specification does not forbid having an extra whose name "
"matches a Dependency Group. Separately, users are advised to avoid creating "
"Dependency Groups whose names match extras, and tools MAY treat such "
"matching as an error."
msgstr ""

#: ../source/specifications/dependency-groups.rst:128
msgid "Validation and Compatibility"
msgstr "Valideckontrolo kaj Kongrueco"

#: ../source/specifications/dependency-groups.rst:130
msgid ""
"Tools supporting Dependency Groups may want to validate data before using "
"it. When implementing such validation, authors should be aware of the "
"possibility of future extensions to the specification, so that they do not "
"unnecessarily emit errors or warnings."
msgstr ""

#: ../source/specifications/dependency-groups.rst:135
msgid ""
"Tools SHOULD error when evaluating or processing unrecognized data in "
"Dependency Groups."
msgstr ""
"Ilo SCIIGU pri eraro, kiam ĝi renkontas aŭ pritraktas nerekonatan datenon en "
"Dependeca Grupo."

#: ../source/specifications/dependency-groups.rst:138
msgid ""
"Tools SHOULD NOT eagerly validate the contents of *all* Dependency Groups "
"unless they have a need to do so."
msgstr ""
"Ilo NE KONTROLU malprokraste la validecon de la enhavoj de *ĉiuj* Dependecaj "
"Grupoj, se ĝi ne bezonas tion."

#: ../source/specifications/dependency-groups.rst:141
msgid ""
"This means that in the presence of the following data, most tools should "
"allow the ``foo`` group to be used and only error if the ``bar`` group is "
"used:"
msgstr ""
"Tiu signifas, ke por la jenaj datenoj, iloj ordinare permesos la uzadon de "
"la grupo ``foo``, kaj nur sciigos pri eraro se la grupo ``bar`` estas uzata:"

#: ../source/specifications/dependency-groups.rst:152
msgid ""
"There are several known cases of tools which have good cause to be stricter. "
"Linters and validators are an example, as their purpose is to validate the "
"contents of all Dependency Groups."
msgstr ""
"Kelkfoje, ilo tamen povas esti pli strikta. Ekzemple, erardetektilo kaj "
"valideckontrolilo celas kontroli, ĉu la enhavoj de ĉiuj Dependecaj Grupoj "
"validas."

#: ../source/specifications/dependency-groups.rst:157
#: ../source/specifications/inline-script-metadata.rst:123
msgid "Reference Implementation"
msgstr "Referenca Realigo"

#: ../source/specifications/dependency-groups.rst:159
msgid ""
"The following Reference Implementation prints the contents of a Dependency "
"Group to stdout, newline delimited. The output is therefore valid "
"``requirements.txt`` data."
msgstr ""
"La jena Referenca Realigo eligas la enhavon de Dependeca Grupo al "
"``stdout``, apartigitan per novlinioj. La eligaĵo estas tial valida dateno "
"por ``requirements.txt``."

#: ../source/specifications/dependency-groups.rst:252
msgid "October 2024: This specification was approved through :pep:`735`."
msgstr "Oktobro 2024: Ĉi tiu specifo estis aprobita per :pep:`735`."

#: ../source/specifications/dependency-specifiers.rst:7
msgid "Dependency specifiers"
msgstr "Dependeco-specifiloj"

#: ../source/specifications/dependency-specifiers.rst:9
msgid ""
"This document describes the dependency specifiers format as originally "
"specified in :pep:`508`."
msgstr ""
"Jen dokumento priskribanta la formon de dependeco-specifiloj, laŭ la "
"originala normo :pep:`508`."

#: ../source/specifications/dependency-specifiers.rst:12
msgid ""
"The job of a dependency is to enable tools like pip [#pip]_ to find the "
"right package to install. Sometimes this is very loose - just specifying a "
"name, and sometimes very specific - referring to a specific file to install. "
"Sometimes dependencies are only relevant in one platform, or only some "
"versions are acceptable, so the language permits describing all these cases."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:18
msgid ""
"The language defined is a compact line based format which is already in "
"widespread use in pip requirements files, though we do not specify the "
"command line option handling that those files permit. There is one caveat - "
"the URL reference form, specified in :ref:`Versioning specifier "
"specification <version-specifiers>` is not actually implemented in pip, but "
"we use that format rather than pip's current native format."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:31
msgid "All features of the language shown with a name based lookup::"
msgstr "Jen ekzemplo de ĉiuj funkcioj de la lingvo kun nombaza postulo::"

#: ../source/specifications/dependency-specifiers.rst:35
msgid "A minimal URL based lookup::"
msgstr "Minimuma URL-baza serĉo::"

#: ../source/specifications/dependency-specifiers.rst:40
msgid "Concepts"
msgstr "Konceptoj"

#: ../source/specifications/dependency-specifiers.rst:42
msgid ""
"A dependency specification always specifies a distribution name. It may "
"include extras, which expand the dependencies of the named distribution to "
"enable optional features. The version installed can be controlled using "
"version limits, or giving the URL to a specific artifact to install. Finally "
"the dependency can be made conditional using environment markers."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:49
msgid "Grammar"
msgstr "Gramatiko"

#: ../source/specifications/dependency-specifiers.rst:51
msgid ""
"We first cover the grammar briefly and then drill into the semantics of each "
"section later."
msgstr ""
"Ni unue maldetale diskutas la gramatikon kaj poste detalos la semantikon de "
"ĉiu sekcio."

#: ../source/specifications/dependency-specifiers.rst:54
msgid ""
"A distribution specification is written in ASCII text. We use a parsley "
"[#parsley]_ grammar to provide a precise grammar. It is expected that the "
"specification will be embedded into a larger system which offers framing "
"such as comments, multiple line support via continuations, or other such "
"features."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:59
msgid ""
"The full grammar including annotations to build a useful parse tree is "
"included at the end of this document."
msgstr ""
"La plena gramatiko kun komentoj por konstrui utilan sintaksarbon troviĝas ĉe "
"la fino de ĉi tiu dokumento."

#: ../source/specifications/dependency-specifiers.rst:62
msgid ""
"Versions may be specified according to the rules of the :ref:`Version "
"specifier specification <version-specifiers>`. (Note: URI is defined in :rfc:"
"`std-66 <3986>`)::"
msgstr ""
"Versio estas specifebla laŭ la reguloj de :ref:`la specifo pri versio-"
"specifiloj <version-specifiers>`. (Notu: URI estas difinita en :rfc:`std-66 "
"<3986>`)::"

#: ../source/specifications/dependency-specifiers.rst:73
msgid ""
"Environment markers allow making a specification only take effect in some "
"environments::"
msgstr "Media marko permesas efektivigi specifon nur en kelkaj medioj::"

#: ../source/specifications/dependency-specifiers.rst:102
msgid ""
"Optional components of a distribution may be specified using the extras "
"field::"
msgstr ""
"Nedeviga komponanto de distribuo estas specifebla per la kampo ``extras``::"

#: ../source/specifications/dependency-specifiers.rst:111
msgid "Restrictions on names for extras is defined in :pep:`685`."
msgstr "Restriktoj pri nomoj de kromaĵoj estas difinitaj en :pep:`685`."

#: ../source/specifications/dependency-specifiers.rst:113
msgid "Giving us a rule for name based requirements::"
msgstr "Jen la regulo pri nomo-baza postulo::"

#: ../source/specifications/dependency-specifiers.rst:117
msgid "And a rule for direct reference specifications::"
msgstr "Kaj regulo pri rekta referenca specifo::"

#: ../source/specifications/dependency-specifiers.rst:121
msgid "Leading to the unified rule that can specify a dependency.::"
msgstr "Kaj la unuigita regulo pri specifo de dependeco::"

#: ../source/specifications/dependency-specifiers.rst:126
msgid "Whitespace"
msgstr "Blanka spaco"

#: ../source/specifications/dependency-specifiers.rst:128
msgid ""
"Non line-breaking whitespace is mostly optional with no semantic meaning. "
"The sole exception is detecting the end of a URL requirement."
msgstr ""
"Ne-linifina blanka spaco estas plejparte nedeviga sen semantiko. La sola "
"escepto estas trovi la finon de retadresa postulo."

#: ../source/specifications/dependency-specifiers.rst:134
msgid "Names"
msgstr "Nomoj"

#: ../source/specifications/dependency-specifiers.rst:136
msgid ""
"Python distribution names are currently defined in :pep:`345`. Names act as "
"the primary identifier for distributions. They are present in all dependency "
"specifications, and are sufficient to be a specification on their own. "
"However, PyPI places strict restrictions on names - they must match a case "
"insensitive regex or they won't be accepted. Accordingly, in this document "
"we limit the acceptable values for identifiers to that regex. A full "
"redefinition of name may take place in a future metadata PEP. The regex (run "
"with re.IGNORECASE) is::"
msgstr ""
"Nomoj de Python-distribuo estas aktuale difinitaj en :pep:`345`. Nomo estas "
"la ĉefidentigilo de distribuo. Ĝi ekzistas en ĉiuj specifoj pri dependecoj "
"kaj sufiĉas por sia propra specifo. Tamen, PyPI restrikegas nomojn — nomo "
"devas kongrui kun usklecblinda regula esprimo; alie ĝi malakceptiĝos. Tial "
"ĉi tiu dokumento limigas la akcepteblajn identigilojn al tiu regula esprimo. "
"Plena redifino de nomo povas okazi en verkota metadatena PEP. Jen la regula "
"esprimo (rulu kun ``re.IGNORECASE``)::"

#: ../source/specifications/dependency-specifiers.rst:150
msgid "Extras"
msgstr "Ekstraĵoj"

#: ../source/specifications/dependency-specifiers.rst:152
msgid ""
"An extra is an optional part of a distribution. Distributions can specify as "
"many extras as they wish, and each extra results in the declaration of "
"additional dependencies of the distribution **when** the extra is used in a "
"dependency specification. For instance::"
msgstr ""
"Ekstraĵo estas nedeviga parto de distribuo. Distribuo povas specifi tiom da "
"ekstraĵoj kiom necesas, kaj ĉiu ekstraĵo kaŭzas la deklaron de pliaj "
"dependecoj de la distribuo **kiam** la ekstraĵo estas uzata en depenceco-"
"specifo. Ekzemple::"

#: ../source/specifications/dependency-specifiers.rst:159
msgid ""
"Extras union in the dependencies they define with the dependencies of the "
"distribution they are attached to. The example above would result in "
"requests being installed, and requests own dependencies, and also any "
"dependencies that are listed in the \"security\" extra of requests."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:164
msgid ""
"If multiple extras are listed, all the dependencies are unioned together."
msgstr "Se pluraj ekstraĵoj estas listigitaj, ĉiuj dependaĵoj estas kunigitaj."

#: ../source/specifications/dependency-specifiers.rst:169
msgid "Versions"
msgstr "Versioj"

#: ../source/specifications/dependency-specifiers.rst:171
msgid ""
"See the :ref:`Version specifier specification <version-specifiers>` for more "
"detail on both version numbers and version comparisons. Version "
"specifications limit the versions of a distribution that can be used. They "
"only apply to distributions looked up by name, rather than via a URL. "
"Version comparison are also used in the markers feature. The optional "
"brackets around a version are present for compatibility with :pep:`345` but "
"should not be generated, only accepted."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:182
msgid "Environment Markers"
msgstr "Mediaj Markoj"

#: ../source/specifications/dependency-specifiers.rst:184
msgid ""
"Environment markers allow a dependency specification to provide a rule that "
"describes when the dependency should be used. For instance, consider a "
"package that needs argparse. In Python 2.7 argparse is always present. On "
"older Python versions it has to be installed as a dependency. This can be "
"expressed as so::"
msgstr ""
"Medio-markilo permesas al dependeco-specifo provizi regulon pri tiam, kiam "
"la dependaĵo estu uzata. Ekzemple, konsideru pakon dependantan de "
"``argparse``. En Python 2.7, ``argparse`` ĉiam ekzistas. Sur pli malnova "
"versio de Python, ĝi devas esti instalita kiel dependeco. Oni esprimas tion "
"jene::"

#: ../source/specifications/dependency-specifiers.rst:191
msgid ""
"A marker expression evaluates to either True or False. When it evaluates to "
"False, the dependency specification should be ignored."
msgstr ""
"La valoro de marka esprimo estas aŭ ``True`` aŭ ``False``. Se la valoro "
"estas ``False``, oni ignoru la dependecan specifon."

#: ../source/specifications/dependency-specifiers.rst:194
msgid ""
"The marker language is inspired by Python itself, chosen for the ability to "
"safely evaluate it without running arbitrary code that could become a "
"security vulnerability. Markers were first standardised in :pep:`345`. This "
"document fixes some issues that were observed in the design described in :"
"pep:`426`."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:199
#, fuzzy
#| msgid ""
#| "Comparisons in marker expressions are typed by the comparison operator.  "
#| "The <marker_op> operators that are not in <version_cmp> perform the same "
#| "as they do for strings in Python. The <version_cmp> operators use the "
#| "version comparison rules of the :ref:`Version specifier specification "
#| "<version-specifiers>` when those are defined (that is when both sides "
#| "have a valid version specifier). If there is no defined behaviour of this "
#| "specification and the operator exists in Python, then the operator falls "
#| "back to the Python behaviour. Otherwise an error should be raised. e.g. "
#| "the following will result in  errors::"
msgid ""
"Comparisons in marker expressions are typed by the comparison operator and "
"the type of the marker value. The <marker_op> operators that are not in "
"<version_cmp> perform the same as they do for strings or sets in Python "
"based on whether the marker value is a string or set itself. The "
"<version_cmp> operators use the version comparison rules of the :ref:"
"`Version specifier specification <version-specifiers>` when those are "
"defined (that is when both sides have a valid version specifier). If there "
"is no defined behaviour of this specification and the operator exists in "
"Python, then the operator falls back to the Python behaviour for the types "
"involved. Otherwise an error should be raised. e.g. the following will "
"result in errors::"
msgstr ""
"Komparo en marko-esprimo dependas de la komparo-operatoro.  La operatoroj "
"<marker_op> ne en <version_cmp> funkcias same kiel la operatoroj por "
"signoĉenoj en Python. La operatoroj <version_cmp> funkcias laŭ la reguloj "
"pri komparado de versioj en la :ref:`Specifo pri versio-specifiloj <version-"
"specifiers>`, se tiuj estas difinitaj (t.e. se ambaŭ flankoj estas validaj "
"versio-specifiloj). Se mankas difinita konduto laŭ ĉi tiu specifo kaj la "
"operatoro ekzistas en Python, do la operatoro sekvas la konduton de Python. "
"Alikaze ilo sciigu pri eraro. Ekzemple, la jeno kaŭzos erarojn::"

#: ../source/specifications/dependency-specifiers.rst:213
msgid ""
"User supplied constants are always encoded as strings with either ``'`` or "
"``\"`` quote marks. Note that backslash escapes are not defined, but "
"existing implementations do support them. They are not included in this "
"specification because they add complexity and there is no observable need "
"for them today. Similarly we do not define non-ASCII character support: all "
"the runtime variables we are referencing are expected to be ASCII-only."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:220
msgid ""
"The variables in the marker grammar such as \"os_name\" resolve to values "
"looked up in the Python runtime. With the exception of \"extra\" all values "
"are defined on all Python versions today - it is an error in the "
"implementation of markers if a value is not defined."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:225
msgid ""
"Unknown variables must raise an error rather than resulting in a comparison "
"that evaluates to True or False."
msgstr ""
"Nekonata variablo devas kaŭzi eraro, ne rezultigante komparon de valoro "
"``True`` aŭ ``False``."

#: ../source/specifications/dependency-specifiers.rst:228
msgid ""
"Variables whose value cannot be calculated on a given Python implementation "
"should evaluate to ``0`` for versions, and an empty string for all other "
"variables."
msgstr ""
"Variablo ne komputebla sur iu realigo de Python estu ``0`` por versioj kaj "
"malplena signoĉeno por aliaj variabloj."

#: ../source/specifications/dependency-specifiers.rst:232
msgid ""
"The \"extra\" variable is special. It is used by wheels to signal which "
"specifications apply to a given extra in the wheel ``METADATA`` file, but "
"since the ``METADATA`` file is based on a draft version of :pep:`426`, there "
"is no current specification for this. Regardless, outside of a context where "
"this special handling is taking place, the \"extra\" variable should result "
"in an error like all other unknown variables."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:239
msgid ""
"The \"extras\" and \"dependency_groups\" variables are also special. They "
"are used to specify any requested extras or dependency groups when "
"installing from a lock file. Outside of the context of lock files, these two "
"variables should result in an error like all other unknown variables."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:247
msgid "Marker"
msgstr "Marko"

#: ../source/specifications/dependency-specifiers.rst:248
msgid "Python equivalent"
msgstr "Python-ekvivalentaĵo"

#: ../source/specifications/dependency-specifiers.rst:249
msgid "Type"
msgstr "Tipo"

#: ../source/specifications/dependency-specifiers.rst:250
msgid "Sample values"
msgstr "Ekzemplaj valoroj"

#: ../source/specifications/dependency-specifiers.rst:251
msgid "``os_name``"
msgstr "``os_name``"

#: ../source/specifications/dependency-specifiers.rst:252
msgid ":py:data:`os.name`"
msgstr ":py:data:`os.name`"

#: ../source/specifications/dependency-specifiers.rst:253
#: ../source/specifications/dependency-specifiers.rst:257
#: ../source/specifications/dependency-specifiers.rst:262
#: ../source/specifications/dependency-specifiers.rst:266
#: ../source/specifications/dependency-specifiers.rst:270
#: ../source/specifications/dependency-specifiers.rst:274
#: ../source/specifications/dependency-specifiers.rst:278
#: ../source/specifications/dependency-specifiers.rst:292
#: ../source/specifications/dependency-specifiers.rst:301
#, fuzzy
#| msgid "*string*"
msgid "String"
msgstr "*string*"

#: ../source/specifications/dependency-specifiers.rst:254
msgid "``posix``, ``java``"
msgstr "``posix``, ``java``"

#: ../source/specifications/dependency-specifiers.rst:255
msgid "``sys_platform``"
msgstr "``sys_platform``"

#: ../source/specifications/dependency-specifiers.rst:256
msgid ":py:data:`sys.platform`"
msgstr ":py:data:`sys.platform`"

#: ../source/specifications/dependency-specifiers.rst:258
msgid ""
"``linux``, ``linux2``, ``darwin``, ``java1.8.0_51`` (note that \"linux\" is "
"from Python3 and \"linux2\" from Python2)"
msgstr ""
"``linux``, ``linux2``, ``darwin``, ``java1.8.0_51`` (notu, ke «linux» estas "
"de Python3 kaj «linux2» de Python2)"

#: ../source/specifications/dependency-specifiers.rst:260
msgid "``platform_machine``"
msgstr "``platform_machine``"

#: ../source/specifications/dependency-specifiers.rst:261
msgid ":py:func:`platform.machine()`"
msgstr ":py:func:`platform.machine()`"

#: ../source/specifications/dependency-specifiers.rst:263
#: ../source/specifications/platform-compatibility-tags.rst:256
msgid "``x86_64``"
msgstr "``x86_64``"

#: ../source/specifications/dependency-specifiers.rst:264
msgid "``platform_python_implementation``"
msgstr "``platform_python_implementation``"

#: ../source/specifications/dependency-specifiers.rst:265
msgid ":py:func:`platform.python_implementation()`"
msgstr ":py:func:`platform.python_implementation()`"

#: ../source/specifications/dependency-specifiers.rst:267
msgid "``CPython``, ``Jython``"
msgstr "``CPython``, ``Jython``"

#: ../source/specifications/dependency-specifiers.rst:268
msgid "``platform_release``"
msgstr "``platform_release``"

#: ../source/specifications/dependency-specifiers.rst:269
msgid ":py:func:`platform.release()`"
msgstr ":py:func:`platform.release()`"

#: ../source/specifications/dependency-specifiers.rst:271
msgid "``3.14.1-x86_64-linode39``, ``14.5.0``, ``1.8.0_51``"
msgstr "``3.14.1-x86_64-linode39``, ``14.5.0``, ``1.8.0_51``"

#: ../source/specifications/dependency-specifiers.rst:272
msgid "``platform_system``"
msgstr "``platform_system``"

#: ../source/specifications/dependency-specifiers.rst:273
msgid ":py:func:`platform.system()`"
msgstr ":py:func:`platform.system()`"

#: ../source/specifications/dependency-specifiers.rst:275
msgid "``Linux``, ``Windows``, ``Java``"
msgstr "``Linux``, ``Windows``, ``Java``"

#: ../source/specifications/dependency-specifiers.rst:276
msgid "``platform_version``"
msgstr "``platform_version``"

#: ../source/specifications/dependency-specifiers.rst:277
msgid ":py:func:`platform.version()`"
msgstr ":py:func:`platform.version()`"

#: ../source/specifications/dependency-specifiers.rst:279
msgid ""
"``#1 SMP Fri Apr 25 13:07:35 EDT 2014`` ``Java HotSpot(TM) 64-Bit Server VM, "
"25.51-b03, Oracle Corporation`` ``Darwin Kernel Version 14.5.0: Wed Jul 29 "
"02:18:53 PDT 2015; root:xnu-2782.40.9~2/RELEASE_X86_64``"
msgstr ""
"``#1 SMP Fri Apr 25 13:07:35 EDT 2014`` ``Java HotSpot(TM) 64-Bit Server VM, "
"25.51-b03, Oracle Corporation`` ``Darwin Kernel Version 14.5.0: Wed Jul 29 "
"02:18:53 PDT 2015; root:xnu-2782.40.9~2/RELEASE_X86_64``"

#: ../source/specifications/dependency-specifiers.rst:282
msgid "``python_version``"
msgstr "``python_version``"

#: ../source/specifications/dependency-specifiers.rst:283
msgid "``'.'.join(platform.python_version_tuple()[:2])``"
msgstr "``'.'.join(platform.python_version_tuple()[:2])``"

#: ../source/specifications/dependency-specifiers.rst:284
#: ../source/specifications/dependency-specifiers.rst:288
#: ../source/specifications/dependency-specifiers.rst:296
#, fuzzy
#| msgid "Version specifiers"
msgid ":ref:`Version <version-specifiers>`"
msgstr "Versispecifiloj"

#: ../source/specifications/dependency-specifiers.rst:285
msgid "``3.4``, ``2.7``"
msgstr "``3.4``, ``2.7``"

#: ../source/specifications/dependency-specifiers.rst:286
msgid "``python_full_version``"
msgstr "``python_full_version``"

#: ../source/specifications/dependency-specifiers.rst:287
msgid ":py:func:`platform.python_version()`"
msgstr ":py:func:`platform.python_version()`"

#: ../source/specifications/dependency-specifiers.rst:289
#: ../source/specifications/dependency-specifiers.rst:297
msgid "``3.4.0``, ``3.5.0b1``"
msgstr "``3.4.0``, ``3.5.0b1``"

#: ../source/specifications/dependency-specifiers.rst:290
msgid "``implementation_name``"
msgstr "``implementation_name``"

#: ../source/specifications/dependency-specifiers.rst:291
msgid ":py:data:`sys.implementation.name <sys.implementation>`"
msgstr ":py:data:`sys.implementation.name <sys.implementation>`"

#: ../source/specifications/dependency-specifiers.rst:293
msgid "``cpython``"
msgstr "``cpython``"

#: ../source/specifications/dependency-specifiers.rst:294
msgid "``implementation_version``"
msgstr "``implementation_version``"

#: ../source/specifications/dependency-specifiers.rst:295
msgid "see definition below"
msgstr "vidu la difinon ĉi-sube"

#: ../source/specifications/dependency-specifiers.rst:298
msgid "``extra``"
msgstr "``extra``"

#: ../source/specifications/dependency-specifiers.rst:299
#: ../source/specifications/dependency-specifiers.rst:304
#: ../source/specifications/dependency-specifiers.rst:309
msgid ""
"An error except when defined by the context interpreting the specification."
msgstr "Eraro, se ne ekzistas kunteksto interpretanta la specifon."

#: ../source/specifications/dependency-specifiers.rst:302
msgid "``toml``"
msgstr "``toml``"

#: ../source/specifications/dependency-specifiers.rst:303
#: ../source/specifications/pylock-toml.rst:108
msgid "``extras``"
msgstr "``extras``"

#: ../source/specifications/dependency-specifiers.rst:306
#: ../source/specifications/dependency-specifiers.rst:311
msgid "Set of strings"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:307
msgid "``{\"toml\"}``"
msgstr "``{\"toml\"}``"

#: ../source/specifications/dependency-specifiers.rst:308
msgid "``dependency_groups``"
msgstr "``dependency_groups``"

#: ../source/specifications/dependency-specifiers.rst:312
msgid "``{\"test\"}``"
msgstr "``{\"test\"}``"

#: ../source/specifications/dependency-specifiers.rst:314
msgid ""
"The ``implementation_version`` marker variable is derived from :py:data:`sys."
"implementation.version <sys.implementation>`:"
msgstr ""
"La marka variablo ``implementation_version`` devenas de :py:data:`sys."
"implementation.version <sys.implementation>`:"

#: ../source/specifications/dependency-specifiers.rst:331
msgid ""
"This environment markers section, initially defined through :pep:`508`, "
"supersedes the environment markers section in :pep:`345`."
msgstr ""
"Tiu paragrafo de media marko, origine difinita per :pep:`508`, eksvalidigas "
"la paragrafon pri media marko en :pep:`345`."

#: ../source/specifications/dependency-specifiers.rst:337
msgid "Complete Grammar"
msgstr "Kompleta Gramatiko"

#: ../source/specifications/dependency-specifiers.rst:339
msgid "The complete parsley grammar::"
msgstr "La kompleta gramatiko por parseley::"

#: ../source/specifications/dependency-specifiers.rst:446
msgid "A test program - if the grammar is in a string ``grammar``:"
msgstr "Testa programo – se la gramatiko estas en signoĉeno ``grammar``:"

#: ../source/specifications/dependency-specifiers.rst:518
msgid "November 2015: This specification was approved through :pep:`508`."
msgstr "Novembro 2015: Ĉi tiu specifo estis aprobita per :pep:`508`."

#: ../source/specifications/dependency-specifiers.rst:519
msgid ""
"July 2019: The definition of ``python_version`` was `changed <python-version-"
"change_>`_ from ``platform.python_version()[:3]`` to ``'.'.join(platform."
"python_version_tuple()[:2])``, to accommodate potential future versions of "
"Python with 2-digit major and minor versions (e.g. 3.10). [#future_versions]_"
msgstr ""
"Julio 2019: La difino de ``python_version`` `ŝanĝiĝis <python-version-"
"change_>`_ de ``platform.python_version()[:3]`` al ``'.'.join(platform."
"python_version_tuple()[:2])``, por estontaj versioj de Python kun du-ciferaj "
"maĵoraj kaj minoraj versioj (ekz. 3.10). [#future_versions]_"

#: ../source/specifications/dependency-specifiers.rst:524
msgid ""
"June 2024: The definition of ``version_many`` was changed to allow trailing "
"commas, matching with the behavior of the Python implementation that has "
"been in use since late 2022."
msgstr ""
"Junio 2024: La difino de ``version_many`` estis ŝanĝita por permesi lastan "
"komon, konforme al la Python-realigo uzata ekde malfrua 2022."

#: ../source/specifications/dependency-specifiers.rst:527
msgid ""
"April 2025: Added ``extras`` and ``dependency_groups`` for :ref:`lock-file-"
"spec` as approved through :pep:`751`."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:529
#: ../source/specifications/name-normalization.rst:56
msgid ""
"August 2025: The suggested name validation regex was fixed to match the "
"field specification (it previously finished with ``$`` instead of ``\\Z``, "
"incorrectly permitting trailing newlines)"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:537
msgid ""
"pip, the recommended installer for Python packages (http://pip.readthedocs."
"org/en/stable/)"
msgstr ""
"pip, la rekomendata instalilo por Python-pakoj (http://pip.readthedocs.org/"
"en/stable/)"

#: ../source/specifications/dependency-specifiers.rst:540
msgid "The parsley PEG library. (https://pypi.python.org/pypi/parsley/)"
msgstr ""
"La sintaksanaliza biblioteko parsley. (https://pypi.python.org/pypi/parsley/)"

#: ../source/specifications/dependency-specifiers.rst:543
msgid ""
"Future Python versions might be problematic with the definition of "
"Environment Marker Variable ``python_version`` (https://github.com/python/"
"peps/issues/560)"
msgstr ""
"Estontaj versioj de Python povas esti problemaj pri la difino de la Media "
"Marka Variablo ``python_version`` (https://github.com/python/peps/issues/560)"

#: ../source/specifications/direct-url.rst:6
msgid "Recording the Direct URL Origin of installed distributions"
msgstr "Registri la Rektan Retadresan Originon de instalita distribuo"

#: ../source/specifications/direct-url.rst:8
msgid ""
"This document specifies a :file:`direct_url.json` file in the ``*.dist-"
"info`` directory of an installed distribution, to record the Direct URL "
"Origin of the distribution. The general structure and usage of ``*.dist-"
"info`` directories is described in :ref:`recording-installed-packages`."
msgstr ""
"Ĉi tiu dokumento specifas dosieron :file:`direct_url.json` en la dosierujo "
"``*.dist-info`` de instalita distribuo por registri la rektan retadresan "
"originon de la distribuo. La ĝenerala strukturo kaj uzado de dosierujoj ``*."
"dist-info`` troviĝas en :ref:`recording-installed-packages`."

#: ../source/specifications/direct-url.rst:17
msgid ""
"The :file:`direct_url.json` file MUST be created in the :file:`*.dist-info` "
"directory by installers when installing a distribution from a requirement "
"specifying a direct URL reference (including a VCS URL)."
msgstr ""
"La dosiero :file:`direct_url.json` DEVAS esti kreita en la dosierujo :file:"
"`*.dist-info` far instalilo dum instalado de distribuo per postulo "
"specifanta rektan retadresan referencon (inkluzive de versikontrolsistema "
"retadreso)."

#: ../source/specifications/direct-url.rst:21
#: ../source/specifications/recording-installed-packages.rst:222
msgid ""
"This file MUST NOT be created when installing a distribution from an other "
"type of requirement (i.e. name plus version specifier)."
msgstr ""
"Tiu dosiero DEVAS NE kreiĝi dum instalado de distribuo el alia speco de "
"postulo (ekz. nomo plus versio-specifilo)."

#: ../source/specifications/direct-url.rst:24
msgid ""
"This JSON file MUST be a UTF-8 encoded, :rfc:`8259` compliant, serialization "
"of the :doc:`direct-url-data-structure`."
msgstr ""
"Ĉi tiu JSON-dosiero DEVAS esti UTF-8-kodita seriigo de :doc:`direct-url-data-"
"structure` kongrua kun :rfc:`8259`."

#: ../source/specifications/direct-url.rst:29
msgid ""
"When the requested URL has the file:// scheme and points to a local "
"directory that happens to contain a VCS checkout, installers MUST NOT "
"attempt to infer any VCS information and therefore MUST NOT output any VCS "
"related information (such as ``vcs_info``) in :file:`direct_url.json`."
msgstr ""

#: ../source/specifications/direct-url.rst:36
msgid ""
"As a general rule, installers should as much as possible preserve the "
"information that was provided in the requested URL when generating :file:"
"`direct_url.json`. For example user:password environment variables should be "
"preserved and ``requested_revision`` should reflect the revision that was "
"provided in the requested URL as faithfully as possible. This information is "
"however *enriched* with more precise data, such as ``commit_id``."
msgstr ""

#: ../source/specifications/direct-url.rst:45
msgid "Example pip commands and their effect on direct_url.json"
msgstr "Ekzemplaj komandoj de pip kaj ĝiaj efikoj sur direct_url.json"

#: ../source/specifications/direct-url.rst:47
msgid "Commands that generate a ``direct_url.json``:"
msgstr "Komandoj generantaj ``direct_url.json``:"

#: ../source/specifications/direct-url.rst:49
msgid "``pip install https://example.com/app-1.0.tgz``"
msgstr ""

#: ../source/specifications/direct-url.rst:50
msgid "``pip install https://example.com/app-1.0.whl``"
msgstr ""

#: ../source/specifications/direct-url.rst:51
msgid ""
"``pip install \"app @ git+https://example.com/repo/app."
"git#subdirectory=setup\"``"
msgstr ""
"``pip install \"app @ git+https://example.com/repo/app."
"git#subdirectory=setup\"``"

#: ../source/specifications/direct-url.rst:52
msgid "``pip install ./app``"
msgstr ""

#: ../source/specifications/direct-url.rst:53
msgid "``pip install file:///home/user/app``"
msgstr ""

#: ../source/specifications/direct-url.rst:54
msgid ""
"``pip install --editable \"app @ git+https://example.com/repo/app."
"git#subdirectory=setup\"`` (in which case, ``url`` will be the local "
"directory where the git repository has been cloned to, and ``dir_info`` will "
"be present with ``\"editable\": true`` and no ``vcs_info`` will be set)"
msgstr ""
"``pip install --editable \"app @ git+https://example.com/repo/app."
"git#subdirectory=setup\"`` (en kiu ``url`` estos la loka dosierujo, al kiu "
"la git-deponejo estas klonita, kaj ``dir_info`` ĉeestos kun ``\"editable\": "
"true`` kaj sen ajna ``vcs_info``)"

#: ../source/specifications/direct-url.rst:58
msgid "``pip install -e ./app``"
msgstr ""

#: ../source/specifications/direct-url.rst:60
msgid "Commands that *do not* generate a ``direct_url.json``"
msgstr "Komandoj *ne* generantaj ``direct_url.json``"

#: ../source/specifications/direct-url.rst:62
#, fuzzy
msgid "``pip install app``"
msgstr "Uzi ``pip`` por instali Pipenv:"

#: ../source/specifications/direct-url.rst:63
msgid "``pip install app --no-index --find-links https://example.com/``"
msgstr ""

#: ../source/specifications/direct-url.rst:69
msgid "March 2020: This specification was approved through :pep:`610`."
msgstr "Marto 2020: Ĉi tiu specifo estis aprobita per :pep:`610`."

#: ../source/specifications/direct-url-data-structure.rst:7
msgid "Direct URL Data Structure"
msgstr "Datenstrukturo de Rekta Retadreso"

#: ../source/specifications/direct-url-data-structure.rst:9
msgid ""
"This document specifies a JSON-serializable abstract data structure that can "
"represent URLs to python projects and distribution artifacts such as VCS "
"source trees, local source trees, source distributions and wheels."
msgstr ""
"Jen dokumento specifanta JSON-seriigeblan abstraktan datenstrukturon, kiu "
"prezentas retadreson al Python-projekto aŭ distribuan artefakton kiel "
"versikontrolsistema fontarbo, loka fontarbo, fonta distribuo kaj wheel."

#: ../source/specifications/direct-url-data-structure.rst:13
msgid ""
"At time of writing, it is not formally specified how to merge the parts of "
"this data structure into a single URL that can be passed to tools. A common "
"representation is the pip URL format (`VCS Support <pip-vcs-support_>`_), "
"other examples are provided in the :ref:`Version specifier specification "
"<version-specifiers>`."
msgstr ""
"Je la tempo de verkado, ne ekzistas formala normo pri kunigado de la partoj "
"de ĉi tiu datenstrukturo en unu retadreson transdoneblan al ilo. Ofta "
"prezento estas la retadresa formo pip (`VCS Support <pip-vcs-support_>`_); "
"aliaj ekzemploj troviĝas en la :ref:`Normo pri versio-specifiloj <version-"
"specifiers>`."

#: ../source/specifications/direct-url-data-structure.rst:21
msgid ""
"The Direct URL Data Structure MUST be a dictionary, serializable to JSON "
"according to :rfc:`8259`."
msgstr ""
"La Datenstrukturo de Rekta Retadreso DEVAS esti vortaro seriigebla al JSON "
"laŭ :rfc:`8259`."

#: ../source/specifications/direct-url-data-structure.rst:24
msgid ""
"It MUST contain at least two fields. The first one is ``url``, with type "
"``string``. Its content must be a valid URL according to the `WHATWG URL "
"Standard <whatwg-url-standard_>`_."
msgstr ""
"Ĝi DEVAS enhavi almenaŭ du kampoj. La unua estas ``url`` de tipo ``string``. "
"Ĝia enhavo devas esti valida URL laŭ la `normo de WHATWG pri URL <whatwg-url-"
"standard_>`_."

#: ../source/specifications/direct-url-data-structure.rst:28
msgid ""
"Depending on what ``url`` refers to, the second field MUST be one of "
"``vcs_info`` (if ``url`` is a VCS reference), ``archive_info`` (if ``url`` "
"is a source archive or a wheel), or ``dir_info`` (if ``url``  is a local "
"directory). These info fields have a (possibly empty) subdictionary as "
"value, with the possible keys defined below."
msgstr ""
"Depende de la celo de ``url``, la dua kampo DEVAS esti unu el ``vcs_info`` "
"(se ``url`` referencas versikontrolan sistemon), ``archive_info`` (se "
"``url`` estas fonta arĥivo aŭ wheel), aŭ ``dir_info`` (se ``url`` estas loka "
"dosierujo). La valoro de tia kampo estas (eble malplena) subvortaro, kies "
"eblaj ŝlosiloj difiniĝas ĉi-sube."

#: ../source/specifications/direct-url-data-structure.rst:35
msgid "Security Considerations"
msgstr "Konsideroj pri Sekureco"

#: ../source/specifications/direct-url-data-structure.rst:37
msgid ""
"When persisted, ``url`` MUST be stripped of any sensitive authentication "
"information, for security reasons."
msgstr ""
"Se konservita, ``url`` DEVAS esti senigita je ajna grava aŭtentikiga "
"informo, por sekureco."

#: ../source/specifications/direct-url-data-structure.rst:40
msgid ""
"The user:password section of the URL MAY however be composed of environment "
"variables, matching the following regular expression:"
msgstr ""
"La parto «uzanto:pasvorto» de la URL POVAS tamen konsisti el medio-variabloj "
"laŭ la jena regula esprimo:"

#: ../source/specifications/direct-url-data-structure.rst:48
msgid ""
"Additionally, the user:password section of the URL MAY be a well-known, non "
"security sensitive string. A typical example is ``git`` in the case of a URL "
"such as ``ssh://git@gitlab.com/user/repo``."
msgstr ""
"Krome, la parto «uzanto:pasvorto» de la URL POVAS esti bone konata, ne-"
"sekurece-grava signoĉeno. Tipa ekzemplo estas ``git`` en URL kiel ``ssh://"
"git@gitlab.com/uzanto/deponejo``."

#: ../source/specifications/direct-url-data-structure.rst:55
msgid "VCS URLs"
msgstr "Versikontrolsistemaj Retadresoj"

#: ../source/specifications/direct-url-data-structure.rst:57
msgid ""
"When ``url`` refers to a VCS repository, the ``vcs_info`` key MUST be "
"present as a dictionary with the following keys:"
msgstr ""
"Se ``url`` montras versikontrolsisteman deponejon, la ŝlosilo ``vcs_info`` "
"DEVAS ekzisti kiel vortaro kun la jenaj ŝlosiloj:"

#: ../source/specifications/direct-url-data-structure.rst:60
msgid ""
"A ``vcs`` key (type ``string``) MUST be present, containing the name of the "
"VCS (i.e. one of ``git``, ``hg``, ``bzr``, ``svn``). Other VCS's SHOULD be "
"registered by writing a PEP to amend this specification. The ``url`` value "
"MUST be compatible with the corresponding VCS, so an installer can hand it "
"off without transformation to a checkout/download command of the VCS."
msgstr ""
"Ŝlosilo ``vcs`` (de tipo ``string``) DEVAS ĉeesti, enhavante la nomon de la "
"versikontrola sistemo (unu el ``git``, ``hg``, ``bzr``, ``svn``). Alia "
"versikontrola sistemo ESTU registrita per nova PEP amendanta ĉi tiun "
"specifon. La valoro de ``url`` DEVAS kongrui kun la respondanta "
"versikontrola sistemo tiel, ke instalilo povas facile krei komandon por "
"elŝutado el versikontrola sistemo."

#: ../source/specifications/direct-url-data-structure.rst:66
msgid ""
"A ``requested_revision`` key (type ``string``) MAY be present naming a "
"branch/tag/ref/commit/revision/etc (in a format compatible with the VCS). "
"This field MUST match the revision requested by the user and MUST NOT exist "
"when the user did not select a specific revision."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:70
msgid ""
"A ``commit_id`` key (type ``string``) MUST be present, containing the exact "
"commit/revision number that was/is to be installed. If the VCS supports "
"commit-hash based revision identifiers, such commit-hash MUST be used as "
"``commit_id`` in order to reference an immutable version of the source code."
msgstr ""
"Ŝlosilo ``commit_id`` (de tipo ``string``) DEVAS ekzisti, kies valoro estas "
"la ekzakta revizia numero intalota. Se la versikontrola sistemo subtenas "
"haketaĵo-baza revizio-identigilo, oni DEVAS uzi tian haketaĵon kiel "
"``commit_id`` por referenci nemodifeblan version de la fontokodo."

#: ../source/specifications/direct-url-data-structure.rst:80
msgid "Archive URLs"
msgstr "Arĥivaj Retadresoj"

#: ../source/specifications/direct-url-data-structure.rst:82
msgid ""
"When ``url`` refers to a source archive or a wheel, the ``archive_info`` key "
"MUST be present as a dictionary with the following keys:"
msgstr ""
"Se ``url`` montras fontan arĥivon aŭ wheel, la ŝlosilo ``archive_info`` "
"DEVAS ekzisti kiel vortaro kun la jenaj ŝlosiloj:"

#: ../source/specifications/direct-url-data-structure.rst:85
msgid ""
"A ``hashes`` key SHOULD be present as a dictionary mapping a hash name to a "
"hex encoded digest of the file."
msgstr ""
"Ŝlosilo ``hashes`` ĈEESTU kiel vortaro rilatanta haketaĵan nomon al "
"deksesume kodita haketaĵo de la dosiero."

#: ../source/specifications/direct-url-data-structure.rst:88
msgid ""
"Multiple hashes can be included, and it is up to the consumer to decide what "
"to do with multiple hashes (it may validate all of them or a subset of them, "
"or nothing at all)."
msgstr ""
"Oni povas inkluzivi plurajn haketaĵojn. La konsumanto decidas kion fari pri "
"pluraj haketaĵoj (ĝi povas kontroli ĉiujn, aŭ iujn, aŭ neniun)."

#: ../source/specifications/direct-url-data-structure.rst:92
msgid "These hash names SHOULD always be normalized to be lowercase."
msgstr "Tiuj haketaĵaj nomoj ESTU normigitaj minuskle."

#: ../source/specifications/direct-url-data-structure.rst:94
msgid ""
"Any hash algorithm available via :py:mod:`hashlib` (specifically any that "
"can be passed to :py:func:`hashlib.new()` and do not require additional "
"parameters) can be used as a key for the hashes dictionary. At least one "
"secure algorithm from :py:data:`hashlib.algorithms_guaranteed` SHOULD always "
"be included. At time of writing, ``sha256`` specifically is recommended."
msgstr ""
"Ajna haketaĵa algoritmo disponebla per :py:mod:`hashlib` (pli precize, "
"donebla al :py:func:`hashlib.new()` sen pliaj parametroj) estas uzebla kiel "
"ŝlosilo por la vortaro ``hashes``. Oni INKLUZIVU almenaŭ unu sekuran "
"algoritmon el :py:data:`hashlib.algorithms_guaranteed`. Aktuale, ni specife "
"rekomendas ``sha256``."

#: ../source/specifications/direct-url-data-structure.rst:100
msgid ""
"A deprecated ``hash`` key (type ``string``) MAY be present for backwards "
"compatibility purposes, with value ``<hash-algorithm>=<expected-hash>``."
msgstr ""
"Evitinda ŝlosilo ``hash`` (de tipo ``string``) POVAS ĉeesti por "
"retrokongrueco, kies valoro estas ``<haketaĵa-algoritmo>=<atendata-"
"haketaĵo>``."

#: ../source/specifications/direct-url-data-structure.rst:103
msgid ""
"Producers of the data structure SHOULD emit the ``hashes`` key whether one "
"or multiple hashes are available. Producers SHOULD continue to emit the "
"``hash`` key in contexts where they did so before, so as to keep backwards "
"compatibility for existing clients."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:107
msgid ""
"When both the ``hash`` and ``hashes`` keys are present, the hash represented "
"in the ``hash`` key MUST also be present in the ``hashes`` dictionary, so "
"consumers can consider the ``hashes`` key only if it is present, and fall "
"back to ``hash`` otherwise."
msgstr ""
"Kiam ambaŭ ŝlosiloj ``hash`` kaj ``hashes`` ekzistas, la haketaĵo prezentita "
"de la ŝlosilo ``hash`` DEVAS ankaŭ ĉeestas en la vortaro de ``hashes``, por "
"ke uzanto povas nur uzi la ŝlosilon ``hashes``, se ĝi ekzistas, kaj nur uzi "
"``hash`` se ne."

#: ../source/specifications/direct-url-data-structure.rst:114
msgid "Local directories"
msgstr "Lokaj dosierujoj"

#: ../source/specifications/direct-url-data-structure.rst:116
msgid ""
"When ``url`` refers to a local directory, the ``dir_info`` key MUST be "
"present as a dictionary with the following key:"
msgstr ""
"Se ``url`` montras lokan dosierujon, la ŝlosilo ``vcs_info`` DEVAS ekzisti "
"kiel vortaro kun la jenaj ŝlosiloj:"

#: ../source/specifications/direct-url-data-structure.rst:119
msgid ""
"``editable`` (type: ``boolean``): ``true`` if the distribution was/is to be "
"installed in editable mode, ``false`` otherwise. If absent, default to "
"``false``."
msgstr ""
"``editable`` (tipo: ``boolean``): ``true`` se la distribuo estas/estis "
"instalita en modifebla reĝimo, ``false`` se ne. Se ĝi mankas, la implicita "
"valoro estas ``false``."

#: ../source/specifications/direct-url-data-structure.rst:122
msgid ""
"When ``url`` refers to a local directory, it MUST have the ``file`` scheme "
"and be compliant with :rfc:`8089`. In particular, the path component must be "
"absolute. Symbolic links SHOULD be preserved when making relative paths "
"absolute."
msgstr ""
"Se ``url`` referencas lokan dosierujon, ĝi DEVAS havi la skemon ``file`` kaj "
"observu :rfc:`8089`. Speciale, la dosierloka komponanto devas esti absoluta. "
"Simbola ligo ESTU konservata, dum absolutigo de relativa dosierloko."

#: ../source/specifications/direct-url-data-structure.rst:130
msgid "Projects in subdirectories"
msgstr "Projektoj en subdosierujoj"

#: ../source/specifications/direct-url-data-structure.rst:132
msgid ""
"A top-level ``subdirectory`` field MAY be present containing a directory "
"path, relative to the root of the VCS repository, source archive or local "
"directory, to specify where ``pyproject.toml`` or ``setup.py`` is located."
msgstr ""
"Supranivela kampo ``subdirectory`` POVAS ekzisti, enhavanta dosierujan lokon "
"relativan al la radiko de la versikontrolsistema deponejo, fonta arĥivo aŭ "
"loka dosierujo, por specifi la lokon de ``pyproject.toml`` aŭ ``setup.py``."

#: ../source/specifications/direct-url-data-structure.rst:139
msgid "Registered VCS"
msgstr "Registrita Versikontrola Sistemo"

#: ../source/specifications/direct-url-data-structure.rst:141
msgid ""
"This section lists the registered VCS's; expanded, VCS-specific information "
"on how to use the ``vcs``, ``requested_revision``, and other fields of "
"``vcs_info``; and in some cases additional VCS-specific fields. Tools MAY "
"support other VCS's although it is RECOMMENDED to register them by writing a "
"PEP to amend this specification. The ``vcs`` field SHOULD be the command "
"name (lowercased). Additional fields that would be necessary to support such "
"VCS SHOULD be prefixed with the VCS command name."
msgstr ""
"Jen listo de registritaj versikontrolsistemoj; versikontrolsistemo-specifaj "
"informoj pri kiel uzi la kampojn ``vcs``, ``requested_revision`` kaj aliajn "
"de ``vcs_info``; kaj en kelkaj kazoj suplementaj versikontrolsistemo-"
"specifaj kampoj. Ilo POVAS subteni alian versikontrolan sistemon, sed estas "
"REKOMENDATE registri ĝin per PEP modifanta ĉi tiun specifon. La kampo "
"``vcs`` ESTU la komanda nomo (minuskla). Suplementaj kampoj necesaj por tiu "
"versikontrola sistemo HAVU prefikson de la versikontrolsistema komanda nomo."

#: ../source/specifications/direct-url-data-structure.rst:151
msgid "Git"
msgstr "Git"

#: ../source/specifications/direct-url-data-structure.rst:154
#: ../source/specifications/direct-url-data-structure.rst:181
#: ../source/specifications/direct-url-data-structure.rst:199
#: ../source/specifications/direct-url-data-structure.rst:217
msgid "Home page"
msgstr "Ĉefpaĝo"

#: ../source/specifications/direct-url-data-structure.rst:154
msgid "https://git-scm.com/"
msgstr "https://git-scm.com/"

#: ../source/specifications/direct-url-data-structure.rst:157
#: ../source/specifications/direct-url-data-structure.rst:184
#: ../source/specifications/direct-url-data-structure.rst:202
#: ../source/specifications/direct-url-data-structure.rst:220
msgid "vcs command"
msgstr "komando de versikontrola sistemo"

#: ../source/specifications/direct-url-data-structure.rst:157
#: ../source/specifications/direct-url-data-structure.rst:160
msgid "git"
msgstr "git"

#: ../source/specifications/direct-url-data-structure.rst:160
#: ../source/specifications/direct-url-data-structure.rst:187
#: ../source/specifications/direct-url-data-structure.rst:205
#: ../source/specifications/direct-url-data-structure.rst:223
msgid "``vcs`` field"
msgstr "kampo ``vcs``"

#: ../source/specifications/direct-url-data-structure.rst:164
#: ../source/specifications/direct-url-data-structure.rst:190
#: ../source/specifications/direct-url-data-structure.rst:208
#: ../source/specifications/direct-url-data-structure.rst:227
msgid "``requested_revision`` field"
msgstr "kampo ``requested_revision``"

#: ../source/specifications/direct-url-data-structure.rst:163
msgid ""
"A tag name, branch name, Git ref, commit hash, shortened commit hash, or "
"other commit-ish."
msgstr ""
"Nomo de etikedo, nomo de branĉo, referenco de Git, haketaĵo de enmeto, "
"mallongigita haketaĵo de enmeto, aŭ io simila."

#: ../source/specifications/direct-url-data-structure.rst:167
#: ../source/specifications/direct-url-data-structure.rst:193
#: ../source/specifications/direct-url-data-structure.rst:211
#: ../source/specifications/direct-url-data-structure.rst:232
msgid "``commit_id`` field"
msgstr "kampo ``commit_id``"

#: ../source/specifications/direct-url-data-structure.rst:167
msgid "A commit hash (40 hexadecimal characters sha1)."
msgstr "Haketaĵo de ŝanĝaro (40 deksesumaj signoj por SHA1)."

#: ../source/specifications/direct-url-data-structure.rst:171
msgid ""
"Tools can use the ``git show-ref`` and ``git symbolic-ref`` commands to "
"determine if the ``requested_revision`` corresponds to a Git ref. In turn, a "
"ref beginning with ``refs/tags/`` corresponds to a tag, and a ref beginning "
"with ``refs/remotes/origin/`` after cloning corresponds to a branch."
msgstr ""
"Ilo povas uzi la komandojn ``git show-ref`` kaj ``git symbolic-ref`` por "
"determini, ĉu ``requested_revision`` respondas al Git-referenco. Referenco "
"komenciĝanta per ``refs/tags/`` respondas al etikedo, kaj referenco "
"komenciĝanta per ``refs/remotes/origin/`` post klonado respondas al branĉo."

#: ../source/specifications/direct-url-data-structure.rst:178
msgid "Mercurial"
msgstr "Mercurial"

#: ../source/specifications/direct-url-data-structure.rst:181
msgid "https://www.mercurial-scm.org/"
msgstr "https://www.mercurial-scm.org/"

#: ../source/specifications/direct-url-data-structure.rst:184
#: ../source/specifications/direct-url-data-structure.rst:187
msgid "hg"
msgstr "hg"

#: ../source/specifications/direct-url-data-structure.rst:190
msgid "A tag name, branch name, changeset ID, shortened changeset ID."
msgstr ""
"Nomo de etikedo, nomo de branĉo, identigilo de ŝanĝaro, mallongigita "
"identigilo de ŝanĝaro."

#: ../source/specifications/direct-url-data-structure.rst:193
msgid "A changeset ID (40 hexadecimal characters)."
msgstr "Identigilo de ŝanĝaro (40 deksesumaj signoj)."

#: ../source/specifications/direct-url-data-structure.rst:196
msgid "Bazaar"
msgstr "Bazaar"

#: ../source/specifications/direct-url-data-structure.rst:199
msgid "https://www.breezy-vcs.org/"
msgstr "https://www.breezy-vcs.org/"

#: ../source/specifications/direct-url-data-structure.rst:202
#: ../source/specifications/direct-url-data-structure.rst:205
msgid "bzr"
msgstr "bzr"

#: ../source/specifications/direct-url-data-structure.rst:208
msgid "A tag name, branch name, revision id."
msgstr "Nomo de etikedo, nomo de branĉo, identigilo de revizio."

#: ../source/specifications/direct-url-data-structure.rst:211
msgid "A revision id."
msgstr "Identigilo de revizio."

#: ../source/specifications/direct-url-data-structure.rst:214
msgid "Subversion"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:217
msgid "https://subversion.apache.org/"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:220
#: ../source/specifications/direct-url-data-structure.rst:223
msgid "svn"
msgstr "svn"

#: ../source/specifications/direct-url-data-structure.rst:226
msgid ""
"``requested_revision`` must be compatible with ``svn checkout`` ``--"
"revision`` option. In Subversion, branch or tag is part of ``url``."
msgstr ""
"``requested_revision`` devas kongrui kun la opcio ``--revision`` de ``svn "
"checkout`` . Je Subversion, la branĉo aŭ etikedo estas parto de ``url``."

#: ../source/specifications/direct-url-data-structure.rst:230
msgid ""
"Since Subversion does not support globally unique identifiers, this field is "
"the Subversion revision number in the corresponding repository."
msgstr ""
"Ĉar Subversion ne subtenas malloke unikan identigilon, ĉi tiu kampo estas la "
"revizinumero de Subversion en la respondanta deponejo."

#: ../source/specifications/direct-url-data-structure.rst:235
msgid "JSON Schema"
msgstr "JSON-Skemo"

#: ../source/specifications/direct-url-data-structure.rst:237
msgid ""
"The following JSON Schema can be used to validate the contents of "
"``direct_url.json``:"
msgstr ""
"Jen JSON-skemo usebla por kontroli la validecon de la enhavo de ``direct_url."
"json``:"

#: ../source/specifications/direct-url-data-structure.rst:244
msgid "Source archive:"
msgstr "Fonta arĥivo:"

#: ../source/specifications/direct-url-data-structure.rst:257
msgid "Git URL with tag and commit-hash:"
msgstr "Git-retadreso kun etikedo kaj haketaĵo:"

#: ../source/specifications/direct-url-data-structure.rst:270
msgid "Local directory:"
msgstr "Loka dosierujo:"

#: ../source/specifications/direct-url-data-structure.rst:279
msgid "Local directory in editable mode:"
msgstr "Loka dosierujo en modifebla reĝimo:"

#: ../source/specifications/direct-url-data-structure.rst:294
msgid ""
"March 2020: This specification was approved through :pep:`610`, defining the "
"``direct_url.json`` metadata file."
msgstr ""
"Marto 2020: Ĉi tiu specifo estis aprobita per :pep:`610`, difinante la "
"metadatenan dosieron ``direct_url.json``."

#: ../source/specifications/direct-url-data-structure.rst:296
msgid ""
"January 2023: Added the ``archive_info.hashes`` key (`discussion <archive-"
"info-hashes_>`_)."
msgstr ""
"Januaro 2023: Aldonis la ŝlosilon ``archive_info.hashes`` (`diskuto <archive-"
"info-hashes_>`_)."

#: ../source/specifications/entry-points.rst:5
msgid "Entry points specification"
msgstr "Specifo pri enirpunktoj"

#: ../source/specifications/entry-points.rst:7
msgid ""
"*Entry points* are a mechanism for an installed distribution to advertise "
"components it provides to be discovered and used by other code. For example:"
msgstr ""
"*Enirpunktoj* estas meĥanismo por instalita distribuo reklami komponantojn "
"provizitajn, igante ilin malkovreblaj kaj uzeblaj de alia kodo. Ekzemple:"

#: ../source/specifications/entry-points.rst:11
msgid ""
"Distributions can specify ``console_scripts`` entry points, each referring "
"to a function. When *pip* (or another console_scripts aware installer) "
"installs the distribution, it will create a command-line wrapper for each "
"entry point."
msgstr ""
"Distribuo povas specifi enirpunktojn ``console scripts``, po unu por "
"funkcio. Kiam *pip* (aŭ alia instalilo konanta ``console_scripts``) instalos "
"la distribuon, ĝi kreos komandliniajn volvilojn po unu por enirpunkto."

#: ../source/specifications/entry-points.rst:14
msgid ""
"Applications can use entry points to load plugins; e.g. Pygments (a syntax "
"highlighting tool) can use additional lexers and styles from separately "
"installed packages. For more about this, see :doc:`/guides/creating-and-"
"discovering-plugins`."
msgstr ""
"Programo povas uzi enirpunkton por ŝargi kromprogramojn. Ekzemple, la "
"sintaksreliefigilo Pygments povas uzi pliajn sintaksanalizilojn kaj stilojn "
"el aparte instalitaj pakoj. Por pli pri tio, legu :doc:`/guides/creating-and-"
"discovering-plugins`."

#: ../source/specifications/entry-points.rst:19
msgid ""
"The entry point file format was originally developed to allow packages built "
"with setuptools to provide integration point metadata that would be read at "
"runtime with :py:mod:`importlib.metadata`. It is now defined as a PyPA "
"interoperability specification in order to allow build tools other than "
"``setuptools`` to publish :py:mod:`importlib.metadata` compatible entry "
"point metadata, and runtime libraries other than :py:mod:`importlib."
"metadata` to portably read published entry point metadata (potentially with "
"different caching and conflict resolution strategies)."
msgstr ""

#: ../source/specifications/entry-points.rst:28
msgid "Data model"
msgstr "Datena modelo"

#: ../source/specifications/entry-points.rst:30
msgid "Conceptually, an entry point is defined by three required properties:"
msgstr "Koncepte, enirpunkton difinas tri postulataj atributoj:"

#: ../source/specifications/entry-points.rst:32
msgid ""
"The **group** that an entry point belongs to indicates what sort of object "
"it provides. For instance, the group ``console_scripts`` is for entry points "
"referring to functions which can be used as a command, while ``pygments."
"styles`` is the group for classes defining pygments styles. The consumer "
"typically defines the expected interface. To avoid clashes, consumers "
"defining a new group should use names starting with a PyPI name owned by the "
"consumer project, followed by ``.``. Group names must be one or more groups "
"of letters, numbers and underscores, separated by dots (regex ``^\\w+(\\."
"\\w+)*$``)."
msgstr ""
"La **grupo**, al kiu enirpunkto apartenas, indikas tian objekton, kian ĝi "
"provizas. Ekzemple, la grupo ``console_scripts`` estas por enirpunkto al "
"funkcio uzebla kiel komando, dum ``pygments.styles`` estas la grupo por "
"klaso difinanta pygments-stilon. La konsumanto tipe difinas la atendatan "
"interfacon. Por eviti konflikton, konsumanto difinanta novan grupon komencu "
"nomon per nomo ĉe PyPI posedata de la konsumanta projekto sekvita de ``.``. "
"Nomo de grupo devas konsisti el unu aŭ pluraj grupoj de literoj, ciferoj kaj "
"substrekoj, apartigitaj de punktoj (laŭ la regula esprimo ``^\\w+(\\."
"\\w+)*$``)."

#: ../source/specifications/entry-points.rst:42
msgid ""
"The **name** identifies this entry point within its group. The precise "
"meaning of this is up to the consumer. For console scripts, the name of the "
"entry point is the command that will be used to launch it. Within a "
"distribution, entry point names should be unique. If different distributions "
"provide the same name, the consumer decides how to handle such conflicts. "
"The name may contain any characters except ``=``, but it cannot start or end "
"with any whitespace character, or start with ``[``. For new entry points, it "
"is recommended to use only letters, numbers, underscores, dots and dashes "
"(regex ``[\\w.-]+``)."
msgstr ""
"La **nomo** identigas la enirpunkton en ĝia grupo. La preciza signifo "
"dependas de la uzanto de metadatenoj. Por konzola programeto, la nomo de la "
"enirpunkto estas la komando uzota por lanĉi ĝin. En distribuo, nomoj de "
"enirpunktoj estu unikaj. Se pluraj distribuoj provizas la saman nomon, la "
"uzanto de metadatenoj decidas kion fari. La nomo povas konsisti el ajna "
"skribsigno krom ``=``, sed ĝi povas ne komenciĝi nek finiĝi per blanka "
"spaco, kaj ĝi ne povas komenciĝi per ``[``. Nomo de nova enirpunkto konsistu "
"el literoj, ciferoj, substrekoj, punktoj kaj streketoj (laŭ la regula "
"esprimo ``[\\w.-]+``)."

#: ../source/specifications/entry-points.rst:51
msgid ""
"The **object reference** points to a Python object. It is either in the form "
"``importable.module``, or ``importable.module:object.attr``. Each of the "
"parts delimited by dots and the colon is a valid Python identifier. It is "
"intended to be looked up like this::"
msgstr ""
"La **objekta referenco** montras Python-objekton. Ĝi estas aŭ en la formo "
"``importebla.modulo`` aŭ en la formo ``importebla.modulo:objekto.atributo``. "
"Ĉiu parto inter punktoj kaj dupunktoj estas valida Python-identigilo. Oni "
"serĉas ĝin jene::"

#: ../source/specifications/entry-points.rst:64
msgid ""
"Some tools call this kind of object reference by itself an 'entry point', "
"for want of a better term, especially where it points to a function to "
"launch a program."
msgstr ""
"Kelkaj iloj nomas tian objektan referencon mem «enirpunkto», speciale kiam "
"ĝi montras funkcion por lanĉi programon."

#: ../source/specifications/entry-points.rst:68
msgid ""
"There is also an optional property: the **extras** are a set of strings "
"identifying optional features of the distribution providing the entry point. "
"If these are specified, the entry point requires the dependencies of those "
"'extras'. See the metadata field :ref:`metadata_provides_extra`."
msgstr ""

#: ../source/specifications/entry-points.rst:73
msgid ""
"Using extras for an entry point is no longer recommended. Consumers should "
"support parsing them from existing distributions, but may then ignore them. "
"New publishing tools need not support specifying extras. The functionality "
"of handling extras was tied to setuptools' model of managing 'egg' packages, "
"but newer tools such as pip and virtualenv use a different model."
msgstr ""

#: ../source/specifications/entry-points.rst:80
msgid "File format"
msgstr "Dosierformo"

#: ../source/specifications/entry-points.rst:82
msgid ""
"Entry points are defined in a file called :file:`entry_points.txt` in the :"
"file:`*.dist-info` directory of the distribution. This is the directory "
"described in :ref:`recording-installed-packages` for installed "
"distributions, and in :ref:`binary-distribution-format` for wheels. The file "
"uses the UTF-8 character encoding."
msgstr ""
"Enirpunktoj difiniĝas en dosiero nomita :file:`entry_points.txt` en la "
"dosierujo :file:`*.dist-info` de la distribuo. Tiu estas la dosierujo "
"priskribita en :ref:`recording-installed-packages` por instaleblaj "
"distribuoj kaj en :ref:`binary-distribution-format` por wheel. La dosiero "
"estas kodita laŭ UTF-8."

#: ../source/specifications/entry-points.rst:88
msgid ""
"The file contents are in INI format, as read by Python's :mod:`configparser` "
"module. However, configparser treats names as case-insensitive by default, "
"whereas entry point names are case sensitive. A case-sensitive config parser "
"can be made like this::"
msgstr ""
"La dosieraj enhavoj estas en la dosierformo INI, legata de la modulo :mod:"
"`configparser` de Python. Tamen, configparser apriore estas usklecoblinda "
"pri nomoj, sed enirpunktoj estas usklecdistinga. Oni povas krei "
"usklecdistingan ``ConfigParser`` jene::"

#: ../source/specifications/entry-points.rst:98
msgid ""
"The entry points file must always use ``=`` to delimit names from values "
"(whereas configparser also allows using ``:``)."
msgstr ""
"La enirpunkta dosiero devas uzi ``=`` por apartigi nomon kaj valoron (dum "
"configparser ankaŭ permesas uzi ``:``)."

#: ../source/specifications/entry-points.rst:101
msgid ""
"The sections of the config file represent entry point groups, the names are "
"names, and the values encode both the object reference and the optional "
"extras. If extras are used, they are a comma-separated list inside square "
"brackets."
msgstr ""
"La sekcioj de la agorda dosiero respondas al enirpunktogrupoj: la sekciaj "
"nomoj estas la nomoj de la enirpunktogrupoj, kaj la valoroj kodas kaj la "
"objektan referencon kaj la nedevigajn ekstraĵojn. Se ekstraĵoj ekzistas, ili "
"estas kome disigita listo inter rektaj krampoj."

#: ../source/specifications/entry-points.rst:105
msgid ""
"Within a value, readers must accept and ignore spaces (including multiple "
"consecutive spaces) before or after the colon, between the object reference "
"and the left square bracket, between the extra names and the square brackets "
"and colons delimiting them, and after the right square bracket. The syntax "
"for extras is formally specified as part of :pep:`508` (as ``extras``) and "
"restrictions on values specified in :pep:`685`. For tools writing the file, "
"it is recommended only to insert a space between the object reference and "
"the left square bracket."
msgstr ""
"En valoro, legilo devas akcepti kaj ignori spacetojn (inkluzive de sinsekvo "
"de pluraj spacetoj) antaŭ aŭ post dupunkto, inter la objekta referenco kaj "
"la malferma rekta krampo, inter la ekstraĵaj nomoj kaj la apartigantaj "
"kvadrataj krampoj kaj dupunktoj, kaj post la ferma rekta krampo. La sintakso "
"de ekstraĵoj estas formale specifita kiel parto de :pep:`508` (kiel "
"``extras``), kaj restriktoj pri valoroj estas formale specifitaj en :pep:"
"`685`. Ilo skribanta la dosieron metu spaceton nur inter la objekta "
"referenco kaj la malferma rekta krampo."

#: ../source/specifications/entry-points.rst:128
msgid "Use for scripts"
msgstr "Uzado por programetoj"

#: ../source/specifications/entry-points.rst:130
msgid ""
"Two groups of entry points have special significance in packaging: "
"``console_scripts`` and ``gui_scripts``. In both groups, the name of the "
"entry point should be usable as a command in a system shell after the "
"package is installed. The object reference points to a function which will "
"be called with no arguments when this command is run. The function may "
"return an integer to be used as a process exit code, and returning ``None`` "
"is equivalent to returning ``0``."
msgstr ""
"Du grupoj de enirpunktoj havas specialan signifon je pakado: "
"``console_scripts`` kaj ``gui_scripts``. En ambaŭ grupoj, la nomo de la "
"enirpunkto estu uzebla kiel komando en sistema terminalo post instalo de la "
"pako. La objekta referenco montras funkcion alvokotan senargumente, kiam la "
"komando ruliĝos. La funkcio povas livero entjeron kiel procezan elirkodon. "
"Liveri ``None`` ekvivalentas liveri ``0``."

#: ../source/specifications/entry-points.rst:138
msgid ""
"For instance, the entry point ``mycmd = mymod:main`` would create a command "
"``mycmd`` launching a script like this::"
msgstr ""
"Ekzemple, la enirpunkto ``mycmd = mymod:main`` kreus komandon ``mycmd`` "
"lanĉante jenan programon::"

#: ../source/specifications/entry-points.rst:145
msgid ""
"The difference between ``console_scripts`` and ``gui_scripts`` only affects "
"Windows systems. ``console_scripts`` are wrapped in a console executable, so "
"they are attached to a console and can use :py:data:`sys.stdin`, :py:data:"
"`sys.stdout` and :py:data:`sys.stderr` for input and output. ``gui_scripts`` "
"are wrapped in a GUI executable, so they can be started without a console, "
"but cannot use standard streams unless application code redirects them. "
"Other platforms do not have the same distinction."
msgstr ""
"La diferenco inter ``console_scripts`` kaj ``gui_scripts`` nur gravas sur "
"Windows. ``console_scripts`` estas volvita en konzolan ruleblaĵon, alligitan "
"an konzolo, kiu povas uzi :py:data:`sys.stdin`, :py:data:`sys.stdout` kaj :"
"py:data:`sys.stderr` por enigo kaj eligo. ``gui_scripts`` estas volvita en "
"grafikan ruleblaĵon, uzeblan sen konzolo, kiu ne povas uzi la normajn fluojn "
"sen eksplicita redirektado. Aliaj platformoj ne havas tian distingon."

#: ../source/specifications/entry-points.rst:153
msgid ""
"Install tools are expected to set up wrappers for both ``console_scripts`` "
"and ``gui_scripts`` in the scripts directory of the install scheme. They are "
"not responsible for putting this directory in the ``PATH`` environment "
"variable which defines where command-line tools are found."
msgstr ""
"Instalilo starigu volvilojn por kaj ``console_scripts`` kaj ``gui_scripts`` "
"en la dosierujo ``scripts`` de la instala skemo. Instalilo ne respondecas "
"pri metado de tiu dosierujo en la media variablo ``PATH`` difinanta la "
"lokojn de komandliniaj iloj."

#: ../source/specifications/entry-points.rst:158
msgid ""
"As files are created from the names, and some filesystems are case-"
"insensitive, packages should avoid using names in these groups which differ "
"only in case. The behaviour of install tools when names differ only in case "
"is undefined."
msgstr ""
"Ĉar dosieroj kreiĝas de la nomoj, kaj kelkaj dosiersistemoj estas "
"usklecblidaj, pako ne uzu tiajn nomojn en tiuj grupoj, kiaj nur diferencas "
"usklece. La tiukaza konduto de instaliloj ne estas difinita."

#: ../source/specifications/entry-points.rst:166
msgid ""
"October 2017: This specification was written to formalize the existing entry "
"points feature of setuptools (discussion_)."
msgstr ""
"Oktobro 2017: Tiu specifo estis verkita por formaligi la ekzistantan "
"enirpunktan funkcion de setuptools (`diskuto <discussion>`_)."

#: ../source/specifications/externally-managed-environments.rst:6
msgid "Externally Managed Environments"
msgstr "Ekstere Mastrumataj Medioj"

#: ../source/specifications/externally-managed-environments.rst:8
msgid ""
"While some Python installations are entirely managed by the user that "
"installed Python, others may be provided and managed by another means (such "
"as the operating system package manager in a Linux distribution, or as a "
"bundled Python environment in an application with a dedicated installer)."
msgstr ""
"Dum kelkaj instalaĵoj de Python estas plene mastrumataj de tiu uzanto, kiu "
"instalis Python, aliaj instalaĵoj povas esti disponigitaj kaj mastrumataj "
"alimaniere (kiel ekzemple la mastrumsistema pakadministrilo en Linux-"
"distribuo, aŭ kiel faskigita Python-medio en programo kun propra instalilo)."

#: ../source/specifications/externally-managed-environments.rst:13
msgid ""
"Attempting to use conventional Python packaging tools to manipulate such "
"environments can be confusing at best and outright break the entire "
"underlying operating system at worst. Documentation and interoperability "
"guides only go so far in resolving such problems."
msgstr ""
"Provi uzi ordinaran Python-pakilon por administri tian medion estas konfuze "
"kaj povas eĉ malstabiligi la tutan mastruman sistemon. Dokumentaro kaj "
"gvidiloj pri kunfunkcipovo nur helpas iomete pri tiaj problemoj."

#: ../source/specifications/externally-managed-environments.rst:18
msgid ""
"This specification defines an ``EXTERNALLY-MANAGED`` marker file that allows "
"a Python installation to indicate to Python-specific tools such as ``pip`` "
"that they neither install nor remove packages into the interpreter’s default "
"installation environment, and should instead guide the end user towards "
"using :ref:`virtual-environments`."
msgstr ""
"Ĉi tiu normo difinas markodosieron ``EXTERNALLY-MANAGED``, per kiu Python-"
"instalo indikas al Python-specifa ilo kiel ``pip``, malhelpante instaladon "
"al aŭ malinstaladon de la implicita instala medio de la interpretilo, kaj "
"sugestante al la uzanton :ref:`virtualan medion <virtual-environments>`."

#: ../source/specifications/externally-managed-environments.rst:24
msgid ""
"It also standardizes an interpretation of the ``sysconfig`` schemes so that, "
"if a Python-specific package manager is about to install a package in an "
"interpreter-wide context, it can do so in a manner that will avoid "
"conflicting with the external package manager and reduces the risk of "
"breaking software shipped by the external package manager."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:32
msgid "Terminology"
msgstr "Terminaro"

#: ../source/specifications/externally-managed-environments.rst:34
msgid ""
"A few terms used in this specification have multiple meanings in the "
"contexts that it spans. For clarity, this specification uses the following "
"terms in specific ways:"
msgstr ""
"Kelkaj terminoj uzitaj en tiu specifo havas plurajn signifojn tra "
"kuntekstoj. Por klareco, ĉi tiu specifo uzas la jenajn terminojn jene:"

#: ../source/specifications/externally-managed-environments.rst:61
msgid "distro"
msgstr "distribuo"

#: ../source/specifications/externally-managed-environments.rst:39
msgid ""
"Short for \"distribution,\" a collection of various sorts of software, "
"ideally designed to work properly together, including (in contexts relevant "
"to this document) the Python interpreter itself, software written in Python, "
"and software written in other languages. That is, this is the sense used in "
"phrases such as \"Linux distro\" or \"Berkeley Software Distribution.\""
msgstr ""
"Kolekto de diversaj specoj de programoj, ideale fasonitaj kohere, inkluzive "
"de (en kuntekstoj rilataj al ĉ tiu dokumento) la Python-interpretilo mem, "
"programoj verkitaj en Python, kaj programoj verkitaj en aliaj lingvoj. Tio "
"estas la senco en la terminoj «Linux-distribuo» aŭ «Berkeley-"
"Programdistribuo» (BSD)."

#: ../source/specifications/externally-managed-environments.rst:46
msgid ""
"A distro can be an operating system (OS) of its own, such as Debian, Fedora, "
"or FreeBSD. It can also be an overlay distribution that installs on top of "
"an existing OS, such as Homebrew or MacPorts."
msgstr ""
"Distribuo povas esti memstara mastruma sistemo (OS), kiel Debian, Fedora aŭ "
"FreeBSD. Ĝi ankaŭ povas esti plustavola distribuo instalita sur mastruman "
"sistemon, kiel Homebrew aŭ MacPorts."

#: ../source/specifications/externally-managed-environments.rst:51
msgid ""
"This document uses the short term \"distro,\" because the term "
"\"distribution\" has another meaning in Python packaging contexts: a source "
"or binary distribution package of a single piece of Python language "
"software, that is, in the sense of ``setuptools.dist.Distribution`` or "
"\"sdist\". To avoid confusion, this document does not use the plain term "
"\"distribution\" at all. In the Python packaging sense, it uses the full "
"phrase \"distribution package\" or just \"package\" (see below)."
msgstr ""
"La termino «distribuo» havas alian signifon en Python-pakada kunteksto: "
"fontan aŭ duuman distribuan pako de iu Python-lingva programo, en la senco "
"de ``setuptools.dist.Distribution`` aŭ «fonta distribuo». Por eviti "
"konfuzon, por la Python-pakada senco, ĉi tiu dokumento uzas la plenan "
"terminon «distribua pako» aŭ simple «pako» (vidu ĉi-sube)."

#: ../source/specifications/externally-managed-environments.rst:60
msgid ""
"The provider of a distro - the team or company that collects and publishes "
"the software and makes any needed modifications - is its **distributor**."
msgstr ""
"La provizanto de distribuo – la teamo aŭ firmao kolektanta, eldonanta, kaj "
"laŭbezone modifanta la programaron – estas ĝia **distribuanto**."

#: ../source/specifications/externally-managed-environments.rst:79
msgid "package"
msgstr "pako"

#: ../source/specifications/externally-managed-environments.rst:64
msgid ""
"A unit of software that can be installed and used within Python. That is, "
"this refers to what Python-specific packaging tools tend to call a :term:"
"`distribution package` or simply a \"distribution\"; the colloquial "
"abbreviation \"package\" is used in the sense of the Python Package Index."
msgstr ""
"Unuo de programo instalebla kaj uzebla en Python. Python-specifa pakilo ofte "
"nomas ĝin :term:`distribua pako <distribution package>` aŭ simple "
"«distribuo»; la familiara mallongigo «pako» estas uzata laŭ la nomo Python-"
"Pakindekso."

#: ../source/specifications/externally-managed-environments.rst:70
msgid ""
"This document does not use \"package\" in the sense of an importable name "
"that contains Python modules, though in many cases, a distribution package "
"consists of a single importable package of the same name."
msgstr ""
"Ĉi tiu dokumento ne uzas la terminon «pako» en la senco de importebla nomo "
"enhavanta Python-modulojn, kvankam ofte distribua pako ja konsistas el unu "
"samnoma importebla pako."

#: ../source/specifications/externally-managed-environments.rst:75
msgid ""
"This document generally does not use the term \"package\" to refer to units "
"of installation by a distro's package manager (such as ``.deb`` or ``.rpm`` "
"files). When needed, it uses phrasing such as \"a distro's package."
"\" (Again, in many cases, a Python package is shipped inside a distro's "
"package named something like ``python-`` plus the Python package name.)"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:102
msgid "Python-specific package manager"
msgstr "Python-specifa pakadministrilo"

#: ../source/specifications/externally-managed-environments.rst:82
msgid ""
"A tool for installing, upgrading, and/or removing Python packages in a "
"manner that conforms to Python packaging standards. The most popular Python-"
"specific package manager is pip_; other examples include the old `Easy "
"Install command <easy-install_>`_ as well as direct usage of a ``setup.py`` "
"command."
msgstr ""
"Ilo por instali, ĝisdatigi kaj/aŭ malinstali Python-pakojn konforme al "
"normoj pri pakado de Python. La plej populara Python-specifa pakadministrilo "
"estas pip_; jen aliaj ekzemploj: `la malnova komando Easy Install <easy-"
"install_>`_ kaj rekta uzo de la komando ``setup.py``."

#: ../source/specifications/externally-managed-environments.rst:92
msgid ""
"(Note that the ``easy_install`` command was removed in setuptools version "
"52, released 23 January 2021.)"
msgstr ""
"(Notu, ke la komando ``easy_install`` estis forigita en versio 52 de "
"setuptools, eldonita je la 23a de Januaro 2021.)"

#: ../source/specifications/externally-managed-environments.rst:96
msgid ""
"(Conda_ is a bit of a special case, as the ``conda`` command can install "
"much more than just Python packages, making it more like a distro package "
"manager in some senses. Since the ``conda`` command generally only operates "
"on Conda-created environments, most of the concerns in this document do not "
"apply to ``conda`` when acting as a Python-specific package manager.)"
msgstr ""
"(Conda_ estas speciala kazo, ĉar la komando ``conda`` povas instali multe "
"pli ol nur Python-pakojn, iel simile al distribuaj pakadministriloj. Ĉar la "
"komando ``conda`` nur funkcias en Conda-kreita medio, la plejparto de la "
"koncernoj en ĉi tiu dokumento ne validas por ``conda`` funkcianta kiel "
"Python-specifa pakadministrilo.)"

#: ../source/specifications/externally-managed-environments.rst:118
msgid "distro package manager"
msgstr "distribupakadministrilo"

#: ../source/specifications/externally-managed-environments.rst:105
msgid ""
"A tool for installing, upgrading, and/or removing a distro's packages in an "
"installed instance of that distro, which is capable of installing Python "
"packages as well as non-Python packages, and therefore generally has its own "
"database of installed software unrelated to the :ref:`database of installed "
"distributions <recording-installed-packages>`. Examples include ``apt``, "
"``dpkg``, ``dnf``, ``rpm``, ``pacman``, and ``brew``. The salient feature is "
"that if a package was installed by a distro package manager, removing or "
"upgrading it in a way that would satisfy a Python-specific package manager "
"will generally leave a distro package manager in an inconsistent state."
msgstr ""
"Ilo por instali, ĝisdatigi, kaj/aŭ malinstali pakojn de distribuo en "
"instalita distribuo, kapabla instali Python-pakojn kaj ne-Python-ajn pakojn, "
"kun sia propra datenbanko de instalitaj programoj ne rilata al la :ref:"
"`datenbanko de instalitaj distribuoj <recording-installed-packages>`. Jen "
"kelkaj ekzemploj: ``apt``, ``dpkg``, ``dnf``, ``rpm``, ``pacman`` kaj "
"``brew``. Grave, se iu pako estis instalita de la pakadministrilo de la "
"distribuo, do malinstalado aŭ ĝisdatigado de tiu pako tiel, kiel Python-"
"specifa pakadministrilo funkcius, kaŭzus malkoherecon je la pakadministrilo "
"de la distribuo."

#: ../source/specifications/externally-managed-environments.rst:117
msgid ""
"This document also uses phrases like \"external package manager\" or "
"\"system's package manager\" to refer to a distro package manager in certain "
"contexts."
msgstr ""
"Ĉi tiu dokumento ankaŭ uzas terminojn kiel «eksteran pakadministrilon» aŭ "
"«sistema pakadministrilon» signifante la pakadministrilon de la distribuo en "
"kelkaj kuntekstoj."

#: ../source/specifications/externally-managed-environments.rst:127
msgid "shadow"
msgstr "ombri"

#: ../source/specifications/externally-managed-environments.rst:121
msgid ""
"To shadow an installed Python package is to cause some other package to be "
"preferred for imports without removing any files from the shadowed package. "
"This requires multiple entries on ``sys.path``: if package A 2.0 installs "
"module ``a.py`` in one ``sys.path`` entry, and package A 1.0 installs module "
"``a.py`` in a later ``sys.path`` entry, then ``import a`` returns the module "
"from the former, and we say that A 2.0 shadows A 1.0."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:132
msgid "This specification is twofold."
msgstr "Jen duobla specifo."

#: ../source/specifications/externally-managed-environments.rst:134
msgid ""
"First, it describes **a way for distributors of a Python interpreter to mark "
"that interpreter as having its packages managed by means external to "
"Python**, such that Python-specific tools like pip should not change the "
"installed packages in the interpreter's global ``sys.path`` in any way (add, "
"upgrade/downgrade, or remove) unless specifically overridden. It also "
"provides a means for the distributor to indicate how to use a virtual "
"environment as an alternative."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:142
msgid ""
"This is an opt-in mechanism: by default, the Python interpreter compiled "
"from upstream sources will not be so marked, and so running ``pip install`` "
"with a self-compiled interpreter, or with a distro that has not explicitly "
"marked its interpreter, will work as it always has worked."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:148
msgid ""
"Second, it sets the rule that when installing packages to an interpreter's "
"global context (either to an unmarked interpreter, or if overriding the "
"marking), **Python-specific package managers should modify or delete files "
"only within the directories of the sysconfig scheme in which they would "
"create files**. This permits a distributor of a Python interpreter to set up "
"two directories, one for its own managed packages, and one for unmanaged "
"packages installed by the end user, and ensure that installing unmanaged "
"packages will not delete (or overwrite) files owned by the external package "
"manager."
msgstr ""
"Due, ĝi reguligas, ke dum instalado de pako al la malloka kunteksto de "
"interpretilo (aŭ al nemarkita interpretilo, aŭ se oni superregas la "
"markadon), **Python -specifa pakadministrilo modifu aŭ forviŝu dosierojn nur "
"en la dosierujoj de la sysconfig-skemo, en kiu ĝi kreus la dosierojn**. Tio "
"permesas al distribuanto de Python-interpretilo starigi du dosierujojn – unu "
"por siaj propre mastrumataj pakoj, la alia por nemastrumataj pakoj "
"instalitaj de la uzanto –, certigante, ke instalado de nemastrumata pako ne "
"forviŝos (nek superskribos) dosierojn mastrumatajn de la ekstera "
"pakadministrilo."

#: ../source/specifications/externally-managed-environments.rst:160
msgid "Marking an interpreter as using an external package manager"
msgstr "Marki interpretilon kiel uzantan eksteran pakadministrilon"

#: ../source/specifications/externally-managed-environments.rst:162
msgid ""
"Before a Python-specific package installer (that is, a tool such as pip - "
"not an external tool such as apt) installs a package into a certain Python "
"context, it should make the following checks by default:"
msgstr ""
"Antaŭ ol Python-specifa instalilo (kiel pip – ne ekstera ilo kiel apt) "
"instalas pakon en Python-kuntekston, ĝi implicite kontrolu la jenon:"

#: ../source/specifications/externally-managed-environments.rst:167
msgid ""
"Is it running outside of a virtual environment? It can determine this by "
"whether ``sys.prefix == sys.base_prefix``."
msgstr ""
"Ĉu ĝi ruliĝas ekster virtuala medio? Ĝi povas determini tion per ``sys."
"prefix == sys.base_prefix``."

#: ../source/specifications/externally-managed-environments.rst:170
msgid ""
"Is there an ``EXTERNALLY-MANAGED`` file in the directory identified by "
"``sysconfig.get_path(\"stdlib\", sysconfig.get_default_scheme())``?"
msgstr ""
"Ĉu ekzistas dosiero ``EXTERNALLY-MANAGED`` en la dosierujo identigita de "
"``sysconfig.get_path(\"stdlib\", sysconfig.get_default_scheme())``?"

#: ../source/specifications/externally-managed-environments.rst:173
msgid ""
"If both of these conditions are true, the installer should exit with an "
"error message indicating that package installation into this Python "
"interpreter's directory are disabled outside of a virtual environment."
msgstr ""
"Se ambaŭ kondiĉoj veras, la instalilo ĉesu, sciigante pri la eraro, ke "
"instalado de pako en la dosierujon de ĉi tiu Python-interpretilo ne eblas "
"ekster virtuala medio."

#: ../source/specifications/externally-managed-environments.rst:177
msgid ""
"The installer should have a way for the user to override these rules, such "
"as a command-line flag ``--break-system-packages``. This option should not "
"be enabled by default and should carry some connotation that its use is "
"risky."
msgstr ""
"La instalilo provizu meĥanismon por superregi tiajn regulojn, ekzemple per "
"flago ``--break-system-packages``. Tia opcio ne estu apriora kaj indiku, ke "
"ĝia uzo estas danĝera."

#: ../source/specifications/externally-managed-environments.rst:182
msgid ""
"The ``EXTERNALLY-MANAGED`` file is an INI-style metadata file intended to be "
"parsable by the standard library configparser_ module. If the file can be "
"parsed by ``configparser.ConfigParser(interpolation=None)`` using the UTF-8 "
"encoding, and it contains a section ``[externally-managed]``, then the "
"installer should look for an error message specified in the file and output "
"it as part of its error. If the first element of the tuple returned by "
"``locale.getlocale(locale.LC_MESSAGES)``, i.e., the language code, is not "
"``None``, it should look for the error message as the value of a key named "
"``Error-`` followed by the language code. If that key does not exist, and if "
"the language code contains underscore or hyphen, it should look for a key "
"named ``Error-`` followed by the portion of the language code before the "
"underscore or hyphen. If it cannot find either of those, or if the language "
"code is ``None``, it should look for a key simply named ``Error``."
msgstr ""
"La dosiero ``EXTERNALLY-MANAGED`` estas INI-stila metadatena dosiero, kiu "
"estu analizebla de la norma biblioteka modulo configparser_. Se la dosiero "
"estas analizebla per ``configparser.ConfigParser(interpolation=None)`` "
"uzante UTF-8, kaj ĝi enhavas sekcion ``[externally-managed]``, do la "
"instalilo serĉu erarmesaĝon specifitan en la dosiero kaj eligu ĝin kiel "
"parton de la eraro. Se la unua elemento de la opo ``locale.getlocale(locale."
"LC_MESSAGES)``, t.e. la lingvokodo, ne estas ``None``, ĝi serĉu la "
"erarmesaĝon kiel la valoron de ŝlosilo nomita `Error-`` sekvita de la "
"lingvokodo. Se tiu ŝlosilo ne ekzistas, kaj se la lingvokodo enhavas "
"substrekon aŭ streketon, ĝi serĉu ŝlosilon nomitan ``Error-`` sekvita de la "
"parto de la lingvokodo antaŭ la substreko aŭ streketo. Se ĝi ne povas trovi "
"ambaŭ, aŭ se la lingvokodo estas ``None``, ĝi serĉu ŝlosilon simple nomitan "
"``Error``."

#: ../source/specifications/externally-managed-environments.rst:200
msgid ""
"If the installer cannot find an error message in the file (either because "
"the file cannot be parsed or because no suitable error key exists), then the "
"installer should just use a pre-defined error message of its own, which "
"should suggest that the user create a virtual environment to install "
"packages."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:206
msgid ""
"Software distributors who have a non-Python-specific package manager that "
"manages libraries in the ``sys.path`` of their Python package should, in "
"general, ship an ``EXTERNALLY-MANAGED`` file in their standard library "
"directory. For instance, Debian may ship a file in ``/usr/lib/python3.9/"
"EXTERNALLY-MANAGED`` consisting of something like"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:230
msgid ""
"which provides useful and distro-relevant information to a user trying to "
"install a package. Optionally, translations can be provided in the same file:"
msgstr ""
"kio provizas utilajn kaj distribuo-rilatajn informojn al uzanto provanta "
"instali pakon. Oni ankaŭ povas provizi tradukaĵojn en la sama dosiero:"

#: ../source/specifications/externally-managed-environments.rst:240
msgid ""
"In certain contexts, such as single-application container images that aren't "
"updated after creation, a distributor may choose not to ship an ``EXTERNALLY-"
"MANAGED`` file, so that users can install whatever they like (as they can "
"today) without having to manually override this rule."
msgstr ""
"En kelkaj kazoj, kiel ekzemple unuprograma ujo-diskokopio ne ĝisdatigota "
"post kreo, distribuanto povas elekti ne inkluzivi dosieron ``EXTERNALY-"
"MANAGED``, por ke uzanto povas instali tion ajn, kion oni ŝatas (same kiel "
"la hodiaŭa sperto) sen malaŭtomate malaktivigi tiun regulon."

#: ../source/specifications/externally-managed-environments.rst:247
msgid "Writing to only the target ``sysconfig`` scheme"
msgstr "Skribi al nur la cela skemo ``sysconfig``"

#: ../source/specifications/externally-managed-environments.rst:249
msgid ""
"Usually, a Python package installer installs to directories in a scheme "
"returned by the ``sysconfig`` standard library package. Ordinarily, this is "
"the scheme returned by ``sysconfig.get_default_scheme()``, but based on "
"configuration (e.g. ``pip install --user``), it may use a different scheme."
msgstr ""
"Ordinare Python-pakinstalo instalas al dosierujo en skemo liverita de la "
"norma biblioteka pako ``sysconfig``. Ofte tio estas la skemo ``sysconfig."
"get_default_scheme()``, sed oni povas alimaniere agordi tion (ekz. per ``pip "
"install --user``)."

#: ../source/specifications/externally-managed-environments.rst:255
msgid ""
"Whenever the installer is installing to a ``sysconfig`` scheme, this "
"specification declares that the installer should never modify or delete "
"files outside of that scheme. For instance, if it's upgrading a package, and "
"the package is already installed in a directory outside that scheme (perhaps "
"in a directory from another scheme), it should leave the existing files "
"alone."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:262
msgid ""
"If the installer does end up shadowing an existing installation during an "
"upgrade, we recommend that it produces a warning at the end of its run."
msgstr ""
"Se la instalilo ombras ekzistantan instalon dum ĝisdatigado, ni rekomendas, "
"ke ĝi montru averton post la rulo."

#: ../source/specifications/externally-managed-environments.rst:266
msgid ""
"If the installer is installing to a location outside of a ``sysconfig`` "
"scheme (e.g., ``pip install --target``), then this subsection does not apply."
msgstr ""
"Se la instalilo instalas al loko ekster ``sysconfig``-skemo (ekz. ``pip "
"install --target``), do ĉi tiu subsekcio ne estas efektiva."

#: ../source/specifications/externally-managed-environments.rst:271
msgid "Recommendations for distros"
msgstr "Rekomendoj pri distribuoj"

#: ../source/specifications/externally-managed-environments.rst:273
msgid ""
"This section is non-normative. It provides best practices we believe distros "
"should follow unless they have a specific reason otherwise."
msgstr ""
"Jen nedeviga paragrafo priskribanta la bonan praktikon, kiu niaopinie "
"distribuoj observu, se specifa kialo mankas."

#: ../source/specifications/externally-managed-environments.rst:277
msgid "Mark the installation as externally managed"
msgstr "Marku la instalaĵon kiel ekstere mastrumatan"

#: ../source/specifications/externally-managed-environments.rst:279
msgid ""
"Distros should create an ``EXTERNALLY-MANAGED`` file in their ``stdlib`` "
"directory."
msgstr ""
"Distribuo kreu dosieron ``EXTERNALLY-MANAGED`` en sia dosierujo ``stdlib``."

#: ../source/specifications/externally-managed-environments.rst:283
msgid "Guide users towards virtual environments"
msgstr "Gvidu uzantojn al virtualaj medioj"

#: ../source/specifications/externally-managed-environments.rst:285
msgid ""
"The file should contain a useful and distro-relevant error message "
"indicating both how to install system-wide packages via the distro's package "
"manager and how to set up a virtual environment. If your distro is often "
"used by users in a state where the ``python3`` command is available (and "
"especially where ``pip`` or ``get-pip`` is available) but ``python3 -m "
"venv`` does not work, the message should indicate clearly how to make "
"``python3 -m venv`` work properly."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:293
msgid ""
"Consider packaging pipx_, a tool for installing Python-language "
"applications, and suggesting it in the error. pipx automatically creates a "
"virtual environment for that application alone, which is a much better "
"default for end users who want to install some Python-language software "
"(which isn't available in the distro) but are not themselves Python users. "
"Packaging pipx in the distro avoids the irony of instructing users to ``pip "
"install --user --break-system-packages pipx`` to *avoid* breaking system "
"packages. Consider arranging things so your distro's package / environment "
"for Python for end users (e.g., ``python3`` on Fedora or ``python3-full`` on "
"Debian) depends on pipx."
msgstr ""
"Konsideru disponigi pipx_, ilon por instali Python-programojn, kaj sugesti "
"ĝin en la eraro. pipx aŭtomate kreas virtualan medion por unu solan "
"programon, kio estas multe pli bona port tiuj uzantoj, kiuj deziras instali "
"iun Python-programon (kiun la distribuo ne disponigas) sed ne estas Python-"
"uzantoj mem. Pakado de pipx en la distribuo evitas la ironion instrui "
"uzantojn ruli ``pip install --user --break-system-packages pipx`` por "
"*eviti* rompi sistemajn pakojn. Konsideru dependigi de pipx la Python-pakon/"
"medion de via distribuo por ordinaraj uzantoj (ekz. ``python3`` ĉe Fedora aŭ "
"``python3-full`` ĉe Debian)."

#: ../source/specifications/externally-managed-environments.rst:308
msgid "Keep the marker file in container images"
msgstr "Retenu la markan dosieron en uja bildo"

#: ../source/specifications/externally-managed-environments.rst:310
msgid ""
"Distros that produce official images for single-application containers (e."
"g., Docker container images) should keep the ``EXTERNALLY-MANAGED`` file, "
"preferably in a way that makes it not go away if a user of that image "
"installs package updates inside their image (think ``RUN apt-get dist-"
"upgrade``)."
msgstr ""
"Distribuo, kiu provizas oficialan bildon por unuprograma ujo (ekz., Docker-"
"bildo) retenu la dosieron ``EXTERNALLY-MANAGED``, prefere tiel, ke ĝisdatigo "
"de la bildo (kiel ``RUN apt-get dist-upgrade``) ne forigos la dosieron."

#: ../source/specifications/externally-managed-environments.rst:317
msgid "Create separate distro and local directories"
msgstr "Kreu apartajn distribuan kaj lokan dosierujojn"

#: ../source/specifications/externally-managed-environments.rst:319
msgid ""
"Distros should place two separate paths on the system interpreter's ``sys."
"path``, one for distro-installed packages and one for packages installed by "
"the local system administrator, and configure ``sysconfig."
"get_default_scheme()`` to point at the latter path. This ensures that tools "
"like pip will not modify distro-installed packages. The path for the local "
"system administrator should come before the distro path on ``sys.path`` so "
"that local installs take preference over distro packages."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:328
msgid ""
"For example, Fedora and Debian (and their derivatives) both implement this "
"split by using ``/usr/local`` for locally-installed packages and ``/usr`` "
"for distro-installed packages. Fedora uses ``/usr/local/lib/python3.x/site-"
"packages`` vs. ``/usr/lib/python3.x/site-packages``. (Debian uses ``/usr/"
"local/lib/python3/dist-packages`` vs. ``/usr/lib/python3/dist-packages`` as "
"an additional layer of separation from a locally-compiled Python "
"interpreter: if you build and install upstream CPython in ``/usr/local/"
"bin``, it will look at ``/usr/local/lib/python3/site-packages``, and Debian "
"wishes to make sure that packages installed via the locally-built "
"interpreter don't show up on ``sys.path`` for the distro interpreter.)"
msgstr ""
"Ekzemple, Fedora kaj Debian (kaj iliaj idoj) realigas tiun disigon uzante ``/"
"usr/local`` por loke instalitaj pakoj kaj ``/usr`` por distribuo-instalitaj "
"pakoj. Fedora uzas ``/usr/local/lib/python3.x/site-packages`` kontraste al "
"``/usr/lib/python3.x/site-packages``. (Debian uzas ``/usr/local/lib/python3/"
"dist-packages`` kontraste al ``/usr/lib/python3/dist-packages`` kiel ekstra "
"apartiga tavolo el loke tradukita Python-interpretilo: se oni konstruus kaj "
"instalus CPython en ``/usr/local/bin``, ĝi serĉus ``/usr/local/lib/python3/"
"site-packages``, kaj Debian volas certigi, ke pakoj instalitaj per la loke "
"konstruita interpretilo ne ĉeestos en ``sys.path`` por la interpretilo de la "
"distribuo.)"

#: ../source/specifications/externally-managed-environments.rst:341
msgid ""
"Note that the ``/usr/local`` vs. ``/usr`` split is analogous to how the "
"``PATH`` environment variable typically includes ``/usr/local/bin:/usr/bin`` "
"and non-distro software installs to ``/usr/local`` by default. This split is "
"`recommended by the Filesystem Hierarchy Standard`__."
msgstr ""
"Notu, ke la distingo inter ``/usr/local`` kaj ``/usr`` similas al la "
"maniero, kiel la media variablo ``PATH`` tipe inkluzivas ``/usr/local/bin:/"
"usr/bin``, kaj ekster-distribua programo tipe apriore instaliĝas al ``/usr/"
"local``. Tiun distingon `rekomendas la Dosiersistema Hierarĥia Normo "
"<recommended by the Filesystem Hierarchy Standard>`__."

#: ../source/specifications/externally-managed-environments.rst:349
msgid ""
"There are two ways you could do this. One is, if you are building and "
"packaging Python libraries directly (e.g., your packaging helpers unpack a "
"wheel or call ``setup.py install``), arrange for those tools to use a "
"directory that is not in a ``sysconfig`` scheme but is still on ``sys.path``."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:355
msgid ""
"The other is to arrange for the default ``sysconfig`` scheme to change when "
"running inside a package build versus when running on an installed system. "
"The ``sysconfig`` customization hooks from bpo-43976_ should make this easy "
"(once accepted and implemented): make your packaging tool set an environment "
"variable or some other detectable configuration, and define a "
"``get_preferred_schemes`` function to return a different scheme when called "
"from inside a package build. Then you can use ``pip install`` as part of "
"your distro packaging."
msgstr ""
"La alia estas aranĝi ŝanĝadon de la implicita skemo ``sysconfig`` dum "
"konstruado de pako, kompare al rulado en instalita sistemo. La adapta "
"meĥanismo de ``sysconfig`` el bpo-43976_ faciligos tion (kiam ĝi estas "
"akceptita kaj realigita): via pakilo agordu median variablon aŭ alian "
"detekteblaĵon, kaj difiun funkcion ``get_preferred_schemes`` liverantan "
"alian skemon dum konstruado de pako. Poste oni povas simple uzi ``pip "
"install`` kiel parto de la pakado de via distribuo."

#: ../source/specifications/externally-managed-environments.rst:367
msgid ""
"We propose adding a ``--scheme=...`` option to instruct pip to run against a "
"specific scheme. (See `Implementation Notes`_ below for how pip currently "
"determines schemes.) Once that's available, for local testing and possibly "
"for actual packaging, you would be able to run something like ``pip install "
"--scheme=posix_distro`` to explicitly install a package into your distro's "
"location (bypassing ``get_preferred_schemes``). One could also, if "
"absolutely needed, use ``pip uninstall --scheme=posix_distro`` to use pip to "
"remove packages from the system-managed directory."
msgstr ""
"Ni proponas aldoni flagon ``--scheme=…`` por ruli pip kontraŭ iu specifa "
"skemo. (Vidu `Notojn pri Realigo <Implementation Notes>`_ ĉi-subajn por "
"priskribo pri kiel pip aktuale determinas skemon.) Post la disponigo de tiu "
"flago, por loka testado kaj eble for reala pakado, oni povos ruli ion "
"similan al ``pip install --scheme=posix_distro`` por ekspliciti instali "
"pakon al la loko de la distribuo (ignorante ``get_preferred_schemes``). Oni "
"povos ankaŭ, se tio absolute necesas, uzi ``pip uninstall --"
"scheme=posix_distro`` por uzante pip malistali pakon el la sisteme "
"mastrumata dosierujo."

#: ../source/specifications/externally-managed-environments.rst:377
msgid ""
"To install packages with pip, you would also need to either suppress the "
"``EXTERNALLY-MANAGED`` marker file to allow pip to run or to override it on "
"the command line. You may want to use the same means for suppressing the "
"marker file in build chroots as you do in container images."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:383
msgid ""
"The advantage of setting these up to be automatic (suppressing the marker "
"file in your build environment and having ``get_preferred_schemes`` "
"automatically return your distro's scheme) is that an unadorned ``pip "
"install`` will work inside a package build, which generally means that an "
"unmodified upstream build script that happens to internally call ``pip "
"install`` will do the right thing. You can, of course, just ensure that your "
"packaging process always calls ``pip install --scheme=posix_distro --break-"
"system-packages``, which would work too."
msgstr ""
"La avantaĝo de aŭtomatigo de tio (ignorante la markodosieron en la konstrua "
"medio kaj igante``get_preferred_schemes`` aŭtomate liveri la skemon de via "
"distribuo) estas, ke ordinara ``pip install`` funkcios dum konstruado de "
"pako, tiel ke nemodifita konstruprogrameto far la originalaj aŭtoroj, kiu "
"interne alvokas ``pip install``, ĝenerale taŭgos. Kompreneble, vi povus "
"alternative simple certigi, ke via pakada procezo ĉiam alvoku ``pip install "
"--scheme=posix_distro --break-system-packages``, kio ankaŭ sufiĉus."

#: ../source/specifications/externally-managed-environments.rst:393
msgid ""
"The best approach here depends a lot on your distro's conventions and "
"mechanisms for packaging."
msgstr ""
"La plej bona maniero dependas multe de la konvencioj kaj meĥanismoj de via "
"distribuo pri pakado."

#: ../source/specifications/externally-managed-environments.rst:396
msgid ""
"Similarly, the ``sysconfig`` paths that are not for importable Python code - "
"that is, ``include``, ``platinclude``, ``scripts``, and ``data`` - should "
"also have two variants, one for use by distro-packaged software and one for "
"use for locally-installed software, and the distro should be set up such "
"that both are usable. For instance, a typical FHS-compliant distro will use "
"``/usr/local/include`` for the default scheme's ``include`` and ``/usr/"
"include`` for distro-packaged headers and place both on the compiler's "
"search path, and it will use ``/usr/local/bin`` for the default scheme's "
"``scripts`` and ``/usr/bin`` for distro-packaged entry points and place both "
"on ``$PATH``."
msgstr ""
"Simile, la ``sysconfig``-dosierlokoj ne por importebla Python-kodo – t.e. "
"``include``, ``platinclude``, ``scripts`` kaj ``data`` – ankaŭ havu du "
"variantojn, unu por programoj pakitaj de la distribuo, la alia por loke "
"instalitaj programoj. La distribuo estu agordita tiel, ke ambaŭ estas "
"uzeblaj. Ekzemple, ordinara distribuo observanta la Dosiersistemo-Hierarĥian "
"Normon (FHS) uzas ``/usr/local/include`` por la ``include`` de la implicita "
"skemo kaj ``/usr/include`` por ĉapoj pakitaj de la distribuo, kaj ambaŭ "
"troviĝas en la serĉlisto de la tradukilo. Ĝi uzas ``/usr/local/bin`` por la "
"``scripts`` de la implicita skemo kaj ``/usr/bin`` por enirpunktoj pakitaj "
"de la distribuo, kaj ambaŭ troviĝas en ``$PATH``."

#: ../source/specifications/externally-managed-environments.rst:410
msgid "Implementation Notes"
msgstr "Notoj pri Realigo"

#: ../source/specifications/externally-managed-environments.rst:412
msgid ""
"This section is non-normative and contains notes relevant to both the "
"specification and potential implementations."
msgstr ""
"Jen nedeviga paragrafo enhavanta notojn pri la specifo kaj eblaj realigoj."

#: ../source/specifications/externally-managed-environments.rst:415
msgid ""
"Currently (as of May 2021), pip does not directly expose a way to choose a "
"target ``sysconfig`` scheme, but it has three ways of looking up schemes "
"when installing:"
msgstr ""
"Aktuale (je Majo 2021), pip ne rekte eblias elektadon de cela ``sysconfig``-"
"skemo, sed ĝi havas tri manierojn serĉi skemon dum instalado:"

#: ../source/specifications/externally-managed-environments.rst:422
msgid "``pip install``"
msgstr "``pip install``"

#: ../source/specifications/externally-managed-environments.rst:420
msgid ""
"Calls ``sysconfig.get_default_scheme()``, which is usually (in upstream "
"CPython and most current distros) the same as "
"``get_preferred_scheme('prefix')``."
msgstr ""
"Alvokas ``sysconfig.get_default_scheme()``, kiu estas normale (en la apriora "
"CPython kaj en la plejparto de distribuoj) sama kiel "
"``get_preferred_scheme('prefix')``."

#: ../source/specifications/externally-managed-environments.rst:425
msgid "``pip install --prefix=/some/path``"
msgstr "``pip install --prefix=/iu/loko``"

#: ../source/specifications/externally-managed-environments.rst:425
msgid "Calls ``sysconfig.get_preferred_scheme('prefix')``."
msgstr "Alvokas ``sysconfig.get_preferred_scheme('prefix')``."

#: ../source/specifications/externally-managed-environments.rst:428
msgid "``pip install --user``"
msgstr "``pip install --user``"

#: ../source/specifications/externally-managed-environments.rst:428
msgid "Calls ``sysconfig.get_preferred_scheme('user')``."
msgstr "Alvokas ``sysconfig.get_preferred_scheme('user')``."

#: ../source/specifications/externally-managed-environments.rst:430
msgid ""
"Finally, ``pip install --target=/some/path`` writes directly to ``/some/"
"path`` without looking up any schemes."
msgstr ""
"Fine, ``pip install --target=/iu/loko`` skribas rekte al ``/iu/loko`` sen "
"serĉado de ajna skemo."

#: ../source/specifications/externally-managed-environments.rst:433
msgid ""
"Debian currently carries a `patch to change the default install location "
"inside a virtual environment`__, using a few heuristics (including checking "
"for the ``VIRTUAL_ENV`` environment variable), largely so that the directory "
"used in a virtual environment remains ``site-packages`` and not ``dist-"
"packages``. This does not particularly affect this proposal, because the "
"implementation of that patch does not actually change the default "
"``sysconfig`` scheme, and notably does not change the result of ``sysconfig."
"get_path(\"stdlib\")``."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:445
msgid ""
"Fedora currently carries a `patch to change the default install location "
"when not running inside rpmbuild`__, which they use to implement the two-"
"system-wide-directories approach. This is conceptually the sort of hook "
"envisioned by bpo-43976_, except implemented as a code patch to "
"``distutils`` instead of as a changed ``sysconfig`` scheme."
msgstr ""
"Fedora nuntempe havas `flikaĵon por ŝanĝi la aprioran instalan lokon dum "
"rulado ekster rpmbuild <patch to change the default install location when "
"not running inside rpmbuild>`__ , kio realigas du-tutsistem-dosierujan "
"meĥanismon. Tio estas koncepte tia hoko, kian celis bpo-43976_, krom ke ĝi "
"estas flikaĵo sur ``distutils``, ne ŝanĝita ``sysconfig``-skemo."

#: ../source/specifications/externally-managed-environments.rst:454
msgid ""
"The implementation of ``is_virtual_environment`` above, as well as the logic "
"to load the ``EXTERNALLY-MANAGED`` file and find the error message from it, "
"may as well get added to the standard library (``sys`` and ``sysconfig``, "
"respectively), to centralize their implementations, but they don't need to "
"be added yet."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:464
msgid "Copyright"
msgstr "Kopirajtoj"

#: ../source/specifications/externally-managed-environments.rst:466
msgid ""
"This document is placed in the public domain or under the CC0-1.0-Universal "
"license, whichever is more permissive."
msgstr ""
"Jen dokumento, kiu estas publika havaĵo aŭ sub la licenco CC0-1.0-Universal, "
"laŭ via prefero."

#: ../source/specifications/externally-managed-environments.rst:474
msgid "June 2022: This specification was approved through :pep:`668`."
msgstr "Junio 2022: Ĉi tiu specifo estis aprobita per :pep:`668`."

#: ../source/specifications/file-yanking.rst:5
msgid "File Yanking"
msgstr ""

#: ../source/specifications/file-yanking.rst:9
#, fuzzy
#| msgid "This specification was originally defined in :pep:`753`."
msgid "This specification was originally defined in :pep:`592`."
msgstr "Ĉi tiu specifo estis originale difinita en :pep:`753`."

#: ../source/specifications/file-yanking.rst:14
#, fuzzy
#| msgid ""
#| ":pep:`740` includes changes to the HTML and JSON index APIs. These "
#| "changes are documented in the :ref:`simple-repository-api` under :ref:"
#| "`simple-repository-api-base` and :ref:`json-serialization`."
msgid ""
":pep:`592` includes changes to the HTML and JSON index APIs. These changes "
"are documented in the :ref:`simple-repository-api` under :ref:`HTML - "
"Project Detail <simple-repository-html-project-detail>` and :ref:`JSON - "
"Project Detail <simple-repository-json-project-detail>`."
msgstr ""
":pep:`740` inkluzivas ŝanĝojn pri la indeksaj API-oj en HTML kaj JSON. Tiuj "
"ŝanĝoj estas priskribitaj en :ref:`simple-repository-api` sub :ref:`simple-"
"repository-api-base` kaj :ref:`json-serialization`."

#: ../source/specifications/file-yanking.rst:22
msgid ""
"Links in the simple repository **MAY** have a ``data-yanked`` attribute "
"which may have no value, or may have an arbitrary string as a value. The "
"presence of a ``data-yanked`` attribute **SHOULD** be interpreted as "
"indicating that the file pointed to by this particular link has been "
"\"Yanked\", and should not generally be selected by an installer, except "
"under specific scenarios."
msgstr ""
"Hiperligo en la simpla deponejo **POVAS** havi atributon ``data-yanked``, "
"kies valoro povas esti malplena aŭ esti ajna signoĉeno. La ĉeesto de "
"atributo ``data-yanked`` **ESTU** interpretata kiel indiko, ke la dosiero "
"montrata de la hiperligo estas fortirita kaj ĝenerale ne elektata de "
"instalilo krom specifaj kondiĉoj."

#: ../source/specifications/file-yanking.rst:29
msgid ""
"The value of the ``data-yanked`` attribute, if present, is an arbitrary "
"string that represents the reason for why the file has been yanked. Tools "
"that process the simple repository API **MAY** surface this string to end "
"users."
msgstr ""
"La valoro de la atributo ``data-yanked``, se ĝi ekzistas, estas arbitra "
"teksto pri la kialo de la fortiro. Ilo uzanta la simplan deponejan API "
"**POVAS** montri tiun tekston al uzanto."

#: ../source/specifications/file-yanking.rst:34
msgid ""
"The yanked attribute is not immutable once set, and may be rescinded in the "
"future (and once rescinded, may be reset as well). Thus API users **MUST** "
"be able to cope with a yanked file being \"unyanked\" (and even yanked "
"again)."
msgstr ""
"La atributo ``yanked`` ne estas senŝanĝebla kaj povas malestiĝi (aŭ "
"reestiĝi). Tial, uzanto de API **DEVAS** povi pritrakti malfortiritan (aŭ eĉ "
"refortiritan) dosieron."

#: ../source/specifications/file-yanking.rst:40
msgid "Installers"
msgstr "Instaliloj"

#: ../source/specifications/file-yanking.rst:42
msgid ""
"The desirable experience for users is that once a file is yanked, when a "
"human being is currently trying to directly install a yanked file, that it "
"fails as if that file had been deleted. However, when a human did that "
"awhile ago, and now a computer is just continuing to mechanically follow the "
"original order to install the now yanked file, then it acts as if it had not "
"been yanked."
msgstr ""
"La dezirinda sperto por uzanto estas, ke post fortiro de dosiero, kiam homo "
"rekte provas instali fortiritan dosieron, tio malsukcesas kvazaŭ la dosiero "
"estus forviŝita. Tamen, kiam homo faris tion antaŭtempe, kaj nun komputilo "
"meĥanike sekvas la originalan ordon instalante la nun fortiritan dosieron, "
"do tio funkcios kvazaŭ la dosiero ne estus fortirita."

#: ../source/specifications/file-yanking.rst:49
msgid ""
"An installer **MUST** ignore yanked releases, if the selection constraints "
"can be satisfied with a non-yanked version, and **MAY** refuse to use a "
"yanked release even if it means that the request cannot be satisfied at all. "
"An implementation **SHOULD** choose a policy that follows the spirit of the "
"intention above, and that prevents \"new\" dependencies on yanked releases/"
"files."
msgstr ""
"Instalilo **DEVAS** ignori fortiritan eldonon, se iu nefortirita eldono "
"plenumas la limigojn de elektado. Instalilo **POVAS** rifuzi uzi fortiritan "
"eldonon, eĉ se tio signifas, ke la limigoj ne estas plenumeblaj. Realigo "
"**ELEKTU** regulojn observantajn la ĉi-supran intencon malhelpantan «novan» "
"dependecon al foritira eldono aŭ dosiero."

#: ../source/specifications/file-yanking.rst:56
msgid ""
"What this means is left up to the specific installer, to decide how to best "
"fit into the overall usage of their installer. However, there are two "
"suggested approaches to take:"
msgstr ""
"La instalilo determinu sian precizan konduton laŭ sia fasonado. Tamen, jen "
"du sugestataj manieroj:"

#: ../source/specifications/file-yanking.rst:60
msgid ""
"Yanked files are always ignored, unless they are the only file that matches "
"a version specifier that \"pins\" to an exact version using either ``==`` "
"(without any modifiers that make it a range, such as ``.*``) or ``===``. "
"Matching this version specifier should otherwise be done as per :ref:`the "
"version specifiers specification <version-specifiers>` for things like local "
"versions, zero padding, etc."
msgstr ""

#: ../source/specifications/file-yanking.rst:67
msgid ""
"Yanked files are always ignored, unless they are the only file that matches "
"what a lock file (such as ``Pipfile.lock`` or ``poetry.lock``) specifies to "
"be installed. In this case, a yanked file **SHOULD** not be used when "
"creating or updating a lock file from some input file or command."
msgstr ""

#: ../source/specifications/file-yanking.rst:73
msgid ""
"Regardless of the specific strategy that an installer chooses for deciding "
"when to install yanked files, an installer **SHOULD** emit a warning when it "
"does decide to install a yanked file. That warning **MAY** utilize the value "
"of the ``data-yanked`` attribute (if it has a value) to provide more "
"specific feedback to the user about why that file had been yanked."
msgstr ""

#: ../source/specifications/file-yanking.rst:81
msgid "Mirrors"
msgstr "Speguloj"

#: ../source/specifications/file-yanking.rst:83
msgid "Mirrors can generally treat yanked files one of two ways:"
msgstr ""
"Spegulo povas ĝenerale pritrakti fortiritajn dosierojn laŭ unu el la jenaj "
"du manieroj:"

#: ../source/specifications/file-yanking.rst:85
msgid ""
"They may choose to omit them from their simple repository API completely, "
"providing a view over the repository that shows only \"active\", unyanked "
"files."
msgstr ""
"Ĝi povas simple plene ignori ilin en la simpla deponeja API, provizante "
"vidon de la deponejo nur de «aktivaj», nefortiritaj dosieroj."

#: ../source/specifications/file-yanking.rst:88
msgid ""
"They may choose to include yanked files, and additionally mirror the ``data-"
"yanked`` attribute as well."
msgstr ""
"Ĝi povas inkluzivi fortiritajn dosierojn kaj ankaŭ speguli la atributon "
"``data-yanked``."

#: ../source/specifications/file-yanking.rst:91
msgid ""
"Mirrors **MUST NOT** mirror a yanked file without also mirroring the ``data-"
"yanked`` attribute for it."
msgstr ""
"Speguloj **DEVAS NE** speguli fortiritan dosieron sen spegulado de la "
"atributo ``data-yanked`` pri ĝi."

#: ../source/specifications/glob-patterns.rst:3
msgid "``glob`` patterns"
msgstr "Patroneo ``glob``"

#: ../source/specifications/glob-patterns.rst:5
msgid ""
"Some PyPA specifications, e.g. :ref:`pyproject.toml's license-files "
"<pyproject-toml-license-files>`, accept certain types of *glob patterns* to "
"match a given string containing wildcards and character ranges against files "
"and directories. This specification defines which patterns are acceptable "
"and how they should be handled."
msgstr ""
"Kelkaj normoj de PyPA, ekz. :ref:`license-files en pyproject.toml <pyproject-"
"toml-license-files>`, akceptas *``glob``-patroneojn* – signoĉenojn "
"enhavantan ĵokerojn kaj signo-intervalojn, kiujn oni povas kompari kun "
"dosiernomoj kaj dosierlokoj. Ĉi tiu normo difinas la validecon de patroneoj "
"kaj kiel oni pritraktu ilin."

#: ../source/specifications/glob-patterns.rst:13
msgid "Valid glob patterns"
msgstr "Validaj patroneoj ``glob``"

#: ../source/specifications/glob-patterns.rst:15
msgid ""
"For PyPA purposes, a *valid glob pattern* MUST be a string matched against "
"filesystem entries as specified below:"
msgstr ""
"Por la celoj de PyPA, *valida ``glob``-patroneo* DEVAS esti signoĉeno, kiun "
"oni povas kompari kun eroj en dosiersistemo, laŭ la jena difino:"

#: ../source/specifications/glob-patterns.rst:18
msgid ""
"Alphanumeric characters, underscores (``_``), hyphens (``-``) and dots (``."
"``) MUST be matched verbatim."
msgstr ""
"Literoj, ciferoj, substrekoj (``_``), streketoj (``-``) kaj punktoj (``.``) "
"DEVAS prezenti sin laŭlitere."

#: ../source/specifications/glob-patterns.rst:21
msgid ""
"Special glob characters: ``*``, ``?``, ``**`` and character ranges: ``[]`` "
"containing only the verbatim matched characters MUST be supported. Within "
"``[...]``, the hyphen indicates a locale-agnostic range (e.g. ``a-z``, order "
"based on Unicode code points). Hyphens at the start or end are matched "
"literally."
msgstr ""

#: ../source/specifications/glob-patterns.rst:27
msgid "Path delimiters MUST be the forward slash character (``/``)."
msgstr "Dosierloko-apartigilo DEVAS esti la suprenstreko (``/``)."

#: ../source/specifications/glob-patterns.rst:29
msgid ""
"Patterns always refer to *relative paths*, e.g., when used in :file:"
"`pyproject.toml`, patterns should always be relative to the directory "
"containing that file. Therefore the leading slash character MUST NOT be used."
msgstr ""
"Patroneoj ankaŭ temas pri *relativaj dosierlokoj*. Ekzemple, en :file:"
"`pyproject.toml`, patroneo estas relativa al la dosierujo enhavanta tiun "
"dosieron. Tial, la komenca suprenstreko DEVAS NE ekzisti."

#: ../source/specifications/glob-patterns.rst:34
msgid "Parent directory indicators (``..``) MUST NOT be used."
msgstr "Indikilo de patra dosierujo (``..``) DEVAS esti NE uzita."

#: ../source/specifications/glob-patterns.rst:36
msgid ""
"Any characters or character sequences not covered by this specification are "
"invalid. Projects MUST NOT use such values. Tools consuming glob patterns "
"SHOULD reject invalid values with an error."
msgstr ""
"Ajna skribsigno aŭ sinsekvo de skribsignoj ne diskutataj de ĉi tiu specif ne "
"validas. Projekto DEVAS NE uzi tian valoron. Ilo uzanta ``glob``-patroneojn "
"MALAKCEPTU nevalidan valoron, sciigante pri eraro."

#: ../source/specifications/glob-patterns.rst:40
msgid ""
"Literal paths (e.g. :file:`LICENSE`) are valid globs which means they can "
"also be defined."
msgstr ""
"Eksplicita dosierloko (ekz. :file:`LICENSE`) estas valida patroneo, kio "
"signifas ke ĝi estas difinebla."

#: ../source/specifications/glob-patterns.rst:43
msgid "Tools consuming glob patterns:"
msgstr "Iloj uzantaj ``glob``-patroneoj:"

#: ../source/specifications/glob-patterns.rst:45
msgid ""
"MUST treat each value as a glob pattern, and MUST raise an error if the "
"pattern contains invalid glob syntax."
msgstr ""
"DEVAS pritrakti ĉiun valoron kiel patroneon kaj DEVAS sciigi eraron, se la "
"patroneo enhavas nevalidan patronean sintakson."

#: ../source/specifications/glob-patterns.rst:47
msgid ""
"MUST raise an error if any individual user-specified pattern does not match "
"at least one file."
msgstr ""
"DEVAS sciigi eraron, se iu uzanto-specifita patroneo ne kongruas kun "
"minimume unu dosiero."

#: ../source/specifications/glob-patterns.rst:50
msgid "Examples of valid glob patterns:"
msgstr "Ekzemploj de validaj ``glob``-patroneoj:"

#: ../source/specifications/glob-patterns.rst:61
msgid "Examples of invalid glob patterns:"
msgstr "Ekzemploj de nevalidaj ``glob``-patroneoj:"

#: ../source/specifications/glob-patterns.rst:74
msgid "Reference implementation in Python"
msgstr "Referenca realigo en Python"

#: ../source/specifications/glob-patterns.rst:76
msgid ""
"It is possible to defer the majority of the pattern matching against the "
"file system to the :mod:`glob` module in Python's standard library. It is "
"necessary however to perform additional validations."
msgstr ""
"Oni povas uzi la modulon :mod:`glob` en la norma biblioteko de Python por la "
"plejparto de kontrolado de kongrueco de patroneo kun ero en dosiersistemo. "
"Tamen, necesas plu kontroli validecon."

#: ../source/specifications/glob-patterns.rst:80
msgid "The code below is as a simple reference implementation:"
msgstr "Jen simpla referenca realigo:"

#: ../source/specifications/index.rst:4
msgid "PyPA specifications"
msgstr "PyPA-specifoj"

#: ../source/specifications/index.rst:6
msgid ""
"This is a list of currently active interoperability specifications "
"maintained by the Python Packaging Authority. The process for updating these "
"standards, and for proposing new ones, is documented on `pypa.io <https://"
"www.pypa.io/en/latest/specifications/>`__."
msgstr ""
"Jen listo de aktuale aktivaj specifoj pri kunfunkcipovo mastrumataj de la "
"Python-Pakada Aŭtoritato. La procedo pri ĝisdatigado de tiujn normoj kaj "
"proponado de novaj normoj priskribiĝas ĉe `pypa.io <https://www.pypa.io/en/"
"latest/specifications/>`__."

#: ../source/specifications/index-hosted-attestations.rst:6
msgid "Index hosted attestations"
msgstr "Indekse gastigitaj atestoj"

#: ../source/specifications/index-hosted-attestations.rst:8
msgid "This specification was originally defined in :pep:`740`."
msgstr "Ĉi tiu specifo estis originale difinita en :pep:`740`."

#: ../source/specifications/index-hosted-attestations.rst:12
msgid ""
":pep:`740` includes changes to the HTML and JSON index APIs. These changes "
"are documented in the :ref:`simple-repository-api` under :ref:`simple-"
"repository-api-base` and :ref:`json-serialization`."
msgstr ""
":pep:`740` inkluzivas ŝanĝojn pri la indeksaj API-oj en HTML kaj JSON. Tiuj "
"ŝanĝoj estas priskribitaj en :ref:`simple-repository-api` sub :ref:`simple-"
"repository-api-base` kaj :ref:`json-serialization`."

#: ../source/specifications/index-hosted-attestations.rst:22
msgid "Upload endpoint changes"
msgstr "Ŝanĝoj pri alŝuta finpunkto"

#: ../source/specifications/index-hosted-attestations.rst:26
msgid ""
"The \"legacy\" upload API is not standardized. See `PyPI's Upload API "
"documentation <https://docs.pypi.org/api/upload/>`_ for how attestations are "
"uploaded."
msgstr ""
"La «malnova» alŝuta API ne estas normigita. Vidu `la dokumentaron de la "
"Alŝuta API de PyPI <https://docs.pypi.org/api/upload/>`_ pri alŝutado de "
"atestoj."

#: ../source/specifications/index-hosted-attestations.rst:33
msgid "Attestation objects"
msgstr "Atestaj objektoj"

#: ../source/specifications/index-hosted-attestations.rst:35
msgid ""
"An attestation object is a JSON object with several required keys; "
"applications or signers may include additional keys so long as all "
"explicitly listed keys are provided. The required layout of an attestation "
"object is provided as pseudocode below."
msgstr ""
"Atesta objekto estas JSON-objekto kun pluraj postulataj ŝlosiloj. Programo "
"aŭ subskribanto povas inkluzivi ekstrajn ŝlosilojn, se ĉiuj eksplicite "
"menciitaj ŝlosiloj ekzistas. Jen pseŭdokodo pri la postulata aranĝo de "
"atesta objekto."

#: ../source/specifications/index-hosted-attestations.rst:88
msgid ""
"A full data model for each object in ``transparency_entries`` is provided "
"in :ref:`appendix`. Attestation objects **SHOULD** include one or more "
"transparency log entries, and **MAY** include additional keys for other "
"sources of signed time (such as an :rfc:`3161` Time Stamping Authority or a "
"`Roughtime <https://blog.cloudflare.com/roughtime>`__ server)."
msgstr ""
"Plena datenmodelo de ĉiu objekto en ``transparency_entries`` troviĝas en la :"
"ref:`apendico <appendix>`. Atesta objekto **INKLUZIVU** unu aŭ plurajn "
"travidebleco-protokolerojn kaj **POVAS** inkluzivi pliajn ŝlosilojn pri "
"aliaj fontoj de tempo de subskribo (kiel Tempindika-Aŭtoritato laŭ :rfc:"
"`3161` aŭ servilo `Roughtime <https://blog.cloudflare.com/roughtime>`__)."

#: ../source/specifications/index-hosted-attestations.rst:94
msgid ""
"Attestation objects are versioned; this PEP specifies version 1. Each "
"version is tied to a single cryptographic suite to minimize unnecessary "
"cryptographic agility. In version 1, the suite is as follows:"
msgstr ""
"Atesta objekto havas version; ĉi tiu PEP specifas version 1. Ĉiu versio "
"estas ligita al unu ĉifraro por minimumigi nenecesan ĉifran facilmovecon. "
"Jen la ĉifraro de versio 1:"

#: ../source/specifications/index-hosted-attestations.rst:98
msgid ""
"Certificates are specified as X.509 certificates, and comply with the "
"profile in :rfc:`5280`."
msgstr ""
"Atestiloj specifiĝas kiel atestiloj X.509, kaj observas la profilon en :rfc:"
"`5280`."

#: ../source/specifications/index-hosted-attestations.rst:100
msgid ""
"The message signature algorithm is ECDSA, with the P-256 curve for public "
"keys and SHA-256 as the cryptographic digest function."
msgstr ""
"La mesaĝa subskriba algoritmo estas ECDSA, kun la kurbo P-256 por publikaj "
"ŝlosiloj kaj SHA-256 kiel la ĉifra haketaĵa funkcio."

#: ../source/specifications/index-hosted-attestations.rst:103
msgid ""
"Future PEPs may change this suite (and the overall shape of the attestation "
"object) by selecting a new version number."
msgstr ""
"Estonta PEP povos ŝanĝi tiun ĉifraron (kaj la formon de la atesta objekto) "
"elektante novan versian numeron."

#: ../source/specifications/index-hosted-attestations.rst:109
msgid "Attestation statement and signature generation"
msgstr "Atesta aserto kaj generado de subskribo"

#: ../source/specifications/index-hosted-attestations.rst:111
msgid ""
"The *attestation statement* is the actual claim that is cryptographically "
"signed over within the attestation object (i.e., the ``envelope.statement``)."
msgstr ""
"La *atesta aserto* estas la fakta aserto ĉifre subskribita per la atesta "
"objekto (``envelope.statement``)."

#: ../source/specifications/index-hosted-attestations.rst:114
msgid ""
"The attestation statement is encoded as a `v1 in-toto Statement object "
"<https://github.com/in-toto/attestation/blob/v1.0/spec/v1.0/statement."
"md>`__, in JSON form. When serialized the statement is treated as an opaque "
"binary blob, avoiding the need for canonicalization."
msgstr ""
"La atesta aserto estas kodita kiel `entuta aserta objekto de versio 1 "
"<https://github.com/in-toto/attestation/blob/v1.0/spec/v1.0/statement."
"md>`__, en formo JSON. Dum seriigo, la aserto estas pritraktata kiel opaka "
"duumaĵo, sen bezono de kanonigo."

#: ../source/specifications/index-hosted-attestations.rst:119
msgid ""
"In addition to being a v1 in-toto Statement, the attestation statement is "
"constrained in the following ways:"
msgstr ""
"Aldone al la limigoj pri entuta aserto de versio 1, la atesta aserto estas "
"limigita jene:"

#: ../source/specifications/index-hosted-attestations.rst:122
msgid "The in-toto ``subject`` **MUST** contain only a single subject."
msgstr "La entuta ``subject`` **DEVAS** enhavi nur unu temon."

#: ../source/specifications/index-hosted-attestations.rst:123
msgid ""
"``subject[0].name`` is the distribution's filename, which **MUST** be a "
"valid :ref:`source distribution <source-distribution-format>` or :ref:`wheel "
"distribution <binary-distribution-format>` filename."
msgstr ""
"``subject[0].name`` estas la dosiernomo de la distribuo, kiu **DEVAS** esti "
"valida dosiernomo por :ref:`fonta distribuo <source-distribution-format>` "
"or :ref:`wheel-distribuo <binary-distribution-format>`."

#: ../source/specifications/index-hosted-attestations.rst:126
msgid ""
"``subject[0].digest`` **MUST** contain a SHA-256 digest. Other digests "
"**MAY** be present. The digests **MUST** be represented as hexadecimal "
"strings."
msgstr ""
"``subject[0].digest`` **DEVAS** enhavi SHA-256-haketaĵon. Aliaj haketaĵoj "
"**POVAS** ankaŭ ĉeesti. La haketaĵoj **DEVAS** esti deksesumaj signoĉenoj."

#: ../source/specifications/index-hosted-attestations.rst:128
msgid "The following ``predicateType`` values are supported:"
msgstr "La jenaj valoroj de ``predicateType`` estas subtenataj:"

#: ../source/specifications/index-hosted-attestations.rst:130
msgid ""
"`SLSA Provenance <https://slsa.dev/provenance/v1>`__: ``https://slsa.dev/"
"provenance/v1``"
msgstr ""
"`SLSA Provenance <https://slsa.dev/provenance/v1>`__: ``https://slsa.dev/"
"provenance/v1``"

#: ../source/specifications/index-hosted-attestations.rst:131
msgid ""
"`PyPI Publish Attestation <https://docs.pypi.org/attestations/publish/"
"v1>`__: ``https://docs.pypi.org/attestations/publish/v1``"
msgstr ""
"`PyPI Publish Attestation <https://docs.pypi.org/attestations/publish/"
"v1>`__: ``https://docs.pypi.org/attestations/publish/v1``"

#: ../source/specifications/index-hosted-attestations.rst:133
msgid ""
"The signature over this statement is constructed using the `v1 DSSE "
"signature protocol <https://github.com/secure-systems-lab/dsse/blob/v1.0.0/"
"protocol.md>`__, with a ``PAYLOAD_TYPE`` of ``application/vnd.in-toto+json`` "
"and a ``PAYLOAD_BODY`` of the JSON-encoded statement above. No other "
"``PAYLOAD_TYPE`` is permitted."
msgstr ""
"La signaturo pri tiu aserto estas konstruita per `la subskriba protokolo "
"DSSE v1 <https://github.com/secure-systems-lab/dsse/blob/v1.0.0/protocol."
"md>`__, kun ``PAYLOAD_TYPE`` de ``application/vnd.in-toto+json`` kaj "
"``PAYLOAD_BODY`` de la JSON-kodita aserto ĉi-supra. Nenia "
"alia``PAYLOAD_TYPE`` estas permesata."

#: ../source/specifications/index-hosted-attestations.rst:141
msgid "Provenance objects"
msgstr "Originpruvaj objektoj"

#: ../source/specifications/index-hosted-attestations.rst:143
msgid ""
"The index will serve uploaded attestations along with metadata that can "
"assist in verifying them in the form of JSON serialized objects."
msgstr ""
"La indekso provizos alŝutitajn atestojn kune kun metdatenoj por konfirmi "
"ilin en la formo de JSON-seriigitaj objektoj."

#: ../source/specifications/index-hosted-attestations.rst:146
msgid ""
"These *provenance objects* will be available via both the Simple Index and "
"JSON-based Simple API as described above, and will have the following layout:"
msgstr ""
"Tiuj *originpruvaj objektoj* disponiĝas per kaj la Simpla Indeksa API kaj "
"JSON-baza Simpla API ĉi -supraj, kaj havas la jenan aranĝon:"

#: ../source/specifications/index-hosted-attestations.rst:169
msgid "or, as pseudocode:"
msgstr "aŭ, kiel pseŭdokodo:"

#: ../source/specifications/index-hosted-attestations.rst:217
msgid ""
"``version`` is ``1``. Like attestation objects, provenance objects are "
"versioned, and this PEP only defines version ``1``."
msgstr ""
"``version`` estas ``1``. Kiel atestaj objektoj, originpruvaj objektoj havas "
"versiojn, kaj ĉi tiu PEP nur difinas la version ``1``."

#: ../source/specifications/index-hosted-attestations.rst:219
msgid ""
"``attestation_bundles`` is a **required** JSON array, containing one or more "
"\"bundles\" of attestations. Each bundle corresponds to a signing identity "
"(such as a Trusted Publishing identity), and contains one or more "
"attestation objects."
msgstr ""
"``attestation_bundles`` estas **deviga** JSON-listo, enhavanta unu aŭ pluraj "
"«faskoj» da atestoj. Ĉiu fasko respondas al subskriba identeco (kiel Fidata "
"Eldona Identeco) kaj enhavas unu aŭ plurajn atestajn objektojn."

#: ../source/specifications/index-hosted-attestations.rst:224
msgid ""
"As noted in the ``Publisher`` model, each ``AttestationBundle.publisher`` "
"object is specific to its Trusted Publisher but must include at minimum:"
msgstr ""
"Kiel notite en la modelo ``Publisher``, ĉiu objekto ``AttestationBundle."
"publisher`` estas specifa al sia Fidata Eldonanto, sed devas inkluzivi "
"minimume la jenon:"

#: ../source/specifications/index-hosted-attestations.rst:228
msgid ""
"A ``kind`` key, which **MUST** be a JSON string that uniquely identifies the "
"kind of Trusted Publisher."
msgstr ""
"Ŝlosilo ``kind``, kiu **DEVAS** esti JSON-signoĉeno unike identigantan la "
"specon de Fidata Eldonanto."

#: ../source/specifications/index-hosted-attestations.rst:230
msgid ""
"A ``claims`` key, which **MUST** be a JSON object containing any context-"
"specific claims retained by the index during Trusted Publisher "
"authentication."
msgstr ""
"Ŝlosilo ``claims``, kiu **DEVAS** esti JSON-objekto enhavanta ajnajn "
"kunteksto-specifajn asertojn retenatajn de la indekso dum aŭtentikigo per "
"Fidata Eldonanto."

#: ../source/specifications/index-hosted-attestations.rst:233
msgid "All other keys in the publisher object are publisher-specific."
msgstr ""
"Ĉiuj aliaj ŝlosiloj en la objekto publisher estas specifaj al la eldonanto."

#: ../source/specifications/index-hosted-attestations.rst:235
msgid ""
"Each array of attestation objects is a superset of the ``attestations`` "
"array supplied by the uploaded through the ``attestations`` field at upload "
"time, as described in :ref:`upload-endpoint` and :ref:`changes-to-provenance-"
"objects`."
msgstr ""
"Ĉiu listo de atestaj objektoj estas superaro de la listo ``attestation`` "
"donita de la alŝutinto per la kampo ``attestations`` dum alŝutado, laŭ :ref:"
"`upload-endpoint` kaj :ref:`changes-to-provenance-objects`."

#: ../source/specifications/index-hosted-attestations.rst:243
msgid "Changes to provenance objects"
msgstr "Ŝanĝoj al originpruvaj objektoj"

#: ../source/specifications/index-hosted-attestations.rst:245
msgid ""
"Provenance objects are *not* immutable, and may change over time. Reasons "
"for changes to the provenance object include but are not limited to:"
msgstr ""
"Originpruvaj objektoj *ne* estas neŝanĝeblaj kaj povas ŝanĝiĝi dum tempo. "
"Jen neplena listo de kialoj por ŝanĝi originpruvajn objektojn:"

#: ../source/specifications/index-hosted-attestations.rst:248
msgid ""
"Addition of new attestations for a pre-existing signing identity: the index "
"**MAY** choose to allow additional attestations by pre-existing signing "
"identities, such as newer attestation versions for already uploaded files."
msgstr ""
"Aldono de novaj atestoj far jam ekzistanta subskriba identeco: la indekso "
"**POVAS** permesi plian ateston far jam ekzistanta subsigriba identeco, "
"ekzemple novan atestan version por jam alŝutinta dosiero."

#: ../source/specifications/index-hosted-attestations.rst:253
msgid ""
"Addition of new signing identities and associated attestations: the index "
"**MAY** choose to support attestations from sources other than the file's "
"uploader, such as third-party auditors or the index itself. These "
"attestations may be performed asynchronously, requiring the index to insert "
"them into the provenance object *post facto*."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:262
msgid "Attestation verification"
msgstr "Konfirmado de atestado"

#: ../source/specifications/index-hosted-attestations.rst:264
msgid ""
"Verifying an attestation object against a distribution file requires "
"verification of each of the following:"
msgstr ""
"Konfirmi atestan objekton pri distribua dosiero postulas konfirmadon de ĉiuj "
"el la jeno:"

#: ../source/specifications/index-hosted-attestations.rst:267
msgid "``version`` is ``1``. The verifier **MUST** reject any other version."
msgstr ""
"``version`` estas ``1``. La konfirmilo **DEVAS** malakcepti ajnan alian "
"version."

#: ../source/specifications/index-hosted-attestations.rst:268
msgid ""
"``verification_material.certificate`` is a valid signing certificate, as "
"issued by an *a priori* trusted authority (such as a root of trust already "
"present within the verifying client)."
msgstr ""
"``verification_material.certificate`` estas valida subskriba atestilo "
"eldonita de *apriore* fidata aŭtoritato (kiel fidradiko jam ekzistanta en la "
"kliento)."

#: ../source/specifications/index-hosted-attestations.rst:271
msgid ""
"``verification_material.certificate`` identifies an appropriate signing "
"subject, such as the machine identity of the Trusted Publisher that "
"published the package."
msgstr ""
"``verification_material.certificate`` identigas taŭgan subskriban temon kiel "
"la maŝinan identecon de la Fidata Eldonanto eldoninta la pakon."

#: ../source/specifications/index-hosted-attestations.rst:274
msgid ""
"``envelope.statement`` is a valid in-toto v1 Statement, with a subject and "
"digest that **MUST** match the distribution's filename and contents. For the "
"distribution's filename, matching **MUST** be performed by parsing using the "
"appropriate source distribution or wheel filename format, as the statement's "
"subject may be equivalent but normalized."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:279
msgid ""
"``envelope.signature`` is a valid signature for ``envelope.statement`` "
"corresponding to ``verification_material.certificate``, as reconstituted via "
"the `v1 DSSE signature protocol <https://github.com/secure-systems-lab/dsse/"
"blob/v1.0.0/protocol.md>`__."
msgstr ""
"``envelope.signature`` estas valida subskribo por ``envelope.statement`` "
"respondanta al ``verification_material.certificate`` laŭ la `subskriba "
"protokolo v1 DSSE <https://github.com/secure-systems-lab/dsse/blob/v1.0.0/"
"protocol.md>`__."

#: ../source/specifications/index-hosted-attestations.rst:284
msgid ""
"In addition to the above required steps, a verifier **MAY** additionally "
"verify ``verification_material.transparency_entries`` on a policy basis, e."
"g. requiring at least one transparency log entry or a threshold of entries. "
"When verifying transparency entries, the verifier **MUST** confirm that the "
"inclusion time for each entry lies within the signing certificate's validity "
"period."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:293
msgid "Appendix: Data models for Transparency Log Entries"
msgstr "Apendico: Datenmodeloj por Eroj en Travidebleco-Protokolo"

#: ../source/specifications/index-hosted-attestations.rst:295
msgid ""
"This appendix contains pseudocoded data models for transparency log entries "
"in attestation objects. Each transparency log entry serves as a source of "
"signed inclusion time, and can be verified either online or offline."
msgstr ""
"Jen apendico enhavanta pseŭdokodajn datenmodelojn por protokoleroj de "
"travidebleco-protokolo en atesta objekto. Ĉiu protokolero estas fonto de "
"subskribita inkluziva tempo kaj estas konfirmebla konektite aŭ senkonekte."

#: ../source/specifications/inline-script-metadata.rst:5
msgid "Inline script metadata"
msgstr "Enkorpigitaj programetaj metadatenoj"

#: ../source/specifications/inline-script-metadata.rst:7
msgid ""
"This specification defines a metadata format that can be embedded in single-"
"file Python scripts to assist launchers, IDEs and other external tools which "
"may need to interact with such scripts."
msgstr ""
"Jen specifo difinanta metadatenan formon enkorpigeblan en unudosiera Python-"
"programo por helpi lanĉilojn, programadajn mediojn kaj aliajn eksterajn "
"ilojn, kiuj interagas kun tiaj programoj."

#: ../source/specifications/inline-script-metadata.rst:15
msgid ""
"This specification defines a metadata comment block format (loosely inspired "
"by `reStructuredText Directives`__)."
msgstr ""
"Jen specifo difinanta metadatenan komentan blokan formon (parte inspirita de "
"`direktivo de reStructuredText <reStructuredText Directives>`__)."

#: ../source/specifications/inline-script-metadata.rst:20
msgid ""
"Any Python script may have top-level comment blocks that MUST start with the "
"line ``# /// TYPE`` where ``TYPE`` determines how to process the content. "
"That is: a single ``#``, followed by a single space, followed by three "
"forward slashes, followed by a single space, followed by the type of "
"metadata. Block MUST end with the line ``# ///``. That is: a single ``#``, "
"followed by a single space, followed by three forward slashes. The ``TYPE`` "
"MUST only consist of ASCII letters, numbers and hyphens."
msgstr ""
"Ajna Python-programo povas havi supranivelajn komentajn blokojn, kiuj DEVAS "
"komenciĝi per la linio ``# /// TIPO``, en kiu ``TIPO`` determinas kiel "
"pritrakti la enhavon. Alivore: unu ``#``, sekvita de unu spaceto, sekvita de "
"tri suprenstrekoj, sekvita de unu spaceto, sekvita de la tipo de "
"metadatenoj. Bloko DEVAS finiĝi per la linio ``# ///``. Alivorte: unu ``#``, "
"sekvita de unu spaceto, sekvita de tri suprenstrekoj. La ``TIPO`` DEVAS nur "
"konsisti el Askiaj literoj, ciferoj kaj streketoj."

#: ../source/specifications/inline-script-metadata.rst:28
msgid ""
"Every line between these two lines (``# /// TYPE`` and ``# ///``) MUST be a "
"comment starting with ``#``. If there are characters after the ``#`` then "
"the first character MUST be a space. The embedded content is formed by "
"taking away the first two characters of each line if the second character is "
"a space, otherwise just the first character (which means the line consists "
"of only a single ``#``)."
msgstr ""
"Ĉiu linio inter tiuj du linioj (``# /// TYPE`` kaj ``# ///``) DEVAS esti "
"komento komenciĝanta per ``#``. Se ekzistas signoj post la ``#``, do la unua "
"signo DEVAS esti spaceto. La enkorpigita enhavo konsistas el la linio sen la "
"unuaj du signoj (se la dua signo estas spaceto) aŭ el nur la unua signo (se "
"ne, kio implicas, ke la linio konsistas el nur unu ``#``)."

#: ../source/specifications/inline-script-metadata.rst:35
msgid ""
"Precedence for an ending line ``# ///`` is given when the next line is not a "
"valid embedded content line as described above. For example, the following "
"is a single fully valid block:"
msgstr ""
"Oni preferu la finan lineon ``# ///``, kiam la sekva linio ne estas valida "
"linio de enkorpigita enhavo laŭ la ĉi-supra priskribo. Ekzemple, la jeno "
"estas unu plene valida bloko:"

#: ../source/specifications/inline-script-metadata.rst:51
msgid ""
"A starting line MUST NOT be placed between another starting line and its "
"ending line. In such cases tools MAY produce an error. Unclosed blocks MUST "
"be ignored."
msgstr ""
"Komenca linio DEVAS NE ĉeesti inter alia komenca linio kaj ĝia fina linio. "
"Tiukaze ilo POVAS sciigi pri eraro. Nefermita bloko DEVAS esti ignorita."

#: ../source/specifications/inline-script-metadata.rst:54
msgid ""
"When there are multiple comment blocks of the same ``TYPE`` defined, tools "
"MUST produce an error."
msgstr ""
"Se ekzistas pluraj komentaj blokoj de la sama ``TYPE``, ilo DEVAS sciigi pri "
"eraro."

#: ../source/specifications/inline-script-metadata.rst:57
msgid ""
"Tools reading embedded metadata MAY respect the standard Python encoding "
"declaration. If they choose not to do so, they MUST process the file as "
"UTF-8."
msgstr ""
"Ilo leganta enmetitajn metadatenojn POVAS respekti la norman signokodo-"
"deklaron de Python. Se ilo ne faras tion, ĝi DEVAS pritrakti la dosieron "
"kiel UTF-8."

#: ../source/specifications/inline-script-metadata.rst:60
msgid ""
"This is the canonical regular expression that MAY be used to parse the "
"metadata:"
msgstr ""
"Jen la kanona regula esprimo, kiun oni POVAS uzi por sintakse analizi la "
"metadatenojn:"

#: ../source/specifications/inline-script-metadata.rst:67
msgid ""
"In circumstances where there is a discrepancy between the text specification "
"and the regular expression, the text specification takes precedence."
msgstr ""
"En cirkonstancoj kie ekzistas diferenco inter la teksta specifo kaj la "
"regula esprimo, la teksta specifo havas prioritaton."

#: ../source/specifications/inline-script-metadata.rst:70
msgid ""
"Tools MUST NOT read from metadata blocks with types that have not been "
"standardized by this specification."
msgstr ""
"Ilo DEVAS NE legi el metadatena bloko de tipo ne normigita de ĉi tiu specifo."

#: ../source/specifications/inline-script-metadata.rst:74
msgid "script type"
msgstr "Tipo ``script``"

#: ../source/specifications/inline-script-metadata.rst:76
msgid ""
"The first type of metadata block is named ``script``, which contains script "
"metadata (dependency data and tool configuration)."
msgstr ""
"La unua tipo de metadatena bloko nomiĝas ``script``, kiu enhavas la "
"programetajn metadatenojn (datenojn pri dependeco kaj agordoj de iloj)."

#: ../source/specifications/inline-script-metadata.rst:79
msgid ""
"This document MAY include the top-level fields ``dependencies`` and "
"``requires-python``, and MAY optionally include a ``[tool]`` table."
msgstr ""
"Tiu dokumento POVAS inkluzivi la supranivelajn kampojn ``dependencies`` kaj "
"``requires-python``, kaj POVAS nedevige inkluzivi tabelon ``[tool]``."

#: ../source/specifications/inline-script-metadata.rst:82
msgid ""
"The ``[tool]`` table MAY be used by any tool, script runner or otherwise, to "
"configure behavior. It has the same semantics as the :ref:`[tool] table in "
"pyproject.toml <pyproject-tool-table>`."
msgstr ""
"La tabelo ``[tool]`` POVAS esti uzata de ajna ilo, programrulilo aŭ ne, por "
"agordi konduton. Ĝia semantiko estas sama kiel :ref:`la tabelo [tool] en "
"pyproject.toml <pyproject-tool-table>`."

#: ../source/specifications/inline-script-metadata.rst:86
msgid "The top-level fields are:"
msgstr "Jen la supranivelaj kampoj:"

#: ../source/specifications/inline-script-metadata.rst:88
msgid ""
"``dependencies``: A list of strings that specifies the runtime dependencies "
"of the script. Each entry MUST be a valid :ref:`dependency specifier "
"<dependency-specifiers>`."
msgstr ""
"``dependencies`` : Listo de signoĉenoj specifantaj la rultempajn dependecojn "
"de la programo. Ĉiu ero DEVAS esti valida :ref:`dependeco-specifilo "
"<dependency-specifiers>`."

#: ../source/specifications/inline-script-metadata.rst:91
msgid ""
"``requires-python``: A string that specifies the Python version(s) with "
"which the script is compatible. The value of this field MUST be a valid :ref:"
"`version specifier <version-specifiers>`."
msgstr ""
"``requires-python``: Signoĉeno specifanta la Python-versio(j)n kun kiu(j) la "
"programo kongruas. La valoro de tiu kampo devas esti :ref:`versio-specifilo "
"<version-specifiers>`."

#: ../source/specifications/inline-script-metadata.rst:95
msgid ""
"Script runners MUST error if the specified ``dependencies`` cannot be "
"provided. Script runners SHOULD error if no version of Python that satisfies "
"the specified ``requires-python`` can be provided."
msgstr ""
"Programeto-rulilo DEVAS sciigi pri eraro, se la specifita ``dependencies`` "
"ne estas plenumebla. Programeto-rulilo SCIIGU pri eraro, se troviĝas neniu "
"versio de Python plenumanta la specifitan ``requires-python``."

#: ../source/specifications/inline-script-metadata.rst:102
msgid "The following is an example of a script with embedded metadata:"
msgstr "Jen ekzemplo de programeto kun enkorpigitaj metadatenoj:"

#: ../source/specifications/inline-script-metadata.rst:125
msgid ""
"The following is an example of how to read the metadata on Python 3.11 or "
"higher."
msgstr "Jen ekzemplo de kiel legi la metadatenojn sur Python 3.11 aŭ pli nova."

#: ../source/specifications/inline-script-metadata.rst:151
msgid ""
"Often tools will edit dependencies like package managers or dependency "
"update automation in CI. The following is a crude example of modifying the "
"content using the ``tomlkit`` library__."
msgstr ""
"Ofte ilo modifas dependecojn kiel padadministrilo aŭ aŭtomata ĝisdatigilo de "
"dependecoj en kontinua integrado. Jen malneta ekzemplo de modifado de la "
"enhavo per la `biblioteko <library>`__ ``tomlkit``."

#: ../source/specifications/inline-script-metadata.rst:182
msgid ""
"Note that this example used a library that preserves TOML formatting. This "
"is not a requirement for editing by any means but rather is a \"nice to "
"have\" feature."
msgstr ""
"Notu, ke tiu ekzemplo uzis bibliotekon konservantan TOML-aranĝon. Tio ne "
"estas postulata por modifado, sed utilas."

#: ../source/specifications/inline-script-metadata.rst:186
msgid ""
"The following is an example of how to read a stream of arbitrary metadata "
"blocks."
msgstr "Jen ekzemplo de kiel legi fluon da arbitraj metadatenaj blokoj."

#: ../source/specifications/inline-script-metadata.rst:205
#: ../source/specifications/simple-repository-api.rst:954
msgid "Recommendations"
msgstr "Rekomendoj"

#: ../source/specifications/inline-script-metadata.rst:207
msgid ""
"Tools that support managing different versions of Python should attempt to "
"use the highest available version of Python that is compatible with the "
"script's ``requires-python`` metadata, if defined."
msgstr ""
"Ilo, kiu administras diversajn versiojn de Python, uzu la plej novan version "
"de Python kongruan kun la metadateno ``requires-python`` de la programeto, "
"se ĝi ekzistas."

#: ../source/specifications/inline-script-metadata.rst:215
msgid ""
"October 2023: This specification was conditionally approved through :pep:"
"`723`."
msgstr "Oktobro 2023: Ĉi tiu specifo estis kondiĉe aprobita per :pep:`723`."

#: ../source/specifications/inline-script-metadata.rst:216
msgid ""
"January 2024: Through amendments to :pep:`723`, the ``pyproject`` metadata "
"block type was renamed to ``script``, and the ``[run]`` table was dropped, "
"making the ``dependencies`` and ``requires-python`` keys top-level. "
"Additionally, the specification is no longer provisional."
msgstr ""
"Januaro 2024: Per ŝanĝoj al :pep:`723`, la nomo de la metadatena bloko "
"``pyproject `` ŝanĝiĝis al ``script``, kaj la tabelo ``[run]`` estis "
"forigita, estigante la ŝlosilojn ``dependencies`` kaj ``requires-python`` "
"supranivelaj. Cetere, la specifo ne plu estas provizora."

#: ../source/specifications/license-expression.rst:5
msgid ""
":pep:`639` defined a new :ref:`pyproject.toml's license <pyproject-toml-"
"license>` value and added a corresponding :ref:`core metadata License-"
"Expression field <core-metadata-license-expression>`. This specification "
"defines which license expressions are acceptable."
msgstr ""
":pep:`639` difinis novan valoron al :ref:`la ŝlosilo license en pyproject."
"toml <pyproject-toml-license>`, kaj aldonis respondantan :ref:`kampon "
"License-Expression en kernaj metadatenoj <core-metadata-license-"
"expression>`. Ĉi tiu normo difinas la validajn licencesprimojn."

#: ../source/specifications/license-expression.rst:14
msgid ""
"License can be defined as a text string that is a valid SPDX :term:`license "
"expression <License Expression>`, as documented in the `SPDX specification "
"<spdxpression_>`__, either Version 2.2 or a later compatible version."
msgstr ""
"Licenco povas esti difinita kiel teksto, kiu estas valida SPDX-:term:"
"`licencesprimo <License Expression>`, laŭ la `normo SPDX <spdxpression_>`__, "
"aŭ Versio 2.2 aŭ pli nova kongrua versio."

#: ../source/specifications/license-expression.rst:19
msgid "A license expression can use the following license identifiers:"
msgstr "Licencesprimo povas uzi la jenajn licenco-identigilojn:"

#: ../source/specifications/license-expression.rst:21
msgid ""
"Any SPDX-listed license short-form identifiers that are published in the "
"`SPDX License List <spdxlist_>`__, version 3.17 or any later compatible "
"version."
msgstr ""
"Ajna mallongforma licenca identigilo en la `SPDX License List "
"<spdxlist_>`__, versio 3.17 aŭ ajna pli nova kongrua versio."

#: ../source/specifications/license-expression.rst:25
msgid ""
"The custom ``LicenseRef-[idstring]`` string(s), where ``[idstring]`` is a "
"unique string containing letters, numbers, ``.`` and/or ``-``, to identify "
"licenses that are not included in the SPDX license list. The custom "
"identifiers must follow the SPDX specification, `clause 10.1 "
"<spdxcustom_>`__ of the given specification version."
msgstr ""
"La propra(j) signoĉeno(j) ``LicenseRef-[identigilo]``en kiu ``[identigilo]`` "
"estas unika signoĉeno konsistanta el literoj, ciferoj, ``.`` kaj/aŭ ``-``, "
"identiganta(j) licencojn ne inkluzivitajn en la licencolisto de SPDX. La "
"propraj identigiloj devas observi `paragrafon 10.1 <spdxcustom_>`__ de la "
"normo SPDX de la donita versio de la normo."

#: ../source/specifications/license-expression.rst:32
msgid "Examples of valid license expressions:"
msgstr "Ekzemploj de validaj licenco-esprimoj:"

#: ../source/specifications/license-expression.rst:45
msgid "Examples of invalid license expressions:"
msgstr "Ekzemploj de nevalidaj licenco-esprimoj:"

#: ../source/specifications/name-normalization.rst:3
msgid "Names and normalization"
msgstr "Nomoj kaj normigo"

#: ../source/specifications/name-normalization.rst:5
msgid ""
"This specification defines the format that names for packages and extras are "
"required to follow. It also describes how to normalize them, which should be "
"done before lookups and comparisons."
msgstr ""
"Ĉi tiu specifo difinas la formon de nomoj de pakoj kaj ekstraĵoj. Ĝi ankaŭ "
"priskribas normigon de nomoj, kiun oni faru antaŭ serĉado kaj komparado."

#: ../source/specifications/name-normalization.rst:13
msgid "Name format"
msgstr "Nomformo"

#: ../source/specifications/name-normalization.rst:15
msgid ""
"A valid name consists only of ASCII letters and numbers, period, underscore "
"and hyphen. It must start and end with a letter or number. This means that "
"valid project names are limited to those which match the following regex "
"(run with :py:data:`re.IGNORECASE`)::"
msgstr ""
"Valida nomo konsistas nur el Askiaj literoj, ciferoj, punkto, substreko kaj "
"streketo. Ĝi devas komenciĝi kaj finiĝi per litero aŭ cifero. Alivorte, "
"valida projekta nomo devas konformi al la jena regula esprimo (rulu kun :py:"
"data:`re.IGNORECASE`)::"

#: ../source/specifications/name-normalization.rst:26
msgid "Name normalization"
msgstr "Normigo de nomo"

#: ../source/specifications/name-normalization.rst:28
msgid ""
"The name should be lowercased with all runs of the characters ``.``, ``-``, "
"or ``_`` replaced with a single ``-`` character. This can be implemented in "
"Python with the re module:"
msgstr ""
"Oni minuskligu la nomon kaj anstataŭigu sinsekvon de la signoj ``.``, ``-``, "
"aŭ ``_`` per unu signo ``-``. Oni povas fari tion en Python per la modulo "
"``re``:"

#: ../source/specifications/name-normalization.rst:39
msgid "This means that the following names are all equivalent:"
msgstr "Tio signifas, ke la jenajn nomoj estas ĉiuj ekvivalentaj:"

#: ../source/specifications/name-normalization.rst:41
msgid "``friendly-bard`` (normalized form)"
msgstr "``afabla-bardo`` (normigita formo)"

#: ../source/specifications/name-normalization.rst:42
msgid "``Friendly-Bard``"
msgstr "``Afabla-Bardo``"

#: ../source/specifications/name-normalization.rst:43
msgid "``FRIENDLY-BARD``"
msgstr "``AFABLA-BARDO``"

#: ../source/specifications/name-normalization.rst:44
msgid "``friendly.bard``"
msgstr "``afabla.bardo``"

#: ../source/specifications/name-normalization.rst:45
msgid "``friendly_bard``"
msgstr "``afabla_bardo``"

#: ../source/specifications/name-normalization.rst:46
msgid "``friendly--bard``"
msgstr "``afabla--bardo``"

#: ../source/specifications/name-normalization.rst:47
msgid ""
"``FrIeNdLy-._.-bArD`` (a *terrible* way to write a name, but it is valid)"
msgstr "``AfAbLa-._.-bArDo`` (*aĉa* maniero skribi nomon, sed valida)"

#: ../source/specifications/name-normalization.rst:52
msgid ""
"September 2015: The specification of name normalized was approved through :"
"pep:`503 <503#normalized-names>`."
msgstr ""
"Septembro 2015: La specifo de normigo de nomoj estis aprobita per :pep:`503 "
"<503#normalized-names>`."

#: ../source/specifications/name-normalization.rst:54
msgid ""
"November 2015: The specification of valid names was approved through :pep:"
"`508 <508#names>`."
msgstr ""
"Novembro 2015: La specifo de validaj nomoj estis aprobita per :pep:`508 "
"<508#names>`."

#: ../source/specifications/platform-compatibility-tags.rst:6
msgid "Platform compatibility tags"
msgstr "Platformo-kongruecaj etikedoj"

#: ../source/specifications/platform-compatibility-tags.rst:8
msgid ""
"Platform compatibility tags allow build tools to mark distributions as being "
"compatible with specific platforms, and allows installers to understand "
"which distributions are compatible with the system they are running on."
msgstr ""
"Per etikedoj pri platforma kongrueco, konstruilo povas marki distribuon "
"kongrua kun specifitaj platformoj, kaj instalilo povas scii, kiuj distribuoj "
"kongruas kun la aktuala sistemo."

#: ../source/specifications/platform-compatibility-tags.rst:16
msgid "The tag format is ``{python tag}-{abi tag}-{platform tag}``."
msgstr "La etikeda formo estas ``{python tag}-{abi tag}-{platform tag}``."

#: ../source/specifications/platform-compatibility-tags.rst:18
msgid "python tag"
msgstr "python etikedo"

#: ../source/specifications/platform-compatibility-tags.rst:19
msgid "'py27', 'cp33'"
msgstr "«py27», «cp33»"

#: ../source/specifications/platform-compatibility-tags.rst:21
msgid "'cp32dmu', 'none'"
msgstr "«cp32dmu», «none»"

#: ../source/specifications/platform-compatibility-tags.rst:23
msgid "'linux_x86_64', 'any'"
msgstr "«linux_x86_64», «any»"

#: ../source/specifications/platform-compatibility-tags.rst:25
msgid ""
"For example, the tag ``py27-none-any`` indicates compatibility with Python "
"2.7 (any Python 2.7 implementation) with no abi requirement, on any platform."
msgstr ""
"Ekzemple, la etikedo ``py27-none-any`` signifas kongruecon kun Python 2.7 "
"(ajna realigo de Python 2.7) sen postuloj pri ABI, sur ajna platformo."

#: ../source/specifications/platform-compatibility-tags.rst:28
msgid ""
"The ``wheel`` built package format includes these tags in its filenames, of "
"the form ``{distribution}-{version}(-{build tag})?-{python tag}-{abitag}-"
"{platform tag}.whl``. Other package formats may have their own conventions."
msgstr ""
"La konstruita pakformo ``wheel`` inkluzivas tiujn etikedojn en dosiernomoj "
"laŭ la formo ``{distribuo}-{versio}(-{konstruetikedo})?-{pythonetikedo}-"
"{abietikedo}-{platformetikedo}.whl``. Alia pakformo povas havi sian propran "
"konvencion."

#: ../source/specifications/platform-compatibility-tags.rst:33
msgid "Any potential spaces in any tag should be replaced with ``_``."
msgstr "Ajna ebla spaco en ajna etikedo estu anstataŭigita per ``_``."

#: ../source/specifications/platform-compatibility-tags.rst:37
msgid "Python Tag"
msgstr "Python-Etikedo"

#: ../source/specifications/platform-compatibility-tags.rst:39
msgid ""
"The Python tag indicates the implementation and version required by a "
"distribution.  Major implementations have abbreviated codes, initially:"
msgstr ""
"La Python-etikedo indikas la realigon kaj version postulatajn de distribuo.  "
"Ĉefaj realigoj havas mallongajn kodojn, komence:"

#: ../source/specifications/platform-compatibility-tags.rst:42
msgid "py: Generic Python (does not require implementation-specific features)"
msgstr "py: Ĝenerala Python (ne postulas funkciojn de specifaj realigoj)"

#: ../source/specifications/platform-compatibility-tags.rst:43
msgid "cp: CPython"
msgstr "cp: CPython"

#: ../source/specifications/platform-compatibility-tags.rst:44
msgid "ip: IronPython"
msgstr "ip: IronPython"

#: ../source/specifications/platform-compatibility-tags.rst:45
msgid "pp: PyPy"
msgstr "pp: PyPy"

#: ../source/specifications/platform-compatibility-tags.rst:46
msgid "jy: Jython"
msgstr "jy: Jython"

#: ../source/specifications/platform-compatibility-tags.rst:48
msgid ""
"Other Python implementations should use :py:data:`sys.implementation.name "
"<sys.implementation>`."
msgstr ""
"Aliaj realigoj de Python uzu :py:data:`sys.implementation.name <sys."
"implementation>`."

#: ../source/specifications/platform-compatibility-tags.rst:50
msgid ""
"The version is ``py_version_nodot``.  CPython gets away with no dot, but if "
"one is needed the underscore ``_`` is used instead.  PyPy should probably "
"use its own versions here ``pp18``, ``pp19``."
msgstr ""
"La versio estas ``py_version_nodot``.  CPython povas uzi senpunktan version, "
"sed se disigilo necesas, oni uzas ``_`` anstataŭe.  PyPy uzu siajn proprajn "
"versiojn kiel ``pp18``, ``pp19``."

#: ../source/specifications/platform-compatibility-tags.rst:54
msgid ""
"The version can be just the major version ``2`` or ``3`` ``py2``, ``py3`` "
"for many pure-Python distributions."
msgstr ""
"La versio povas esti simple la maĵoran version ``2`` aŭ ``3`` ``py2``, "
"``py3`` por multaj pure Python-aj distribuoj."

#: ../source/specifications/platform-compatibility-tags.rst:57
msgid ""
"Importantly, major-version-only tags like ``py2`` and ``py3`` are not "
"shorthand for ``py20`` and ``py30``.  Instead, these tags mean the packager "
"intentionally released a cross-version-compatible distribution."
msgstr ""
"Grave, etikedo nur pri la maĵora versio kiel ``py2`` kaj ``py3`` ne estas "
"mallongigoj de ``py20`` kaj ``py30``.  Tiuj signifas, ke la pakinto intence "
"eldonis plurversie kongruan distribuon."

#: ../source/specifications/platform-compatibility-tags.rst:61
msgid ""
"A single-source Python 2/3 compatible distribution can use the compound tag "
"``py2.py3``.  See `Compressed Tag Sets`_, below."
msgstr ""
"Unufonta distribuo kongrua kun Python 2 kaj 3 povas uzi la kombinitan "
"etikedon ``py2.py3``.  Vidu `Densigitajn Etikedarojn <Compressed Tag Sets>`_ "
"ĉi-sube."

#: ../source/specifications/platform-compatibility-tags.rst:66
msgid "ABI Tag"
msgstr "ABI-Etikedo"

#: ../source/specifications/platform-compatibility-tags.rst:68
msgid ""
"The ABI tag indicates which Python ABI is required by any included extension "
"modules.  For implementation-specific ABIs, the implementation is "
"abbreviated in the same way as the Python Tag, e.g. ``cp33d`` would be the "
"CPython 3.3 ABI with debugging."
msgstr ""
"La ABI-etikedo indikas la ABI-on de Python subtenatan de inkluzivita "
"etendaĵo-modulo. Por realigo-specifa ABI, la realigo estas mallongigita same "
"kiel la Python-etikedo; ekz. ``cp33d`` estas la ABI de CPython 3.3 kun "
"sencimigpovo."

#: ../source/specifications/platform-compatibility-tags.rst:73
msgid "The CPython stable ABI is ``abi3`` as in the shared library suffix."
msgstr ""
"La stabila ABI de CPython estas ``abi3`` kiel la sufikso de la komuna "
"biblioteko."

#: ../source/specifications/platform-compatibility-tags.rst:75
msgid ""
"Implementations with a very unstable ABI may use the first 6 bytes (as 8 "
"base64-encoded characters) of the SHA-256 hash of their source code revision "
"and compiler flags, etc, but will probably not have a great need to "
"distribute binary distributions. Each implementation's community may decide "
"how to best use the ABI tag."
msgstr ""
"Python-realigo kun tre malstabila ABI povas uzi la unuajn 6 bajtojn (kiel ok "
"base64-koditajn signojn) de la haketaĵo SHA-256 de la fontkoda revizio kaj "
"tradukilaj flagoj ktp, sed ties komunumo verŝajne ne tre bezonas distribui "
"duumajn distribuojn. La komunumo de ĉiu realigo povas decidi la uzadon de la "
"ABI-etikedo."

#: ../source/specifications/platform-compatibility-tags.rst:83
msgid "Platform Tag"
msgstr "Platformo-Etikedo"

#: ../source/specifications/platform-compatibility-tags.rst:86
msgid "Basic platform tags"
msgstr "Bazaj platformaj etikedoj"

#: ../source/specifications/platform-compatibility-tags.rst:88
msgid ""
"In its simplest form, the platform tag is :py:func:`sysconfig."
"get_platform()` with all hyphens ``-`` and periods ``.`` replaced with "
"underscore ``_``. Until the removal of :ref:`distutils` in Python 3.12, this "
"was ``distutils.util.get_platform()``. For example:"
msgstr ""
"En ĝia plej simpla formo, la platformo-etikedo estas :py:func:`sysconfig."
"get_platform()` kun ĉiuj streketoj ``-`` kaj punktoj ``.`` anstataŭigitaj "
"per substrekoj ``_``. Ĝis la forigo de :ref:`distutils` en Python 3.12, tiu "
"estis ``distutils.util.get_platform()``. Ekzemple:"

#: ../source/specifications/platform-compatibility-tags.rst:93
msgid "win32"
msgstr "win32"

#: ../source/specifications/platform-compatibility-tags.rst:94
msgid "linux_i386"
msgstr "linux_i386"

#: ../source/specifications/platform-compatibility-tags.rst:95
msgid "linux_x86_64"
msgstr "linux_x86_64"

#: ../source/specifications/platform-compatibility-tags.rst:101
msgid "``manylinux``"
msgstr "``manylinux``"

#: ../source/specifications/platform-compatibility-tags.rst:103
msgid ""
"The simple scheme above is insufficient for public distribution of wheel "
"files to Linux platforms, due to the large ecosystem of Linux platforms and "
"subtle differences between them."
msgstr ""
"La ĉi-supra simpla skemo ne sufiĉas por publika distribuado de wheel-"
"dosieroj al Linux-platformoj pro la diverseco de la granda ekosistemo de "
"Linux-platformoj."

#: ../source/specifications/platform-compatibility-tags.rst:107
msgid ""
"Instead, for those platforms, the ``manylinux`` standard represents a common "
"subset of Linux platforms, and allows building wheels tagged with the "
"``manylinux`` platform tag which can be used across most common Linux "
"distributions."
msgstr ""
"Anstataŭe, por tiuj platformoj, la normo ``manylinux`` estas komuna subaro "
"de Linux-platformoj kaj permesas konstrui wheel kun la etikedo ``manylinux`` "
"uzeblan tra oftaj Linux-distribuoj."

#: ../source/specifications/platform-compatibility-tags.rst:112
msgid ""
"The current standard is the future-proof :file:`manylinux_{x}_{y}` standard. "
"It defines tags of the form :file:`manylinux_{x}_{y}_{arch}`, where ``x`` "
"and ``y`` are glibc major and minor versions supported (e.g. "
"``manylinux_2_24_xxx`` should work on any distro using glibc 2.24+), and "
"``arch`` is the architecture, matching the value of :py:func:`sysconfig."
"get_platform()` on the system as in the \"simple\" form above."
msgstr ""
"La aktuala normo estas la estontece sekura normo :file:`manylinux_{x}_{y}`. "
"Ĝi difinas etikedojn de la formo :file:`manylinux_{x}_{y}_{arch}`, en kiu "
"``x`` kaj ``y`` estas la subtenataj maĵoraj kaj minoraj versioj de glibc "
"(ekzemple ``manylinux_2_24_xxx`` funkciu sur ajna distribuo uzanta glibc "
"2.24+), kaj ``arch`` estas la arĥitekturo, egalante la valoron de :py:func:"
"`sysconfig.get_platform()` sur la sistemo laŭ la ĉi-supra «simpla» formo."

#: ../source/specifications/platform-compatibility-tags.rst:118
msgid ""
"The following older tags are still supported for backward compatibility:"
msgstr "Jen malnovaj etikedoj ankoraŭ subtenataj por retrokongrueco:"

#: ../source/specifications/platform-compatibility-tags.rst:120
msgid ""
"``manylinux1`` supports glibc 2.5 on ``x86_64`` and ``i686`` architectures."
msgstr ""
"``manylinux1`` subtenas glibc 2.5 ĉe la arĥitekturoj ``x86_64`` kaj ``i686``."

#: ../source/specifications/platform-compatibility-tags.rst:121
msgid "``manylinux2010`` supports glibc 2.12 on ``x86_64`` and ``i686``."
msgstr "``manylinux2010`` subtenas glibc 2.12 ĉe ``x86_64`` kaj ``i686``."

#: ../source/specifications/platform-compatibility-tags.rst:122
msgid ""
"``manylinux2014`` supports glibc 2.17 on ``x86_64``, ``i686``, ``aarch64``, "
"``armv7l``, ``ppc64``, ``ppc64le``, and ``s390x``."
msgstr ""
"``manylinux2014`` subtenas glibc 2.17 ĉe ``x86_64``, ``i686``, ``aarch64``, "
"``armv7l``, ``ppc64``, ``ppc64le``, kaj ``s390x``."

#: ../source/specifications/platform-compatibility-tags.rst:125
msgid ""
"In general, distributions built for older versions of the specification are "
"forwards-compatible (meaning that ``manylinux1`` distributions should "
"continue to work on modern systems) but not backwards-compatible (meaning "
"that ``manylinux2010`` distributions are not expected to work on platforms "
"that existed before 2010)."
msgstr ""
"Ĝenerale, distribuo konstruita por pli malnova versio de la specifo estas "
"antaŭenkongrua (alivorte, distribuo ``manylinux1`` funkcias sur modernaj "
"sistemoj) sed ne retrokongrua (alivorte, distribuo ``manylinux2010`` ne "
"funkcias sur distribuo ekzistinta antaŭ 2010)."

#: ../source/specifications/platform-compatibility-tags.rst:131
msgid ""
"Package maintainers should attempt to target the most compatible "
"specification possible, with the caveat that the provided build environment "
"for ``manylinux1`` and ``manylinux2010`` have reached end-of-life meaning "
"that these images will no longer receive security updates."
msgstr ""
"Mastrumanto de pako provu celi la plej kongruan specifon laŭeble, krom ke la "
"provizitaj konstruo-medioj por ``manylinux1`` kaj ``manylinux2010`` estas "
"eksvalidiĝintaj kaj ne plu ricevos ĝisdatigojn pri sekureco."

#: ../source/specifications/platform-compatibility-tags.rst:136
msgid ""
"The following table shows the minimum versions of relevant projects to "
"support the various ``manylinux`` standards:"
msgstr ""
"Jen tabelo pri la minimumaj versioj de rilataj projektoj subtenantaj la "
"diversajn normojn ``manylinux``:"

#: ../source/specifications/platform-compatibility-tags.rst:140
msgid "Tool"
msgstr "Ilo"

#: ../source/specifications/platform-compatibility-tags.rst:140
msgid "``manylinux1``"
msgstr "``manylinux1``"

#: ../source/specifications/platform-compatibility-tags.rst:140
msgid "``manylinux2010``"
msgstr "``manylinux2010``"

#: ../source/specifications/platform-compatibility-tags.rst:140
msgid "``manylinux2014``"
msgstr "``manylinux2014``"

#: ../source/specifications/platform-compatibility-tags.rst:140
msgid "``manylinux_x_y``"
msgstr "``manylinux_x_y``"

#: ../source/specifications/platform-compatibility-tags.rst:142
msgid "``>=8.1.0``"
msgstr "``>=8.1.0``"

#: ../source/specifications/platform-compatibility-tags.rst:142
msgid "``>=19.0``"
msgstr "``>=19.0``"

#: ../source/specifications/platform-compatibility-tags.rst:142
msgid "``>=19.3``"
msgstr "``>=19.3``"

#: ../source/specifications/platform-compatibility-tags.rst:142
msgid "``>=20.3``"
msgstr "``>=20.3``"

#: ../source/specifications/platform-compatibility-tags.rst:143
msgid "auditwheel"
msgstr "auditwheel"

#: ../source/specifications/platform-compatibility-tags.rst:143
msgid "``>=1.0.0``"
msgstr "``>=1.0.0``"

#: ../source/specifications/platform-compatibility-tags.rst:143
msgid "``>=2.0.0``"
msgstr "``>=2.0.0``"

#: ../source/specifications/platform-compatibility-tags.rst:143
msgid "``>=3.0.0``"
msgstr "``>=3.0.0``"

#: ../source/specifications/platform-compatibility-tags.rst:143
msgid "``>=3.3.0`` [#]_"
msgstr "``>=3.3.0`` [#]_"

#: ../source/specifications/platform-compatibility-tags.rst:146
msgid "Only support for ``manylinux_2_24`` has been added in auditwheel 3.3.0"
msgstr "Nur subteno pri ``manylinux_2_24`` estis aldonita al auditwheel 3.3.0"

#: ../source/specifications/platform-compatibility-tags.rst:150
msgid "``musllinux``"
msgstr "``musllinux``"

#: ../source/specifications/platform-compatibility-tags.rst:152
#, fuzzy
#| msgid ""
#| "The ``musllinux`` family of tags is similar to ``manylinux``, but for "
#| "Linux platforms that use the musl_ libc rather than glibc (a prime "
#| "example being Alpine Linux). The schema is :file:`musllinux_{x}_{y}_{arch}"
#| "``, supporting musl ``x.y`` and higher on the architecture ``arch``."
msgid ""
"The ``musllinux`` family of tags is similar to ``manylinux``, but for Linux "
"platforms that use the musl_ libc rather than glibc (a prime example being "
"Alpine Linux). The schema is :file:`musllinux_{x}_{y}_{arch}`, supporting "
"musl ``x.y`` and higher on the architecture ``arch``."
msgstr ""
"La familio ``musllinux`` de etikedoj similas al ``manylinux``, sed temas pri "
"Linux-platformoj uzantan la C-bibliotekon musl_ anstataŭ glibc (unu ekzemplo "
"estas Alpine Linux). La skemo estas :file:`musllinux_x_y_arch`, subtenanta "
"musl ``x.y`` kaj pli novajn sur la arĥitekturo ``arch``."

#: ../source/specifications/platform-compatibility-tags.rst:157
msgid ""
"The musl version values can be obtained by executing the musl libc shared "
"library the Python interpreter is currently running on, and parsing the "
"output:"
msgstr ""
"Oni eltrovas la versian valoron de ``musl`` rulante la komunan C-bibliotekon "
"de ``musl`` uzatan de la Python-interpretilo kaj analizante la eligaĵon:"

#: ../source/specifications/platform-compatibility-tags.rst:188
msgid ""
"There are currently two possible ways to find the musl library’s location "
"that a Python interpreter is running on, either with the system ldd_ "
"command, or by parsing the ``PT_INTERP`` section’s value from the "
"executable’s ELF_ header."
msgstr ""
"Aktuale ekzistas du manieroj por trovi la lokon de la biblioteko musl sur "
"kiu Python-interpretilo ruliĝas: aŭ per la sistema komando ldd_, aŭ per "
"analizado de la valoro de la sekcio ``PT_INTERP`` en la ELF_-ĉapo de la "
"ruleblaĵo."

#: ../source/specifications/platform-compatibility-tags.rst:197
msgid ""
"macOS uses the ``macosx`` family of tags (the ``x`` suffix is a historical "
"artefact of Apple's official macOS naming scheme). The schema for "
"compatibility tags is :file:`macosx_{x}_{y}_{arch}`, indicating that the "
"wheel is compatible with macOS ``x.y`` or later on the architecture ``arch``."
msgstr ""
"macOS uzas la etikedo-familion ``macosx`` (la sufikso ``x`` estas pro la "
"oficiala nomskemo de Apple). La skemo de etikedoj pri kongrueco estas :file:"
"`macosx_{x}_{y}_{arch}`, indikante, ke la wheel kongruas kun macOS de versio "
"``x.y`` aŭ pli nova sur la arĥitekturo ``arch``."

#: ../source/specifications/platform-compatibility-tags.rst:202
msgid ""
"The values of ``x`` and ``y`` correspond to the major and minor version "
"number of the macOS release, respectively. They must both be positive "
"integers, with the ``x`` value being ``>= 10``. The version number always "
"includes a major *and* minor version, even if Apple's official version "
"numbering only refers to the major value. For example, ``macosx_11_0_arm64`` "
"indicates compatibility with macOS 11 or later."
msgstr ""
"La valoroj de ``x`` kaj ``y`` respondas al la maĵora kaj minora versio-"
"numeroj de macOS respektive. Ili ambaŭ devas esti pozitivaj entjeroj, kaj "
"``x`` devas esti ne malpli granda ol ``10``. La versio-numero ĉiam "
"inkluzivas *kaj* maĵoran *kaj* minoran versiojn, eĉ se oficiala versio de "
"Apple nur uzas la maĵoran numeron. Ekzemple, ``macosx_11_0_arm64`` indikas "
"kongruecon kun macOS 11 aŭ pli nova."

#: ../source/specifications/platform-compatibility-tags.rst:209
msgid ""
"macOS binaries can be compiled for a single architecture, or can include "
"support for multiple architectures in the same binary (sometimes called "
"\"fat\" binaries). To indicate support for a single architecture, the value "
"of ``arch`` must match the value of :py:func:`platform.machine()` on the "
"system. To indicate support multiple architectures, the ``arch`` tag should "
"be an identifier from the following list that describes the set of supported "
"architectures:"
msgstr ""
"Duumaĵo por macOS povas subteni aŭ nur unu arĥitekturon aŭ plurajn "
"arĥitekturojn (per «grasa» duumaĵo). Por indiki subtenon de unu arĥitekturo, "
"la valoro de ``arch`` devas egali la valoron de :py:func:`platform."
"machine()` sur la sistemo. Por indiki subtenon de pluraj arĥitekturoj, la "
"etikedo ``arch`` estu identigilo el la jena listo de aroj de subtenataj "
"arĥitekturoj:"

#: ../source/specifications/platform-compatibility-tags.rst:217
msgid "``arch``"
msgstr "``arch``"

#: ../source/specifications/platform-compatibility-tags.rst:217
msgid "Architectures supported"
msgstr "Subtenataj arĥitekturoj"

#: ../source/specifications/platform-compatibility-tags.rst:219
msgid "``universal2``"
msgstr "``universal2``"

#: ../source/specifications/platform-compatibility-tags.rst:219
msgid "``arm64``, ``x86_64``"
msgstr "``arm64``, ``x86_64``"

#: ../source/specifications/platform-compatibility-tags.rst:220
msgid "``universal``"
msgstr "``universal``"

#: ../source/specifications/platform-compatibility-tags.rst:220
msgid "``i386``, ``ppc``, ``ppc64``, ``x86_64``"
msgstr "``i386``, ``ppc``, ``ppc64``, ``x86_64``"

#: ../source/specifications/platform-compatibility-tags.rst:221
msgid "``intel``"
msgstr "``intel``"

#: ../source/specifications/platform-compatibility-tags.rst:221
msgid "``i386``, ``x86_64``"
msgstr "``i386``, ``x86_64``"

#: ../source/specifications/platform-compatibility-tags.rst:222
msgid "``fat``"
msgstr "``fat``"

#: ../source/specifications/platform-compatibility-tags.rst:222
msgid "``i386``, ``ppc``"
msgstr "``i386``, ``ppc``"

#: ../source/specifications/platform-compatibility-tags.rst:223
msgid "``fat3``"
msgstr "``fat3``"

#: ../source/specifications/platform-compatibility-tags.rst:223
msgid "``i386``, ``ppc``, ``x86_64``"
msgstr "``i386``, ``ppc``, ``x86_64``"

#: ../source/specifications/platform-compatibility-tags.rst:224
msgid "``fat64``"
msgstr "``fat64``"

#: ../source/specifications/platform-compatibility-tags.rst:224
msgid "``ppc64``, ``x86_64``"
msgstr "``ppc64``, ``x86_64``"

#: ../source/specifications/platform-compatibility-tags.rst:227
msgid ""
"The minimum supported macOS version may also be constrained by architecture. "
"For example, macOS 11 (Big Sur) was the first release to support arm64. "
"These additional constraints are enforced transparently by the macOS "
"compilation toolchain when building binaries that support multiple "
"architectures."
msgstr ""
"La minimuma subtenata versio de macOS ankaŭ povas esti limigita de la "
"arĥitekturo. Ekzemple, macOS 11 (Big Sur) estis la unua versio subtenanta "
"arm64. Tiaj limigoj estas aŭtomate devigitaj de la macOS-tradukilaro dum "
"konstruado de duumaĵoj por pluraj arĥitekturoj."

#: ../source/specifications/platform-compatibility-tags.rst:235
msgid "Android"
msgstr "Android"

#: ../source/specifications/platform-compatibility-tags.rst:237
msgid ""
"Android uses the schema :file:`android_{apilevel}_{abi}`, indicating "
"compatibility with the given Android API level or later, on the given ABI. "
"For example, ``android_27_arm64_v8a`` indicates support for API level 27 or "
"later, on ``arm64_v8a`` devices. Android makes no distinction between "
"physical devices and emulated devices."
msgstr ""
"Android uzas la skemon :file:`android_{apilevel}_{abi}`, indikantan "
"kongruecon kun la donita API-nivelo de Android aŭ pli nova nivelo, sur la "
"donita ABI. Ekzemple, ``android_27_arm64_v8a`` indikas subtenon por API-"
"nivelo 27 aŭ pli nova, sur aparato ``arm64_v8a``. Android ne distingas inter "
"reala aparato kaj imitilo."

#: ../source/specifications/platform-compatibility-tags.rst:243
msgid ""
"The API level should be a positive integer. This is *not* the same thing as "
"the user-facing Android version. For example, the release known as Android "
"12 (code named \"Snow Cone\") uses API level 31 or 32, depending on the "
"specific Android version in use. Android's release documentation contains "
"the `full list of Android versions and their corresponding API levels "
"<https://developer.android.com/tools/releases/platforms>`__."
msgstr ""
"La API-nivelo estu pozitiva entjero. Tio *ne* egalas la version de Android "
"konata de la uzanto. Ekzemple, la eldono Android 12 (kodnome «Snow Cone») "
"uzas la API-nivelon 31 aŭ 32, depende de la specifa versio de Android. La "
"dokumentaro pri eldonoj de Android inkluzivas la `plenan liston de versioj "
"de Android kaj la respondantaj API-niveloj <https://developer.android.com/"
"tools/releases/platforms>`__."

#: ../source/specifications/platform-compatibility-tags.rst:250
msgid ""
"There are 4 `supported ABIs <https://developer.android.com/ndk/guides/"
"abis>`__. Normalized according to the rules above, they are:"
msgstr ""
"Ekzistas kvar `subtenataj ABI-oj <https://developer.android.com/ndk/guides/"
"abis>`__. Jen la ABI-oj normigitaj laŭ la ĉi-supraj reguloj:"

#: ../source/specifications/platform-compatibility-tags.rst:253
msgid "``armeabi_v7a``"
msgstr "``armeabi_v7a``"

#: ../source/specifications/platform-compatibility-tags.rst:254
msgid "``arm64_v8a``"
msgstr "``arm64_v8a``"

#: ../source/specifications/platform-compatibility-tags.rst:255
msgid "``x86``"
msgstr "``x86``"

#: ../source/specifications/platform-compatibility-tags.rst:258
msgid ""
"Virtually all current physical devices use one of the ARM architectures. "
"``x86`` and ``x86_64`` are supported for use in the emulator. ``x86`` has "
"not been supported as a development platform since 2020, and no new emulator "
"images have been released since then."
msgstr ""
"Preskaŭ ĉiuj realaj aparatoj uzas unu el la ARM-arĥitekturoj. ``x86`` kaj "
"``x86_64`` estas subtenataj por uzado en imitilo. ``x86`` ne plu estas "
"subtenata kiel evoluada platformo ekde 2020, kaj nova imitilo ne eldoniĝis "
"post 2020."

#: ../source/specifications/platform-compatibility-tags.rst:266
msgid "iOS"
msgstr "iOS"

#: ../source/specifications/platform-compatibility-tags.rst:268
msgid ""
"iOS uses the schema :file:`ios_{x}_{y}_{arch}_{sdk}`, indicating "
"compatibility with iOS ``x.y`` or later, on the ``arch`` architecture, using "
"the ``sdk`` SDK."
msgstr ""
"iOS uzas la skemon :file:`ios_{x}_{y}_{arch}_{sdk}`, por kongrueco kun "
"versio ``x.y`` (aŭ pli nova) de iOS, sur la arĥitekturo ``arch``, uzante la "
"SDK ``sdk``."

#: ../source/specifications/platform-compatibility-tags.rst:271
msgid ""
"The value of ``x`` and ``y`` correspond to the major and minor version "
"number of the iOS release, respectively. They must both be positive "
"integers. The version number always includes a major *and* minor version, "
"even if Apple's official version numbering only refers to the major value. "
"For example, a ``ios_13_0_arm64_iphonesimulator`` indicates compatibility "
"with iOS 13 or later."
msgstr ""
"La valoroj de ``x`` kaj ``y`` respondas al la maĵora kaj minora versio-"
"numeroj de iOS respektive. Ili ambaŭ devas esti pozitivaj entjeroj. La "
"versio-numero ĉiam inkluzivas *kaj* maĵoran *kaj* minoran versiojn, eĉ se "
"oficiala versio de Apple nur uzas la maĵoran numeron. Ekzemple, "
"``ios_13_0_arm64_iphonesimulator`` indikas kongruecon kun iOS 13 aŭ pli nova."

#: ../source/specifications/platform-compatibility-tags.rst:277
msgid ""
"The value of ``arch`` must match the value of :py:func:`platform.machine()` "
"on the system."
msgstr ""
"La valoro de ``arch`` devas egali la valoron de :py:func:`platform."
"machine()` sur la sistemo."

#: ../source/specifications/platform-compatibility-tags.rst:280
msgid ""
"The value of ``sdk`` must be either ``iphoneos`` (for physical devices), or "
"``iphonesimulator`` (for device simulators). These SDKs have the same API "
"surface, but are incompatible at the binary level, even if they are running "
"on the same CPU architecture. Code compiled for an arm64 simulator will not "
"run on an arm64 device."
msgstr ""
"La valoro de ``sdk`` devas esti aŭ ``iphoneos`` (por reala aparato), aŭ "
"``iphonesimulator`` (por imitilo de aparato). La SDK-oj havas la saman API-"
"surfacon sed ne kongruas inter si je la duumaĵa nivelo, eĉ se ili uzas la "
"saman ĉefprocesoran arĥitekturon. Kodo tradukita por arm64-imitilo ne "
"ruliĝas sur arm64-aparato."

#: ../source/specifications/platform-compatibility-tags.rst:286
msgid ""
"The combination of :file:`{arch}_{sdk}` is referred to as the \"multiarch\". "
"There are three possible values for multiarch:"
msgstr ""
"La kombinaĵo de :file:`{arch}_{sdk}` nomiĝas la «multarĥitekturo». Ekzistas "
"tri eblaj valoroj de la multarĥitekturo:"

#: ../source/specifications/platform-compatibility-tags.rst:289
msgid ""
"``arm64_iphoneos``, for physical iPhone/iPad devices. This includes every "
"iOS device manufactured since ~2015;"
msgstr ""
"``arm64_iphoneos``, por fizikaj aparatoj iPhone/iPad. Tiuj inkluzivas ĉiajn "
"iOS-aparatojn produktitajn post ~2015;"

#: ../source/specifications/platform-compatibility-tags.rst:291
msgid ""
"``arm64_iphonesimulator``, for simulators running on Apple Silicon macOS "
"hardware; and"
msgstr ""
"``arm64_iphonesimulator``, por imitilo sur aparato Apple Silicon kun macOS; "
"kaj"

#: ../source/specifications/platform-compatibility-tags.rst:293
msgid "``x86_64_iphonesimulator``, for simulators running on x86_64 hardware."
msgstr "``x86_64_iphonesimulator``, por imitilo sur aparato x86_64."

#: ../source/specifications/platform-compatibility-tags.rst:296
msgid "Use"
msgstr "Uzado"

#: ../source/specifications/platform-compatibility-tags.rst:298
msgid ""
"The tags are used by installers to decide which built distribution (if any) "
"to download from a list of potential built distributions. The installer "
"maintains a list of (pyver, abi, arch) tuples that it will support.  If the "
"built distribution's tag is ``in`` the list, then it can be installed."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:304
msgid ""
"It is recommended that installers try to choose the most feature complete "
"built distribution available (the one most specific to the installation "
"environment) by default before falling back to pure Python versions "
"published for older Python releases. Installers are also recommended to "
"provide a way to configure and re-order the list of allowed compatibility "
"tags; for example, a user might accept only the ``*-none-any`` tags to only "
"download built packages that advertise themselves as being pure Python."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:312
msgid ""
"Another desirable installer feature might be to include \"re-compile from "
"source if possible\" as more preferable than some of the compatible but "
"legacy pre-built options."
msgstr ""
"Alia dezirinda funkcio de instalilo eble estas igi «retraduki el fonto se "
"tio eblas» pli preferata ol la kongruaj sed malnovaj antaŭkonstruitaj opcioj."

#: ../source/specifications/platform-compatibility-tags.rst:316
msgid ""
"This example list is for an installer running under CPython 3.3 on a "
"linux_x86_64 system. It is in order from most-preferred (a distribution with "
"a compiled extension module, built for the current version of Python) to "
"least-preferred (a pure-Python distribution built with an older version of "
"Python):"
msgstr ""
"Jen ekzempla listo por instalilo sub CPython 3.3 sur sistemo linux_x86_64, "
"ordigita ekde la plej preferata (distribuo kun tradukita etendaĵa modulo por "
"la aktuala versio de Python) ĝis la malplej preferata (pure Python-a "
"distribuo konstruita per malnova versio de Python):"

#: ../source/specifications/platform-compatibility-tags.rst:322
msgid "cp33-cp33m-linux_x86_64"
msgstr "cp33-cp33m-linux_x86_64"

#: ../source/specifications/platform-compatibility-tags.rst:323
msgid "cp33-abi3-linux_x86_64"
msgstr "cp33-abi3-linux_x86_64"

#: ../source/specifications/platform-compatibility-tags.rst:324
msgid "cp3-abi3-linux_x86_64"
msgstr "cp3-abi3-linux_x86_64"

#: ../source/specifications/platform-compatibility-tags.rst:325
msgid "cp33-none-linux_x86_64*"
msgstr "cp33-none-linux_x86_64*"

#: ../source/specifications/platform-compatibility-tags.rst:326
msgid "cp3-none-linux_x86_64*"
msgstr "cp3-none-linux_x86_64*"

#: ../source/specifications/platform-compatibility-tags.rst:327
msgid "py33-none-linux_x86_64*"
msgstr "py33-none-linux_x86_64*"

#: ../source/specifications/platform-compatibility-tags.rst:328
msgid "py3-none-linux_x86_64*"
msgstr "py3-none-linux_x86_64*"

#: ../source/specifications/platform-compatibility-tags.rst:329
msgid "cp33-none-any"
msgstr "cp33-none-any"

#: ../source/specifications/platform-compatibility-tags.rst:330
msgid "cp3-none-any"
msgstr "cp3-none-any"

#: ../source/specifications/platform-compatibility-tags.rst:331
msgid "py33-none-any"
msgstr "py33-none-any"

#: ../source/specifications/platform-compatibility-tags.rst:332
msgid "py3-none-any"
msgstr "py3-none-any"

#: ../source/specifications/platform-compatibility-tags.rst:333
msgid "py32-none-any"
msgstr "py32-none-any"

#: ../source/specifications/platform-compatibility-tags.rst:334
msgid "py31-none-any"
msgstr "py31-none-any"

#: ../source/specifications/platform-compatibility-tags.rst:335
msgid "py30-none-any"
msgstr "py30-none-any"

#: ../source/specifications/platform-compatibility-tags.rst:337
msgid ""
"Built distributions may be platform specific for reasons other than C "
"extensions, such as by including a native executable invoked as a subprocess."
msgstr ""
"Konstruita distribuo povas esti platformo-specifa pro kialo alia ol C-"
"etendaĵo, kiel uzo de indiĝena ruleblaĵo alvokita kiel subprocezo."

#: ../source/specifications/platform-compatibility-tags.rst:341
msgid ""
"Sometimes there will be more than one supported built distribution for a "
"particular version of a package.  For example, a packager could release a "
"package tagged ``cp33-abi3-linux_x86_64`` that contains an optional C "
"extension and the same distribution tagged ``py3-none-any`` that does not. "
"The index of the tag in the supported tags list breaks the tie, and the "
"package with the C extension is installed in preference to the package "
"without because that tag appears first in the list."
msgstr ""
"Kelkfoje ekzistas pluraj subtenataj konstruitaj distribuoj por iu versio de "
"pako.  Ekzemple, aŭtoro povus eldoni pakon kun etikedo ``cp33-abi3-"
"linux_x86_64`` enhavantan laŭvolan C-etendaĵon kaj la saman distribuon kun "
"etikedo ``py3-none-any`` sen C-etendaĵo. La indico de la etikedo en la listo "
"de subtenataj etikedoj decidas la instalotan pakon: la pako kun la C-"
"etendaĵo estas instalota prefere al la pako sen ĝi, ĉar tiu etikedo ĉeestas "
"unue en la listo."

#: ../source/specifications/platform-compatibility-tags.rst:350
msgid "Compressed Tag Sets"
msgstr "Densigitaj Etikedaroj"

#: ../source/specifications/platform-compatibility-tags.rst:352
#, fuzzy
#| msgid ""
#| "To allow for compact filenames of bdists that work with more than one "
#| "compatibility tag triple, each tag in a filename can instead be a '.'-"
#| "separated, sorted, set of tags.  For example, pip, a pure-Python package "
#| "that is written to run under Python 2 and 3 with the same source code, "
#| "could distribute a bdist with the tag ``py2.py3-none-any``. The full list "
#| "of simple tags is::"
msgid ""
"To allow for compact filenames of bdists that work with more than one "
"compatibility tag triple, each tag in a filename can instead be a '.'-"
"separated, sorted, collection of tags.  For example, pip, a pure-Python "
"package that is written to run under Python 2 and 3 with the same source "
"code, could distribute a bdist with the tag ``py2.py3-none-any``. The full "
"list of simple tags is::"
msgstr ""
"Por kompakta dosiernomo de duuma distribuo kongrua kun pluraj kongrueco-"
"etikedaj triopoj, ĉiu etikedo en dosiernomo povas esti anstataŭe «.»-"
"disigita ordigita aro da etikedoj. Ekzemple, pip, kiu estas pure Python-a "
"pako kongrua kun kaj Python 2 kaj 3 kun la sama fontkodo, povus distribui "
"duuman distrubon kun la etikedo ``py2.py3-none-any``. Jen la plena listo de "
"simplaj etikedoj::"

#: ../source/specifications/platform-compatibility-tags.rst:364
msgid ""
"A bdist format that implements this scheme should include the expanded tags "
"in bdist-specific metadata.  This compression scheme can generate large "
"numbers of unsupported tags and \"impossible\" tags that are supported by no "
"Python implementation e.g. \"cp33-cp31u-win64\", so use it sparingly."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:377
msgid "What tags are used by default?"
msgstr "Kiuj etikedoj uziĝas implicite?"

#: ../source/specifications/platform-compatibility-tags.rst:373
msgid ""
"Tools should use the most-preferred architecture dependent tag e.g. ``cp33-"
"cp33m-win32`` or the most-preferred pure python tag e.g. ``py33-none-any`` "
"by default.  If the packager overrides the default it indicates that they "
"intended to provide cross-Python compatibility."
msgstr ""
"Ilo apriore uzu la plej preferata arĥitekturo-dependa etikedo, ekz. ``cp33-"
"cp33m-win32``, aŭ la plej preferata pure Python-a etikedo, ekz. ``py33-none-"
"any``. Se la pakanto modifis la aprioron, tio signifas, ke inter-Python-a "
"kongrueco estas intencita."

#: ../source/specifications/platform-compatibility-tags.rst:387
msgid ""
"What tag do I use if my distribution uses a feature exclusive to the newest "
"version of Python?"
msgstr ""
"Kiun etikedon mi uzu, se mia distribuo uzas funkcion nur en la nova versio "
"de Python?"

#: ../source/specifications/platform-compatibility-tags.rst:380
msgid ""
"Compatibility tags aid installers in selecting the *most compatible* build "
"of a *single version* of a distribution. For example, when there is no "
"Python 3.3 compatible build of ``beaglevote-1.2.0`` (it uses a Python 3.4 "
"exclusive feature) it may still use the ``py3-none-any`` tag instead of the "
"``py34-none-any`` tag. A Python 3.3 user must combine other qualifiers, such "
"as a requirement for the older release ``beaglevote-1.1.0`` that does not "
"use the new feature, to get a compatible build."
msgstr ""
"Etikedoj pri kongrueco helpas instalilojn elekti la *plej kongruan* "
"konstruon de *unu versio* de distribuo. Ekzemple, se ne ekzistas Python-3.3-"
"kongruan konstruon de ``beaglevote-1.2.0`` (ĉar ĝi uzas funkcion nur en "
"3.4), ĝi tamen povas uzi la etikedon ``py3-none-any`` anstataŭ la etikedo "
"``py34-none-any``. Uzanto de Python 3.3 devas kombini aliajn kvalifikilojn "
"kiel postulon por la malnova eldono ``beaglevote-1.1.0`` ne uzanta la novan "
"funkcion, por akiri kongruan konstruon."

#: ../source/specifications/platform-compatibility-tags.rst:392
msgid "Why isn't there a ``.`` in the Python version number?"
msgstr "Kial mankas ``.`` en la versia numero de Python?"

#: ../source/specifications/platform-compatibility-tags.rst:390
msgid ""
"CPython has lasted 20+ years without a 3-digit major release. This should "
"continue for some time.  Other implementations may use _ as a delimiter, "
"since both - and . delimit the surrounding filename."
msgstr ""
"CPython daŭris pli ol 20 jarojn sen tricifera maĵora eldono. Tio daŭros "
"longe.  Alia realigo povas uzi ``_`` kiel apartigilon, ĉar kaj ``-`` kaj ``."
"`` apartigas la ĉirkaŭan dosiernomon."

#: ../source/specifications/platform-compatibility-tags.rst:398
msgid ""
"Why normalise hyphens and other non-alphanumeric characters to underscores?"
msgstr ""
"Kial normigi streketojn kaj aliajn ne literciferajn signojn al substrekoj?"

#: ../source/specifications/platform-compatibility-tags.rst:395
msgid ""
"To avoid conflicting with the ``.`` and ``-`` characters that separate "
"components of the filename, and for better compatibility with the widest "
"range of filesystem limitations for filenames (including being usable in URL "
"paths without quoting)."
msgstr ""
"Por averti konfliktojn kun la signoj ``.`` kaj ``-`` apartigantaj "
"komponantojn de la dosiernomo, kaj por kongrueco kun tiom da dosiersistemaj "
"limigoj kiom eblas (inkluzive de uzebleco en retadreso sen kodŝanĝado)."

#: ../source/specifications/platform-compatibility-tags.rst:407
msgid "Why not use special character <X> rather than ``.`` or ``-``?"
msgstr "Kial ne uzi iun specialan signon alian ol ``.`` aŭ ``-``?"

#: ../source/specifications/platform-compatibility-tags.rst:401
msgid ""
"Either because that character is inconvenient or potentially confusing in "
"some contexts (for example, ``+`` must be quoted in URLs, ``~`` is used to "
"denote the user's home directory in POSIX), or because the advantages "
"weren't sufficiently compelling to justify changing the existing reference "
"implementation for the wheel format defined in :pep:`427` (for example, "
"using ``,`` rather than ``.`` to separate components in a compressed tag)."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:412
msgid "Who will maintain the registry of abbreviated implementations?"
msgstr "Kiu mastrumas la registron de mallongigitaj realigoj?"

#: ../source/specifications/platform-compatibility-tags.rst:410
msgid ""
"New two-letter abbreviations can be requested on the python-dev mailing "
"list.  As a rule of thumb, abbreviations are reserved for the current 4 most "
"prominent implementations."
msgstr ""
"Oni povas peti novan duliteran mallongigon ĉe la dissendolisto ``python-"
"dev``.  Ordinare, mallongigoj estas rezervataj por la aktuale plej famaj "
"kvar realigoj."

#: ../source/specifications/platform-compatibility-tags.rst:417
msgid "Does the compatibility tag go into METADATA or PKG-INFO?"
msgstr "Ĉu la kongrueca etikedo troviĝas en METADATA aŭ PKG-INFO?"

#: ../source/specifications/platform-compatibility-tags.rst:415
msgid ""
"No.  The compatibility tag is part of the built distribution's metadata.  "
"METADATA / PKG-INFO should be valid for an entire distribution, not a single "
"build of that distribution."
msgstr ""
"Ne. La etikedo pri kongrueco estas larto de la metadatenoj de la konstruita "
"distribuo. METADATA kaj PKG-INFO estu validaj por la tuta distribuo, ne nur "
"unu konstruo de tiu distribuo."

#: ../source/specifications/platform-compatibility-tags.rst:423
msgid "Why didn't you mention my favorite Python implementation?"
msgstr "Kial vi ne menciis mian preferatan realigon de Python?"

#: ../source/specifications/platform-compatibility-tags.rst:420
msgid ""
"The abbreviated tags facilitate sharing compiled Python code in a public "
"index.  Your Python implementation can use this specification too, but with "
"longer tags. Recall that all \"pure Python\" built distributions just use "
"``py``."
msgstr ""
"La mallongigitaj etikedoj faciligas kunhavigadon de tradukita Python-kodo ĉe "
"publika indekso. Via Python-realigo povas uzi ĉi tiun specifon ankaŭ, sed "
"kun pli longaj etikedoj. Rememoru, ke ĉiu «pure Python-a» konstruita "
"distribuo simple uzas ``py``."

#: ../source/specifications/platform-compatibility-tags.rst:431
msgid ""
"Why is the ABI tag (the second tag) sometimes \"none\" in the reference "
"implementation?"
msgstr ""
"Kial la ABI-etikedo (la dua etikedo) estas kelkfoje «none» en la referenca "
"realigo?"

#: ../source/specifications/platform-compatibility-tags.rst:426
msgid ""
"Since Python 2 does not have an easy way to get to the SOABI (the concept "
"comes from newer versions of Python 3) the reference implementation at the "
"time of writing guesses \"none\".  Ideally it would detect \"py27(d|m|u)\" "
"analogous to newer versions of Python, but in the meantime \"none\" is a "
"good enough way to say \"don't know\"."
msgstr ""
"Ĉar Python 2 ne faciligas akiri la SOABI (la koncepto nur ekekzistis en "
"novaj versioj de Python 3), la nuntempa referenca realigo divenas ``none``. "
"Ideale ĝi detektus ``py27(d|m|u)`` simile al novaj versioj de Python, sed "
"``none`` sufiĉas por indiki nekonatecon."

#: ../source/specifications/platform-compatibility-tags.rst:436
msgid ""
"February 2013: The original version of this specification was approved "
"through :pep:`425`."
msgstr ""
"Februaro 2013: La originala versio de ĉi tiu specifo estis aprobita per :pep:"
"`425`."

#: ../source/specifications/platform-compatibility-tags.rst:438
msgid "January 2016: The ``manylinux1`` tag was approved through :pep:`513`."
msgstr "Januaro 2016: La etikedo ``manylinux1`` estis aprobita per :pep:`513`."

#: ../source/specifications/platform-compatibility-tags.rst:439
msgid "April 2018: The ``manylinux2010`` tag was approved through :pep:`571`."
msgstr ""
"Aprilo 2018: La etikedo ``manylinux2010`` estis aprobita per :pep:`571`."

#: ../source/specifications/platform-compatibility-tags.rst:440
msgid "July 2019: The ``manylinux2014`` tag was approved through :pep:`599`."
msgstr ""
"Julio 2019: La etikedo ``manylinux2014`` estis aprobita per :pep:`599`."

#: ../source/specifications/platform-compatibility-tags.rst:441
msgid ""
"November 2019: The ``manylinux_x_y`` perennial tag was approved through :pep:"
"`600`."
msgstr ""
"Novembro 2019: La ĉiama etikedo ``manylinux_x_y`` estis aprobita per :pep:"
"`600`."

#: ../source/specifications/platform-compatibility-tags.rst:443
msgid "April 2021: The ``musllinux_x_y`` tag was approved through :pep:`656`."
msgstr ""
"Aprilo 2021: La etikedo ``musllinux_x_y`` estis aprobita per :pep:`656`."

#: ../source/specifications/platform-compatibility-tags.rst:444
msgid "December 2023: The tags for iOS were approved through :pep:`730`."
msgstr "Decembro 2023: La etikedoj pri iOS estis aprobitaj per :pep:`730`."

#: ../source/specifications/platform-compatibility-tags.rst:445
msgid "March 2024: The tags for Android were approved through :pep:`738`."
msgstr "Marto 2024: La etikedoj pri Android estis aprobitaj per :pep:`738`."

#: ../source/specifications/project-status-markers.rst:5
#, fuzzy
#| msgid "Project Summaries"
msgid "Project Status Markers"
msgstr "Projektaj Resumoj"

#: ../source/specifications/project-status-markers.rst:9
#, fuzzy
#| msgid "This specification was originally defined in :pep:`740`."
msgid "This specification was originally defined in :pep:`792`."
msgstr "Ĉi tiu specifo estis originale difinita en :pep:`740`."

#: ../source/specifications/project-status-markers.rst:14
#, fuzzy
#| msgid ""
#| ":pep:`740` includes changes to the HTML and JSON index APIs. These "
#| "changes are documented in the :ref:`simple-repository-api` under :ref:"
#| "`simple-repository-api-base` and :ref:`json-serialization`."
msgid ""
":pep:`792` includes changes to the HTML and JSON index APIs. These changes "
"are documented in the :ref:`simple-repository-api` under :ref:`HTML - "
"Project Detail <simple-repository-html-project-detail>` and :ref:`JSON - "
"Project Detail <simple-repository-json-project-detail>`."
msgstr ""
":pep:`740` inkluzivas ŝanĝojn pri la indeksaj API-oj en HTML kaj JSON. Tiuj "
"ŝanĝoj estas priskribitaj en :ref:`simple-repository-api` sub :ref:`simple-"
"repository-api-base` kaj :ref:`json-serialization`."

#: ../source/specifications/project-status-markers.rst:22
msgid ""
"A project always has exactly one status. If no status is explicitly noted, "
"then the project is considered to be in the ``active`` state."
msgstr ""

#: ../source/specifications/project-status-markers.rst:25
msgid ""
"Indices **MAY** implement any subset of the status markers specified, as "
"applicable to their needs."
msgstr ""

#: ../source/specifications/project-status-markers.rst:28
msgid ""
"This standard does not prescribe *which* principals (i.e. project "
"maintainers, index administrators, etc.) are allowed to set and unset which "
"statuses."
msgstr ""

#: ../source/specifications/project-status-markers.rst:32
msgid "``active``"
msgstr ""

#: ../source/specifications/project-status-markers.rst:34
msgid ""
"Description: The project is active. This is the default status for a project."
msgstr ""

#: ../source/specifications/project-status-markers.rst:36
#: ../source/specifications/project-status-markers.rst:49
#: ../source/specifications/project-status-markers.rst:65
#: ../source/specifications/project-status-markers.rst:83
msgid "Index semantics:"
msgstr ""

#: ../source/specifications/project-status-markers.rst:38
msgid ""
"The index hosting the project **MUST** allow uploads of new distributions to "
"the project."
msgstr ""

#: ../source/specifications/project-status-markers.rst:40
#: ../source/specifications/project-status-markers.rst:53
msgid ""
"The index **MUST** offer existing distributions of the project for download."
msgstr ""

#: ../source/specifications/project-status-markers.rst:42
#, fuzzy
#| msgid "Installation"
msgid "Installer semantics: none."
msgstr "Instalado"

#: ../source/specifications/project-status-markers.rst:45
#, fuzzy
#| msgid "``arch``"
msgid "``archived``"
msgstr "``arch``"

#: ../source/specifications/project-status-markers.rst:47
msgid "Description: The project does not expect to be updated in the future."
msgstr ""

#: ../source/specifications/project-status-markers.rst:51
#: ../source/specifications/project-status-markers.rst:67
msgid ""
"The index hosting the project **MUST NOT** allow uploads of new "
"distributions to the project."
msgstr ""

#: ../source/specifications/project-status-markers.rst:55
#: ../source/specifications/project-status-markers.rst:71
#: ../source/specifications/project-status-markers.rst:87
#, fuzzy
#| msgid "Installers"
msgid "Installer semantics:"
msgstr "Instaliloj"

#: ../source/specifications/project-status-markers.rst:57
msgid "Installers **MAY** produce warnings about a project's archival."
msgstr ""

#: ../source/specifications/project-status-markers.rst:60
msgid "``quarantined``"
msgstr ""

#: ../source/specifications/project-status-markers.rst:62
msgid ""
"Description: The project is considered generally unsafe for use, e.g. due to "
"malware."
msgstr ""

#: ../source/specifications/project-status-markers.rst:69
msgid ""
"The index **MUST NOT** offer any distributions of the project for download."
msgstr ""

#: ../source/specifications/project-status-markers.rst:73
msgid ""
"Installers **MAY** produce warnings about a project's quarantine, although "
"doing so is effectively moot (as the index will not offer any distributions "
"for installation)."
msgstr ""

#: ../source/specifications/project-status-markers.rst:78
#, fuzzy
#| msgid "Deprecated"
msgid "``deprecated``"
msgstr "Evitindaj"

#: ../source/specifications/project-status-markers.rst:80
msgid ""
"Description: The project is considered obsolete, and may have been "
"superseded by another project."
msgstr ""

#: ../source/specifications/project-status-markers.rst:85
msgid "This status shares the same semantics as ``active``."
msgstr ""

#: ../source/specifications/project-status-markers.rst:89
msgid "Installers **MAY** produce warnings about a project's deprecation."
msgstr ""

#: ../source/specifications/pylock-toml.rst:6
msgid "``pylock.toml`` Specification"
msgstr "La normo pri ``pyproject.toml``"

#: ../source/specifications/pylock-toml.rst:8
msgid ""
"The ``pylock.toml`` file format is for specifying dependencies to enable "
"reproducible installation in a Python environment."
msgstr ""

#: ../source/specifications/pylock-toml.rst:11
#, fuzzy
#| msgid "This specification was originally defined in :pep:`753`."
msgid "This specification was originally defined in :pep:`751`."
msgstr "Ĉi tiu specifo estis originale difinita en :pep:`753`."

#: ../source/specifications/pylock-toml.rst:16
msgid "File Name"
msgstr "Dosiernomo"

#: ../source/specifications/pylock-toml.rst:18
msgid ""
"A lock file MUST be named :file:`pylock.toml` or match the regular "
"expression ``r\"^pylock\\.([^.]+)\\.toml$\"`` if a name for the lock file is "
"desired or if multiple lock files exist (i.e. the regular expression "
"``r\"^pylock\\.([^.]+\\.)?toml$\"`` for any file name). The prefix and "
"suffix of a named file MUST be lowercase when possible, for easy detection "
"and removal, e.g.:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:30
msgid ""
"The expectation is that services that automatically install from lock files "
"will search for:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:33
msgid "The lock file with the service's name and doing the default install"
msgstr ""

#: ../source/specifications/pylock-toml.rst:34
msgid ""
"A multi-use :file:`pylock.toml` with a dependency group with the name of the "
"service"
msgstr ""

#: ../source/specifications/pylock-toml.rst:35
msgid "The default install of :file:`pylock.toml`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:37
msgid ""
"E.g. a cloud host service named \"spam\" would first look for :file:`pylock."
"spam.toml` to install from, and if that file didn't exist then install from :"
"file:`pylock.toml` and look for a dependency group named \"spam\" to use if "
"present."
msgstr ""

#: ../source/specifications/pylock-toml.rst:42
msgid ""
"The lock file(s) SHOULD be located in the directory as appropriate for the "
"scope of the lock file. Locking against a single :file:`pyproject.toml`, for "
"instance, would place the :file:`pylock.toml` in the same directory. If the "
"lock file covered multiple projects in a monorepo, then the expectation is "
"the :file:`pylock.toml` file would be in the directory that held all the "
"projects being locked."
msgstr ""

#: ../source/specifications/pylock-toml.rst:53
msgid "The format of the file is TOML_."
msgstr "La dosierformo de la dosiero estas TOML_."

#: ../source/specifications/pylock-toml.rst:55
msgid ""
"Tools SHOULD write their lock files in a consistent way to minimize noise in "
"diff output. Keys in tables -- including the top-level table -- SHOULD be "
"recorded in a consistent order (if inspiration is desired, this "
"specification has tried to write down keys in a logical order). As well, "
"tools SHOULD sort arrays in consistent order. Usage of inline tables SHOULD "
"also be kept consistent."
msgstr ""

#: ../source/specifications/pylock-toml.rst:65
msgid "``lock-version``"
msgstr "``lock-version``"

#: ../source/specifications/pylock-toml.rst:67
msgid "**Type**: string; value of ``\"1.0\"``"
msgstr ""

#: ../source/specifications/pylock-toml.rst:68
#: ../source/specifications/pylock-toml.rst:174
#: ../source/specifications/pylock-toml.rst:189
#: ../source/specifications/pylock-toml.rst:202
#: ../source/specifications/pylock-toml.rst:298
#: ../source/specifications/pylock-toml.rst:348
#: ../source/specifications/pylock-toml.rst:397
#: ../source/specifications/pylock-toml.rst:494
#: ../source/specifications/pylock-toml.rst:689
msgid "**Required?**: yes"
msgstr "**Postulata?**: jes"

#: ../source/specifications/pylock-toml.rst:69
msgid "**Inspiration**: :ref:`core-metadata-metadata-version`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:70
msgid "Record the file format version that the file adheres to."
msgstr ""

#: ../source/specifications/pylock-toml.rst:71
msgid ""
"This PEP specifies the initial version -- and only valid value until future "
"updates to the standard change it -- as ``\"1.0\"``."
msgstr ""

#: ../source/specifications/pylock-toml.rst:73
msgid ""
"If a tool supports the major version but not the minor version, a tool "
"SHOULD warn when an unknown key is seen."
msgstr ""

#: ../source/specifications/pylock-toml.rst:75
msgid "If a tool doesn't support a major version, it MUST raise an error."
msgstr ""

#: ../source/specifications/pylock-toml.rst:81
msgid "``environments``"
msgstr "``environments``"

#: ../source/specifications/pylock-toml.rst:83
#: ../source/specifications/pylock-toml.rst:110
#: ../source/specifications/pylock-toml.rst:132
#: ../source/specifications/pylock-toml.rst:154
#, fuzzy
#| msgid "TOML_ type: array of strings"
msgid "**Type**: Array of strings"
msgstr "Tipo de TOML_: listo de signoĉenoj"

#: ../source/specifications/pylock-toml.rst:84
#: ../source/specifications/pylock-toml.rst:98
#: ../source/specifications/pylock-toml.rst:213
#: ../source/specifications/pylock-toml.rst:230
#: ../source/specifications/pylock-toml.rst:243
#: ../source/specifications/pylock-toml.rst:255
#: ../source/specifications/pylock-toml.rst:334
#: ../source/specifications/pylock-toml.rst:362
#: ../source/specifications/pylock-toml.rst:435
#: ../source/specifications/pylock-toml.rst:469
#: ../source/specifications/pylock-toml.rst:482
#: ../source/specifications/pylock-toml.rst:519
#: ../source/specifications/pylock-toml.rst:674
#: ../source/specifications/pylock-toml.rst:700
#: ../source/specifications/pylock-toml.rst:715
msgid "**Required?**: no"
msgstr "**Postulata?**: ne"

#: ../source/specifications/pylock-toml.rst:85
#: ../source/specifications/pylock-toml.rst:520
#: ../source/specifications/pylock-toml.rst:538
msgid "**Inspiration**: uv_"
msgstr ""

#: ../source/specifications/pylock-toml.rst:86
msgid ""
"A list of :ref:`dependency-specifiers-environment-markers` for which the "
"lock file is considered compatible with."
msgstr ""

#: ../source/specifications/pylock-toml.rst:88
msgid ""
"Tools SHOULD write exclusive/non-overlapping environment markers to ease in "
"understanding."
msgstr ""

#: ../source/specifications/pylock-toml.rst:97
#: ../source/specifications/pylock-toml.rst:173
#: ../source/specifications/pylock-toml.rst:201
#: ../source/specifications/pylock-toml.rst:212
#: ../source/specifications/pylock-toml.rst:229
#: ../source/specifications/pylock-toml.rst:242
#: ../source/specifications/pylock-toml.rst:308
#: ../source/specifications/pylock-toml.rst:319
#: ../source/specifications/pylock-toml.rst:333
#: ../source/specifications/pylock-toml.rst:347
#: ../source/specifications/pylock-toml.rst:361
#: ../source/specifications/pylock-toml.rst:396
#: ../source/specifications/pylock-toml.rst:518
#: ../source/specifications/pylock-toml.rst:551
#: ../source/specifications/pylock-toml.rst:620
#: ../source/specifications/pylock-toml.rst:688
#, fuzzy
#| msgid "TOML_ type: string"
msgid "**Type**: string"
msgstr "Tipo de TOML_: signoĉeno"

#: ../source/specifications/pylock-toml.rst:99
#: ../source/specifications/pylock-toml.rst:190
#: ../source/specifications/pylock-toml.rst:256
#: ../source/specifications/pylock-toml.rst:555
#: ../source/specifications/pylock-toml.rst:608
#: ../source/specifications/pylock-toml.rst:624
msgid "**Inspiration**: PDM_, Poetry_, uv_"
msgstr ""

#: ../source/specifications/pylock-toml.rst:100
msgid ""
"Specifies the :ref:`core-metadata-requires-python` for the minimum Python "
"version compatible for any environment supported by the lock file (i.e. the "
"minimum viable Python version for the lock file)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:111
#: ../source/specifications/pylock-toml.rst:133
#: ../source/specifications/pylock-toml.rst:155
msgid "**Required?**: no; defaults to ``[]``"
msgstr "**Postulata?** ne, apriore ``[]``"

#: ../source/specifications/pylock-toml.rst:112
msgid "**Inspiration**: :ref:`core-metadata-provides-extra`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:113
msgid ""
"The list of :ref:`extras <core-metadata-provides-extra>` supported by this "
"lock file."
msgstr ""

#: ../source/specifications/pylock-toml.rst:115
#: ../source/specifications/pylock-toml.rst:138
msgid ""
"Lockers MAY choose to not support writing lock files that support extras and "
"dependency groups (i.e. tools may only support exporting a single-use lock "
"file)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:118
msgid "Tools supporting extras MUST also support dependency groups."
msgstr ""

#: ../source/specifications/pylock-toml.rst:119
msgid ""
"Tools should explicitly set this key to an empty array to signal that the "
"inputs used to generate the lock file had no extras (e.g. a :ref:`pyproject."
"toml <pyproject-toml-spec>` file had no :ref:`[project.optional-"
"dependencies] <pyproject-toml-optional-dependencies>` table), signalling "
"that the lock file is, in effect, multi-use even if it only looks to be "
"single-use."
msgstr ""

#: ../source/specifications/pylock-toml.rst:130
msgid "``dependency-groups``"
msgstr "``dependency-groups``"

#: ../source/specifications/pylock-toml.rst:134
#: ../source/specifications/pylock-toml.rst:701
#: ../source/specifications/pylock-toml.rst:716
#, fuzzy
#| msgid ":ref:`pyproject-toml-spec`"
msgid "**Inspiration**: :ref:`pyproject-tool-table`"
msgstr ":ref:`pyproject-toml-spec`"

#: ../source/specifications/pylock-toml.rst:135
msgid ""
"The list of :ref:`dependency-groups` publicly supported by this lock file (i."
"e. dependency groups users are expected to be able to specify via a tool's "
"UI)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:141
msgid "Tools supporting dependency groups MUST also support extras."
msgstr ""

#: ../source/specifications/pylock-toml.rst:142
msgid ""
"Tools SHOULD explicitly set this key to an empty array to signal that the "
"inputs used to generate the lock file had no dependency groups (e.g. a :ref:"
"`pyproject.toml <pyproject-toml-spec>` file had no :ref:`[dependency-groups] "
"<dependency-groups>` table), signalling that the lock file is, in effect, "
"multi-use even if it only looks to be single-use."
msgstr ""

#: ../source/specifications/pylock-toml.rst:152
msgid "``default-groups``"
msgstr "``default-groups``"

#: ../source/specifications/pylock-toml.rst:156
msgid "**Inspiration**: Poetry_, PDM_"
msgstr ""

#: ../source/specifications/pylock-toml.rst:157
msgid ""
"The name of synthetic dependency groups to represent what should be "
"installed by default (e.g. what :ref:`[project.dependencies] <pyproject-toml-"
"dependencies>` implicitly represents)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:161
msgid ""
"Meant to be used in situations where :ref:`pylock-packages-marker` "
"necessitates such a group to exist."
msgstr ""

#: ../source/specifications/pylock-toml.rst:163
msgid ""
"The groups listed by this key SHOULD NOT be listed in :ref:`pylock-"
"dependency-groups` as the groups are not meant to be directly exposed to "
"users by name but instead via an installer's UI."
msgstr ""

#: ../source/specifications/pylock-toml.rst:171
msgid "``created-by``"
msgstr "``created-by``"

#: ../source/specifications/pylock-toml.rst:175
msgid "**Inspiration**: Tools with their name in their lock file name"
msgstr ""

#: ../source/specifications/pylock-toml.rst:176
#, fuzzy
#| msgid ""
#| "``INSTALLER``: records the name of the tool used to install the project."
msgid "Records the name of the tool used to create the lock file."
msgstr ""
"``INSTALLER``: registras la nomon de la ilo uzita por instali la projekton."

#: ../source/specifications/pylock-toml.rst:177
msgid ""
"Tools MAY use the :ref:`pylock-tool` table to record enough details that it "
"can be inferred what inputs were used to create the lock file."
msgstr ""

#: ../source/specifications/pylock-toml.rst:179
msgid ""
"Tools SHOULD record the normalized name of the tool if it is available as a "
"Python package to facilitate finding the tool."
msgstr ""

#: ../source/specifications/pylock-toml.rst:186
msgid "``[[packages]]``"
msgstr "``[[packages]]``"

#: ../source/specifications/pylock-toml.rst:188
#: ../source/specifications/pylock-toml.rst:254
#: ../source/specifications/pylock-toml.rst:605
#: ../source/specifications/pylock-toml.rst:673
#, fuzzy
#| msgid "TOML_ type: array of strings"
msgid "**Type**: array of tables"
msgstr "Tipo de TOML_: listo de signoĉenoj"

#: ../source/specifications/pylock-toml.rst:191
msgid "An array containing all packages that *may* be installed."
msgstr ""

#: ../source/specifications/pylock-toml.rst:192
msgid ""
"Packages MAY be listed multiple times with varying data, but all packages to "
"be installed MUST narrow down to a single entry at install time."
msgstr ""

#: ../source/specifications/pylock-toml.rst:199
msgid "``packages.name``"
msgstr "``packages.name``"

#: ../source/specifications/pylock-toml.rst:203
msgid "**Inspiration**: :ref:`core-metadata-name`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:204
#, fuzzy
#| msgid ""
#| "For comparison purposes, the names should be :ref:`normalized <name-"
#| "normalization>` before comparing."
msgid "The name of the package :ref:`normalized <name-normalization>`."
msgstr ""
"Por komparado, la nomoj estu :ref:`normigitaj <name-normalization>` antaŭ "
"komparado."

#: ../source/specifications/pylock-toml.rst:210
msgid "``packages.version``"
msgstr "``packages.version``"

#: ../source/specifications/pylock-toml.rst:214
msgid "**Inspiration**: :ref:`core-metadata-version`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:215
msgid "The version of the package."
msgstr "La versio de la pako."

#: ../source/specifications/pylock-toml.rst:216
#, fuzzy
#| msgid ""
#| "``subject[0].name`` is the distribution's filename, which **MUST** be a "
#| "valid :ref:`source distribution <source-distribution-format>` or :ref:"
#| "`wheel distribution <binary-distribution-format>` filename."
msgid ""
"The version SHOULD be specified when the version is known to be stable (i.e. "
"when an :ref:`sdist <source-distribution-format>` or :ref:`wheels <binary-"
"distribution-format>` are specified)."
msgstr ""
"``subject[0].name`` estas la dosiernomo de la distribuo, kiu **DEVAS** esti "
"valida dosiernomo por :ref:`fonta distribuo <source-distribution-format>` "
"or :ref:`wheel-distribuo <binary-distribution-format>`."

#: ../source/specifications/pylock-toml.rst:219
msgid ""
"The version MUST NOT be included when it cannot be guaranteed to be "
"consistent with the code used (i.e. when a :ref:`source tree <source-"
"distribution-format-source-tree>` is used)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:227
msgid "``packages.marker``"
msgstr "``packages.marker``"

#: ../source/specifications/pylock-toml.rst:231
msgid "**Inspiration**: PDM_"
msgstr ""

#: ../source/specifications/pylock-toml.rst:232
msgid ""
"The :ref:`environment marker <dependency-specifiers-environment-markers>` "
"which specify when the package should be installed."
msgstr ""

#: ../source/specifications/pylock-toml.rst:240
msgid "``packages.requires-python``"
msgstr "``packages.requires-python``"

#: ../source/specifications/pylock-toml.rst:244
msgid "**Inspiration**: :ref:`core-metadata-requires-python`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:245
msgid ""
"Holds the :ref:`version-specifiers` for Python version compatibility for the "
"package."
msgstr ""

#: ../source/specifications/pylock-toml.rst:252
msgid "``[[packages.dependencies]]``"
msgstr "``[[packages.dependencies]]``"

#: ../source/specifications/pylock-toml.rst:257
msgid ""
"Records the other entries in :ref:`pylock-packages` which are direct "
"dependencies of this package."
msgstr ""

#: ../source/specifications/pylock-toml.rst:259
msgid ""
"Each entry is a table which contains the minimum information required to "
"tell which other package entry it corresponds to where doing a key-by-key "
"comparison would find the appropriate package with no ambiguity (e.g. if "
"there are two entries for the ``spam`` package, then you can include the "
"version number like ``{name = \"spam\", version = \"1.0.0\"}``, or by source "
"like ``{name = \"spam\", vcs = { url = \"...\"}``)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:265
msgid ""
"Tools MUST NOT use this information when doing installation; it is purely "
"informational for auditing purposes."
msgstr ""

#: ../source/specifications/pylock-toml.rst:272
msgid "``[packages.vcs]``"
msgstr "``[packages.vcs]``"

#: ../source/specifications/pylock-toml.rst:274
#: ../source/specifications/pylock-toml.rst:376
#: ../source/specifications/pylock-toml.rst:434
#: ../source/specifications/pylock-toml.rst:535
#: ../source/specifications/pylock-toml.rst:699
#: ../source/specifications/pylock-toml.rst:714
#, fuzzy
#| msgid "TOML_ type: table"
msgid "**Type**: table"
msgstr "Tipo de TOML_: tabelo"

#: ../source/specifications/pylock-toml.rst:275
msgid ""
"**Required?**: no; mutually-exclusive with :ref:`pylock-packages-"
"directory`, :ref:`pylock-packages-archive`, :ref:`pylock-packages-sdist`, "
"and :ref:`pylock-packages-wheels`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:278
msgid "**Inspiration**: :ref:`direct-url-data-structure`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:279
msgid ""
"Record the version control system details for the :ref:`source tree <source-"
"distribution-format-source-tree>` it contains."
msgstr ""

#: ../source/specifications/pylock-toml.rst:282
msgid ""
"Tools MAY choose to not support version control systems, both from a locking "
"and/or installation perspective."
msgstr ""

#: ../source/specifications/pylock-toml.rst:284
msgid "Tools MAY choose to only support a subset of the available VCS types."
msgstr ""

#: ../source/specifications/pylock-toml.rst:285
msgid ""
"Tools SHOULD provide a way for users to opt in/out of using version control "
"systems."
msgstr ""

#: ../source/specifications/pylock-toml.rst:287
msgid ""
"Installation from a version control system is considered originating from a :"
"ref:`direct URL reference <direct-url>`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:294
msgid "``packages.vcs.type``"
msgstr "``packages.vcs.type``"

#: ../source/specifications/pylock-toml.rst:296
msgid ""
"**Type**: string; supported values specified in :ref:`direct-url-data-"
"structure-registered-vcs`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:299
#: ../source/specifications/pylock-toml.rst:310
#: ../source/specifications/pylock-toml.rst:321
#: ../source/specifications/pylock-toml.rst:335
#: ../source/specifications/pylock-toml.rst:349
msgid "**Inspiration**: :ref:`direct-url-data-structure-vcs`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:300
#, fuzzy
#| msgid "Install from version control systems"
msgid "The type of version control system used."
msgstr "Instali el versikontrola sistemo"

#: ../source/specifications/pylock-toml.rst:306
msgid "``packages.vcs.url``"
msgstr "``packages.vcs.url``"

#: ../source/specifications/pylock-toml.rst:309
msgid "**Required?**: if :ref:`pylock-packages-vcs-path` is not specified"
msgstr ""

#: ../source/specifications/pylock-toml.rst:311
#, fuzzy
#| msgid "The source tree"
msgid "The URL_ to the source tree."
msgstr "La fontarbo"

#: ../source/specifications/pylock-toml.rst:317
msgid "``packages.vcs.path``"
msgstr "``packages.vcs.path``"

#: ../source/specifications/pylock-toml.rst:320
msgid "**Required?**: if :ref:`pylock-packages-vcs-url` is not specified"
msgstr ""

#: ../source/specifications/pylock-toml.rst:322
#, fuzzy
#| msgid "The path to the Python interprer of the base installation."
msgid "The path to the local directory of the source tree."
msgstr "La dosierloko de la Python-interpretilo de la baza instalo."

#: ../source/specifications/pylock-toml.rst:323
msgid ""
"If a relative path is used it MUST be relative to the location of this file."
msgstr ""

#: ../source/specifications/pylock-toml.rst:324
msgid ""
"If the path is relative it MAY use POSIX-style path separators explicitly "
"for portability."
msgstr ""

#: ../source/specifications/pylock-toml.rst:331
msgid "``packages.vcs.requested-revision``"
msgstr "``packages.vcs.requested-revision``"

#: ../source/specifications/pylock-toml.rst:336
msgid "The branch/tag/ref/commit/revision/etc. that the user requested."
msgstr ""

#: ../source/specifications/pylock-toml.rst:337
msgid ""
"This is purely informational and to facilitate writing the :ref:`direct-url-"
"data-structure`; it MUST NOT be used to checkout the repository."
msgstr ""

#: ../source/specifications/pylock-toml.rst:345
msgid "``packages.vcs.commit-id``"
msgstr "``packages.vcs.commit-id``"

#: ../source/specifications/pylock-toml.rst:350
msgid "The exact commit/revision number that is to be installed."
msgstr ""

#: ../source/specifications/pylock-toml.rst:351
#, fuzzy
#| msgid ""
#| "A ``commit_id`` key (type ``string``) MUST be present, containing the "
#| "exact commit/revision number that was/is to be installed. If the VCS "
#| "supports commit-hash based revision identifiers, such commit-hash MUST be "
#| "used as ``commit_id`` in order to reference an immutable version of the "
#| "source code."
msgid ""
"If the VCS supports commit-hash based revision identifiers, such a commit-"
"hash, it MUST be used as the commit ID in order to reference an immutable "
"version of the source code."
msgstr ""
"Ŝlosilo ``commit_id`` (de tipo ``string``) DEVAS ekzisti, kies valoro estas "
"la ekzakta revizia numero intalota. Se la versikontrola sistemo subtenas "
"haketaĵo-baza revizio-identigilo, oni DEVAS uzi tian haketaĵon kiel "
"``commit_id`` por referenci nemodifeblan version de la fontokodo."

#: ../source/specifications/pylock-toml.rst:359
msgid "``packages.vcs.subdirectory``"
msgstr "``packages.vcs.subdirectory``"

#: ../source/specifications/pylock-toml.rst:363
msgid "**Inspiration**: :ref:`direct-url-data-structure-subdirectories`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:364
msgid ""
"The subdirectory within the :ref:`source tree <source-distribution-format-"
"source-tree>` where the project root of the project is (e.g. the location of "
"the :ref:`pyproject.toml <pyproject-toml-spec>` file)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:368
msgid "The path MUST be relative to the root of the source tree structure."
msgstr ""

#: ../source/specifications/pylock-toml.rst:374
msgid "``[packages.directory]``"
msgstr "``[packages.directory]``"

#: ../source/specifications/pylock-toml.rst:377
msgid ""
"**Required?**: no; mutually-exclusive with :ref:`pylock-packages-vcs`, :ref:"
"`pylock-packages-archive`, :ref:`pylock-packages-sdist`, and :ref:`pylock-"
"packages-wheels`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:380
#: ../source/specifications/pylock-toml.rst:398
#: ../source/specifications/pylock-toml.rst:412
msgid "**Inspiration**: :ref:`direct-url-data-structure-local-directory`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:381
msgid ""
"Record the local directory details for the :ref:`source tree <source-"
"distribution-format-source-tree>` it contains."
msgstr ""

#: ../source/specifications/pylock-toml.rst:384
msgid ""
"Tools MAY choose to not support local directories, both from a locking and/"
"or installation perspective."
msgstr ""

#: ../source/specifications/pylock-toml.rst:386
msgid ""
"Tools SHOULD provide a way for users to opt in/out of using local "
"directories."
msgstr ""

#: ../source/specifications/pylock-toml.rst:387
msgid ""
"Installation from a directory is considered originating from a :ref:`direct "
"URL reference <direct-url>`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:394
msgid "``packages.directory.path``"
msgstr "``packages.directory.path``"

#: ../source/specifications/pylock-toml.rst:399
msgid "The local directory where the source tree is."
msgstr ""

#: ../source/specifications/pylock-toml.rst:400
msgid ""
"If the path is relative it MUST be relative to the location of the lock file."
msgstr ""

#: ../source/specifications/pylock-toml.rst:401
msgid ""
"If the path is relative it MAY use POSIX-style path separators for "
"portability."
msgstr ""

#: ../source/specifications/pylock-toml.rst:408
msgid "``packages.directory.editable``"
msgstr "``packages.directory.editable``"

#: ../source/specifications/pylock-toml.rst:410
#, fuzzy
#| msgid "*boolean*"
msgid "**Type**: boolean"
msgstr "*boolean*"

#: ../source/specifications/pylock-toml.rst:411
msgid "**Required?**: no; defaults to ``false``"
msgstr "**Postulata?** ne, apriore ``false``"

#: ../source/specifications/pylock-toml.rst:413
msgid ""
"A flag representing whether the source tree was an editable install at lock "
"time."
msgstr ""

#: ../source/specifications/pylock-toml.rst:415
msgid ""
"An installer MAY choose to ignore this flag if user actions or context would "
"make an editable install unnecessary or undesirable (e.g. a container image "
"that will not be mounted for development purposes but instead deployed to "
"production where it would be treated at read-only)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:424
msgid "``packages.directory.subdirectory``"
msgstr "``packages.directory.subdirectory``"

#: ../source/specifications/pylock-toml.rst:426
#: ../source/specifications/pylock-toml.rst:510
msgid "See :ref:`pylock-packages-vcs-subdirectory`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:432
msgid "``[packages.archive]``"
msgstr "``[packages.archive]``"

#: ../source/specifications/pylock-toml.rst:436
msgid "**Inspiration**: :ref:`direct-url-data-structure-archive`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:437
msgid ""
"A direct reference to an archive file to install from (this can include "
"wheels and sdists, as well as other archive formats containing a source "
"tree)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:440
msgid ""
"Tools MAY choose to not support archive files, both from a locking and/or "
"installation perspective."
msgstr ""

#: ../source/specifications/pylock-toml.rst:442
msgid ""
"Tools SHOULD provide a way for users to opt in/out of using archive files."
msgstr ""

#: ../source/specifications/pylock-toml.rst:443
msgid ""
"Installation from an archive file is considered originating from a :ref:"
"`direct URL reference <direct-url>`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:450
msgid "``packages.archive.url``"
msgstr "``packages.archive.url``"

#: ../source/specifications/pylock-toml.rst:452
msgid "See :ref:`pylock-packages-vcs-url`."
msgstr "Vidu :ref:`pylock-packages-vcs-url`."

#: ../source/specifications/pylock-toml.rst:458
msgid "``packages.archive.path``"
msgstr "``packages.archive.path``"

#: ../source/specifications/pylock-toml.rst:460
msgid "See :ref:`pylock-packages-vcs-path`."
msgstr "Vidu :ref:`pylock-packages-vcs-path`."

#: ../source/specifications/pylock-toml.rst:466
msgid "``packages.archive.size``"
msgstr "``packages.archive.size``"

#: ../source/specifications/pylock-toml.rst:468
msgid "**Type**: integer"
msgstr ""

#: ../source/specifications/pylock-toml.rst:470
msgid "**Inspiration**: uv_, :ref:`simple-repository-api`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:471
#, fuzzy
#| msgid "The name of the project."
msgid "The size of the archive file."
msgstr "La nomo de la projekto."

#: ../source/specifications/pylock-toml.rst:472
msgid ""
"Tools SHOULD provide the file size when reasonably possible (e.g. the file "
"size is available via the Content-Length_ header from a HEAD_ HTTP request)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:479
msgid "``packages.archive.upload-time``"
msgstr "``packages.archive.upload-time``"

#: ../source/specifications/pylock-toml.rst:481
msgid "**Type**: datetime"
msgstr ""

#: ../source/specifications/pylock-toml.rst:483
msgid "**Inspiration**: :ref:`simple-repository-api`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:484
#, fuzzy
#| msgid "Where the guide is deployed"
msgid "The time the file was uploaded."
msgstr "Kie la gvidilo disponiĝas"

#: ../source/specifications/pylock-toml.rst:485
msgid "The date and time MUST be recorded in UTC."
msgstr ""

#: ../source/specifications/pylock-toml.rst:491
msgid "``[packages.archive.hashes]``"
msgstr "``[packages.archive.hashes]``"

#: ../source/specifications/pylock-toml.rst:493
#, fuzzy
#| msgid "TOML_ type: array of strings"
msgid "**Type**: Table of strings"
msgstr "Tipo de TOML_: listo de signoĉenoj"

#: ../source/specifications/pylock-toml.rst:495
msgid "**Inspiration**: PDM_, Poetry_, uv_, :ref:`simple-repository-api`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:496
msgid ""
"A table listing known hash values of the file where the key is the hash "
"algorithm and the value is the hash value."
msgstr ""

#: ../source/specifications/pylock-toml.rst:498
msgid "The table MUST contain at least one entry."
msgstr ""

#: ../source/specifications/pylock-toml.rst:499
msgid "Hash algorithm keys SHOULD be lowercase."
msgstr ""

#: ../source/specifications/pylock-toml.rst:500
msgid ""
"At least one secure algorithm from :py:data:`hashlib.algorithms_guaranteed` "
"SHOULD always be included (at time of writing, sha256 specifically is "
"recommended."
msgstr ""

#: ../source/specifications/pylock-toml.rst:508
msgid "``packages.archive.subdirectory``"
msgstr "``packages.archive.subdirectory``"

#: ../source/specifications/pylock-toml.rst:516
msgid "``packages.index``"
msgstr "``packages.index``"

#: ../source/specifications/pylock-toml.rst:521
msgid ""
"The base URL for the package index from :ref:`simple-repository-api` where "
"the sdist and/or wheels were found (e.g. ``https://pypi.org/simple/``)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:523
msgid ""
"When possible, this SHOULD be specified to assist with generating `software "
"bill of materials`_ -- aka SBOMs -- and to assist in finding a file if a URL "
"ceases to be valid."
msgstr ""

#: ../source/specifications/pylock-toml.rst:526
msgid ""
"Tools MAY support installing from an index if the URL recorded for a "
"specific file is no longer valid (e.g. returns a 404 HTTP error code)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:533
msgid "``[packages.sdist]``"
msgstr "``[packages.sdist]``"

#: ../source/specifications/pylock-toml.rst:536
#: ../source/specifications/pylock-toml.rst:606
msgid ""
"**Required?**: no; mutually-exclusive with :ref:`pylock-packages-vcs`, :ref:"
"`pylock-packages-directory`, and :ref:`pylock-packages-archive`"
msgstr ""

#: ../source/specifications/pylock-toml.rst:539
msgid "Details of a :ref:`source-distribution-format-sdist` for the package."
msgstr ""

#: ../source/specifications/pylock-toml.rst:541
msgid ""
"Tools MAY choose to not support sdist files, both from a locking and/or "
"installation perspective."
msgstr ""

#: ../source/specifications/pylock-toml.rst:543
msgid ""
"Tools SHOULD provide a way for users to opt in/out of using sdist files."
msgstr ""

#: ../source/specifications/pylock-toml.rst:549
msgid "``packages.sdist.name``"
msgstr "``packages.sdist.name``"

#: ../source/specifications/pylock-toml.rst:552
msgid ""
"**Required?**: no, not when the last component of :ref:`pylock-packages-"
"sdist-path`/ :ref:`pylock-packages-sdist-url` would be the same value"
msgstr ""

#: ../source/specifications/pylock-toml.rst:556
msgid "The file name of the :ref:`source-distribution-format-sdist` file."
msgstr ""

#: ../source/specifications/pylock-toml.rst:562
msgid "``packages.sdist.upload-time``"
msgstr "``packages.sdist.upload-time``"

#: ../source/specifications/pylock-toml.rst:564
#: ../source/specifications/pylock-toml.rst:633
msgid "See :ref:`pylock-packages-archive-upload-time`."
msgstr "Vidu :ref:`pylock-packages-archive-upload-time`."

#: ../source/specifications/pylock-toml.rst:570
msgid "``packages.sdist.url``"
msgstr "``packages.sdist.url``"

#: ../source/specifications/pylock-toml.rst:572
#: ../source/specifications/pylock-toml.rst:641
msgid "See :ref:`pylock-packages-archive-url`."
msgstr "Vidu :ref:`pylock-packages-archive-url`."

#: ../source/specifications/pylock-toml.rst:578
msgid "``packages.sdist.path``"
msgstr "``packages.sdist.path``"

#: ../source/specifications/pylock-toml.rst:580
#: ../source/specifications/pylock-toml.rst:649
msgid "See :ref:`pylock-packages-archive-path`."
msgstr "Vidu :ref:`pylock-packages-archive-path`."

#: ../source/specifications/pylock-toml.rst:586
msgid "``packages.sdist.size``"
msgstr "``packages.sdist.size``"

#: ../source/specifications/pylock-toml.rst:588
#: ../source/specifications/pylock-toml.rst:657
msgid "See :ref:`pylock-packages-archive-size`."
msgstr "Vidu :ref:`pylock-packages-archive-size`."

#: ../source/specifications/pylock-toml.rst:594
msgid "``packages.sdist.hashes``"
msgstr "``packages.sdist.hashes``"

#: ../source/specifications/pylock-toml.rst:596
#: ../source/specifications/pylock-toml.rst:665
msgid "See :ref:`pylock-packages-archive-hashes`."
msgstr "Vidu :ref:`pylock-packages-archive-hashes`."

#: ../source/specifications/pylock-toml.rst:603
msgid "``[[packages.wheels]]``"
msgstr "``[[packages.wheels]]``"

#: ../source/specifications/pylock-toml.rst:609
msgid ""
"For recording the wheel files as specified by :ref:`binary-distribution-"
"format` for the package."
msgstr ""

#: ../source/specifications/pylock-toml.rst:611
msgid ""
"Tools MUST support wheel files, both from a locking and installation "
"perspective."
msgstr ""

#: ../source/specifications/pylock-toml.rst:618
msgid "``packages.wheels.name``"
msgstr "``packages.wheels.name``"

#: ../source/specifications/pylock-toml.rst:621
msgid ""
"**Required?**: no, not when the last component of :ref:`pylock-packages-"
"wheels-path`/ :ref:`pylock-packages-wheels-url` would be the same value"
msgstr ""

#: ../source/specifications/pylock-toml.rst:625
msgid "The file name of the :ref:`binary-distribution-format` file."
msgstr ""

#: ../source/specifications/pylock-toml.rst:631
msgid "``packages.wheels.upload-time``"
msgstr "``packages.wheels.upload-time``"

#: ../source/specifications/pylock-toml.rst:639
msgid "``packages.wheels.url``"
msgstr "``packages.wheels.url``"

#: ../source/specifications/pylock-toml.rst:647
msgid "``packages.wheels.path``"
msgstr "``packages.wheels.path``"

#: ../source/specifications/pylock-toml.rst:655
msgid "``packages.wheels.size``"
msgstr "``packages.wheels.size``"

#: ../source/specifications/pylock-toml.rst:663
msgid "``packages.wheels.hashes``"
msgstr "``packages.wheels.hashes``"

#: ../source/specifications/pylock-toml.rst:671
msgid "``[[packages.attestation-identities]]``"
msgstr "``[[packages.attestation-identities]]``"

#: ../source/specifications/pylock-toml.rst:675
#: ../source/specifications/pylock-toml.rst:690
#, fuzzy
#| msgid ":ref:`pyproject-toml-spec`"
msgid "**Inspiration**: :ref:`provenance-object`"
msgstr ":ref:`pyproject-toml-spec`"

#: ../source/specifications/pylock-toml.rst:676
msgid ""
"A recording of the attestations for **any** file recorded for this package."
msgstr ""

#: ../source/specifications/pylock-toml.rst:677
msgid "If available, tools SHOULD include the attestation identities found."
msgstr ""

#: ../source/specifications/pylock-toml.rst:678
msgid ""
"Publisher-specific keys are to be included in the table as-is (i.e. top-"
"level), following the spec at :ref:`index-hosted-attestations`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:686
msgid "``packages.attestation-identities.kind``"
msgstr "``packages.attestation-identities.kind``"

#: ../source/specifications/pylock-toml.rst:691
msgid "The unique identity of the Trusted Publisher."
msgstr ""

#: ../source/specifications/pylock-toml.rst:697
msgid "``[packages.tool]``"
msgstr "``[packages.tool]``"

#: ../source/specifications/pylock-toml.rst:702
msgid ""
"Similar usage as that of the :ref:`pylock-tool` table from the :ref:"
"`pyproject-toml-spec`, but at the package version level instead of at the "
"lock file level (which is also available via :ref:`pylock-tool`)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:705
msgid ""
"Data recorded in the table MUST be disposable (i.e. it MUST NOT affect "
"installation)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:712
msgid "``[tool]``"
msgstr "``[tool]``"

#: ../source/specifications/pylock-toml.rst:717
msgid "See :ref:`pylock-packages-tool`."
msgstr "Vidu :ref:`pylock-packages-tool`."

#: ../source/specifications/pylock-toml.rst:731
msgid ""
"The following outlines the steps to be taken to install from a lock file "
"(while the requirements are prescriptive, the general steps and order are a "
"suggestion):"
msgstr ""

#: ../source/specifications/pylock-toml.rst:735
msgid ""
"Gather the extras and dependency groups to install and set ``extras`` and "
"``dependency_groups`` for marker evaluation, respectively."
msgstr ""

#: ../source/specifications/pylock-toml.rst:738
msgid "``extras`` SHOULD be set to the empty set by default."
msgstr ""

#: ../source/specifications/pylock-toml.rst:739
msgid ""
"``dependency_groups`` SHOULD be the set created from :ref:`pylock-default-"
"groups` by default."
msgstr ""

#: ../source/specifications/pylock-toml.rst:742
msgid ""
"Check if the metadata version specified by :ref:`pylock-lock-version` is "
"supported; an error or warning MUST be raised as appropriate."
msgstr ""

#: ../source/specifications/pylock-toml.rst:744
msgid ""
"If :ref:`pylock-requires-python` is specified, check that the environment "
"being installed for meets the requirement; an error MUST be raised if it is "
"not met."
msgstr ""

#: ../source/specifications/pylock-toml.rst:747
msgid ""
"If :ref:`pylock-environments` is specified, check that at least one of the "
"environment marker expressions is satisfied; an error MUST be raised if no "
"expression is satisfied."
msgstr ""

#: ../source/specifications/pylock-toml.rst:750
msgid "For each package listed in :ref:`pylock-packages`:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:752
msgid ""
"If :ref:`pylock-packages-marker` is specified, check if it is satisfied; if "
"it isn't, skip to the next package."
msgstr ""

#: ../source/specifications/pylock-toml.rst:754
msgid ""
"If :ref:`pylock-packages-requires-python` is specified, check if it is "
"satisfied; an error MUST be raised if it isn't."
msgstr ""

#: ../source/specifications/pylock-toml.rst:756
msgid ""
"Check that no other conflicting instance of the package has been slated to "
"be installed; an error about the ambiguity MUST be raised otherwise."
msgstr ""

#: ../source/specifications/pylock-toml.rst:758
msgid ""
"Check that the source of the package is specified appropriately (i.e. there "
"are no conflicting sources in the package entry); an error MUST be raised if "
"any issues are found."
msgstr ""

#: ../source/specifications/pylock-toml.rst:761
msgid "Add the package to the set of packages to install."
msgstr ""

#: ../source/specifications/pylock-toml.rst:763
msgid "For each package to be installed:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:765
msgid "If :ref:`pylock-packages-vcs` is set:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:767
msgid ""
"Clone the repository to the commit ID specified in :ref:`pylock-packages-vcs-"
"commit-id`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:769
msgid ""
":ref:`Build <source-distribution-format-source-tree>` the package, "
"respecting :ref:`pylock-packages-vcs-subdirectory`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:771
#: ../source/specifications/pylock-toml.rst:777
#: ../source/specifications/pylock-toml.rst:786
#: ../source/specifications/pylock-toml.rst:806
#: ../source/specifications/pylock-toml.rst:821
#, fuzzy
#| msgid "Binary distribution format"
msgid ":ref:`Install <binary-distribution-format>`."
msgstr "Duuma distribua formo"

#: ../source/specifications/pylock-toml.rst:773
msgid "Else if :ref:`pylock-packages-directory` is set:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:775
msgid ""
":ref:`Build <source-distribution-format-source-tree>` the package, "
"respecting :ref:`pylock-packages-directory-subdirectory`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:779
msgid "Else if :ref:`pylock-packages-archive` is set:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:781
#: ../source/specifications/pylock-toml.rst:811
msgid "Get the file."
msgstr ""

#: ../source/specifications/pylock-toml.rst:782
msgid ""
"Validate using :ref:`pylock-packages-archive-size` and :ref:`pylock-packages-"
"archive-hashes`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:784
msgid ""
":ref:`Build <source-distribution-format-source-tree>` the package, "
"respecting :ref:`pylock-packages-archive-subdirectory`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:788
msgid "Else if there are entries for :ref:`pylock-packages-wheels`:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:790
msgid ""
"Look for the appropriate wheel file based on :ref:`pylock-packages-wheels-"
"name`; if one is not found then move on to :ref:`pylock-packages-sdist` or "
"an error MUST be raised about a lack of source for the project."
msgstr ""

#: ../source/specifications/pylock-toml.rst:794
msgid "Get the file:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:796
msgid "If :ref:`pylock-packages-wheels-path` is set, use it."
msgstr ""

#: ../source/specifications/pylock-toml.rst:797
msgid ""
"Else if :ref:`pylock-packages-wheels-url` is set, try to use it; optionally "
"tools MAY use :ref:`pylock-packages-index` or some tool-specific mechanism "
"to download the selected wheel file (tools MUST NOT try to change what wheel "
"file to download based on what's available; what file to install should be "
"determined in an offline fashion for reproducibility)."
msgstr ""

#: ../source/specifications/pylock-toml.rst:804
msgid ""
"Validate using :ref:`pylock-packages-wheels-size` and :ref:`pylock-packages-"
"wheels-hashes`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:808
msgid ""
"Else if no :ref:`pylock-packages-wheels` file is found or :ref:`pylock-"
"packages-sdist` is solely set:"
msgstr ""

#: ../source/specifications/pylock-toml.rst:813
msgid "If :ref:`pylock-packages-sdist-path` is set, use it."
msgstr ""

#: ../source/specifications/pylock-toml.rst:814
msgid ""
"Else if :ref:`pylock-packages-sdist-url` is set, try to use it; tools MAY "
"use :ref:`pylock-packages-index` or some tool-specific mechanism to download "
"the file."
msgstr ""

#: ../source/specifications/pylock-toml.rst:818
msgid ""
"Validate using :ref:`pylock-packages-sdist-size` and :ref:`pylock-packages-"
"sdist-hashes`."
msgstr ""

#: ../source/specifications/pylock-toml.rst:820
msgid ":ref:`Build <source-distribution-format-sdist>` the package."
msgstr ""

#: ../source/specifications/pylock-toml.rst:828
msgid "April 2025: Initial version, approved via :pep:`751`."
msgstr "Aprilo 2025: unua versio, aprobita per :pep:`751`."

#: ../source/specifications/pypirc.rst:6
msgid "The :file:`.pypirc` file"
msgstr "La dosiero :file:`.pypirc`"

#: ../source/specifications/pypirc.rst:8
msgid ""
"A :file:`.pypirc` file allows you to define the configuration for :term:"
"`package indexes <Package Index>` (referred to here as \"repositories\"), so "
"that you don't have to enter the URL, username, or password whenever you "
"upload a package with :ref:`twine` or :ref:`flit`."
msgstr ""
"Dosiero :file:`.pypirc` agordas la :term:`pakindekson <Package Index>` (ĉi "
"tie nomitan «deponejo»), por ke oni ne bezonas tajpi la retadreson, "
"salutnomon aŭ pasvorton ĉiun fojon, kiam oni alŝutas pakon per :ref:`twine` "
"aŭ :ref:`flit`."

#: ../source/specifications/pypirc.rst:13
msgid "The format (originally defined by the :ref:`distutils` package) is:"
msgstr "Jen la formo (origine difinita de la pako :ref:`distutils`):"

#: ../source/specifications/pypirc.rst:32
msgid ""
"The ``distutils`` section defines an ``index-servers`` field that lists the "
"name of all sections describing a repository."
msgstr ""
"La sekcio ``distutils`` difinas kampon ``index-servers`` listigantan la "
"nomojn de ĉiuj sekcioj priskribantaj deponejojn."

#: ../source/specifications/pypirc.rst:35
msgid "Each section describing a repository defines three fields:"
msgstr "Ĉiu sekcio priskribanta deponejon difinas tri kampojn:"

#: ../source/specifications/pypirc.rst:37
msgid "``repository``: The URL of the repository."
msgstr "``repository``: La retadreso de la deponejo."

#: ../source/specifications/pypirc.rst:38
msgid "``username``: The registered username on the repository."
msgstr "``username``: La registrita salutnomo ĉe la deponejo."

#: ../source/specifications/pypirc.rst:39
msgid "``password``: The password that will used to authenticate the username."
msgstr "``password``: La pasvorto por aŭtentikigi la salutnomon."

#: ../source/specifications/pypirc.rst:43
msgid ""
"Be aware that this stores your password in plain text. For better security, "
"consider an alternative like `keyring`_, setting environment variables, or "
"providing the password on the command line."
msgstr ""
"Atentu, ke tio konservas vian pasvorton en ordinara teksto. Por pli da "
"sekureco, konsideru alternativojn kiel `keyring`_, agordadon de "
"mediovariabloj, aŭ komandlinian disponigadon de la pasvorto."

#: ../source/specifications/pypirc.rst:47
msgid ""
"Otherwise, set the permissions on :file:`.pypirc` so that only you can view "
"or modify it. For example, on Linux or macOS, run:"
msgstr ""
"Alie, agordu la permesojn pri :file:`'.pypirc` tiel, kiel nur vi rajtas vidi "
"aŭ modifi ĝin. Ekzemple, sur Linux aŭ macOS, rulu la jenon:"

#: ../source/specifications/pypirc.rst:57
msgid "Common configurations"
msgstr "Oftaj agordoj"

#: ../source/specifications/pypirc.rst:61
msgid ""
"These examples apply to :ref:`twine`. Other projects (e.g. :ref:`flit`) also "
"use :file:`.pypirc`, but with different defaults. Please refer to each "
"project's documentation for more details and usage instructions."
msgstr ""
"Tiuj ekzemploj validas por :ref:`twine`. Aliaj projektoj (kiel :ref:`flit`) "
"ankaŭ uzas :file:`.pypirc`, sed kun aliaj implicitaĵoj. Bonvolu legi la "
"dokumentaron de la projekto por pliaj detaloj kaj helpoj pri uzado."

#: ../source/specifications/pypirc.rst:65
msgid ""
"Twine's default configuration mimics a :file:`.pypirc` with repository "
"sections for PyPI and TestPyPI:"
msgstr ""
"La apriora agordo de Twine imitas :file:`.pypirc` kun deponejaj sekcioj por "
"PyPI kaj Prova PyPI:"

#: ../source/specifications/pypirc.rst:81
msgid ""
"Twine will add additional configuration from :file:`$HOME/.pypirc`, the "
"command line, and environment variables to this default configuration."
msgstr ""
"Twine aldonos al la aprioraj agordoj suplementajn agordojn el :file:`$HOME/."
"pypirc`, la komanda linio kaj mediaj variabloj."

#: ../source/specifications/pypirc.rst:85
msgid "Using a PyPI token"
msgstr "Uzi PyPI-ĵetonon"

#: ../source/specifications/pypirc.rst:87
msgid ""
"To set your `API token`_ for PyPI, you can create a :file:`$HOME/.pypirc` "
"similar to:"
msgstr ""
"Por agordi vian `API-ĵetonon <API token>` por PyPI, vi povas krei dosieron :"
"file:`$HOME/.pypirc` similan al la jeno:"

#: ../source/specifications/pypirc.rst:96
msgid ""
"For :ref:`TestPyPI <using-test-pypi>`, add a ``[testpypi]`` section, using "
"the API token from your TestPyPI account."
msgstr ""
"Por :ref:`Prova PyPI <using-test-pypi>`, aldonu sekcion ``[testpypi]`` "
"uzante la API-ĵetonon por via konto ĉe Prova PyPI."

#: ../source/specifications/pypirc.rst:102
msgid "Using another package index"
msgstr "Uzi alian pakindekson"

#: ../source/specifications/pypirc.rst:104
msgid ""
"To configure an additional repository, you'll need to redefine the ``index-"
"servers`` field to include the repository name. Here is a complete example "
"of a :file:`$HOME/.pypirc` for PyPI, TestPyPI, and a private repository:"
msgstr ""
"Por agordi plian deponejon, oni devas redifini la kampon ``index-servers`` "
"inkluzivante la nomon de la deponejo. Jen plena ekzemplo de :file:`$HOME/."
"pypirc` por PyPI, Prova PyPI, kaj privata deponejo:"

#: ../source/specifications/pypirc.rst:131
msgid ""
"Instead of using the ``password`` field, consider saving your API tokens and "
"passwords securely using `keyring`_ (which is installed by Twine):"
msgstr ""
"Anstataŭ uzi la kampon ``password``, konsideru konservi viajn API-ĵetonojn "
"kaj pasvortojn sekure per `keyring`_ (kiun Twine instalas):"

#: ../source/specifications/pyproject-toml.rst:6
msgid "``pyproject.toml`` specification"
msgstr "specifo ``pyproject.toml``"

#: ../source/specifications/pyproject-toml.rst:10
msgid ""
"This is a **technical, formal specification**. For a gentle, user-friendly "
"guide to ``pyproject.toml``, see :ref:`writing-pyproject-toml`."
msgstr ""
"Jen **teĥnika formala specifo**. Por milda, facila gvidilo pri ``pyproject."
"toml``, vidu :ref:`writing-pyproject-toml`."

#: ../source/specifications/pyproject-toml.rst:14
msgid ""
"The ``pyproject.toml`` file acts as a configuration file for packaging-"
"related tools (as well as other tools)."
msgstr ""
"La dosiero ``pyproject.toml`` funkcias kiel agorda dosiero por pakado-"
"rilataj iloj (kaj aliaj iloj)."

#: ../source/specifications/pyproject-toml.rst:17
msgid "This specification was originally defined in :pep:`518` and :pep:`621`."
msgstr "Ĉi tiu specifo estis originale difinta en :pep:`518` kaj :pep:`621`."

#: ../source/specifications/pyproject-toml.rst:19
msgid ""
"The ``pyproject.toml`` file is written in `TOML <https://toml.io>`_. Three "
"tables are currently specified, namely :ref:`[build-system] <pyproject-build-"
"system-table>`, :ref:`[project] <pyproject-project-table>` and :ref:`[tool] "
"<pyproject-tool-table>`. Other tables are reserved for future use (tool-"
"specific configuration should use the ``[tool]`` table)."
msgstr ""
"La dosierformo de la dosiero ``pyproject.toml`` estas `TOML <https://toml."
"io>`_. Jen la tri tabeloj specifitaj aktuale: :ref:`[build-system] "
"<pyproject-build-system-table>`, :ref:`[project] <pyproject-project-table>` "
"kaj :ref:`[tool] <pyproject-tool-table>`. Aliaj tabeloj estas rezervataj por "
"la estonteco (ilo-specifa agordo estu en la tabelo ``[tool]`` )."

#: ../source/specifications/pyproject-toml.rst:29
msgid "Declaring build system dependencies: the ``[build-system]`` table"
msgstr "Deklari konstrusistemaj dependecoj: la tabelo ``[build-system]``"

#: ../source/specifications/pyproject-toml.rst:31
msgid ""
"The ``[build-system]`` table declares any Python level dependencies that "
"must be installed in order to run the project's build system successfully."
msgstr ""
"La tabelo ``[build-system]`` deklaras iujn ajn Python-nivelajn dependecojn "
"instalendajn por sukcese ruli la projektan konstrusistemon."

#: ../source/specifications/pyproject-toml.rst:37
msgid ""
"The ``[build-system]`` table is used to store build-related data. Initially, "
"only one key of the table is valid and is mandatory for the table: "
"``requires``. This key must have a value of a list of strings representing "
"dependencies required to execute the build system. The strings in this list "
"follow the :ref:`version specifier specification <version-specifiers>`."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:44
msgid ""
"An example ``[build-system]`` table for a project built with ``setuptools`` "
"is:"
msgstr ""
"Jen ekzempla tabelo ``[build-system]`` por projekto konstruita per "
"``setuptools``:"

#: ../source/specifications/pyproject-toml.rst:53
msgid ""
"Build tools are expected to use the example configuration file above as "
"their default semantics when a ``pyproject.toml`` file is not present."
msgstr ""
"Konstruilo uzu la ĉi-supran ekzemplan agordan dosieron kiel la implicitan "
"semantikon, se mankas dosiero ``pyproject.toml``."

#: ../source/specifications/pyproject-toml.rst:56
msgid ""
"Tools should not require the existence of the ``[build-system]`` table. A "
"``pyproject.toml`` file may be used to store configuration details other "
"than build-related data and thus lack a ``[build-system]`` table "
"legitimately. If the file exists but is lacking the ``[build-system]`` table "
"then the default values as specified above should be used. If the table is "
"specified but is missing required fields then the tool should consider it an "
"error."
msgstr ""
"Ilo ne postulu la ekziston de la tabelo ``[build-system]``. Dosiero "
"``pyproject.toml`` povas esti uzita por agordaj detaloj aliaj ol konstruo-"
"rilataj datenoj kaj tial ne havi tabelon ``[build-system]``. Se la dosiero "
"ekzistas sed la tabelo ``[build-system]`` mankas, do oni uzu la apriorajn "
"valorojn specifitajn ĉi-supre. Se la tabelo estas specifita sed postulitaj "
"kampoj mankas, do ilo konsideru tion kiel eraron."

#: ../source/specifications/pyproject-toml.rst:65
msgid ""
"To provide a type-specific representation of the resulting data from the "
"TOML file for illustrative purposes only, the following `JSON Schema "
"<https://json-schema.org>`_ would match the data format:"
msgstr ""
"Por provizi tipo-specifan prezento de la rezultaj datenoj el la TOML-dosiero "
"sole por klarigado, la jena `JSON-Skemo <https://json-schema.org>`_ kongruus "
"kun la datena formo:"

#: ../source/specifications/pyproject-toml.rst:103
msgid "Declaring project metadata: the ``[project]`` table"
msgstr "Deklari projektajn metadatenojn: la tabelo ``[project]``"

#: ../source/specifications/pyproject-toml.rst:105
msgid ""
"The ``[project]`` table specifies the project's :ref:`core metadata <core-"
"metadata>`."
msgstr ""
"La tabelo ``[project]`` specifas la :ref:`kernajn metadatenojn <core-"
"metadata>` de la projekto."

#: ../source/specifications/pyproject-toml.rst:107
msgid ""
"There are two kinds of metadata: *static* and *dynamic*. Static metadata is "
"specified in the ``pyproject.toml`` file directly and cannot be specified or "
"changed by a tool (this includes data *referred* to by the metadata, e.g. "
"the contents of files referenced by the metadata). Dynamic metadata is "
"listed via the ``dynamic`` key (defined later in this specification) and "
"represents metadata that a tool will later provide."
msgstr ""
"Ekzistas du specoj de metadatenoj: *statika* kaj *dinamika*. Statika "
"metadateno estas specifita en la dosiero ``pyproject.toml`` rekte kaj ne "
"estas specifebla nek modifebla per ilo (tio inkluzivas datenojn *menciitajn* "
"de la metadatenoj, ekz. la enhavoj de dosieroj referencitaj en la "
"metadatenoj). Dinamika metadateno estas enlistigitaj per la ŝlosilo "
"``dynamic`` (difinita poste en ĉi tiu normo) kaj prezentas metadateno "
"provizotan de ilo."

#: ../source/specifications/pyproject-toml.rst:115
msgid ""
"The lack of a ``[project]`` table implicitly means the :term:`build backend "
"<Build Backend>` will dynamically provide all keys."
msgstr ""
"La manko de tabelo ``[project]`` implicas, ke la :term:`konstrua malfasado "
"<Build Backend>` dinamike provizos ĉiujn ŝlosilojn."

#: ../source/specifications/pyproject-toml.rst:118
msgid "The only keys required to be statically defined are:"
msgstr "Jen tiuj ŝlosiloj, kiuj devas esti statike difinitaj:"

#: ../source/specifications/pyproject-toml.rst:122
msgid ""
"The keys which are required but may be specified *either* statically or "
"listed as dynamic are:"
msgstr "Jen la devigaj ŝlosiloj specifeblaj *aŭ* statike *aŭ* dinamike:"

#: ../source/specifications/pyproject-toml.rst:127
msgid ""
"All other keys are considered optional and may be specified statically, "
"listed as dynamic, or left unspecified."
msgstr ""
"Ĉiuj aliaj ŝlosiloj estas nedevigaj kaj povas esti specifitaj statike, "
"specifitaj dinamike, aŭ nespecifitaj."

#: ../source/specifications/pyproject-toml.rst:130
msgid "The complete list of keys allowed in the ``[project]`` table are:"
msgstr "Jen la plena listo de ŝlosiloj permesataj en la tabelo ``[project]``:"

#: ../source/specifications/pyproject-toml.rst:132
msgid "``authors``"
msgstr "``authors``"

#: ../source/specifications/pyproject-toml.rst:134
msgid "``dependencies``"
msgstr "``dependencies``"

#: ../source/specifications/pyproject-toml.rst:136
#: ../source/specifications/pyproject-toml.rst:473
msgid "``dynamic``"
msgstr "``dynamic``"

#: ../source/specifications/pyproject-toml.rst:137
msgid "``entry-points``"
msgstr "``entry-points``"

#: ../source/specifications/pyproject-toml.rst:138
msgid "``gui-scripts``"
msgstr "``gui-scripts``"

#: ../source/specifications/pyproject-toml.rst:142
msgid "``maintainers``"
msgstr "``maintainers``"

#: ../source/specifications/pyproject-toml.rst:144
msgid "``optional-dependencies``"
msgstr "``optional-dependencies``"

#: ../source/specifications/pyproject-toml.rst:157
#: ../source/specifications/pyproject-toml.rst:172
#: ../source/specifications/pyproject-toml.rst:187
#: ../source/specifications/pyproject-toml.rst:241
#: ../source/specifications/pyproject-toml.rst:253
msgid "TOML_ type: string"
msgstr "Tipo de TOML_: signoĉeno"

#: ../source/specifications/pyproject-toml.rst:158
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Name <core-"
"metadata-name>`"
msgstr ""
"Respondanta :ref:`kerna metadatena <core-metadata>` kampo: :ref:`Name <core-"
"metadata-name>`"

#: ../source/specifications/pyproject-toml.rst:161
msgid "The name of the project."
msgstr "La nomo de la projekto."

#: ../source/specifications/pyproject-toml.rst:163
msgid ""
"Tools SHOULD :ref:`normalize <name-normalization>` this name, as soon as it "
"is read for internal consistency."
msgstr ""
"Ilo :ref:`NORMIGU <name-normalization>` ĉi tiun nomon tuj post legado por "
"interna kohereco."

#: ../source/specifications/pyproject-toml.rst:173
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Version "
"<core-metadata-version>`"
msgstr ""
"Respondanta :ref:`kerna metadatena <core-metadata>` kampo: :ref:`Version "
"<core-metadata-version>`"

#: ../source/specifications/pyproject-toml.rst:176
msgid ""
"The version of the project, as defined in the :ref:`Version specifier "
"specification <version-specifiers>`."
msgstr ""
"La versio de la projekto laŭ :ref:`la specifo pri versispecifiloj <version-"
"specifiers>`."

#: ../source/specifications/pyproject-toml.rst:179
msgid "Users SHOULD prefer to specify already-normalized versions."
msgstr "Uzantoj *PREFERU* specifi jam normigitajn versiojn."

#: ../source/specifications/pyproject-toml.rst:188
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Summary "
"<core-metadata-summary>`"
msgstr ""
"Respondanta :ref:`kerna metadatena <core-metadata>` kampo: :ref:`Summary "
"<core-metadata-summary>`"

#: ../source/specifications/pyproject-toml.rst:191
msgid ""
"The summary description of the project in one line. Tools MAY error if this "
"includes multiple lines."
msgstr ""
"La resuma priskribo pri la projekto en unu linio. Ilo POVAS sciigi eraron, "
"se ĝi inkluzivas plurajn liniojn."

#: ../source/specifications/pyproject-toml.rst:200
msgid "TOML_ type: string or table"
msgstr "Tipo de TOML_: signoĉeno aŭ tabelo"

#: ../source/specifications/pyproject-toml.rst:201
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Description "
"<core-metadata-description>` and :ref:`Description-Content-Type <core-"
"metadata-description-content-type>`"
msgstr ""
"Respondanta :ref:`kerna metadatena <core-metadata>` kampo: :ref:`Description "
"<core-metadata-description>` kaj :ref:`Description-Content-Type <core-"
"metadata-description-content-type>`"

#: ../source/specifications/pyproject-toml.rst:205
msgid "The full description of the project (i.e. the README)."
msgstr "La plena priskribo de la projekto (t.e. la README)."

#: ../source/specifications/pyproject-toml.rst:207
msgid ""
"The key accepts either a string or a table. If it is a string then it is a "
"path relative to ``pyproject.toml`` to a text file containing the full "
"description. Tools MUST assume the file's encoding is UTF-8. If the file "
"path ends in a case-insensitive ``.md`` suffix, then tools MUST assume the "
"content-type is ``text/markdown``. If the file path ends in a case-"
"insensitive ``.rst``, then tools MUST assume the content-type is ``text/x-"
"rst``. If a tool recognizes more extensions than this PEP, they MAY infer "
"the content-type for the user without specifying this key as ``dynamic``. "
"For all unrecognized suffixes when a content-type is not provided, tools "
"MUST raise an error."
msgstr ""
"La ŝlosilo akceptas aŭ signoĉenon aŭ tabelon. Se ĝi estas signoĉeno, do ĝi "
"estas dosierloko relativa de ``pyproject.toml`` al teksta dosiero enhavanta "
"la plenan priskribon. Ilo DEVAS supozi, ke la dosiero estas kodita je UTF-8. "
"Se la dosierloko finiĝas per usklecoblinda sufikso ``.rst``, do ilo DEVAS "
"supozi, ke la enhavtipo estas ``text/markdown``. Se la dosierloko finiĝas "
"usklecoblinde per ``.rst``, do ilo DEVAS supozi, ke la enhavtipo estas "
"``text/x-rst``. Se ilo rekonas pli da sufiksoj ol ĉi tiu PEP, ĝi POVAS "
"inferenci la enhavtipon por la uzanto sen precizigado de tiu ŝlosilo kiel "
"``dynamic``. Por ĉia nerekonebla sufikso, kiam enhavtipo ne estas "
"disponigita, ilo DEVAS sciigi pri eraro."

#: ../source/specifications/pyproject-toml.rst:218
msgid ""
"The ``readme`` key may also take a table. The ``file`` key has a string "
"value representing a path relative to ``pyproject.toml`` to a file "
"containing the full description. The ``text`` key has a string value which "
"is the full description. These keys are mutually-exclusive, thus tools MUST "
"raise an error if the metadata specifies both keys."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:225
msgid ""
"A table specified in the ``readme`` key also has a ``content-type`` key "
"which takes a string specifying the content-type of the full description. A "
"tool MUST raise an error if the metadata does not specify this key in the "
"table. If the metadata does not specify the ``charset`` parameter, then it "
"is assumed to be UTF-8. Tools MAY support other encodings if they choose to. "
"Tools MAY support alternative content-types which they can transform to a "
"content-type as supported by the :ref:`core metadata <core-metadata>`. "
"Otherwise tools MUST raise an error for unsupported content-types."
msgstr ""
"Tabelo specifita en la ŝlosilo ``readme`` ankaŭ havas ŝlosilon ``content-"
"type`` prenantan signoĉenon de la enhavtipo de la plena priskribo. Ilo DEVAS "
"sciigi pri eraro, se la metadatenoj ne specifas tiun ŝlosilon en la tabelo. "
"Se la metadatenoj ne specifas la parametron ``charset``, oni supozas, ke ĝi "
"estas UTF-8. Ilo POVAS subteni alternativajn enhavtipojn transformeblajn al "
"enhavtipo subtenata de la :ref:`kernaj metadatenoj <core-metadata>`. Alikaze "
"ilo DEVAS sciigi pri eraro por nesubtenataj enhavtipoj."

#: ../source/specifications/pyproject-toml.rst:242
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Requires-"
"Python <core-metadata-requires-python>`"
msgstr ""
"Respondanta :ref:`kerna metadatena <core-metadata>` kampo: :ref:`Requires-"
"Python <core-metadata-requires-python>`"

#: ../source/specifications/pyproject-toml.rst:245
msgid "The Python version requirements of the project."
msgstr "La postuloj de la projekto pri versioj de Python."

#: ../source/specifications/pyproject-toml.rst:254
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`License-"
"Expression <core-metadata-license-expression>`"
msgstr ""
"Respondanta :ref:`kerna metadatena <core-metadata>` kampo: :ref:`License-"
"Expression <core-metadata-license-expression>`"

#: ../source/specifications/pyproject-toml.rst:257
msgid ""
"Text string that is a valid SPDX :term:`license expression <License "
"Expression>`, as specified in :doc:`/specifications/license-expression`. "
"Tools SHOULD validate and perform case normalization of the expression."
msgstr ""
"Signoĉeno, kiu estas valida :term:`SPDX-licencesprimo <License Expression>` "
"laŭ :doc:`/specifications/license-expression`. Ilo KONTROLU la validecon de "
"la esprimo kaj NORMIGU la usklecon."

#: ../source/specifications/pyproject-toml.rst:263
msgid "Legacy specification"
msgstr "Malnova normo"

#: ../source/specifications/pyproject-toml.rst:265
msgid "TOML_ type: table"
msgstr "Tipo de TOML_: tabelo"

#: ../source/specifications/pyproject-toml.rst:266
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`License "
"<core-metadata-license>`"
msgstr ""
"Respondanta :ref:`kerna metadatena <core-metadata>` kampo: :ref:`License "
"<core-metadata-license>`"

#: ../source/specifications/pyproject-toml.rst:269
msgid ""
"The table may have one of two keys. The ``file`` key has a string value that "
"is a file path relative to :file:`pyproject.toml` to the file which contains "
"the license for the project. Tools MUST assume the file's encoding is UTF-8. "
"The ``text`` key has a string value which is the license of the project.  "
"These keys are mutually exclusive, so a tool MUST raise an error if the "
"metadata specifies both keys."
msgstr ""
"La tabelo povas havi unu el du ŝlosiloj. La ŝlosilo ``file`` havas "
"signoĉenan valoron, kiu estas dosierloko (relativa al :file:`pyproject."
"toml`) de la dosiero, kiu enhavas la licencon de la projekto. Ilo DEVAS "
"supozi, ke la dosiero estas kodita laŭ UTF-8. La ŝlosilo ``text`` havas "
"signoĉenan valoro, kiu estas la licenco de la projekto. Tiuj ŝlosiloj estas "
"disaŭaj: ilo DEVAS sciigi pri eraro, se la metadatenoj enhavas ambaŭ "
"ŝlosilojn."

#: ../source/specifications/pyproject-toml.rst:276
msgid ""
"The table subkeys were deprecated by :pep:`639` in favor of the string value."
msgstr ""
"La tabelajn subŝlosilojn malrekomendis :pep:`639`, rekomendante anstaŭe la "
"signoĉenan valoron."

#: ../source/specifications/pyproject-toml.rst:283
#: ../source/specifications/pyproject-toml.rst:366
#: ../source/specifications/pyproject-toml.rst:378
msgid "TOML_ type: array of strings"
msgstr "Tipo de TOML_: listo de signoĉenoj"

#: ../source/specifications/pyproject-toml.rst:284
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`License-File "
"<core-metadata-license-file>`"
msgstr ""
"Respondanta :ref:`kerna metadatena <core-metadata>` kampo: :ref:`License-"
"File <core-metadata-license-file>`"

#: ../source/specifications/pyproject-toml.rst:287
msgid ""
"An array specifying paths in the project source tree relative to the project "
"root directory (i.e. directory containing :file:`pyproject.toml` or legacy "
"project configuration files, e.g. :file:`setup.py`, :file:`setup.cfg`, etc.) "
"to file(s) containing licenses and other legal notices to be distributed "
"with the package."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:293
msgid ""
"The strings MUST contain valid glob patterns, as specified in :doc:`/"
"specifications/glob-patterns`."
msgstr ""
"La signoĉeno DEVAS enhavi validan patroneon laŭ la normo :doc:`/"
"specifications/glob-patterns`."

#: ../source/specifications/pyproject-toml.rst:296
msgid ""
"Patterns are relative to the directory containing :file:`pyproject.toml`,"
msgstr ""
"Patroneo estas relativa al la dosierujo enhavanta :file:`pyproject.toml`,"

#: ../source/specifications/pyproject-toml.rst:298
msgid ""
"Tools MUST assume that license file content is valid UTF-8 encoded text, and "
"SHOULD validate this and raise an error if it is not."
msgstr ""
"Ilo DEVAS supozi, ke la enhavo de licenco-dosiero estas valida UTF-8-kodita "
"teksto, kaj KONTROLU la validecon kaj SCIIGU eraron, se ĝi ne validas."

#: ../source/specifications/pyproject-toml.rst:301
msgid "Build tools:"
msgstr "Konstruiloj:"

#: ../source/specifications/pyproject-toml.rst:303
msgid ""
"MUST include all files matched by a listed pattern in all distribution "
"archives."
msgstr ""
"DEVAS inkluzivi ĉiujn dosierojn kongruajn al enlistigita patroneo en ĉiuj "
"distribuaj arĥivoj."

#: ../source/specifications/pyproject-toml.rst:305
msgid ""
"MUST list each matched file path under a License-File field in the Core "
"Metadata."
msgstr ""
"DEVAS enlistigi ĉiun kongruan dosierlokon sub kampo ``License-File`` en la "
"Kernaj Metadatenoj."

#: ../source/specifications/pyproject-toml.rst:308
msgid ""
"If the ``license-files`` key is present and is set to a value of an empty "
"array, then tools MUST NOT include any license files and MUST NOT raise an "
"error. If the ``license-files`` key is not defined, tools can decide how to "
"handle license files. For example they can choose not to include any files "
"or use their own logic to discover the appropriate files in the distribution."
msgstr ""
"Se la ŝlosilo ``license-files`` ekzistas kaj ĝia valoro estas malplena "
"listo, do ilo DEVAS NE inkluzivi ajanan licencan dosieron kaj DEVAS NE "
"sciigi pri eraro. Se la ŝlosilon ``license-files`` ne estas difinita, ilo "
"povas decidi pri la traktado de licencaj dosieroj. Ekzemple, ĝi povas simple "
"ne inkluzivi ajanan dosieron, aŭ uzi sian propran logikon por trovi la "
"taŭgajn dosierojn en la distribuo."

#: ../source/specifications/pyproject-toml.rst:322
msgid "TOML_ type: Array of inline tables with string keys and values"
msgstr "Tipo de TOML_: Listo de tabeloj de signoĉenaj ŝlosiloj kaj valoroj"

#: ../source/specifications/pyproject-toml.rst:323
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Author <core-"
"metadata-author>`, :ref:`Author-email <core-metadata-author-email>`, :ref:"
"`Maintainer <core-metadata-maintainer>`, and :ref:`Maintainer-email <core-"
"metadata-maintainer-email>`"
msgstr ""
"Respondanta :ref:`kerna metadatena <core-metadata>` kampo: :ref:`Author "
"<core-metadata-author>`, :ref:`Author-email <core-metadata-author-email>`, :"
"ref:`Maintainer <core-metadata-maintainer>`, kaj :ref:`Maintainer-email "
"<core-metadata-maintainer-email>`"

#: ../source/specifications/pyproject-toml.rst:329
msgid ""
"The people or organizations considered to be the \"authors\" of the project. "
"The exact meaning is open to interpretation — it may list the original or "
"primary authors, current maintainers, or owners of the package."
msgstr ""
"Homoj aŭ organizaĵoj rigardataj kiel la «aŭtoroj» de la projekto. La preciza "
"signifo dependas de interpretad – ĝi povas listigi la originalajn aŭ ĉefajn "
"verkintojn, aktualajn mastrumantojn, aŭ posedantojn de la pako."

#: ../source/specifications/pyproject-toml.rst:334
msgid ""
"The \"maintainers\" key is similar to \"authors\" in that its exact meaning "
"is open to interpretation."
msgstr ""
"La ŝlosilo ``maintainers`` similas al ``authors``: ĝia preciza signifo "
"dependas de interpretado."

#: ../source/specifications/pyproject-toml.rst:337
msgid ""
"These keys accept an array of tables with 2 keys: ``name`` and ``email``. "
"Both values must be strings. The ``name`` value MUST be a valid email name "
"(i.e. whatever can be put as a name, before an email, in :rfc:`822`) and not "
"contain commas. The ``email`` value MUST be a valid email address. Both keys "
"are optional, but at least one of the keys must be specified in the table."
msgstr ""
"Tiuj ŝlosiloj akceptas liston de tabeloj kun du ŝlosiloj: ``name`` kaj "
"``email``. Ambaŭ valoroj estas tekstaj. La valoro de ``name`` DEVAS esti "
"valida retpoŝta nomo (tiu, kiu povas servi kiel nomo antaŭ retpoŝta adreso "
"en :rfc:`822`) kaj ne povas inkluzivi komon. La valoro de ``email`` DEVAS "
"esti valida retpoŝta adreso. Ambaŭ ŝlosiloj estas ellaseblaj, sed la tabelo "
"devas enhavi almenaŭ unu el la duo."

#: ../source/specifications/pyproject-toml.rst:344
msgid ""
"Using the data to fill in :ref:`core metadata <core-metadata>` is as follows:"
msgstr ""
"La datenoj respondas al :ref:`kernaj metadatenoj <core-metadata>` jene:"

#: ../source/specifications/pyproject-toml.rst:347
msgid ""
"If only ``name`` is provided, the value goes in :ref:`Author <core-metadata-"
"author>` or :ref:`Maintainer <core-metadata-maintainer>` as appropriate."
msgstr ""
"Se nur ``name`` estas provizita, la valoro respondas al :ref:`Author <core-"
"metadata-author>` aŭ :ref:`Maintainer <core-metadata-maintainer>` depende."

#: ../source/specifications/pyproject-toml.rst:350
msgid ""
"If only ``email`` is provided, the value goes in :ref:`Author-email <core-"
"metadata-author-email>` or :ref:`Maintainer-email <core-metadata-maintainer-"
"email>` as appropriate."
msgstr ""
"Se nur ``email`` estas provizita, la valoro respondas al :ref:`Author-email "
"<core-metadata-author-email>` aŭ :ref:`Maintainer-email <core-metadata-"
"maintainer-email>` depende."

#: ../source/specifications/pyproject-toml.rst:354
msgid ""
"If both ``email`` and ``name`` are provided, the value goes in :ref:`Author-"
"email <core-metadata-author-email>` or :ref:`Maintainer-email <core-metadata-"
"maintainer-email>` as appropriate, with the format ``{name} <{email}>``."
msgstr ""
"Se kaj ``email`` kaj ``name`` estas provizitaj, la valoroj respondas al :ref:"
"`Author-email <core-metadata-author-email>` aŭ :ref:`Maintainer-email <core-"
"metadata-maintainer-email>` depende, en la formo ``{name} <{email}>``."

#: ../source/specifications/pyproject-toml.rst:358
msgid "Multiple values should be separated by commas."
msgstr "Oni apartigu plurajn valorojn per komoj."

#: ../source/specifications/pyproject-toml.rst:367
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Keywords "
"<core-metadata-keywords>`"
msgstr ""
"Respondas al la :ref:`kerna metadatena <core-metadata>` kampo: :ref:"
"`Keywords <core-metadata-keywords>`"

#: ../source/specifications/pyproject-toml.rst:370
msgid "The keywords for the project."
msgstr "La ŝlosilvortoj pri la projekto."

#: ../source/specifications/pyproject-toml.rst:379
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Classifier "
"<core-metadata-classifier>`"
msgstr ""
"Respondas al la :ref:`kerna metadatena <core-metadata>` kampo: :ref:"
"`Classifier <core-metadata-classifier>`"

#: ../source/specifications/pyproject-toml.rst:382
msgid "Trove classifiers which apply to the project."
msgstr "Klasigiloj Trove rilataj al la projekto."

#: ../source/specifications/pyproject-toml.rst:384
msgid ""
"The use of ``License ::`` classifiers is deprecated and tools MAY issue a "
"warning informing users about that. Build tools MAY raise an error if both "
"the ``license`` string value (translating to ``License-Expression`` metadata "
"field) and the ``License ::`` classifiers are used."
msgstr ""
"La uzado de klasigiloj ``License ::`` estas evitinda. Ilo POVAS averti "
"uzantojn pri tio. Konstruilo POVAS sciigi pri eraro, se kaj la signoĉena "
"valoro ``license`` (por la metadatena kampo ``License-Expression``) kaj "
"klasigilo ``License ::`` estas uzataj."

#: ../source/specifications/pyproject-toml.rst:396
msgid "TOML_ type: table with keys and values of strings"
msgstr "Tipo de TOML_: tabelo kun ŝlosiloj kaj valoroj signoĉenaj"

#: ../source/specifications/pyproject-toml.rst:397
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Project-URL "
"<core-metadata-project-url>`"
msgstr ""
"Respondanta :ref:`kerna metadatena <core-metadata>` kampo: :ref:`Project-URL "
"<core-metadata-project-url>`"

#: ../source/specifications/pyproject-toml.rst:400
msgid ""
"A table of URLs where the key is the URL label and the value is the URL "
"itself. See :ref:`well-known-project-urls` for normalization rules and well-"
"known rules when processing metadata for presentation."
msgstr ""
"Tabelo de retadresoj, en kiu la ŝlosilo estas la retadresa etikedo kaj la "
"valoro estas la retadreso mem. Vidu :ref:`well-known-project-urls` por "
"reguloj pri normigado kaj prezentado de bone konataj metadatenoj."

#: ../source/specifications/pyproject-toml.rst:410
msgid "Entry points"
msgstr "Enirpunktoj"

#: ../source/specifications/pyproject-toml.rst:412
msgid ""
"TOML_ type: table (``[project.scripts]``, ``[project.gui-scripts]``, and "
"``[project.entry-points]``)"
msgstr ""
"Tipo de TOML_: tabelo (``[project.scripts]``, ``[project.gui-scripts]``, kaj "
"``[project.entry-points]``)"

#: ../source/specifications/pyproject-toml.rst:414
msgid ":ref:`Entry points specification <entry-points>`"
msgstr ":ref:`Specifo pri enirpunktoj <entry-points>`"

#: ../source/specifications/pyproject-toml.rst:416
msgid ""
"There are three tables related to entry points. The ``[project.scripts]`` "
"table corresponds to the ``console_scripts`` group in the :ref:`entry points "
"specification <entry-points>`. The key of the table is the name of the entry "
"point and the value is the object reference."
msgstr ""
"Ekzistas tri tabeloj pri enirpunktoj. La tabelo ``[project.scripts]`` "
"respondas al la grupo ``console_scripts`` en :ref:`la normo pri enirpunktoj "
"<entry-points>`. La ŝlosilo de la tabelo estas la nomo de la enirpunkto; la "
"valoro estas la referenco al objekto."

#: ../source/specifications/pyproject-toml.rst:422
msgid ""
"The ``[project.gui-scripts]`` table corresponds to the ``gui_scripts`` group "
"in the :ref:`entry points specification <entry-points>`. Its format is the "
"same as ``[project.scripts]``."
msgstr ""
"La tabelo ``[project.gui-scripts]`` respondas al la grupo ``gui_scripts`` "
"en :ref:`la specifo pri enirpunktoj <entry-points>`. Ĝia formo estas sama "
"kiel ``[project.scripts]``."

#: ../source/specifications/pyproject-toml.rst:426
msgid ""
"The ``[project.entry-points]`` table is a collection of tables. Each sub-"
"table's name is an entry point group. The key and value semantics are the "
"same as ``[project.scripts]``. Users MUST NOT create nested sub-tables but "
"instead keep the entry point groups to only one level deep."
msgstr ""
"La tabelo ``[project.entry-points]`` estas tabelo da subtabeloj. La nomo de "
"subtabelo estas enirpunktogrupo. La semantikoj de ŝlosiloj kaj valoroj estas "
"la sama kiel la semantiko de ``[project.scripts]``. Uzanto DEVAS NE krei "
"subsubtabelojn; la profundo de ingado de la enirpunktogrupoj estu nur unu "
"nivelo."

#: ../source/specifications/pyproject-toml.rst:432
msgid ""
"Build back-ends MUST raise an error if the metadata defines a ``[project."
"entry-points.console_scripts]`` or ``[project.entry-points.gui_scripts]`` "
"table, as they would be ambiguous in the face of ``[project.scripts]`` and "
"``[project.gui-scripts]``, respectively."
msgstr ""
"Konstrua malfasado DEVAS sciigi pri eraro, se la metadatenoj difinas "
"``[project.entry-points.console_scripts]`` aŭ ``[project.entry-points."
"gui_scripts]``, ĉar tiuj estus ambiguaj pro ``[project.scripts]`` kaj "
"``[project.gui-scripts]``, respektive."

#: ../source/specifications/pyproject-toml.rst:445
msgid ""
"TOML_ type: Array of :pep:`508` strings (``dependencies``), and a table with "
"values of arrays of :pep:`508` strings (``optional-dependencies``)"
msgstr ""
"Tipo de TOML_: Listo de signoĉenoj laŭ :pep:`508` (``dependencies``) kaj "
"tabelo de valoroj de listoj de signoĉenoj laŭ :pep:`508` (``optional-"
"dependencies``)"

#: ../source/specifications/pyproject-toml.rst:448
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Requires-"
"Dist <core-metadata-requires-dist>` and :ref:`Provides-Extra <core-metadata-"
"provides-extra>`"
msgstr ""
"Respondanta :ref:`kerna metadatena <core-metadata>` kampo: :ref:`Requires-"
"Dist <core-metadata-requires-dist>` kaj :ref:`Provides-Extra <core-metadata-"
"provides-extra>`"

#: ../source/specifications/pyproject-toml.rst:452
msgid "The (optional) dependencies of the project."
msgstr "La (nedevigaj) dependecoj de la projektoj."

#: ../source/specifications/pyproject-toml.rst:454
msgid ""
"For ``dependencies``, it is a key whose value is an array of strings. Each "
"string represents a dependency of the project and MUST be formatted as a "
"valid :pep:`508` string. Each string maps directly to a :ref:`Requires-Dist "
"<core-metadata-requires-dist>` entry."
msgstr ""
"Por ``dependencies``, ĝi estas ŝlosilo, kies valoro estas listo de "
"signoĉenoj. Ĉiu signoĉeno prezentas dependecon de la projekto kaj DEVAS esti "
"valida laŭ :pep:`508`. Ĉiu signoĉeno rekte respondas al ero :ref:`Requires-"
"Dist <core-metadata-requires-dist>`."

#: ../source/specifications/pyproject-toml.rst:459
msgid ""
"For ``optional-dependencies``, it is a table where each key specifies an "
"extra and whose value is an array of strings. The strings of the arrays must "
"be valid :pep:`508` strings. The keys MUST be valid values for :ref:"
"`Provides-Extra <core-metadata-provides-extra>`. Each value in the array "
"thus becomes a corresponding :ref:`Requires-Dist <core-metadata-requires-"
"dist>` entry for the matching :ref:`Provides-Extra <core-metadata-provides-"
"extra>` metadata."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:475
msgid "TOML_ type: array of string"
msgstr "Tipo de TOML_: listo de signoĉenoj"

#: ../source/specifications/pyproject-toml.rst:476
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Dynamic "
"<core-metadata-dynamic>`"
msgstr ""
"Respondanta :ref:`kerna metadatena <core-metadata>` kampo: :ref:`Dynamic "
"<core-metadata-dynamic>`"

#: ../source/specifications/pyproject-toml.rst:479
msgid ""
"Specifies which keys listed by this PEP were intentionally unspecified so "
"another tool can/will provide such metadata dynamically. This clearly "
"delineates which metadata is purposefully unspecified and expected to stay "
"unspecified compared to being provided via tooling later on."
msgstr ""
"Listigas tiujn ŝlosiloj en ĉi tiu PEP, kiuj estis intence nespecifitaj kaj "
"aŭtomate provizotaj de alia ilo dinamike. Per tio, oni klare distingas "
"intence nespecifitajn metadatenojn ne provizotajn far ilo, de metadatenoj "
"poste provizotaj far ilo."

#: ../source/specifications/pyproject-toml.rst:485
msgid ""
"A build back-end MUST honour statically-specified metadata (which means the "
"metadata did not list the key in ``dynamic``)."
msgstr ""
"Konstrua malfasado DEVAS observi statike specifitan metadatenon (de ŝlosilo "
"ne en ``dynamic``)."

#: ../source/specifications/pyproject-toml.rst:487
msgid ""
"A build back-end MUST raise an error if the metadata specifies ``name`` in "
"``dynamic``."
msgstr ""
"Konstrua malfasado DEVAS sciigi pri eraro, se la metadatenoj specifas "
"``name`` en ``dynamic``."

#: ../source/specifications/pyproject-toml.rst:489
msgid ""
"If the :ref:`core metadata <core-metadata>` specification lists a field as "
"\"Required\", then the metadata MUST specify the key statically or list it "
"in ``dynamic`` (build back-ends MUST raise an error otherwise, i.e. it "
"should not be possible for a required key to not be listed somehow in the "
"``[project]`` table)."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:494
msgid ""
"If the :ref:`core metadata <core-metadata>` specification lists a field as "
"\"Optional\", the metadata MAY list it in ``dynamic`` if the expectation is "
"a build back-end will provide the data for the key later."
msgstr ""
"Se la specifo de :ref:`kernaj metadatenoj <core-metadata>` priskribas kampon "
"kiel «Nedeviga», do la metadateno POVAS meti ĝin en ``dynamic``, se oni "
"atendas, ke konstrua malfasado poste provizos la datenon pri la ŝlosilo."

#: ../source/specifications/pyproject-toml.rst:498
msgid ""
"Build back-ends MUST raise an error if the metadata specifies a key "
"statically as well as being listed in ``dynamic``."
msgstr ""
"Konstrua malfasado DEVAS sciigi pri eraro, se la metadatenoj specifas unu "
"ŝlosilon kaj statike kaj en ``dynamic``."

#: ../source/specifications/pyproject-toml.rst:500
msgid ""
"If the metadata does not list a key in ``dynamic``, then a build back-end "
"CANNOT fill in the requisite metadata on behalf of the user (i.e. "
"``dynamic`` is the only way to allow a tool to fill in metadata and the user "
"must opt into the filling in)."
msgstr ""
"Se la metadatenoj ne enhavas ŝlosilon en ``dynamic``, konstrua malfasado "
"DEVAS NE plenigi la medatenon por la uzanto (alivorte, ``dynamic`` estas la "
"ununura maniero por permesi al ilo plenigi metadatenojn, kaj la uzanto devas "
"eksplici la aŭtomatan plenigadon)."

#: ../source/specifications/pyproject-toml.rst:504
msgid ""
"Build back-ends MUST raise an error if the metadata specifies a key in "
"``dynamic`` but the build back-end was unable to determine the data for it "
"(omitting the data, if determined to be the accurate value, is acceptable)."
msgstr ""
"Konstrua malfasado DEVAS sciigi eraron, se la metadatenoj specifas ŝlosilon "
"en ``dynamic`` sed la konstrua malfasado ne povis determini ĝian datenon "
"(estas akcepteble, se la ilo determinas, ke la dateno manku)."

#: ../source/specifications/pyproject-toml.rst:514
msgid "Arbitrary tool configuration: the ``[tool]`` table"
msgstr "Ĉiaj ilaj agordoj: la tabelo ``[tool]``"

#: ../source/specifications/pyproject-toml.rst:516
msgid ""
"The ``[tool]`` table is where any tool related to your Python project, not "
"just build tools, can have users specify configuration data as long as they "
"use a sub-table within ``[tool]``, e.g. the `flit <https://pypi.python.org/"
"pypi/flit>`_ tool would store its configuration in ``[tool.flit]``."
msgstr ""
"En subtabelo de la tabelo ``[tool]``, iu ajn ilo rilata al via Python-"
"projekto (ne nur konstruilo) povas havi agordojn. Ekzemple, la ilo `flit "
"<https://pypi.python.org/pypi/flit>`_ konservus siajn agordojn en ``[tool."
"flit]``."

#: ../source/specifications/pyproject-toml.rst:522
msgid ""
"A mechanism is needed to allocate names within the ``tool.*`` namespace, to "
"make sure that different projects do not attempt to use the same sub-table "
"and collide. Our rule is that a project can use the subtable ``tool.$NAME`` "
"if, and only if, they own the entry for ``$NAME`` in the Cheeseshop/PyPI."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:533
msgid ""
"May 2016: The initial specification of the ``pyproject.toml`` file, with "
"just a ``[build-system]`` containing a ``requires`` key and a ``[tool]`` "
"table, was approved through :pep:`518`."
msgstr ""
"Majo 2016: La unua specifo pri la dosiero ``pyproject.toml``, kun nur "
"``[build-system]`` enhavanta ŝlosilon ``requires`` kaj tabelon ``[tool]``, "
"estis aprobita per :pep:`518`."

#: ../source/specifications/pyproject-toml.rst:537
msgid ""
"November 2020: The specification of the ``[project]`` table was approved "
"through :pep:`621`."
msgstr ""
"Novembro 2020: La specifo de la tabelo ``[project]`` estis aprobita per :pep:"
"`621`."

#: ../source/specifications/pyproject-toml.rst:540
msgid ""
"December 2024: The ``license`` key was redefined, the ``license-files`` key "
"was added and ``License::`` classifiers were deprecated through :pep:`639`."
msgstr ""
"Decembro 2024: La ŝlosilo ``license`` estis redifinita, la ŝlosilo ``license-"
"files`` estis aldonita, kaj la klasigiloj ``License::`` estis evitindigitaj "
"per :pep:`639`."

#: ../source/specifications/recording-installed-packages.rst:7
msgid "Recording installed projects"
msgstr "Registri instalitajn projektojn"

#: ../source/specifications/recording-installed-packages.rst:9
msgid ""
"This document specifies a common format of recording information about "
"Python :term:`projects <Project>` installed in an environment. A common "
"metadata format allows tools to query, manage or uninstall projects, "
"regardless of how they were installed."
msgstr ""
"Ĉi tiu dokumento specifas komunan dosierformon pri informoj pri Python-:term:"
"`projektoj <Project>` instalitaj en medio. Komuna metadatena dosierformo "
"permesas serĉi, administri aŭ malinstali projektojn ĉiel instalitajn."

#: ../source/specifications/recording-installed-packages.rst:14
msgid ""
"Almost all information is optional. This allows tools outside the Python "
"ecosystem, such as Linux package managers, to integrate with Python tooling "
"as much as possible. For example, even if an installer cannot easily provide "
"a list of installed files in a format specific to Python tooling, it should "
"still record the name and version of the installed project."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:25
msgid ""
"Each project installed from a distribution must, in addition to files, "
"install a \"``.dist-info``\" directory located alongside importable modules "
"and packages (commonly, the ``site-packages`` directory)."
msgstr ""
"Ĉiu projekto instalita el distribuo devas, krom dosieroj, instali dosierujon "
"``.dist-info`` apud la importeblaj moduloj kaj pakoj (ofte en la dosierujo "
"``site-packages``)."

#: ../source/specifications/recording-installed-packages.rst:29
msgid ""
"This directory is named as ``{name}-{version}.dist-info``, with ``name`` and "
"``version`` fields corresponding to :ref:`core-metadata`. Both fields must "
"be normalized (see the :ref:`name normalization specification <name-"
"normalization>` and the :ref:`version normalization specification <version-"
"specifiers-normalization>`), and replace dash (``-``) characters with "
"underscore (``_``) characters, so the ``.dist-info`` directory always has "
"exactly one dash (``-``) character in its stem, separating the ``name`` and "
"``version`` fields."
msgstr ""
"Tiu dosierujo nomiĝas ``{name}-{version}.dist-info``, kun la kampoj ``name`` "
"kaj ``version`` same kiel :ref:`core-metadata`. Ambaŭ kampoj devas esti "
"normigitaj (vidu :ref:`la normon pri normigo de nomoj <name-normalization>` "
"kaj :ref:`la normon pri normigo de versioj <version-specifiers-"
"normalization>`), kun streketoj (``-``) anstataŭigitaj per substreketoj "
"(``_``) , tiel ke la dosierujo ``.dist-info`` havas ekzakte unu streketon "
"(``-``) en ĝia nomo (krom la dosiersufikso), kiu apartigas la kampojn "
"``name`` kaj ``version``."

#: ../source/specifications/recording-installed-packages.rst:37
msgid ""
"Historically, tools have failed to replace dot characters or normalize case "
"in the ``name`` field, or not perform normalization in the ``version`` "
"field. Tools consuming ``.dist-info`` directories should expect those fields "
"to be unnormalized, and treat them as equivalent to their normalized "
"counterparts. New tools that write ``.dist-info`` directories MUST normalize "
"both ``name`` and ``version`` fields using the rules described above, and "
"existing tools are encouraged to start normalizing those fields."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:47
msgid ""
"The ``.dist-info`` directory's name is formatted to unambiguously represent "
"a distribution as a filesystem path. Tools presenting a distribution name to "
"a user should avoid using the normalized name, and instead present the "
"specified name (when needed prior to resolution to an installed package), or "
"read the respective fields in Core Metadata, since values listed there are "
"unescaped and accurately reflect the distribution. Libraries should provide "
"API for such tools to consume, so tools can have access to the unnormalized "
"name when displaying distribution information."
msgstr ""
"La nomo de dosierujo ``.dist-info`` estas aranĝita por malambigue prezenti "
"distribuon kiel dosiersisteman lokon. Ilo prezentanta nomon de distribuo al "
"uzanto evitu uzi la normigitan nomon kaj anstataŭe prezentu la specifitan "
"nomon (laŭbezone antaŭ solvado al instalita pako), aŭ legu la respektivajn "
"kampojn en Kernaj Metadatenoj, ĉar tieaj valoroj ne havas kodŝanĝojn kaj "
"precize reflektas la distribuon. Bibliotekoj provizu API pri la nenormigita "
"nomo por prezentado de informoj pri distribuo far tia ilo."

#: ../source/specifications/recording-installed-packages.rst:56
msgid ""
"This ``.dist-info`` directory may contain the following files, described in "
"detail below:"
msgstr ""
"Tiu dosierujo ``.dist-info`` povas enhavi la jenajn dosierojn, priskribotajn "
"ĉi-sube:"

#: ../source/specifications/recording-installed-packages.rst:59
msgid "``METADATA``: contains project metadata"
msgstr "``METADATA``: enhavas projektajn metadatenojn"

#: ../source/specifications/recording-installed-packages.rst:60
msgid "``RECORD``: records the list of installed files."
msgstr "``RECORD``: registras la liston de instalitaj dosieroj."

#: ../source/specifications/recording-installed-packages.rst:61
msgid ""
"``INSTALLER``: records the name of the tool used to install the project."
msgstr ""
"``INSTALLER``: registras la nomon de la ilo uzita por instali la projekton."

#: ../source/specifications/recording-installed-packages.rst:62
msgid "``entry_points.txt``: see :ref:`entry-points` for details"
msgstr "``entry_points.txt``: vidu :ref:`entry-points` por detaloj"

#: ../source/specifications/recording-installed-packages.rst:63
msgid "``direct_url.json``: see :ref:`direct-url` for details"
msgstr "``direct_url.json``: vidu :ref:`direct-url` por detaloj"

#: ../source/specifications/recording-installed-packages.rst:65
msgid ""
"The ``METADATA`` file is mandatory. All other files may be omitted at the "
"installing tool's discretion. Additional installer-specific files may be "
"present."
msgstr ""
"La dosiero ``METADATA`` estas deviga. Ĉiuj aliaj dosieroj estas "
"preterlaseblaj laŭ la instalilo. Pliaj instalilo-specifaj dosieroj povas "
"ĉeesti."

#: ../source/specifications/recording-installed-packages.rst:69
msgid ""
"This :file:`.dist-info/` directory may contain the following directories, "
"described in detail below:"
msgstr ""
"Tiu dosierujo :file:`.dist-info/` povas enhavi la jenajn subdosierujojn, "
"priskribitajn ĉi-sube:"

#: ../source/specifications/recording-installed-packages.rst:72
msgid ":file:`licenses/`: contains license files."
msgstr ":file:`licenses/`: enhavas licenco-dosierojn."

#: ../source/specifications/recording-installed-packages.rst:73
msgid ":file:`sboms/`: contains Software Bill-of-Materials files (SBOMs)."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:77
msgid ""
"The :ref:`binary-distribution-format` specification describes additional "
"files that may appear in the ``.dist-info`` directory of a :term:`Wheel`. "
"Such files may be copied to the ``.dist-info`` directory of an installed "
"project."
msgstr ""
"La specifo :ref:`binary-distribution-format` priskribas tiujn kromajn "
"dosierojn, kiuj povas aperi en la dosierujo ``.dist-info`` de :term:`Wheel`. "
"Tiaj dosieroj povas esti kopiitaj al la dosierujo ``.dist-info`` de "
"instalita projekto."

#: ../source/specifications/recording-installed-packages.rst:82
msgid ""
"The previous versions of this specification also specified a ``REQUESTED`` "
"file. This file is now considered a tool-specific extension, but may be "
"standardized again in the future. See `PEP 376 <https://www.python.org/dev/"
"peps/pep-0376/#requested>`_ for its original meaning."
msgstr ""
"La antaŭaj versioj de ĉi tiu normo ankaŭ specifis la dosieron ``REQUESTED``. "
"Tiu dosiero estas nun rigardata kiel ilo-specifa etendaĵo, sed povas esti "
"normigita denove estontece. Vidu `PEP 376 <https://www.python.org/dev/peps/"
"pep-0376/#requested>`_ por ĝia originala signifo."

#: ../source/specifications/recording-installed-packages.rst:89
msgid "The METADATA file"
msgstr "La dosiero METADATA"

#: ../source/specifications/recording-installed-packages.rst:91
msgid ""
"The ``METADATA`` file contains metadata as described in the :ref:`core-"
"metadata` specification, version 1.1 or greater."
msgstr ""
"La dosiero ``METADATA`` enhavas metadatenojn laŭ la specifo :ref:`core-"
"metadata`, versio 1.1 aŭ pli nova."

#: ../source/specifications/recording-installed-packages.rst:94
msgid ""
"The ``METADATA`` file is mandatory. If it cannot be created, or if required "
"core metadata is not available, installers must report an error and fail to "
"install the project."
msgstr ""
"La dosiero ``METADATA`` estas deviga. Se ĝi ne estas kreebla aŭ se "
"postulataj kernaj metadatenoj mankas, instalilo devas sciigi pri eraro kaj "
"malsukcesigi la instaladon de la projekto."

#: ../source/specifications/recording-installed-packages.rst:100
msgid "The RECORD file"
msgstr "La dosiero RECORD"

#: ../source/specifications/recording-installed-packages.rst:102
msgid ""
"The ``RECORD`` file holds the list of installed files. It is a CSV file "
"containing one record (line) per installed file."
msgstr ""
"La dosiero ``RECORD`` tenas la liston de instalitaj dosieroj. Ĝi estas "
"diskoma dosiero enhavanta po unu rikordo (linio) por ĉiu instalita dosiero."

#: ../source/specifications/recording-installed-packages.rst:105
msgid ""
"The CSV dialect must be readable with the default ``reader`` of Python's "
"``csv`` module:"
msgstr ""
"La dialekto de diskoma dosiero devas esti legebla per la apriora ``reader`` "
"de la modulo ``csv`` de Python:"

#: ../source/specifications/recording-installed-packages.rst:108
msgid "field delimiter: ``,`` (comma),"
msgstr "Disigilo de kampoj: ``,`` (komo),"

#: ../source/specifications/recording-installed-packages.rst:109
msgid "quoting char: ``\"`` (straight double quote),"
msgstr "Citilo: ``\"`` (neŭtra duobla citilo),"

#: ../source/specifications/recording-installed-packages.rst:110
msgid "line terminator: either ``\\r\\n`` or ``\\n``."
msgstr "linifino: aŭ ``\\r\\n`` aŭ ``\\n``."

#: ../source/specifications/recording-installed-packages.rst:112
msgid ""
"Each record is composed of three elements: the file's **path**, the **hash** "
"of the contents, and its **size**."
msgstr ""
"Ĉiu rikordo konsistas el tri elemento: la dosierloko (**path**), la haketaĵo "
"(**hash**) de la enhavo, kaj la grando (**size**)."

#: ../source/specifications/recording-installed-packages.rst:115
msgid ""
"The *path* may be either absolute, or relative to the directory containing "
"the ``.dist-info`` directory (commonly, the ``site-packages`` directory). On "
"Windows, directories may be separated either by forward- or backslashes (``/"
"`` or ``\\``)."
msgstr ""
"La *path* povas esti aŭ malrelativa aŭ relativa al la dosierujo enhavanta la "
"dosierujon ``.dist-info`` (ordinare, la dosierujo ``site-packages``). Je "
"Windows, oni povas disigi dosierlokajn komponantojn per aŭ suprenstreko (``/"
"``) aŭ malsuprenstreko (``\\``)."

#: ../source/specifications/recording-installed-packages.rst:120
msgid ""
"The *hash* is either an empty string or the name of a hash algorithm from :"
"py:data:`hashlib.algorithms_guaranteed`, followed by the equals character "
"``=`` and the digest of the file's contents, encoded with the urlsafe-base64-"
"nopad encoding (:py:func:`base64.urlsafe_b64encode(digest) <base64."
"urlsafe_b64encode()>` with trailing ``=`` removed)."
msgstr ""
"La *hash* estas aŭ malplena signoĉeno aŭ la nomo de haketaĵa algoritmo el :"
"py:data:`hashlib.algorithms_guaranteed`, sekvita de la egalsigno ``=`` kaj "
"la haketaĵo de la enhavo de la dosiero kodita laŭ urlsafe-base64-nopad (:py:"
"func:`base64.urlsafe_b64encode(haketaĵo) <base64.urlsafe_b64encode()>` sen "
"fina ``=``)."

#: ../source/specifications/recording-installed-packages.rst:125
msgid ""
"The *size* is either the empty string, or file's size in bytes, as a base 10 "
"integer."
msgstr ""
"La *size* estas aŭ la malplena signoĉeno aŭ la grando de la dosiero en "
"bajtoj kiel dekuma entjero."

#: ../source/specifications/recording-installed-packages.rst:128
msgid ""
"For any file, either or both of the *hash* and *size* fields may be left "
"empty. Commonly, entries for ``.pyc`` files and the ``RECORD`` file itself "
"have empty *hash* and *size*. For other files, leaving the information out "
"is discouraged, as it prevents verifying the integrity of the installed "
"project."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:134
msgid ""
"If the ``RECORD`` file is present, it must list all installed files of the "
"project, except ``.pyc`` files corresponding to ``.py`` files listed in "
"``RECORD``, which are optional. Notably, the contents of the ``.dist-info`` "
"directory (including the ``RECORD`` file itself) must be listed. Directories "
"should not be listed."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:141
msgid ""
"To completely uninstall a package, a tool needs to remove all files listed "
"in ``RECORD``, all ``.pyc`` files (of all optimization levels) corresponding "
"to removed ``.py`` files, and any directories emptied by the uninstallation."
msgstr ""
"Por plene malinstali pakon, ilo devas forviŝi ĉiujn dosierojn en ``RECORD``, "
"ĉiujn dosierojn ``.pyc`` (de ajna optimumiga nivelo) respondantajn al "
"forviŝotaj ``.py``-dosieroj, kaj ajnaj dosierujoj malplenigotaj de la "
"malinstalo."

#: ../source/specifications/recording-installed-packages.rst:146
msgid "Here is an example snippet of a possible ``RECORD`` file::"
msgstr "Jen ekzemplo de ebla dosiero ``RECORD``::"

#: ../source/specifications/recording-installed-packages.rst:165
msgid ""
"If the ``RECORD`` file is missing, tools that rely on ``.dist-info`` must "
"not attempt to uninstall or upgrade the package. (This restriction does not "
"apply to tools that rely on other sources of information, such as system "
"package managers in Linux distros.)"
msgstr ""
"Se la dosiero ``RECORD`` mankas, ilo dependanta de ``.dist-info`` devas ne "
"provi malinstali aŭ ĝisdatigi la pakon. (Tiu devo ne temas pri ilo uzanta "
"aliajn informojn kiel sistema pakadministrilo de Linux-distribuo.)"

#: ../source/specifications/recording-installed-packages.rst:172
msgid ""
"It is *strongly discouraged* for an installed package to modify itself (e."
"g., store cache files under its namespace in ``site-packages``). Changes "
"inside ``site-packages`` should be left to specialized installer tools such "
"as pip. If a package is nevertheless modified in this way, then the "
"``RECORD`` must be updated, otherwise uninstalling the package will leave "
"unlisted files in place (possibly resulting in a zombie namespace package)."
msgstr ""
"Ni *rekomendegas*, ke instalita pako ne modifu sin (ekz. per enkaŝmemorigo "
"de dosieroj sub sia nomspaco en ``site-packages``). Nur fakaj instaliloj "
"kiel pip modifu ``site-changes``. Se pako tamen tiel sin modifas, do ĝi "
"devas ĝisdatigu ``RECORD``; se tio ne okazus, malinstalado de pako lasus "
"eksterlistajn dosierojn (eble kreante fantoman nomspacan pakon)."

#: ../source/specifications/recording-installed-packages.rst:181
msgid "The INSTALLER file"
msgstr "La dosiero INSTALLER"

#: ../source/specifications/recording-installed-packages.rst:183
msgid ""
"If present, ``INSTALLER`` is a single-line text file naming the tool used to "
"install the project. If the installer is executable from the command line, "
"``INSTALLER`` should contain the command name. Otherwise, it should contain "
"a printable ASCII string."
msgstr ""
"Se dosiero ``INSTALLER`` ekzistas, ĝi estas unulinia teksta dosiero nomanta "
"la ilon uzitan por instali la projekton. Se la instalilo estas rulebla ĉe la "
"komandlinio, ``INSTALLER`` enhavu la nomon de la komando. Se ne, ĝi enhavu "
"preseblan Askian signoĉenon."

#: ../source/specifications/recording-installed-packages.rst:189
msgid "The file can be terminated by zero or more ASCII whitespace characters."
msgstr "La dosiero povas finiĝi per nul aŭ pli da Askiaj blankspacaj signoj."

#: ../source/specifications/recording-installed-packages.rst:191
msgid "Here are examples of two possible ``INSTALLER`` files::"
msgstr "Jen ekzemploj de du eblaj dosieroj ``INSTALLER``::"

#: ../source/specifications/recording-installed-packages.rst:199
msgid ""
"This value should be used for informational purposes only. For example, if a "
"tool is asked to uninstall a project but finds no ``RECORD`` file, it may "
"suggest that the tool named in ``INSTALLER`` may be able to do the "
"uninstallation."
msgstr ""
"Tiu valoro estu uzata nur por informaj celoj. Ekzemple, se oni provus "
"malinstali projekton per iu ilo, sed la ilo ne trovus dosieron ``RECORD``, "
"ĝi povus sugesti, ke oni uzu la ilon nomitan en ``INSTALLER`` por malinstali."

#: ../source/specifications/recording-installed-packages.rst:206
msgid "The entry_points.txt file"
msgstr "La dosiero entry_points.txt"

#: ../source/specifications/recording-installed-packages.rst:208
msgid ""
"This file MAY be created by installers to indicate when packages contain "
"components intended for discovery and use by other code, including console "
"scripts and other applications that the installer has made available for "
"execution."
msgstr ""
"Ĉi tiun dosieron instalilo POVAS krei por indiki, ke pako enhavas "
"komponantojn malkovreblajn kaj uzeblajn de alia kodo, inkluzive de konzolaj "
"programetoj kaj aliaj programoj rulebligitaj de la instalilo."

#: ../source/specifications/recording-installed-packages.rst:213
msgid "Its detailed specification is at :ref:`entry-points`."
msgstr "Ĝia detala specifo troviĝas ĉe :ref:`entry-points`."

#: ../source/specifications/recording-installed-packages.rst:217
msgid "The direct_url.json file"
msgstr "La dosiero direct_url.json"

#: ../source/specifications/recording-installed-packages.rst:219
msgid ""
"This file MUST be created by installers when installing a distribution from "
"a requirement specifying a direct URL reference (including a VCS URL)."
msgstr ""
"Tiu dosiero DEVAS esti kreita de instalilo dum instalado de distribuo pro "
"postulo specifitanta rektan retadresan referencon (inkluzive de "
"versikontrolsistema retadreso)."

#: ../source/specifications/recording-installed-packages.rst:225
msgid "Its detailed specification is at :ref:`direct-url`."
msgstr "La detala specifo troviĝas ĉe :ref:`direct-url`."

#: ../source/specifications/recording-installed-packages.rst:229
msgid "The :file:`licenses/` subdirectory"
msgstr "La dosierujo :file:`licenses/`"

#: ../source/specifications/recording-installed-packages.rst:231
msgid ""
"If the metadata version is 2.4 or greater and one or more ``License-File`` "
"fields is specified, the :file:`.dist-info/` directory MUST contain a :file:"
"`licenses/` subdirectory which MUST contain the files listed in the "
"``License-File`` fields in the :file:`METADATA` file at their respective "
"paths relative to the :file:`licenses/` directory. Any files in this "
"directory MUST be copied from wheels by the install tools."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:240
msgid "The :file:`sboms/` subdirectory"
msgstr "La subdosierujo :file:`sboms/`"

#: ../source/specifications/recording-installed-packages.rst:242
msgid ""
"All files contained within the :file:`.dist-info/sboms/` directory MUST be "
"Software Bill-of-Materials (SBOM) files that describe software contained "
"within the installed package. Any files in this directory MUST be copied "
"from wheels by the install tools."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:249
msgid "Intentionally preventing changes to installed packages"
msgstr "Intence malhelpi ŝanĝi instalitajn pakojn"

#: ../source/specifications/recording-installed-packages.rst:251
msgid ""
"In some cases (such as when needing to manage external dependencies in "
"addition to Python ecosystem dependencies), it is desirable for a tool that "
"installs packages into a Python environment to ensure that other tools are "
"not used to uninstall or otherwise modify that installed package, as doing "
"so may cause compatibility problems with the wider environment."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:257
msgid "To achieve this, affected tools should take the following steps:"
msgstr "Por tio, rilataj iloj faru la jenon:"

#: ../source/specifications/recording-installed-packages.rst:259
msgid ""
"Rename or remove the ``RECORD`` file to prevent changes via other tools (e."
"g. appending a suffix to create a non-standard ``RECORD.tool`` file if the "
"tool itself needs the information, or omitting the file entirely if the "
"package contents are tracked and managed via other means)"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:263
msgid ""
"Write an ``INSTALLER`` file indicating the name of the tool that should be "
"used to manage the package (this allows ``RECORD``-aware tools to provide "
"better error notices when asked to modify affected packages)"
msgstr ""
"Kreu dosieron ``INSTALLER`` sciiganta pri la nomo de la ilo por mastrumi la "
"pakon (tio permesas al ilo scianta pri ``RECORD`` provizi bonajn erarojn pri "
"modifado de rilataj pakoj)"

#: ../source/specifications/recording-installed-packages.rst:267
msgid ""
"Python runtime providers may also prevent inadvertent modification of "
"platform provided packages by modifying the default Python package "
"installation scheme to use a location other than that used by platform "
"provided packages (while also ensuring both locations appear on the default "
"Python import path)."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:272
msgid ""
"In some circumstances, it may be desirable to block even installation of "
"additional packages via Python-specific tools. For these cases refer to :ref:"
"`externally-managed-environments`"
msgstr ""
"Kelkfoje, oni bezonas malhelpi eĉ instaladon de pliaj pakoj per Python-"
"specifaj iloj. Tiukaze vidu :ref:`externally-managed-environments`"

#: ../source/specifications/recording-installed-packages.rst:280
msgid ""
"June 2009: The original version of this specification was approved through :"
"pep:`376`.  At the time, it was known as the *Database of Installed Python "
"Distributions*."
msgstr ""
"Junio 2009: La originala versio de ĉi tiu specifo estis aprobita per :pep:"
"`376`.  Tiam, ĝi nomiĝis la *Datenbanko de Instalitaj Python-Distribuoj*."

#: ../source/specifications/recording-installed-packages.rst:283
msgid ""
"March 2020: The specification of the ``direct_url.json`` file was approved "
"through :pep:`610`. It is only mentioned on this page; see :ref:`direct-url` "
"for the full definition."
msgstr ""
"Marto 2020: La specifo de la dosiero ``direct_url.json`` estis aprobita per :"
"pep:`610`. Ĉi tiu paĝo nur mencias ĝin; vidu :ref:`direct-url` por la plena "
"difino."

#: ../source/specifications/recording-installed-packages.rst:286
msgid ""
"September 2020: Various amendments and clarifications were approved through :"
"pep:`627`."
msgstr ""
"Septembro 2020: Diversaj amendoj kaj klarigoj estis aprobitaj per :pep:`627`."

#: ../source/specifications/schemas/index.rst:4
#, fuzzy
#| msgid "Data schema"
msgid "PyPA schemas"
msgstr "Datena skemo"

#: ../source/specifications/schemas/index.rst:6
#, fuzzy
#| msgid "``direct_url.json``: see :ref:`direct-url` for details"
msgid "`direct_url.json <direct-url.schema.json>`_"
msgstr "``direct_url.json``: vidu :ref:`direct-url` por detaloj"

#: ../source/specifications/schemas/index.rst:7
msgid "`build-details.json <build-details-v1.0.schema.json>`_"
msgstr ""

#: ../source/specifications/schemas/index.rst:8
msgid "`pylock.toml <pylock.schema.json>`_"
msgstr ""

#: ../source/specifications/section-distribution-formats.rst:3
msgid "Package Distribution File Formats"
msgstr "Pako-Distribuaj Dosierformoj"

#: ../source/specifications/section-distribution-metadata.rst:3
msgid "Package Distribution Metadata"
msgstr "Pako-Distribuaj Metadatenoj"

#: ../source/specifications/section-installation-metadata.rst:3
msgid "Package Installation Metadata"
msgstr "Pako-Instalaj Metadatenoj"

#: ../source/specifications/section-package-indices.rst:3
msgid "Package Index Interfaces"
msgstr "Pakindeksaj Interfacoj"

#: ../source/specifications/section-python-description-formats.rst:3
msgid "Python Description Formats"
msgstr "Python-Priskribaj Formoj"

#: ../source/specifications/section-reproducible-environments.rst:3
#, fuzzy
#| msgid "Virtual Environment"
msgid "Reproducible Environments"
msgstr "Virtuala Medio"

#: ../source/specifications/simple-repository-api.rst:6
msgid "Simple repository API"
msgstr "Simpla deponeja API"

#: ../source/specifications/simple-repository-api.rst:8
msgid ""
"The keywords \"**MUST**\", \"**MUST NOT**\", \"**REQUIRED**\", "
"\"**SHALL**\", \"**SHALL NOT**\", \"**SHOULD**\", \"**SHOULD NOT**\", "
"\"**RECOMMENDED**\", \"**MAY**\", and \"**OPTIONAL**\"\" in this document "
"are to be interpreted as described in :rfc:`2119`."
msgstr ""
"La ŝlosilvortoj **«DEVAS» (MUST, SHALL)**, **«DEVAS NE» (MUST NOT, SHALL "
"NOT)**, **«POSTULATA» (REQUIRED)**, **«-U» (SHOULD)**, **«NE -U» (SHOULD "
"NOT)**, **«REKOMENDATA» (RECOMMENDED)**, **«POVAS» (MAY)** kaj "
"**«NEDEVIGA» (OPTIONAL)**\" en ĉi tiu dokumento estas interpretataj laŭ :rfc:"
"`2119`."

#: ../source/specifications/simple-repository-api.rst:13
#, fuzzy
#| msgid ""
#| "The interface for querying available package versions and retrieving "
#| "packages from an index server comes in two forms: HTML and JSON."
msgid ""
"The interface for querying available package versions and retrieving "
"packages from an index server comes in two forms: :ref:`HTML <simple-"
"repository-html-serialization>` and :ref:`JSON <json-serialization>`."
msgstr ""
"La interfaco por peti informojn pri haveblaj versioj de pakoj kaj akiri "
"pakojn el indeksa servilo havas du formojn: HTML kaj JSON."

#: ../source/specifications/simple-repository-api.rst:21
#, fuzzy
#| msgid "Base HTML API"
msgid "Base API"
msgstr "Baza HTML API"

#: ../source/specifications/simple-repository-api.rst:23
#, fuzzy
#| msgid ""
#| "A repository that implements the simple API is defined by its base URL, "
#| "this is the top level URL that all additional URLs are below. The API is "
#| "named the \"simple\" repository due to the fact that PyPI's base URL is "
#| "``https://pypi.org/simple/``."
msgid ""
"A repository that implements the simple API is defined by its base URL. This "
"is the top level URL that all additional URLs are below. The API is named "
"the \"simple\" repository due to the fact that PyPI's base URL is ``https://"
"pypi.org/simple/``."
msgstr ""
"Deponejo realiganta la simplan API estas difinita de sia baza retadreso. Tiu "
"estas la supranivela URL, sub kiuj ĉiaj aliaj retadresoj ĉeestas. La API "
"nomiĝas «simpla», ĉar la baza retadreso de PyPI estas ``https://pypi.org/"
"simple/``."

#: ../source/specifications/simple-repository-api.rst:28
msgid ""
"All subsequent URLs in this document will be relative to this base URL (so "
"given PyPI's URL, a URL of ``/foo/`` would be ``https://pypi.org/simple/foo/"
"``."
msgstr ""
"Ĉiuj sekvaj retadresoj en ĉi tiu dokumento estos relativaj al tiu baza "
"retadreso. (Ekzemple, pri retadreso de PyPI, ``/foo/`` respondos al "
"``https://pypi.org/simple/foo/``."

#: ../source/specifications/simple-repository-api.rst:33
msgid "Normalized Names"
msgstr "Normigitaj Nomoj"

#: ../source/specifications/simple-repository-api.rst:35
msgid ""
"This spec references the concept of a \"normalized\" project name. As per :"
"ref:`the name normalization specification <name-normalization>` the only "
"valid characters in a name are the ASCII alphabet, ASCII numbers, ``.``, ``-"
"``, and ``_``. The name should be lowercased with all runs of the characters "
"``.``, ``-``, or ``_`` replaced with a single ``-`` character. This can be "
"implemented in Python with the ``re`` module::"
msgstr ""
"Ĉi tiu specifo referencas la koncepton de «normigita» projekta nomo. Laŭ :"
"ref:`la specifo pri normigo de nomoj <name-normalization>`, la validaj "
"skrisbignoj en nomo estas Askiaj literoj, Asikaj ciferoj, ``.``, ``-``, kaj "
"``_``. La nomo estu minuskligita, kun sinsekvoj de ``.``, ``-``, aŭ ``_`` "
"anstataŭigitaj per unu skribsigno ``-``. Oni povas fari tion en Python per "
"la modulo ``re``::"

#: ../source/specifications/simple-repository-api.rst:50
msgid "Versioning PyPI's Simple API"
msgstr "Versiado de la Simpla API de PyPI"

#: ../source/specifications/simple-repository-api.rst:52
msgid ""
"This spec proposes the inclusion of a meta tag on the responses of every "
"successful request to a simple API page, which contains a name attribute of "
"``pypi:repository-version``, and a content that is a :ref:`version "
"specifiers specification <version-specifiers>` compatible version number, "
"which is further constrained to ONLY be Major.Minor, and none of the "
"additional features supported by :ref:`the version specifiers specification "
"<version-specifiers>`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:60
msgid "This would end up looking like:"
msgstr "Tio aspektus jene:"

#: ../source/specifications/simple-repository-api.rst:66
msgid "When interpreting the repository version:"
msgstr "Dum interpretado de la deponeja versio:"

#: ../source/specifications/simple-repository-api.rst:68
msgid ""
"Incrementing the major version is used to signal a backwards incompatible "
"change such that existing clients would no longer be expected to be able to "
"meaningfully use the API."
msgstr ""
"Alkremento de la maĵora versio signifas neretrokongruan ŝanĝon tian, ke "
"ekzistanta kliento supozeble ne plu povas signife uzi la API."

#: ../source/specifications/simple-repository-api.rst:71
msgid ""
"Incrementing the minor version is used to signal a backwards compatible "
"change such that existing clients would still be expected to be able to "
"meaningfully use the API."
msgstr ""
"Alkremento de la minora versio signifas retrokongruan ŝanĝon tian, ke "
"ekzistantaj klientoj verŝajne povas daŭre signife uzi la API."

#: ../source/specifications/simple-repository-api.rst:75
msgid ""
"It is left up to the discretion of any future specs as to what specifically "
"constitutes a backwards incompatible vs compatible change beyond the broad "
"suggestion that existing clients will be able to \"meaningfully\" continue "
"to use the API, and can include adding, modifying, or removing existing "
"features."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:81
msgid ""
"It is expectation of this spec that the major version will never be "
"incremented, and any future major API evolutions would utilize a different "
"mechanism for API evolution. However the major version is included to "
"disambiguate with future versions (e.g. a hypothetical simple api v2 that "
"lived at /v2/, but which would be confusing if the repository-version was "
"set to a version >= 2)."
msgstr ""
"La aŭtoroj de ĉi tiu normo atendas, ke la maĵora versio neniam "
"alkrementiĝos, kaj ajna estonta grava evoluo de la API uzos alian meĥanismon "
"por API-evoluo. Tamen la maĵora versio inkluziviĝas por malambiguigi kun "
"estontaj versioj (ekz. pri hipoteza simpla API v2, kiuj ĉeestus ĉe /v2/, "
"estus konfuza, se la deponejo-versio estus ≥2)."

#: ../source/specifications/simple-repository-api.rst:89
msgid "API Version History"
msgstr "Versio-historio de la API"

#: ../source/specifications/simple-repository-api.rst:91
msgid ""
"This section contains only an abbreviated history of changes, as marked by "
"the API version number. For a full history of changes including changes made "
"before API versioning, see :ref:`History <simple-repository-history>`."
msgstr ""
"Tiu sekcio enhavas nur mallongan historion de ŝanĝoj laŭ la versia numero de "
"la API. Por plena historio de ŝanĝoj inkluzive de ŝanĝoj faritaj antaŭ "
"ekstarigo de versioj de la API, vidu :ref:`la Historion <simple-repository-"
"history>`."

#: ../source/specifications/simple-repository-api.rst:95
msgid "API version 1.0: Initial version of the API, declared with :pep:`629`."
msgstr ""
"Versio 1.0 de la API: la unua versio de la API, deklarita per :pep:`629`."

#: ../source/specifications/simple-repository-api.rst:96
msgid ""
"API version 1.1: Added ``versions``, ``files[].size``, and ``files[].upload-"
"time`` metadata to the JSON serialization, declared with :pep:`700`."
msgstr ""
"Versio 1.1. de la API: Aldonis la metadatenojn ``versions``, ``files[]."
"size``, kaj ``files[].upload-time`` al la JSON-seriigo, deklaritajn per :pep:"
"`700`."

#: ../source/specifications/simple-repository-api.rst:98
msgid ""
"API version 1.2: Added repository \"tracks\" metadata, declared with :pep:"
"`708`."
msgstr ""
"Versio 1.2 de la API: aldonis deponejajn metadatenojn pri «spurado», "
"deklaritajn per :pep:`708`."

#: ../source/specifications/simple-repository-api.rst:99
msgid "API version 1.3: Added provenance metadata, declared with :pep:`740`."
msgstr ""
"Versio 1.3 de la API: aldonis metadatenojn pri originpruvo, deklaritajn per :"
"pep:`740`."

#: ../source/specifications/simple-repository-api.rst:100
#, fuzzy
#| msgid ""
#| "API version 1.3: Added provenance metadata, declared with :pep:`740`."
msgid "API version 1.4: Added status markers, declared with :pep:`792`."
msgstr ""
"Versio 1.3 de la API: aldonis metadatenojn pri originpruvo, deklaritajn per :"
"pep:`740`."

#: ../source/specifications/simple-repository-api.rst:103
msgid "Clients"
msgstr "Klientoj"

#: ../source/specifications/simple-repository-api.rst:105
msgid ""
"Clients interacting with the simple API **SHOULD** introspect each response "
"for the repository version, and if that data does not exist **MUST** assume "
"that it is version 1.0."
msgstr ""
"Kliento interaganta kun la simpla API **INSPEKTU** ĉiun respondon pri la "
"deponeja versio. Se tiu dateno mankas, la kliento **DEVAS** supozi, ke ĝi "
"estas versio 1.0."

#: ../source/specifications/simple-repository-api.rst:109
msgid ""
"When encountering a major version greater than expected, clients **MUST** "
"hard fail with an appropriate error message for the user."
msgstr ""
"Renkontinte maĵoran version pli grandan ol la atenditan, kliento **DEVAS** "
"malsukcesi kun taŭga erarmesaĝo por la uzanto."

#: ../source/specifications/simple-repository-api.rst:112
msgid ""
"When encountering a minor version greater than expected, clients **SHOULD** "
"warn users with an appropriate message."
msgstr ""
"Renkontinte minoran version pli grandan ol la atenditan, kliento **AVERTU** "
"la uzanton kun taŭga mesaĝo."

#: ../source/specifications/simple-repository-api.rst:115
msgid ""
"Clients **MAY** still continue to use feature detection in order to "
"determine what features a repository uses."
msgstr ""
"Kliento **POVAS** daŭre uzi detektadon de funkcioj por determini la "
"funkciojn uzatajn de iu deponejo."

#: ../source/specifications/simple-repository-api.rst:121
#, fuzzy
#| msgid "JSON Serialization"
msgid "HTML Serialization"
msgstr "JSON-igo"

#: ../source/specifications/simple-repository-api.rst:125
#, fuzzy
#| msgid ""
#| "The following constraints apply to all JSON serialized responses "
#| "described in this spec:"
msgid ""
"The following constraints apply to all HTML serialized responses described "
"in this spec:"
msgstr ""
"La sekvaj limigoj validas por ĉiuj JSON-seriigitaj respondoj priskribitaj en "
"ĉi tiu specifo:"

#: ../source/specifications/simple-repository-api.rst:128
msgid "All HTML responses **MUST** be a valid HTML5 document."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:129
msgid ""
"HTML responses **MAY** contain one or more ``meta`` tags in the ``<head>`` "
"section. The semantics of these tags are defined below."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:133
#: ../source/specifications/simple-repository-api.rst:428
msgid "Project List"
msgstr "Listo de Projektoj"

#: ../source/specifications/simple-repository-api.rst:135
#, fuzzy
#| msgid ""
#| "Within a repository, the root URL (``/`` for this spec which represents "
#| "the base URL) **MUST** be a valid HTML5 page with a single anchor element "
#| "per project in the repository. The text of the anchor tag **MUST** be the "
#| "name of the project and the href attribute **MUST** link to the URL for "
#| "that particular project. As an example:"
msgid ""
"Within a repository, the root URL (``/`` for this spec which represents the "
"base URL) **MUST** be a valid HTML5 page with a single anchor element per "
"project in the repository."
msgstr ""
"En deponejo, la radika retadreso (``/`` por ĉi tiu specifo, reprezentanta la "
"bazan retadreson) **DEVAS** esti valida HTML5-paĝo kun ankraj elementoj po "
"unu por ĉiu projekto en la deponejo. La teksto de la ankra elemento "
"**DEVAS** esti la nomo de la projekto, kaj la atributo ``href`` **DEVAS** "
"ligi al la retadreso de tiu projekto. Ekzemple:"

#: ../source/specifications/simple-repository-api.rst:139
#, fuzzy
#| msgid ""
#| "Within a repository, the root URL (``/`` for this spec which represents "
#| "the base URL) **MUST** be a valid HTML5 page with a single anchor element "
#| "per project in the repository. The text of the anchor tag **MUST** be the "
#| "name of the project and the href attribute **MUST** link to the URL for "
#| "that particular project. As an example:"
msgid ""
"The text of each anchor tag **MUST** be the name of the project and the "
"``href`` attribute **MUST** link to the URL for that particular project. As "
"an example:"
msgstr ""
"En deponejo, la radika retadreso (``/`` por ĉi tiu specifo, reprezentanta la "
"bazan retadreson) **DEVAS** esti valida HTML5-paĝo kun ankraj elementoj po "
"unu por ĉiu projekto en la deponejo. La teksto de la ankra elemento "
"**DEVAS** esti la nomo de la projekto, kaj la atributo ``href`` **DEVAS** "
"ligi al la retadreso de tiu projekto. Ekzemple:"

#: ../source/specifications/simple-repository-api.rst:156
#: ../source/specifications/simple-repository-api.rst:473
msgid "Project Detail"
msgstr "Projekta Detalo"

#: ../source/specifications/simple-repository-api.rst:158
msgid ""
"Below the root URL is another URL for each individual project contained "
"within a repository. The format of this URL is ``/<project>/``, where the "
"``<project>`` is replaced by the normalized name for that project."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:164
msgid ""
"For example, a project named \"HolyGrail\" would have a URL like ``/"
"holygrail/``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:167
msgid ""
"The project detail URL must respond with a valid HTML5 page with a single "
"anchor element per file for the project. The ``href`` attribute **MUST** be "
"a URL that links to the location of the file for download, and the text of "
"the anchor tag **MUST** match the final path component (the filename) of the "
"URL."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:172
#, fuzzy
#| msgid ""
#| "The repository **SHOULD** provide the hash of the Core Metadata file as "
#| "the ``data-core-metadata`` attribute's value using the syntax "
#| "``<hashname>=<hashvalue>``, where ``<hashname>`` is the lower cased name "
#| "of the hash function used, and ``<hashvalue>`` is the hex encoded digest. "
#| "The repository **MAY** use ``true`` as the attribute's value if a hash is "
#| "unavailable."
msgid ""
"Each file URL **SHOULD** include a hash in the form of a URL fragment with "
"the following syntax: ``#<hashname>=<hashvalue>``, where ``<hashname>`` is "
"the lowercase name of the hash function (such as ``sha256``) and "
"``<hashvalue>`` is the hex encoded digest."
msgstr ""
"La deponejo **PROVIZU** la haketaĵon de la dosiero de Kernaj Metadatenoj "
"kiel la valoron de la atributo ``data-core-metadata`` laŭ la sintakso "
"``<nomo-de-haketaĵo>=<valoro-de-haketaĵo>``, en kiu ``<nomo-de-haketaĵo>`` "
"estas la minuskla nomo de la uzita haketaĵa funkcio kaj ``<valoro-de-"
"haketaĵo>`` estas la deksesume kodita valoro de la haketaĵa funkcio. La "
"deponejo **POVAS** uzi ``true`` kiel la valoron de la atributo, se haketaĵo "
"ne estas disponebla."

#: ../source/specifications/simple-repository-api.rst:177
msgid ""
"In addition to the above, the following constraints are placed on the API:"
msgstr "Aldone al ĉi-supro, ekzistas la jenaj limigoj pri la API:"

#: ../source/specifications/simple-repository-api.rst:179
msgid ""
"All URLs which respond with an HTML5 page **MUST** end with a ``/`` and the "
"repository **SHOULD** redirect the URLs without a ``/`` to add a ``/`` to "
"the end."
msgstr ""
"Ĉiu URL respondanta per HTML-paĝo **DEVAS** finiĝi per ``/``. La deponejo "
"**REDIREKTU** URL sen ``/`` al URL kun sufiksa ``/``."

#: ../source/specifications/simple-repository-api.rst:183
msgid ""
"URLs may be either absolute or relative as long as they point to the correct "
"location."
msgstr "URL povas esti aŭ absoluta aŭ relativa, se ĝi montras la ĝustan lokon."

#: ../source/specifications/simple-repository-api.rst:186
msgid ""
"There are no constraints on where the files must be hosted relative to the "
"repository."
msgstr ""
"Ekzistas nenia limigo pri kie la dosieroj ĉeestu relative al la deponejo."

#: ../source/specifications/simple-repository-api.rst:189
msgid ""
"There may be any other HTML elements on the API pages as long as the "
"required anchor elements exist."
msgstr ""
"Povas ekzisti aliaj HTML-elementoj sur la API-paĝo, se la postulataj ankraj "
"elementoj ekzistas."

#: ../source/specifications/simple-repository-api.rst:192
msgid ""
"Repositories **MAY** redirect unnormalized URLs to the canonical normalized "
"URL (e.g. ``/Foobar/`` may redirect to ``/foobar/``), however clients **MUST "
"NOT** rely on this redirection and **MUST** request the normalized URL."
msgstr ""
"Deponejo **POVAS** redirekti nenormigitan retadreson al la kanona normigita "
"retadreso (ekz. de ``/Foobar/`` al ``/foobar/``). Tamen, kliento **DEVAS "
"NE** dependi de tia redirektado kaj **DEVAS** peti la normigitan retadreson."

#: ../source/specifications/simple-repository-api.rst:197
msgid ""
"Repositories **SHOULD** choose a hash function from one of the ones "
"guaranteed to be available via the :py:mod:`hashlib` module in the Python "
"standard library (currently ``md5``, ``sha1``, ``sha224``, ``sha256``, "
"``sha384``, ``sha512``). The current recommendation is to use ``sha256``."
msgstr ""
"Deponejo **ELEKTU** haketfunkcion el unu el tiuj garantie disponeblaj ĉe la "
"modulo :py:mod:`hashlib` en la norma biblioteko de Python (aktuale ``md5``, "
"``sha1``, ``sha224``, ``sha256``, ``sha384``, ``sha512``). La nuna rekomendo "
"estas uzi ``sha256``."

#: ../source/specifications/simple-repository-api.rst:202
msgid ""
"If there is a GPG signature for a particular distribution file it **MUST** "
"live alongside that file with the same name with a ``.asc`` appended to it. "
"So if the file ``/packages/HolyGrail-1.0.tar.gz`` existed and had an "
"associated signature, the signature would be located at ``/packages/"
"HolyGrail-1.0.tar.gz.asc``."
msgstr ""
"Se ekzistas GPG-subskribo por iu distruo-dosiero, ĝi **DEVAS** ĉeesti apud "
"tiu dosiero kun la sama dosiernomo krom sufikso ``.asc``. Ekzemple, se la "
"dosiero ``/packages/SanktaGralo-1.0.tar.gz`` ekzistus kaj havus asociitan "
"subskribon, la subskribo troviĝus ĉe ``/packages/SanktaGralo-1.0.tar.gz."
"asc``."

#: ../source/specifications/simple-repository-api.rst:208
msgid ""
"A repository **MAY** include a ``data-core-metadata`` attribute on a file "
"link."
msgstr ""
"Deponejo **POVAS** inkluzivi atributon ``data-core-metadata`` sur dosiero-"
"hiperligo."

#: ../source/specifications/simple-repository-api.rst:211
msgid ""
"The repository **SHOULD** provide the hash of the Core Metadata file as the "
"``data-core-metadata`` attribute's value using the syntax "
"``<hashname>=<hashvalue>``, where ``<hashname>`` is the lower cased name of "
"the hash function used, and ``<hashvalue>`` is the hex encoded digest. The "
"repository **MAY** use ``true`` as the attribute's value if a hash is "
"unavailable."
msgstr ""
"La deponejo **PROVIZU** la haketaĵon de la dosiero de Kernaj Metadatenoj "
"kiel la valoron de la atributo ``data-core-metadata`` laŭ la sintakso "
"``<nomo-de-haketaĵo>=<valoro-de-haketaĵo>``, en kiu ``<nomo-de-haketaĵo>`` "
"estas la minuskla nomo de la uzita haketaĵa funkcio kaj ``<valoro-de-"
"haketaĵo>`` estas la deksesume kodita valoro de la haketaĵa funkcio. La "
"deponejo **POVAS** uzi ``true`` kiel la valoron de la atributo, se haketaĵo "
"ne estas disponebla."

#: ../source/specifications/simple-repository-api.rst:217
msgid ""
"A repository **MAY** include a ``data-dist-info-metadata`` attribute on a "
"file link."
msgstr ""
"Deponejo **POVAS** inkluzivi atributon ``data-dist-info-metadata`` sur "
"dosiero-hiperligo."

#: ../source/specifications/simple-repository-api.rst:220
msgid ""
"Index clients **MAY** consume this key if present, as a legacy fallback for "
"``data-core-metadata``."
msgstr ""
"Indekso-kliento **POVAS** uzi tiun ŝlosilon, se ĝi ekzistas, kiel evitindan "
"sinonimon de ``data-core-metadata``."

#: ../source/specifications/simple-repository-api.rst:225
msgid ""
"``data-dist-info-metadata`` was standardized with :pep:`658` and renamed to "
"``data-core-metadata`` with :pep:`714`."
msgstr ""
"``data-dist-info-metadata`` estis normigita per :pep:`658`, kaj ĝia nomo "
"ŝanĝiĝis al ``data-core-metadata`` per :pep:`714`."

#: ../source/specifications/simple-repository-api.rst:228
msgid ""
"A repository **MAY** include a ``data-gpg-sig`` attribute on a file link "
"with a value of either ``true`` or ``false`` to indicate whether or not "
"there is a GPG signature. Repositories that do this **SHOULD** include it on "
"every link."
msgstr ""
"Deponejo **POVAS** inkluzivi atributon `data-gpg-sig`` sur dosiera hiperligo "
"kun valoro de aŭ ``true`` aŭ ``false`` por indiki, ĉu ekzistas GPG-"
"subskribo. Deponejo faranta tion **INKLUZIVU** ĝin sur ĉiu hiperligo."

#: ../source/specifications/simple-repository-api.rst:232
msgid ""
"A repository **MAY** include a ``data-requires-python`` attribute on a file "
"link. This exposes the :ref:`core-metadata-requires-python` metadata field "
"for the corresponding release. Where this is present, installer tools "
"**SHOULD** ignore the download when installing to a Python version that "
"doesn't satisfy the requirement. For example:"
msgstr ""
"Deponejo **POVAS** inkluzivi atributon ``data-requires-python`` sur dosiera "
"hiperligo. Tiu respondas al la metadatena kampo :ref:`core-metadata-requires-"
"python` por la eldono. Se tiu ekzistas, instalilo **IGNORU** la elŝuton por "
"instalado al Python-versio ne plenumanta la postulon. Ekzemple:"

#: ../source/specifications/simple-repository-api.rst:242
msgid ""
"In the attribute value, < and > have to be HTML encoded as ``&lt;`` and "
"``&gt;``, respectively."
msgstr ""
"En la atributa valoro, < kaj > devas esti HTML-kodita kiel ``&lt;`` and "
"``&gt;`` respektive."

#: ../source/specifications/simple-repository-api.rst:245
#, fuzzy
#| msgid ""
#| "A repository **MAY** include a ``data-core-metadata`` attribute on a file "
#| "link."
msgid ""
"A repository **MAY** include a ``data-yanked`` attribute on a file link."
msgstr ""
"Deponejo **POVAS** inkluzivi atributon ``data-core-metadata`` sur dosiero-"
"hiperligo."

#: ../source/specifications/simple-repository-api.rst:247
#, fuzzy
#| msgid ""
#| "Links in the simple repository **MAY** have a ``data-yanked`` attribute "
#| "which may have no value, or may have an arbitrary string as a value. The "
#| "presence of a ``data-yanked`` attribute **SHOULD** be interpreted as "
#| "indicating that the file pointed to by this particular link has been "
#| "\"Yanked\", and should not generally be selected by an installer, except "
#| "under specific scenarios."
msgid ""
"The ``data-yanked`` attribute may have no value, or may have an arbitrary "
"string as a value. The presence of a ``data-yanked`` attribute **SHOULD** be "
"interpreted as indicating that the file pointed to by this particular link "
"has been \"Yanked\", and should not generally be selected by an installer, "
"except under specific scenarios."
msgstr ""
"Hiperligo en la simpla deponejo **POVAS** havi atributon ``data-yanked``, "
"kies valoro povas esti malplena aŭ esti ajna signoĉeno. La ĉeesto de "
"atributo ``data-yanked`` **ESTU** interpretata kiel indiko, ke la dosiero "
"montrata de la hiperligo estas fortirita kaj ĝenerale ne elektata de "
"instalilo krom specifaj kondiĉoj."

#: ../source/specifications/simple-repository-api.rst:253
#, fuzzy
#| msgid ""
#| "The value of the ``data-yanked`` attribute, if present, is an arbitrary "
#| "string that represents the reason for why the file has been yanked. Tools "
#| "that process the simple repository API **MAY** surface this string to end "
#| "users."
msgid ""
"The value of the ``data-yanked`` attribute, if present, is an arbitrary "
"string that represents the reason for why the file has been yanked."
msgstr ""
"La valoro de la atributo ``data-yanked``, se ĝi ekzistas, estas arbitra "
"teksto pri la kialo de la fortiro. Ilo uzanta la simplan deponejan API "
"**POVAS** montri tiun tekston al uzanto."

#: ../source/specifications/simple-repository-api.rst:258
#: ../source/specifications/simple-repository-api.rst:601
msgid ""
"The semantics of how tools should handle yanked files is described in :ref:"
"`file-yanking`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:261
msgid ""
"A repository **MAY** include a ``data-provenance`` attribute on a file link. "
"The value of this attribute **MUST** be a fully qualified URL, signaling "
"that the file's provenance can be found at that URL. This URL **MUST** "
"represent a `secure origin <https://www.chromium.org/Home/chromium-security/"
"prefer-secure-origins-for-powerful-new-features/>`_."
msgstr ""
"Deponejo **POVAS** inkluzivi atributon ``data-provenance`` sur dosiera "
"hiperligo. La valoro de tiu atributo **DEVAS** esti plene kvalifikita URL, "
"asertante ke la originpruvo de la dosiero ĉeestas ĉe tiu URL. La URL "
"**DEVAS** prezenti `sekuran originon <https://www.chromium.org/Home/chromium-"
"security/prefer-secure-origins-for-powerful-new-features/>`_."

#: ../source/specifications/simple-repository-api.rst:268
msgid "The ``data-provenance`` attribute was added with API version 1.3."
msgstr ""
"La atributo ``data-provenance`` estis aldonita por versio 1.3 de la API."

#: ../source/specifications/simple-repository-api.rst:272
msgid ""
"The format of the linked provenance is defined in :ref:`index-hosted-"
"attestations`."
msgstr ""
"La formo de la ligita originpruvo estas difinita en :ref:`index-hosted-"
"attestations`."

#: ../source/specifications/simple-repository-api.rst:274
msgid ""
"A repository **MAY** include ``pypi:project-status`` and ``pypi:project-"
"status-reason`` meta tags on the response itself."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:277
msgid ""
"The value of ``pypi:project-status`` **MUST** be a valid project status "
"marker, while the value of ``pypi:project-status-reason`` **MUST** be an "
"arbitrary string if present."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:283
#: ../source/specifications/simple-repository-api.rst:493
msgid ""
"The set of valid project status markers and their semantics is described in :"
"ref:`project-status-markers`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:288
msgid ""
"The ``pypi:project-status`` and ``pypi:project-status-reason`` meta tags "
"were added with API version 1.4."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:294
msgid "Serve Distribution Metadata in the Simple Repository API"
msgstr "Servi Distribuajn Metadatenojn per la Simpla Deponeja API"

#: ../source/specifications/simple-repository-api.rst:296
msgid ""
"In a simple repository's project page, each anchor tag pointing to a "
"distribution **MAY** have a ``data-dist-info-metadata`` attribute. The "
"presence of the attribute indicates the distribution represented by the "
"anchor tag **MUST** contain a Core Metadata file that will not be modified "
"when the distribution is processed and/or installed."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:302
msgid ""
"If a ``data-dist-info-metadata`` attribute is present, the repository "
"**MUST** serve the distribution's Core Metadata file alongside the "
"distribution with a ``.metadata`` appended to the distribution's file name. "
"For example, the Core Metadata of a distribution served at ``/files/"
"distribution-1.0-py3.none.any.whl`` would be located at ``/files/"
"distribution-1.0-py3.none.any.whl.metadata``. This is similar to how :ref:"
"`the base HTML API specification <simple-repository-api-base>` specifies the "
"GPG signature file's location."
msgstr ""
"Se ekzistas atributo ``data-dist-info-metadata``, la deponejo **DEVAS** "
"provizi la Kernan Metadatenan dosieron de la distribuo apud la distribuo, "
"kun la sufikso ``.metadata`` post la dosiernomo de la distribuo. Ekzemple, "
"la Kernaj Metadatenoj de distribuo ĉe ``/dosieroj/distribuo-1.0-py3.none.any."
"whl`` troviĝus ĉe ``/dosieroj/distribuo-1.0-py3.none.any.whl.metadata``. Tio "
"similas al la loko de la GPG-subskribo en la :ref:`baza specifo de HTML API "
"<simple-repository-api-base>`."

#: ../source/specifications/simple-repository-api.rst:311
msgid ""
"The repository **SHOULD** provide the hash of the Core Metadata file as the "
"``data-dist-info-metadata`` attribute's value using the syntax "
"``<hashname>=<hashvalue>``, where ``<hashname>`` is the lower cased name of "
"the hash function used, and ``<hashvalue>`` is the hex encoded digest. The "
"repository **MAY** use ``true`` as the attribute's value if a hash is "
"unavailable."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:319
msgid "Backwards Compatibility"
msgstr "Retrokongrueco"

#: ../source/specifications/simple-repository-api.rst:321
msgid ""
"If an anchor tag lacks the ``data-dist-info-metadata`` attribute, tools are "
"expected to revert to their current behaviour of downloading the "
"distribution to inspect the metadata."
msgstr ""
"Se je ankra etikedo mankas la atributo ``data-dist-info-metadata``, ilo uzu "
"la aktualan konduton, elŝutante la distribuon kaj inspektante la "
"metadatenojn."

#: ../source/specifications/simple-repository-api.rst:325
msgid ""
"Older tools not supporting the new ``data-dist-info-metadata`` attribute are "
"expected to ignore the attribute and maintain their current behaviour of "
"downloading the distribution to inspect the metadata. This is similar to how "
"prior ``data-`` attribute additions expect existing tools to operate."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:334
msgid "JSON-based Simple API for Python Package Indexes"
msgstr "JSON-baza Simpla API por Python-Pakindeksoj"

#: ../source/specifications/simple-repository-api.rst:336
msgid ""
"To enable response parsing with only the standard library, this spec "
"specifies that all responses (besides the files themselves, and the HTML "
"responses from :ref:`the base HTML API specification <simple-repository-api-"
"base>`) should be serialized using `JSON <https://www.json.org/>`_."
msgstr ""
"Por ebligi analizi la sintakson de la respondo nur per la norma biblioteko, "
"ĉi tiu normo specifas, ke ĉiaj respondoj (krom la dosieroj mem kaj la HTML-"
"respondoj el :ref:`la baza normo pri HTML API <simple-repository-api-base>` "
"estu seriigitaj laŭ `JSON <https://www.json.org/>`_."

#: ../source/specifications/simple-repository-api.rst:341
msgid ""
"To enable zero configuration discovery and to minimize the amount of "
"additional HTTP requests, this spec extends :ref:`the base HTML API "
"specification <simple-repository-api-base>` such that all of the API "
"endpoints (other than the files themselves) will utilize HTTP content "
"negotiation to allow client and server to select the correct serialization "
"format to serve, i.e. either HTML or JSON."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:351
msgid ""
"Versioning will adhere to :ref:`the API versioning specification <simple-"
"repository-api-versioning>` format (``Major.Minor``), which has defined the "
"existing HTML responses to be ``1.0``. Since this spec does not introduce "
"new features into the API, rather it describes a different serialization "
"format for the existing features, this spec does not change the existing "
"``1.0`` version, and instead just describes how to serialize that into JSON."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:358
msgid ""
"Similar to :ref:`the API versioning specification <simple-repository-api-"
"versioning>`, the major version number **MUST** be incremented if any "
"changes to the new format would result in no longer being able to expect "
"existing clients to meaningfully understand the format."
msgstr ""
"Simile al :ref:`la normo pri API-versioj <simple-repository-api-"
"versioning>`, oni DEVAS alkrementi la maĵoran versio-numeron, se ŝanĝoj al "
"la nova normo kaŭzus, ke ekzistanta kliento ne plu povos signife kompreni la "
"protokolon."

#: ../source/specifications/simple-repository-api.rst:364
msgid ""
"Likewise, the minor version **MUST** be incremented if features are added or "
"removed from the format, but existing clients would be expected to continue "
"to meaningfully understand the format."
msgstr ""
"Simile, la minora versio **DEVAS** alkrementiĝi, se funkcioj estas aldonitaj "
"al aŭ malaldonitaj el la formo, sed ekzistanta kliento supozeble daŭre "
"komprenos la formon."

#: ../source/specifications/simple-repository-api.rst:368
msgid ""
"Changes that would not result in existing clients being unable to "
"meaningfully understand the format and which do not represent features being "
"added or removed may occur without changing the version number."
msgstr ""
"Ŝanĝoj, kiuj ne igus ekzistantajn klientojn ne plu kompreni la formon, kaj "
"kiuj ne aldonas aŭ forigas funkciojn, povas okazi sen ŝanĝado de la versia "
"numero."

#: ../source/specifications/simple-repository-api.rst:372
msgid ""
"This is intentionally vague, as this spec believes it is best left up to "
"future specs that make any changes to the API to investigate and decide "
"whether or not that change should increment the major or minor version."
msgstr ""
"Tio estas intencite malklara, ĉar la aŭtoroj de ĉi tiu normo kredas, la "
"aŭtoroj de verkotaj normoj ŝanĝantaj la API-on konsideru kaj decidu, ĉu "
"alkrementi la maĵoran aŭ minoran version."

#: ../source/specifications/simple-repository-api.rst:376
msgid ""
"Future versions of the API may add things that can only be represented in a "
"subset of the available serializations of that version. All serializations "
"version numbers, within a major version, **SHOULD** be kept in sync, but the "
"specifics of how a feature serializes into each format may differ, including "
"whether or not that feature is present at all."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:382
msgid ""
"It is the intent of this spec that the API should be thought of as URL "
"endpoints that return data, whose interpretation is defined by the version "
"of that data, and then serialized into the target serialization format."
msgstr ""
"Ĉi tiu normo intencas, ke oni rigardu la API kiel URL-funpunktojn "
"liverantajn datenojn, kies interpreton difinas la versio de tiuj datenoj, "
"seriigitajn laŭ la cela seriigita dosierformo."

#: ../source/specifications/simple-repository-api.rst:390
msgid "JSON Serialization"
msgstr "JSON-igo"

#: ../source/specifications/simple-repository-api.rst:392
#, fuzzy
#| msgid ""
#| "The URL structure from :ref:`the base HTML API specification <simple-"
#| "repository-api-base>` still applies, as this spec only adds an additional "
#| "serialization format for the already existing API."
msgid ""
"The URL structure from :ref:`the base HTML API specification <simple-"
"repository-html-serialization>` still applies, as this spec only adds an "
"additional serialization format for the already existing API."
msgstr ""
"La retadresa strukturo de la :ref:`specifo de la baza HTML API <simple-"
"repository-api-base>` ankoraŭ validas, ĉar ĉi tiu specifo nur provizas plian "
"seriigan formon de jam ekzistanta API."

#: ../source/specifications/simple-repository-api.rst:396
msgid ""
"The following constraints apply to all JSON serialized responses described "
"in this spec:"
msgstr ""
"La sekvaj limigoj validas por ĉiuj JSON-seriigitaj respondoj priskribitaj en "
"ĉi tiu specifo:"

#: ../source/specifications/simple-repository-api.rst:399
msgid ""
"All JSON responses will *always* be a JSON object rather than an array or "
"other type."
msgstr "Ĉiu JSON-respondo *ĉiam* estos JSON-objekto, ne tabelo aŭ alia tipo."

#: ../source/specifications/simple-repository-api.rst:402
msgid ""
"While JSON doesn't natively support a URL type, any value that represents an "
"URL in this API may be either absolute or relative as long as they point to "
"the correct location. If relative, they are relative to the current URL as "
"if it were HTML."
msgstr ""
"Kvankam JSON ne indiĝene subtenas URL-datentipon, ajna valoro prezentanta "
"URL en ĉi tiu API povas esti aŭ absoluta aŭ relativa, se ĝi montras la "
"ĝustan lokon. Relativa valoro estas relativa al la aktuala URL, same kiel "
"HTML."

#: ../source/specifications/simple-repository-api.rst:407
msgid ""
"Additional keys may be added to any dictionary objects in the API responses "
"and clients **MUST** ignore keys that they don't understand."
msgstr ""
"Ekstraj ŝlosiloj povas esti aldonitaj al iuj ajn vortaraj objektoj en la API-"
"respondoj. Kliento **DEVAS** ignori ŝlosilojn ne kompreneblajn."

#: ../source/specifications/simple-repository-api.rst:410
msgid ""
"All JSON responses will have a ``meta`` key, which contains information "
"related to the response itself, rather than the content of the response."
msgstr ""
"Ĉiu JSON-respondo havas ŝlosilon ``meta`` enhavantan informojn pri la "
"respondo mem, ne pri la enhavo de la respondo."

#: ../source/specifications/simple-repository-api.rst:413
msgid ""
"All JSON responses will have a ``meta.api-version`` key, which will be a "
"string that contains the :ref:`API versioning specification <simple-"
"repository-api-versioning>` ``Major.Minor`` version number, with the same "
"fail/warn semantics as defined in :ref:`the API versioning specification "
"<simple-repository-api-versioning>`."
msgstr ""
"Ĉiu JSON-respondo havos ŝlosilon ``meta.api-version``, kiu estas teksto "
"enhavanta la versian numeron ``Maĵora.Minora`` de la :ref:`API-versia "
"specifo <simple-repository-api-versioning>`, kun la sama semantiko pri "
"malsukceso/avertado kiel en :ref:`la API-versia specifo <simple-repository-"
"api-versioning>`."

#: ../source/specifications/simple-repository-api.rst:419
msgid ""
"All requirements of :ref:`the base HTML API specification <simple-repository-"
"api-base>` that are not HTML specific still apply."
msgstr ""
"Ĉiuj postuloj de :ref:`la baza HTML-API-specifo <simple-repository-api-"
"base>` ne specifaj al HTML estas ankoraŭ observendaj."

#: ../source/specifications/simple-repository-api.rst:422
msgid ""
"Keys (at any level) with a leading underscore are reserved as private for "
"index server use. No future standard will assign a meaning to any such key."
msgstr ""
"Ŝlosiloj (en ajna nivelo) komenciĝanta per substreko estas rezervitaj por "
"privata uzado de indeksa servilo. Neniu estonta normo asignos signifon al "
"tia ŝlosilo."

#: ../source/specifications/simple-repository-api.rst:430
msgid ""
"The root URL ``/`` for this spec (which represents the base URL) will be a "
"JSON encoded dictionary which has a two keys:"
msgstr ""
"La projekta radika retadreso ``/`` por ĉi tiu specifo (kiu prezentas la "
"bazan retadreson) estas JSON-kodita vortaro kun du ŝlosiloj:"

#: ../source/specifications/simple-repository-api.rst:433
msgid ""
"``projects``: An array where each entry is a dictionary with a single key, "
"``name``, which represents string of the project name."
msgstr ""
"``projects``: Listo, kies ĉiu ero estas vortaro kun ununura ŝlosilo, "
"``nomo``, kies valoro estas signoĉeno de la projekta nomo."

#: ../source/specifications/simple-repository-api.rst:434
#: ../source/specifications/simple-repository-api.rst:484
msgid ""
"``meta``: The general response metadata as `described earlier <json-"
"serialization_>`__."
msgstr ""
"``meta``: La ĝeneralaj respondaj metadatenoj laŭ `la priskribo ĉi-supra "
"<json-serialization_>`__."

#: ../source/specifications/simple-repository-api.rst:436
#: ../source/specifications/simple-repository-api.rst:632
msgid "As an example:"
msgstr "Ekzemple:"

#: ../source/specifications/simple-repository-api.rst:453
msgid ""
"The ``name`` field is the same as the one from :ref:`the base HTML API "
"specification <simple-repository-api-base>`, which does not specify whether "
"it is the non-normalized display name or the normalized name. In practice "
"different implementations of these specs are choosing differently here, so "
"relying on it being either non-normalized or normalized is relying on an "
"implementation detail of the repository in question."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:463
msgid ""
"While the ``projects`` key is an array, and thus is required to be in some "
"kind of an order, neither :ref:`the base HTML API specification <simple-"
"repository-api-base>` nor this spec requires any specific ordering nor that "
"the ordering is consistent from one request to the next. Mentally this is "
"best thought of as a set, but both JSON and HTML lack the functionality to "
"have sets."
msgstr ""
"Kvankam la ŝlosilo ``projects`` estas listo kaj tial devas esti ordita, nek :"
"ref:`la baza normo de HTML API <simple-repository-api-base>` nek ĉi tiu "
"normo postulas ian specifan ordon aŭ postulas, ke la ordo restu sama inter "
"petoj. Oni rigardu tion kiel aron, sed nek JSON nek HTML kapablas prezenti "
"aron."

#: ../source/specifications/simple-repository-api.rst:475
msgid ""
"The format of this URL is ``/<project>/`` where the ``<project>`` is "
"replaced by the :ref:`the base HTML API specification <simple-repository-api-"
"base>` normalized name for that project, so a project named \"Silly_Walk\" "
"would have a URL like ``/silly-walk/``."
msgstr ""
"La formo de ĉi tiu retadreso estas ``/<projekto>/``, en kiu ``<projekto>`` "
"estas anstataŭigita per la normigita nomo de la projekto laŭ :ref:`la "
"specifo de baza HTML API <simple-repository-api-base>`. Do projekto nomita "
"«Ridinda_Piediro» havus la retadreson ``/ridinda-piediro/``."

#: ../source/specifications/simple-repository-api.rst:480
msgid ""
"This URL must respond with a JSON encoded dictionary that has four keys:"
msgstr ""
"Tiu URL devas respondi per JSON-kodita vortaro enhavanta kvar ŝlosilojn:"

#: ../source/specifications/simple-repository-api.rst:482
msgid "``name``: The normalized name of the project."
msgstr "``name``: La normigita nomo de la projekto."

#: ../source/specifications/simple-repository-api.rst:483
msgid ""
"``files``: A list of dictionaries, each one representing an individual file."
msgstr "``files``: Listo de vortaroj, po unu por individua dosiero."

#: ../source/specifications/simple-repository-api.rst:486
msgid ""
"In addition to the general response metadata, the project detail ``meta`` "
"dictionary **MAY** also include the following:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:489
msgid ""
"``project-status``: If present, this **MUST** be a valid project status "
"marker."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:498
#, fuzzy
#| msgid "The ``versions`` key was added with API version 1.1."
msgid "The ``project-status`` key was added with API version 1.4."
msgstr "La ŝlosilo ``versions`` estis aldonita por versio 1.1 de la API."

#: ../source/specifications/simple-repository-api.rst:500
msgid ""
"``project-status-reason``: If present, this **MUST** be an arbitrary string "
"description of the project status."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:505
#, fuzzy
#| msgid "The ``versions`` key was added with API version 1.1."
msgid "The ``project-status-reason`` key was added with API version 1.4."
msgstr "La ŝlosilo ``versions`` estis aldonita por versio 1.1 de la API."

#: ../source/specifications/simple-repository-api.rst:507
msgid ""
"``versions``: A list of version strings specifying all of the project "
"versions uploaded for this project. The value of ``versions`` is logically a "
"set, and as such may not contain duplicates, and the order of the versions "
"is not significant."
msgstr ""
"``versions``: Listo de versio-signoĉenoj specifantaj ĉiujn projektajn "
"versiojn alŝutitajn de la projekto. La valoro de ``versions`` estas logika "
"aro; tial, ĝi ne povas enhavi duoblaĵon, kaj la ordo de la versioj ne gravas."

#: ../source/specifications/simple-repository-api.rst:514
msgid ""
"All of the files listed in the ``files`` key MUST be associated with one of "
"the versions in the ``versions`` key. The ``versions`` key MAY contain "
"versions with no associated files (to represent versions with no files "
"uploaded, if the server has such a concept)."
msgstr ""
"Ĉiu dosiero en la ŝlosilo ``files`` DEVAS esti asociita kun unu el la "
"versioj en la ŝlosilo ``versions``. La ŝlosilo ``versions`` POVAS enhavi "
"version sen asociita dosiero (por versio sen âlsutita dosiero, se la servilo "
"subtenas tiaĵon)."

#: ../source/specifications/simple-repository-api.rst:521
msgid ""
"Because servers may hold \"legacy\" data from before the adoption of :ref:"
"`the version specifiers specification (VSS) <version-specifiers>`, version "
"strings currently cannot be required to be valid VSS versions, and therefore "
"cannot be assumed to be orderable using the VSS rules. However, servers "
"**SHOULD** use normalized VSS versions where possible."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:529
msgid "The ``versions`` key was added with API version 1.1."
msgstr "La ŝlosilo ``versions`` estis aldonita por versio 1.1 de la API."

#: ../source/specifications/simple-repository-api.rst:531
msgid "Each individual file dictionary has the following keys:"
msgstr "Ĉiu individua dosiera vortaro havas la jenajn ŝlosilojn:"

#: ../source/specifications/simple-repository-api.rst:533
msgid "``filename``: The filename that is being represented."
msgstr "``filename``: La dosiernomo prezentata."

#: ../source/specifications/simple-repository-api.rst:534
msgid "``url``: The URL that the file can be fetched from."
msgstr "``url``: Retadreso, ĉe kiu oni povas elŝuti la dosieron."

#: ../source/specifications/simple-repository-api.rst:535
msgid ""
"``hashes``: A dictionary mapping a hash name to a hex encoded digest of the "
"file. Multiple hashes can be included, and it is up to the client to decide "
"what to do with multiple hashes (it may validate all of them or a subset of "
"them, or nothing at all). These hash names **SHOULD** always be normalized "
"to be lowercase."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:540
msgid ""
"The ``hashes`` dictionary **MUST** be present, even if no hashes are "
"available for the file, however it is **HIGHLY** recommended that at least "
"one secure, guaranteed-to-be-available hash is always included."
msgstr ""
"La vortaro ``hashes`` DEVAS ekzisti, eĉ se neniu haketaĵo disponeblas pri la "
"dosiero. Tamen, estas **REKOMENDEGATE** inkluzivi almenaŭ unu sekuran, "
"garantie haveblan haketaĵon."

#: ../source/specifications/simple-repository-api.rst:544
msgid ""
"By default, any hash algorithm available via :py:mod:`hashlib` (specifically "
"any that can be passed to :py:func:`hashlib.new()` and do not require "
"additional parameters) can be used as a key for the hashes dictionary. At "
"least one secure algorithm from :py:data:`hashlib.algorithms_guaranteed` "
"**SHOULD** always be included. At the time of this spec, ``sha256`` "
"specifically is recommended."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:549
msgid ""
"``requires-python``: An **optional** key that exposes the :ref:`core-"
"metadata-requires-python` metadata field. Where this is present, installer "
"tools **SHOULD** ignore the download when installing to a Python version "
"that doesn't satisfy the requirement."
msgstr ""
"``requires-python``: **Nedeviga** ŝlosilo por la metadatena kampo :ref:`core-"
"metadata-requires-python`. Se ĝi ekzistas, instalilo **IGNORU** la elŝuton "
"dum instalado al Python-versio ne plenumanta la postulon."

#: ../source/specifications/simple-repository-api.rst:555
msgid ""
"Unlike ``data-requires-python`` in :ref:`the base HTML API specification "
"<simple-repository-api-base>`, the ``requires-python`` key does not require "
"any special escaping other than anything JSON does naturally."
msgstr ""
"Malkiel ``data-requires-python`` en :ref:`la baza specifo de HTML API "
"<simple-repository-api-base>`, la ŝlosilo ``requires-python`` ne postulas "
"specialan kodŝanĝadon alian ol la implicitan kodŝanĝon de JSON."

#: ../source/specifications/simple-repository-api.rst:558
msgid ""
"``core-metadata``: An **optional** key that indicates that metadata for this "
"file is available, via the same location as specified in :ref:`the API "
"metadata file specification <simple-repository-api-metadata-file>` "
"(``{file_url}.metadata``). Where this is present, it **MUST** be either a "
"boolean to indicate if the file has an associated metadata file, or a "
"dictionary mapping hash names to a hex encoded digest of the metadata's hash."
msgstr ""
"``core-metadata``: **Nedeviga** ŝlosilo indikanta, ke metadatenoj de tiu "
"dosiero disponeblas ĉe la sama loko specifita en :ref:`la normo pri "
"metadatenaj dosiero por API <simple-repository-api-metadata-file>` "
"(``{file_url}.metadata``). Se ĝi ekzistas, ĝi **DEVAS** esti aŭ bulea valoro "
"(indikanta, ĉu asociita metadatena dosiero ekzistas) aŭ vortaro, kiu asocias "
"nomojn de haketaĵoj al deksesume koditaj haketaĵoj de la metadatenoj."

#: ../source/specifications/simple-repository-api.rst:566
msgid ""
"When this is a dictionary of hashes instead of a boolean, then all the same "
"requirements and recommendations as the ``hashes`` key hold true for this "
"key as well."
msgstr ""
"Se ĉi tiu estas vortaro da haketaĵoj kaj ne bulea valoro, do la postuloj kaj "
"rekomendoj por la ŝlosilo ``hashes`` ankaŭ validas por ĉi tiu ŝlosilo."

#: ../source/specifications/simple-repository-api.rst:570
msgid ""
"If this key is missing then the metadata file may or may not exist. If the "
"key value is truthy, then the metadata file is present, and if it is falsey "
"then it is not."
msgstr ""
"Se tiu ŝlosilo mankas, la metadateno-dosiero povas ekzisti aŭ ne. Se la "
"ŝlosila valoro estas vereca, la metadateno-dosiero ekzistas; se la ŝlosila "
"valoro estas malvereca, la metadateno-dosiero mankas."

#: ../source/specifications/simple-repository-api.rst:574
msgid ""
"It is recommended that servers make the hashes of the metadata file "
"available if possible."
msgstr ""
"Estas rekomendate, ke serviloj disponigu la haketaĵojn de la metadateno-"
"dosiero, se tio eblas."

#: ../source/specifications/simple-repository-api.rst:577
msgid ""
"``dist-info-metadata``: An **optional**, deprecated alias for ``core-"
"metadata``."
msgstr ""
"``dist-info-metadata``: **Nedeviga**, evitinda sinonimo de ``core-metadata``."

#: ../source/specifications/simple-repository-api.rst:579
msgid ""
"Index clients **MAY** consume this key if present, as a legacy fallback for "
"``core-metadata``."
msgstr ""
"Indekso-kliento **POVAS** uzi tiun ŝlosilon, se ĝi ekzistas, kiel evitindan "
"sinonimon de ``core-metadata``."

#: ../source/specifications/simple-repository-api.rst:584
msgid ""
"``dist-info-metadata`` was standardized with :pep:`658` and renamed to "
"``core-metadata`` with :pep:`714`."
msgstr ""
"``dist-info-metadata`` estis normigita per :pep:`658`, kaj ĝia nomo ŝanĝiĝis "
"al ``core-metadata`` per :pep:`714`."

#: ../source/specifications/simple-repository-api.rst:587
msgid ""
"``gpg-sig``: An **optional** key that acts a boolean to indicate if the file "
"has an associated GPG signature or not. The URL for the signature file "
"follows what is specified in :ref:`the base HTML API specification <simple-"
"repository-api-base>` (``{file_url}.asc``). If this key does not exist, then "
"the signature may or may not exist."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:593
msgid ""
"``yanked``: An **optional** key which may be either a boolean to indicate if "
"the file has been yanked, or a non empty, but otherwise arbitrary, string to "
"indicate that a file has been yanked with a specific reason. If the "
"``yanked`` key is present and is a truthy value, then it **SHOULD** be "
"interpreted as indicating that the file pointed to by the ``url`` field has "
"been \"Yanked\"."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:604
msgid ""
"``size``: A **mandatory** key. It **MUST** contain an integer which is the "
"file size in bytes."
msgstr ""
"``size``: Ŝlosilo, kiu **DEVAS** ekzisti kaj **DEVAS** enhavi entjeron, kiu "
"estas la grando de la dosiero en bajtoj."

#: ../source/specifications/simple-repository-api.rst:608
msgid "The ``size`` key was added with API version 1.1."
msgstr "La ŝlosilo ``size`` estis aldonita por versio 1.1 de la API."

#: ../source/specifications/simple-repository-api.rst:610
msgid ""
"``upload-time``: An **optional** key that, if present, **MUST** contain a "
"valid ISO 8601 date/time string in the format ``yyyy-mm-ddThh:mm:ss."
"ffffffZ`` which represents the time the file was uploaded to the index."
msgstr ""
"``upload-time``: Ŝlosilo kiu **POVAS** manki, kiu (se ĝi ekzistas) **DEVAS** "
"enhavi validan datotempan signoĉenon laŭ ISO 8601 en la formo ``jjjj-mm-"
"ttThh:mm:ss.ffffffZ``, kiu prezentas la tempon, kiam la dosiero estis "
"alŝutita al la indekso."

#: ../source/specifications/simple-repository-api.rst:614
msgid ""
"As indicated by the ``Z`` suffix, the upload time **MUST** use the UTC "
"timezone. The fractional seconds part of the timestamp (the ``.ffffff`` "
"part) is optional, and if present may contain up to 6 digits of precision. "
"If a server does not record upload time information for a file, it **MAY** "
"omit the ``upload-time`` key."
msgstr ""
"Laŭ la sufikso ``Z``, la alŝuta tempo **DEVAS** esti la Universala "
"Kunordigita Tempo. La frakcia sekunda parto de la tempo (la parto ``."
"ffffff``) estas nedeviga kaj povas enhavi maksimume ses ciferojn. Se servilo "
"ne registras alŝutan tempon de dosiero, ĝi **POVAS** preterlasi la ŝlosilon "
"``upload-time``."

#: ../source/specifications/simple-repository-api.rst:621
msgid "The ``upload-time`` key was added with API version 1.1."
msgstr "La ŝlosilo ``upload-time`` estis aldonita por versio 1.1 de la API."

#: ../source/specifications/simple-repository-api.rst:623
msgid ""
"``provenance``: An **optional** key which, if present **MUST** be either a "
"JSON string or ``null``. If not ``null``, it **MUST** be a URL to the file's "
"associated provenance, with the same rules as ``data-provenance`` in the :"
"ref:`base HTML API specification <simple-repository-api-base>`."
msgstr ""
"``provenance``: **Nedeviga** ŝlosilo, kiu (se ĝi ekzistas) **DEVAS** esti aŭ "
"JSON-signoĉeno aŭ ``null``. Se ĝi ne estas ``null``, ĝi **DEVAS** esti "
"retadreso de la originpruvo asociita al la dosiero, kun la samaj reguloj "
"kiel ``data-provenance`` en la :ref:`normo pri la baza HTML API <simple-"
"repository-api-base>`."

#: ../source/specifications/simple-repository-api.rst:630
msgid "The ``provenance`` field was added with API version 1.3."
msgstr "La kampo ``provenance`` estis aldonita por versio 1.3 de la API."

#: ../source/specifications/simple-repository-api.rst:668
msgid ""
"While the ``files`` key is an array, and thus is required to be in some kind "
"of an order, neither :ref:`the base HTML API specification <simple-"
"repository-api-base>` nor this spec requires any specific ordering nor that "
"the ordering is consistent from one request to the next. Mentally this is "
"best thought of as a set, but both JSON and HTML lack the functionality to "
"have sets."
msgstr ""
"Kvankam la ŝlosilo ``files`` estas listo kaj tial devas esti ordita, nek :"
"ref:`la baza normo de HTML API <simple-repository-api-base>` nek ĉi tiu "
"normo postulas ian specifan ordon aŭ postulas, ke la ordo restu sama inter "
"petoj. Oni rigardu tion kiel aron, sed nek JSON nek HTML kapablas prezenti "
"aron."

#: ../source/specifications/simple-repository-api.rst:677
msgid "Content-Types"
msgstr "Content-Types"

#: ../source/specifications/simple-repository-api.rst:679
msgid ""
"This spec proposes that all responses from the Simple API will have a "
"standard content type that describes what the response is (a Simple API "
"response), what version of the API it represents, and what serialization "
"format has been used."
msgstr ""
"Ĉi tiu normo proponas, ke ĉiuj respondoj de la Simpla API havos norman "
"enhavtipon priskribantan kio la respondo estas (respondo de Simpla API), "
"kiun version de la API ĝi uzas, kaj kiun seriigan formon ĝi uzas."

#: ../source/specifications/simple-repository-api.rst:683
msgid "The structure of this content type will be:"
msgstr "La strukturo de ĉi tiu enhavtipo estos:"

#: ../source/specifications/simple-repository-api.rst:689
msgid ""
"Since only major versions should be disruptive to clients attempting to "
"understand one of these API responses, only the major version will be "
"included in the content type, and will be prefixed with a ``v`` to clarify "
"that it is a version number."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:694
msgid "Which means that for the existing 1.0 API, the content types would be:"
msgstr "Tio signifas, ke por la ekzistanta API 1.0, la enhavtipoj estus:"

#: ../source/specifications/simple-repository-api.rst:696
msgid "**JSON:** ``application/vnd.pypi.simple.v1+json``"
msgstr "**JSON:** ``application/vnd.pypi.simple.v1+json``"

#: ../source/specifications/simple-repository-api.rst:697
msgid "**HTML:** ``application/vnd.pypi.simple.v1+html``"
msgstr "**HTML:** ``application/vnd.pypi.simple.v1+html``"

#: ../source/specifications/simple-repository-api.rst:699
msgid ""
"In addition to the above, a special \"meta\" version is supported named "
"``latest``, whose purpose is to allow clients to request the absolute latest "
"version, without having to know ahead of time what that version is. It is "
"recommended however, that clients be explicit about what versions they "
"support."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:704
msgid ""
"To support existing clients which expect the existing :ref:`the base HTML "
"API specification <simple-repository-api-base>` API responses to use the "
"``text/html`` content type, this spec further defines ``text/html`` as an "
"alias for the ``application/vnd.pypi.simple.v1+html`` content type."
msgstr ""
"Por ekzistanta kliento atendanta la ekzistantan API-respondon de :ref:`la "
"normo pri baza HTML API <simple-repository-api-base>` uzantan la enhavtipon "
"``text/html``, ĉi tiu normo difinas ``text/html`` kiel sinonimon de la "
"enhavtipo ``application/vnd.pypi.simple.v1+html`` ."

#: ../source/specifications/simple-repository-api.rst:711
msgid "Version + Format Selection"
msgstr "Elektado de Versio kaj Dosierformo"

#: ../source/specifications/simple-repository-api.rst:713
msgid ""
"Now that there is multiple possible serializations, we need a mechanism to "
"allow clients to indicate what serialization formats they're able to "
"understand. In addition, it would be beneficial if any possible new major "
"version to the API can be added without disrupting existing clients "
"expecting the previous API version."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:718
msgid ""
"To enable this, this spec standardizes on the use of HTTP's `Server-Driven "
"Content Negotiation <https://developer.mozilla.org/en-US/docs/Web/HTTP/"
"Content_negotiation>`_."
msgstr ""
"Por ebligi tion, ĉi tiu specifo normigas la uzadon de la `Servila Enhavo-"
"Marĉandado de HTTP <https://developer.mozilla.org/en-US/docs/Web/HTTP/"
"Content_negotiation>`_."

#: ../source/specifications/simple-repository-api.rst:721
msgid ""
"While this spec won't fully describe the entirety of server-driven content "
"negotiation, the flow is roughly:"
msgstr ""
"Dum ĉi tiu specifo ne plene priskribas servilan enhavo-marĉandadon, la fluo "
"estas proksimume jena:"

#: ../source/specifications/simple-repository-api.rst:724
msgid ""
"The client makes an HTTP request containing an ``Accept`` header listing all "
"of the version+format content types that they are able to understand."
msgstr ""
"La kliento sendas HTTP-peton enhavantan ĉapon ``Accept`` listigantan ĉiujn "
"enhavtipojn de la formo versio+formo komprenatajn de la kliento."

#: ../source/specifications/simple-repository-api.rst:726
msgid ""
"The server inspects that header, selects one of the listed content types, "
"then returns a response using that content type (treating the absence of an "
"``Accept`` header as ``Accept: */*``)."
msgstr ""
"La servilo ekzamenas tiun ĉapon, elektas unu el la enhavtipoj en la listo, "
"kaj liveras respondon de tiu enhavtipo (la manko de ĉapo ``Accept`` estas "
"ekvivalenta al ``Accept: */*``)."

#: ../source/specifications/simple-repository-api.rst:729
msgid ""
"If the server does not support any of the content types in the ``Accept`` "
"header then they are able to choose between 3 different options for how to "
"respond:"
msgstr ""
"Se la servilo ne subtenas iun ajn el la enhavtipoj en la ĉapo ``Accept``, ĝi "
"povas elekti inter la jenaj tri opcioj:"

#: ../source/specifications/simple-repository-api.rst:733
msgid ""
"Select a default content type other than what the client has requested and "
"return a response with that."
msgstr ""
"Elekti aprioran enhavtipon alian ol tiujn petitajn de la kliento kaj liveri "
"tian respondon."

#: ../source/specifications/simple-repository-api.rst:735
msgid ""
"Return a HTTP ``406 Not Acceptable`` response to indicate that none of the "
"requested content types were available, and the server was unable or "
"unwilling to select a default content type to respond with."
msgstr ""
"Liveri HTTP-respondon ``406 Ne Akceptebla`` por sciigi, ke neniu el la "
"petitaj enhavtipoj estis disponeblaj, kaj la servilo ne volis aŭ ne povis "
"elekti aprioran respondan enhavtipon."

#: ../source/specifications/simple-repository-api.rst:738
msgid ""
"Return a HTTP ``300 Multiple Choices`` response that contains a list of all "
"of the possible responses that could have been chosen."
msgstr ""
"Liveri HTTP-respondon ``300 Pluraj Opcioj`` enhavantan liston de ĉiuj eblaj "
"respondoj, kiujn la kliento povas elekti."

#: ../source/specifications/simple-repository-api.rst:740
msgid ""
"The client interprets the response, handling the different types of "
"responses that the server may have responded with."
msgstr ""
"La kliento interpretas la respondon, pritraktante tiujn diversajn specojn de "
"respondoj, kiujn la servilo eble sendis."

#: ../source/specifications/simple-repository-api.rst:743
msgid ""
"This spec does not specify which choices the server makes in regards to "
"handling a content type that it isn't able to return, and clients **SHOULD** "
"be prepared to handle all of the possible responses in whatever way makes "
"the most sense for that client."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:748
msgid ""
"However, as there is no standard format for how a ``300 Multiple Choices`` "
"response can be interpreted, this spec highly discourages servers from "
"utilizing that option, as clients will have no way to understand and select "
"a different content-type to request. In addition, it's unlikely that the "
"client *could* understand a different content type anyways, so at best this "
"response would likely just be treated the same as a ``406 Not Acceptable`` "
"error."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:755
msgid ""
"This spec **does** require that if the meta version ``latest`` is being "
"used, the server **MUST** respond with the content type for the actual "
"version that is contained in the response (i.e. an ``Accept: application/vnd."
"pypi.simple.latest+json`` request that returns a ``v1.x`` response should "
"have a ``Content-Type`` of ``application/vnd.pypi.simple.v1+json``)."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:762
msgid ""
"The ``Accept`` header is a comma separated list of content types that the "
"client understands and is able to process. It supports three different "
"formats for each content type that is being requested:"
msgstr ""
"La ĉapo ``Accept`` estas kome disigita listo de enhavtipoj komprenataj kaj "
"pritrakteblaj de la kliento. Ĝu subtenas tri malsamjn formojn por ĉiu "
"pripetata enhavtipo:"

#: ../source/specifications/simple-repository-api.rst:766
msgid "``$type/$subtype``"
msgstr "``$tipo/$subtipo``"

#: ../source/specifications/simple-repository-api.rst:767
msgid "``$type/*``"
msgstr "``$tipo/*``"

#: ../source/specifications/simple-repository-api.rst:768
msgid "``*/*``"
msgstr "``*/*``"

#: ../source/specifications/simple-repository-api.rst:770
msgid ""
"For the use of selecting a version+format, the most useful of these is "
"``$type/$subtype``, as that is the only way to actually specify the version "
"and format you want."
msgstr ""
"Por elekti version kaj dosierformon, la plej utila el tiuj estas ``$tipo/"
"$subtipo``, ĉar tio estas la sola maniero specifi la deziratajn version kaj "
"dosierformon."

#: ../source/specifications/simple-repository-api.rst:774
msgid ""
"The order of the content types listed in the ``Accept`` header does not have "
"any specific meaning, and the server **SHOULD** consider all of them to be "
"equally valid to respond with. If a client wishes to specify that they "
"prefer a specific content type over another, they may use the ``Accept`` "
"header's `quality value <https://developer.mozilla.org/en-US/docs/Glossary/"
"Quality_values>`_ syntax."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:781
msgid ""
"This allows a client to specify a priority for a specific entry in their "
"``Accept`` header, by appending a ``;q=`` followed by a value between ``0`` "
"and ``1`` inclusive, with up to 3 decimal digits. When interpreting this "
"value, an entry with a higher quality has priority over an entry with a "
"lower quality, and any entry without a quality present will default to a "
"quality of ``1``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:787
msgid ""
"However, clients should keep in mind that a server is free to select **any** "
"of the content types they've asked for, regardless of their requested "
"priority, and it may even return a content type that they did **not** ask "
"for."
msgstr ""
"Tamen, kliento memoru, ke servilo rajtas elekti **ajnan* el la petitaj "
"enhavtipoj, malgraŭ la donitaj prioritatoj, kaj eĉ enhavtipon **ne** petitan."

#: ../source/specifications/simple-repository-api.rst:791
msgid ""
"To aid clients in determining the content type of the response that they "
"have received from an API request, this spec requires that servers always "
"include a ``Content-Type`` header indicating the content type of the "
"response. This is technically a backwards incompatible change, however in "
"practice `pip has been enforcing this requirement <https://github.com/pypa/"
"pip/blob/cf3696a81b341925f82f20cb527e656176987565/src/pip/_internal/index/"
"collector.py#L123-L150>`_ so the risks for actual breakages is low."
msgstr ""
"Por helpi kliento determini la enhavtipon de la respondo al API-peto, ĉi tiu "
"specifo postulas, ke servilo ĉiam inkluzivu ĉapon``Content-Type`` pri la "
"enhavtipo de la respondo. Tio estas teĥnike ne retrokongrua ŝanĝo. Tamen "
"praktike `pip devigas ĉi tiun postulon <https://github.com/pypa/pip/blob/"
"cf3696a81b341925f82f20cb527e656176987565/src/pip/_internal/index/collector."
"py#L123-L150>`_. Tial la risko de reala rompo estas malgranda."

#: ../source/specifications/simple-repository-api.rst:798
msgid "An example of how a client can operate would look like:"
msgstr "Jen ekzemplo de funkciado de kliento:"

#: ../source/specifications/simple-repository-api.rst:849
msgid ""
"If a client wishes to only support HTML or only support JSON, then they "
"would just remove the content types that they do not want from the "
"``Accept`` header, and turn receiving them into an error."
msgstr ""
"Se kliento volus nur subteni HTML aŭ JSON, do ĝi simple forigus nevolatan "
"enhavtipon el la ĉapo ``Accept``, tiel ke ricevi tion estus erare."

#: ../source/specifications/simple-repository-api.rst:855
msgid "Alternative Negotiation Mechanisms"
msgstr "Alternativaj Marĉandaj Meĥanismoj"

#: ../source/specifications/simple-repository-api.rst:857
msgid ""
"While using HTTP's Content negotiation is considered the standard way for a "
"client and server to coordinate to ensure that the client is getting an HTTP "
"response that it is able to understand, there are situations where that "
"mechanism may not be sufficient. For those cases this spec has alternative "
"negotiation mechanisms that may *optionally* be used instead."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:865
msgid "URL Parameter"
msgstr "URL-Parametro"

#: ../source/specifications/simple-repository-api.rst:867
msgid ""
"Servers that implement the Simple API may choose to support a URL parameter "
"named ``format`` to allow the clients to request a specific version of the "
"URL."
msgstr ""
"Servilo realiganta la Simplan API povas eble subteni retadresan parametron "
"nomitan ``format`` por peti specifan version de la retadreso."

#: ../source/specifications/simple-repository-api.rst:870
msgid ""
"The value of the ``format`` parameter should be **one** of the valid content "
"types. Passing multiple content types, wild cards, quality values, etc... is "
"**not** supported."
msgstr ""
"La valoro de la parametro ``format`` estu **unu** el la validaj enhavtipoj. "
"Ne subtenataj estas pluraj enhavtipoj, ĵokero, kvalito-valoro ktp."

#: ../source/specifications/simple-repository-api.rst:874
msgid ""
"Supporting this parameter is optional, and clients **SHOULD NOT** rely on it "
"for interacting with the API. This negotiation mechanism is intended to "
"allow for easier human based exploration of the API within a browser, or to "
"allow documentation or notes to link to a specific version+format."
msgstr ""
"Ĉi tiu parametro ne estas subtenenda. Kliento **NE DEPENDU** de ĝi por "
"interagi kun la API. La marĉanda meĥanismo estas por pli facila homa "
"esplorado de la API en TTT-legilo aŭ por permesi hiperligon al specifa "
"versio kaj formo en dokumentaro aŭ notoj."

#: ../source/specifications/simple-repository-api.rst:879
msgid ""
"Servers that do not support this parameter may choose to return an error "
"when it is present, or they may simple ignore its presence."
msgstr ""
"Servilo ne subtenanta tiun parametron povas raporti eraron se ĝi ĉeestas aŭ "
"simple ignori ĝin."

#: ../source/specifications/simple-repository-api.rst:882
msgid ""
"When a server does implement this parameter, it **SHOULD** take precedence "
"over any values in the client's ``Accept`` header, and if the server does "
"not support the requested format, it may choose to fall back to the "
"``Accept`` header, or choose any of the error conditions that standard "
"server-driven content negotiation typically has (e.g. ``406 Not Available``, "
"``303 Multiple Choices``, or selecting a default type to return)."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:891
msgid "Endpoint Configuration"
msgstr "Agordado de Finpunkto"

#: ../source/specifications/simple-repository-api.rst:893
msgid ""
"This option technically is not a special option at all, it is just a natural "
"consequence of using content negotiation and allowing servers to select "
"which of the available content types is their default."
msgstr ""
"Tiu opcio teĥnike ne estas speciala opcio, sed nur natura konsekvenco de la "
"uzadon de enhavo-marĉandado, permesante al servilo elekti sian aprioraĵon el "
"la haveblaj enhavtipoj."

#: ../source/specifications/simple-repository-api.rst:897
msgid ""
"If a server is unwilling or unable to implement the server-driven content "
"negotiation, and would instead rather require users to explicitly configure "
"their client to select the version they want, then that is a supported "
"configuration."
msgstr ""
"Se servilo ne volas aŭ ne povas subteni la servila enhavomarĉandado kaj "
"volas postuli, ke uzanto eksplicu la deziratan version, tio estas permesata."

#: ../source/specifications/simple-repository-api.rst:901
msgid ""
"To enable this, a server should make multiple endpoints (for instance, ``/"
"simple/v1+html/`` and/or ``/simple/v1+json/``) for each version+format that "
"they wish to support. Under that endpoint, they can host a copy of their "
"repository that only supports one (or a subset) of the content-types. When a "
"client makes a request using the ``Accept`` header, the server can ignore it "
"and return the content type that corresponds to that endpoint."
msgstr ""
"Por tio, servilo disponigu plurajn finpunktoj (ekzemple, ``/simple/v1+html/"
"`` kaj/aŭ ``/simple/v1+json/``) po unu por ĉiu paro de versio kaj "
"dosierformo subtenata. Ĉe finpunkto, servilo povas gastigi kopion de la "
"deponejo nur subtenanta unu (aŭ subaron) el la enhavtipoj. Kiam kliento "
"petas uzante la ĉapon ``Accept``, la servilo povas ignori tion kaj liveri la "
"enhavtipon por la finpunkto."

#: ../source/specifications/simple-repository-api.rst:908
msgid ""
"For clients that wish to require specific configuration, they can keep track "
"of which version+format a specific repository URL was configured for, and "
"when making a request to that server, emit an ``Accept`` header that *only* "
"includes the correct content type."
msgstr ""
"Kliento, kiu volas postuli specifitan agordon, povas memori la version kaj "
"dosierformon de specifita deponeja retadreso, kaj (dum sendado de peto al "
"tiu servilo) sendi ĉapon ``Accept`` *nur* inkluzivantan la ĝustan enhavtipon."

#: ../source/specifications/simple-repository-api.rst:915
msgid "TUF Support - PEP 458"
msgstr "Subteno de TUF – PEP 458"

#: ../source/specifications/simple-repository-api.rst:917
msgid ""
":pep:`458` requires that all API responses are hashable and that they can be "
"uniquely identified by a path relative to the repository root. For a Simple "
"API repository, the target path is the Root of our API (e.g. ``/simple/`` on "
"PyPI). This creates challenges when accessing the API using a TUF client "
"instead of directly using a standard HTTP client, as the TUF client cannot "
"handle the fact that a target could have multiple different representations "
"that all hash differently."
msgstr ""
":pep:`458` postulas, ke ĉiu API-respondo estu haketebla kaj unike "
"identigebla per dosierloko relativa al la deponeja radiko. Por deponejo de "
"simpla API, la cela dosierloko estas la Radiko de nia API (ekz. ``/simple/`` "
"ĉe PyPI). Tio estas problema dum uzado de la API per TUF-kliento anstataŭ "
"ordinara HTTP-kliento, ĉar la TUF-kliento ne povas pritrakti la fakton, ke "
"celo povas havi plurajn malsamajn prezentaojn de malsamaj haketaĵoj."

#: ../source/specifications/simple-repository-api.rst:924
msgid ""
":pep:`458` does not specify what the target path should be for the Simple "
"API, but TUF requires that the target paths be \"file-like\", in other "
"words, a path like ``simple/PROJECT/`` is not acceptable, because it "
"technically points to a directory."
msgstr ""
":pep:`458` ne specifas la celan dosierlokon por la Simpla API, sed TUF "
"postulas, ke cela dosierloko estu «dosiereca»: alivorte, dosierloko kiel "
"``simple/PROJEKTO/`` ne validas, ĉar ĝi estas dosierujo."

#: ../source/specifications/simple-repository-api.rst:929
msgid ""
"The saving grace is that the target path does not *have* to actually match "
"the URL being fetched from the Simple API, and it can just be a sigil that "
"the fetching code knows how to transform into the actual URL that needs to "
"be fetched. This same thing can hold true for other aspects of the actual "
"HTTP request, such as the ``Accept`` header."
msgstr ""
"Dankinde, la cela dosierloko *ne devas* kongrui kun la retadreso de la "
"Simpla API; ĝi povas esti simple ĵetono, kiun la elŝuta kodo povas "
"transformi al la fakta elŝutota retadreso. La samo veras por aliaj aspektoj "
"de la fakta HTTP-peto kiel la ĉapo ``Accept``."

#: ../source/specifications/simple-repository-api.rst:935
msgid ""
"Ultimately figuring out how to map a directory to a filename is out of scope "
"for this spec (but it would be in scope for :pep:`458`), and this spec "
"defers making a decision about how exactly to represent this inside of :pep:"
"`458` metadata."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:939
msgid ""
"However, it appears that the current WIP branch against pip that attempts to "
"implement :pep:`458` is using a target path like ``simple/PROJECT/index."
"html``. This could be modified to include the API version and serialization "
"format using something like ``simple/PROJECT/vnd.pypi.simple.vN.FORMAT``. So "
"the v1 HTML format would be ``simple/PROJECT/vnd.pypi.simple.v1.html`` and "
"the v1 JSON format would be ``simple/PROJECT/vnd.pypi.simple.v1.json``."
msgstr ""
"Tamen, ŝajnas ke la nuna evoluanta branĉo de pip, kiu provas realigi :pep:"
"`458`, uzas celan dosierlokon kiel `simple/PROJEKTO/index.html``. Oni povus "
"modifi tion inkluzivante la version de la API kaj la seriigon, kiel ``simple/"
"PROJEKTO/vnd.pypi.simple.vN.FORMO``. Do la versio 1 de la HTML-formo estus "
"``simple/PROJEKTO/vnd.pypi.simple.v1.html``, dum la versio 1 de la JSON-"
"formo estus ``simple/PROJEKTO/vnd.pypi.simple.v1.json``."

#: ../source/specifications/simple-repository-api.rst:946
msgid ""
"In this case, since ``text/html`` is an alias to ``application/vnd.pypi."
"simple.v1+html`` when interacting through TUF, it likely will make the most "
"sense to normalize to the more explicit name."
msgstr ""
"Tiukaze, ĉar ``text/html`` estas sinonimo de ``application/vnd.pypi.simple."
"v1+html`` dum interagado per TUF, estas pli bone normigi al la pli "
"eksplicita nomo."

#: ../source/specifications/simple-repository-api.rst:950
msgid ""
"Likewise the ``latest`` metaversion should not be included in the targets, "
"only explicitly declared versions should be supported."
msgstr ""
"Simile la metaversio ``latest`` ne inkluziviĝu en la celoj; nur eksplicite "
"deklarita versio estu subtenata."

#: ../source/specifications/simple-repository-api.rst:956
msgid ""
"This section is non-normative, and represents what the spec authors believe "
"to be the best default implementation decisions for something implementing "
"this spec, but it does **not** represent any sort of requirement to match "
"these decisions."
msgstr ""
"Jen nedeviga paragrafo pri la plej bonaj aprioraj decidoj por realigi ĉi "
"tiun normon laŭ la opinioj de la aŭtoroj. Ĝi **ne** devige postulas tiajn "
"decidojn."

#: ../source/specifications/simple-repository-api.rst:960
msgid ""
"These decisions have been chosen to maximize the number of requests that can "
"be moved onto the newest version of an API, while maintaining the greatest "
"amount of compatibility. In addition, they've also tried to make using the "
"API provide guardrails that attempt to push clients into making the best "
"choices it can."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:965
msgid "It is recommended that servers:"
msgstr "Ni rekomendas, ke serviloj faru la jenon:"

#: ../source/specifications/simple-repository-api.rst:967
msgid ""
"Support all 3 content types described in this spec, using server-driven "
"content negotiation, for as long as they reasonably can, or at least as long "
"as they're receiving non trivial traffic that uses the HTML responses."
msgstr ""
"Subtenu ĉiujn tri enhavtipojn priskribitajn en ĉi tiu normo, uzante servilan "
"marĉandadon, por tiel longe kiel oni racie povas, aŭ minimume tiel longe "
"kiel oni ricevas iom da trafiko uzanta la HTML-respondojn."

#: ../source/specifications/simple-repository-api.rst:971
msgid ""
"When encountering an ``Accept`` header that does not contain any content "
"types that it knows how to work with, the server should not ever return a "
"``300 Multiple Choice`` response, and instead return a ``406 Not "
"Acceptable`` response."
msgstr ""
"Se servilo ricevas ĉapon ``Accept`` kiu ne enhavas ajnan konatan "
"dosiertipon, ĝi ne liveru respondon ``300 Multiple Choice``; anstataŭe ĝi "
"liveru respondon ``406 Not Acceptable``."

#: ../source/specifications/simple-repository-api.rst:976
msgid ""
"However, if choosing to use the endpoint configuration, you should prefer to "
"return a ``200 OK`` response in the expected content type for that endpoint."
msgstr ""
"Tamen, se oni elektas uzi la finpunktan agordon, oni prefere liveru "
"respondon ``200 OK`` en la atendata enhavtipo de tiu finpunkto."

#: ../source/specifications/simple-repository-api.rst:979
msgid ""
"When selecting an acceptable version, the server should choose the highest "
"version that the client supports, with the most expressive/featureful "
"serialization format, taking into account the specificity of the client "
"requests as well as any quality priority values they have expressed, and it "
"should only use the ``text/html`` content type as a last resort."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:985
msgid "It is recommended that clients:"
msgstr "Ni rekomendas, ke klientoj faru la jenon:"

#: ../source/specifications/simple-repository-api.rst:987
msgid ""
"Support all 3 content types described in this spec, using server-driven "
"content negotiation, for as long as they reasonably can."
msgstr ""
"Subtenu ĉiujn 3 enhavtipojn priskribitajn en ĉi tiu specifo, per servila "
"enhavo-marĉandado, tiel longe kiel racie eblas."

#: ../source/specifications/simple-repository-api.rst:990
msgid ""
"When constructing an ``Accept`` header, include all of the content types "
"that you support."
msgstr ""
"Dum konstruado de ĉapo ``Accept``, inkluzivu ĉiujn enhavtipojn subtenatajn."

#: ../source/specifications/simple-repository-api.rst:993
msgid ""
"You should generally *not* include a quality priority value for your content "
"types, unless you have implementation specific reasons that you want the "
"server to take into account (for example, if you're using the standard "
"library HTML parser and you're worried that there may be some kinds of HTML "
"responses that you're unable to parse in some edge cases)."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:999
msgid ""
"The one exception to this recommendation is that it is recommended that you "
"*should* include a ``;q=0.01`` value on the legacy ``text/html`` content "
"type, unless it is the only content type that you are requesting."
msgstr ""
"La unu escepto al tiu rekomendo estas, ke estas rekomendate *inkluzivi* "
"valoron ``;q=0.01`` sur la malnova enhavtipo ``text/html``, krom se tiu "
"estas la sola enhavtipo, kiun vi petas."

#: ../source/specifications/simple-repository-api.rst:1003
msgid ""
"Explicitly select what versions they are looking for, rather than using the "
"``latest`` meta version during normal operation."
msgstr ""
"Eksplicite elektu la version serĉatan, anstataŭ uzi la metadatenan version "
"``latest``, dum ordinara funkciado."

#: ../source/specifications/simple-repository-api.rst:1006
msgid ""
"Check the ``Content-Type`` of the response and ensure it matches something "
"that you were expecting."
msgstr ""
"Kontrolu la ``Content-Type`` de la respondo, kaj certigu, ke ĝi kongruas kun "
"io atendata de vi."

#: ../source/specifications/simple-repository-api.rst:1014
msgid "September 2015: initial form of the HTML format, in :pep:`503`"
msgstr "Septembro 2015: unua versio de la HTML-formo, en :pep:`503`"

#: ../source/specifications/simple-repository-api.rst:1015
msgid "July 2016: Requires-Python metadata, in an update to :pep:`503`"
msgstr "Julio 2016: Metadateno Requires-Python, en ĝisdatigo al :pep:`503`"

#: ../source/specifications/simple-repository-api.rst:1016
msgid "May 2019: \"yank\" support, in :pep:`592`"
msgstr "Majo 2019: Subteno de «fortiro», en :pep:`592`"

#: ../source/specifications/simple-repository-api.rst:1017
msgid ""
"July 2020: API versioning convention and metadata, and declaring the HTML "
"format as API v1, in :pep:`629`"
msgstr ""
"Julio 2020: Versia konvencio de API kaj metadatenoj, kaj deklaro de la HTML-"
"formo kiel versio 1 de la API, en :pep:`629`"

#: ../source/specifications/simple-repository-api.rst:1019
msgid ""
"May 2021: providing package metadata independently from a package, in :pep:"
"`658`"
msgstr ""
"Majo 2021: provizi pakajn metadatenojn sendepende de pako, laŭ :pep:`658`"

#: ../source/specifications/simple-repository-api.rst:1021
msgid ""
"May 2022: initial form of the JSON format, with a mechanism for clients to "
"choose between them, and declaring both formats as API v1, in :pep:`691`"
msgstr ""
"Majo 2022: komenca versio de la JSON-formo, kun meĥanismo por kliento elekti "
"inter ili, kaj deklaro de ambaŭ formoj kiel versio 1 de la API, en :pep:`691`"

#: ../source/specifications/simple-repository-api.rst:1023
msgid ""
"October 2022: project versions and file size and upload-time in the JSON "
"format, in :pep:`700`"
msgstr ""
"Oktobro 2022: projekta versio kaj dosiera grando kaj alŝuta tempo en la "
"formo JSON laŭ :pep:`700`"

#: ../source/specifications/simple-repository-api.rst:1025
msgid ""
"June 2023: renaming the field which provides package metadata independently "
"from a package, in :pep:`714`"
msgstr ""
"Junio 2023: ŝanĝi la nomon de la kampo provizantan pakajn metadatenojn "
"sendepende de pako laŭ :pep:`714`"

#: ../source/specifications/simple-repository-api.rst:1027
msgid ""
"November 2024: provenance metadata in the HTML and JSON formats, in :pep:"
"`740`"
msgstr ""
"Novembro 2024: originpruvaj metadatenoj en la formoj HTML kaj JSON, en :pep:"
"`740`"

#: ../source/specifications/simple-repository-api.rst:1028
#, fuzzy
#| msgid ""
#| "November 2024: provenance metadata in the HTML and JSON formats, in :pep:"
#| "`740`"
msgid ""
"July 2025: project status markers in the HTML and JSON formats, in :pep:`792`"
msgstr ""
"Novembro 2024: originpruvaj metadatenoj en la formoj HTML kaj JSON, en :pep:"
"`740`"

#: ../source/specifications/simple-repository-api.rst:1029
msgid ""
"July 2025: layout changes (dedicated page for file yanking, introduce "
"concepts before API details)"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:6
msgid "Source distribution format"
msgstr "Fonta distribua formo"

#: ../source/specifications/source-distribution-format.rst:8
#, fuzzy
#| msgid ""
#| "The current standard format of source distribution format is identified "
#| "by the presence of a :file:`pyproject.toml` file in the distribution "
#| "archive.  The layout of such a distribution was originally specified in :"
#| "pep:`517` and is formally documented here."
msgid ""
"The current standard source distribution format is identified by the "
"presence of a :file:`pyproject.toml` file in the distribution archive.  The "
"layout of such a distribution was originally specified in :pep:`517` and is "
"formally documented here."
msgstr ""
"La aktuala norma dosierformo de fonta distribuo estas indikita per la "
"ekzisto de dosiero :file:`pyproject.toml` en la distribua arĥivo. La aranĝo "
"de tia distribuo estis originale specifita en :pep:`517` kaj estas formale "
"priskribita ĉi tie."

#: ../source/specifications/source-distribution-format.rst:13
msgid ""
"There is also the legacy source distribution format, implicitly defined by "
"the behaviour of ``distutils`` module in the standard library, when "
"executing :command:`setup.py sdist`. This document does not attempt to "
"standardise this format, except to note that if a legacy source distribution "
"contains a ``PKG-INFO`` file using metadata version 2.2 or later, then it "
"MUST follow the rules applicable to source distributions defined in the "
"metadata specification."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:21
msgid "Source distributions are also known as *sdists* for short."
msgstr "Fonta distribuo ankaŭ estas konata kiel *sdist* mallonge."

#: ../source/specifications/source-distribution-format.rst:26
msgid "Source trees"
msgstr "Fontarboj"

#: ../source/specifications/source-distribution-format.rst:28
#, fuzzy
#| msgid ""
#| "A *source tree* is a collection of files and directories -- like a "
#| "version control system checkout -- which contains a :file:`pyproject."
#| "toml` file that can be use to build a source distribution from the "
#| "contained files and directories. :pep:`517` and :pep:`518` specify what "
#| "is required to meet the definition of what :file:`pyproject.toml` must "
#| "contain for something to be deemed a source tree."
msgid ""
"A *source tree* is a collection of files and directories -- like a version "
"control system checkout -- which contains a :file:`pyproject.toml` file that "
"can be used to build a source distribution from the contained files and "
"directories. :pep:`517` and :pep:`518` specify what is required to meet the "
"definition of what :file:`pyproject.toml` must contain for something to be "
"deemed a source tree."
msgstr ""
"*Fontarbo* estas kolekto de dosieroj kaj dosierujoj – kiel "
"versikontrolsistema kopio – kiu enhavas dosieron :file:`pyproject.toml` "
"uzeblan por konstrui fontan distribuon el la enhavitaj dosieroj kaj "
"dosierujoj. :pep:`517` kaj :pep:`518` difinas tion, kion :file:`pyproject."
"toml` devas enhavi, por ke la kolekto rigardiĝas kiel fontarbo."

#: ../source/specifications/source-distribution-format.rst:38
msgid "Source distribution file name"
msgstr "Dosiernomo de fonta distribuo"

#: ../source/specifications/source-distribution-format.rst:40
msgid ""
"The file name of a sdist was standardised in :pep:`625`. The file name must "
"be in the form ``{name}-{version}.tar.gz``, where ``{name}`` is normalised "
"according to the same rules as for binary distributions (see :ref:`binary-"
"distribution-format`), and ``{version}`` is the canonicalized form of the "
"project version (see :ref:`version-specifiers`)."
msgstr ""
"La dosiernomo de fonta distribu estis normigita en :pep:`625`. La dosiernomo "
"devas esti en la formo ``{nomo}-{versio}.tar.gz``, en kiu ``{nomo}`` estas "
"normigita laŭ la samaj reguloj kiel por duumaj distribuoj (vidu :ref:`binary-"
"distribution-format`), kaj ``{versio}`` estas la kanonigita formo de la "
"projekta versio (vidu :ref:`version-specifiers`)."

#: ../source/specifications/source-distribution-format.rst:46
msgid ""
"The name and version components of the filename MUST match the values stored "
"in the metadata contained in the file."
msgstr ""
"La noma kaj versia komponantoj de la dosiernomo DEVAS kongrui kun la valoroj "
"en la metadatenoj en la dosiero."

#: ../source/specifications/source-distribution-format.rst:49
msgid ""
"Code that produces a source distribution file MUST give the file a name that "
"matches this specification. This includes the ``build_sdist`` hook of a :"
"term:`build backend <Build Backend>`."
msgstr ""
"Kodo generanta fonto-distribuan dosieron DEVAS nomi la dosieron laŭ ĉi tiu "
"specifo. Tio inkluzivas la hokon ``build_sdist`` de :term:`konstrua "
"malfasado <Build Backend>`."

#: ../source/specifications/source-distribution-format.rst:53
msgid ""
"Code that processes source distribution files MAY recognise source "
"distribution files by the ``.tar.gz`` suffix and the presence of precisely "
"*one* hyphen in the filename. Code that does this may then use the "
"distribution name and version from the filename without further verification."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:59
msgid "Source distribution file format"
msgstr "Dosierformo de fonta distribuo"

#: ../source/specifications/source-distribution-format.rst:61
msgid ""
"A ``.tar.gz`` source distribution (sdist) contains a single top-level "
"directory called ``{name}-{version}`` (e.g. ``foo-1.0``), containing the "
"source files of the package. The name and version MUST match the metadata "
"stored in the file. This directory must also contain a :file:`pyproject."
"toml` in the format defined in :ref:`pyproject-toml-spec`, and a :file:`PKG-"
"INFO` file containing metadata in the format described in the :ref:`core-"
"metadata` specification. The metadata MUST conform to at least version 2.2 "
"of the metadata specification."
msgstr ""
"Fonta distribuo ``.tar.gz`` (sdist) enhavas unu supranivelan dosierujon "
"nomitan ``{nomo}-{versio}`` (ekz. ``foo-1.0``), enhavantan la fontajn "
"dosierojn de la pako. La nomo kaj versio DEVAS kongrui kun la metadatenoj en "
"la dosiero. Tiu dosiero devas ankaŭ enhavi :file:`pyproject.toml` observanta "
"la formon difinitan en :ref:`pyproject-toml-spec`, kaj dosieron :file:`PKG-"
"INFO` enhavantan metadatenojn laŭ la formo difinita en la normo :ref:`core-"
"metadata`. La metadatenoj DEVAS konformi al almenaŭ versio 2.2 de la normo "
"pri metadatenoj."

#: ../source/specifications/source-distribution-format.rst:69
msgid ""
"If the metadata version is 2.4 or greater, the source distribution MUST "
"contain any license files specified by the ``License-File`` field in the :"
"file:`PKG-INFO` at their respective paths relative to the root directory of "
"the sdist (containing the :file:`pyproject.toml` and the :file:`PKG-INFO` "
"metadata)."
msgstr ""
"Se la metadatena versio estas almenaŭ 2.4, la fonta distribuo DEVAS enhavi "
"ajnan licencan dosieron specifitan de la kampo ``License-File`` en :file:"
"`PKG-INFO` ĉe la respektivaj lokoj relativaj al la radika dosierujo de la "
"fonta distribuo (enhavanta la dosieron :file:`pyproject.toml` kaj la "
"metadateno-dosieron :file:`PKG-INFO`)."

#: ../source/specifications/source-distribution-format.rst:74
msgid ""
"No other content of a sdist is required or defined. Build systems can store "
"whatever information they need in the sdist to build the project."
msgstr ""
"Neniu alia enhavo de fonta distribuo estas postulata aŭ difinita. "
"Konstrusistemo povas enmeti iajn ajn informojn bezonatajn en la fontan "
"distribuon por konstrui la projekton."

#: ../source/specifications/source-distribution-format.rst:77
msgid ""
"The tarball should use the modern POSIX.1-2001 pax tar format, which "
"specifies UTF-8 based file names. In particular, source distribution files "
"must be readable using the standard library tarfile module with the open "
"flag 'r:gz'."
msgstr ""
"La tar-arĥivo uzu la modernan pax-formon de POSIX.1-2001, kiu specifas UTF-8-"
"bazajn dosiernomojn. Speciale, dosiero de fonta distribuo devas esti legebla "
"per la norma biblioteka modulo ``tarfile`` kun la malferma flago ``'r:gz'``."

#: ../source/specifications/source-distribution-format.rst:85
msgid "Source distribution archive features"
msgstr "Trajtoj de fontdistribua arĥivo"

#: ../source/specifications/source-distribution-format.rst:87
msgid ""
"Because extracting tar files as-is is dangerous, and the results are "
"platform-specific, archive features of source distributions are limited."
msgstr ""
"Ĉar naiva malpakado de ``tar``-arĥivo danĝeras, kaj la rezultoj varias laŭ "
"platformo, arĥivaj funkcioj de fontaj distribuoj estas limigitaj."

#: ../source/specifications/source-distribution-format.rst:91
msgid "Unpacking with the data filter"
msgstr "Malpaki kun la datenfiltrilo"

#: ../source/specifications/source-distribution-format.rst:93
msgid ""
"When extracting a source distribution, tools MUST either use :py:func:"
"`tarfile.data_filter` (e.g. :py:meth:`TarFile.extractall(..., filter='data') "
"<tarfile.TarFile.extractall>`), OR follow the *Unpacking without the data "
"filter* section below."
msgstr ""
"Dum malpakado de fonta distribuo, ilo DEVAS uzi aŭ :py:func:`tarfile."
"data_filter` (ekz. :py:meth:`TarFile.extractall(..., filter='data') <tarfile."
"TarFile.extractall>`), AŬ sekvi la paragrafon *Malpaki sen la datenfiltrilo* "
"ĉi-sube."

#: ../source/specifications/source-distribution-format.rst:97
msgid ""
"As an exception, on Python interpreters without :py:func:`hasattr(tarfile, "
"'data_filter') <tarfile.data_filter>` (:pep:`706`), tools that normally use "
"that filter (directly on indirectly) MAY warn the user and ignore this "
"specification. The trade-off between usability (e.g. fully trusting the "
"archive) and security (e.g. refusing to unpack) is left up to the tool in "
"this case."
msgstr ""
"Escepte, sur Python-interpretilo sen :py:func:`hasattr(tarfile, "
"'data_filter') <tarfile.data_filter>` (:pep:`706`), ilo ordinare uzanta tiun "
"filtrilon (rekte aŭ malrekte) POVAS averti la uzanton kaj ignori ĉi tiun "
"normon. La ilo pesu uzeblecon (ekz. plene fidi la arĥivon) kaj sekurecon (e."
"g. rifuzi malpaki)."

#: ../source/specifications/source-distribution-format.rst:105
msgid "Unpacking without the data filter"
msgstr "Malpaki sen la datenfiltrilo"

#: ../source/specifications/source-distribution-format.rst:107
msgid ""
"Tools that do not use the ``data`` filter directly (e.g. for backwards "
"compatibility, allowing additional features, or not using Python) MUST "
"follow this section. (At the time of this writing, the ``data`` filter also "
"follows this section, but it may get out of sync in the future.)"
msgstr ""
"Ilo, kiu ne uzas la filtrilon ``data`` rekte (ekz. por retrokongrueco, por "
"permesi pliajn funkciojn, aŭ ne uzanta Python) DEVAS obei ĉi tiun "
"paragrafon. (Je la tempo de verkado, la filtrilo ``data`` ankaŭ obeas ĉi "
"tiun paragrafon, sed tio povas eksvalidiĝi estontece.)"

#: ../source/specifications/source-distribution-format.rst:113
msgid ""
"The following files are invalid in an *sdist* archive. Upon encountering "
"such an entry, tools SHOULD notify the user, MUST NOT unpack the entry, and "
"MAY abort with a failure:"
msgstr ""
"La jenaj dosieroj ne validas en *fonta distribua* arĥivo. Trovante tian "
"eron, ilo SCIIGU la uzanton, DEVAS NE malpaki la eron, kaj POVAS malsukcesi:"

#: ../source/specifications/source-distribution-format.rst:117
msgid "Files that would be placed outside the destination directory."
msgstr "Dosieroj, kiuj estus metitaj ekster la cela dosierujo."

#: ../source/specifications/source-distribution-format.rst:118
msgid "Links (symbolic or hard) pointing outside the destination directory."
msgstr "Ligilo (simbola aŭ malmola) al loko ekster la cela dosierujo."

#: ../source/specifications/source-distribution-format.rst:119
msgid "Device files (including pipes)."
msgstr "Aparatdosieroj (inkluzive de duktoj)."

#: ../source/specifications/source-distribution-format.rst:121
msgid ""
"The following are also invalid. Tools MAY treat them as above, but are NOT "
"REQUIRED to do so:"
msgstr ""
"La ĉi-subaj estas ankaŭ nevalidaj. Ilo POVAS, sed NE DEVAS, pritrakti ilin "
"same kiel la ĉi-supraĵojn:"

#: ../source/specifications/source-distribution-format.rst:124
msgid "Files with a ``..`` component in the filename or link target."
msgstr "Dosieroj kun la komponanto ``..`` en la dosiernomo aŭ ligila celo."

#: ../source/specifications/source-distribution-format.rst:125
msgid "Links pointing to a file that is not part of the archive."
msgstr "Ligiloj al dosiero, kiu ne estas parto de la arĥivo."

#: ../source/specifications/source-distribution-format.rst:127
msgid ""
"Tools MAY unpack links (symbolic or hard) as regular files, using content "
"from the archive."
msgstr ""
"Ilo POVAS malpaki ligilon (simbolan aŭ malmolan) kiel ordinaran dosieron "
"uzante enhavon de la arĥivo."

#: ../source/specifications/source-distribution-format.rst:130
msgid "When extracting *sdist* archives:"
msgstr "Dum maldensigo de *fontdistribuaj* arĥivoj:"

#: ../source/specifications/source-distribution-format.rst:132
msgid ""
"Leading slashes in file names MUST be dropped. (This is nowadays standard "
"behaviour for ``tar`` unpacking.)"
msgstr ""
"Komencaj suprenstrekoj en dosiernomo DEVAS esti senigitaj. (Tio estas "
"nuntempe norma konduto pri malpakado de ``tar``.)"

#: ../source/specifications/source-distribution-format.rst:134
msgid "For each ``mode`` (Unix permission) bit, tools MUST either:"
msgstr "Por ĉiu bito ``mode`` (de Unika permeso), ilo DEVAS:"

#: ../source/specifications/source-distribution-format.rst:136
msgid "use the platform's default for a new file/directory (respectively),"
msgstr ""
"aŭ uzi la aprioran valoron de la platformo por nova dosiero aŭ dosierujo "
"(respektive),"

#: ../source/specifications/source-distribution-format.rst:137
msgid "set the bit according to the archive, or"
msgstr "aŭ agordi la biton laŭ la arĥivo,"

#: ../source/specifications/source-distribution-format.rst:138
msgid ""
"use the bit from ``rw-r--r--`` (``0o644``) for non-executable files or "
"``rwxr-xr-x`` (``0o755``) for executable files and directories."
msgstr ""
"aŭ uzi la biton el ``rw-r--r--`` (``0o644``) por nerulebla dosiero aŭ ``rwxr-"
"xr-x`` (``0o755``) por rulebla dosiero aŭ dosierujo."

#: ../source/specifications/source-distribution-format.rst:141
msgid "High ``mode`` bits (setuid, setgid, sticky) MUST be cleared."
msgstr ""
"La altaj bitoj ``mode`` (setuid, setgid, sticky) DEVAS esti malŝaltitaj."

#: ../source/specifications/source-distribution-format.rst:142
msgid "It is RECOMMENDED to preserve the user *executable* bit."
msgstr "Oni REKOMENDAS konservi la biton pri rulebleco far la uzanto."

#: ../source/specifications/source-distribution-format.rst:146
msgid "Further hints"
msgstr "Pluaj konsiloj"

#: ../source/specifications/source-distribution-format.rst:148
msgid ""
"Tool authors are encouraged to consider how *hints for further verification* "
"in ``tarfile`` documentation apply to their tool."
msgstr ""
"NI instigas aŭtorojn de iloj pripensi kiel la *hints for further "
"verification* en la dokumentaro de ``tarfile`` rilatas al la iloj."

#: ../source/specifications/source-distribution-format.rst:155
msgid ""
"November 2020: The original version of this specification was approved "
"through :pep:`643`."
msgstr ""
"Novembro 2020: La originala versio de ĉi tiu specifo estis aprobita per :pep:"
"`643`."

#: ../source/specifications/source-distribution-format.rst:157
msgid "July 2021: Defined what a source tree is."
msgstr "Julio 2021: Difinis fontarbon."

#: ../source/specifications/source-distribution-format.rst:158
msgid ""
"September 2022: The filename of a source distribution was standardized "
"through :pep:`625`."
msgstr ""
"Septembro 2022: La dosiernomo de fonta distribuo estis normigita per :pep:"
"`625`."

#: ../source/specifications/source-distribution-format.rst:160
msgid ""
"August 2023: Source distribution archive features were standardized through :"
"pep:`721`."
msgstr ""
"Aŭgusto 2023: Trajtoj de fontdistribuaj arĥivoj estis normigitaj per :pep:"
"`721`."

#: ../source/specifications/source-distribution-format.rst:162
msgid ""
"December 2024: License files inclusion into source distribution was "
"standardized through :pep:`639`."
msgstr ""
"Decembro 2024: inkluzivo de licenco-dosiero en fonta distribuo estis "
"normigita per :pep:`639`."

#: ../source/specifications/version-specifiers.rst:7
#: ../source/specifications/version-specifiers.rst:785
msgid "Version specifiers"
msgstr "Versispecifiloj"

#: ../source/specifications/version-specifiers.rst:10
msgid ""
"This specification describes a scheme for identifying versions of Python "
"software distributions, and declaring dependencies on particular versions."
msgstr ""
"Jen specifo pri skemo por identigi versiojn de Python-programaj distribuoj "
"kaj deklari dependecojn sur specifaj versioj."

#: ../source/specifications/version-specifiers.rst:15
msgid "Definitions"
msgstr "Difinoj"

#: ../source/specifications/version-specifiers.rst:17
msgid ""
"The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL "
"NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and "
"\"OPTIONAL\" in this document are to be interpreted as described in :rfc:"
"`2119`."
msgstr ""
"La ŝlosilvortoj «DEVAS» (MUST, SHALL), «DEVAS NE» (MUST NOT, SHALL NOT), "
"«POSTULATA» (REQUIRED), «-U» (SHOULD), «NE -U» (SHOULD NOT), "
"«REKOMENDATA» (RECOMMENDED), «POVAS» (MAY), kaj «NEDEVIGA» (OPTIONAL) en ĉi "
"tiu dokumento estas interpretataj laŭ :rfc:`2119`."

#: ../source/specifications/version-specifiers.rst:21
msgid ""
"\"Build tools\" are automated tools intended to run on development systems, "
"producing source and binary distribution archives. Build tools may also be "
"invoked by integration tools in order to build software distributed as "
"sdists rather than prebuilt binary archives."
msgstr ""
"«Konstruilo» estas aŭtomata ilo por evoluada sistemo, produktanta fonto-"
"distribuajn kaj duum-distribuajn arĥivojn. Konstruilon integrilo povas "
"alvoki, por konstrui programon distribuitan kiel fontan distribuon, ne kiel "
"antaŭkonstruitan duuman arĥivon."

#: ../source/specifications/version-specifiers.rst:26
msgid ""
"\"Index servers\" are active distribution registries which publish version "
"and dependency metadata and place constraints on the permitted metadata."
msgstr ""
"«Indekso-servilo» estas aktiva distribuo-registro eldonanta metadatenojn pri "
"versioj kaj dependecoj kaj limigas la permesatajn metadatenojn."

#: ../source/specifications/version-specifiers.rst:29
msgid ""
"\"Publication tools\" are automated tools intended to run on development "
"systems and upload source and binary distribution archives to index servers."
msgstr ""
"«Eldonilo» estas aŭtomata ilo ruliĝanta sur evoluada sistemo por alŝuti "
"fontajn kaj duumajn distribuajn arĥivojn al indeksoserviloj."

#: ../source/specifications/version-specifiers.rst:32
msgid ""
"\"Installation tools\" are integration tools specifically intended to run on "
"deployment targets, consuming source and binary distribution archives from "
"an index server or other designated location and deploying them to the "
"target system."
msgstr ""
"«Instalilo» estas integrilo specife por disponebligaĵoj, konsumanta fontan "
"aŭ duuman distribuan arĥivon el indeksa servilo aŭ alia provizita loko kaj "
"disponiganta ĝin al la cela sistemo."

#: ../source/specifications/version-specifiers.rst:37
msgid ""
"\"Automated tools\" is a collective term covering build tools, index "
"servers, publication tools, integration tools and any other software that "
"produces or consumes distribution version and dependency metadata."
msgstr ""
"«Aŭtomataj iloj» estas kolektiva esprimo inkluzivanta konstruilojn, "
"indeksoservilojn, eldonilojn, integrilojn kaj ajnajn aliajn programojn "
"produktantajn aŭ konsumantajn medatatenojn pri versioj kaj dependecoj de "
"distribuo."

#: ../source/specifications/version-specifiers.rst:43
msgid "Version scheme"
msgstr "Versia skemo"

#: ../source/specifications/version-specifiers.rst:45
msgid ""
"Distributions are identified by a public version identifier which supports "
"all defined version comparison operations"
msgstr ""
"Distribuo estas identigita per publika versio-identigilo subtenanta ĉiujn "
"difinitajn versikomparajn operaciojn"

#: ../source/specifications/version-specifiers.rst:48
msgid ""
"The version scheme is used both to describe the distribution version "
"provided by a particular distribution archive, as well as to place "
"constraints on the version of dependencies needed in order to build or run "
"the software."
msgstr ""
"La versioskemo estas uzata kaj por priskribi la distribuversion disponigitan "
"de iu distribuo-arĥivo kaj ankaŭ por limigi la versiojn de dependaĵoj "
"necesaj por konstrui aŭ ruli la programon."

#: ../source/specifications/version-specifiers.rst:57
msgid "Public version identifiers"
msgstr "Publikaj versiidentigiloj"

#: ../source/specifications/version-specifiers.rst:59
msgid ""
"The canonical public version identifiers MUST comply with the following "
"scheme::"
msgstr "La kanona publika versia identigilo DEVAS observi la jenan skemon::"

#: ../source/specifications/version-specifiers.rst:64
msgid ""
"Public version identifiers MUST NOT include leading or trailing whitespace."
msgstr ""
"Publika versia identigilo DEVAS NE inkluzivi komencan aŭ finan blankan "
"spacon."

#: ../source/specifications/version-specifiers.rst:66
msgid "Public version identifiers MUST be unique within a given distribution."
msgstr "Publika versia identigilo DEVAS esti unika en iu distribuo."

#: ../source/specifications/version-specifiers.rst:68
msgid ""
"Installation tools SHOULD ignore any public versions which do not comply "
"with this scheme but MUST also include the normalizations specified below. "
"Installation tools MAY warn the user when non-compliant or ambiguous "
"versions are detected."
msgstr ""
"Instalilo IGNORU ajnan publikan version, kiu ne observas tiun skemon, kaj "
"DEVAS inkluzivi la normigojn ĉi-subajn. Instalilo POVAS averti la uzanton, "
"kiam ĝi trovas neobservantajn aŭ ambiguajn versiojn."

#: ../source/specifications/version-specifiers.rst:73
msgid ""
"See also :ref:`version-specifiers-regex` which provides a regular expression "
"to check strict conformance with the canonical format, as well as a more "
"permissive regular expression accepting inputs that may require subsequent "
"normalization."
msgstr ""
"Vidu ankaŭ :ref:`version-specifiers-regex`, kiu provizas regulan esprimon "
"por kontroli striktan konformecon al la kanona formo, kaj pli permeseman "
"regulan esprimon por tiuj enigaĵoj, kiujn oni devas normigi poste."

#: ../source/specifications/version-specifiers.rst:78
msgid "Public version identifiers are separated into up to five segments:"
msgstr "Publika versia identigilo konsistas el maksimume kvin segmentoj:"

#: ../source/specifications/version-specifiers.rst:80
msgid "Epoch segment: ``N!``"
msgstr "Epoka segmento: ``N!``"

#: ../source/specifications/version-specifiers.rst:81
msgid "Release segment: ``N(.N)*``"
msgstr "Eldona segmento: ``N(.N)*``"

#: ../source/specifications/version-specifiers.rst:82
msgid "Pre-release segment: ``{a|b|rc}N``"
msgstr "Antaŭeldona segmento: ``{a|b|rc}N``"

#: ../source/specifications/version-specifiers.rst:83
msgid "Post-release segment: ``.postN``"
msgstr "Posteldona segmento: ``.postN``"

#: ../source/specifications/version-specifiers.rst:84
msgid "Development release segment: ``.devN``"
msgstr "Evoluada eldona segmento: ``.devN``"

#: ../source/specifications/version-specifiers.rst:86
msgid ""
"Any given release will be a \"final release\", \"pre-release\", \"post-"
"release\" or \"developmental release\" as defined in the following sections."
msgstr ""
"Ĉia eldono estas aŭ «fina eldono», aŭ «antaŭeldono», aŭ «posteldono» aŭ "
"«evolua eldono» laŭ la ĉi-subaj paragrafoj."

#: ../source/specifications/version-specifiers.rst:89
msgid ""
"All numeric components MUST be non-negative integers represented as "
"sequences of ASCII digits."
msgstr ""
"Ĉiu nombra komponanto DEVAS esti nenegativa entjero reprezentita kiel vico "
"de Askiaj ciferoj."

#: ../source/specifications/version-specifiers.rst:92
msgid ""
"All numeric components MUST be interpreted and ordered according to their "
"numeric value, not as text strings."
msgstr ""
"Ĉiu numera komponanto DEVAS esti interpretata kaj ordigita laŭ sia numera "
"valoro, ne kiel teksto."

#: ../source/specifications/version-specifiers.rst:95
msgid ""
"All numeric components MAY be zero. Except as described below for the "
"release segment, a numeric component of zero has no special significance "
"aside from always being the lowest possible value in the version ordering."
msgstr ""
"Ĉia numera komponanto POVAS esti nulo. Krom la ĉi-suba paragrafo pri la "
"eldono-segmento, la numera komponanto nulo ne estas speciala; ĝi estas "
"simple la plej malgranda valoro je ordigado de versioj."

#: ../source/specifications/version-specifiers.rst:101
msgid ""
"Some hard to read version identifiers are permitted by this scheme in order "
"to better accommodate the wide range of versioning practices across existing "
"public and private Python projects."
msgstr ""
"Kelkaj malfacile legeblaj versio-identigiloj estas permesataj de tiu skemo "
"por pli bone adapti al la larĝa gamo de versio-formoj en ekzistantaj "
"publikaj kaj privataj Python-projektoj."

#: ../source/specifications/version-specifiers.rst:105
msgid ""
"Accordingly, some of the versioning practices which are technically "
"permitted by the specification are strongly discouraged for new projects. "
"Where this is the case, the relevant details are noted in the following "
"sections."
msgstr ""
"Tial, kelkaj el la versiaj formoj teĥnike permesataj de la specifo estas "
"malrekomendegataj por novaj projektoj. Por tiaj kazoj, la ĉi-subaj "
"paragrafoj notas detalojn."

#: ../source/specifications/version-specifiers.rst:116
msgid "Local version identifiers MUST comply with the following scheme::"
msgstr "Loka versia identigilo DEVAS observi la jenan skemon::"

#: ../source/specifications/version-specifiers.rst:120
msgid ""
"They consist of a normal public version identifier (as defined in the "
"previous section), along with an arbitrary \"local version label\", "
"separated from the public version identifier by a plus. Local version labels "
"have no specific semantics assigned, but some syntactic restrictions are "
"imposed."
msgstr ""

#: ../source/specifications/version-specifiers.rst:125
msgid ""
"Local version identifiers are used to denote fully API (and, if applicable, "
"ABI) compatible patched versions of upstream projects. For example, these "
"may be created by application developers and system integrators by applying "
"specific backported bug fixes when upgrading to a new upstream release would "
"be too disruptive to the application or other integrated system (such as a "
"Linux distribution)."
msgstr ""

#: ../source/specifications/version-specifiers.rst:132
msgid ""
"The inclusion of the local version label makes it possible to differentiate "
"upstream releases from potentially altered rebuilds by downstream "
"integrators. The use of a local version identifier does not affect the kind "
"of a release but, when applied to a source distribution, does indicate that "
"it may not contain the exact same code as the corresponding upstream release."
msgstr ""

#: ../source/specifications/version-specifiers.rst:138
msgid ""
"To ensure local version identifiers can be readily incorporated as part of "
"filenames and URLs, and to avoid formatting inconsistencies in hexadecimal "
"hash representations, local version labels MUST be limited to the following "
"set of permitted characters:"
msgstr ""
"Por certigi, ke loka versio-identigilo estu facile enmetebla en dosiernomojn "
"kaj retadresojn, kaj por eviti aranĝan malkoherecon pri deksesumaj prezentoj "
"de haketaĵoj, loka versio-etikedo DEVAS konsisti nur el la ĉi-subaj "
"permesataj skribsignoj:"

#: ../source/specifications/version-specifiers.rst:143
msgid "ASCII letters (``[a-zA-Z]``)"
msgstr "Askiaj literoj (``[a-zA-Z]``)"

#: ../source/specifications/version-specifiers.rst:144
msgid "ASCII digits (``[0-9]``)"
msgstr "Askiaj ciferoj (``[0-9]``)"

#: ../source/specifications/version-specifiers.rst:145
msgid "periods (``.``)"
msgstr "punktoj (``.``)"

#: ../source/specifications/version-specifiers.rst:147
msgid "Local version labels MUST start and end with an ASCII letter or digit."
msgstr ""
"Loka versia etikedo DEVAS komenciĝi kaj finiĝi per Askiaj literoj aŭ ciferoj."

#: ../source/specifications/version-specifiers.rst:149
msgid ""
"Comparison and ordering of local versions considers each segment of the "
"local version (divided by a ``.``) separately. If a segment consists "
"entirely of ASCII digits then that section should be considered an integer "
"for comparison purposes and if a segment contains any ASCII letters then "
"that segment is compared lexicographically with case insensitivity. When "
"comparing a numeric and lexicographic segment, the numeric section always "
"compares as greater than the lexicographic segment. Additionally a local "
"version with a great number of segments will always compare as greater than "
"a local version with fewer segments, as long as the shorter local version's "
"segments match the beginning of the longer local version's segments exactly."
msgstr ""
"Komparo kaj ordigo de lokaj versioj temas pri ĉiu individua segmento de la "
"loka versio (apartigita de ``.``). Se segmento konsistas tute el Askiaj "
"ciferoj, tiu sekcio estas konsiderata kiel entjero por komparo; se segmento "
"enhavas ajnan Askian literon, tiu segmento estas komparata leksikografie "
"usklecblinde. Dum komparo inter numera kaj leksikografia segmentoj, la "
"numera sekcio ĉiam estas pli granda ol la leksikografia segmento. Plie, loka "
"versio kun pli granda nombro de segmentoj ĉiam estas pli granda ol loka "
"versio kun malpli da segmentoj, se la segmentoj de la pli mallonga loka "
"versio ekzakte egalas la komencon de la pli longa loka versio."

#: ../source/specifications/version-specifiers.rst:160
msgid ""
"An \"upstream project\" is a project that defines its own public versions. A "
"\"downstream project\" is one which tracks and redistributes an upstream "
"project, potentially backporting security and bug fixes from later versions "
"of the upstream project."
msgstr ""
"«Suprula projekto» estas projekto, kiu difinas siajn publikajn versiojn. "
"«Malsuprula projekto» estas projekto, kiu spuras kaj redistribuas suprulan "
"projekton, eble kun sekurigaj flikoj kaj cimriparoj el pli novaj versioj de "
"la suprula projekto."

#: ../source/specifications/version-specifiers.rst:165
msgid ""
"Local version identifiers SHOULD NOT be used when publishing upstream "
"projects to a public index server, but MAY be used to identify private "
"builds created directly from the project source. Local version identifiers "
"SHOULD be used by downstream projects when releasing a version that is API "
"compatible with the version of the upstream project identified by the public "
"version identifier, but contains additional changes (such as bug fixes). As "
"the Python Package Index is intended solely for indexing and hosting "
"upstream projects, it MUST NOT allow the use of local version identifiers."
msgstr ""
"Oni NE UZU lokan versio-identigilon por eldoni originan projekton al publika "
"indeksoservilo, sed POVAS uzi ĝin por identigi privatan konstruon kreitan "
"rekte el la projekta fonto. Repaka projekto UZU lokan versio-identigilon por "
"versio API-kongrua kun la versio de la origina projekto de la publika versio-"
"identigilo, sed kun pliaj ŝanĝoj (kiel cimriparoj). Ĉar la Python-Pakindekso "
"celas sole indeksi kaj gastigi originajn projektojn, ĝi DEVAS NE permesi la "
"uzon de loka versio-identigilo."

#: ../source/specifications/version-specifiers.rst:175
msgid ""
"Source distributions using a local version identifier SHOULD provide the "
"``python.integrator`` extension metadata (as defined in :pep:`459`)."
msgstr ""
"Fonta distribuo uzanta lokan versian identigilon PROVIZU la etendaĵan "
"metadatenon ``python.integrator`` (laŭ :pep:`459`)."

#: ../source/specifications/version-specifiers.rst:180
msgid "Final releases"
msgstr "Finaj eldonoj"

#: ../source/specifications/version-specifiers.rst:182
msgid ""
"A version identifier that consists solely of a release segment and "
"optionally an epoch identifier is termed a \"final release\"."
msgstr ""
"Versia identigilo konsistanta nur el eldona segmento kaj nedeviga epok-"
"identigilo nomiĝas «fina eldono»."

#: ../source/specifications/version-specifiers.rst:185
msgid ""
"The release segment consists of one or more non-negative integer values, "
"separated by dots::"
msgstr ""
"La eldona segmento konsistas el unu aŭ pluraj nenegativaj entjeraj valoroj, "
"apartigitaj per punktoj::"

#: ../source/specifications/version-specifiers.rst:190
msgid ""
"Final releases within a project MUST be numbered in a consistently "
"increasing fashion, otherwise automated tools will not be able to upgrade "
"them correctly."
msgstr ""
"Finaj eldonoj por iu projekto DEVAS esti numeritaj alkremente. Alie, "
"aŭtomata ilo ne povus ĝisdatigi versiojn ĝuste."

#: ../source/specifications/version-specifiers.rst:194
msgid ""
"Comparison and ordering of release segments considers the numeric value of "
"each component of the release segment in turn. When comparing release "
"segments with different numbers of components, the shorter segment is padded "
"out with additional zeros as necessary."
msgstr ""
"Komparado kaj ordigado de eldonsegmentoj uzas la nombran valoron de ĉiu "
"komponanto de la eldonsegmento. Dum komparado de eldonsegmentoj kun malsamaj "
"nombroj da komponantoj, la pli mallonga segmento plilongiĝas per nuloj por "
"egallongeco."

#: ../source/specifications/version-specifiers.rst:199
msgid ""
"While any number of additional components after the first are permitted "
"under this scheme, the most common variants are to use two components "
"(\"major.minor\") or three components (\"major.minor.micro\")."
msgstr ""
"Dum la skemo permesas ajnan nombron da komponantoj post la unua, plej ofte "
"oni uzas du komponantojn («maĵora.minora») aŭ tri («maĵora.minora.mikroa»)."

#: ../source/specifications/version-specifiers.rst:203
msgid "For example::"
msgstr "Ekzemple::"

#: ../source/specifications/version-specifiers.rst:218
msgid ""
"A release series is any set of final release numbers that start with a "
"common prefix. For example, ``3.3.1``, ``3.3.5`` and ``3.3.9.45`` are all "
"part of the ``3.3`` release series."
msgstr ""
"Eldona serio estas aro de finaj eldonnumeroj komenciĝantaj per komuna "
"prefikso. Ekzemple, ``3.3.1``, ``3.3.5`` kaj ``3.3.9.45`` estas partoj de la "
"eldona serio ``3.3``."

#: ../source/specifications/version-specifiers.rst:224
msgid ""
"``X.Y`` and ``X.Y.0`` are not considered distinct release numbers, as the "
"release segment comparison rules implicit expand the two component form to "
"``X.Y.0`` when comparing it to any release segment that includes three "
"components."
msgstr ""
"``X.Y`` kaj ``X.Y.0`` ne distingiĝas kiel versiaj numeroj, ĉar la reguloj "
"pri komparado de eldonsegmentoj implicite plilongigas la du-komponantan "
"formon al ``X.Y.0`` por komparado al ajna eldonsegmento inkluzivanta tri "
"komponantojn."

#: ../source/specifications/version-specifiers.rst:229
#, fuzzy
#| msgid ""
#| "Date based release segments are also permitted. An example of a date "
#| "based release scheme using the year and month of the release::"
msgid ""
"Date-based release segments are also permitted. An example of a date-based "
"release scheme using the year and month of the release::"
msgstr ""
"Datobaza eldonsegmento estas ankaŭ permesata. Jen ekzemplo de datobaza "
"eldonskemo uzanta la jaron kaj monaton de la eldono::"

#: ../source/specifications/version-specifiers.rst:243
msgid "Pre-releases"
msgstr "Antaŭeldonoj"

#: ../source/specifications/version-specifiers.rst:245
msgid ""
"Some projects use an \"alpha, beta, release candidate\" pre-release cycle to "
"support testing by their users prior to a final release."
msgstr ""
"Kelkaj projektoj uzas la antaŭeldonan ciklon «alfa, beta, eldonkandidato» "
"por helpi testadon far uzantoj antaŭ fina eldonado."

#: ../source/specifications/version-specifiers.rst:248
msgid ""
"If used as part of a project's development cycle, these pre-releases are "
"indicated by including a pre-release segment in the version identifier::"
msgstr ""
"Se antaŭeldono estas parto de la evolua ciklo de projekto, ĝi indikiĝas per "
"antaŭeldona segmento en la versia identigilo::"

#: ../source/specifications/version-specifiers.rst:256
msgid ""
"A version identifier that consists solely of a release segment and a pre-"
"release segment is termed a \"pre-release\"."
msgstr ""
"Versia identigilo konsistanta nur el eldona segmento kaj antaŭeldona "
"segmento nomiĝas «antaŭeldono»."

#: ../source/specifications/version-specifiers.rst:259
msgid ""
"The pre-release segment consists of an alphabetical identifier for the pre-"
"release phase, along with a non-negative integer value. Pre-releases for a "
"given release are ordered first by phase (alpha, beta, release candidate) "
"and then by the numerical component within that phase."
msgstr ""

#: ../source/specifications/version-specifiers.rst:264
msgid ""
"Installation tools MAY accept both ``c`` and ``rc`` releases for a common "
"release segment in order to handle some existing legacy distributions."
msgstr ""
"Instalilo POVAS akcepti kaj ``c``- kaj ``rc``-eldonoj por la sama eldona "
"segmento por kongrueco kun kelkaj ekzistantaj malnovaj distribuoj."

#: ../source/specifications/version-specifiers.rst:267
msgid ""
"Installation tools SHOULD interpret ``c`` versions as being equivalent to "
"``rc`` versions (that is, ``c1`` indicates the same version as ``rc1``)."
msgstr ""
"Instalilo INTERPRETU ``c``-versiojn kiel ekvivalentojn de ``rc``-versioj "
"(alivorte, ``c1`` indikas la saman version kiel ``rc1``)."

#: ../source/specifications/version-specifiers.rst:270
msgid ""
"Build tools, publication tools and index servers SHOULD disallow the "
"creation of both ``rc`` and ``c`` releases for a common release segment."
msgstr ""
"Konstruilo, eldonilo kaj indeksoservilo MALPERMESU la kreadon de kaj ``rc``- "
"kaj ``c``-eldonoj por la sama eldona segmento."

#: ../source/specifications/version-specifiers.rst:275
msgid "Post-releases"
msgstr "Posteldonoj"

#: ../source/specifications/version-specifiers.rst:277
msgid ""
"Some projects use post-releases to address minor errors in a final release "
"that do not affect the distributed software (for example, correcting an "
"error in the release notes)."
msgstr ""
"Kelkaj projektoj uzas posteldonon por korekti negravajn erarojn en fina "
"eldono ne efikantajn sur la distribuita programo (ekzemple, por korekti "
"eraron en la eldonaj notoj)."

#: ../source/specifications/version-specifiers.rst:281
msgid ""
"If used as part of a project's development cycle, these post-releases are "
"indicated by including a post-release segment in the version identifier::"
msgstr ""
"Se posteldono estas parto de la evolua ciklo de projekto, ĝi indikiĝas per "
"posteldona segmento en la versia identigilo::"

#: ../source/specifications/version-specifiers.rst:286
msgid ""
"A version identifier that includes a post-release segment without a "
"developmental release segment is termed a \"post-release\"."
msgstr ""
"Versia identigilo inkluzivanta posteldonan segmenton sen evolueldona "
"segmento nomiĝas «posteldono»."

#: ../source/specifications/version-specifiers.rst:289
msgid ""
"The post-release segment consists of the string ``.post``, followed by a non-"
"negative integer value. Post-releases are ordered by their numerical "
"component, immediately following the corresponding release, and ahead of any "
"subsequent release."
msgstr ""
"La posteldona segmento konsistas el la signoĉeno ``.post`` sekvita de "
"nenegativa entjero. Posteldono estas ordigita laŭ sia numera komponanto, tuj "
"post la respondanta eldono, kaj antaŭ ajna sekva eldono."

#: ../source/specifications/version-specifiers.rst:296
msgid ""
"The use of post-releases to publish maintenance releases containing actual "
"bug fixes is strongly discouraged. In general, it is better to use a longer "
"release number and increment the final component for each maintenance "
"release."
msgstr ""
"La uzo de posteldono por ripari faktan cimon estas malrekomendegata. "
"Ĝenerale, oni uzu pli longan eldonan numeron kaj alkrementu la finan "
"komponanton por ĉiu cimripara eldono."

#: ../source/specifications/version-specifiers.rst:301
msgid "Post-releases are also permitted for pre-releases::"
msgstr "Posteldonoj estas ankaŭ permesataj por antaŭeldonoj::"

#: ../source/specifications/version-specifiers.rst:309
msgid ""
"Creating post-releases of pre-releases is strongly discouraged, as it makes "
"the version identifier difficult to parse for human readers. In general, it "
"is substantially clearer to simply create a new pre-release by incrementing "
"the numeric component."
msgstr ""
"Krei posteldono de antaŭeldono estas malrekomendegate, ĉar tio malfaciligas "
"la versio-identigilon por homoj. Ĝenerale, estas pli simple krei novan "
"antaŭeldonon alkrementante la numeran komponanton."

#: ../source/specifications/version-specifiers.rst:316
msgid "Developmental releases"
msgstr "Evoluaj eldonoj"

#: ../source/specifications/version-specifiers.rst:318
msgid ""
"Some projects make regular developmental releases, and system packagers "
"(especially for Linux distributions) may wish to create early releases "
"directly from source control which do not conflict with later project "
"releases."
msgstr ""
"Kelkaj projektoj regule kreas evoluadajn eldonojn. Sistema pakanto (speciale "
"por Linux-distribuo) eble volas krei fruan eldonon rekte el fontarbo ne "
"konfliktantan kun postaj projektaj eldonoj."

#: ../source/specifications/version-specifiers.rst:323
msgid ""
"If used as part of a project's development cycle, these developmental "
"releases are indicated by including a developmental release segment in the "
"version identifier::"
msgstr ""
"Kiel parto de la evoluciklo de projekto, tiuj evoluaj eldonoj indikiĝas per "
"segmento de evolua eldono en la versia identigilo::"

#: ../source/specifications/version-specifiers.rst:329
msgid ""
"A version identifier that includes a developmental release segment is termed "
"a \"developmental release\"."
msgstr ""
"Versia identigilo inkluzivanta evolueldona segmento nomiĝas «evolua eldono»."

#: ../source/specifications/version-specifiers.rst:332
msgid ""
"The developmental release segment consists of the string ``.dev``, followed "
"by a non-negative integer value. Developmental releases are ordered by their "
"numerical component, immediately before the corresponding release (and "
"before any pre-releases with the same release segment), and following any "
"previous release (including any post-releases)."
msgstr ""

#: ../source/specifications/version-specifiers.rst:338
msgid ""
"Developmental releases are also permitted for pre-releases and post-"
"releases::"
msgstr "Evolua eldono estas ankaŭ permesata por antaŭeldono kaj posteldono::"

#: ../source/specifications/version-specifiers.rst:346
#, fuzzy
#| msgid ""
#| "Developmental releases are also permitted for pre-releases and post-"
#| "releases::"
msgid ""
"Do note that development releases are considered a type of pre-release when "
"handling them."
msgstr "Evolua eldono estas ankaŭ permesata por antaŭeldono kaj posteldono::"

#: ../source/specifications/version-specifiers.rst:351
msgid ""
"While they may be useful for continuous integration purposes, publishing "
"developmental releases of pre-releases to general purpose public index "
"servers is strongly discouraged, as it makes the version identifier "
"difficult to parse for human readers. If such a release needs to be "
"published, it is substantially clearer to instead create a new pre-release "
"by incrementing the numeric component."
msgstr ""

#: ../source/specifications/version-specifiers.rst:358
msgid ""
"Developmental releases of post-releases are also strongly discouraged, but "
"they may be appropriate for projects which use the post-release notation for "
"full maintenance releases which may include code changes."
msgstr ""
"Evoluada eldono de posteldono estas ankaŭ malrekomendegata, sed ĝi eble "
"taŭgas por projekto uzanta la posteldonan notacion por plena flega eldono "
"eble inkluzivanta ŝanĝojn de kodo."

#: ../source/specifications/version-specifiers.rst:364
msgid "Version epochs"
msgstr "Versiaj epokoj"

#: ../source/specifications/version-specifiers.rst:366
msgid ""
"If included in a version identifier, the epoch appears before all other "
"components, separated from the release segment by an exclamation mark::"
msgstr ""
"Se epoko ekzistas en versio-identigilo, ĝi ĉeestas antaŭ ĉiaj aliaj "
"komponantoj, apartigite el la eldono-segmento per krisigno::"

#: ../source/specifications/version-specifiers.rst:371
msgid "If no explicit epoch is given, the implicit epoch is ``0``."
msgstr "Se la epoko ne estas eksplicita, la implicita epoko estas ``0``."

#: ../source/specifications/version-specifiers.rst:373
msgid ""
"Most version identifiers will not include an epoch, as an explicit epoch is "
"only needed if a project *changes* the way it handles version numbering in a "
"way that means the normal version ordering rules will give the wrong answer. "
"For example, if a project is using date based versions like ``2014.04`` and "
"would like to switch to semantic versions like ``1.0``, then the new "
"releases would be identified as *older* than the date based releases when "
"using the normal sorting scheme::"
msgstr ""
"Multaj versio-identigiloj ne inkluzivas epokon, ĉar eksplicita epoko nur "
"necees, se projekto *ŝanĝas* la manieron de versia numerado tiel, ke la "
"ordinaraj reguloj pri ordigado de versioj estas malĝustaj. Ekzemple, se "
"projekto uzas dato-bazajn versiojn kiel ``2014.04`` kaj volas ŝanĝi al "
"semantikaj versioj kiel ``1.0``, do la novaj eldonoj estus rigardataj kiel "
"*pli malnovaj* ol la dato-bazaj eldonoj laŭ la ordinara ordigado::"

#: ../source/specifications/version-specifiers.rst:387
msgid ""
"However, by specifying an explicit epoch, the sort order can be changed "
"appropriately, as all versions from a later epoch are sorted after versions "
"from an earlier epoch::"
msgstr ""
"Tamen, eksplicitante epokon, oni povas ŝanĝi la ordon, ĉar ĉiuj versioj de "
"pli posta epoko estas ordigitaj post versioj de pli frua epoko::"

#: ../source/specifications/version-specifiers.rst:401
msgid "Normalization"
msgstr "Normigo"

#: ../source/specifications/version-specifiers.rst:403
msgid ""
"In order to maintain better compatibility with existing versions there are a "
"number of \"alternative\" syntaxes that MUST be taken into account when "
"parsing versions. These syntaxes MUST be considered when parsing a version, "
"however they should be \"normalized\" to the standard syntax defined above."
msgstr ""

#: ../source/specifications/version-specifiers.rst:410
msgid "Case sensitivity"
msgstr "Usklecdistingo"

#: ../source/specifications/version-specifiers.rst:412
msgid ""
"All ascii letters should be interpreted case insensitively within a version "
"and the normal form is lowercase. This allows versions such as ``1.1RC1`` "
"which would be normalized to ``1.1rc1``."
msgstr ""
"Ĉiu Askia litero interpretiĝu usklecblinde en versio. La norma formo estas "
"minusklo. Tio permesas version kiel ``1.1RC1``, kies norma formo estas "
"``1.1rc1``."

#: ../source/specifications/version-specifiers.rst:418
msgid "Integer Normalization"
msgstr "Entjera Normigo"

#: ../source/specifications/version-specifiers.rst:420
msgid ""
"All integers are interpreted via the ``int()`` built in and normalize to the "
"string form of the output. This means that an integer version of ``00`` "
"would normalize to ``0`` while ``09000`` would normalize to ``9000``. This "
"does not hold true for integers inside of an alphanumeric segment of a local "
"version such as ``1.0+foo0100`` which is already in its normalized form."
msgstr ""
"Ĉiu entjero interpretiĝas laŭ la apriora funkcio ``int()``, kaj la normigita "
"formo estas la teksta eligaĵo. Alivorte, la normigita formo de ``00`` estas "
"``0``, kaj la normigita formo de ``09000`` estas ``9000``. Tio ne temas pri "
"entjero en alfabetcifera segmento de loka versio kiel ``1.0+foo0100``, kiu "
"estas sia propra normigita formo."

#: ../source/specifications/version-specifiers.rst:428
msgid "Pre-release separators"
msgstr "Antaŭeldonaj apartigiloj"

#: ../source/specifications/version-specifiers.rst:430
msgid ""
"Pre-releases should allow a ``.``, ``-``, or ``_`` separator between the "
"release segment and the pre-release segment. The normal form for this is "
"without a separator. This allows versions such as ``1.1.a1`` or ``1.1-a1`` "
"which would be normalized to ``1.1a1``. It should also allow a separator to "
"be used between the pre-release signifier and the numeral. This allows "
"versions such as ``1.0a.1`` which would be normalized to ``1.0a1``."
msgstr ""
"Antaŭeldono permesas la apartigilojn ``.``, ``-`` aŭ ``_`` inter la eldono-"
"segmento kaj la antaŭeldono-segmento. La norma formo ne uzas apartigilon. "
"Tio permesas versiojn kiel ``1.1.a1`` aŭ ``1.1-a1``, kies norma formo estas "
"``1.1a1``. Antaŭeldono ankaŭ permesas apartigilon inter la antaŭeldono-"
"specifilo kaj la numero. Tio permesas versiojn kiel ``1.0a.1``, kies norma "
"formo estas ``1.0a1``."

#: ../source/specifications/version-specifiers.rst:439
msgid "Pre-release spelling"
msgstr "Literumado de antaŭeldono"

#: ../source/specifications/version-specifiers.rst:441
msgid ""
"Pre-releases allow the additional spellings of ``alpha``, ``beta``, ``c``, "
"``pre``, and ``preview`` for ``a``, ``b``, ``rc``, ``rc``, and ``rc`` "
"respectively. This allows versions such as ``1.1alpha1``, ``1.1beta2``, or "
"``1.1c3`` which normalize to ``1.1a1``, ``1.1b2``, and ``1.1rc3``. In every "
"case the additional spelling should be considered equivalent to their normal "
"forms."
msgstr ""
"Antaŭeldono permesas la literumaĵojn ``alpha``, ``beta``, ``c``, ``pre`` kaj "
"``preview`` por ``a``, ``b``, ``rc``, ``rc`` kaj``rc`` respektive. Tio "
"permesas versiojn kiel ``1.1alpha1``, ``1.1beta2`` kaj ``1.1c3``, kiuj estas "
"normigitaj al ``1.1a1``, ``1.1b2`` kaj ``1.1rc3``. Ĉiukaze la ekstra "
"literumaĵo ekvivalentas la norman formon."

#: ../source/specifications/version-specifiers.rst:450
msgid "Implicit pre-release number"
msgstr "Implicita antaŭeldona numero"

#: ../source/specifications/version-specifiers.rst:452
msgid ""
"Pre releases allow omitting the numeral in which case it is implicitly "
"assumed to be ``0``. The normal form for this is to include the ``0`` "
"explicitly. This allows versions such as ``1.2a`` which is normalized to "
"``1.2a0``."
msgstr ""
"Antaŭeldono permesas forlasi la numeron, kio implicas ``0``. La norma formo "
"eksplicas ``0``. Tio permesas versiojn kiel ``1.2a``, kies norma formo estas "
"``1.2a0``."

#: ../source/specifications/version-specifiers.rst:458
msgid "Post release separators"
msgstr "Posteldonaj disigiloj"

#: ../source/specifications/version-specifiers.rst:460
msgid ""
"Post releases allow a ``.``, ``-``, or ``_`` separator as well as omitting "
"the separator all together. The normal form of this is with the ``.`` "
"separator. This allows versions such as ``1.2-post2`` or ``1.2post2`` which "
"normalize to ``1.2.post2``. Like the pre-release separator this also allows "
"an optional separator between the post release signifier and the numeral. "
"This allows versions like ``1.2.post-2`` which would normalize to ``1.2."
"post2``."
msgstr ""
"Posteldono permesas la apartigilojn ``.``, ``-`` aŭ ``_``, aŭ eĉ la mankon "
"de apartigilo. La norma formo uzas la apartigilon ``.``. Tio permesas "
"versiojn kiel ``1.2-post2`` aŭ ``1.2post2``, kies norma formo estas ``1.2."
"post2``. Simile al apartigilo de antaŭeldono, tio ankaŭ permesas nedevigan "
"apartigilon inter la posteldono-specifilo kaj la numero. Tio permesas "
"versiojn kiel ``1.2.post-2``, kies norma formo estas ``1.2.post2``."

#: ../source/specifications/version-specifiers.rst:469
msgid "Post release spelling"
msgstr "Posteldona literumado"

#: ../source/specifications/version-specifiers.rst:471
msgid ""
"Post-releases allow the additional spellings of ``rev`` and ``r``. This "
"allows versions such as ``1.0-r4`` which normalizes to ``1.0.post4``. As "
"with the pre-releases the additional spellings should be considered "
"equivalent to their normal forms."
msgstr ""
"Posteldono ankaŭ permesas la literumaĵojn ``rev`` kaj ``r``. Tio permesas "
"versiojn kiel ``1.0-r4``, kies normigita formo estas ``1.0.post4``. Same "
"kiel antaŭeldono, la ekstraj literumaĵoj ekvivalentas la normigitajn formojn."

#: ../source/specifications/version-specifiers.rst:478
msgid "Implicit post release number"
msgstr "Implicita posteldona numero"

#: ../source/specifications/version-specifiers.rst:480
msgid ""
"Post releases allow omitting the numeral in which case it is implicitly "
"assumed to be ``0``. The normal form for this is to include the ``0`` "
"explicitly. This allows versions such as ``1.2.post`` which is normalized to "
"``1.2.post0``."
msgstr ""
"Posteldono permesas forlasi la numeron, kio implicas ``0``. La norma formo "
"eksplicas ``0``. Tio permesas versiojn kiel ``1.2post``, kies norma formo "
"estas ``1.2post0``."

#: ../source/specifications/version-specifiers.rst:486
msgid "Implicit post releases"
msgstr "Implicitaj posteldonoj"

#: ../source/specifications/version-specifiers.rst:488
msgid ""
"Post releases allow omitting the ``post`` signifier all together. When using "
"this form the separator MUST be ``-`` and no other form is allowed. This "
"allows versions such as ``1.0-1`` to be normalized to ``1.0.post1``. This "
"particular normalization MUST NOT be used in conjunction with the implicit "
"post release number rule. In other words, ``1.0-`` is *not* a valid version "
"and it does *not* normalize to ``1.0.post0``."
msgstr ""
"Posteldono permesas la mankon de la signifilo ``post``. Por tiu formo, la "
"apartigilo DEVAS esti ``-``; neniu alia formo estas permesata. Tio permesas "
"versiojn kiel ``1.0-1``, kies norma formo estas ``1.0.post1``. Oni DEVAS NE "
"uzi tion kune kun la regulo de implicita posteldona numero. Alivorte, ``1.0-"
"`` *ne* validas, kaj ĝia norma formo *ne* estas ``1.0.post0``."

#: ../source/specifications/version-specifiers.rst:497
msgid "Development release separators"
msgstr "Disigiloj de evoluada eldono"

#: ../source/specifications/version-specifiers.rst:499
msgid ""
"Development releases allow a ``.``, ``-``, or a ``_`` separator as well as "
"omitting the separator all together. The normal form of this is with the ``."
"`` separator. This allows versions such as ``1.2-dev2`` or ``1.2dev2`` which "
"normalize to ``1.2.dev2``."
msgstr ""
"Evoluada eldono permesas la apartigilojn ``.``, ``-``, aŭ ``_``, aŭ eĉ la "
"mankon de apartigilo. La norma formo uzas la apartigilon ``.``. Tio permesas "
"versiojn kiel ``1.2-dev2`` aŭ ``1.2dev2``, kies norma formo estas "
"``1.2dev2``."

#: ../source/specifications/version-specifiers.rst:506
msgid "Implicit development release number"
msgstr "Implicita evoluada eldona numero"

#: ../source/specifications/version-specifiers.rst:508
msgid ""
"Development releases allow omitting the numeral in which case it is "
"implicitly assumed to be ``0``. The normal form for this is to include the "
"``0`` explicitly. This allows versions such as ``1.2.dev`` which is "
"normalized to ``1.2.dev0``."
msgstr ""
"Evoluada eldono permesas forlasi la numeron, kio implicas ``0``. La norma "
"formo eksplicas ``0``. Tio permesas versiojn kiel ``1.2.dev``, kies norma "
"formo estas ``1.2.dev0``."

#: ../source/specifications/version-specifiers.rst:515
msgid "Local version segments"
msgstr "Lokaj versiaj segmentoj"

#: ../source/specifications/version-specifiers.rst:517
msgid ""
"With a local version, in addition to the use of ``.`` as a separator of "
"segments, the use of ``-`` and ``_`` is also acceptable. The normal form is "
"using the ``.`` character. This allows versions such as ``1.0+ubuntu-1`` to "
"be normalized to ``1.0+ubuntu.1``."
msgstr ""
"Loka versio permesas, krom ``.`` kiel apartigilo de segmentoj, ankaŭ la "
"apartigiloj ``-`` kaj ``_``. La norma formo uzas ``.``. Tio permesas "
"versiojn kiel ``1.0+ubuntu-1``, kies norma formo estas ``1.0+ubuntu.1``."

#: ../source/specifications/version-specifiers.rst:524
msgid "Preceding v character"
msgstr "Prefiksa signo «v»"

#: ../source/specifications/version-specifiers.rst:526
msgid ""
"In order to support the common version notation of ``v1.0`` versions may be "
"preceded by a single literal ``v`` character. This character MUST be ignored "
"for all purposes and should be omitted from all normalized forms of the "
"version. The same version with and without the ``v`` is considered "
"equivalent."
msgstr ""

#: ../source/specifications/version-specifiers.rst:533
msgid "Leading and Trailing Whitespace"
msgstr "Komenca kaj Fina Blanka Spaco"

#: ../source/specifications/version-specifiers.rst:535
msgid ""
"Leading and trailing whitespace must be silently ignored and removed from "
"all normalized forms of a version. This includes ``\" \"``, ``\\t``, "
"``\\n``, ``\\r``, ``\\f``, and ``\\v``. This allows accidental whitespace to "
"be handled sensibly, such as a version like ``1.0\\n`` which normalizes to "
"``1.0``."
msgstr ""
"Komenca kaj fina blankaj spacoj devas esti silente ignorata kaj forigita el "
"ĉiuj normigitaj formoj de versio. Tio inkluzivas ``\" \"``, ``\\t``, "
"``\\n``, ``\\r``, ``\\f``, kaj ``\\v``. Tio permesas racian pritraktadon de "
"senintenca blanka spaco, kiel ``1.0\\n``, kiu estas normigita al ``1.0``."

#: ../source/specifications/version-specifiers.rst:542
msgid "Examples of compliant version schemes"
msgstr "Ekzemploj de versiaj skemoj observantaj la regulojn"

#: ../source/specifications/version-specifiers.rst:544
msgid ""
"The standard version scheme is designed to encompass a wide range of "
"identification practices across public and private Python projects. In "
"practice, a single project attempting to use the full flexibility offered by "
"the scheme would create a situation where human users had difficulty "
"figuring out the relative order of versions, even though the rules above "
"ensure all compliant tools will order them consistently."
msgstr ""

#: ../source/specifications/version-specifiers.rst:551
msgid ""
"The following examples illustrate a small selection of the different "
"approaches projects may choose to identify their releases, while still "
"ensuring that the \"latest release\" and the \"latest stable release\" can "
"be easily determined, both by human users and automated tools."
msgstr ""

#: ../source/specifications/version-specifiers.rst:556
msgid "Simple \"major.minor\" versioning::"
msgstr "Simpla «maĵora.minora» versiado::"

#: ../source/specifications/version-specifiers.rst:565
msgid "Simple \"major.minor.micro\" versioning::"
msgstr "Simpla «maĵora.minora.mikroa» versiado::"

#: ../source/specifications/version-specifiers.rst:573
msgid ""
"\"major.minor\" versioning with alpha, beta and candidate pre-releases::"
msgstr ""
"«maĵora.minora» versiado kun alfa-, beta-, kaj kandidataj antaŭeldonoj::"

#: ../source/specifications/version-specifiers.rst:585
msgid ""
"\"major.minor\" versioning with developmental releases, release candidates "
"and post-releases for minor corrections::"
msgstr ""
"«maĵora.minora» versiado kun evoluaj eldonoj, eldonkandidatoj kaj "
"posteldonoj por malgravaj korektoj::"

#: ../source/specifications/version-specifiers.rst:600
msgid ""
"Date based releases, using an incrementing serial within each year, skipping "
"zero::"
msgstr "Datobaza eldono, kun alkrementata numero en ĉiu jaro, sen nulo::"

#: ../source/specifications/version-specifiers.rst:614
msgid "Summary of permitted suffixes and relative ordering"
msgstr "Resumo pri permesataj sufiksoj kaj relativa ordo"

#: ../source/specifications/version-specifiers.rst:618
msgid ""
"This section is intended primarily for authors of tools that automatically "
"process distribution metadata, rather than developers of Python "
"distributions deciding on a versioning scheme."
msgstr ""
"Ĉi tiu paragrafo estas por aŭtoroj de iloj aŭtomate pritraktantaj "
"distribuajn metadatenojn, ne aŭtoroj de Python-distribuoj elektantaj versian "
"skemon."

#: ../source/specifications/version-specifiers.rst:622
msgid ""
"The epoch segment of version identifiers MUST be sorted according to the "
"numeric value of the given epoch. If no epoch segment is present, the "
"implicit numeric value is ``0``."
msgstr ""
"La epoka segmento de versio-identigilo DEVAS esti ordigita laŭ la nombra "
"valoro de la epoko. Se epoka segmento mankas, la implicita nombra valoro "
"estas ``0``."

#: ../source/specifications/version-specifiers.rst:626
msgid ""
"The release segment of version identifiers MUST be sorted in the same order "
"as Python's tuple sorting when the normalized release segment is parsed as "
"follows::"
msgstr ""
"La eldona segmento de versia identigilo DEVAS esti ordigita same kiel la "
"ordo de opoj en Python, kiam la normigita eldona segmento estas analizita "
"jene::"

#: ../source/specifications/version-specifiers.rst:632
msgid ""
"All release segments involved in the comparison MUST be converted to a "
"consistent length by padding shorter segments with zeros as needed."
msgstr ""
"Ĉiuj eldono-segmentoj pri la komparo DEVAS esti samlongigitaj, metante "
"nulojn antaŭ pli mallongaj segmentoj laŭbezone."

#: ../source/specifications/version-specifiers.rst:635
msgid ""
"Within a numeric release (``1.0``, ``2.7.3``), the following suffixes are "
"permitted and MUST be ordered as shown::"
msgstr ""
"Ene de numera eldono (``1.0``, ``2.7.3``), la ĉi-subaj sufiksoj estas "
"permesataj kaj DEVAS esti ordigitaj jene::"

#: ../source/specifications/version-specifiers.rst:640
msgid ""
"Note that ``c`` is considered to be semantically equivalent to ``rc`` and "
"must be sorted as if it were ``rc``. Tools MAY reject the case of having the "
"same ``N`` for both a ``c`` and a ``rc`` in the same release segment as "
"ambiguous and remain in compliance with the specification."
msgstr ""
"Notu, ke ``c`` semantike ekvivalentas ``rc`` kaj estas ordigita kvazaŭ ĝi "
"estis ``rc``. Ilo POVAS malakcepti la kazon de la sama ``N`` por kaj ``r`` "
"kaj ``rc`` en la sama eldonsegmento pro ambigueco kaj tamen observi la "
"specifon."

#: ../source/specifications/version-specifiers.rst:645
msgid ""
"Within an alpha (``1.0a1``), beta (``1.0b1``), or release candidate "
"(``1.0rc1``, ``1.0c1``), the following suffixes are permitted and MUST be "
"ordered as shown::"
msgstr ""
"En alfa (``1.0a1``), beta (``1.0b1``) aŭ eldonkandidato (``1.0rc1``, "
"``1.0c1``), la ĉi-subaj sufiksoj estas permesataj kaj DEVAS esti ordigitaj "
"jene::"

#: ../source/specifications/version-specifiers.rst:651
msgid ""
"Within a post-release (``1.0.post1``), the following suffixes are permitted "
"and MUST be ordered as shown::"
msgstr ""
"Ene de posteldono (``1.0.post1``), la jenaj sufiksoj estas permesataj kaj "
"DEVAS esti ordigitaj jene::"

#: ../source/specifications/version-specifiers.rst:656
msgid ""
"Note that ``devN`` and ``postN`` MUST always be preceded by a dot, even when "
"used immediately following a numeric version (e.g. ``1.0.dev456``, ``1.0."
"post1``)."
msgstr ""
"Notu, ke ``devN`` kaj ``postN`` DEVAS esti antaŭita de punkto, eĉ tuj post "
"numera versio (ekz. ``1.0.dev456``, ``1.0.post1``)."

#: ../source/specifications/version-specifiers.rst:660
msgid ""
"Within a pre-release, post-release or development release segment with a "
"shared prefix, ordering MUST be by the value of the numeric component."
msgstr ""
"En antaŭeldona, posteldona aŭ evoluada-eldona segmento kun komuna prefikso, "
"ordigado DEVAS esti laŭ la valoro de la numera komponanto."

#: ../source/specifications/version-specifiers.rst:663
msgid "The following example covers many of the possible combinations::"
msgstr "Jen ekzemplo de multaj eblaj kombinaĵoj::"

#: ../source/specifications/version-specifiers.rst:688
msgid "Version ordering across different metadata versions"
msgstr "Ordigo de versioj trans diversaj metadatenaj versioj"

#: ../source/specifications/version-specifiers.rst:690
msgid ""
"Metadata v1.0 (:pep:`241`) and metadata v1.1 (:pep:`314`) do not specify a "
"standard version identification or ordering scheme. However metadata v1.2 (:"
"pep:`345`) does specify a scheme which is defined in :pep:`386`."
msgstr ""
"Metadatenoj v1.0 (:pep:`241`) and Metadatenoj v1.1 (:pep:`314`) ne specifas "
"norman skemon pri identigado kaj ordigado de versioj. Tamen Metadatenoj v1.2 "
"(:pep:`345`) ja specifas skemon difinitan en :pep:`386`."

#: ../source/specifications/version-specifiers.rst:694
msgid ""
"Due to the nature of the simple installer API it is not possible for an "
"installer to be aware of which metadata version a particular distribution "
"was using. Additionally installers required the ability to create a "
"reasonably prioritized list that includes all, or as many as possible, "
"versions of a project to determine which versions it should install. These "
"requirements necessitate a standardization across one parsing mechanism to "
"be used for all versions of a project."
msgstr ""
"Pro la naturo de la simpla instalila API, instalilo ne povas scii la "
"metadatenan version uzatan de iu distribuo. Plie instalilo postulas la "
"kapablon krei sufiĉe prioritatigitan liston inkluzivantan ĉiom, aŭ tiom "
"multe kiom eblas, da versioj de projekto, por determini la instalotan "
"version. Tiaj postuloj necesigas normigadon al unu sintaksanaliza meĥanismo "
"uzenda por ĉiuj versioj de projekto."

#: ../source/specifications/version-specifiers.rst:702
msgid ""
"Due to the above, this specification MUST be used for all versions of "
"metadata and supersedes :pep:`386` even for metadata v1.2. Tools SHOULD "
"ignore any versions which cannot be parsed by the rules in this "
"specification, but MAY fall back to implementation defined version parsing "
"and ordering schemes if no versions complying with this specification are "
"available."
msgstr ""

#: ../source/specifications/version-specifiers.rst:708
msgid ""
"Distribution users may wish to explicitly remove non-compliant versions from "
"any private package indexes they control."
msgstr ""
"Uzanto de distribuo povas deziri eksplicite forigi nekongruajn versiojn el "
"sia privata pakindekso."

#: ../source/specifications/version-specifiers.rst:713
msgid "Compatibility with other version schemes"
msgstr "Kongrueco kun aliaj versiaj skemoj"

#: ../source/specifications/version-specifiers.rst:715
msgid ""
"Some projects may choose to use a version scheme which requires translation "
"in order to comply with the public version scheme defined in this "
"specification. In such cases, the project specific version can be stored in "
"the metadata while the translated public version is published in the version "
"field."
msgstr ""
"Kelkaj projektoj povas uzi versio-skemon, kiu postulas tradukadon por "
"observi la publikan versio-skemon difinitan en ĉi tiu specifo. Tiakaze, la "
"projekto-specifa versio povas esti konservita en la metadatenoj, dum la "
"tradukita publika versio estas en la versia kampo."

#: ../source/specifications/version-specifiers.rst:720
msgid ""
"This allows automated distribution tools to provide consistently correct "
"ordering of published releases, while still allowing developers to use the "
"internal versioning scheme they prefer for their projects."
msgstr ""
"Tiu permesas al aŭtomata distribuilo ĝuste ordigi eldonojn dum aŭtoroj povas "
"uzi sian preferatan versian skemon por siaj projektoj."

#: ../source/specifications/version-specifiers.rst:728
msgid ""
"`Semantic versioning`_ is a popular version identification scheme that is "
"more prescriptive than this specification regarding the significance of "
"different elements of a release number. Even if a project chooses not to "
"abide by the details of semantic versioning, the scheme is worth "
"understanding as it covers many of the issues that can arise when depending "
"on other distributions, and when publishing a distribution that others rely "
"on."
msgstr ""
"`Semantika versiado <Semantic versioning>`_ estas populara versio-identiga "
"skemo pli preskriba ol ĉi tiu specifo pri la signifo de elementoj de versia "
"numero. Eĉ se projekto elektas ne obei la detalojn de semantika versiado, "
"indas kompreni ĝin, ĉar ĝi diskutas multajn problemojn pri dependado de "
"aliaj distribuoj kaj pri eldonado de distribuo, de kiu aliaj dependas."

#: ../source/specifications/version-specifiers.rst:735
msgid ""
"The \"Major.Minor.Patch\" (described in this specification as \"major.minor."
"micro\") aspects of semantic versioning (clauses 1-8 in the 2.0.0 "
"specification) are fully compatible with the version scheme defined in this "
"specification, and abiding by these aspects is encouraged."
msgstr ""
"La aspekto «Maĵora.Minora.Flika» (en ĉi tiu normo, «maĵora.minora.mikroa») "
"de semantika versiado (paragrafoj 1–8 de la versio 2.0.0 de la normo) plene "
"kongruas kun la versia skemo en ĉi tiu specifo, kaj ni rekomendas observi "
"tian aspekton."

#: ../source/specifications/version-specifiers.rst:740
msgid ""
"Semantic versions containing a hyphen (pre-releases - clause 10) or a plus "
"sign (builds - clause 11) are *not* compatible with this specification and "
"are not permitted in the public version field."
msgstr ""
"Semantika versio enhavanta streketon (antaŭeldonoj – paragrafo 10) aŭ "
"plusosigno (konstruoj – paragrafo 11) *ne* observas ĉi tiun specifon kaj "
"estas malpermesata en la publika versia kampo."

#: ../source/specifications/version-specifiers.rst:744
msgid ""
"One possible mechanism to translate such semantic versioning based source "
"labels to compatible public versions is to use the ``.devN`` suffix to "
"specify the appropriate version order."
msgstr ""
"Unu meĥanismo por traduki tian semantikversio-bazan fonto-etikedon al "
"kongrua publika versio estas uzi la sufikson ``.devN`` por specifi la taŭgan "
"versian ordon."

#: ../source/specifications/version-specifiers.rst:748
msgid ""
"Specific build information may also be included in local version labels."
msgstr ""
"Specifaj konstruaj informoj povas ankaŭ esti inkluzivitaj en lokaj versiaj "
"etikedoj."

#: ../source/specifications/version-specifiers.rst:754
msgid "DVCS based version labels"
msgstr "Versiaj etikedoj per distribuita versikontrola sistemo"

#: ../source/specifications/version-specifiers.rst:756
msgid ""
"Many build tools integrate with distributed version control systems like Git "
"and Mercurial in order to add an identifying hash to the version identifier. "
"As hashes cannot be ordered reliably such versions are not permitted in the "
"public version field."
msgstr ""
"Multaj konstruiloj integras kun distribuitaj versikontrolsistemoj kiel Git "
"kaj Mercurial por aldoni identigan haketaĵon al la versio-identigilo. Ĉar "
"oni ne povas fidinde ordigi haketaĵojn, oni ne permesas tiajn versiojn en la "
"publika versio-kampo."

#: ../source/specifications/version-specifiers.rst:761
msgid ""
"As with semantic versioning, the public ``.devN`` suffix may be used to "
"uniquely identify such releases for publication, while the original DVCS "
"based label can be stored in the project metadata."
msgstr ""
"Same kiel semantika versio, la publika sufikso ``.devN`` malambigue "
"identigas tiajn eldonojn publike, dum la originala versikontrolsistema "
"etikedo povas esti unu el la projektaj metadatenoj."

#: ../source/specifications/version-specifiers.rst:765
msgid ""
"Identifying hash information may also be included in local version labels."
msgstr ""
"Loka versia etikedo ankaŭ povas inkluzivi identigan haketaĵan informon."

#: ../source/specifications/version-specifiers.rst:769
msgid "Olson database versioning"
msgstr "Versiado laŭ Olson-datenbanko"

#: ../source/specifications/version-specifiers.rst:771
msgid ""
"The ``pytz`` project inherits its versioning scheme from the corresponding "
"Olson timezone database versioning scheme: the year followed by a lowercase "
"character indicating the version of the database within that year."
msgstr ""
"La projekto ``pytz`` heredas sian versian skemon el la versia skemo de la "
"horzono-datenbanko Olson: la jaron, sekvitan de minuskla litero de la versio "
"de la datenbanko en tiu jaro."

#: ../source/specifications/version-specifiers.rst:775
msgid ""
"This can be translated to a compliant public version identifier as ``<year>."
"<serial>``, where the serial starts at zero or one (for the '<year>a' "
"release) and is incremented with each subsequent database update within the "
"year."
msgstr ""
"Tiu estas tradukebla al valida publika versio-identigilo kiel ``<jaro>."
"<numero>``, en kiu la numero komenciĝas ĉe nulo aŭ unuo (por la eldono "
"``<jaro>a``) kaj alkrementiĝas por ĉiu sekva datenbanka ĝisdatigo en la jaro."

#: ../source/specifications/version-specifiers.rst:780
msgid ""
"As with other translated version identifiers, the corresponding Olson "
"database version could be recorded in the project metadata."
msgstr ""
"Samkiel aliaj tradukitaj versiaj identigiloj, la respondanta versio de la "
"Olson-datenbanko povas esti registrita en la projektaj metadatenoj."

#: ../source/specifications/version-specifiers.rst:787
msgid ""
"A version specifier consists of a series of version clauses, separated by "
"commas. For example::"
msgstr ""
"Versi-specifilo konsistas el serio de versio-kondiĉoj apartigitaj per komoj. "
"Ekzemple::"

#: ../source/specifications/version-specifiers.rst:792
msgid "The comparison operator determines the kind of version clause:"
msgstr "La kompara operatoro determinas la specon de versia kondiĉo:"

#: ../source/specifications/version-specifiers.rst:794
msgid "``~=``: `Compatible release`_ clause"
msgstr "``~=``: Kondiĉo `Kongrua eldono <Compatible release>`_"

#: ../source/specifications/version-specifiers.rst:795
msgid "``==``: `Version matching`_ clause"
msgstr "``==``: Kondiĉo `Versia egaleco <Version matching>`_"

#: ../source/specifications/version-specifiers.rst:796
msgid "``!=``: `Version exclusion`_ clause"
msgstr "``!=``: Kondiĉo `Ekskluzivo de versio <Version exclusion>`_"

#: ../source/specifications/version-specifiers.rst:797
msgid "``<=``, ``>=``: `Inclusive ordered comparison`_ clause"
msgstr ""
"``<=``, ``>=``: Kondiĉo `Inkluziva orda komparo <Inclusive ordered "
"comparison>`_"

#: ../source/specifications/version-specifiers.rst:798
msgid "``<``, ``>``: `Exclusive ordered comparison`_ clause"
msgstr ""
"``<``, ``>``: Kondiĉo `Ekskluziva orda komparo <Exclusive ordered "
"comparison>`_"

#: ../source/specifications/version-specifiers.rst:799
msgid "``===``: `Arbitrary equality`_ clause."
msgstr "``===``: Kondiĉo `Arbitra egaleco <Arbitrary equality>`_."

#: ../source/specifications/version-specifiers.rst:801
msgid ""
"The comma (\",\") is equivalent to a logical **and** operator: a candidate "
"version must match all given version clauses in order to match the specifier "
"as a whole."
msgstr ""
"La komo («,») ekvivalentas al logika **kaj**-operatoro: kandidata versio "
"devas kongrui kun ĉiuj donitaj versio-kondiĉoj por kongrui kun la tuta "
"specifilo."

#: ../source/specifications/version-specifiers.rst:805
msgid ""
"Whitespace between a conditional operator and the following version "
"identifier is optional, as is the whitespace around the commas."
msgstr ""
"Blanka spaco inter kondiĉa operatoro kaj la sekva versia identigilo estas "
"nedeviga; same pri la blanka spaco ĉirkaŭ komo."

#: ../source/specifications/version-specifiers.rst:808
msgid ""
"When multiple candidate versions match a version specifier, the preferred "
"version SHOULD be the latest version as determined by the consistent "
"ordering defined by the standard `Version scheme`_. Whether or not pre-"
"releases are considered as candidate versions SHOULD be handled as described "
"in `Handling of pre-releases`_."
msgstr ""

#: ../source/specifications/version-specifiers.rst:814
msgid ""
"Except where specifically noted below, local version identifiers MUST NOT be "
"permitted in version specifiers, and local version labels MUST be ignored "
"entirely when checking if candidate versions match a given version specifier."
msgstr ""
"Krom la specife notitaj esceptoj ĉi-subaj, loka versia identigilo DEVAS NE "
"esti uzata en versio-specifilo, kaj oni DEVAS plene ignori lokan versian "
"etikedon dum kontrolado ĉu kandidata versio kongruas kun iu versio-specifilo."

#: ../source/specifications/version-specifiers.rst:823
msgid "Compatible release"
msgstr "Kongrua eldono"

#: ../source/specifications/version-specifiers.rst:825
msgid ""
"A compatible release clause consists of the compatible release operator "
"``~=`` and a version identifier. It matches any candidate version that is "
"expected to be compatible with the specified version."
msgstr ""
"Kondiĉo de kongrua eldono konsistas el la operatoro de kongrua eldono ``~=`` "
"kaj versio-identigilo. Ĝi kongruas kun kandidata versio atendate kongrua kun "
"la specifita versio."

#: ../source/specifications/version-specifiers.rst:829
msgid ""
"The specified version identifier must be in the standard format described in "
"`Version scheme`_. Local version identifiers are NOT permitted in this "
"version specifier."
msgstr ""
"La specifita versio-identigilo devas esti en la norma formo laŭ `Versia "
"skemo <Version scheme>`_. Loka versio-identigilo estas MALPERMESATA en ĉi "
"tiu versio-specifilo."

#: ../source/specifications/version-specifiers.rst:833
msgid ""
"For a given release identifier ``V.N``, the compatible release clause is "
"approximately equivalent to the pair of comparison clauses::"
msgstr ""
"Por iu eldono-specifilo ``V.N``, la kondiĉo pri kongrua eldono estas "
"proksimume ekvivalenta al la jena paro de kondiĉoj::"

#: ../source/specifications/version-specifiers.rst:838
msgid ""
"This operator MUST NOT be used with a single segment version number such as "
"``~=1``."
msgstr ""
"Oni DEVAS NE uzi ĉi tiun operatoron kun unusegmenta versia numero kiel "
"``~=1``."

#: ../source/specifications/version-specifiers.rst:841
msgid "For example, the following groups of version clauses are equivalent::"
msgstr "Ekzemple, la jenaj grupoj de versio-kondiĉoj estas ekvivalentaj::"

#: ../source/specifications/version-specifiers.rst:849
msgid ""
"If a pre-release, post-release or developmental release is named in a "
"compatible release clause as ``V.N.suffix``, then the suffix is ignored when "
"determining the required prefix match::"
msgstr ""
"Se antaŭeldono, posteldono aŭ evoluada eldono estas nomita en kondiĉo de "
"kongrua eldono kiel ``V.N.sufikso``, do la sufikso estas ignorita dum "
"determinado de la postulata prefiksa kongrueco::"

#: ../source/specifications/version-specifiers.rst:859
msgid ""
"The padding rules for release segment comparisons means that the assumed "
"degree of forward compatibility in a compatible release clause can be "
"controlled by appending additional zeros to the version specifier::"
msgstr ""
"La reguloj pri metado de nuloj por komparado de eldono-segmento signifas, ke "
"la supozata grado de kongrueco en kondiĉo pri kongruaj eldonoj estas "
"modifebla per nuloj ĉe la komenco de la versio-specifilo::"

#: ../source/specifications/version-specifiers.rst:871
msgid "Version matching"
msgstr "Versia egaleco"

#: ../source/specifications/version-specifiers.rst:873
msgid ""
"A version matching clause includes the version matching operator ``==`` and "
"a version identifier."
msgstr ""
"Versio-egaleca kondiĉo inkluzivas la versio-egalecan operatoron ``==`` kaj "
"versian identigilon."

#: ../source/specifications/version-specifiers.rst:876
msgid ""
"The specified version identifier must be in the standard format described in "
"`Version scheme`_, but a trailing ``.*`` is permitted on public version "
"identifiers as described below."
msgstr ""
"La specifita versio-identigilo devas observi la norman formon priskribitan "
"en `Versia skemo <Version scheme>`_, sed sufiksa ``.*`` estas permesata post "
"publika versio-identigilo jene."

#: ../source/specifications/version-specifiers.rst:880
msgid ""
"By default, the version matching operator is based on a strict equality "
"comparison: the specified version must be exactly the same as the requested "
"version. The *only* substitution performed is the zero padding of the "
"release segment to ensure the release segments are compared with the same "
"length."
msgstr ""

#: ../source/specifications/version-specifiers.rst:886
msgid ""
"Whether or not strict version matching is appropriate depends on the "
"specific use case for the version specifier. Automated tools SHOULD at least "
"issue warnings and MAY reject them entirely when strict version matches are "
"used inappropriately."
msgstr ""
"Ĉu aŭ ne strikta versio-egaleco taŭgas, dependas de la specifa uzkazo de la "
"versio-specifilo. Aŭtomata ilo almenaŭ AVERTU pri maltaŭga strikta versio-"
"egaleco kaj POVAS malakcepti ĝin."

#: ../source/specifications/version-specifiers.rst:891
msgid ""
"Prefix matching may be requested instead of strict comparison, by appending "
"a trailing ``.*`` to the version identifier in the version matching clause. "
"This means that additional trailing segments will be ignored when "
"determining whether or not a version identifier matches the clause. If the "
"specified version includes only a release segment, then trailing components "
"(or the lack thereof) in the release segment are also ignored."
msgstr ""

#: ../source/specifications/version-specifiers.rst:898
#: ../source/specifications/version-specifiers.rst:959
msgid ""
"For example, given the version ``1.1.post1``, the following clauses would "
"match or not as shown::"
msgstr ""
"Ekzemple, pri la versio ``1.1.post1``, la ĉi-subaj kondiĉoj estas plenumitaj "
"aŭ ne jene::"

#: ../source/specifications/version-specifiers.rst:905
msgid ""
"For purposes of prefix matching, the pre-release segment is considered to "
"have an implied preceding ``.``, so given the version ``1.1a1``, the "
"following clauses would match or not as shown::"
msgstr ""
"Pri kongrueco de prefikso, la antaŭeldono-segmento havas implicitan "
"prefiksan ``.``. Tial, pri la versio ``1.1a1``, kaj jenaj kondiĉoj kongruus "
"aŭ ne kongruus jene::"

#: ../source/specifications/version-specifiers.rst:913
msgid ""
"An exact match is also considered a prefix match (this interpretation is "
"implied by the usual zero padding rules for the release segment of version "
"identifiers). Given the version ``1.1``, the following clauses would match "
"or not as shown::"
msgstr ""
"Ekzakta kongrueco implicas prefiksan kongruecon (tia interpreto estas "
"konsekvenco de la nulo-antaŭmeta regulo pri la eldonsegmento de versio-"
"identigilo). Pri la versio ``1.1``, la jenaj kondiĉoj kongruus aŭ ne jene::"

#: ../source/specifications/version-specifiers.rst:925
msgid ""
"It is invalid to have a prefix match containing a development or local "
"release such as ``1.0.dev1.*`` or ``1.0+foo1.*``. If present, the "
"development release segment is always the final segment in the public "
"version, and the local version is ignored for comparison purposes, so using "
"either in a prefix match wouldn't make any sense."
msgstr ""

#: ../source/specifications/version-specifiers.rst:931
msgid ""
"The use of ``==`` (without at least the wildcard suffix) when defining "
"dependencies for published distributions is strongly discouraged as it "
"greatly complicates the deployment of security fixes. The strict version "
"comparison operator is intended primarily for use when defining dependencies "
"for repeatable *deployments of applications* while using a shared "
"distribution index."
msgstr ""

#: ../source/specifications/version-specifiers.rst:938
msgid ""
"If the specified version identifier is a public version identifier (no local "
"version label), then the local version label of any candidate versions MUST "
"be ignored when matching versions."
msgstr ""
"Se la specifita versio-identigilo estas publika versio-identigilo (sen loka "
"versio-etikedo), do la loka versio-etikedo de iu ajn kandidata versio DEVAS "
"ignoriĝi dum komputado de kongrueco inter versioj."

#: ../source/specifications/version-specifiers.rst:942
msgid ""
"If the specified version identifier is a local version identifier, then the "
"local version labels of candidate versions MUST be considered when matching "
"versions, with the public version identifier being matched as described "
"above, and the local version label being checked for equivalence using a "
"strict string equality comparison."
msgstr ""

#: ../source/specifications/version-specifiers.rst:950
msgid "Version exclusion"
msgstr "Ekskluzivo de versio"

#: ../source/specifications/version-specifiers.rst:952
msgid ""
"A version exclusion clause includes the version exclusion operator ``!=`` "
"and a version identifier."
msgstr ""
"Versi-ekskluzivada kondiĉo konsistas el la versio-ekskluzivada operatoro ``!"
"=`` kaj versia identigilo."

#: ../source/specifications/version-specifiers.rst:955
msgid ""
"The allowed version identifiers and comparison semantics are the same as "
"those of the `Version matching`_ operator, except that the sense of any "
"match is inverted."
msgstr ""
"La permesataj versio-identigiloj kaj la semantiko de komparado estas sama "
"kiel tiuj de la operatoro de `Versia egaleco <Version matching>`_, krom ke "
"la senco de kongrueco estas mala."

#: ../source/specifications/version-specifiers.rst:968
msgid "Inclusive ordered comparison"
msgstr "Inkluziva ordita komparo"

#: ../source/specifications/version-specifiers.rst:970
msgid ""
"An inclusive ordered comparison clause includes a comparison operator and a "
"version identifier, and will match any version where the comparison is "
"correct based on the relative position of the candidate version and the "
"specified version given the consistent ordering defined by the standard "
"`Version scheme`_."
msgstr ""

#: ../source/specifications/version-specifiers.rst:976
msgid "The inclusive ordered comparison operators are ``<=`` and ``>=``."
msgstr "La operatoroj de inkluziva orda komparo estas ``<=`` kaj ``>=``."

#: ../source/specifications/version-specifiers.rst:978
#: ../source/specifications/version-specifiers.rst:1008
msgid ""
"As with version matching, the release segment is zero padded as necessary to "
"ensure the release segments are compared with the same length."
msgstr ""
"Same kiel kongrueco de versioj, la eldonsegmento estas antaŭita de tiom da "
"nuloj, kiom necesas por certigi, ke la eldonsegmentoj kompariĝas je la sama "
"longo."

#: ../source/specifications/version-specifiers.rst:981
#: ../source/specifications/version-specifiers.rst:1011
msgid "Local version identifiers are NOT permitted in this version specifier."
msgstr "Loka versia identigilo NE estas permesata en ĉi tiu versispecifilo."

#: ../source/specifications/version-specifiers.rst:985
msgid "Exclusive ordered comparison"
msgstr "Ekskluziva ordita komparo"

#: ../source/specifications/version-specifiers.rst:987
msgid ""
"The exclusive ordered comparisons ``>`` and ``<`` are similar to the "
"inclusive ordered comparisons in that they rely on the relative position of "
"the candidate version and the specified version given the consistent "
"ordering defined by the standard `Version scheme`_. However, they "
"specifically exclude pre-releases, post-releases, and local versions of the "
"specified version."
msgstr ""

#: ../source/specifications/version-specifiers.rst:993
msgid ""
"The exclusive ordered comparison ``>V`` **MUST NOT** allow a post-release of "
"the given version unless ``V`` itself is a post release. You may mandate "
"that releases are later than a particular post release, including additional "
"post releases, by using ``>V.postN``. For example, ``>1.7`` will allow "
"``1.7.1`` but not ``1.7.0.post1`` and ``>1.7.post2`` will allow ``1.7.1`` "
"and ``1.7.0.post3`` but not ``1.7.0``."
msgstr ""
"La eksluzive ordita komparo ``>V`` **DEVAS NE** permesi posteldonon de la "
"donito krom se ``V`` mem estas posteldono. Oni povas devigi, ke eldono estu "
"pli nova ol iu posteldono (inkluzive de pliaj posteldonoj), uzante ``>V."
"postN``. Ekzemple, ``>1.7`` permesas ``1.7.1`` sed ne ``1.7.0.post1``; "
"``>1.7.post2`` permesas ``1.7.1`` kaj ``1.7.0.post3`` sed ne ``1.7.0``."

#: ../source/specifications/version-specifiers.rst:1000
msgid ""
"The exclusive ordered comparison ``>V`` **MUST NOT** match a local version "
"of the specified version."
msgstr ""
"La ekskluziva orda komparo ``>V`` **DEVAS NE** kongrui kun loka versio de la "
"specifita versio."

#: ../source/specifications/version-specifiers.rst:1003
msgid ""
"The exclusive ordered comparison ``<V`` **MUST NOT** allow a pre-release of "
"the specified version unless the specified version is itself a pre-release. "
"Allowing pre-releases that are earlier than, but not equal to a specific pre-"
"release may be accomplished by using ``<V.rc1`` or similar."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1015
msgid "Arbitrary equality"
msgstr "Arbitra egaleco"

#: ../source/specifications/version-specifiers.rst:1017
msgid ""
"Arbitrary equality comparisons are simple string equality operations which "
"do not take into account any of the semantic information such as zero "
"padding or local versions. This operator also does not support prefix "
"matching as the ``==`` operator does."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1022
msgid ""
"The primary use case for arbitrary equality is to allow for specifying a "
"version which cannot otherwise be represented by this specification. This "
"operator is special and acts as an escape hatch to allow someone using a "
"tool which implements this specification to still install a legacy version "
"which is otherwise incompatible with this specification."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1028
msgid ""
"An example would be ``===foobar`` which would match a version of ``foobar``."
msgstr "Ekzemplo estas ``===foobar``, kiu kongruas kun la versio ``foobar``."

#: ../source/specifications/version-specifiers.rst:1030
msgid ""
"This operator may also be used to explicitly require an unpatched version of "
"a project such as ``===1.0`` which would not match for a version "
"``1.0+downstream1``."
msgstr ""
"Tiu operator ankaŭ povas esti uzata por eksplicite postuli senflikan version "
"de projekto, kiel ``===1.0```, kiu ne kongruus kun versio "
"``1.0+downstream1``."

#: ../source/specifications/version-specifiers.rst:1034
msgid ""
"Use of this operator is heavily discouraged and tooling MAY display a "
"warning when it is used."
msgstr ""
"Uzado de tiu operatoro estas evitindega, kaj ilo POVAS averti, kiam ĝi estas "
"uzita."

#: ../source/specifications/version-specifiers.rst:1039
msgid "Handling of pre-releases"
msgstr "Pritraktado de antaŭeldonoj"

#: ../source/specifications/version-specifiers.rst:1041
msgid ""
"Pre-releases of any kind, including developmental releases, are implicitly "
"excluded from all version specifiers, *unless* they are already present on "
"the system, explicitly requested by the user, or if the only available "
"version that satisfies the version specifier is a pre-release."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1046
msgid "By default, dependency resolution tools SHOULD:"
msgstr "Implicite, dependecsolviloj FARU la jenon:"

#: ../source/specifications/version-specifiers.rst:1048
msgid "accept already installed pre-releases for all version specifiers"
msgstr "akcepti jam instalitajn antaŭeldonojn por ĉiuj versispecifiloj"

#: ../source/specifications/version-specifiers.rst:1049
msgid ""
"accept remotely available pre-releases for version specifiers where there is "
"no final or post release that satisfies the version specifier"
msgstr ""
"akcepti fore disponeblajn antaŭeldonojn por versispecifiloj, kiam mankas "
"finan eldonon aŭ posteldonon plenumantan la versispecifilon"

#: ../source/specifications/version-specifiers.rst:1051
msgid "exclude all other pre-releases from consideration"
msgstr "malakcepti ĉiujn aliajn antaŭeldonojn"

#: ../source/specifications/version-specifiers.rst:1053
msgid ""
"Dependency resolution tools MAY issue a warning if a pre-release is needed "
"to satisfy a version specifier."
msgstr ""
"Dependeco-solvilo POVAS averti, se antaŭeldono necesas por plenumi versio-"
"specifilon."

#: ../source/specifications/version-specifiers.rst:1056
msgid ""
"Dependency resolution tools SHOULD also allow users to request the following "
"alternative behaviours:"
msgstr ""
"Dependeco-solviloj ankaŭ PERMESU uzantojn peti la jenajn alternativajn "
"kondutojn:"

#: ../source/specifications/version-specifiers.rst:1059
msgid "accepting pre-releases for all version specifiers"
msgstr "akcepti antaŭeldonojn por ĉiuj versispecifiloj"

#: ../source/specifications/version-specifiers.rst:1060
msgid ""
"excluding pre-releases for all version specifiers (reporting an error or "
"warning if a pre-release is already installed locally, or if a pre-release "
"is the only way to satisfy a particular specifier)"
msgstr ""
"ekskluzivante antaŭeldonojn por ĉiuj versio-specifiloj (raportante eraron aŭ "
"averton, se antaŭeldono jam estas instalita loke, aŭ se antaŭeldono estas la "
"nura maniero plenumi iun specifilon)"

#: ../source/specifications/version-specifiers.rst:1064
msgid ""
"Dependency resolution tools MAY also allow the above behaviour to be "
"controlled on a per-distribution basis."
msgstr ""
"Dependeco-solvilo ankaŭ POVAS permesi regadon de la ĉi-supra konduto por "
"specifaj distribuoj."

#: ../source/specifications/version-specifiers.rst:1067
msgid ""
"Post-releases and final releases receive no special treatment in version "
"specifiers - they are always included unless explicitly excluded."
msgstr ""
"Posteldonoj kaj fina eldonoj ne estas speciale pritraktataj en versio-"
"specifilo – ili estas ĉiam inkluzivitaj, se ili ne estas eksplicite "
"ekskluzivitaj."

#: ../source/specifications/version-specifiers.rst:1074
msgid "``~=3.1``: version 3.1 or later, but not version 4.0 or later."
msgstr "``~=3.1``: versio 3.1 aŭ pli nova, sed ne versio 4.0 nek pli nova."

#: ../source/specifications/version-specifiers.rst:1075
msgid "``~=3.1.2``: version 3.1.2 or later, but not version 3.2.0 or later."
msgstr ""
"``~=3.1.2``: versio 3.1.2 aŭ pli nova, sed ne versio 3.2.0 nek pli nova."

#: ../source/specifications/version-specifiers.rst:1076
msgid "``~=3.1a1``: version 3.1a1 or later, but not version 4.0 or later."
msgstr "``~=3.1a1``: versio 3.1a1 aŭ pli nova, sed ne versio 4.0 nek pli nova."

#: ../source/specifications/version-specifiers.rst:1077
msgid ""
"``== 3.1``: specifically version 3.1 (or 3.1.0), excludes all pre-releases, "
"post releases, developmental releases and any 3.1.x maintenance releases."
msgstr ""
"``== 3.1``: specife la versio 3.1 (aŭ 3.1.0), ekskluzivante ĉiajn "
"antaŭeldonojn, posteldonojn, evoluajn eldonojn kaj ajnajn riparajn eldonojn "
"3.1.x."

#: ../source/specifications/version-specifiers.rst:1079
msgid ""
"``== 3.1.*``: any version that starts with 3.1. Equivalent to the "
"``~=3.1.0`` compatible release clause."
msgstr ""
"``== 3.1.*``: ajna versio komenciĝanta per 3.1. Ekvivalenta al la kongrua-"
"versia kondiĉo ``~=3.1.0``."

#: ../source/specifications/version-specifiers.rst:1081
msgid ""
"``~=3.1.0, != 3.1.3``: version 3.1.0 or later, but not version 3.1.3 and not "
"version 3.2.0 or later."
msgstr ""
"``~=3.1.0, != 3.1.3``: versio 3.1.0 aŭ pli nova, sed ne versio 3.1.3, nek "
"versio 3.2.0, nek pli nova."

#: ../source/specifications/version-specifiers.rst:1086
msgid "Direct references"
msgstr "Rektaj referencoj"

#: ../source/specifications/version-specifiers.rst:1088
msgid ""
"Some automated tools may permit the use of a direct reference as an "
"alternative to a normal version specifier. A direct reference consists of "
"the specifier ``@`` and an explicit URL."
msgstr ""
"Kelkaj aŭtomataj iloj permesas rektan referencon anstataŭ ordinara versio-"
"specifilo. Rekta referenco konsistas el la specifilo ``@`` kaj eksplicita "
"retadreso."

#: ../source/specifications/version-specifiers.rst:1092
msgid ""
"Whether or not direct references are appropriate depends on the specific use "
"case for the version specifier. Automated tools SHOULD at least issue "
"warnings and MAY reject them entirely when direct references are used "
"inappropriately."
msgstr ""
"Ĉu aŭ ne rekta referenco taŭgas, dependas de la specifa uzkazo de la versio-"
"specifilo. Aŭtomata ilo almenaŭ AVERTU pri tio kaj POVAS malakcepti tion, "
"kiam rekta referenco estis uzita maltaŭge."

#: ../source/specifications/version-specifiers.rst:1097
msgid ""
"Public index servers SHOULD NOT allow the use of direct references in "
"uploaded distributions. Direct references are intended as a tool for "
"software integrators rather than publishers."
msgstr ""
"Servilo de publika indekso NE PERMESU rektan referencon en alŝutita "
"distribuo. Rekta referenco estas por integriloj de programoj, ne por "
"eldonantoj."

#: ../source/specifications/version-specifiers.rst:1101
msgid ""
"Depending on the use case, some appropriate targets for a direct URL "
"reference may be an sdist or a wheel binary archive. The exact URLs and "
"targets supported will be tool dependent."
msgstr ""
"Depende de la uzkazo, rekta retadresa referenco povas montri fontan "
"distribuon aŭ duuman arĥivon wheel. La permesataj formoj de subtenataj "
"retadresoj kaj celoj dpeendas de la ilo."

#: ../source/specifications/version-specifiers.rst:1105
msgid "For example, a local source archive may be referenced directly::"
msgstr "Ekzemple, oni povas rekte referenci lokan fontan arĥivon::"

#: ../source/specifications/version-specifiers.rst:1109
msgid "Alternatively, a prebuilt archive may also be referenced::"
msgstr "Alternative, oni povas referenci antaŭkonstruitan arĥivon::"

#: ../source/specifications/version-specifiers.rst:1113
msgid ""
"All direct references that do not refer to a local file URL SHOULD specify a "
"secure transport mechanism (such as ``https``) AND include an expected hash "
"value in the URL for verification purposes. If a direct reference is "
"specified without any hash information, with hash information that the tool "
"doesn't understand, or with a selected hash algorithm that the tool "
"considers too weak to trust, automated tools SHOULD at least emit a warning "
"and MAY refuse to rely on the URL. If such a direct reference also uses an "
"insecure transport, automated tools SHOULD NOT rely on the URL."
msgstr ""
"Ĉiu rekta referenco ne al loka dosiera URL SPECIFU sekuran transportan "
"meĥanismon (kiel ekzemple ``https``) KAJ inkluzivu atendatan haketaĵan "
"valoron en la URL por konfirmado. Se rekta referenco specifiĝas sen informoj "
"pri haketaĵo, aŭ kun haketaĵa informo ne komprenebla de la ilo, aŭ kun "
"haketaĵa algoritmo konsiderata tro malforta far la ilo, aŭtomata ilo "
"minimume AVERTU kaj POVAS rifuzi dependi de la URL. Se rekta referenco ankaŭ "
"uzas nesekuran transporton, aŭtomata ilo NE DEPENDU de la URL."

#: ../source/specifications/version-specifiers.rst:1122
msgid ""
"It is RECOMMENDED that only hashes which are unconditionally provided by the "
"latest version of the standard library's :py:mod:`hashlib` module be used "
"for source archive hashes. At time of writing, that list consists of "
"``'md5'``, ``'sha1'``, ``'sha224'``, ``'sha256'``, ``'sha384'``, and "
"``'sha512'``."
msgstr ""
"Por fontarĥiva haketaĵo, estas REKOMENDATE nur uzi haketaĵojn senkondiĉe "
"disponigeblajn en la plej nova versio de la modulo :py:mod:`hashlib` en la "
"norma biblioteko. Aktuale, tiaj haketaĵoj estas ``'md5'``, ``'sha1'``, "
"``'sha224'``, ``'sha256'``, ``'sha384'`` kaj ``'sha512'``."

#: ../source/specifications/version-specifiers.rst:1128
msgid ""
"For source archive and wheel references, an expected hash value may be "
"specified by including a ``<hash-algorithm>=<expected-hash>`` entry as part "
"of the URL fragment."
msgstr ""
"Por referencoj al fonta arĥivo aŭ wheel, oni povas specifi atendatan "
"haketaĵan valoron inkluzivante eron ``<haketada-algoritmo>=<atendata-"
"haketaĵo>`` kiel parton de la URL-fragmento."

#: ../source/specifications/version-specifiers.rst:1132
msgid ""
"For version control references, the ``VCS+protocol`` scheme SHOULD be used "
"to identify both the version control system and the secure transport, and a "
"version control system with hash based commit identifiers SHOULD be used. "
"Automated tools MAY omit warnings about missing hashes for version control "
"systems that do not provide hash based commit identifiers."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1138
msgid ""
"To handle version control systems that do not support including commit or "
"tag references directly in the URL, that information may be appended to the "
"end of the URL using the ``@<commit-hash>`` or the ``@<tag>#<commit-hash>`` "
"notation."
msgstr ""
"Por versikontrola sistemo ne ebliganta inkluzivi referencon al enmeto aŭ "
"etikedo rekte en la retadreson, oni povas postmeti tiajn informojn ĉe la "
"fino de la retadreso laŭ la notacio ``@<haketaĵo-de-enmeto>`` aŭ "
"``@<tag>#<haketaĵo-de-enmeto>``."

#: ../source/specifications/version-specifiers.rst:1145
msgid ""
"This isn't *quite* the same as the existing VCS reference notation supported "
"by pip. Firstly, the distribution name is moved in front rather than "
"embedded as part of the URL. Secondly, the commit hash is included even when "
"retrieving based on a tag, in order to meet the requirement above that "
"*every* link should include a hash to make things harder to forge (creating "
"a malicious repo with a particular tag is easy, creating one with a specific "
"*hash*, less so)."
msgstr ""
"Tio ne estas *ekzakte* sama kiel la ekzistanta versikontrolsistemo-referenca "
"notacio de pip. Unue, la distribuonomo estas movita antaŭen, ne integrita "
"kiel parto de la retadreso. Due, la haketaĵo de la enmeto estas inkluzivita "
"eĉ dum prenado per etikedo, por plenumi la postulon, ke *ĉiu* hiperligo "
"inkluzivu haketaĵon por malhelpi falsadon (estas facile krei fideponejon kun "
"iu deponejo; estas malpli facile krei fideponejon kun specifa *haketaĵo*)."

#: ../source/specifications/version-specifiers.rst:1153
msgid "Remote URL examples::"
msgstr "Ekzemploj de foraj retadresoj::"

#: ../source/specifications/version-specifiers.rst:1161
msgid "File URLs"
msgstr "Dosieraj retadresoj"

#: ../source/specifications/version-specifiers.rst:1163
msgid ""
"File URLs take the form of ``file://<host>/<path>``. If the ``<host>`` is "
"omitted it is assumed to be ``localhost`` and even if the ``<host>`` is "
"omitted the third slash MUST still exist. The ``<path>`` defines what the "
"file path on the filesystem that is to be accessed."
msgstr ""
"Dosiera retadreso havas la formon ``file://<gastiganto>/<vojo>``. Se la "
"``<gastiganto>`` mankas, tio implicas ``localhost``. Eĉ se la "
"``<gastiganto>`` mankas, la tria suprenstreko DEVAS tamen ekzisti. La "
"``<vojo>`` difinas la dosierlokan vojon ĉe la dosiersistemo atingota."

#: ../source/specifications/version-specifiers.rst:1168
msgid ""
"On the various \\*nix operating systems the only allowed values for "
"``<host>`` is for it to be omitted, ``localhost``, or another FQDN that the "
"current machine believes matches its own host. In other words, on \\*nix the "
"``file://`` scheme can only be used to access paths on the local machine."
msgstr ""
"Sur la diversaj Unisekcaj mastrumaj sistemoj, la nuraj permesataj valoroj "
"por ``<gastiganto>`` estas manko, ``localhost``, aŭ alia plene kvalifikita "
"nomregno (FQDN), kiu egalas la gastiganton de la aktuala maŝino. Alivorte, "
"sur Unikso, la skemo ``file://`` nur povas atingi vojojn ĉe la loka maŝino."

#: ../source/specifications/version-specifiers.rst:1173
msgid ""
"On Windows the file format should include the drive letter if applicable as "
"part of the ``<path>`` (e.g. ``file:///c:/path/to/a/file``). Unlike \\*nix "
"on Windows the ``<host>`` parameter may be used to specify a file residing "
"on a network share. In other words, in order to translate ``\\"
"\\machine\\volume\\file`` to a ``file://`` url, it would end up as ``file://"
"machine/volume/file``. For more information on ``file://`` URLs on Windows "
"see `MSDN <https://web.archive.org/web/20130321051043/http://blogs.msdn.com/"
"b/ie/archive/2006/12/06/file-uris-in-windows.aspx>`_."
msgstr ""
"Sur Windows, la dosierformo inkluzivu la diskliteron, se tiu ekzistas, kiel "
"parton de la ``<vojo>`` (ekz. ``file:///c:/vojo/al/dosiero``). Malsimile al "
"Unikso, sur Windows la parametro ``<gastiganto>`` povas specifi foran "
"dosieron en reto. Alivorte, ``\\\\maŝino\\volumo\\dosiero`` tradukita al "
"``file://``-adreso estas ``file://maŝino/volumo/dosiero``. Por pliaj "
"informoj pri ``file://``-adresoj ĉe Windows, vidu `MSDN <https://web.archive."
"org/web/20130321051043/http://blogs.msdn.com/b/ie/archive/2006/12/06/file-"
"uris-in-windows.aspx>`_."

#: ../source/specifications/version-specifiers.rst:1184
msgid "Summary of differences from pkg_resources.parse_version"
msgstr "Resumo pri diferencoj de pkg_resources.parse_version"

#: ../source/specifications/version-specifiers.rst:1186
msgid ""
"Note: this comparison is to ``pkg_resources.parse_version`` as it existed at "
"the time :pep:`440` was written. After the PEP was accepted, setuptools 6.0 "
"and later versions adopted the behaviour described here."
msgstr ""
"Notu: tiu komparo estis al ``pkg_resources.parse_version``, kiam :pep:`440` "
"estis verkita. Post la aprobo de la PEP, setuptools 6.0 kaj postaj versioj "
"adoptis la konduton priskribitan ĉi tie."

#: ../source/specifications/version-specifiers.rst:1190
msgid ""
"Local versions sort differently, this specification requires that they sort "
"as greater than the same version without a local version, whereas "
"``pkg_resources.parse_version`` considers it a pre-release marker."
msgstr ""
"Loka versio estas ordigita alimaniere. Ĉi tiu specifo postulas, ke loka "
"versio estu pli granda ol la sama versio sen loka versio, dum "
"``pkg_resources.parse_version`` konsideras ĝin kiel markon de antaŭeldono."

#: ../source/specifications/version-specifiers.rst:1194
msgid ""
"This specification purposely restricts the syntax which constitutes a valid "
"version while ``pkg_resources.parse_version`` attempts to provide some "
"meaning from *any* arbitrary string."
msgstr ""
"Ĉiu tiu specifo intence restriktas la sintakson de valida versio, dum "
"``pkg_resources.parse_version`` provas analizi *iun ajn* signoĉenon."

#: ../source/specifications/version-specifiers.rst:1198
msgid ""
"``pkg_resources.parse_version`` allows arbitrarily deeply nested version "
"signifiers like ``1.0.dev1.post1.dev5``. This specification however allows "
"only a single use of each type and they must exist in a certain order."
msgstr ""
"``pkg_resources.parse_version`` permesas iom ajn da versio-signifiloj kiel "
"``1.0.dev1.post1.dev5``. Ĉi tiu specifo, tamen, nur permesas nur unu uzon de "
"ĉiu tipo, en difinita ordo."

#: ../source/specifications/version-specifiers.rst:1207
msgid "Appendix: Parsing version strings with regular expressions"
msgstr "Apendico: Sintaksanalizi versian tekston per regulaj esprimoj"

#: ../source/specifications/version-specifiers.rst:1209
msgid ""
"As noted earlier in the :ref:`public-version-identifiers` section, published "
"version identifiers SHOULD use the canonical format. This section provides "
"regular expressions that can be used to test whether a version is already in "
"that form, and if it's not, extract the various components for subsequent "
"normalization."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1215
msgid ""
"To test whether a version identifier is in the canonical format, you can use "
"the following function:"
msgstr ""
"Por kontroli, ĉu versia identigilo estas en la kanona formo, oni povas uzi "
"la jenan funkcion:"

#: ../source/specifications/version-specifiers.rst:1224
msgid ""
"To extract the components of a version identifier, use the following regular "
"expression (as defined by the `packaging <https://github.com/pypa/"
"packaging>`_ project):"
msgstr ""
"Por eltiri la komponantojn de versia identigilo, uzu la jenan regulan "
"esprimon (difinitan de la projekto `packaging <https://github.com/pypa/"
"packaging>`_):"

#: ../source/specifications/version-specifiers.rst:1271
msgid "August 2014: This specification was approved through :pep:`440`."
msgstr "Aŭgusto 2014: Ĉi tiu specifo estis aprobita per :pep:`440`."

#: ../source/specifications/version-specifiers.rst:1272
msgid ""
"May 2025: Clarify that development releases are a form of pre-release when "
"they are handled."
msgstr ""

#: ../source/specifications/virtual-environments.rst:6
msgid "Python Virtual Environments"
msgstr "Virtualaj Python-Medioj"

#: ../source/specifications/virtual-environments.rst:8
msgid ""
"For Python 3.3 and later versions, :pep:`405` introduced interpreter level "
"support for the concept of \"Python Virtual Environments\". Each virtual "
"environment has its own Python binary (allowing creation of environments "
"with various Python versions) and can have its own independent set of "
"installed Python packages in its site directories, but shares the standard "
"library with the base installed Python. While the concept of virtual "
"environments existed prior to this update, there was no previously "
"standardised mechanism for declaring or discovering them."
msgstr ""
"Por Python 3.3 kaj postaj versioj, :pep:`405` enkondukis interpretilo-"
"nivelan subtenon por la koncepto de «Virtuala Python-Medio». Ĉiu virtuala "
"medio havas sian propran Python-duumaĵon (ebligante kreadon de medioj kun "
"diversaj Python-versioj) kaj sian propran sendependan aron de instalitaj "
"Python-pakoj, sed komune kunhavas la norman bibliotekon kun la baza "
"instalita Python. Dum la koncepto de virtuala medio ekzistis antaŭ tiu "
"ĝisdatigo, mankis normigita meĥanismo por deklari aŭ malkovri ĝin."

#: ../source/specifications/virtual-environments.rst:18
msgid "Runtime detection of virtual environments"
msgstr "Rultempa detektado de virtualaj medioj"

#: ../source/specifications/virtual-environments.rst:20
msgid ""
"At runtime, virtual environments can be identified by virtue of :py:data:"
"`sys.prefix` (the filesystem location of the running interpreter) having a "
"different value from :py:data:`sys.base_prefix` (the default filesystem "
"location of the standard library directories)."
msgstr ""
"Rultempe oni povas detekti virtualan medion kontrolante, ĉu :py:data:`sys."
"prefix` (la dosiersistema loko de la rulata interpretilo) diferencas de :py:"
"data:`sys.base_prefix` (la apriora dosiersistema loko de la normaj "
"bibliotekoj)."

#: ../source/specifications/virtual-environments.rst:25
msgid ""
":ref:`venv-explanation` in the Python standard library documentation for "
"the :py:mod:`venv` module covers this along with the concept of "
"\"activating\" a virtual environment in an interactive operating system "
"shell (this activation step is optional and hence the changes it makes can't "
"be reliably used to detect whether a Python program is running in a virtual "
"environment or not)."
msgstr ""
":ref:`venv-explanation` en la dokumentaro de la norma biblioteko de Python "
"pri :py:mod:`venv` diskutas tion, kune kun la koncepto de «aktivigo» de "
"virtuala medio en interaga mastrusistema ŝelo (tiu paŝo ne estas deviga, kaj "
"tial oni ne povas dependi de la ŝanĝoj pri aktivigo por detekti, ĉu programo "
"ruliĝas en virtuala medio)."

#: ../source/specifications/virtual-environments.rst:33
msgid "Declaring installation environments as Python virtual environments"
msgstr "Deklari instalajn mediojn kiel virtualajn Python-mediojn"

#: ../source/specifications/virtual-environments.rst:35
msgid ""
"As described in :pep:`405`, a Python virtual environment in its simplest "
"form consists of nothing more than a copy or symlink of the Python binary "
"accompanied by a ``site-packages`` directory and a ``pyvenv.cfg`` file with "
"a ``home`` key that indicates where to find the Python standard library "
"modules."
msgstr ""
"Laŭ :pep:`405`, la plej simpla formo de virtuala Python-medio konsistas nur "
"el kopio aŭ simbola ligilo de Python-interpretilo kun dosierujo ``site-"
"packages`` kaj dosiero ``pyvenv.cfg`` kun ŝlosilo ``home`` pri la lokoj de "
"la moduloj de la norma biblioteko de Python."

#: ../source/specifications/virtual-environments.rst:40
msgid ""
"While designed to meet the needs of the standard :py:mod:`venv` module, this "
"split installation and ``pyvenv.cfg`` file approach can be used by *any* "
"Python installation provider that desires Python-specific tools to be aware "
"that they are already operating in a virtual environment and no further "
"environment nesting is required or desired."
msgstr ""

#: ../source/specifications/virtual-environments.rst:46
msgid ""
"Even in the absence of a ``pyvenv.cfg`` file, any approach (e.g. "
"``sitecustomize.py``, patching the installed Python runtime) that results "
"in :py:data:`sys.prefix` and :py:data:`sys.base_prefix` having different "
"values, while still providing a matching default package installation scheme "
"in :py:mod:`sysconfig`, will be detected and behave as a Python virtual "
"environment."
msgstr ""
"Eĉ se la dosiero ``pyvenv.cfg`` mankas, ajna maniero (ekz. ``sitecustomize."
"py``, modifi la instalitan Python-rultempon) kaŭzanta malsamajn valorojn "
"inter :py:data:`sys.prefix` kaj :py:data:`sys.base_prefix`, dum kongrua "
"apriora pak-instala skemo ekzistas en :py:mod:`sysconfig`, detektiĝos kaj "
"funkcios kiel virtuala medio de Python."

#: ../source/specifications/virtual-environments.rst:56
msgid "May 2012: This specification was approved through :pep:`405`."
msgstr "Majo 2012: Ĉi tiu specifo estis aprobita per :pep:`405`."

#: ../source/specifications/well-known-project-urls.rst:5
msgid "Well-known Project URLs in Metadata"
msgstr "Bone Konataj Projektaj Retadresoj en Metadatenoj"

#: ../source/specifications/well-known-project-urls.rst:9
msgid ""
"This document is primarily of interest to metadata *consumers*, who should "
"use the normalization rules and well-known list below to make their "
"presentation of project URLs consistent across the Python ecosystem."
msgstr ""
"Ĉi tiu dokumento estas ĉefe por *konsumanto* de metadatenoj, kiu uzu la "
"regulojn pri normigado kaj liston de bone konataj etikedoj ĉi-subajn por "
"prezenti projektajn retadresojn unuforme tra la ekosistemo de Python."

#: ../source/specifications/well-known-project-urls.rst:14
msgid ""
"Metadata *producers* (such as build tools and individual package "
"maintainers) may continue to use any labels they please, within the overall "
"``Project-URL`` length restrictions. However, when possible, users are "
"*encouraged* to pick meaningful labels that normalize to well-known labels."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:22
msgid ""
"See :ref:`Writing your pyproject.toml - urls <writing-pyproject-toml-urls>` "
"for user-oriented guidance on choosing project URL labels in your package's "
"metadata."
msgstr ""
"Vidu :ref:`Verki vian pyproject.toml – retadresoj <writing-pyproject-toml-"
"urls>` por diskuto pri elektado de projekta retadresa etikedo por la "
"metadatenoj de via pako."

#: ../source/specifications/well-known-project-urls.rst:26
msgid "This specification was originally defined in :pep:`753`."
msgstr "Ĉi tiu specifo estis originale difinita en :pep:`753`."

#: ../source/specifications/well-known-project-urls.rst:28
msgid ""
":pep:`753` deprecates the :ref:`core-metadata-home-page` and :ref:`core-"
"metadata-download-url` metadata fields in favor of :ref:`core-metadata-"
"project-url`, and defines a normalization and lookup procedure for "
"determining whether a ``Project-URL`` is \"well-known,\" i.e. has the "
"semantics assigned to ``Home-page``, ``Download-URL``, or other common "
"project URLs."
msgstr ""
":pep:`753` evitindigas la metadatenajn kampojn :ref:`core-metadata-home-"
"page` kaj :ref:`core-metadata-download-url` (kiujn :ref:`core-metadata-"
"project-url` anstataŭas), kaj difinas normigan kaj serĉan procedon por "
"kontroli, ĉu ``Project-URL`` estas «bone konata», t.e. asignita al ``Home-"
"page``, ``Download-URL``, aŭ alia ofta projekta retadreso."

#: ../source/specifications/well-known-project-urls.rst:35
msgid ""
"This allows indices (such as the Python Package Index) and other downstream "
"metadata consumers to present project URLs in a consistent manner."
msgstr ""
"Per tio, indekso (kiel la Python-Pakindekso) kaj aliaj uzantoj de "
"metadatenoj povas prezenti projektajn retadresojn kohere."

#: ../source/specifications/well-known-project-urls.rst:42
msgid "Label normalization"
msgstr "Normigo de etikedo"

#: ../source/specifications/well-known-project-urls.rst:46
msgid ""
"Label normalization is performed by metadata *consumers*, not metadata "
"producers."
msgstr ""
"Normigon de etikedoj faras la *uzantoj* de metadatenoj, ne la produktantoj "
"de metadatenoj."

#: ../source/specifications/well-known-project-urls.rst:49
msgid ""
"To determine whether a ``Project-URL`` label is \"well-known,\" metadata "
"consumers should normalize the label before comparing it to the :ref:`list "
"of well-known labels <well-known-labels>`."
msgstr ""
"Por determini ĉu etikedo ``Project-URL`` estas «bone konata», uzanto de "
"metadatenoj normigo la etikedon antaŭ ol kompari al la :ref:`listo de bone "
"konataj etikedoj <well-known-labels>`."

#: ../source/specifications/well-known-project-urls.rst:53
msgid ""
"The normalization procedure for ``Project-URL`` labels is defined by the "
"following Python function:"
msgstr ""
"La normiga proceduro por etikedoj ``Project-URL`` estas difinita per la jena "
"Python-funkcio:"

#: ../source/specifications/well-known-project-urls.rst:65
msgid ""
"In plain language: a label is *normalized* by deleting all ASCII punctuation "
"and whitespace, and then converting the result to lowercase."
msgstr ""
"En ordinara lingvo: oni *normigas* etikedon forigante ĉiujn Askiajn "
"interpunkciojn kaj minuskligante la rezulton."

#: ../source/specifications/well-known-project-urls.rst:68
msgid ""
"The following table shows examples of labels before (raw) and after "
"normalization:"
msgstr ""
"Jen tabelo da ekzemploj de etikedoj antaŭ normigo (krudaj) kaj post normigo:"

#: ../source/specifications/well-known-project-urls.rst:74
msgid "Raw"
msgstr "Kruda"

#: ../source/specifications/well-known-project-urls.rst:75
msgid "Normalized"
msgstr "Normigita"

#: ../source/specifications/well-known-project-urls.rst:76
msgid "``Homepage``"
msgstr "``Homepage``"

#: ../source/specifications/well-known-project-urls.rst:77
#: ../source/specifications/well-known-project-urls.rst:79
#: ../source/specifications/well-known-project-urls.rst:81
msgid "``homepage``"
msgstr "``homepage``"

#: ../source/specifications/well-known-project-urls.rst:78
msgid "``Home-page``"
msgstr "``Home-page``"

#: ../source/specifications/well-known-project-urls.rst:80
msgid "``Home page``"
msgstr "``Home page``"

#: ../source/specifications/well-known-project-urls.rst:82
msgid "``Change_Log``"
msgstr "``Change_Log``"

#: ../source/specifications/well-known-project-urls.rst:83
msgid "``changelog``"
msgstr "``changelog``"

#: ../source/specifications/well-known-project-urls.rst:84
msgid "``What's New?``"
msgstr "``What's New?``"

#: ../source/specifications/well-known-project-urls.rst:85
msgid "``whatsnew``"
msgstr "``whatsnew``"

#: ../source/specifications/well-known-project-urls.rst:86
#: ../source/specifications/well-known-project-urls.rst:87
msgid "``github``"
msgstr "``github``"

#: ../source/specifications/well-known-project-urls.rst:92
msgid "Well-known labels"
msgstr "Bone konataj etikedoj"

#: ../source/specifications/well-known-project-urls.rst:96
msgid ""
"The list of well-known labels is a living standard, maintained as part of "
"this document."
msgstr ""
"La listo de bone konataj etikedoj estas viva normo, mastrumata kiel parto de "
"ĉi tiu dokumento."

#: ../source/specifications/well-known-project-urls.rst:99
msgid ""
"The following table lists labels that are well-known for the purpose of "
"specializing the presentation of ``Project-URL`` metadata:"
msgstr ""
"Jen tabelo de etikedoj bone konataj por montrado de metadatenoj ``Project-"
"URL``:"

#: ../source/specifications/well-known-project-urls.rst:105
msgid "Label (Human-readable equivalent)"
msgstr "Etikedo (Home legebla ekvivalentaĵo)"

#: ../source/specifications/well-known-project-urls.rst:107
msgid "Aliases"
msgstr "Sinonimoj"

#: ../source/specifications/well-known-project-urls.rst:108
msgid "``homepage`` (Homepage)"
msgstr "``homepage`` (Homepage)"

#: ../source/specifications/well-known-project-urls.rst:109
msgid "The project's home page"
msgstr "La ĉefpaĝo de la projekto"

#: ../source/specifications/well-known-project-urls.rst:110
#: ../source/specifications/well-known-project-urls.rst:116
#: ../source/specifications/well-known-project-urls.rst:122
msgid "*(none)*"
msgstr "*(nenio)*"

#: ../source/specifications/well-known-project-urls.rst:111
msgid "``source`` (Source Code)"
msgstr "``source`` (Source Code)"

#: ../source/specifications/well-known-project-urls.rst:112
msgid "The project's hosted source code or repository"
msgstr "La gastigita fontokodo aŭ deponejo de la projekto"

#: ../source/specifications/well-known-project-urls.rst:113
msgid "``repository``, ``sourcecode``, ``github``"
msgstr "``repository``, ``sourcecode``, ``github``"

#: ../source/specifications/well-known-project-urls.rst:114
msgid "``download`` (Download)"
msgstr "``download`` (Download)"

#: ../source/specifications/well-known-project-urls.rst:115
msgid ""
"A download URL for the current distribution, equivalent to ``Download-URL``"
msgstr "Elŝuta retadreso por la distribuo, ekvivalenta al ``Download-URL``"

#: ../source/specifications/well-known-project-urls.rst:117
msgid "``changelog`` (Changelog)"
msgstr "``changelog`` (Changelog)"

#: ../source/specifications/well-known-project-urls.rst:118
msgid "The project's comprehensive changelog"
msgstr "La plena ŝanĝoprotokolo de la projekto"

#: ../source/specifications/well-known-project-urls.rst:119
msgid "``changes``, ``whatsnew``, ``history``"
msgstr "``changes``, ``whatsnew``, ``history``"

#: ../source/specifications/well-known-project-urls.rst:120
msgid "``releasenotes`` (Release Notes)"
msgstr "``releasenotes`` (Release Notes)"

#: ../source/specifications/well-known-project-urls.rst:121
msgid "The project's curated release notes"
msgstr "La eldonaj notoj de la projekto"

#: ../source/specifications/well-known-project-urls.rst:123
msgid "``documentation`` (Documentation)"
msgstr "``documentation`` (Documentation)"

#: ../source/specifications/well-known-project-urls.rst:124
msgid "The project's online documentation"
msgstr "La Interreta dokumentaro de la projekto"

#: ../source/specifications/well-known-project-urls.rst:125
msgid "``docs``"
msgstr "``docs``"

#: ../source/specifications/well-known-project-urls.rst:126
msgid "``issues`` (Issue Tracker)"
msgstr "``issues`` (Issue Tracker)"

#: ../source/specifications/well-known-project-urls.rst:127
msgid "The project's bug tracker"
msgstr "La cimdatenbanko de la projekto"

#: ../source/specifications/well-known-project-urls.rst:128
msgid "``bugs``, ``issue``, ``tracker``, ``issuetracker``, ``bugtracker``"
msgstr "``bugs``, ``issue``, ``tracker``, ``issuetracker``, ``bugtracker``"

#: ../source/specifications/well-known-project-urls.rst:129
msgid "``funding`` (Funding)"
msgstr "``funding`` (Funding)"

#: ../source/specifications/well-known-project-urls.rst:130
msgid "Funding Information"
msgstr "Informoj pri Financado"

#: ../source/specifications/well-known-project-urls.rst:131
msgid "``sponsor``, ``donate``, ``donation``"
msgstr "``sponsor``, ``donate``, ``donation``"

#: ../source/specifications/well-known-project-urls.rst:133
msgid ""
"Package metadata consumers may choose to render aliased labels the same as "
"their \"parent\" well known label, or further specialize them."
msgstr ""
"Uzanto de pakaj metadatenoj povas montri sinonimajn etikedojn same kiel la "
"«gepatran» bone konatan etikedon aŭ pli speciale."

#: ../source/specifications/well-known-project-urls.rst:137
msgid "Example behavior"
msgstr "Ekzempla konduto"

#: ../source/specifications/well-known-project-urls.rst:139
msgid ""
"The following shows the flow of project URL metadata from ``pyproject.toml`` "
"to core metadata to a potential index presentation:"
msgstr ""
"Jen la fluo de projekta retadresa metadateno el ``pyproject.toml`` al kerna "
"metadateno al ebla indeksa prezento:"

#: ../source/specifications/well-known-project-urls.rst:142
msgid "Example project URLs in standard configuration"
msgstr "Ekzemplaj projektaj retadresoj por ordinara agordado"

#: ../source/specifications/well-known-project-urls.rst:151
msgid "Core metadata representation"
msgstr "Prezento de kernaj metadatenoj"

#: ../source/specifications/well-known-project-urls.rst:159
msgid "Potential rendering"
msgstr "Ebla montrado"

#: ../source/specifications/well-known-project-urls.rst:167
msgid ""
"Observe that the core metadata appears in the form provided by the user "
"(since metadata *producers* do not perform normalization), but the metadata "
"*consumer* normalizes and identifies appropriate human-readable equivalents "
"based on the normalized form:"
msgstr ""
"Notu, ke la kernaj metadatenoj aperas en la formo provizita de la uzanto (la "
"*produktanto* de metadatenoj ne normigas), sed la *konsumanto* de "
"metadatenoj normigas kaj identigas taŭgajn home legeblajn ekvivalentaĵojn "
"laŭ la normigitaj formoj:"

#: ../source/specifications/well-known-project-urls.rst:172
msgid "``Home page`` becomes ``homepage``, which is rendered as ``Homepage``"
msgstr "``Home page`` fariĝas ``homepage``, kiu montriĝas kiel ``Homepage``"

#: ../source/specifications/well-known-project-urls.rst:173
msgid ""
"``DOCUMENTATION`` becomes ``documentation``, which is rendered as "
"``Documentation``"
msgstr ""
"``DOCUMENTATION`` fariĝas ``documentation``, kiu montriĝas kiel "
"``Documentation``"

#: ../source/specifications/well-known-project-urls.rst:174
msgid ""
"``Repository`` becomes ``repository``, which is rendered as ``Source Code``"
msgstr ""
"``Repository`` fariĝas ``repository``, kiu montriĝas kiel ``Source Code``"

#: ../source/specifications/well-known-project-urls.rst:175
msgid ""
"``GitHub`` becomes ``github``, which is rendered as ``Source Code (GitHub)`` "
"(as a specialization of ``Source Code``)"
msgstr ""
"``GitHub`` fariĝas ``github``, kiu montriĝas kiel ``Source Code (GitHub)`` "
"(specialaĵo de ``Source Code``)"

#: ../source/support.rst:3
msgid "How to Get Support"
msgstr "Kiel Esti Helpata"

#: ../source/support.rst:5
msgid ""
"For support related to a specific project, see the links on the :doc:"
"`Projects <key_projects>` page."
msgstr ""
"Por subteno pri specifa projekto, vidu la hiperligojn ĉe la paĝo :doc:"
"`Projektoj <key_projects>`."

#: ../source/support.rst:8
msgid ""
"For something more general, or when you're just not sure, please `open an "
"issue <https://github.com/pypa/packaging-problems/issues/new?"
"template=general_issue.yml>`_ on the `packaging-problems <https://github.com/"
"pypa/packaging-problems>`_ repository on GitHub."
msgstr ""
"Por io pli ĝenerala, aŭ se vi ne certas, bonvolu `raporti problemon <https://"
"github.com/pypa/packaging-problems/issues/new?template=general_issue.yml>`_ "
"pri la deponejo `packaging-problems <https://github.com/pypa/packaging-"
"problems>`_ ĉe GitHub."

#: ../source/tutorials/creating-documentation.rst:4
msgid "Creating documentation"
msgstr "Krei dokumentaron"

#: ../source/tutorials/creating-documentation.rst:6
msgid ""
"This tutorial has been removed since it is not related to packaging and was "
"unmaintained. Please see the `Sphinx tutorial <https://www.sphinx-doc.org/en/"
"master/tutorial>`_ instead."
msgstr ""
"Jen forigita lernilo, ĉar ĝi ne estas rilata al pakado kaj ne estis "
"mastrumata. Bonvolu legi `la lernilon pri Sphinx <https://www.sphinx-doc.org/"
"en/master/tutorial>`_ anstataŭe."

#: ../source/tutorials/index.rst:4
msgid ""
"**Tutorials** are opinionated step-by-step guides to help you get familiar "
"with packaging concepts. For more detailed information on specific packaging "
"topics, see :doc:`/guides/index`."
msgstr ""
"**Lernilo** estas opinihava paŝo-post-paŝa dokumento helpanta vin sci pli "
"pri konceptoj pri pakado. Por pli detalaj informoj pri specifaj temoj pri "
"pakado, vidu :doc:`/guides/index`."

#: ../source/tutorials/installing-packages.rst:5
msgid "Installing Packages"
msgstr "Instali Pakojn"

#: ../source/tutorials/installing-packages.rst:7
msgid ""
"This section covers the basics of how to install Python :term:`packages "
"<Distribution Package>`."
msgstr ""
"Jen paragrafo pri kiel instali Python-:term:`pakojn <Distribution Package>`."

#: ../source/tutorials/installing-packages.rst:10
msgid ""
"It's important to note that the term \"package\" in this context is being "
"used to describe a bundle of software to be installed (i.e. as a synonym for "
"a :term:`distribution <Distribution Package>`). It does not refer to the "
"kind of :term:`package <Import Package>` that you import in your Python "
"source code (i.e. a container of modules). It is common in the Python "
"community to refer to a :term:`distribution <Distribution Package>` using "
"the term \"package\".  Using the term \"distribution\" is often not "
"preferred, because it can easily be confused with a Linux distribution, or "
"another larger software distribution like Python itself."
msgstr ""
"Notu, ke la esprimo «pako» en tiu kunteksto estas instalebla fasko da "
"programoj (t.e. sinonimo de :term:`distribuo <Distribution Package>`). Ĝi ne "
"signifas :term:`pakon <Import Package>`, kiun vi importas en via Python-"
"fontkodo (ujon de moduloj). La Python-komunumo ofte uzas la terminon «pako» "
"por signifi :term:`distribuon <Distribution Package>`  Ofte oni evitas la "
"terminon «distribuo», pro konfuzo kun Linux-distribuo aŭ pli granda "
"programdistribuo kiel Python mem."

#: ../source/tutorials/installing-packages.rst:24
msgid "Requirements for Installing Packages"
msgstr "Postuloj por Instali Pakojn"

#: ../source/tutorials/installing-packages.rst:26
msgid ""
"This section describes the steps to follow before installing other Python "
"packages."
msgstr ""
"Jen paragrafo pri la paŝoj farendaj antaŭ ol instali aliajn Python-pakojn."

#: ../source/tutorials/installing-packages.rst:31
msgid "Ensure you can run Python from the command line"
msgstr "Certigu, ke vi povas ruli Python komandlinie"

#: ../source/tutorials/installing-packages.rst:33
msgid ""
"Before you go any further, make sure you have Python and that the expected "
"version is available from your command line. You can check this by running:"
msgstr ""
"Komence certigu, ke vi havas Python kaj ke la atendata versio disponiĝas ĉe "
"via komandlinio. Vi povas kontroli tion rulante la jenon:"

#: ../source/tutorials/installing-packages.rst:49
msgid ""
"You should get some output like ``Python 3.6.3``. If you do not have Python, "
"please install the latest 3.x version from `python.org`_ or refer to the :"
"ref:`Installing Python <python-guide:installation>` section of the "
"Hitchhiker's Guide to Python."
msgstr ""
"Vi ricevu eligaĵon kiel ``Python 3.6.3``. Se vi ne havas Python, bonvolu "
"instali la plej novan version 3.x el `python.org`_ aŭ vidu la paragrafon :"
"ref:`Instali Python <python-guide:installation>` de la dokumentaro."

#: ../source/tutorials/installing-packages.rst:53
msgid "If you're a newcomer and you get an error like this:"
msgstr "Se vi estas komencanto kaj ricevas eraron similan al la jeno:"

#: ../source/tutorials/installing-packages.rst:62
msgid ""
"It's because this command and other suggested commands in this tutorial are "
"intended to be run in a *shell* (also called a *terminal* or *console*). See "
"the Python for Beginners `getting started tutorial`_ for an introduction to "
"using your operating system's shell and interacting with Python."
msgstr ""
"Tio estas ĉar tiu komando kaj aliaj sugestataj komandoj en ĉi tiu lernilo "
"estu rulata en *ŝelo* (ankaŭ konata kiel *terminalo* aŭ *konzolo*). Vidu "
"`tiun lernilon <getting started tutorial>`_ por enkonduko pri uzado de la "
"ŝelo de via mastruma sistemo kaj interagado kun Python."

#: ../source/tutorials/installing-packages.rst:68
msgid ""
"If you're using an enhanced shell like IPython or the Jupyter notebook, you "
"can run system commands like those in this tutorial by prefacing them with a "
"``!`` character:"
msgstr ""
"Se oni uzas pliigitan ŝelon kiel IPython aŭ Jupyter-notlibron, oni povas "
"ruli sistemajn komandojn kiel tiujn en ĉi tiu lernilo per prefikso ``!``:"

#: ../source/tutorials/installing-packages.rst:78
msgid ""
"It's recommended to write ``{sys.executable}`` rather than plain ``python`` "
"in order to ensure that commands are run in the Python installation matching "
"the currently running notebook (which may not be the same Python "
"installation that the ``python`` command refers to)."
msgstr ""
"Ni rekomendas skribi ``{sys.Executable}`` prefere ol ``python`` por certigi, "
"ke komandoj ruliĝas en la Python-instalo kongrua kun la aktuale rulata "
"notlibro (kiu povas esti ne sama kiel la instalo de Python identigita de la "
"komando ``python``)."

#: ../source/tutorials/installing-packages.rst:83
msgid ""
"Due to the way most Linux distributions are handling the Python 3 migration, "
"Linux users using the system Python without creating a virtual environment "
"first should replace the ``python`` command in this tutorial with "
"``python3`` and the ``python -m pip`` command with ``python3 -m pip --"
"user``. Do *not* run any of the commands in this tutorial with ``sudo``: if "
"you get a permissions error, come back to the section on creating virtual "
"environments, set one up, and then continue with the tutorial as written."
msgstr ""
"Pro la maniero, kiel multaj Linux-distribuoj pritraktas la migradon al "
"Python 3, uzanto de Linux uzanta la sisteman Python-on sen virtuala medio "
"unue devas anstataŭigi la komandon ``python`` en ĉi tiu lernilo per "
"``python3`` kaj la komandon ``python -m pip`` per ``python3 -m pip --user``. "
"*Ne* rulu ajnan komandon en ĉi tiu lernilo kun ``sudo``: se vi ricevas "
"eraron pri permesoj, reiru al la paragrafo pri kreado de virtuala medio, "
"kreu virtualan medion, kaj daŭru sekvante la lernilon laŭvorte."

#: ../source/tutorials/installing-packages.rst:95
msgid "Ensure you can run pip from the command line"
msgstr "Certigu, ke vi povas ruli pip ĉe la komandlinio"

#: ../source/tutorials/installing-packages.rst:97
msgid ""
"Additionally, you'll need to make sure you have :ref:`pip` available. You "
"can check this by running:"
msgstr ""
"Krome, vi devas certigi, ke :ref:`pip` estas disponebla. Vi povas kontroli "
"tion rulante la jenon:"

#: ../source/tutorials/installing-packages.rst:112
msgid ""
"If you installed Python from source, with an installer from `python.org`_, "
"or via `Homebrew`_ you should already have pip. If you're on Linux and "
"installed using your OS package manager, you may have to install pip "
"separately, see :doc:`/guides/installing-using-linux-tools`."
msgstr ""
"Se vi instalis Python el fontkodo, per instalilo el `python.org`_, aŭ per "
"`Homebrew`_, vi jam havas pip. Se vi uzas Linux kaj instalis Python per via "
"mastrumasistema pakadministrilo, vi eble bezonas aparte instali pip laŭ :doc:"
"`/guides/installing-using-linux-tools`."

#: ../source/tutorials/installing-packages.rst:119
msgid ""
"If ``pip`` isn't already installed, then first try to bootstrap it from the "
"standard library:"
msgstr ""
"Se ``pip`` ankoraŭ ne estas instalita, do unue provu estigi ĝin per la norma "
"biblioteko:"

#: ../source/tutorials/installing-packages.rst:134
msgid "If that still doesn't allow you to run ``python -m pip``:"
msgstr "Se tio ankoraŭ ne ebligas ruli ``python -m pip``:"

#: ../source/tutorials/installing-packages.rst:136
msgid ""
"Securely Download `get-pip.py <https://bootstrap.pypa.io/get-pip.py>`_ [1]_"
msgstr ""
"Sekure elŝutu `get-pip.py <https://bootstrap.pypa.io/get-pip.py>`_ [1]_"

#: ../source/tutorials/installing-packages.rst:139
msgid ""
"Run ``python get-pip.py``. [2]_  This will install or upgrade pip. "
"Additionally, it will install :ref:`setuptools` and :ref:`wheel` if they're "
"not installed already."
msgstr ""
"Rulu ``python get-pip.py``. [2]_  Tio instalos aŭ ĝisdatigos pip. Krome, ĝi "
"instalos :ref:`setuptools` kaj :ref:`wheel`, se tiuj ne estas jam instalitaj."

#: ../source/tutorials/installing-packages.rst:145
msgid ""
"Be cautious if you're using a Python install that's managed by your "
"operating system or another package manager. get-pip.py does not coordinate "
"with those tools, and may leave your system in an inconsistent state. You "
"can use ``python get-pip.py --prefix=/usr/local/`` to install in ``/usr/"
"local`` which is designed for locally-installed software."
msgstr ""

#: ../source/tutorials/installing-packages.rst:154
msgid "Ensure pip, setuptools, and wheel are up to date"
msgstr "Certigu, ke pip, setuptools kaj wheel estas ĝisdataj"

#: ../source/tutorials/installing-packages.rst:156
msgid ""
"While ``pip`` alone is sufficient to install from pre-built binary archives, "
"up to date copies of the ``setuptools`` and ``wheel`` projects are useful to "
"ensure you can also install from source archives:"
msgstr ""
"Dum ``pip`` sole sufiĉas por instali el antaŭkonstruita duuma arĥivo, "
"ĝisdataj kopioj de la projektoj ``setuptools`` kaj ``wheel`` utilas por "
"instali el fonta arĥivo:"

#: ../source/tutorials/installing-packages.rst:173
msgid "Optionally, create a virtual environment"
msgstr "Nedevige, kreu virtualan medion"

#: ../source/tutorials/installing-packages.rst:175
msgid ""
"See :ref:`section below <Creating and using Virtual Environments>` for "
"details, but here's the basic :doc:`venv <python:library/venv>` [3]_ command "
"to use on a typical Linux system:"
msgstr ""
"Vidu :ref:`la ĉi-suban paragrafon <Creating and using Virtual Environments>` "
"por detaloj, sed jen la baza komando de :doc:`venv <python:library/venv>` "
"[3]_ por tipa Linux-sistemo:"

#: ../source/tutorials/installing-packages.rst:192
msgid ""
"This will create a new virtual environment in the ``tutorial_env`` "
"subdirectory, and configure the current shell to use it as the default "
"``python`` environment."
msgstr ""
"Tio kreos novan virtualan medion en la subdosierujo ``tutorial_env`` kaj "
"igas la aktualan ŝelon uzi ĝin kiel la implicitan ``python``-medion."

#: ../source/tutorials/installing-packages.rst:199
msgid "Creating Virtual Environments"
msgstr "Krei Virtualajn Mediojn"

#: ../source/tutorials/installing-packages.rst:201
msgid ""
"Python \"Virtual Environments\" allow Python :term:`packages <Distribution "
"Package>` to be installed in an isolated location for a particular "
"application, rather than being installed globally. If you are looking to "
"safely install global command line tools, see :doc:`/guides/installing-stand-"
"alone-command-line-tools`."
msgstr ""
"«Virtuala Medio» de Python permesas instaladon de :term:`Python-pako "
"<Distribution Package>` en izolita loko por iu programo, ne instalita "
"malloke. Se vi volas sekure instali komandlinian ilon, vidu :doc:`/guides/"
"installing-stand-alone-command-line-tools`."

#: ../source/tutorials/installing-packages.rst:207
msgid ""
"Imagine you have an application that needs version 1 of LibFoo, but another "
"application requires version 2. How can you use both these applications? If "
"you install everything into /usr/lib/python3.6/site-packages (or whatever "
"your platform’s standard location is), it’s easy to end up in a situation "
"where you unintentionally upgrade an application that shouldn’t be upgraded."
msgstr ""
"Supozu, ke oni havas programon bezonantan version 1 de LibFoo, sed alia "
"programo bezonas version 2. Kiel oni povas uzi ambaŭ programojn? Se oni "
"instalus ĉion en /usr/lib/python3.6/site-packages (aŭ la norma loko por onia "
"platformo), oni ofte senintence ĝisdatigus programon ne ĝisdatindan."

#: ../source/tutorials/installing-packages.rst:213
msgid ""
"Or more generally, what if you want to install an application and leave it "
"be? If an application works, any change in its libraries or the versions of "
"those libraries can break the application."
msgstr ""
"Aŭ pli ĝenerale, kio se oni volas instali programon kaj ne ŝanĝi ĝin? Se "
"programo funkcias, ajna ŝanĝo de ĝiaj bibliotekoj aŭ de la bibliotekaj "
"versioj povas misfunkciigi la programon."

#: ../source/tutorials/installing-packages.rst:217
msgid ""
"Also, what if you can’t install :term:`packages <Distribution Package>` into "
"the global site-packages directory? For instance, on a shared host."
msgstr ""
"Ankaŭ, kio okazos, se oni ne povas instali :term:`pakon <Distribution "
"Package>` en la tutsisteman dosierujon ``site-packages``? Ekzemple, je "
"komuna gastiganto."

#: ../source/tutorials/installing-packages.rst:220
msgid ""
"In all these cases, virtual environments can help you. They have their own "
"installation directories and they don’t share libraries with other virtual "
"environments."
msgstr ""
"En tiuj kazoj, virtuala medio povas helpi vin. Ĝi havas sian propran "
"instalan dosierujon kaj ne havas bibliotekon komunan kun aliaj virtualaj "
"medioj."

#: ../source/tutorials/installing-packages.rst:224
msgid ""
"Currently, there are two common tools for creating Python virtual "
"environments:"
msgstr "Aktuale ekzistas du oftaj iloj por krei virtualajn Python-mediojn:"

#: ../source/tutorials/installing-packages.rst:226
msgid ""
":doc:`venv <python:library/venv>` is available by default in Python 3.3 and "
"later, and installs :ref:`pip` into created virtual environments in Python "
"3.4 and later (Python versions prior to 3.12 also installed :ref:"
"`setuptools`)."
msgstr ""
":doc:`venv <python:library/venv>` estas apriore disponebla en Python 3.3 kaj "
"pli novaj, kaj instalas :ref:`pip` en la kreitan virtualan medion en Python "
"3.4 kaj pli novaj (versioj de Python antaŭ 3.12 ankaŭ instalis :ref:"
"`setuptools`)."

#: ../source/tutorials/installing-packages.rst:229
msgid ""
":ref:`virtualenv` needs to be installed separately, but supports Python 2.7+ "
"and Python 3.3+, and :ref:`pip`, :ref:`setuptools` and :ref:`wheel` are "
"installed into created virtual environments by default. Note that "
"``setuptools`` is no longer included by default starting with Python 3.12 "
"(and ``virtualenv`` follows this behavior)."
msgstr ""
":ref:`virtualenv` devas esti aparte instalita sed subtenas Python 2.7+ kaj "
"Python 3.3+. :ref:`pip`, :ref:`setuptools` kaj :ref:`wheel` estas instalitaj "
"en la kreitan virtualan medion apriore. Notu, ke ``setuptools`` ne plu estas "
"inkluzivita apriore ekde Python 3.12 (kaj ``virtualenv`` sekvas tion)."

#: ../source/tutorials/installing-packages.rst:234
msgid "The basic usage is like so:"
msgstr "Jen la baza uzmaniero:"

#: ../source/tutorials/installing-packages.rst:236
msgid "Using :doc:`venv <python:library/venv>`:"
msgstr "Uzi :doc:`venv <python:library/venv>`:"

#: ../source/tutorials/installing-packages.rst:252
msgid "Using :ref:`virtualenv`:"
msgstr "Uzi :ref:`virtualenv`:"

#: ../source/tutorials/installing-packages.rst:268
msgid ""
"For more information, see the :doc:`venv <python:library/venv>` docs or the :"
"doc:`virtualenv <virtualenv:index>` docs."
msgstr ""
"Plir pliaj informoj, vidu la dokumentaron pri :doc:`venv <python:library/"
"venv>` aŭ la dokumentaron pri :doc:`virtualenv <virtualenv:index>`."

#: ../source/tutorials/installing-packages.rst:271
msgid ""
"The use of :command:`source` under Unix shells ensures that the virtual "
"environment's variables are set within the current shell, and not in a "
"subprocess (which then disappears, having no useful effect)."
msgstr ""
"La uzo de :command:`source` en Unikseca ŝelo certigas, ke la variabloj de la "
"virtuala medio estas agorditaj ene de la aktuala ŝelo kaj ne en subprocezo "
"(kiu poste malaperos kaj estos efikinte neniel)."

#: ../source/tutorials/installing-packages.rst:276
msgid ""
"In both of the above cases, Windows users should *not* use the :command:"
"`source` command, but should rather run the :command:`activate` script "
"directly from the command shell like so:"
msgstr ""
"En ambaŭ ĉi-supraj kazoj, uzanto de Windows *ne* uzu la komandon :command:"
"`source`, sed preferu ruli la programeton :command:`activate` rekte en la "
"komanda ŝelo jene:"

#: ../source/tutorials/installing-packages.rst:286
msgid ""
"Managing multiple virtual environments directly can become tedious, so the :"
"ref:`dependency management tutorial <managing-dependencies>` introduces a "
"higher level tool, :ref:`Pipenv`, that automatically manages a separate "
"virtual environment for each project and application that you work on."
msgstr ""
"Rekta administrado de multaj virtualaj medioj tedas, kaj la :ref:`lernilo "
"pri administrado de dependecoj <managing-dependencies>` enkondukas "
"plialtnivelan ilon :ref:`Pipenv`, kiu aŭtomate administras po unu aparta "
"virtuala medio por ĉiu projekto aŭ programo evoluigata de vi."

#: ../source/tutorials/installing-packages.rst:293
msgid "Use pip for Installing"
msgstr "Uzu pip por instali"

#: ../source/tutorials/installing-packages.rst:295
msgid ""
":ref:`pip` is the recommended installer.  Below, we'll cover the most common "
"usage scenarios. For more detail, see the :doc:`pip docs <pip:index>`, which "
"includes a complete :doc:`Reference Guide <pip:cli/index>`."
msgstr ""
":ref:`pip` estas la rekomendata instalilo.  Ĉi-sube, ni priskribos la plej "
"oftajn uzkazojn. Por pli da detaloj, vidu :doc:`la dokumentaron de pip <pip:"
"index>`, kiu inkluzivas plenan :doc:`Referencan Gvidilon <pip:cli/index>`."

#: ../source/tutorials/installing-packages.rst:301
msgid "Installing from PyPI"
msgstr "Instali el PyPI"

#: ../source/tutorials/installing-packages.rst:303
msgid ""
"The most common usage of :ref:`pip` is to install from the :term:`Python "
"Package Index <Python Package Index (PyPI)>` using a :term:`requirement "
"specifier <Requirement Specifier>`. Generally speaking, a requirement "
"specifier is composed of a project name followed by an optional :term:"
"`version specifier <Version Specifier>`.  A full description of the "
"supported specifiers can be found in the :ref:`Version specifier "
"specification <version-specifiers>`. Below are some examples."
msgstr ""
"La plej ofta uzmaniero de :ref:`pip` estas instalado el :term:`la Python-"
"Pakindekso <Python Package Index (PyPI)>` per :term:`postulo-specifilo "
"<Requirement Specifier>`. Ĝenerale, postulo-specifilo konsistas el projekta "
"nomo sekvita de nedeviga :term:`versio-specifilo <Version Specifier>`.  "
"Plena priskribo de la permesataj specifiloj troviĝas en la :ref:`Normo pri "
"versio-specifiloj <version-specifiers>`. Jen kelkaj ekzemploj."

#: ../source/tutorials/installing-packages.rst:311
msgid "To install the latest version of \"SomeProject\":"
msgstr "Por instali la plej novan version de «SomeProject»:"

#: ../source/tutorials/installing-packages.rst:325
msgid "To install a specific version:"
msgstr "Por instali specifan version:"

#: ../source/tutorials/installing-packages.rst:339
msgid "To install greater than or equal to one version and less than another:"
msgstr ""
"Por instali version ne malpli novan ol unu version kaj malpli novan ol alian:"

#: ../source/tutorials/installing-packages.rst:354
msgid ""
"To install a version that's :ref:`compatible <version-specifiers-compatible-"
"release>` with a certain version: [4]_"
msgstr ""
"Por instali version :ref:`kongruan <version-specifiers-compatible-release>` "
"kun iu versio: [4]_"

#: ../source/tutorials/installing-packages.rst:369
msgid ""
"In this case, this means to install any version \"==1.4.*\" version that's "
"also \">=1.4.2\"."
msgstr ""
"Tiukaze, tio signifas instali ajnan version «==1.4.*» ankaŭ plenumantan "
"«>=1.4.2»."

#: ../source/tutorials/installing-packages.rst:374
msgid "Source Distributions vs Wheels"
msgstr "Fonto-Distribuoj kontraste kun Wheel-oj"

#: ../source/tutorials/installing-packages.rst:376
msgid ""
":ref:`pip` can install from either :term:`Source Distributions (sdist) "
"<Source Distribution (or \"sdist\")>` or :term:`Wheels <Wheel>`, but if both "
"are present on PyPI, pip will prefer a compatible :term:`wheel <Wheel>`. You "
"can override pip`s default behavior by e.g. using its :ref:`--no-binary <pip:"
"install_--no-binary>` option."
msgstr ""
":ref:`pip` povas instali aŭ :term:`fontan distribuon (sdist) <Source "
"Distribution (or \"sdist\")>` aŭ :term:`Wheel <Wheel>`. Se ambaŭ ekzistas ĉe "
"PyPI, pip preferas kongruan :term:`wheel <Wheel>`. Oni povas ŝanĝi la "
"aprioran konduton de pip per la flago :ref:`--no-binary <pip:install_--no-"
"binary>`."

#: ../source/tutorials/installing-packages.rst:382
msgid ""
":term:`Wheels <Wheel>` are a pre-built :term:`distribution <Distribution "
"Package>` format that provides faster installation compared to :term:`Source "
"Distributions (sdist) <Source Distribution (or \"sdist\")>`, especially when "
"a project contains compiled extensions."
msgstr ""
":term:`Wheel <Wheel>` estas antaŭkonstruita :term:`distribua <Distribution "
"Package>` formo pli rapide instalebla ol :term:`Fonta Distribuo (sdist) "
"<Source Distribution (or \"sdist\")>`, speciale por projekto enhavanta "
"tradukitan etendaĵon."

#: ../source/tutorials/installing-packages.rst:387
msgid ""
"If :ref:`pip` does not find a wheel to install, it will locally build a "
"wheel and cache it for future installs, instead of rebuilding the source "
"distribution in the future."
msgstr ""
"Se :ref:`pip` ne trovas instalotan wheel, ĝi loke konstruos wheel kaj "
"enkaŝmemorigi ĝin por estonteco anstataŭ rekonstruado de la fonta distribuo."

#: ../source/tutorials/installing-packages.rst:395
msgid "Upgrade an already installed ``SomeProject`` to the latest from PyPI."
msgstr "Ĝisdatigi jam instalitan ``SomeProject`` al la plej nova ĉe PyPI."

#: ../source/tutorials/installing-packages.rst:412
msgid "Installing to the User Site"
msgstr "Instali al la Loko de la Uzanto"

#: ../source/tutorials/installing-packages.rst:414
msgid ""
"To install :term:`packages <Distribution Package>` that are isolated to the "
"current user, use the ``--user`` flag:"
msgstr ""
"Por instali :term:`pakojn <Distribution Package>` izolitajn al la aktuala "
"uzanto, uzu la flagon ``--user``:"

#: ../source/tutorials/installing-packages.rst:429
msgid ""
"For more information see the `User Installs <https://pip.pypa.io/en/latest/"
"user_guide/#user-installs>`_ section from the pip docs."
msgstr ""
"Por pli da informoj, vidu la paragrafon `User Installs <https://pip.pypa.io/"
"en/latest/user_guide/#user-installs>`_ de la dokumentaro de pip."

#: ../source/tutorials/installing-packages.rst:433
msgid ""
"Note that the ``--user`` flag has no effect when inside a virtual "
"environment - all installation commands will affect the virtual environment."
msgstr ""
"Notu, ke la flago ``-user`` havas neniun efikon ene de virtuala medio – ĉiaj "
"instalaj komandoj ŝanĝos la virtualan medion."

#: ../source/tutorials/installing-packages.rst:436
msgid ""
"If ``SomeProject`` defines any command-line scripts or console entry points, "
"``--user`` will cause them to be installed inside the `user base`_'s binary "
"directory, which may or may not already be present in your shell's :envvar:"
"`PATH`.  (Starting in version 10, pip displays a warning when installing any "
"scripts to a directory outside :envvar:`PATH`.)  If the scripts are not "
"available in your shell after installation, you'll need to add the directory "
"to your :envvar:`PATH`:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:444
msgid ""
"On Linux and macOS you can find the user base binary directory by running "
"``python -m site --user-base`` and adding ``bin`` to the end. For example, "
"this will typically print ``~/.local`` (with ``~`` expanded to the absolute "
"path to your home directory) so you'll need to add ``~/.local/bin`` to your "
"``PATH``.  You can set your ``PATH`` permanently by `modifying ~/.profile`_."
msgstr ""
"Sur Linux kaj macOS, vi povas trovi la bazan duumaĵan dosierujon de la "
"uzanto per ``python -m site --user-base`` kaj aldonanta ``bin`` al la fino. "
"Ekzemple, tio ordinare eligas ``~/.local`` (kun ``~`` anstataŭiigta per la "
"absoluta dosierloko de via hejma dosierujo); do vi aldonos ``~/.local/bin`` "
"al via ``PATH ``.  Vi povas fiksi vian ``PATH`` `modifante ~/.profile "
"<modifying ~/.profile>`_."

#: ../source/tutorials/installing-packages.rst:450
msgid ""
"On Windows you can find the user base binary directory by running ``py -m "
"site --user-site`` and replacing ``site-packages`` with ``Scripts``. For "
"example, this could return ``C:"
"\\Users\\Username\\AppData\\Roaming\\Python36\\site-packages`` so you would "
"need to set your ``PATH`` to include ``C:"
"\\Users\\Username\\AppData\\Roaming\\Python36\\Scripts``. You can set your "
"user ``PATH`` permanently in the `Control Panel`_. You may need to log out "
"for the ``PATH`` changes to take effect."
msgstr ""
"Sur Windows, oni povas trovi la bazan duumaĵan dosierujon de uzanto rulante "
"``py -m site --user-site`` kaj anstataŭigante ``site-packages`` per "
"``Scripts``. Ekzemple, la komando povus eligi ``C:"
"\\Users\\Salutnomo\\AppData\\Roaming\\Python36\\site-packages``, kaj oni "
"agordus sian ``PATH`` inkluzivante ``C:"
"\\Users\\Salutnomo\\AppData\\Roaming\\Python36\\Scripts``. Oni povas agordi "
"sian ``PATH`` malprovizore en la `Stirpanelo <Control Panel>`_. Oni eble "
"devas adiaŭi por efektivigi la ŝanĝojn pri ``PATH``."

#: ../source/tutorials/installing-packages.rst:466
msgid ""
"Install a list of requirements specified in a :ref:`Requirements File <pip:"
"Requirements Files>`."
msgstr ""
"Instali liston de postuloj en :ref:`Postulo-Dosiero <pip:Requirements "
"Files>`."

#: ../source/tutorials/installing-packages.rst:482
msgid "Installing from VCS"
msgstr "Instali el Versikontrola Sistemo"

#: ../source/tutorials/installing-packages.rst:484
msgid ""
"Install a project from VCS in \"editable\" mode.  For a full breakdown of "
"the syntax, see pip's section on :ref:`VCS Support <pip:VCS Support>`."
msgstr ""
"Instali projekton el versikontrola sistem en «redaktebla» reĝimo.  Por "
"plenaj detaloj de la sintakso, vidu la dokumentaron de pip pri :ref:`Subteno "
"de Versikontrola Sistemo <pip:VCS Support>`."

#: ../source/tutorials/installing-packages.rst:506
msgid "Installing from other Indexes"
msgstr "Instali el aliaj Indeksoj"

#: ../source/tutorials/installing-packages.rst:508
msgid "Install from an alternate index"
msgstr "Instali el alternativa indekso"

#: ../source/tutorials/installing-packages.rst:522
msgid ""
"Search an additional index during install, in addition to :term:`PyPI "
"<Python Package Index (PyPI)>`"
msgstr ""
"Dum instalado serĉi plian indekson kune kun :term:`PyPI <Python Package "
"Index (PyPI)>`"

#: ../source/tutorials/installing-packages.rst:538
msgid "Installing from a local src tree"
msgstr "Instali el loka fonta arbo"

#: ../source/tutorials/installing-packages.rst:541
msgid ""
"Installing from local src in :doc:`Development Mode <setuptools:userguide/"
"development_mode>`, i.e. in such a way that the project appears to be "
"installed, but yet is still editable from the src tree."
msgstr ""
"Instali el loka fontarbo en :doc:`evoluada reĝimo <setuptools:userguide/"
"development_mode>`, tiel ke la projekto estas instalita sed tamen modifebla "
"ĉe la fontarbo."

#: ../source/tutorials/installing-packages.rst:558
msgid "You can also install normally from src"
msgstr "Vi ankaŭ povas instali ordinare el fonto"

#: ../source/tutorials/installing-packages.rst:573
msgid "Installing from local archives"
msgstr "Instali el loka arĥivo"

#: ../source/tutorials/installing-packages.rst:575
msgid "Install a particular source archive file."
msgstr "Instali specifan fontan arĥivan dosieron."

#: ../source/tutorials/installing-packages.rst:589
msgid ""
"Install from a local directory containing archives (and don't check :term:"
"`PyPI <Python Package Index (PyPI)>`)"
msgstr ""
"Instali el loka dosierujo enhavanta arĥivojn (kaj ne kontroli :term:`PyPI "
"<Python Package Index (PyPI)>`)"

#: ../source/tutorials/installing-packages.rst:609
msgid "Installing from other sources"
msgstr "Instali el aliaj fontoj"

#: ../source/tutorials/installing-packages.rst:611
msgid ""
"To install from other data sources (for example Amazon S3 storage) you can "
"create a helper application that presents the data in a format compliant "
"with the :ref:`simple repository API <simple-repository-api>`:, and use the "
"``--extra-index-url`` flag to direct pip to use that index."
msgstr ""
"Por instali el alia datenfonto (ekzemple el konservejo Amazon S3), oni povas "
"krei helpan programon, kiu prezentas la datenojn kongrue kun la :ref:`simpla "
"deponeja API <simple-repository-api>`:, kaj uzi la flagon ``--extra-index-"
"url`` igante pip uzi tiun indekson."

#: ../source/tutorials/installing-packages.rst:623
msgid "Installing Prereleases"
msgstr "Instali Antaŭeldonojn"

#: ../source/tutorials/installing-packages.rst:625
msgid ""
"Find pre-release and development versions, in addition to stable versions.  "
"By default, pip only finds stable versions."
msgstr ""
"Trovi antaŭeldonajn kaj evoluadajn versiojn, aldone al stabilaj versioj.  "
"Apriore, pip nur trovas stabilajn versiojn."

#: ../source/tutorials/installing-packages.rst:641
msgid "Installing \"Extras\""
msgstr "Instali «Ekstraĵojn»"

#: ../source/tutorials/installing-packages.rst:643
msgid ""
"Extras are optional \"variants\" of a package, which may include additional "
"dependencies, and thereby enable additional functionality from the package.  "
"If you wish to install an extra for a package which you know publishes one, "
"you can include it in the pip installation command:"
msgstr ""
"Ekstraĵo estas laŭvola «varianto» de pako, kiuj povas inkluzivi pliajn "
"dependecojn kaj tiel ebligi pliajn funkciojn de la pako. Se oni deziras "
"instali ekstraĵon por pako, kiu havas ekstraĵon, oni povas inkluzivi ĝin en "
"la instalokomandon de pip:"

#: ../source/tutorials/installing-packages.rst:666
msgid ""
"\"Secure\" in this context means using a modern browser or a tool like :"
"command:`curl` that verifies SSL certificates when downloading from https "
"URLs."
msgstr ""
"En ĉi tiu kunteksto, «sekura» signifas uzi modernan TTT-legilon aŭ ilon "
"kiel :command:`curl` kiu konfirmas SSL-atestilojn dum elŝutado el ``https``-"
"retadresoj."

#: ../source/tutorials/installing-packages.rst:675
msgid ""
"Beginning with Python 3.4, ``venv`` (a stdlib alternative to :ref:"
"`virtualenv`) will create virtualenv environments with ``pip`` pre-"
"installed, thereby making it an equal alternative to :ref:`virtualenv`."
msgstr ""
"Ekde Python 3.4, ``venv`` (alternativo al :ref:`virtualenv` en la norma "
"biblioteko) kreas virtualan medion kun antaŭinstalita ``pip``, simile al :"
"ref:`virtualenv`."

#: ../source/tutorials/installing-packages.rst:680
msgid ""
"The compatible release specifier was accepted in :pep:`440` and support was "
"released in :ref:`setuptools` v8.0 and :ref:`pip` v6.0"
msgstr ""
"La specifilo pri kongrua eldono estis akceptita en :pep:`440`, kaj :ref:"
"`setuptools` v8.0 kaj :ref:`pip` v6.0 eksubtenis ĝin"

#: ../source/tutorials/managing-dependencies.rst:4
msgid "Managing Application Dependencies"
msgstr "Administri Programajn Dependecojn"

#: ../source/tutorials/managing-dependencies.rst:6
msgid ""
"The :ref:`package installation tutorial <installing-packages>` covered the "
"basics of getting set up to install and update Python packages."
msgstr ""
"La :ref:`lernilo pri instalado de pako <installing-packages>` diskutis la "
"fundamentojn pri instalado kaj ĝisdatigado de Python-pakoj."

#: ../source/tutorials/managing-dependencies.rst:9
msgid ""
"However, running these commands interactively can get tedious even for your "
"own personal projects, and things get even more difficult when trying to set "
"up development environments automatically for projects with multiple "
"contributors."
msgstr ""
"Tamen, interage ruli tiajn komandojn estas tede, eĉ por onia propra "
"projekto, kaj eĉ pli malfacile estas starigi disvolvajn mediojn aŭtomate por "
"projektoj kun multaj kontribuantoj."

#: ../source/tutorials/managing-dependencies.rst:13
msgid ""
"This tutorial walks you through the use of :ref:`Pipenv` to manage "
"dependencies for an application. It will show you how to install and use the "
"necessary tools and make strong recommendations on best practices."
msgstr ""
"Ĉi tiu lernilo priskribas kiel uzi :ref:`Pipenv` por administri dependecojn "
"de programo. Ĝi klarigas kiel instali kaj uzi la necesajn ilojn, kaj "
"rekomendegas bonajn elektojn."

#: ../source/tutorials/managing-dependencies.rst:17
msgid ""
"Keep in mind that Python is used for a great many different purposes, and "
"precisely how you want to manage your dependencies may change based on how "
"you decide to publish your software. The guidance presented here is most "
"directly applicable to the development and deployment of network services "
"(including web applications), but is also very well suited to managing "
"development and testing environments for any kind of project."
msgstr ""
"Python estas uzata por multaj diversaj celoj, kaj ĝuste kiel oni administras "
"dependecojn dependas de la maniero de eldonado de la programo. La konsilo ĉi "
"tie plej taŭgas por programado kaj disponigado de retservoj (inkluzive de "
"TTT-programoj), sed ankaŭ estas bona por mastrumi programadajn kaj testajn "
"mediojn de ĉia projekto."

#: ../source/tutorials/managing-dependencies.rst:24
msgid ""
"For alternatives, see `Other Tools for Application Dependency Management`_."
msgstr ""
"Por alternativoj, vidu la paragrafon `Aliaj Iloj por Administri Programan "
"Dependecon <Other Tools for Application Dependency Management>`_."

#: ../source/tutorials/managing-dependencies.rst:27
msgid "Installing Pipenv"
msgstr "Instali Pipenv"

#: ../source/tutorials/managing-dependencies.rst:29
msgid ""
":ref:`Pipenv` is a dependency manager for Python projects. If you're "
"familiar with Node.js' `npm`_ or Ruby's `bundler`_, it is similar in spirit "
"to those tools. While :ref:`pip` alone is often sufficient for personal use, "
"Pipenv is recommended for collaborative projects as it's a higher-level tool "
"that simplifies dependency management for common use cases."
msgstr ""
":ref:`Pipenv` estas dependeco-administrilo por Python-projekto. Se vi konas "
"`npm`_ de Node.js aŭ `bundler`_ de Ruby, ĝi estas simila en spirito al tiuj "
"iloj. Dum :ref:`pip` sola ofte sufiĉas por persona uzado, Pipenv estas "
"rekomendata por kunlabora projekto, ĉar ĝi estas altnivela ilo simpliganta "
"administradon de dependecoj por oftaj uzkazoj."

#: ../source/tutorials/managing-dependencies.rst:35
msgid "Use ``pip`` to install Pipenv:"
msgstr "Uzi ``pip`` por instali Pipenv:"

#: ../source/tutorials/managing-dependencies.rst:51
msgid ""
"This does a `user installation`_ to prevent breaking any system-wide "
"packages. If ``pipenv`` isn't available in your shell after installation, "
"you'll need to add the :py:data:`user base <python:site.USER_BASE>`'s binary "
"directory to your ``PATH``. See :ref:`Installing to the User Site` for more "
"information."
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:62
msgid "Installing packages for your project"
msgstr "Instali pakojn por via projekto"

#: ../source/tutorials/managing-dependencies.rst:64
msgid ""
"Pipenv manages dependencies on a per-project basis. To install packages, "
"change into your project's directory (or just an empty directory for this "
"tutorial) and run:"
msgstr ""
"Pipenv administras dependecojn por projekto. Por instali pakon, iru al la "
"dosierujo de via projekto (aŭ malplena dosierujo por ĉi tiu lernilo), kaj "
"rulu la jenon:"

#: ../source/tutorials/managing-dependencies.rst:73
msgid ""
"Pipenv will install the `Requests`_ library and create a ``Pipfile`` for you "
"in your project's directory. The :ref:`Pipfile` is used to track which "
"dependencies your project needs in case you need to re-install them, such as "
"when you share your project with others. You should get output similar to "
"this (although the exact paths shown will vary):"
msgstr ""
"Pipenv instalos la bibliotekon `Requests`_ kaj kreos la dosieron ``Pipfile`` "
"por vi en la projekta dosierujo. :ref:`Pipfile` registras la dependecojn "
"postulatajn de via projekto, kiam oni volas reinstali ilin, ekzemple kiam vi "
"sendas vian projekton al aliuloj. Vi ricevos eligaĵon similan al la jeno "
"(kvankam la precizaj dosierlokoj diferencos):"

#: ../source/tutorials/managing-dependencies.rst:109
msgid "Using installed packages"
msgstr "Uzi instalitajn pakojn"

#: ../source/tutorials/managing-dependencies.rst:111
msgid ""
"Now that Requests is installed you can create a simple :file:`main.py` file "
"to use it:"
msgstr ""
"Post instalo de Requests, vi povas krei simplan dosieron :file:`main.py` por "
"uzi ĝin:"

#: ../source/tutorials/managing-dependencies.rst:122
msgid "Then you can run this script using ``pipenv run``:"
msgstr "Poste vi povas ruli la programon per ``pipenv run``:"

#: ../source/tutorials/managing-dependencies.rst:128
msgid "You should get output similar to this:"
msgstr "Vi ricevos eligaĵon simila al la jeno:"

#: ../source/tutorials/managing-dependencies.rst:134
msgid ""
"Using ``pipenv run`` ensures that your installed packages are available to "
"your script. It's also possible to spawn a new shell that ensures all "
"commands have access to your installed packages with ``pipenv shell``."
msgstr ""
"Uzo de ``pipenv run`` certigas, ke via programo povas atingi viajn "
"instalitajn pakojn. Ankaŭ vi povas lanĉi novan ŝelon per ``pipenv "
"shell``certigante, ke viaj komandoj povas atingi viajn instalitajn pakojn."

#: ../source/tutorials/managing-dependencies.rst:140
#: ../source/tutorials/packaging-projects.rst:484
msgid "Next steps"
msgstr "Sekvaj paŝoj"

#: ../source/tutorials/managing-dependencies.rst:142
msgid ""
"Congratulations, you now know how to effectively manage dependencies and "
"development environments on a collaborative Python project! ✨ 🍰 ✨"
msgstr ""
"Gratulon, vi nun scias kiel efektive administri dependecojn kaj evoluajn "
"mediojn en kulabora Python-projekto! ✨ 🍰 ✨"

#: ../source/tutorials/managing-dependencies.rst:145
msgid ""
"If you're interested in creating and distributing your own Python packages, "
"see the :ref:`tutorial on packaging and distributing packages <distributing-"
"packages>`."
msgstr ""
"Se vi interesiĝas krei kaj distribui vian propran Python-pakon, vidu la :ref:"
"`lernilon pri kreado kaj distribuado de pakoj <distributing-packages>`."

#: ../source/tutorials/managing-dependencies.rst:148
msgid ""
"Note that when your application includes definitions of Python source "
"packages, they (and their dependencies) can be added to your ``pipenv`` "
"environment with ``pipenv install -e <relative-path-to-source-directory>`` "
"(e.g. ``pipenv install -e .`` or ``pipenv install -e src``)."
msgstr ""
"Nodu, ke se via programo inkluzivas difinojn de Python-fontpakojn, oni povas "
"aldoni ilin (kaj iliajn dependaĵojn) al la medio ``pipenv`` per ``pipenv "
"install -e <relativa-dosierloko-de-fonta-dosierujo>`` (ekz. ``pipinstall -e ."
"`` aŭ ``pipenv install -e src``)."

#: ../source/tutorials/managing-dependencies.rst:157
msgid "Other Tools for Application Dependency Management"
msgstr "Aliaj Iloj por Administri Programan Dependecon"

#: ../source/tutorials/managing-dependencies.rst:159
msgid ""
"If you find this particular approach to managing application dependencies "
"isn't working well for you or your use case, you may want to explore these "
"other tools and techniques, listed in alphabetical order, to see if one of "
"them is a better fit:"
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:163
msgid ""
"`hatch <https://github.com/pypa/hatch>`_ for opinionated coverage of even "
"more steps in the project management workflow, such as incrementing versions "
"and creating new skeleton projects from project templates."
msgstr ""
"`hatch <https://github.com/pypa/hatch>`_ por opiniriĉa subtenado de eĉ pli "
"da paŝoj en la projekta mastruma laborluo, kiel alkrementado de versio kaj "
"kreado de nova projekto el projekto-ŝablono."

#: ../source/tutorials/managing-dependencies.rst:166
msgid ""
"`micropipenv <https://github.com/thoth-station/micropipenv>`_ for a "
"lightweight wrapper around pip that supports ``requirements.txt``, Pipenv "
"and Poetry lock files, or converting them to pip-tools compatible output. "
"Designed for containerized Python applications, but not limited to them."
msgstr ""
"`micropipenv <https://github.com/thoth-station/micropipenv>`_ por leĝera "
"volvilo ĉirkaŭ pip subtenanta ``requirements.txt``, Pipenv- kaj Poetry-"
"serurdosieroj, kaj konvertado al formo kongrua kun pip-tools. Fasonita por, "
"sed ne nur por, enujigita Python-programo."

#: ../source/tutorials/managing-dependencies.rst:170
msgid ""
"`PDM <https://github.com/pdm-project/pdm>`_ for a modern Python package "
"management relying on standards such as :pep:`517` and :pep:`621`."
msgstr ""
"`PDM <https://github.com/pdm-project/pdm>`_ por moderna Python-"
"pakadministrado per normoj kiel :pep:`517` kaj :pep:`621`."

#: ../source/tutorials/managing-dependencies.rst:172
msgid ""
"`pip-tools <https://github.com/jazzband/pip-tools>`_ for creating a lock "
"file of all dependencies from a list of packages directly used in a project, "
"and ensuring that only those dependencies are installed."
msgstr ""
"`pip-tools <https://github.com/jazzband/pip-tools>`_ por krei serurdosieron "
"de ĉiuj dependaĵoj el listo de pakoj rekte uzataj en projekto, certigante, "
"ke nur tiuj dependaĵoj estas instalitaj."

#: ../source/tutorials/managing-dependencies.rst:175
msgid ""
"`Poetry <https://github.com/python-poetry/poetry>`__ for a tool comparable "
"in scope to Pipenv that focuses more directly on use cases where the project "
"being managed is structured as a distributable Python package with a valid "
"``pyproject.toml`` file. By contrast, Pipenv explicitly avoids making the "
"assumption that the application being worked on will support distribution as "
"a ``pip``-installable Python package."
msgstr ""
"`Poetry <https://github.com/python-poetry/poetry>`__ por ilo de simila utilo "
"al Pipenv, kiu pli temas pri tiuj uzkazoj, kie la administrata projekto "
"estas strukturita kiel distribuebla Python-pako kun valida dosiero "
"``pyproject.toml``. Malkiele, Pipenv eksplicite ne supozas, ke la "
"administrata programo estas distribuebla kiel ``pip``-instalebla Python-pako."

#: ../source/tutorials/managing-dependencies.rst:180
msgid ""
"`uv <https://docs.astral.sh/uv/>`__ for a single tool that covers the entire "
"project management workflow, including dependency management, packaging, and "
"publishing."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:2
msgid "Packaging Python Projects"
msgstr "Paki projektojn de Python"

#: ../source/tutorials/packaging-projects.rst:4
msgid ""
"This tutorial walks you through how to package a simple Python project. It "
"will show you how to add the necessary files and structure to create the "
"package, how to build the package, and how to upload it to the Python "
"Package Index (PyPI)."
msgstr ""
"Jen lernilo pri kiel paki simplan Python-projekton. Ĝi klarigas kiel aldoni "
"la necesajn dosierojn kaj strukturon por krei la pakon, kiel konstrui la "
"pakon, kaj kiel alŝuti ĝin al la Python-Pakindekso ( PyPI)."

#: ../source/tutorials/packaging-projects.rst:10
msgid ""
"If you have trouble running the commands in this tutorial, please copy the "
"command and its output, then `open an issue`_ on the `packaging-problems`_ "
"repository on GitHub. We'll do our best to help you!"
msgstr ""
"Se vi spertas problemon pri la komandoj en ĉi tiu lernilo, bonvolu kopii la "
"komandon kaj ĝian eligaĵon, kaj `raportu problemon <open an issue>`_ pri la "
"deponejo `packaging-problems`_ ĉe GitHub. Ni provos helpi vin!"

#: ../source/tutorials/packaging-projects.rst:18
msgid ""
"Some of the commands require a newer version of :ref:`pip`, so start by "
"making sure you have the latest version installed:"
msgstr ""
"Kelkaj komandoj postulas novan version de :ref:`pip`. Tial, certigu, ke vi "
"havas la plej novan version:"

#: ../source/tutorials/packaging-projects.rst:35
msgid "A simple project"
msgstr "Simpla projekto"

#: ../source/tutorials/packaging-projects.rst:37
msgid ""
"This tutorial uses a simple project named "
"``example_package_YOUR_USERNAME_HERE``. If your username is ``me``, then the "
"package would be ``example_package_me``; this ensures that you have a unique "
"package name that doesn't conflict with packages uploaded by other people "
"following this tutorial. We recommend following this tutorial as-is using "
"this project, before packaging your own project."
msgstr ""
"Ĉi tiu lernilo uzas simplan projekton nomitan "
"``example_package_VIA_SALUTNOMO``. Se via salutnomo estus ``mi``, la pako "
"estus ``example_package_mi``. Tio certigas, ke oni havas unikan paknomon ne "
"konfliktantan kun pakoj alŝutitaj de aliuloj legintaj ĉi tiun lernilon. Ni "
"rekomendas, ke vi sekvu ĉi tiun lernilon laŭvorte per ĉi tiu projekto antaŭ "
"ol paki vian propran projekton."

#: ../source/tutorials/packaging-projects.rst:44
msgid "Create the following file structure locally:"
msgstr "Kreu loke la jenan dosieran strukturon:"

#: ../source/tutorials/packaging-projects.rst:54
msgid ""
"The directory containing the Python files should match the project name. "
"This simplifies the configuration and is more obvious to users who install "
"the package."
msgstr ""
"La nomo de la dosierujo enhavanta la Python-dosierojn estu la nomo de la "
"projekto. Tio simpligas la agordadon kaj estas pli klara al instalantoj de "
"la pako."

#: ../source/tutorials/packaging-projects.rst:57
msgid ""
"Creating the file :file:`__init__.py` is recommended because the existence "
"of an :file:`__init__.py` file allows users to import the directory as a "
"regular package, even if (as is the case in this tutorial) :file:`__init__."
"py` is empty. [#namespace-packages]_"
msgstr ""
"Krei la dosieron :file:`__init__.py` estas rekomendate, ĉar la ekzisto de "
"dosiero :file:`__init__.py` permesas al uzantoj importi la dosierujon kiel "
"ordinaran pakon, eĉ se (kiel estas la kazo en ĉi tiu lernilo) :file:"
"`__init__.py` estas malplena. [#namespace-packages]_"

#: ../source/tutorials/packaging-projects.rst:62
msgid ""
":file:`example.py` is an example of a module within the package that could "
"contain the logic (functions, classes, constants, etc.) of your package. "
"Open that file and enter the following content:"
msgstr ""
":file:`example.py` estas ekzemplo de modulo en la pako, kiu povas enhavi la "
"logikon (funkciojn, klasojn, konstantojn ktp.) de via pako. Malfermu tiun "
"dosieron, kaj tajpu la jenon:"

#: ../source/tutorials/packaging-projects.rst:71
msgid ""
"If you are unfamiliar with Python's :term:`modules <Module>` and :term:"
"`import packages <Import Package>`, take a few minutes to read over the "
"`Python documentation for packages and modules`_."
msgstr ""
"Se vi ne konas :term:`modulon <Module>` kaj :term:`importan pakon <Import "
"Package>` de Python, bonvolu tralegi la `dokumentaron de Python pri pakoj "
"kaj moduloj <Python documentation for packages and modules>`_."

#: ../source/tutorials/packaging-projects.rst:75
msgid ""
"Once you create this structure, you'll want to run all of the commands in "
"this tutorial within the ``packaging_tutorial`` directory."
msgstr ""
"Post kiam vi kreas tiun strukturon, vi rulu ĉiujn komandojn en ĉi tiu "
"lernilo ene de la dosierujo ``packaging_tutorial``."

#: ../source/tutorials/packaging-projects.rst:83
msgid "Creating the package files"
msgstr "Krei dosierojn de la pakaĵo"

#: ../source/tutorials/packaging-projects.rst:85
msgid ""
"You will now add files that are used to prepare the project for "
"distribution. When you're done, the project structure will look like this:"
msgstr ""
"Vi nun aldonos dosierojn por prepari la projekton por distribuado. Post tio, "
"la projekta strukturo aspektos jene:"

#: ../source/tutorials/packaging-projects.rst:103
msgid "Creating a test directory"
msgstr "Krei elprovan dosierujon"

#: ../source/tutorials/packaging-projects.rst:105
msgid ":file:`tests/` is a placeholder for test files. Leave it empty for now."
msgstr ""
":file:`tests/` estas loko por testaj dosieroj. Lasu ĝin malplena portempe."

#: ../source/tutorials/packaging-projects.rst:111
msgid "Choosing a build backend"
msgstr "Elekti konstruan malfasadon"

#: ../source/tutorials/packaging-projects.rst:113
msgid ""
"Tools like :ref:`pip` and :ref:`build` do not actually convert your sources "
"into a :term:`distribution package <Distribution Package>` (like a wheel); "
"that job is performed by a :term:`build backend <Build Backend>`. The build "
"backend determines how your project will specify its configuration, "
"including metadata (information about the project, for example, the name and "
"tags that are displayed on PyPI) and input files. Build backends have "
"different levels of functionality, such as whether they support building :"
"term:`extension modules <Extension Module>`, and you should choose one that "
"suits your needs and preferences."
msgstr ""
"Ilo kiel :ref:`pip` aŭ :ref:`build` ne fakte transformas viajn fontojn en :"
"term:`distribuan pakon <Distribution Package>` (kiel radon); tiu tasko estas "
"farita de :term:`konstrua malfasado <Build Backend>`. La konstrua malfasado "
"determinas kiel specifi la projektajn agordojn, inkluzive de la metadatenoj "
"(informoj pri la projekto, ekzemple, la nomo kaj etikedoj montrotaj ĉe PyPI) "
"kaj enigaj dosieroj. Diversaj konstruaj malfasadoj havas diversajn nivelojn "
"de funkcio, pri ĉu ili subtenas konstrui :term:`etendaĵan modulon <Extension "
"Module>`, kaj oni elektu konstruan malfasadon taŭgan por viaj bezonoj."

#: ../source/tutorials/packaging-projects.rst:122
msgid ""
"You can choose from a number of backends; this tutorial uses :ref:`Hatchling "
"<hatch>` by default, but it will work identically with :ref:`setuptools`, :"
"ref:`Flit <flit>`, :ref:`PDM <pdm>`, and others that support the "
"``[project]`` table for :ref:`metadata <configuring metadata>`."
msgstr ""
"Vi povas elekti inter multaj malfasadoj. Ĉi tiu lernilo uzas :ref:`Hatchling "
"<hatch>`, sed ĝi ankaŭ funkcios same kun :ref:`setuptools`, :ref:`Flit "
"<flit>`, :ref:`PDM <pdm>`, aŭ aliaj malfasadoj subtenantaj la tabelon "
"``[project]`` por :ref:`metadatenoj <configuring metadata>`."

#: ../source/tutorials/packaging-projects.rst:129
msgid ""
"Some build backends are part of larger tools that provide a command-line "
"interface with additional features like project initialization and version "
"management, as well as building, uploading, and installing packages. This "
"tutorial uses single-purpose tools that work independently."
msgstr ""
"Kelkaj konstruaj malfasadoj estas parto de pli grandaj iloj, kiuj disponigas "
"komandlinian interfacon kun kromaj funkcioj kiel ekstarigo de projekto kaj "
"administrado de versioj, kune kun konstruado, alŝutado kaj instalado de "
"pakoj. Ĉi tiu lernilo uzas unucelan sendependan ilon."

#: ../source/tutorials/packaging-projects.rst:134
msgid ""
"The :file:`pyproject.toml` tells :term:`build frontend <Build Frontend>` "
"tools like :ref:`pip` and :ref:`build` which backend to use for your "
"project. Below are some examples for common build backends, but check your "
"backend's own documentation for more details."
msgstr ""
"La dosiero :file:`pyproject.toml` sciigas :term:`la konstruan fasadon <Build "
"Frontend>` kiel :ref:`pip` kaj :ref:`build` pri la malfasado uzota por la "
"projekto. Jen kelkaj ekzemploj por oftaj konstruaj malfasadoj, sed legu la "
"dokumentaron de via malfasado por detaloj."

#: ../source/tutorials/packaging-projects.rst:141
msgid ""
"The ``requires`` key is a list of packages that are needed to build your "
"package. The :term:`frontend <Build Frontend>` should install them "
"automatically when building your package. Frontends usually run builds in "
"isolated environments, so omitting dependencies here may cause build-time "
"errors. This should always include your backend's package, and might have "
"other build-time dependencies. The minimum version specified in the above "
"code block is the one that introduced support for :ref:`the new license "
"metadata <license-and-license-files>`."
msgstr ""
"La ŝlosilo ``requires`` estas listo de pakoj necesaj por konstrui la pakon. "
"La :term:`malfasado <Build Frontend>` instalos ilin aŭtomate dum konstruado "
"de la pako. Malfasado ordinare konstruas en izolita medio, tiel ke forlaso "
"de dependaĵo povas kaŭzi eraron dum konstruado. Tio ĉiam inkluzivu la pakon "
"de la malfasado kaj eble aliajn konstrutempajn dependaĵojn. La minimuma "
"versio specifita en la ĉi-supra kodbloko estas tiu, kiu eksubtenis la :ref:"
"`novan licencan metadatenon <license-and-license-files>`."

#: ../source/tutorials/packaging-projects.rst:150
msgid ""
"The ``build-backend`` key is the name of the Python object that frontends "
"will use to perform the build."
msgstr ""
"La ŝlosilo ``build-backend`` estas la nomo de la Python-objekto uzota de "
"fasadoj por fari la konstruon."

#: ../source/tutorials/packaging-projects.rst:153
msgid ""
"Both of these values will be provided by the documentation for your build "
"backend, or generated by its command line interface. There should be no need "
"for you to customize these settings."
msgstr ""
"Ambaŭ valoroj estos disponigitaj de la dokumentaro de la konstrua malfasado "
"aŭ genereblaj per ĝia komandlinia fasado. Ne necesu, ke oni adaptu tiajn "
"agordojn."

#: ../source/tutorials/packaging-projects.rst:157
msgid ""
"Additional configuration of the build tool will either be in a ``tool`` "
"section of the ``pyproject.toml``, or in a special file defined by the build "
"tool. For example, when using ``setuptools`` as your build backend, "
"additional configuration may be added to a ``setup.py`` or ``setup.cfg`` "
"file, and specifying ``setuptools.build_meta`` in your build allows the "
"tools to locate and use these automatically."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:167
msgid "Configuring metadata"
msgstr "Agordi metadatenojn"

#: ../source/tutorials/packaging-projects.rst:169
msgid ""
"Open :file:`pyproject.toml` and enter the following content. Change the "
"``name`` to include your username; this ensures that you have a unique "
"package name that doesn't conflict with packages uploaded by other people "
"following this tutorial."
msgstr ""
"Malfermu :file:`pyproject.toml`, kaj tajpu la jenon. Ŝanĝu ``name`` "
"inkluzivante vian salutnomon; tio certigas, ke via paka nomo estas unika, ne "
"kolizianta kun la pakojn alŝutitajn de aliuloj sekvantaj ĉi tiun lernilon."

#: ../source/tutorials/packaging-projects.rst:196
msgid ""
"``name`` is the *distribution name* of your package. This can be any name as "
"long as it only contains letters, numbers, ``.``, ``_`` , and ``-``. It also "
"must not already be taken on PyPI. **Be sure to update this with your "
"username** for this tutorial, as this ensures you won't try to upload a "
"package with the same name as one which already exists."
msgstr ""
"``name`` estas la *distribua nomo* de via pako. Ĝi povas esti ajna nomo "
"enhavanta nur literojn, ciferojn, ``.``, ``_`` , kaj ``-``. Ĝi ankaŭ devas "
"ne esti jam uzata ĉe PyPI. **Certigu, ke vi ĝisdatigu ĝin per via "
"salutnomo** por ĉi tiu lernilo; tio certigas, ke vi ne alŝutos pakon de la "
"sama nomo kiel pako jam ekzistanta."

#: ../source/tutorials/packaging-projects.rst:201
msgid ""
"``version`` is the package version. (Some build backends allow it to be "
"specified another way, such as from a file or Git tag.)"
msgstr ""
"``version`` estas la versio de la pako. (Kelkaj konstruaj malfasadoj "
"permesas aliajn manierojn specifi ĝin, kiel per dosiero aŭ Git-etikedo.)"

#: ../source/tutorials/packaging-projects.rst:203
msgid ""
"``authors`` is used to identify the author of the package; you specify a "
"name and an email for each author. You can also list ``maintainers`` in the "
"same format."
msgstr ""
"``authors`` identigas la aŭtoron de la pakon; vi specifu nomon kaj retpoŝtan "
"adreson por ĉiu aŭtoro. La kampo ``maintainers`` por mastrumantoj sekvas la "
"saman formon."

#: ../source/tutorials/packaging-projects.rst:206
msgid "``description`` is a short, one-sentence summary of the package."
msgstr "``description`` estas mallonga, unufraza resumo de la pako."

#: ../source/tutorials/packaging-projects.rst:207
msgid ""
"``readme`` is a path to a file containing a detailed description of the "
"package. This is shown on the package detail page on PyPI. In this case, the "
"description is loaded from :file:`README.md` (which is a common pattern). "
"There also is a more advanced table form described in the :ref:`pyproject."
"toml guide <writing-pyproject-toml>`."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:212
msgid ""
"``requires-python`` gives the versions of Python supported by your project. "
"An installer like :ref:`pip` will look back through older versions of "
"packages until it finds one that has a matching Python version."
msgstr ""
"``requires-python`` listigas la versiojn de Python subtenataj de via "
"projekto. Instalilo kiel :ref:`pip` serĉas tra malnovaj versioj de pakoj ĝis "
"kiam ĝi trovas pakan version kongruan al la versio de Python."

#: ../source/tutorials/packaging-projects.rst:215
msgid ""
"``classifiers`` gives the index and :ref:`pip` some additional metadata "
"about your package. In this case, the package is only compatible with Python "
"3 and is OS-independent. You should always include at least which version(s) "
"of Python your package works on and which operating systems your package "
"will work on. For a complete list of classifiers, see https://pypi.org/"
"classifiers/."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:222
msgid ""
"``license`` is the :term:`SPDX license expression <License Expression>` of "
"your package."
msgstr ""
"``license`` estas la :term:`SPDX-esprimo <License Expression>` de via pako."

#: ../source/tutorials/packaging-projects.rst:224
msgid ""
"``license-files`` is the list of glob paths to the license files, relative "
"to the directory where :file:`pyproject.toml` is located."
msgstr ""
"``license-files`` estas la listo de dosierloko-patroneoj al la licenco-"
"dosieroj, relativa al la dosierujo en kiu ĉeestas :file:`pyproject.toml`."

#: ../source/tutorials/packaging-projects.rst:226
msgid ""
"``urls`` lets you list any number of extra links to show on PyPI. Generally "
"this could be to the source, documentation, issue trackers, etc."
msgstr ""
"``urls`` ebligas vin listigi ajnan nombron da ekstraj hiperligoj montrotaj "
"sur PyPI. Ĝenerale tiuj povas esti la fonto, dokumentaro, cimaro ktp."

#: ../source/tutorials/packaging-projects.rst:229
msgid ""
"See the :ref:`pyproject.toml guide <writing-pyproject-toml>` for details on "
"these and other fields that can be defined in the ``[project]`` table. Other "
"common fields are ``keywords`` to improve discoverability and the "
"``dependencies`` that are required to install your package."
msgstr ""
"Vidu la :ref:`gvidilon pri pyproject.toml <writing-pyproject-toml>` por "
"detaloj pri tiuj kaj aliaj kampoj difineblaj en la tabelo ``[project]``. Jen "
"aliaj oftaj kampoj: ``keywords`` por malkovrebleco, ``dependencies`` pri "
"dependecoj postulataj por instali la pakon."

#: ../source/tutorials/packaging-projects.rst:236
msgid "Creating README.md"
msgstr "Krei la dosieron README.md"

#: ../source/tutorials/packaging-projects.rst:238
msgid ""
"Open :file:`README.md` and enter the following content. You can customize "
"this if you'd like."
msgstr ""
"Malfermu :file:`README.md`, kaj tajpu la jenon. Vi povas adapti ĝin, se tio "
"plaĉas al vi."

#: ../source/tutorials/packaging-projects.rst:251
msgid "Creating a LICENSE"
msgstr "Krei la dosieron LICENSE"

#: ../source/tutorials/packaging-projects.rst:253
msgid ""
"It's important for every package uploaded to the Python Package Index to "
"include a license. This tells users who install your package the terms under "
"which they can use your package. For help picking a license, see https://"
"choosealicense.com/. Once you have chosen a license, open :file:`LICENSE` "
"and enter the license text. For example, if you had chosen the MIT license:"
msgstr ""
"Gravas, ke ĉiu pako alŝutita al la Python-Pakindekso inkluzivu licencon. Tio "
"sciigas al uzanto instalinta pakon la kondiĉojn, sub kiuj oni povas uzi la "
"pakon. Por helpo elekti licencon, vizitu https://choosealicense.com/. Post "
"elekto de licenco, malfermu :file:`LICENSE`, kaj tajpu la licencan tekston. "
"Ekzemple, se vi elektus la MIT-licencon:"

#: ../source/tutorials/packaging-projects.rst:282
msgid ""
"Most build backends automatically include license files in packages. See "
"your backend's documentation for more details. If you include the path to "
"license in the ``license-files`` key of :file:`pyproject.toml`, and your "
"build backend supports :pep:`639`, the file will be automatically included "
"in the package."
msgstr ""
"La plejmulto de konstruaj malfasadoj aŭtomate inkluzivas licencajn dosierojn "
"en pakojn. Legu la dokumentaron de via malfasado por detaloj. Se vi metas la "
"dosierlokon de la licenco en la ŝlosilon ``license-files`` de :file:"
"`pyproject.toml` kaj via konstrua malfasado subtenas :pep:`639`, la dosiero "
"aŭtomate inkluziviĝos en la pakon."

#: ../source/tutorials/packaging-projects.rst:290
msgid "Including other files"
msgstr "Inkluzivi aliajn dosierojn"

#: ../source/tutorials/packaging-projects.rst:292
msgid ""
"The files listed above will be included automatically in your :term:`source "
"distribution <Source Distribution (or \"sdist\")>`. If you want to include "
"additional files, see the documentation for your build backend."
msgstr ""
"La ĉi-supraj dosieroj inkluziviĝos aŭtomate en vian :term:`fontan distribuon "
"<Source Distribution (or \"sdist\")>`. Se vi volas inkluzivi aliajn "
"dosierojn, legu la dokumentaron por via konstruilo."

#: ../source/tutorials/packaging-projects.rst:299
msgid "Generating distribution archives"
msgstr "Generi distribuan arĥivon"

#: ../source/tutorials/packaging-projects.rst:301
msgid ""
"The next step is to generate :term:`distribution packages <Distribution "
"Package>` for the package. These are archives that are uploaded to the "
"Python Package Index and can be installed by :ref:`pip`."
msgstr ""
"La sekva paŝo estas generi :term:`distribuajn pakojn <Distribution Package>` "
"por la pakoj. Tiuj estas arĥivoj alŝutotaj al Python Package Index kaj "
"instaleblaj per :ref:`pip`."

#: ../source/tutorials/packaging-projects.rst:305
msgid "Make sure you have the latest version of PyPA's :ref:`build` installed:"
msgstr "Certigu, ke vi instalis la plej novan version de :ref:`build` de PyPA:"

#: ../source/tutorials/packaging-projects.rst:319
msgid ""
"If you have trouble installing these, see the :doc:`installing-packages` "
"tutorial."
msgstr ""
"Se malfacilas instali tiujn, vidu la lernilon :doc:`installing-packages`."

#: ../source/tutorials/packaging-projects.rst:322
msgid ""
"Now run this command from the same directory where :file:`pyproject.toml` is "
"located:"
msgstr ""
"Nun rulu la jenan komandon ĉe la sama dosierujo kie troviĝas :file:"
"`pyproject.toml`:"

#: ../source/tutorials/packaging-projects.rst:336
msgid ""
"This command should output a lot of text and once completed should generate "
"two files in the :file:`dist` directory:"
msgstr ""
"Tiu komando eligos multon da teksto, kaj post fino estos kreinta du "
"dosierojn en la dosierujo :file:`dist`:"

#: ../source/tutorials/packaging-projects.rst:346
msgid ""
"The ``tar.gz`` file is a :term:`source distribution <Source Distribution (or "
"\"sdist\")>` whereas the ``.whl`` file is a :term:`built distribution <Built "
"Distribution>`. Newer :ref:`pip` versions preferentially install built "
"distributions, but will fall back to source distributions if needed. You "
"should always upload a source distribution and provide built distributions "
"for the platforms your project is compatible with. In this case, our example "
"package is compatible with Python on any platform so only one built "
"distribution is needed."
msgstr ""
"La dosiero ``tar.gz`` estas :term:`fonta distribuo <Source Distribution (or "
"\"sdist\")>`, dum la dosiero ``.whl`` estas :term:`konstruita distribuo "
"<Built Distribution>`. Novaj versioj de :ref:`pip` preferas instali "
"konstruitan distribuon sed instalas fontan distribuon, se tio necesas. Oni "
"ĉiam alŝutu fontan distribuon kaj ankaŭ la konstruitajn distribuojn por "
"kongruaj platformoj. Niakaze, la ekzempla pako kongruas kun Python sur ajna "
"platformo; tial ni nur bezonas unu konstruitan distribuon."

#: ../source/tutorials/packaging-projects.rst:355
msgid "Uploading the distribution archives"
msgstr "Alŝuti la distribuajn arĥivojn"

#: ../source/tutorials/packaging-projects.rst:357
msgid "Finally, it's time to upload your package to the Python Package Index!"
msgstr "Finfine, vi pretas alŝuti vian pakon al Python Package Index!"

#: ../source/tutorials/packaging-projects.rst:359
msgid ""
"The first thing you'll need to do is register an account on TestPyPI, which "
"is a separate instance of the package index intended for testing and "
"experimentation. It's great for things like this tutorial where we don't "
"necessarily want to upload to the real index. To register an account, go to "
"https://test.pypi.org/account/register/ and complete the steps on that page. "
"You will also need to verify your email address before you're able to upload "
"any packages.  For more details, see :doc:`/guides/using-testpypi`."
msgstr ""
"Unue, vi registru vin ĉe Prova PyPI, kiu estas aparta servilo de la "
"pakindekso por testado kaj eksperimentado. Ĝi estas bonega por lerniloj, kie "
"oni ne volas alŝuti al la reala indekso. Por registri vin, vizitu https://"
"test.pypi.org/account/register/ kaj plenumu la paŝojn sur tiu paĝo. Vi ankaŭ "
"devas konfirmi vian retpoŝtan adreson antaŭ ol alŝutade pako.  Por pli da "
"detaloj, vidu :doc:`/guides/using-testpypi`."

#: ../source/tutorials/packaging-projects.rst:367
msgid ""
"To securely upload your project, you'll need a PyPI `API token`_. Create one "
"at https://test.pypi.org/manage/account/#api-tokens, setting the \"Scope\" "
"to \"Entire account\". **Don't close the page until you have copied and "
"saved the token — you won't see that token again.**"
msgstr ""
"Por sekure alŝuti vian projekton, vi bezonas `API-ĵetonon ĉe PyPI <API "
"token>`_. Kreu ĝin ĉe https://test.pypi.org/manage/account/#api-tokens, kun "
"la «Amplekso» estanta «Tuta konto». **Ne fermu la paĝon antaŭ ol vi kopiis "
"kaj konservis la ĵetonon — vi ne povos revidi tiun ĵetonon.**"

#: ../source/tutorials/packaging-projects.rst:374
msgid ""
"Now that you are registered, you can use :ref:`twine` to upload the "
"distribution packages. You'll need to install Twine:"
msgstr ""
"Post registrado, vi povas uzi :ref:`twine` por alŝuti la distribuajn pakojn. "
"Vi devas instali Twine:"

#: ../source/tutorials/packaging-projects.rst:389
msgid ""
"Once installed, run Twine to upload all of the archives under :file:`dist`:"
msgstr "Post instalo, rulu Twine por alŝuti ĉiujn arĥivojn en :file:`dist`:"

#: ../source/tutorials/packaging-projects.rst:403
msgid ""
"You will be prompted for an API token. Use the token value, including the "
"``pypi-`` prefix. Note that the input will be hidden, so be sure to paste "
"correctly."
msgstr ""
"Vi estos petata pri API-ĵetono. Tajpu la ĵetonan valoron inkluzive de la "
"prefikso ``pypi-``. Notu, ke la enigaĵo estos kaŝita; tial certigu, ke vi "
"algluos ĝuste."

#: ../source/tutorials/packaging-projects.rst:406
msgid "After the command completes, you should see output similar to this:"
msgstr "Post la fino de la komando, vi vidos eligaĵon similan al la jeno:"

#: ../source/tutorials/packaging-projects.rst:417
msgid ""
"Once uploaded, your package should be viewable on TestPyPI; for example: "
"``https://test.pypi.org/project/example_package_YOUR_USERNAME_HERE``."
msgstr ""
"Post alŝuto, via pako estos videbla ĉe TestPyPI; ekzemple: ``https://test."
"pypi.org/project/example_package_VIA_SALUTNOMO_ĈI_TIE``."

#: ../source/tutorials/packaging-projects.rst:422
msgid "Installing your newly uploaded package"
msgstr "Instali vian nove alŝutitan pakon"

#: ../source/tutorials/packaging-projects.rst:424
msgid ""
"You can use :ref:`pip` to install your package and verify that it works. "
"Create a :ref:`virtual environment <Creating and using Virtual "
"Environments>` and install your package from TestPyPI:"
msgstr ""
"Vi povas uzi :ref:`pip` por instali vian pakon kaj konfirmi, ĉu ĝi funkcias. "
"Kreu :ref:`virtualan medion <Creating and using Virtual Environments>`, kaj "
"instalu vian pakon el TestPyPI:"

#: ../source/tutorials/packaging-projects.rst:440
msgid "Make sure to specify your username in the package name!"
msgstr "Certigu, ke vi indikas vian salutnomon en la nomo de la pako!"

#: ../source/tutorials/packaging-projects.rst:442
msgid ""
"pip should install the package from TestPyPI and the output should look "
"something like this:"
msgstr "pip instalos la pakon el TestPyPI, kaj la eligaĵo aspektu jene:"

#: ../source/tutorials/packaging-projects.rst:452
msgid ""
"This example uses ``--index-url`` flag to specify TestPyPI instead of live "
"PyPI. Additionally, it specifies ``--no-deps``. Since TestPyPI doesn't have "
"the same packages as the live PyPI, it's possible that attempting to install "
"dependencies may fail or install something unexpected. While our example "
"package doesn't have any dependencies, it's a good practice to avoid "
"installing dependencies when using TestPyPI."
msgstr ""
"Tiu ekzemplo uzas la flagon ``--index-url`` por specifi la Provan PyPI "
"anstataŭ la vera PyPI. Krome ĝi uzas la flagon ``--no-deps``. Ĉar Prova PyPI "
"ne havas la samajn pakojn kiel PyPI, eblas, ke provado instali dependaĵojn "
"povas malsukcesi aŭ estigi ion neatenditan. Kvankam nia ekzempla pako ne "
"havas dependecon, estas bone averti instaladon de dependaĵojn por Prova PyPI."

#: ../source/tutorials/packaging-projects.rst:459
msgid ""
"You can test that it was installed correctly by importing the package. Make "
"sure you're still in your virtual environment, then run Python:"
msgstr ""
"Importante la pakon, vi povas kontroli, ĉu ĝi estis instalita ĝuste. "
"Certigu, ke vi ankoraŭ estas en via virtuala medio, kaj rulu la jenan Python-"
"kodon:"

#: ../source/tutorials/packaging-projects.rst:474
msgid "and import the package:"
msgstr "kaj importu la pakon:"

#: ../source/tutorials/packaging-projects.rst:486
msgid ""
"**Congratulations, you've packaged and distributed a Python project!** ✨ 🍰 "
"✨"
msgstr "**Gratulon, vi pakis kaj distribuis Python-projekton!** ✨ 🍰 ✨"

#: ../source/tutorials/packaging-projects.rst:489
msgid ""
"Keep in mind that this tutorial showed you how to upload your package to "
"Test PyPI, which isn't a permanent storage. The Test system occasionally "
"deletes packages and accounts. It is best to use TestPyPI for testing and "
"experiments like this tutorial."
msgstr ""
"Notu, ke ĉi tiu lernilo klarigis al vi kiel alŝuti vian pakon al Prova PyPI, "
"kiu ne estas permanenta konservejo. La Prova sistemo fojfoje forviŝas pakojn "
"kaj kontojn. Oni uzu Provan PyPI nur por testado kaj eksperimentado kiel en "
"ĉi tiu lernilo."

#: ../source/tutorials/packaging-projects.rst:494
msgid ""
"When you are ready to upload a real package to the Python Package Index you "
"can do much the same as you did in this tutorial, but with these important "
"differences:"
msgstr ""
"Kiam vi pretas alŝuti veran pakon al la Python-Pakindekso, vi povas fari pli-"
"malpli same kiel ĉi tiu lernilo, krom la jenaj gravaj diferencoj:"

#: ../source/tutorials/packaging-projects.rst:498
msgid ""
"Choose a memorable and unique name for your package. You don't have to "
"append your username as you did in the tutorial, but you can't use an "
"existing name."
msgstr ""
"Elektu memorindan kaj unikan nomon por via pako. Vi ne devas postmeti vian "
"salutnomon kiel en la lernilo, sed vi ne povas uzi ekzistantan nomon."

#: ../source/tutorials/packaging-projects.rst:500
msgid ""
"Register an account on https://pypi.org - note that these are two separate "
"servers and the login details from the test server are not shared with the "
"main server."
msgstr ""
"Registru konton ĉe https://pypi.org – notu, ke tiuj du estas apartaj "
"serviloj; la akreditiloj ne estas komunaj inter ili."

#: ../source/tutorials/packaging-projects.rst:503
msgid ""
"Use ``twine upload dist/*`` to upload your package and enter your "
"credentials for the account you registered on the real PyPI.  Now that "
"you're uploading the package in production, you don't need to specify ``--"
"repository``; the package will upload to https://pypi.org/ by default."
msgstr ""
"Uzu ``twine upload dist/*`` por alŝuti vian pakon. Tajpu la akreditilon por "
"la konto ĉe la vera PyPI.  Ĉar vi estas alŝutanta al la reala pakindekso, vi "
"ne devas uzi la flagon ``--repository``; la pako estos implicite alŝutita al "
"https://pypi.org/."

#: ../source/tutorials/packaging-projects.rst:507
msgid ""
"Install your package from the real PyPI using ``python3 -m pip install [your-"
"package]``."
msgstr ""
"Instalu vian pakon el la vera PyPI per ``python3 -m pip install [your-"
"package]``."

#: ../source/tutorials/packaging-projects.rst:509
msgid ""
"At this point if you want to read more on packaging Python libraries here "
"are some things you can do:"
msgstr ""
"Nun, se vi volas legi pli pri pakado de Python-bibliotekoj, jen kelkaj "
"legindaĵoj:"

#: ../source/tutorials/packaging-projects.rst:512
msgid ""
"Read about advanced configuration for your chosen build backend: `Hatchling "
"<hatchling-config_>`_, :doc:`setuptools <setuptools:userguide/"
"pyproject_config>`, :doc:`Flit <flit:pyproject_toml>`, `PDM <pdm-config_>`_."
msgstr ""
"Legu pri altnivela agordado de via konstrua malfasado: `Hatchling <hatchling-"
"config_>`_, :doc:`setuptools <setuptools:userguide/pyproject_config>`, :doc:"
"`Flit <flit:pyproject_toml>`, `PDM <pdm-config_>`_."

#: ../source/tutorials/packaging-projects.rst:516
msgid ""
"Look at the :doc:`guides </guides/index>` on this site for more advanced "
"practical information, or the :doc:`discussions </discussions/index>` for "
"explanations and background on specific topics."
msgstr ""
"Legu la :doc:`gvidilojn </guides/index>` ĉe ĉi tiu retejo por pli komplikaj "
"praktikaj informoj aŭ la :doc:`diskutojn </discussions/index>` por klarigoj "
"kaj fonaj informoj pri specifaj temoj."

#: ../source/tutorials/packaging-projects.rst:519
msgid ""
"Consider packaging tools that provide a single command-line interface for "
"project management and packaging, such as :ref:`hatch`, :ref:`flit`, :ref:"
"`pdm`, and :ref:`poetry`."
msgstr ""
"Konsideru pakadan ilon disponigantan unu komandlinian fasadon por "
"projektadministrado kaj pakado, kiel ekzemple :ref:`hatch`, :ref:`flit`, :"
"ref:`pdm` kaj :ref:`poetry`."

#: ../source/tutorials/packaging-projects.rst:527
msgid "Notes"
msgstr "Notoj"

#: ../source/tutorials/packaging-projects.rst:529
msgid ""
"Technically, you can also create Python packages without an ``__init__.py`` "
"file, but those are called :doc:`namespace packages </guides/packaging-"
"namespace-packages>` and considered an **advanced topic** (not covered in "
"this tutorial). If you are only getting started with Python packaging, it is "
"recommended to stick with *regular packages* and ``__init__.py`` (even if "
"the file is empty)."
msgstr ""
"Teĥnike, vi ankaŭ povas krei Python-pakon sen dosiero ``__init__.py``, sed "
"tia pako nomiĝas :doc:`nomspaca pako </guides/packaging-namespace-packages>` "
"kaj estas **altnivelaĵo** (ne pridiskutata en ĉi tiu lernilo). Se vi estas "
"komencanto pri Python-pakado, recomendate estas nur uzi *ordinarajn pakojn* "
"kaj ``__init__.py`` (eĉ se tiu dosiero estas malplena)."

#~ msgid "`not yet <poetry-pep639-issue_>`_"
#~ msgstr "`ankoraŭ ne <poetry-pep639-issue_>`_"

#~ msgid "`Vagrant <https://www.vagrantup.com/>`_"
#~ msgstr "`Vagrant <https://www.vagrantup.com/>`_"

#, fuzzy
#~| msgid ":ref:`pyproject-toml-spec`"
#~ msgid "**Inspiration**: :ref:`  pyproject-tool-table`"
#~ msgstr ":ref:`pyproject-toml-spec`"

#~ msgid ""
#~ "Below the root URL is another URL for each individual project contained "
#~ "within a repository. The format of this URL is ``/<project>/`` where the "
#~ "``<project>`` is replaced by the normalized name for that project, so a "
#~ "project named \"HolyGrail\" would have a URL like ``/holygrail/``. This "
#~ "URL must respond with a valid HTML5 page with a single anchor element per "
#~ "file for the project. The href attribute **MUST** be a URL that links to "
#~ "the location of the file for download, and the text of the anchor tag "
#~ "**MUST** match the final path component (the filename) of the URL. The "
#~ "URL **SHOULD** include a hash in the form of a URL fragment with the "
#~ "following syntax: ``#<hashname>=<hashvalue>``, where ``<hashname>`` is "
#~ "the lowercase name of the hash function (such as ``sha256``) and "
#~ "``<hashvalue>`` is the hex encoded digest."
#~ msgstr ""
#~ "Sub la radika URL estas alia URL por ĉiu individua projekto en deponejo. "
#~ "La formo de ĉi tiu URL estas ``/<projekto>/``, en kiu la ``<projekto>`` "
#~ "estas anstataŭigita de la normigita nomo de la projekto; ekzemple la URL "
#~ "de projekto nomita «SanktaGralo» estus ``/sanktagralo/``. Ĉi tiu URL "
#~ "devas respondi per valida HTML5-paĝo kun po unu ankra elemento por ĉiu "
#~ "dosiero en la projekto. La href-atributo **DEVAS** esti URL, kiu ligas al "
#~ "la loko de la dosiero por elŝuto, kaj la teksto de la ankra etikedo "
#~ "**DEVAS** esti la sama kiel la fina komponanto (la dosiernomo) de la URL. "
#~ "La URL **INKLUZIVU** haketaĵon en la formo de URL-fragmento de la jena "
#~ "sintakso: ``#<haketfunkcio>=<haketaĵo>``, en kiu ``<haketfunkcio>`` estas "
#~ "la minuskla nomo de la haketfunkcio (kiel ``sha256``) kaj ``<haketaĵo>`` "
#~ "estas la deksesume kodita haketaĵo."

#~ msgid "Adding \"Yank\" Support to the Simple API"
#~ msgstr "Aldoni Subtenon «Fortiri» al la Simpla API"

#~ msgid "Signing the distribution packages"
#~ msgstr "Subskribi la distribuajn pakojn"

#~ msgid ""
#~ "The following job signs the distribution packages with `Sigstore`_, the "
#~ "same artifact signing system `used to sign CPython <https://www.python."
#~ "org/download/sigstore/>`_."
#~ msgstr ""
#~ "La jena tasko subskribas la distribuajn pakojn per `Sigstore`_, la sama "
#~ "artefakto-subskriba sistemo `uzata por CPython <https://www.python.org/"
#~ "download/sigstore/>`_."

#~ msgid ""
#~ "Firstly, it uses the `sigstore/gh-action-sigstore-python GitHub Action`_ "
#~ "to sign the distribution packages. In the next step, an empty GitHub "
#~ "Release from the current tag is created using the ``gh`` CLI. Note this "
#~ "step can be further customised. See the `gh release documentation "
#~ "<https://cli.github.com/manual/gh_release>`_ as a reference."
#~ msgstr ""
#~ "Unue, ĝi uzas la `GitHub-ago sigstore/gh-action-sigstore-python <sigstore/"
#~ "gh-action-sigstore-python GitHub Action>`_ por subskribi la distribuajn "
#~ "pakojn. Sekve, ĝi kreas malplenan eldonon ĉe GitHub el la aktuala etikedo "
#~ "per la komandlinia ilo ``gh``. Notu, ke tiu paŝo estas modifebla; vidu la "
#~ "`dokumentaron pri gh release <https://cli.github.com/manual/gh_release>`_."

#~ msgid ""
#~ "You may need to manage your ``GITHUB_TOKEN`` permissions to enable "
#~ "creating the GitHub Release. See the `GitHub documentation <https://docs."
#~ "github.com/repositories/managing-your-repositorys-settings-and-features/"
#~ "enabling-features-for-your-repository/managing-github-actions-settings-"
#~ "for-a-repository#configuring-the-default-github_token-permissions>`_ for "
#~ "instructions. Specifically, the token needs the ``contents: write`` "
#~ "permission."
#~ msgstr ""
#~ "Vi eble devas administri la permesojn de ``GITHUB_TOKEN`` por ŝalti krei "
#~ "la GitHub-eldonon. Vidu `la dokumentaron de GitHub <https://docs.github."
#~ "com/repositories/managing-your-repositorys-settings-and-features/enabling-"
#~ "features-for-your-repository/managing-github-actions-settings-for-a-"
#~ "repository#configuring-the-default-github_token-permissions>`_ por "
#~ "instrukcioj. Specife, la ĵetono bezonas la permeson ``contents: write``."

#~ msgid ""
#~ "Finally, the signed distributions are uploaded to the GitHub Release."
#~ msgstr "Fine, la subskribitaj distribuoj alŝutiĝas al GitHub Release."

#~ msgid ""
#~ "This is a replacement for GPG signatures, for which support has been "
#~ "`removed from PyPI <https://blog.pypi.org/posts/2023-05-23-removing-pgp/"
#~ ">`_. However, this job is not mandatory for uploading to PyPI and can be "
#~ "omitted."
#~ msgstr ""
#~ "Tio anstataŭigas GPG-subskribon, kiun `PyPI ne plu subtenas <https://blog."
#~ "pypi.org/posts/2023-05-23-removing-pgp/>`_. Tamen, tiu tasko ne estas "
#~ "deviga kaj estas ellasebla por alŝutado al PyPI."

#~ msgid ""
#~ ":download:`https://packaging.python.org/en/latest/specifications/schemas/"
#~ "build-details-v1.0.schema.json <../schemas/build-details-v1.0.schema."
#~ "json>`"
#~ msgstr ""
#~ ":download:`https://packaging.python.org/en/latest/specifications/schemas/"
#~ "build-details-v1.0.schema.json <../schemas/build-details-v1.0.schema."
#~ "json>`"

#~ msgid ""
#~ ":pep:`639` (accepted in August 2024) has changed the way the ``license`` "
#~ "field is declared. Make sure your preferred build backend supports :pep:"
#~ "`639` before trying to apply the newer guidelines. As of February 2025, :"
#~ "doc:`setuptools <setuptools:userguide/pyproject_config>` and :ref:`flit "
#~ "<flit:pyproject_toml_project>` don't support :pep:`639` yet."
#~ msgstr ""
#~ ":pep:`639` (akceptita en la Aŭgusto de 2024) ŝanĝis la manieron deklari "
#~ "la kampon ``license``. Certigu, ke via preferata konstrua malfasado "
#~ "komprenas :pep:`639` antaŭ ol provi uzi la novajn gvidliniojn. Je la "
#~ "Februaro de 2025, ankoraŭ nek :doc:`setuptools <setuptools:userguide/"
#~ "pyproject_config>` nek :ref:`flit <flit:pyproject_toml_project>` "
#~ "subtenas :pep:`639`."

#~ msgid ":pep:`639` license declaration"
#~ msgstr "Licenco-deklaro laŭ :pep:`639`"

#~ msgid "Legacy license declaration"
#~ msgstr "Malnovstila licenco-deklaro"

#~ msgid ""
#~ "This can take two forms. You can put your license in a file, typically :"
#~ "file:`LICENSE` or :file:`LICENSE.txt`, and link that file here:"
#~ msgstr ""
#~ "Vi povas esti unu el du formoj. Vi povas meti vian licencon en dosieron, "
#~ "ofte :file:`LICENSE` aŭ :file:`LICENSE.txt`, kaj ligi la dosieron al ĉi "
#~ "tie:"

#~ msgid "or you can write the name of the license:"
#~ msgstr "aŭ vi povas skribi la nomon de la licenco:"

#~ msgid ""
#~ "If you are using a standard, well-known license, it is not necessary to "
#~ "use this field. Instead, you should use one of the :ref:`classifiers` "
#~ "starting with ``License ::``. (As a general rule, it is a good idea to "
#~ "use a standard, well-known license, both to avoid confusion and because "
#~ "some organizations avoid software whose license is unapproved.)"
#~ msgstr ""
#~ "Se oni uzas norman, vaste konatan licencon, oni ne devas uzi ĉi tiun "
#~ "kampon; anstataŭe, oni uzu unu el la :ref:`klasigiloj <classifiers>` "
#~ "komenciĝantaj per ``License::``. (Ĝenerale, estas bone uzi norman, bone "
#~ "konatan licencon, kaj por eviti konfuziĝon, kaj ĉar kelkaj organizaĵoj "
#~ "evitas programon sen aprobita licenco.)"

#~ msgid ""
#~ ":pep:`639` (accepted in August 2024) has introduced the ``license-files`` "
#~ "field. Make sure your preferred build backend supports :pep:`639` before "
#~ "declaring the field. As of February 2025, :doc:`setuptools <setuptools:"
#~ "userguide/pyproject_config>` and :ref:`flit <flit:"
#~ "pyproject_toml_project>` don't support :pep:`639` yet."
#~ msgstr ""
#~ ":pep:`639` (akceptita je la Aŭgusto de 2024) enkondukis la kampon "
#~ "``license-files``. Certigu, ke via preferata konstrua malfasado subtenas :"
#~ "pep:`639` antaŭ ol deklari la kampon. Je la Februaro de 2025, :doc:"
#~ "`setuptools <setuptools:userguide/pyproject_config>` kaj :ref:`flit <flit:"
#~ "pyproject_toml_project>` ankoraŭ ne subtenas :pep:`639`."

#~ msgid ""
#~ "Text string that is a valid SPDX `license expression <https://peps.python."
#~ "org/pep-0639/#term-license-expression>`__ as `defined in PEP 639 <https://"
#~ "peps.python.org/pep-0639/#spdx>`__."
#~ msgstr ""
#~ "Signoĉeno, kiu estas valida SPDX-`licenco-esprimo <https://peps.python."
#~ "org/pep-0639/#term-license-expression>`__ laŭ `PEP 639 <https://peps."
#~ "python.org/pep-0639/#spdx>`__."

#~ msgid "The table subkeys of the ``license`` key are deprecated."
#~ msgstr "La tabelaj subŝlosiloj de la ŝlosilo ``license`` estas evitindaj."

#~ msgid "Rename dist-info-metadata in the Simple API"
#~ msgstr "Ŝanĝi la nomon dist-info-metadata en la Simpla API"

#~ msgid "Servers"
#~ msgstr "Serviloj"

#~ msgid ""
#~ "The :ref:`the API metadata file specification <simple-repository-api-"
#~ "metadata-file>` metadata, when used in the HTML representation of the "
#~ "Simple API, **MUST** be emitted using the attribute name ``data-core-"
#~ "metadata``, with the supported values remaining the same."
#~ msgstr ""
#~ "La metadatenoj de :ref:`la API-medateno-dosiera specifo <simple-"
#~ "repository-api-metadata-file>`, se uzata en la HTML-prezento de la Simpla "
#~ "API, **DEVAS** enhavi la atributan nomon ``data-core-metadata``, kun la "
#~ "subtenataj valoroj restantaj same."

#~ msgid ""
#~ "To support clients that used the previous key names, the HTML "
#~ "representation **MAY** also be emitted using the ``data-dist-info-"
#~ "metadata``, and if it does so it **MUST** match the value of ``data-core-"
#~ "metadata``."
#~ msgstr ""
#~ "Por subteni klientojn uzantajn la antaŭajn ŝlosilajn nomojn, la HTML-"
#~ "prezento **POVAS** ankaŭ enhavi ``data-dist-info-metadata``. Se ĝi ja "
#~ "enhavas tion, ĝi **DEVAS** kongrui kun la valoro de ``data-core-"
#~ "metadata``."

#~ msgid ""
#~ "This spec sets the current API version to \"1.0\", and expects that "
#~ "future specs that further evolve the simple API will increment the minor "
#~ "version number."
#~ msgstr ""
#~ "Ĉi tiu specifo difinas la aktualan API-version kiel «1.0», kaj supozas, "
#~ "ke estontaj specifoj plu evoluigantaj la simplan API alkrementos la "
#~ "minoran versian numeron."

#~ msgid "Additional Fields for the Simple API for Package Indexes"
#~ msgstr "Pliaj Kampoj por la Simpla API por Pakindeksoj"

#~ msgid ""
#~ "This specification defines version 1.1 of the simple repository API. For "
#~ "the HTML version of the API, there is no change from version 1.0. For the "
#~ "JSON version of the API, the following changes are made:"
#~ msgstr ""
#~ "Ĉi tiu specifo difinas version 1.1. de la simpla deponeja API. Por la "
#~ "HTML-versio de la API, ne ekzistas ŝanĝoj kompare al versio 1.0. Por la "
#~ "JSON-versio de la API, ekzistas la jenaj ŝanĝoj:"

#~ msgid "The ``api-version`` must specify version 1.1 or later."
#~ msgstr "La ``api-version`` devas specifi version 1.1 aŭ pli novan."

#~ msgid "A new ``versions`` key is added at the top level."
#~ msgstr "Nova ŝlosilo ``versions`` estis aldonita supranivele."

#~ msgid ""
#~ "Two new \"file information\" keys, ``size`` and ``upload-time``, are "
#~ "added to the ``files`` data."
#~ msgstr ""
#~ "Du novaj «dosierinformaj» ŝlosiloj ``size`` kaj ``upload-time`` estas "
#~ "aldonitaj al la datenoj ``files``."

#~ msgid ""
#~ "The ``versions`` and ``size`` keys are mandatory. The ``upload-time`` key "
#~ "is optional."
#~ msgstr ""
#~ "La ŝlosiloj ``versions`` kaj ``size`` estas devigaj. La ŝlosilo ``upload-"
#~ "time`` ne estas deviga."

#~ msgid "Additional file information"
#~ msgstr "Pliaj dosieraj informoj"

#~ msgid "Two new keys are added to the ``files`` key."
#~ msgstr "Du novaj ŝlosiloj estas aldonitaj al la ŝlosilo ``files``."

#~ msgid ""
#~ "Most build backends automatically include license files in packages. See "
#~ "your backend's documentation for more details."
#~ msgstr ""
#~ "Multaj konstruaj malfasadoj aŭtomate inkluzivas licencajn dosierojn en "
#~ "pakojn. Vidu la dokumentaron de via malfasado por pli da detaloj."

#, fuzzy
#~ msgid "Examples:"
#~ msgstr "Ekzemploj"

#~ msgid "The summary description of the project."
#~ msgstr "La resuma priskribo de la projekto."

#~ msgid "Wheel vs Egg"
#~ msgstr "Wheel kontraste kun Egg"

#, fuzzy
#~ msgid "``url``"
#~ msgstr "``urls``"

#, fuzzy
#~ msgid "``project_urls``"
#~ msgstr "``urls``"

#, fuzzy
#~ msgid "``python_requires``"
#~ msgstr "``requires-python``"

#, fuzzy
#~ msgid "``console_scripts``"
#~ msgstr "``description``"

#~ msgid "Comparison to .egg"
#~ msgstr "Komparo al .egg"

#, fuzzy
#~ msgid ":ref:`declaring-build-dependencies`"
#~ msgstr "``dependencies``/``optional-dependencies``"

#, fuzzy
#~ msgid ""
#~ "Read :pep:`517` and :pep:`518` for background and details on build tool "
#~ "configuration."
#~ msgstr "Vidu :pep:`517` kaj :pep:`518` por fonaj informoj kaj detaloj."

#~ msgid "Read about :doc:`/guides/packaging-binary-extensions`."
#~ msgstr "Legu pri :doc:`/guides/packaging-binary-extensions`."

#, fuzzy
#~ msgid "Current recommendation"
#~ msgstr "Krei la dosieron pyproject.toml"

#~ msgid "The version of the project as supported by :pep:`440`."
#~ msgstr "La versio de la projekto laŭ :pep:`440`."

#~ msgid "Learn more"
#~ msgstr "Lerni pli"

#, fuzzy
#~ msgid ""
#~ ":doc:`Docs <distlib:index>` | `Issues <https://bitbucket.org/pypa/distlib/"
#~ "issues?status=new&status=open>`__ | `Bitbucket <https://bitbucket.org/"
#~ "pypa/distlib>`__ | `PyPI <https://pypi.org/project/distlib>`__"
#~ msgstr ""
#~ "`Dokumentaro <http://pythonhosted.org/distlib/>`__ | `Cimoj <https://"
#~ "bitbucket.org/pypa/distlib/issues?status=new&status=open>`__ | `Bitbucket "
#~ "<https://bitbucket.org/pypa/distlib>`__ | `PyPI <https://pypi.org/project/"
#~ "distlib>`__"

#~ msgid "There are two types of metadata: static and dynamic."
#~ msgstr "Ekzistas du tipoj de metadatenoj: statika kaj dinamika."

#, fuzzy
#~ msgid ""
#~ "https://self-issued.info/docs/draft-ietf-jose-json-web-signature.html"
#~ msgstr ""
#~ "http://self-issued.info/docs/draft-ietf-jose-json-web-signature.html"

#, fuzzy
#~ msgid "https://self-issued.info/docs/draft-ietf-jose-json-web-key.html"
#~ msgstr "http://self-issued.info/docs/draft-ietf-jose-json-web-key.html"

#~ msgid "2014-11-11"
#~ msgstr "2014-11-11"

#~ msgid "Using `venv`_:"
#~ msgstr "Uzante `venv`_:"
